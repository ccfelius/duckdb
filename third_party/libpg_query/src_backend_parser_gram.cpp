/* A Bison parser, made by GNU Bison 2.3.  */

/* Skeleton implementation for Bison's Yacc-like parsers in C

   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
   Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street, Fifth Floor,
   Boston, MA 02110-1301, USA.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "2.3"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Using locations.  */
#define YYLSP_NEEDED 1

/* Substitute the variable and function names.  */
#define yyparse base_yyparse
#define yylex   base_yylex
#define yyerror base_yyerror
#define yylval  base_yylval
#define yychar  base_yychar
#define yydebug base_yydebug
#define yynerrs base_yynerrs
#define yylloc base_yylloc

/* Tokens.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
   /* Put the tokens into the symbol table, so that GDB and other debuggers
      know about them.  */
   enum yytokentype {
     IDENT = 258,
     FCONST = 259,
     SCONST = 260,
     BCONST = 261,
     XCONST = 262,
     Op = 263,
     ICONST = 264,
     PARAM = 265,
     TYPECAST = 266,
     DOT_DOT = 267,
     COLON_EQUALS = 268,
     EQUALS_GREATER = 269,
     LESS_EQUALS = 270,
     GREATER_EQUALS = 271,
     NOT_EQUALS = 272,
     ABORT_P = 273,
     ABSOLUTE_P = 274,
     ACCESS = 275,
     ACTION = 276,
     ADD_P = 277,
     ADMIN = 278,
     AFTER = 279,
     AGGREGATE = 280,
     ALL = 281,
     ALSO = 282,
     ALTER = 283,
     ALWAYS = 284,
     ANALYSE = 285,
     ANALYZE = 286,
     AND = 287,
     ANY = 288,
     ARRAY = 289,
     AS = 290,
     ASC_P = 291,
     ASSERTION = 292,
     ASSIGNMENT = 293,
     ASYMMETRIC = 294,
     AT = 295,
     ATTACH = 296,
     ATTRIBUTE = 297,
     AUTHORIZATION = 298,
     BACKWARD = 299,
     BEFORE = 300,
     BEGIN_P = 301,
     BETWEEN = 302,
     BIGINT = 303,
     BINARY = 304,
     BIT = 305,
     BOOLEAN_P = 306,
     BOTH = 307,
     BY = 308,
     CACHE = 309,
     CALL_P = 310,
     CALLED = 311,
     CASCADE = 312,
     CASCADED = 313,
     CASE = 314,
     CAST = 315,
     CATALOG_P = 316,
     CHAIN = 317,
     CHAR_P = 318,
     CHARACTER = 319,
     CHARACTERISTICS = 320,
     CHECK_P = 321,
     CHECKPOINT = 322,
     CLASS = 323,
     CLOSE = 324,
     CLUSTER = 325,
     COALESCE = 326,
     COLLATE = 327,
     COLLATION = 328,
     COLUMN = 329,
     COLUMNS = 330,
     COMMENT = 331,
     COMMENTS = 332,
     COMMIT = 333,
     COMMITTED = 334,
     CONCURRENTLY = 335,
     CONFIGURATION = 336,
     CONFLICT = 337,
     CONNECTION = 338,
     CONSTRAINT = 339,
     CONSTRAINTS = 340,
     CONTENT_P = 341,
     CONTINUE_P = 342,
     CONVERSION_P = 343,
     COPY = 344,
     COST = 345,
     CREATE_P = 346,
     CROSS = 347,
     CSV = 348,
     CUBE = 349,
     CURRENT_P = 350,
     CURRENT_CATALOG = 351,
     CURRENT_DATE = 352,
     CURRENT_ROLE = 353,
     CURRENT_SCHEMA = 354,
     CURRENT_TIME = 355,
     CURRENT_TIMESTAMP = 356,
     CURRENT_USER = 357,
     CURSOR = 358,
     CYCLE = 359,
     DATA_P = 360,
     DATABASE = 361,
     DAY_P = 362,
     DAYS_P = 363,
     DEALLOCATE = 364,
     DEC = 365,
     DECIMAL_P = 366,
     DECLARE = 367,
     DEFAULT = 368,
     DEFAULTS = 369,
     DEFERRABLE = 370,
     DEFERRED = 371,
     DEFINER = 372,
     DELETE_P = 373,
     DELIMITER = 374,
     DELIMITERS = 375,
     DEPENDS = 376,
     DESC_P = 377,
     DESCRIBE = 378,
     DETACH = 379,
     DICTIONARY = 380,
     DISABLE_P = 381,
     DISCARD = 382,
     DISTINCT = 383,
     DO = 384,
     DOCUMENT_P = 385,
     DOMAIN_P = 386,
     DOUBLE_P = 387,
     DROP = 388,
     EACH = 389,
     ELSE = 390,
     ENABLE_P = 391,
     ENCODING = 392,
     ENCRYPTED = 393,
     END_P = 394,
     ENUM_P = 395,
     ESCAPE = 396,
     EVENT = 397,
     EXCEPT = 398,
     EXCLUDE = 399,
     EXCLUDING = 400,
     EXCLUSIVE = 401,
     EXECUTE = 402,
     EXISTS = 403,
     EXPLAIN = 404,
     EXPORT_P = 405,
     EXTENSION = 406,
     EXTERNAL = 407,
     EXTRACT = 408,
     FALSE_P = 409,
     FAMILY = 410,
     FETCH = 411,
     FILTER = 412,
     FIRST_P = 413,
     FLOAT_P = 414,
     FOLLOWING = 415,
     FOR = 416,
     FORCE = 417,
     FOREIGN = 418,
     FORWARD = 419,
     FREEZE = 420,
     FROM = 421,
     FULL = 422,
     FUNCTION = 423,
     FUNCTIONS = 424,
     GENERATED = 425,
     GLOB = 426,
     GLOBAL = 427,
     GRANT = 428,
     GRANTED = 429,
     GROUP_P = 430,
     GROUPING = 431,
     HANDLER = 432,
     HAVING = 433,
     HEADER_P = 434,
     HOLD = 435,
     HOUR_P = 436,
     HOURS_P = 437,
     IDENTITY_P = 438,
     IF_P = 439,
     ILIKE = 440,
     IMMEDIATE = 441,
     IMMUTABLE = 442,
     IMPLICIT_P = 443,
     IMPORT_P = 444,
     IN_P = 445,
     INCLUDING = 446,
     INCREMENT = 447,
     INDEX = 448,
     INDEXES = 449,
     INHERIT = 450,
     INHERITS = 451,
     INITIALLY = 452,
     INLINE_P = 453,
     INNER_P = 454,
     INOUT = 455,
     INPUT_P = 456,
     INSENSITIVE = 457,
     INSERT = 458,
     INSTEAD = 459,
     INT_P = 460,
     INTEGER = 461,
     INTERSECT = 462,
     INTERVAL = 463,
     INTO = 464,
     INVOKER = 465,
     IS = 466,
     ISNULL = 467,
     ISOLATION = 468,
     JOIN = 469,
     KEY = 470,
     LABEL = 471,
     LANGUAGE = 472,
     LARGE_P = 473,
     LAST_P = 474,
     LATERAL_P = 475,
     LEADING = 476,
     LEAKPROOF = 477,
     LEFT = 478,
     LEVEL = 479,
     LIKE = 480,
     LIMIT = 481,
     LISTEN = 482,
     LOAD = 483,
     LOCAL = 484,
     LOCALTIME = 485,
     LOCALTIMESTAMP = 486,
     LOCATION = 487,
     LOCK_P = 488,
     LOCKED = 489,
     LOGGED = 490,
     MACRO = 491,
     MAPPING = 492,
     MATCH = 493,
     MATERIALIZED = 494,
     MAXVALUE = 495,
     METHOD = 496,
     MICROSECOND_P = 497,
     MICROSECONDS_P = 498,
     MILLISECOND_P = 499,
     MILLISECONDS_P = 500,
     MINUTE_P = 501,
     MINUTES_P = 502,
     MINVALUE = 503,
     MODE = 504,
     MONTH_P = 505,
     MONTHS_P = 506,
     MOVE = 507,
     NAME_P = 508,
     NAMES = 509,
     NATIONAL = 510,
     NATURAL = 511,
     NCHAR = 512,
     NEW = 513,
     NEXT = 514,
     NO = 515,
     NONE = 516,
     NOT = 517,
     NOTHING = 518,
     NOTIFY = 519,
     NOTNULL = 520,
     NOWAIT = 521,
     NULL_P = 522,
     NULLIF = 523,
     NULLS_P = 524,
     NUMERIC = 525,
     OBJECT_P = 526,
     OF = 527,
     OFF = 528,
     OFFSET = 529,
     OIDS = 530,
     OLD = 531,
     ON = 532,
     ONLY = 533,
     OPERATOR = 534,
     OPTION = 535,
     OPTIONS = 536,
     OR = 537,
     ORDER = 538,
     ORDINALITY = 539,
     OUT_P = 540,
     OUTER_P = 541,
     OVER = 542,
     OVERLAPS = 543,
     OVERLAY = 544,
     OVERRIDING = 545,
     OWNED = 546,
     OWNER = 547,
     PARALLEL = 548,
     PARSER = 549,
     PARTIAL = 550,
     PARTITION = 551,
     PASSING = 552,
     PASSWORD = 553,
     PERCENT = 554,
     PLACING = 555,
     PLANS = 556,
     POLICY = 557,
     POSITION = 558,
     PRAGMA_P = 559,
     PRECEDING = 560,
     PRECISION = 561,
     PREPARE = 562,
     PREPARED = 563,
     PRESERVE = 564,
     PRIMARY = 565,
     PRIOR = 566,
     PRIVILEGES = 567,
     PROCEDURAL = 568,
     PROCEDURE = 569,
     PROGRAM = 570,
     PUBLICATION = 571,
     QUOTE = 572,
     RANGE = 573,
     READ_P = 574,
     REAL = 575,
     REASSIGN = 576,
     RECHECK = 577,
     RECURSIVE = 578,
     REF = 579,
     REFERENCES = 580,
     REFERENCING = 581,
     REFRESH = 582,
     REINDEX = 583,
     RELATIVE_P = 584,
     RELEASE = 585,
     RENAME = 586,
     REPEATABLE = 587,
     REPLACE = 588,
     REPLICA = 589,
     RESET = 590,
     RESTART = 591,
     RESTRICT = 592,
     RETURNING = 593,
     RETURNS = 594,
     REVOKE = 595,
     RIGHT = 596,
     ROLE = 597,
     ROLLBACK = 598,
     ROLLUP = 599,
     ROW = 600,
     ROWS = 601,
     RULE = 602,
     SAMPLE = 603,
     SAVEPOINT = 604,
     SCHEMA = 605,
     SCHEMAS = 606,
     SCROLL = 607,
     SEARCH = 608,
     SECOND_P = 609,
     SECONDS_P = 610,
     SECURITY = 611,
     SELECT = 612,
     SEQUENCE = 613,
     SEQUENCES = 614,
     SERIALIZABLE = 615,
     SERVER = 616,
     SESSION = 617,
     SESSION_USER = 618,
     SET = 619,
     SETOF = 620,
     SETS = 621,
     SHARE = 622,
     SHOW = 623,
     SIMILAR = 624,
     SIMPLE = 625,
     SKIP = 626,
     SMALLINT = 627,
     SNAPSHOT = 628,
     SOME = 629,
     SQL_P = 630,
     STABLE = 631,
     STANDALONE_P = 632,
     START = 633,
     STATEMENT = 634,
     STATISTICS = 635,
     STDIN = 636,
     STDOUT = 637,
     STORAGE = 638,
     STRICT_P = 639,
     STRIP_P = 640,
     STRUCT = 641,
     SUBSCRIPTION = 642,
     SUBSTRING = 643,
     SYMMETRIC = 644,
     SYSID = 645,
     SYSTEM_P = 646,
     TABLE = 647,
     TABLES = 648,
     TABLESAMPLE = 649,
     TABLESPACE = 650,
     TEMP = 651,
     TEMPLATE = 652,
     TEMPORARY = 653,
     TEXT_P = 654,
     THEN = 655,
     TIME = 656,
     TIMESTAMP = 657,
     TO = 658,
     TRAILING = 659,
     TRANSACTION = 660,
     TRANSFORM = 661,
     TREAT = 662,
     TRIGGER = 663,
     TRIM = 664,
     TRUE_P = 665,
     TRUNCATE = 666,
     TRUSTED = 667,
     TYPE_P = 668,
     TYPES_P = 669,
     UNBOUNDED = 670,
     UNCOMMITTED = 671,
     UNENCRYPTED = 672,
     UNION = 673,
     UNIQUE = 674,
     UNKNOWN = 675,
     UNLISTEN = 676,
     UNLOGGED = 677,
     UNTIL = 678,
     UPDATE = 679,
     USER = 680,
     USING = 681,
     VACUUM = 682,
     VALID = 683,
     VALIDATE = 684,
     VALIDATOR = 685,
     VALUE_P = 686,
     VALUES = 687,
     VARCHAR = 688,
     VARIADIC = 689,
     VARYING = 690,
     VERBOSE = 691,
     VERSION_P = 692,
     VIEW = 693,
     VIEWS = 694,
     VOLATILE = 695,
     WHEN = 696,
     WHERE = 697,
     WHITESPACE_P = 698,
     WINDOW = 699,
     WITH = 700,
     WITHIN = 701,
     WITHOUT = 702,
     WORK = 703,
     WRAPPER = 704,
     WRITE_P = 705,
     XML_P = 706,
     XMLATTRIBUTES = 707,
     XMLCONCAT = 708,
     XMLELEMENT = 709,
     XMLEXISTS = 710,
     XMLFOREST = 711,
     XMLNAMESPACES = 712,
     XMLPARSE = 713,
     XMLPI = 714,
     XMLROOT = 715,
     XMLSERIALIZE = 716,
     XMLTABLE = 717,
     YEAR_P = 718,
     YEARS_P = 719,
     YES_P = 720,
     ZONE = 721,
     NOT_LA = 722,
     NULLS_LA = 723,
     WITH_LA = 724,
     POSTFIXOP = 725,
     UMINUS = 726
   };
#endif
/* Tokens.  */
#define IDENT 258
#define FCONST 259
#define SCONST 260
#define BCONST 261
#define XCONST 262
#define Op 263
#define ICONST 264
#define PARAM 265
#define TYPECAST 266
#define DOT_DOT 267
#define COLON_EQUALS 268
#define EQUALS_GREATER 269
#define LESS_EQUALS 270
#define GREATER_EQUALS 271
#define NOT_EQUALS 272
#define ABORT_P 273
#define ABSOLUTE_P 274
#define ACCESS 275
#define ACTION 276
#define ADD_P 277
#define ADMIN 278
#define AFTER 279
#define AGGREGATE 280
#define ALL 281
#define ALSO 282
#define ALTER 283
#define ALWAYS 284
#define ANALYSE 285
#define ANALYZE 286
#define AND 287
#define ANY 288
#define ARRAY 289
#define AS 290
#define ASC_P 291
#define ASSERTION 292
#define ASSIGNMENT 293
#define ASYMMETRIC 294
#define AT 295
#define ATTACH 296
#define ATTRIBUTE 297
#define AUTHORIZATION 298
#define BACKWARD 299
#define BEFORE 300
#define BEGIN_P 301
#define BETWEEN 302
#define BIGINT 303
#define BINARY 304
#define BIT 305
#define BOOLEAN_P 306
#define BOTH 307
#define BY 308
#define CACHE 309
#define CALL_P 310
#define CALLED 311
#define CASCADE 312
#define CASCADED 313
#define CASE 314
#define CAST 315
#define CATALOG_P 316
#define CHAIN 317
#define CHAR_P 318
#define CHARACTER 319
#define CHARACTERISTICS 320
#define CHECK_P 321
#define CHECKPOINT 322
#define CLASS 323
#define CLOSE 324
#define CLUSTER 325
#define COALESCE 326
#define COLLATE 327
#define COLLATION 328
#define COLUMN 329
#define COLUMNS 330
#define COMMENT 331
#define COMMENTS 332
#define COMMIT 333
#define COMMITTED 334
#define CONCURRENTLY 335
#define CONFIGURATION 336
#define CONFLICT 337
#define CONNECTION 338
#define CONSTRAINT 339
#define CONSTRAINTS 340
#define CONTENT_P 341
#define CONTINUE_P 342
#define CONVERSION_P 343
#define COPY 344
#define COST 345
#define CREATE_P 346
#define CROSS 347
#define CSV 348
#define CUBE 349
#define CURRENT_P 350
#define CURRENT_CATALOG 351
#define CURRENT_DATE 352
#define CURRENT_ROLE 353
#define CURRENT_SCHEMA 354
#define CURRENT_TIME 355
#define CURRENT_TIMESTAMP 356
#define CURRENT_USER 357
#define CURSOR 358
#define CYCLE 359
#define DATA_P 360
#define DATABASE 361
#define DAY_P 362
#define DAYS_P 363
#define DEALLOCATE 364
#define DEC 365
#define DECIMAL_P 366
#define DECLARE 367
#define DEFAULT 368
#define DEFAULTS 369
#define DEFERRABLE 370
#define DEFERRED 371
#define DEFINER 372
#define DELETE_P 373
#define DELIMITER 374
#define DELIMITERS 375
#define DEPENDS 376
#define DESC_P 377
#define DESCRIBE 378
#define DETACH 379
#define DICTIONARY 380
#define DISABLE_P 381
#define DISCARD 382
#define DISTINCT 383
#define DO 384
#define DOCUMENT_P 385
#define DOMAIN_P 386
#define DOUBLE_P 387
#define DROP 388
#define EACH 389
#define ELSE 390
#define ENABLE_P 391
#define ENCODING 392
#define ENCRYPTED 393
#define END_P 394
#define ENUM_P 395
#define ESCAPE 396
#define EVENT 397
#define EXCEPT 398
#define EXCLUDE 399
#define EXCLUDING 400
#define EXCLUSIVE 401
#define EXECUTE 402
#define EXISTS 403
#define EXPLAIN 404
#define EXPORT_P 405
#define EXTENSION 406
#define EXTERNAL 407
#define EXTRACT 408
#define FALSE_P 409
#define FAMILY 410
#define FETCH 411
#define FILTER 412
#define FIRST_P 413
#define FLOAT_P 414
#define FOLLOWING 415
#define FOR 416
#define FORCE 417
#define FOREIGN 418
#define FORWARD 419
#define FREEZE 420
#define FROM 421
#define FULL 422
#define FUNCTION 423
#define FUNCTIONS 424
#define GENERATED 425
#define GLOB 426
#define GLOBAL 427
#define GRANT 428
#define GRANTED 429
#define GROUP_P 430
#define GROUPING 431
#define HANDLER 432
#define HAVING 433
#define HEADER_P 434
#define HOLD 435
#define HOUR_P 436
#define HOURS_P 437
#define IDENTITY_P 438
#define IF_P 439
#define ILIKE 440
#define IMMEDIATE 441
#define IMMUTABLE 442
#define IMPLICIT_P 443
#define IMPORT_P 444
#define IN_P 445
#define INCLUDING 446
#define INCREMENT 447
#define INDEX 448
#define INDEXES 449
#define INHERIT 450
#define INHERITS 451
#define INITIALLY 452
#define INLINE_P 453
#define INNER_P 454
#define INOUT 455
#define INPUT_P 456
#define INSENSITIVE 457
#define INSERT 458
#define INSTEAD 459
#define INT_P 460
#define INTEGER 461
#define INTERSECT 462
#define INTERVAL 463
#define INTO 464
#define INVOKER 465
#define IS 466
#define ISNULL 467
#define ISOLATION 468
#define JOIN 469
#define KEY 470
#define LABEL 471
#define LANGUAGE 472
#define LARGE_P 473
#define LAST_P 474
#define LATERAL_P 475
#define LEADING 476
#define LEAKPROOF 477
#define LEFT 478
#define LEVEL 479
#define LIKE 480
#define LIMIT 481
#define LISTEN 482
#define LOAD 483
#define LOCAL 484
#define LOCALTIME 485
#define LOCALTIMESTAMP 486
#define LOCATION 487
#define LOCK_P 488
#define LOCKED 489
#define LOGGED 490
#define MACRO 491
#define MAPPING 492
#define MATCH 493
#define MATERIALIZED 494
#define MAXVALUE 495
#define METHOD 496
#define MICROSECOND_P 497
#define MICROSECONDS_P 498
#define MILLISECOND_P 499
#define MILLISECONDS_P 500
#define MINUTE_P 501
#define MINUTES_P 502
#define MINVALUE 503
#define MODE 504
#define MONTH_P 505
#define MONTHS_P 506
#define MOVE 507
#define NAME_P 508
#define NAMES 509
#define NATIONAL 510
#define NATURAL 511
#define NCHAR 512
#define NEW 513
#define NEXT 514
#define NO 515
#define NONE 516
#define NOT 517
#define NOTHING 518
#define NOTIFY 519
#define NOTNULL 520
#define NOWAIT 521
#define NULL_P 522
#define NULLIF 523
#define NULLS_P 524
#define NUMERIC 525
#define OBJECT_P 526
#define OF 527
#define OFF 528
#define OFFSET 529
#define OIDS 530
#define OLD 531
#define ON 532
#define ONLY 533
#define OPERATOR 534
#define OPTION 535
#define OPTIONS 536
#define OR 537
#define ORDER 538
#define ORDINALITY 539
#define OUT_P 540
#define OUTER_P 541
#define OVER 542
#define OVERLAPS 543
#define OVERLAY 544
#define OVERRIDING 545
#define OWNED 546
#define OWNER 547
#define PARALLEL 548
#define PARSER 549
#define PARTIAL 550
#define PARTITION 551
#define PASSING 552
#define PASSWORD 553
#define PERCENT 554
#define PLACING 555
#define PLANS 556
#define POLICY 557
#define POSITION 558
#define PRAGMA_P 559
#define PRECEDING 560
#define PRECISION 561
#define PREPARE 562
#define PREPARED 563
#define PRESERVE 564
#define PRIMARY 565
#define PRIOR 566
#define PRIVILEGES 567
#define PROCEDURAL 568
#define PROCEDURE 569
#define PROGRAM 570
#define PUBLICATION 571
#define QUOTE 572
#define RANGE 573
#define READ_P 574
#define REAL 575
#define REASSIGN 576
#define RECHECK 577
#define RECURSIVE 578
#define REF 579
#define REFERENCES 580
#define REFERENCING 581
#define REFRESH 582
#define REINDEX 583
#define RELATIVE_P 584
#define RELEASE 585
#define RENAME 586
#define REPEATABLE 587
#define REPLACE 588
#define REPLICA 589
#define RESET 590
#define RESTART 591
#define RESTRICT 592
#define RETURNING 593
#define RETURNS 594
#define REVOKE 595
#define RIGHT 596
#define ROLE 597
#define ROLLBACK 598
#define ROLLUP 599
#define ROW 600
#define ROWS 601
#define RULE 602
#define SAMPLE 603
#define SAVEPOINT 604
#define SCHEMA 605
#define SCHEMAS 606
#define SCROLL 607
#define SEARCH 608
#define SECOND_P 609
#define SECONDS_P 610
#define SECURITY 611
#define SELECT 612
#define SEQUENCE 613
#define SEQUENCES 614
#define SERIALIZABLE 615
#define SERVER 616
#define SESSION 617
#define SESSION_USER 618
#define SET 619
#define SETOF 620
#define SETS 621
#define SHARE 622
#define SHOW 623
#define SIMILAR 624
#define SIMPLE 625
#define SKIP 626
#define SMALLINT 627
#define SNAPSHOT 628
#define SOME 629
#define SQL_P 630
#define STABLE 631
#define STANDALONE_P 632
#define START 633
#define STATEMENT 634
#define STATISTICS 635
#define STDIN 636
#define STDOUT 637
#define STORAGE 638
#define STRICT_P 639
#define STRIP_P 640
#define STRUCT 641
#define SUBSCRIPTION 642
#define SUBSTRING 643
#define SYMMETRIC 644
#define SYSID 645
#define SYSTEM_P 646
#define TABLE 647
#define TABLES 648
#define TABLESAMPLE 649
#define TABLESPACE 650
#define TEMP 651
#define TEMPLATE 652
#define TEMPORARY 653
#define TEXT_P 654
#define THEN 655
#define TIME 656
#define TIMESTAMP 657
#define TO 658
#define TRAILING 659
#define TRANSACTION 660
#define TRANSFORM 661
#define TREAT 662
#define TRIGGER 663
#define TRIM 664
#define TRUE_P 665
#define TRUNCATE 666
#define TRUSTED 667
#define TYPE_P 668
#define TYPES_P 669
#define UNBOUNDED 670
#define UNCOMMITTED 671
#define UNENCRYPTED 672
#define UNION 673
#define UNIQUE 674
#define UNKNOWN 675
#define UNLISTEN 676
#define UNLOGGED 677
#define UNTIL 678
#define UPDATE 679
#define USER 680
#define USING 681
#define VACUUM 682
#define VALID 683
#define VALIDATE 684
#define VALIDATOR 685
#define VALUE_P 686
#define VALUES 687
#define VARCHAR 688
#define VARIADIC 689
#define VARYING 690
#define VERBOSE 691
#define VERSION_P 692
#define VIEW 693
#define VIEWS 694
#define VOLATILE 695
#define WHEN 696
#define WHERE 697
#define WHITESPACE_P 698
#define WINDOW 699
#define WITH 700
#define WITHIN 701
#define WITHOUT 702
#define WORK 703
#define WRAPPER 704
#define WRITE_P 705
#define XML_P 706
#define XMLATTRIBUTES 707
#define XMLCONCAT 708
#define XMLELEMENT 709
#define XMLEXISTS 710
#define XMLFOREST 711
#define XMLNAMESPACES 712
#define XMLPARSE 713
#define XMLPI 714
#define XMLROOT 715
#define XMLSERIALIZE 716
#define XMLTABLE 717
#define YEAR_P 718
#define YEARS_P 719
#define YES_P 720
#define ZONE 721
#define NOT_LA 722
#define NULLS_LA 723
#define WITH_LA 724
#define POSTFIXOP 725
#define UMINUS 726




/* Copy the first part of user declarations.  */
#line 1 "third_party/libpg_query/grammar/grammar.y.tmp"

#line 1 "third_party/libpg_query/grammar/grammar.hpp"
/*#define YYDEBUG 1*/
/*-------------------------------------------------------------------------
 *
 * gram.y
 *	  POSTGRESQL BISON rules/actions
 *
 * Portions Copyright (c) 1996-2017, PostgreSQL Global Development PGGroup
 * Portions Copyright (c) 1994, Regents of the University of California
 *
 *
 * IDENTIFICATION
 *	  src/backend/parser/gram.y
 *
 * HISTORY
 *	  AUTHOR			DATE			MAJOR EVENT
 *	  Andrew Yu			Sept, 1994		POSTQUEL to SQL conversion
 *	  Andrew Yu			Oct, 1994		lispy code conversion
 *
 * NOTES
 *	  CAPITALS are used to represent terminal symbols.
 *	  non-capitals are used to represent non-terminals.
 *
 *	  In general, nothing in this file should initiate database accesses
 *	  nor depend on changeable state (such as SET variables).  If you do
 *	  database accesses, your code will fail when we have aborted the
 *	  current transaction and are just parsing commands to find the next
 *	  ROLLBACK or COMMIT.  If you make use of SET variables, then you
 *	  will do the wrong thing in multi-query strings like this:
 *			SET constraint_exclusion TO off; SELECT * FROM foo;
 *	  because the entire string is parsed by gram.y before the SET gets
 *	  executed.  Anything that depends on the database or changeable state
 *	  should be handled during parse analysis so that it happens at the
 *	  right time not the wrong time.
 *
 * WARNINGS
 *	  If you use a list, make sure the datum is a node so that the printing
 *	  routines work.
 *
 *	  Sometimes we assign constants to makeStrings. Make sure we don't free
 *	  those.
 *
 *-------------------------------------------------------------------------
 */
#include "pg_functions.hpp"
#include <string.h>

#include <ctype.h>
#include <limits.h>

#include "nodes/makefuncs.hpp"
#include "nodes/nodeFuncs.hpp"
#include "parser/gramparse.hpp"
#include "parser/parser.hpp"
#include "utils/datetime.hpp"

namespace duckdb_libpgquery {
#define DEFAULT_SCHEMA "main"

/*
 * Location tracking support --- simpler than bison's default, since we only
 * want to track the start position not the end position of each nonterminal.
 */
#define YYLLOC_DEFAULT(Current, Rhs, N) \
	do { \
		if ((N) > 0) \
			(Current) = (Rhs)[1]; \
		else \
			(Current) = (-1); \
	} while (0)

/*
 * The above macro assigns -1 (unknown) as the parse location of any
 * nonterminal that was reduced from an empty rule, or whose leftmost
 * component was reduced from an empty rule.  This is problematic
 * for nonterminals defined like
 *		OptFooList: / * EMPTY * / { ... } | OptFooList Foo { ... } ;
 * because we'll set -1 as the location during the first reduction and then
 * copy it during each subsequent reduction, leaving us with -1 for the
 * location even when the list is not empty.  To fix that, do this in the
 * action for the nonempty rule(s):
 *		if (@$ < 0) @$ = @2;
 * (Although we have many nonterminals that follow this pattern, we only
 * bother with fixing @$ like this when the nonterminal's parse location
 * is actually referenced in some rule.)
 *
 * A cleaner answer would be to make YYLLOC_DEFAULT scan all the Rhs
 * locations until it's found one that's not -1.  Then we'd get a correct
 * location for any nonterminal that isn't entirely empty.  But this way
 * would add overhead to every rule reduction, and so far there's not been
 * a compelling reason to pay that overhead.
 */

/*
 * Bison doesn't allocate anything that needs to live across parser calls,
 * so we can easily have it use palloc instead of malloc.  This prevents
 * memory leaks if we error out during parsing.  Note this only works with
 * bison >= 2.0.  However, in bison 1.875 the default is to use alloca()
 * if possible, so there's not really much problem anyhow, at least if
 * you're building with gcc.
 */
#define YYMALLOC palloc
#define YYFREE   pfree
#define YYINITDEPTH 1000

/* yields an integer bitmask of these flags: */
#define CAS_NOT_DEFERRABLE			0x01
#define CAS_DEFERRABLE				0x02
#define CAS_INITIALLY_IMMEDIATE		0x04
#define CAS_INITIALLY_DEFERRED		0x08
#define CAS_NOT_VALID				0x10
#define CAS_NO_INHERIT				0x20


#define parser_yyerror(msg)  scanner_yyerror(msg, yyscanner)
#define parser_errposition(pos)  scanner_errposition(pos, yyscanner)

static void base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner,
						 const char *msg);
static PGRawStmt *makeRawStmt(PGNode *stmt, int stmt_location);
static void updateRawStmtEnd(PGRawStmt *rs, int end_location);
static PGNode *makeColumnRef(char *colname, PGList *indirection,
						   int location, core_yyscan_t yyscanner);
static PGNode *makeTypeCast(PGNode *arg, PGTypeName *tpname, int location);
static PGNode *makeStringConst(char *str, int location);
static PGNode *makeStringConstCast(char *str, int location, PGTypeName *tpname);
static PGNode *makeIntervalNode(char *str, int location, PGList *typmods);
static PGNode *makeIntervalNode(int val, int location, PGList *typmods);
static PGNode *makeIntervalNode(PGNode *arg, int location, PGList *typmods);
static PGNode *makeSampleSize(PGValue *sample_size, bool is_percentage);
static PGNode *makeSampleOptions(PGNode *sample_size, char *method, int seed, int location);
static PGNode *makeIntConst(int val, int location);
static PGNode *makeFloatConst(char *str, int location);
static PGNode *makeBitStringConst(char *str, int location);
static PGNode *makeNullAConst(int location);
static PGNode *makeAConst(PGValue *v, int location);
static PGNode *makeBoolAConst(bool state, int location);
static PGNode *makeParamRef(int number, int location);
static PGNode *makeParamRefCast(int number, int location, PGTypeName *tpname);
static void check_qualified_name(PGList *names, core_yyscan_t yyscanner);
static PGList *check_func_name(PGList *names, core_yyscan_t yyscanner);
static PGList *check_indirection(PGList *indirection, core_yyscan_t yyscanner);
static void insertSelectOptions(PGSelectStmt *stmt,
								PGList *sortClause, PGList *lockingClause,
								PGNode *limitOffset, PGNode *limitCount,
								PGWithClause *withClause,
								core_yyscan_t yyscanner);
static PGNode *makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg);
static PGNode *doNegate(PGNode *n, int location);
static void doNegateFloat(PGValue *v);
static PGNode *makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location);
static PGNode *makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location);
static PGNode *makeNotExpr(PGNode *expr, int location);
static PGNode *makeSQLValueFunction(PGSQLValueFunctionOp op, int32_t typmod,
								  int location);
static void SplitColQualList(PGList *qualList,
							 PGList **constraintList, PGCollateClause **collClause,
							 core_yyscan_t yyscanner);
static void processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner);
static PGNode *makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query);



/* Enabling traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* Enabling the token table.  */
#ifndef YYTOKEN_TABLE
# define YYTOKEN_TABLE 0
#endif

#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
typedef union YYSTYPE
#line 14 "third_party/libpg_query/grammar/grammar.y"
{
	core_YYSTYPE		core_yystype;
	/* these fields must match core_YYSTYPE: */
	int					ival;
	char				*str;
	const char			*keyword;
	const char          *conststr;

	char				chr;
	bool				boolean;
	PGJoinType			jtype;
	PGDropBehavior		dbehavior;
	PGOnCommitAction		oncommit;
	PGList				*list;
	PGNode				*node;
	PGValue				*value;
	PGObjectType			objtype;
	PGTypeName			*typnam;
	PGObjectWithArgs		*objwithargs;
	PGDefElem				*defelt;
	PGSortBy				*sortby;
	PGWindowDef			*windef;
	PGJoinExpr			*jexpr;
	PGIndexElem			*ielem;
	PGAlias				*alias;
	PGRangeVar			*range;
	PGIntoClause			*into;
	PGWithClause			*with;
	PGInferClause			*infer;
	PGOnConflictClause	*onconflict;
	PGAIndices			*aind;
	PGResTarget			*target;
	PGInsertStmt			*istmt;
	PGVariableSetStmt		*vsetstmt;
	PGOverridingKind       override;
	PGSortByDir            sortorder;
	PGSortByNulls          nullorder;
	PGLockClauseStrength lockstrength;
	PGLockWaitPolicy lockwaitpolicy;
	PGSubLinkType subquerytype;
	PGViewCheckOption viewcheckoption;
}
/* Line 193 of yacc.c.  */
#line 1255 "third_party/libpg_query/grammar/grammar_out.cpp"
	YYSTYPE;
# define yystype YYSTYPE /* obsolescent; will be withdrawn */
# define YYSTYPE_IS_DECLARED 1
# define YYSTYPE_IS_TRIVIAL 1
#endif

#if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
typedef struct YYLTYPE
{
  int first_line;
  int first_column;
  int last_line;
  int last_column;
} YYLTYPE;
# define yyltype YYLTYPE /* obsolescent; will be withdrawn */
# define YYLTYPE_IS_DECLARED 1
# define YYLTYPE_IS_TRIVIAL 1
#endif


/* Copy the second part of user declarations.  */


/* Line 216 of yacc.c.  */
#line 1280 "third_party/libpg_query/grammar/grammar_out.cpp"

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#elif (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
typedef signed char yytype_int8;
#else
typedef short int yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(msgid) dgettext ("bison-runtime", msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(msgid) msgid
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(e) ((void) (e))
#else
# define YYUSE(e) /* empty */
#endif

/* Identity function, used to suppress warnings about constant conditions.  */
#ifndef lint
# define YYID(n) (n)
#else
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static int
YYID (int i)
#else
static int
YYID (i)
    int i;
#endif
{
  return i;
}
#endif

#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#     ifndef _STDLIB_H
#      define _STDLIB_H 1
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's `empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (YYID (0))
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined _STDLIB_H \
       && ! ((defined YYMALLOC || defined malloc) \
	     && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef _STDLIB_H
#    define _STDLIB_H 1
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
	 || (defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL \
	     && defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss;
  YYSTYPE yyvs;
    YYLTYPE yyls;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
      + 2 * YYSTACK_GAP_MAXIMUM)

/* Copy COUNT objects from FROM to TO.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(To, From, Count) \
      __builtin_memcpy (To, From, (Count) * sizeof (*(From)))
#  else
#   define YYCOPY(To, From, Count)		\
      do					\
	{					\
	  YYSIZE_T yyi;				\
	  for (yyi = 0; yyi < (Count); yyi++)	\
	    (To)[yyi] = (From)[yyi];		\
	}					\
      while (YYID (0))
#  endif
# endif

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack)					\
    do									\
      {									\
	YYSIZE_T yynewbytes;						\
	YYCOPY (&yyptr->Stack, Stack, yysize);				\
	Stack = &yyptr->Stack;						\
	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
	yyptr += yynewbytes / sizeof (*yyptr);				\
      }									\
    while (YYID (0))

#endif

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  572
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   47752

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  490
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  360
/* YYNRULES -- Number of rules.  */
#define YYNRULES  1626
/* YYNRULES -- Number of states.  */
#define YYNSTATES  2688

/* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   726

#define YYTRANSLATE(YYX)						\
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[YYLEX] -- Bison symbol number corresponding to YYLEX.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,   478,     2,     2,
     483,   484,   476,   474,   487,   475,   485,   477,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   489,   486,
     470,   472,   471,   488,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,   481,     2,   482,   479,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   473,   480
};

#if YYDEBUG
/* YYPRHS[YYN] -- Index of the first RHS symbol of rule number YYN in
   YYRHS.  */
static const yytype_uint16 yyprhs[] =
{
       0,     0,     3,     5,     9,    11,    13,    15,    17,    19,
      21,    23,    25,    27,    29,    31,    33,    35,    37,    39,
      41,    43,    45,    47,    49,    51,    53,    55,    57,    59,
      61,    63,    65,    67,    69,    71,    73,    75,    77,    78,
      83,    90,    95,   102,   107,   114,   119,   126,   128,   131,
     135,   138,   140,   144,   147,   151,   153,   157,   160,   166,
     170,   177,   182,   189,   196,   203,   209,   215,   222,   232,
     237,   243,   251,   258,   263,   272,   277,   280,   285,   289,
     296,   301,   304,   307,   310,   313,   315,   318,   319,   321,
     324,   327,   330,   332,   336,   341,   344,   345,   348,   352,
     355,   359,   366,   373,   382,   389,   398,   405,   414,   421,
     430,   439,   450,   459,   470,   472,   473,   481,   483,   488,
     493,   501,   504,   506,   510,   515,   519,   520,   522,   523,
     526,   530,   536,   545,   551,   552,   558,   564,   572,   575,
     576,   578,   580,   582,   586,   589,   590,   592,   593,   595,
     599,   601,   605,   607,   611,   614,   617,   622,   628,   634,
     643,   645,   646,   650,   660,   673,   677,   678,   683,   690,
     692,   695,   697,   699,   700,   702,   705,   708,   710,   713,
     716,   718,   721,   725,   728,   731,   734,   737,   741,   745,
     749,   751,   755,   757,   758,   760,   763,   766,   769,   772,
     775,   778,   781,   784,   786,   788,   789,   799,   812,   813,
     816,   818,   820,   822,   824,   826,   828,   832,   833,   835,
     838,   840,   842,   845,   848,   852,   854,   856,   859,   862,
     864,   867,   871,   877,   880,   886,   892,   895,   899,   901,
     903,   906,   909,   910,   915,   916,   920,   925,   930,   931,
     935,   938,   939,   943,   945,   947,   949,   951,   953,   955,
     957,   959,   961,   963,   967,   971,   973,   976,   979,   982,
     985,   988,   991,   992,   996,  1000,  1004,  1005,  1007,  1010,
    1012,  1015,  1018,  1021,  1024,  1029,  1031,  1035,  1037,  1041,
    1043,  1045,  1047,  1049,  1053,  1055,  1058,  1059,  1061,  1062,
    1064,  1068,  1069,  1072,  1073,  1077,  1081,  1083,  1089,  1093,
    1095,  1099,  1101,  1106,  1112,  1118,  1125,  1129,  1137,  1142,
    1154,  1156,  1160,  1163,  1166,  1169,  1170,  1174,  1176,  1178,
    1181,  1184,  1187,  1190,  1192,  1193,  1195,  1198,  1205,  1210,
    1217,  1222,  1229,  1238,  1240,  1242,  1244,  1246,  1248,  1251,
    1253,  1256,  1258,  1260,  1262,  1266,  1270,  1274,  1278,  1281,
    1284,  1286,  1290,  1292,  1294,  1296,  1298,  1302,  1304,  1306,
    1307,  1309,  1311,  1313,  1320,  1322,  1324,  1327,  1331,  1340,
    1352,  1362,  1364,  1366,  1370,  1371,  1373,  1377,  1379,  1380,
    1382,  1383,  1385,  1386,  1388,  1392,  1394,  1396,  1398,  1402,
    1403,  1406,  1409,  1410,  1413,  1414,  1416,  1417,  1419,  1421,
    1423,  1427,  1431,  1433,  1435,  1439,  1443,  1447,  1451,  1456,
    1460,  1463,  1465,  1467,  1469,  1471,  1473,  1477,  1479,  1481,
    1485,  1489,  1491,  1494,  1499,  1504,  1507,  1511,  1517,  1523,
    1525,  1527,  1538,  1549,  1551,  1554,  1559,  1564,  1569,  1572,
    1575,  1579,  1581,  1585,  1592,  1595,  1596,  1600,  1604,  1609,
    1614,  1619,  1624,  1628,  1631,  1633,  1635,  1636,  1638,  1640,
    1641,  1643,  1649,  1651,  1652,  1654,  1655,  1659,  1661,  1665,
    1670,  1674,  1676,  1678,  1679,  1682,  1685,  1686,  1689,  1692,
    1694,  1696,  1698,  1699,  1702,  1707,  1713,  1718,  1721,  1725,
    1728,  1731,  1734,  1737,  1739,  1742,  1746,  1747,  1749,  1750,
    1756,  1758,  1763,  1770,  1773,  1775,  1776,  1781,  1782,  1784,
    1786,  1788,  1790,  1793,  1796,  1798,  1800,  1802,  1804,  1806,
    1808,  1812,  1813,  1815,  1819,  1821,  1823,  1826,  1829,  1830,
    1832,  1836,  1838,  1839,  1841,  1844,  1848,  1851,  1856,  1859,
    1863,  1866,  1867,  1869,  1872,  1873,  1878,  1884,  1887,  1888,
    1890,  1894,  1898,  1902,  1906,  1910,  1914,  1916,  1921,  1925,
    1930,  1936,  1941,  1947,  1952,  1958,  1961,  1966,  1968,  1970,
    1971,  1973,  1978,  1984,  1989,  1990,  1993,  1996,  1999,  2001,
    2003,  2004,  2009,  2012,  2014,  2017,  2020,  2025,  2028,  2035,
    2038,  2040,  2044,  2049,  2050,  2053,  2054,  2057,  2058,  2060,
    2064,  2068,  2071,  2072,  2075,  2080,  2082,  2084,  2087,  2091,
    2097,  2104,  2107,  2111,  2116,  2120,  2125,  2126,  2128,  2130,
    2132,  2134,  2136,  2139,  2144,  2146,  2148,  2150,  2152,  2155,
    2159,  2163,  2164,  2166,  2168,  2170,  2172,  2174,  2177,  2180,
    2183,  2186,  2189,  2191,  2195,  2196,  2198,  2200,  2202,  2204,
    2210,  2213,  2215,  2217,  2219,  2221,  2226,  2228,  2231,  2234,
    2236,  2240,  2244,  2247,  2249,  2250,  2256,  2259,  2265,  2268,
    2270,  2274,  2278,  2279,  2281,  2283,  2285,  2287,  2289,  2291,
    2293,  2295,  2297,  2299,  2301,  2303,  2305,  2307,  2309,  2311,
    2313,  2315,  2317,  2319,  2321,  2323,  2325,  2327,  2331,  2335,
    2339,  2343,  2347,  2351,  2355,  2356,  2358,  2362,  2366,  2372,
    2375,  2378,  2382,  2386,  2390,  2394,  2398,  2402,  2406,  2410,
    2414,  2418,  2422,  2426,  2430,  2433,  2436,  2440,  2444,  2447,
    2450,  2454,  2458,  2464,  2469,  2476,  2480,  2486,  2491,  2498,
    2503,  2510,  2516,  2524,  2528,  2531,  2536,  2540,  2543,  2547,
    2549,  2553,  2558,  2562,  2567,  2571,  2576,  2582,  2589,  2596,
    2604,  2611,  2619,  2626,  2634,  2638,  2643,  2648,  2655,  2657,
    2659,  2663,  2666,  2669,  2673,  2677,  2681,  2685,  2689,  2693,
    2697,  2701,  2705,  2709,  2713,  2717,  2721,  2724,  2727,  2733,
    2740,  2747,  2755,  2757,  2759,  2762,  2765,  2770,  2772,  2774,
    2776,  2779,  2782,  2786,  2792,  2799,  2808,  2815,  2822,  2827,
    2832,  2834,  2836,  2838,  2844,  2846,  2848,  2853,  2855,  2860,
    2862,  2867,  2869,  2874,  2876,  2878,  2880,  2882,  2884,  2886,
    2893,  2898,  2903,  2908,  2913,  2920,  2926,  2932,  2938,  2943,
    2950,  2955,  2961,  2962,  2968,  2969,  2972,  2973,  2975,  2979,
    2983,  2986,  2989,  2990,  2997,  2999,  3000,  3004,  3005,  3008,
    3011,  3012,  3014,  3019,  3022,  3025,  3028,  3031,  3034,  3039,
    3043,  3049,  3051,  3053,  3055,  3057,  3059,  3061,  3063,  3065,
    3067,  3069,  3071,  3073,  3075,  3077,  3079,  3081,  3083,  3085,
    3090,  3092,  3097,  3099,  3104,  3106,  3109,  3111,  3114,  3116,
    3119,  3121,  3125,  3127,  3131,  3133,  3137,  3139,  3143,  3147,
    3149,  3153,  3157,  3158,  3160,  3162,  3164,  3166,  3168,  3170,
    3172,  3174,  3176,  3178,  3183,  3187,  3190,  3194,  3195,  3199,
    3203,  3206,  3209,  3211,  3212,  3215,  3218,  3222,  3225,  3227,
    3229,  3233,  3239,  3241,  3244,  3249,  3252,  3253,  3255,  3256,
    3258,  3261,  3264,  3267,  3271,  3277,  3279,  3280,  3282,  3285,
    3286,  3289,  3291,  3292,  3294,  3295,  3297,  3301,  3305,  3308,
    3310,  3312,  3314,  3318,  3320,  3323,  3325,  3329,  3331,  3333,
    3335,  3338,  3340,  3342,  3344,  3346,  3348,  3351,  3358,  3361,
    3367,  3371,  3375,  3377,  3379,  3381,  3383,  3385,  3387,  3389,
    3391,  3393,  3395,  3397,  3399,  3401,  3403,  3406,  3409,  3413,
    3417,  3418,  3420,  3422,  3424,  3426,  3428,  3430,  3432,  3434,
    3440,  3444,  3445,  3447,  3449,  3451,  3453,  3458,  3466,  3469,
    3470,  3472,  3474,  3476,  3478,  3492,  3509,  3511,  3514,  3515,
    3517,  3518,  3520,  3521,  3524,  3525,  3527,  3528,  3535,  3544,
    3551,  3560,  3567,  3576,  3579,  3581,  3586,  3590,  3593,  3598,
    3602,  3608,  3610,  3611,  3613,  3615,  3616,  3618,  3620,  3622,
    3624,  3626,  3628,  3630,  3632,  3634,  3636,  3638,  3640,  3644,
    3646,  3648,  3650,  3652,  3654,  3656,  3659,  3661,  3663,  3666,
    3670,  3674,  3676,  3680,  3684,  3687,  3691,  3695,  3699,  3703,
    3705,  3707,  3709,  3711,  3715,  3721,  3723,  3725,  3727,  3729,
    3733,  3736,  3738,  3743,  3749,  3755,  3760,  3767,  3769,  3771,
    3773,  3775,  3777,  3779,  3780,  3782,  3786,  3788,  3789,  3797,
    3799,  3802,  3806,  3809,  3810,  3813,  3814,  3817,  3822,  3825,
    3827,  3829,  3831,  3834,  3838,  3841,  3844,  3848,  3853,  3856,
    3858,  3860,  3862,  3866,  3869,  3879,  3891,  3904,  3919,  3923,
    3928,  3933,  3934,  3942,  3953,  3956,  3960,  3961,  3966,  3968,
    3970,  3972,  3974,  3976,  3978,  3980,  3982,  3984,  3986,  3988,
    3990,  3992,  3994,  3996,  3998,  4000,  4002,  4004,  4006,  4008,
    4010,  4012,  4014,  4016,  4018,  4020,  4022,  4024,  4026,  4028,
    4030,  4032,  4034,  4036,  4038,  4040,  4042,  4044,  4046,  4048,
    4050,  4052,  4054,  4056,  4058,  4060,  4062,  4064,  4066,  4068,
    4070,  4072,  4074,  4076,  4078,  4080,  4082,  4084,  4086,  4088,
    4090,  4092,  4094,  4096,  4098,  4100,  4102,  4104,  4106,  4108,
    4110,  4112,  4114,  4116,  4118,  4120,  4122,  4124,  4126,  4128,
    4130,  4132,  4134,  4136,  4138,  4140,  4142,  4144,  4146,  4148,
    4150,  4152,  4154,  4156,  4158,  4160,  4162,  4164,  4166,  4168,
    4170,  4172,  4174,  4176,  4178,  4180,  4182,  4184,  4186,  4188,
    4190,  4192,  4194,  4196,  4198,  4200,  4202,  4204,  4206,  4208,
    4210,  4212,  4214,  4216,  4218,  4220,  4222,  4224,  4226,  4228,
    4230,  4232,  4234,  4236,  4238,  4240,  4242,  4244,  4246,  4248,
    4250,  4252,  4254,  4256,  4258,  4260,  4262,  4264,  4266,  4268,
    4270,  4272,  4274,  4276,  4278,  4280,  4282,  4284,  4286,  4288,
    4290,  4292,  4294,  4296,  4298,  4300,  4302,  4304,  4306,  4308,
    4310,  4312,  4314,  4316,  4318,  4320,  4322,  4324,  4326,  4328,
    4330,  4332,  4334,  4336,  4338,  4340,  4342,  4344,  4346,  4348,
    4350,  4352,  4354,  4356,  4358,  4360,  4362,  4364,  4366,  4368,
    4370,  4372,  4374,  4376,  4378,  4380,  4382,  4384,  4386,  4388,
    4390,  4392,  4394,  4396,  4398,  4400,  4402,  4404,  4406,  4408,
    4410,  4412,  4414,  4416,  4418,  4420,  4422,  4424,  4426,  4428,
    4430,  4432,  4434,  4436,  4438,  4440,  4442,  4444,  4446,  4448,
    4450,  4452,  4454,  4456,  4458,  4460,  4462,  4464,  4466,  4468,
    4470,  4472,  4474,  4476,  4478,  4480,  4482,  4484,  4486,  4488,
    4490,  4492,  4494,  4496,  4498,  4500,  4502,  4504,  4506,  4508,
    4510,  4512,  4514,  4516,  4518,  4520,  4522,  4524,  4526,  4528,
    4530,  4532,  4534,  4536,  4538,  4540,  4542,  4544,  4546,  4548,
    4550,  4552,  4554,  4556,  4558,  4560,  4562,  4564,  4566,  4568,
    4570,  4572,  4574,  4576,  4578,  4580,  4582,  4584,  4586,  4588,
    4590,  4592,  4594,  4596,  4598,  4600,  4602,  4604,  4606,  4608,
    4610,  4612,  4614,  4616,  4618,  4620,  4622,  4624,  4626,  4628,
    4630,  4632,  4634,  4636,  4638,  4640,  4642,  4644,  4646,  4648,
    4650,  4652,  4654,  4656,  4658,  4660,  4662,  4664,  4666,  4668,
    4670,  4672,  4674,  4676,  4678,  4680,  4682,  4684,  4686,  4688,
    4690,  4692,  4694,  4696,  4698,  4700,  4702,  4704,  4706,  4708,
    4710,  4712,  4714,  4716,  4718,  4720,  4722,  4724,  4726,  4728,
    4730,  4732,  4734,  4736,  4738,  4740,  4742,  4744,  4746,  4748,
    4750,  4752,  4754,  4756,  4758,  4760,  4762,  4764,  4766,  4768,
    4770,  4772,  4774,  4776,  4778,  4780,  4782,  4784,  4786,  4788,
    4790,  4792,  4794,  4796,  4798,  4800,  4802,  4804,  4806,  4808,
    4810,  4812,  4814,  4816,  4818,  4820,  4822,  4824,  4826,  4828,
    4830,  4832,  4834,  4836,  4838,  4840,  4842,  4844,  4846,  4848,
    4850,  4852,  4854,  4856,  4858,  4860,  4862
};

/* YYRHS -- A `-1'-separated list of the rules' RHS.  */
static const yytype_int16 yyrhs[] =
{
     491,     0,    -1,   492,    -1,   492,   486,   493,    -1,   493,
      -1,   801,    -1,   531,    -1,   494,    -1,   833,    -1,   840,
      -1,   802,    -1,   596,    -1,   843,    -1,   592,    -1,   791,
      -1,   527,    -1,   540,    -1,   505,    -1,   829,    -1,   586,
      -1,   529,    -1,   805,    -1,   803,    -1,   804,    -1,   794,
      -1,   508,    -1,   822,    -1,   526,    -1,   788,    -1,   506,
      -1,   613,    -1,   538,    -1,   595,    -1,   824,    -1,   834,
      -1,   816,    -1,   837,    -1,   841,    -1,    -1,    28,   392,
     673,   502,    -1,    28,   392,   184,   148,   673,   502,    -1,
      28,   193,   771,   502,    -1,    28,   193,   184,   148,   771,
     502,    -1,    28,   358,   771,   502,    -1,    28,   358,   184,
     148,   771,   502,    -1,    28,   438,   771,   502,    -1,    28,
     438,   184,   148,   771,   502,    -1,   497,    -1,   495,   497,
      -1,   364,   113,   715,    -1,   133,   113,    -1,   336,    -1,
     336,   533,   534,    -1,   364,   535,    -1,   364,   170,   585,
      -1,   501,    -1,   498,   487,   501,    -1,    22,   565,    -1,
      22,   184,   262,   148,   565,    -1,    22,    74,   565,    -1,
      22,    74,   184,   262,   148,   565,    -1,    28,   507,   779,
     496,    -1,    28,   507,   779,   133,   262,   267,    -1,    28,
     507,   779,   364,   262,   267,    -1,    28,   507,   779,   364,
     380,   537,    -1,    28,   507,   779,   364,   553,    -1,    28,
     507,   779,   335,   553,    -1,    28,   507,   779,   364,   383,
     779,    -1,    28,   507,   779,    22,   170,   585,    35,   183,
     543,    -1,    28,   507,   779,   495,    -1,    28,   507,   779,
     133,   183,    -1,    28,   507,   779,   133,   183,   184,   148,
      -1,   133,   507,   184,   148,   779,   590,    -1,   133,   507,
     779,   590,    -1,    28,   507,   779,   504,   413,   685,   682,
     500,    -1,    28,   507,   779,   503,    -1,    22,   555,    -1,
      28,    84,   773,   541,    -1,   429,    84,   773,    -1,   133,
      84,   184,   148,   773,   590,    -1,   133,    84,   773,   590,
      -1,   364,   235,    -1,   364,   422,    -1,   364,   553,    -1,
     335,   553,    -1,   503,    -1,   426,   715,    -1,    -1,   548,
      -1,   364,   548,    -1,    22,   548,    -1,   133,   563,    -1,
     499,    -1,   502,   487,   499,    -1,   281,   483,   498,   484,
      -1,   364,   105,    -1,    -1,   109,   773,    -1,   109,   307,
     773,    -1,   109,    26,    -1,   109,   307,    26,    -1,    28,
     350,   773,   331,   403,   773,    -1,    28,   392,   673,   331,
     403,   773,    -1,    28,   392,   184,   148,   673,   331,   403,
     773,    -1,    28,   358,   771,   331,   403,   773,    -1,    28,
     358,   184,   148,   771,   331,   403,   773,    -1,    28,   438,
     771,   331,   403,   773,    -1,    28,   438,   184,   148,   771,
     331,   403,   773,    -1,    28,   193,   771,   331,   403,   773,
      -1,    28,   193,   184,   148,   771,   331,   403,   773,    -1,
      28,   392,   673,   331,   507,   773,   403,   773,    -1,    28,
     392,   184,   148,   673,   331,   507,   773,   403,   773,    -1,
      28,   392,   673,   331,    84,   773,   403,   773,    -1,    28,
     392,   184,   148,   673,   331,    84,   773,   403,   773,    -1,
      74,    -1,    -1,   512,   203,   209,   510,   509,   515,   517,
      -1,   613,    -1,   290,   518,   431,   613,    -1,   483,   522,
     484,   613,    -1,   483,   522,   484,   290,   518,   431,   613,
      -1,   113,   432,    -1,   771,    -1,   771,    35,   779,    -1,
     483,   524,   484,   679,    -1,   277,    84,   773,    -1,    -1,
     618,    -1,    -1,   779,   765,    -1,   525,   472,   715,    -1,
     483,   519,   484,   472,   715,    -1,   277,    82,   511,   129,
     424,   364,   523,   679,    -1,   277,    82,   511,   129,   263,
      -1,    -1,   779,   520,   521,   631,   632,    -1,   720,   520,
     521,   631,   632,    -1,   483,   715,   484,   520,   521,   631,
     632,    -1,   338,   768,    -1,    -1,   425,    -1,   391,    -1,
     525,    -1,   519,   487,   525,    -1,    72,   782,    -1,    -1,
     782,    -1,    -1,   513,    -1,   522,   487,   513,    -1,   514,
      -1,   523,   487,   514,    -1,   516,    -1,   524,   487,   516,
      -1,   779,   765,    -1,   304,   779,    -1,   304,   779,   472,
     821,    -1,   304,   779,   483,   743,   484,    -1,    91,   584,
     358,   771,   528,    -1,    91,   584,   358,   184,   262,   148,
     771,   528,    -1,   532,    -1,    -1,   147,   773,   530,    -1,
      91,   584,   392,   845,    35,   147,   773,   530,   844,    -1,
      91,   584,   392,   184,   262,   148,   845,    35,   147,   773,
     530,   844,    -1,   483,   742,   484,    -1,    -1,    28,   358,
     771,   532,    -1,    28,   358,   184,   148,   771,   532,    -1,
     535,    -1,   532,   535,    -1,   445,    -1,   469,    -1,    -1,
       4,    -1,   474,     4,    -1,   475,     4,    -1,   537,    -1,
      35,   687,    -1,    54,   534,    -1,   104,    -1,   260,   104,
      -1,   192,   536,   534,    -1,   240,   534,    -1,   248,   534,
      -1,   260,   240,    -1,   260,   248,    -1,   291,    53,   782,
      -1,   358,   253,   782,    -1,   378,   533,   534,    -1,   336,
      -1,   336,   533,   534,    -1,    53,    -1,    -1,   777,    -1,
     474,   777,    -1,   475,   777,    -1,    18,   539,    -1,    46,
     539,    -1,   378,   539,    -1,    78,   539,    -1,   139,   539,
      -1,   343,   539,    -1,   448,    -1,   405,    -1,    -1,    91,
     584,   392,   771,   483,   572,   484,   560,   552,    -1,    91,
     584,   392,   184,   262,   148,   771,   483,   572,   484,   560,
     552,    -1,    -1,   541,   564,    -1,   579,    -1,   849,    -1,
     739,    -1,   534,    -1,   778,    -1,   261,    -1,   483,   532,
     484,    -1,    -1,   778,    -1,   260,    21,    -1,   337,    -1,
      57,    -1,   364,   267,    -1,   364,   113,    -1,    84,   773,
     547,    -1,   547,    -1,   559,    -1,    72,   782,    -1,   262,
     267,    -1,   267,    -1,   419,   571,    -1,   310,   215,   571,
      -1,    66,   483,   715,   484,   554,    -1,   113,   716,    -1,
     170,   585,    35,   183,   543,    -1,   325,   771,   574,   582,
     550,    -1,   563,   544,    -1,   277,   424,   545,    -1,   549,
      -1,   576,    -1,   549,   576,    -1,   576,   549,    -1,    -1,
     281,   483,   566,   484,    -1,    -1,   277,    78,   133,    -1,
     277,    78,   118,   346,    -1,   277,    78,   309,   346,    -1,
      -1,   483,   557,   484,    -1,   260,   195,    -1,    -1,    84,
     773,   580,    -1,   580,    -1,    77,    -1,    85,    -1,   114,
      -1,   183,    -1,   194,    -1,   380,    -1,   383,    -1,    26,
      -1,   577,    -1,   557,   487,   577,    -1,   426,   193,   568,
      -1,   115,    -1,   262,   115,    -1,   197,   116,    -1,   197,
     186,    -1,   445,   553,    -1,   445,   275,    -1,   447,   275,
      -1,    -1,   483,   567,   484,    -1,   562,   191,   556,    -1,
     562,   145,   556,    -1,    -1,   786,    -1,   262,   115,    -1,
     115,    -1,   197,   186,    -1,   197,   116,    -1,   262,   428,
      -1,   260,   195,    -1,   779,   685,   551,   575,    -1,   548,
      -1,   566,   487,   548,    -1,   570,    -1,   567,   487,   570,
      -1,   779,    -1,   565,    -1,   583,    -1,   555,    -1,   786,
     472,   542,    -1,   786,    -1,   445,   561,    -1,    -1,   581,
      -1,    -1,   779,    -1,   483,   578,   484,    -1,    -1,   575,
     546,    -1,    -1,   277,   118,   545,    -1,   786,   472,   542,
      -1,   786,    -1,   786,   485,   786,   472,   542,    -1,   786,
     485,   786,    -1,   573,    -1,   578,   487,   573,    -1,   685,
      -1,   781,   783,   478,   413,    -1,   365,   781,   783,   478,
     413,    -1,    66,   483,   715,   484,   541,    -1,   419,   483,
     578,   484,   571,   541,    -1,   419,   558,   541,    -1,   310,
     215,   483,   578,   484,   571,   541,    -1,   310,   215,   558,
     541,    -1,   163,   215,   483,   578,   484,   325,   771,   574,
     582,   550,   541,    -1,   569,    -1,   581,   487,   569,    -1,
     238,   167,    -1,   238,   295,    -1,   238,   370,    -1,    -1,
     225,   771,   562,    -1,   398,    -1,   396,    -1,   229,   398,
      -1,   229,   396,    -1,   172,   398,    -1,   172,   396,    -1,
     422,    -1,    -1,    29,    -1,    53,   113,    -1,   133,   587,
     184,   148,   589,   590,    -1,   133,   587,   589,   590,    -1,
     133,   588,   184,   148,   772,   590,    -1,   133,   588,   772,
     590,    -1,   133,   591,   773,   277,   782,   590,    -1,   133,
     591,   184,   148,   773,   277,   782,   590,    -1,   392,    -1,
     358,    -1,   168,    -1,   236,    -1,   438,    -1,   239,   438,
      -1,   193,    -1,   163,   392,    -1,    73,    -1,    88,    -1,
     380,    -1,   399,   353,   294,    -1,   399,   353,   125,    -1,
     399,   353,   397,    -1,   399,   353,    81,    -1,    20,   241,
      -1,   142,   408,    -1,   151,    -1,   163,   105,   449,    -1,
     316,    -1,   350,    -1,   361,    -1,   782,    -1,   589,   487,
     782,    -1,    57,    -1,   337,    -1,    -1,   302,    -1,   347,
      -1,   408,    -1,    91,   593,   771,   594,    35,   715,    -1,
     168,    -1,   236,    -1,   483,   484,    -1,   483,   743,   484,
      -1,   512,   424,   830,   364,   523,   663,   831,   517,    -1,
      89,   608,   771,   574,   606,   597,   602,   611,   598,   533,
     603,    -1,    89,   483,   790,   484,   403,   602,   611,   533,
     603,    -1,   166,    -1,   403,    -1,   600,   120,   778,    -1,
      -1,   610,    -1,   599,   487,   610,    -1,   426,    -1,    -1,
      35,    -1,    -1,   315,    -1,    -1,   607,    -1,   483,   612,
     484,    -1,   813,    -1,   534,    -1,   476,    -1,   483,   599,
     484,    -1,    -1,   786,   604,    -1,   445,   275,    -1,    -1,
     607,   609,    -1,    -1,    49,    -1,    -1,    49,    -1,   275,
      -1,   165,    -1,   119,   601,   778,    -1,   267,   601,   778,
      -1,    93,    -1,   179,    -1,   317,   601,   778,    -1,   141,
     601,   778,    -1,   162,   317,   578,    -1,   162,   317,   476,
      -1,   162,   262,   267,   578,    -1,   162,   267,   578,    -1,
     137,   778,    -1,   813,    -1,   778,    -1,   381,    -1,   382,
      -1,   605,    -1,   612,   487,   605,    -1,   615,    -1,   614,
      -1,   483,   615,   484,    -1,   483,   614,   484,    -1,   617,
      -1,   616,   628,    -1,   616,   627,   655,   634,    -1,   616,
     627,   633,   656,    -1,   618,   616,    -1,   618,   616,   628,
      -1,   618,   616,   627,   655,   634,    -1,   618,   616,   627,
     633,   656,    -1,   617,    -1,   614,    -1,   357,   626,   767,
     621,   663,   679,   650,   654,   724,   638,    -1,   357,   625,
     768,   621,   663,   679,   650,   654,   724,   638,    -1,   662,
      -1,   392,   673,    -1,   616,   418,   624,   616,    -1,   616,
     207,   624,   616,    -1,   616,   143,   624,   616,    -1,   445,
     619,    -1,   469,   619,    -1,   445,   323,   619,    -1,   620,
      -1,   619,   487,   620,    -1,   773,   784,    35,   483,   790,
     484,    -1,   209,   622,    -1,    -1,   398,   623,   771,    -1,
     396,   623,   771,    -1,   229,   398,   623,   771,    -1,   229,
     396,   623,   771,    -1,   172,   398,   623,   771,    -1,   172,
     396,   623,   771,    -1,   422,   623,   771,    -1,   392,   771,
      -1,   771,    -1,   392,    -1,    -1,    26,    -1,   128,    -1,
      -1,   128,    -1,   128,   277,   483,   742,   484,    -1,    26,
      -1,    -1,   628,    -1,    -1,   283,    53,   629,    -1,   630,
      -1,   629,   487,   630,    -1,   715,   426,   739,   632,    -1,
     715,   631,   632,    -1,    36,    -1,   122,    -1,    -1,   468,
     158,    -1,   468,   219,    -1,    -1,   635,   636,    -1,   636,
     635,    -1,   635,    -1,   636,    -1,   633,    -1,    -1,   226,
     644,    -1,   226,   644,   487,   645,    -1,   156,   649,   646,
     648,   278,    -1,   156,   649,   648,   278,    -1,   274,   645,
      -1,   274,   646,   648,    -1,     4,   478,    -1,     9,   478,
      -1,     4,   299,    -1,     9,   299,    -1,     9,    -1,     9,
     346,    -1,   426,   348,   640,    -1,    -1,   779,    -1,    -1,
     639,   483,   637,   484,   643,    -1,   637,    -1,   637,   483,
     779,   484,    -1,   637,   483,   779,   487,     9,   484,    -1,
     394,   640,    -1,   641,    -1,    -1,   332,   483,     9,   484,
      -1,    -1,   715,    -1,    26,    -1,   715,    -1,   717,    -1,
     474,   647,    -1,   475,   647,    -1,   777,    -1,     4,    -1,
     345,    -1,   346,    -1,   158,    -1,   259,    -1,   175,    53,
     651,    -1,    -1,   652,    -1,   651,   487,   652,    -1,   715,
      -1,   653,    -1,   483,   484,    -1,   178,   715,    -1,    -1,
     657,    -1,   161,   319,   278,    -1,   655,    -1,    -1,   658,
      -1,   657,   658,    -1,   659,   660,   661,    -1,   161,   424,
      -1,   161,   260,   215,   424,    -1,   161,   367,    -1,   161,
     215,   367,    -1,   272,   770,    -1,    -1,   266,    -1,   371,
     234,    -1,    -1,   432,   483,   742,   484,    -1,   662,   487,
     483,   742,   484,    -1,   166,   664,    -1,    -1,   665,    -1,
     664,   487,   665,    -1,   673,   668,   642,    -1,   674,   669,
     642,    -1,   220,   674,   669,    -1,   614,   668,   642,    -1,
     220,   614,   668,    -1,   666,    -1,   483,   666,   484,   667,
      -1,   483,   666,   484,    -1,   665,    92,   214,   665,    -1,
     665,   670,   214,   665,   672,    -1,   665,   214,   665,   672,
      -1,   665,   256,   670,   214,   665,    -1,   665,   256,   214,
     665,    -1,    35,   779,   483,   772,   484,    -1,    35,   780,
      -1,   779,   483,   772,   484,    -1,   779,    -1,   667,    -1,
      -1,   667,    -1,    35,   483,   680,   484,    -1,    35,   779,
     483,   680,   484,    -1,   779,   483,   680,   484,    -1,    -1,
     167,   671,    -1,   223,   671,    -1,   341,   671,    -1,   199,
      -1,   286,    -1,    -1,   426,   483,   772,   484,    -1,   277,
     715,    -1,   771,    -1,   771,   476,    -1,   278,   771,    -1,
     278,   483,   771,   484,    -1,   720,   678,    -1,   346,   166,
     483,   676,   484,   678,    -1,   720,   677,    -1,   675,    -1,
     676,   487,   675,    -1,    35,   483,   680,   484,    -1,    -1,
     469,   284,    -1,    -1,   442,   715,    -1,    -1,   681,    -1,
     680,   487,   681,    -1,   779,   685,   682,    -1,    72,   782,
      -1,    -1,   779,   685,    -1,   683,   487,   779,   685,    -1,
     345,    -1,   386,    -1,   687,   686,    -1,   365,   687,   686,
      -1,   687,    34,   481,   777,   482,    -1,   365,   687,    34,
     481,   777,   482,    -1,   687,    34,    -1,   365,   687,    34,
      -1,   684,   483,   683,   484,    -1,   686,   481,   482,    -1,
     686,   481,   777,   482,    -1,    -1,   689,    -1,   691,    -1,
     693,    -1,   697,    -1,   703,    -1,   704,   714,    -1,   704,
     483,   777,   484,    -1,   691,    -1,   694,    -1,   698,    -1,
     703,    -1,   781,   690,    -1,   781,   783,   690,    -1,   483,
     742,   484,    -1,    -1,   205,    -1,   206,    -1,   372,    -1,
      48,    -1,   320,    -1,   159,   692,    -1,   132,   306,    -1,
     111,   690,    -1,   110,   690,    -1,   270,   690,    -1,    51,
      -1,   483,   777,   484,    -1,    -1,   695,    -1,   696,    -1,
     695,    -1,   696,    -1,    50,   702,   483,   742,   484,    -1,
      50,   702,    -1,   699,    -1,   700,    -1,   699,    -1,   700,
      -1,   701,   483,   777,   484,    -1,   701,    -1,    64,   702,
      -1,    63,   702,    -1,   433,    -1,   255,    64,   702,    -1,
     255,    63,   702,    -1,   257,   702,    -1,   435,    -1,    -1,
     402,   483,   777,   484,   705,    -1,   402,   705,    -1,   401,
     483,   777,   484,   705,    -1,   401,   705,    -1,   208,    -1,
     469,   401,   466,    -1,   447,   401,   466,    -1,    -1,   463,
      -1,   464,    -1,   250,    -1,   251,    -1,   107,    -1,   108,
      -1,   181,    -1,   182,    -1,   246,    -1,   247,    -1,   354,
      -1,   355,    -1,   244,    -1,   245,    -1,   242,    -1,   243,
      -1,   706,    -1,   707,    -1,   708,    -1,   709,    -1,   710,
      -1,   711,    -1,   712,    -1,   713,    -1,   706,   403,   707,
      -1,   708,   403,   709,    -1,   708,   403,   710,    -1,   708,
     403,   711,    -1,   709,   403,   710,    -1,   709,   403,   711,
      -1,   710,   403,   711,    -1,    -1,   717,    -1,   715,    11,
     685,    -1,   715,    72,   782,    -1,   715,    40,   401,   466,
     715,    -1,   474,   715,    -1,   475,   715,    -1,   715,   474,
     715,    -1,   715,   475,   715,    -1,   715,   476,   715,    -1,
     715,   477,   715,    -1,   715,   478,   715,    -1,   715,   479,
     715,    -1,   715,   470,   715,    -1,   715,   471,   715,    -1,
     715,   472,   715,    -1,   715,    15,   715,    -1,   715,    16,
     715,    -1,   715,    17,   715,    -1,   715,   738,   715,    -1,
     738,   715,    -1,   715,   738,    -1,   715,    32,   715,    -1,
     715,   282,   715,    -1,   262,   715,    -1,   467,   715,    -1,
     715,   171,   715,    -1,   715,   225,   715,    -1,   715,   225,
     715,   141,   715,    -1,   715,   467,   225,   715,    -1,   715,
     467,   225,   715,   141,   715,    -1,   715,   185,   715,    -1,
     715,   185,   715,   141,   715,    -1,   715,   467,   185,   715,
      -1,   715,   467,   185,   715,   141,   715,    -1,   715,   369,
     403,   715,    -1,   715,   369,   403,   715,   141,   715,    -1,
     715,   467,   369,   403,   715,    -1,   715,   467,   369,   403,
     715,   141,   715,    -1,   715,   211,   267,    -1,   715,   212,
      -1,   715,   211,   262,   267,    -1,   715,   262,   267,    -1,
     715,   265,    -1,   734,   288,   734,    -1,   734,    -1,   715,
     211,   410,    -1,   715,   211,   262,   410,    -1,   715,   211,
     154,    -1,   715,   211,   262,   154,    -1,   715,   211,   420,
      -1,   715,   211,   262,   420,    -1,   715,   211,   128,   166,
     715,    -1,   715,   211,   262,   128,   166,   715,    -1,   715,
     211,   272,   483,   745,   484,    -1,   715,   211,   262,   272,
     483,   745,   484,    -1,   715,    47,   766,   716,    32,   715,
      -1,   715,   467,    47,   766,   716,    32,   715,    -1,   715,
      47,   389,   716,    32,   715,    -1,   715,   467,    47,   389,
     716,    32,   715,    -1,   715,   190,   755,    -1,   715,   467,
     190,   755,    -1,   715,   740,   735,   614,    -1,   715,   740,
     735,   483,   715,   484,    -1,   113,    -1,   717,    -1,   716,
      11,   685,    -1,   474,   716,    -1,   475,   716,    -1,   716,
     474,   716,    -1,   716,   475,   716,    -1,   716,   476,   716,
      -1,   716,   477,   716,    -1,   716,   478,   716,    -1,   716,
     479,   716,    -1,   716,   470,   716,    -1,   716,   471,   716,
      -1,   716,   472,   716,    -1,   716,    15,   716,    -1,   716,
      16,   716,    -1,   716,    17,   716,    -1,   716,   738,   716,
      -1,   738,   716,    -1,   716,   738,    -1,   716,   211,   128,
     166,   716,    -1,   716,   211,   262,   128,   166,   716,    -1,
     716,   211,   272,   483,   745,   484,    -1,   716,   211,   262,
     272,   483,   745,   484,    -1,   761,    -1,   776,    -1,   488,
     765,    -1,    10,   765,    -1,   483,   715,   484,   765,    -1,
     756,    -1,   719,    -1,   614,    -1,   614,   764,    -1,   148,
     614,    -1,   775,   483,   484,    -1,   775,   483,   743,   627,
     484,    -1,   775,   483,   434,   744,   627,   484,    -1,   775,
     483,   743,   487,   434,   744,   627,   484,    -1,   775,   483,
      26,   743,   627,   484,    -1,   775,   483,   128,   743,   627,
     484,    -1,   775,   483,   476,   484,    -1,   718,   722,   723,
     727,    -1,   721,    -1,   718,    -1,   721,    -1,    73,   161,
     483,   715,   484,    -1,    97,    -1,   100,    -1,   100,   483,
     777,   484,    -1,   101,    -1,   101,   483,   777,   484,    -1,
     230,    -1,   230,   483,   777,   484,    -1,   231,    -1,   231,
     483,   777,   484,    -1,    98,    -1,   102,    -1,   363,    -1,
     425,    -1,    96,    -1,    99,    -1,    60,   483,   715,    35,
     685,   484,    -1,   153,   483,   746,   484,    -1,   289,   483,
     748,   484,    -1,   303,   483,   750,   484,    -1,   388,   483,
     751,   484,    -1,   407,   483,   715,    35,   685,   484,    -1,
     409,   483,    52,   754,   484,    -1,   409,   483,   221,   754,
     484,    -1,   409,   483,   404,   754,   484,    -1,   409,   483,
     754,   484,    -1,   268,   483,   715,   487,   715,   484,    -1,
      71,   483,   742,   484,    -1,   446,   175,   483,   628,   484,
      -1,    -1,   157,   483,   442,   715,   484,    -1,    -1,   444,
     725,    -1,    -1,   726,    -1,   725,   487,   726,    -1,   779,
      35,   728,    -1,   287,   728,    -1,   287,   779,    -1,    -1,
     483,   729,   730,   627,   731,   484,    -1,   779,    -1,    -1,
     296,    53,   742,    -1,    -1,   318,   732,    -1,   346,   732,
      -1,    -1,   733,    -1,    47,   733,    32,   733,    -1,   415,
     305,    -1,   415,   160,    -1,    95,   345,    -1,   715,   305,
      -1,   715,   160,    -1,   345,   483,   742,   484,    -1,   345,
     483,   484,    -1,   483,   742,   487,   715,   484,    -1,    33,
      -1,   374,    -1,    26,    -1,     8,    -1,   737,    -1,   474,
      -1,   475,    -1,   476,    -1,   477,    -1,   478,    -1,   479,
      -1,   470,    -1,   471,    -1,   472,    -1,    15,    -1,    16,
      -1,    17,    -1,     8,    -1,   279,   483,   741,   484,    -1,
     736,    -1,   279,   483,   741,   484,    -1,   736,    -1,   279,
     483,   741,   484,    -1,   225,    -1,   467,   225,    -1,   171,
      -1,   467,   171,    -1,   185,    -1,   467,   185,    -1,   736,
      -1,   779,   485,   741,    -1,   715,    -1,   742,   487,   715,
      -1,   744,    -1,   743,   487,   744,    -1,   715,    -1,   785,
      13,   715,    -1,   785,    14,   715,    -1,   685,    -1,   745,
     487,   685,    -1,   747,   166,   715,    -1,    -1,     3,    -1,
     706,    -1,   707,    -1,   708,    -1,   709,    -1,   710,    -1,
     711,    -1,   712,    -1,   713,    -1,   778,    -1,   715,   749,
     752,   753,    -1,   715,   749,   752,    -1,   300,   715,    -1,
     716,   190,   716,    -1,    -1,   715,   752,   753,    -1,   715,
     753,   752,    -1,   715,   752,    -1,   715,   753,    -1,   742,
      -1,    -1,   166,   715,    -1,   161,   715,    -1,   715,   166,
     742,    -1,   166,   742,    -1,   742,    -1,   614,    -1,   483,
     742,   484,    -1,    59,   760,   757,   759,   139,    -1,   758,
      -1,   757,   758,    -1,   441,   715,   400,   715,    -1,   135,
     715,    -1,    -1,   715,    -1,    -1,   779,    -1,   779,   764,
      -1,   485,   774,    -1,   485,   476,    -1,   481,   715,   482,
      -1,   481,   763,   489,   763,   482,    -1,   715,    -1,    -1,
     762,    -1,   764,   762,    -1,    -1,   765,   762,    -1,    39,
      -1,    -1,   768,    -1,    -1,   769,    -1,   768,   487,   769,
      -1,   715,    35,   787,    -1,   715,     3,    -1,   715,    -1,
     476,    -1,   771,    -1,   770,   487,   771,    -1,   779,    -1,
     779,   764,    -1,   773,    -1,   772,   487,   773,    -1,   779,
      -1,   786,    -1,   781,    -1,   779,   764,    -1,   777,    -1,
       4,    -1,   778,    -1,     6,    -1,     7,    -1,   775,   778,
      -1,   775,   483,   743,   627,   484,   778,    -1,   688,   778,
      -1,   704,   483,   715,   484,   714,    -1,   704,   777,   714,
      -1,   704,   778,   714,    -1,   410,    -1,   154,    -1,   267,
      -1,     9,    -1,     5,    -1,     3,    -1,   846,    -1,   847,
      -1,   779,    -1,     5,    -1,     3,    -1,   846,    -1,   848,
      -1,   779,    -1,   779,   783,    -1,   485,   774,    -1,   783,
     485,   774,    -1,   483,   772,   484,    -1,    -1,   781,    -1,
       3,    -1,   846,    -1,   847,    -1,   848,    -1,   849,    -1,
     786,    -1,     5,    -1,   307,   773,   789,    35,   790,    -1,
     483,   745,   484,    -1,    -1,   613,    -1,   508,    -1,   595,
      -1,   829,    -1,    91,   350,   779,   792,    -1,    91,   350,
     184,   262,   148,   779,   792,    -1,   792,   793,    -1,    -1,
     540,    -1,   794,    -1,   527,    -1,   841,    -1,    91,   800,
     193,   797,   798,   277,   771,   796,   483,   524,   484,   799,
     679,    -1,    91,   800,   193,   797,   184,   262,   148,   568,
     277,   771,   796,   483,   524,   484,   799,   679,    -1,   779,
      -1,   426,   795,    -1,    -1,    80,    -1,    -1,   568,    -1,
      -1,   445,   553,    -1,    -1,   419,    -1,    -1,    28,   392,
     673,   364,   350,   773,    -1,    28,   392,   184,   148,   673,
     364,   350,   773,    -1,    28,   358,   771,   364,   350,   773,
      -1,    28,   358,   184,   148,   771,   364,   350,   773,    -1,
      28,   438,   771,   364,   350,   773,    -1,    28,   438,   184,
     148,   771,   364,   350,   773,    -1,   162,    67,    -1,    67,
      -1,   150,   106,   778,   603,    -1,   189,   106,   778,    -1,
     149,   808,    -1,   149,   812,   806,   808,    -1,   149,   436,
     808,    -1,   149,   483,   811,   484,   808,    -1,   436,    -1,
      -1,   813,    -1,   534,    -1,    -1,   613,    -1,   508,    -1,
     595,    -1,   829,    -1,   843,    -1,     3,    -1,   846,    -1,
     847,    -1,   848,    -1,   809,    -1,   778,    -1,   814,    -1,
     811,   487,   814,    -1,    31,    -1,    30,    -1,   410,    -1,
     154,    -1,   277,    -1,   810,    -1,   815,   807,    -1,   809,
      -1,   812,    -1,   364,   817,    -1,   364,   229,   817,    -1,
     364,   362,   817,    -1,   818,    -1,   839,   166,    95,    -1,
     401,   466,   820,    -1,   350,   778,    -1,   839,   403,   821,
      -1,   839,   472,   821,    -1,   839,   403,   113,    -1,   839,
     472,   113,    -1,   813,    -1,   534,    -1,   778,    -1,     3,
      -1,   704,   778,   714,    -1,   704,   483,   777,   484,   778,
      -1,   534,    -1,   113,    -1,   229,    -1,   819,    -1,   821,
     487,   819,    -1,   228,   823,    -1,   778,    -1,   427,   826,
     828,   806,    -1,   427,   826,   828,   806,   771,    -1,   427,
     826,   828,   806,   833,    -1,   427,   483,   827,   484,    -1,
     427,   483,   827,   484,   771,   784,    -1,   812,    -1,   436,
      -1,   165,    -1,   167,    -1,     3,    -1,   167,    -1,    -1,
     825,    -1,   827,   487,   825,    -1,   165,    -1,    -1,   512,
     118,   166,   830,   832,   831,   517,    -1,   673,    -1,   673,
     779,    -1,   673,    35,   779,    -1,   442,   715,    -1,    -1,
     426,   664,    -1,    -1,   812,   806,    -1,   812,   806,   771,
     784,    -1,   335,   836,    -1,   839,    -1,    26,    -1,   835,
      -1,   401,   466,    -1,   405,   213,   224,    -1,   838,   613,
      -1,   838,   839,    -1,   838,   401,   466,    -1,   838,   405,
     213,   224,    -1,   838,    26,    -1,   368,    -1,   123,    -1,
     779,    -1,   839,   485,   779,    -1,    55,   718,    -1,    91,
     584,   438,   771,   574,   799,    35,   613,   842,    -1,    91,
     282,   333,   584,   438,   771,   574,   799,    35,   613,   842,
      -1,    91,   584,   323,   438,   771,   483,   578,   484,   799,
      35,   613,   842,    -1,    91,   282,   333,   584,   323,   438,
     771,   483,   578,   484,   799,    35,   613,   842,    -1,   445,
      66,   280,    -1,   445,    58,    66,   280,    -1,   445,   229,
      66,   280,    -1,    -1,    91,   584,   392,   845,    35,   613,
     844,    -1,    91,   584,   392,   184,   262,   148,   845,    35,
     613,   844,    -1,   445,   105,    -1,   445,   260,   105,    -1,
      -1,   771,   574,   560,   552,    -1,    18,    -1,    19,    -1,
      20,    -1,    21,    -1,    22,    -1,    23,    -1,    24,    -1,
      25,    -1,    27,    -1,    28,    -1,    29,    -1,    37,    -1,
      38,    -1,    40,    -1,    41,    -1,    42,    -1,    44,    -1,
      45,    -1,    46,    -1,    53,    -1,    54,    -1,    55,    -1,
      56,    -1,    57,    -1,    58,    -1,    61,    -1,    62,    -1,
      65,    -1,    67,    -1,    68,    -1,    69,    -1,    70,    -1,
      75,    -1,    76,    -1,    77,    -1,    78,    -1,    79,    -1,
      81,    -1,    82,    -1,    83,    -1,    85,    -1,    86,    -1,
      87,    -1,    88,    -1,    89,    -1,    90,    -1,    93,    -1,
      94,    -1,    95,    -1,   103,    -1,   104,    -1,   105,    -1,
     106,    -1,   107,    -1,   108,    -1,   109,    -1,   112,    -1,
     114,    -1,   116,    -1,   117,    -1,   118,    -1,   119,    -1,
     120,    -1,   121,    -1,   123,    -1,   124,    -1,   125,    -1,
     126,    -1,   127,    -1,   130,    -1,   131,    -1,   132,    -1,
     133,    -1,   134,    -1,   136,    -1,   137,    -1,   138,    -1,
     140,    -1,   141,    -1,   142,    -1,   144,    -1,   145,    -1,
     146,    -1,   147,    -1,   149,    -1,   150,    -1,   151,    -1,
     152,    -1,   155,    -1,   157,    -1,   158,    -1,   160,    -1,
     162,    -1,   164,    -1,   168,    -1,   169,    -1,   170,    -1,
     172,    -1,   174,    -1,   177,    -1,   179,    -1,   180,    -1,
     181,    -1,   182,    -1,   183,    -1,   184,    -1,   186,    -1,
     187,    -1,   188,    -1,   189,    -1,   191,    -1,   192,    -1,
     193,    -1,   194,    -1,   195,    -1,   196,    -1,   198,    -1,
     201,    -1,   202,    -1,   203,    -1,   204,    -1,   210,    -1,
     213,    -1,   215,    -1,   216,    -1,   217,    -1,   218,    -1,
     219,    -1,   222,    -1,   224,    -1,   227,    -1,   228,    -1,
     229,    -1,   232,    -1,   233,    -1,   234,    -1,   235,    -1,
     236,    -1,   237,    -1,   238,    -1,   239,    -1,   240,    -1,
     241,    -1,   242,    -1,   243,    -1,   244,    -1,   245,    -1,
     246,    -1,   247,    -1,   248,    -1,   249,    -1,   250,    -1,
     251,    -1,   252,    -1,   253,    -1,   254,    -1,   258,    -1,
     259,    -1,   260,    -1,   263,    -1,   264,    -1,   266,    -1,
     269,    -1,   271,    -1,   272,    -1,   273,    -1,   275,    -1,
     276,    -1,   279,    -1,   280,    -1,   281,    -1,   284,    -1,
     287,    -1,   290,    -1,   291,    -1,   292,    -1,   293,    -1,
     294,    -1,   295,    -1,   296,    -1,   297,    -1,   298,    -1,
     299,    -1,   301,    -1,   302,    -1,   304,    -1,   305,    -1,
     307,    -1,   308,    -1,   309,    -1,   311,    -1,   312,    -1,
     313,    -1,   314,    -1,   315,    -1,   316,    -1,   317,    -1,
     318,    -1,   319,    -1,   321,    -1,   322,    -1,   323,    -1,
     324,    -1,   326,    -1,   327,    -1,   328,    -1,   329,    -1,
     330,    -1,   331,    -1,   332,    -1,   333,    -1,   334,    -1,
     335,    -1,   336,    -1,   337,    -1,   339,    -1,   340,    -1,
     342,    -1,   343,    -1,   344,    -1,   346,    -1,   347,    -1,
     348,    -1,   349,    -1,   350,    -1,   351,    -1,   352,    -1,
     353,    -1,   354,    -1,   355,    -1,   356,    -1,   358,    -1,
     359,    -1,   360,    -1,   361,    -1,   362,    -1,   364,    -1,
     366,    -1,   367,    -1,   368,    -1,   370,    -1,   371,    -1,
     373,    -1,   375,    -1,   376,    -1,   377,    -1,   378,    -1,
     379,    -1,   380,    -1,   381,    -1,   382,    -1,   383,    -1,
     384,    -1,   385,    -1,   387,    -1,   390,    -1,   391,    -1,
     393,    -1,   395,    -1,   396,    -1,   397,    -1,   398,    -1,
     399,    -1,   405,    -1,   406,    -1,   408,    -1,   411,    -1,
     412,    -1,   413,    -1,   414,    -1,   415,    -1,   416,    -1,
     417,    -1,   420,    -1,   421,    -1,   422,    -1,   423,    -1,
     424,    -1,   427,    -1,   428,    -1,   429,    -1,   430,    -1,
     431,    -1,   435,    -1,   437,    -1,   438,    -1,   439,    -1,
     440,    -1,   443,    -1,   446,    -1,   447,    -1,   448,    -1,
     449,    -1,   450,    -1,   451,    -1,   463,    -1,   464,    -1,
     465,    -1,   466,    -1,    47,    -1,    48,    -1,    50,    -1,
      51,    -1,    63,    -1,    64,    -1,    71,    -1,   110,    -1,
     111,    -1,   148,    -1,   153,    -1,   159,    -1,   176,    -1,
     200,    -1,   205,    -1,   206,    -1,   208,    -1,   255,    -1,
     257,    -1,   261,    -1,   268,    -1,   270,    -1,   285,    -1,
     289,    -1,   303,    -1,   306,    -1,   320,    -1,   345,    -1,
     365,    -1,   372,    -1,   386,    -1,   388,    -1,   401,    -1,
     402,    -1,   407,    -1,   409,    -1,   432,    -1,   433,    -1,
     452,    -1,   453,    -1,   454,    -1,   455,    -1,   456,    -1,
     457,    -1,   458,    -1,   459,    -1,   460,    -1,   461,    -1,
     462,    -1,    43,    -1,    49,    -1,    73,    -1,    80,    -1,
      92,    -1,    99,    -1,   165,    -1,   167,    -1,   171,    -1,
     185,    -1,   199,    -1,   211,    -1,   212,    -1,   214,    -1,
     223,    -1,   225,    -1,   256,    -1,   265,    -1,   286,    -1,
     288,    -1,   341,    -1,   369,    -1,   394,    -1,   436,    -1,
      26,    -1,    30,    -1,    31,    -1,    32,    -1,    33,    -1,
      34,    -1,    35,    -1,    36,    -1,    39,    -1,    52,    -1,
      59,    -1,    60,    -1,    66,    -1,    72,    -1,    74,    -1,
      84,    -1,    91,    -1,    96,    -1,    97,    -1,    98,    -1,
     100,    -1,   101,    -1,   102,    -1,   113,    -1,   115,    -1,
     122,    -1,   128,    -1,   129,    -1,   135,    -1,   139,    -1,
     143,    -1,   154,    -1,   156,    -1,   161,    -1,   163,    -1,
     166,    -1,   173,    -1,   175,    -1,   178,    -1,   190,    -1,
     197,    -1,   207,    -1,   209,    -1,   220,    -1,   221,    -1,
     226,    -1,   230,    -1,   231,    -1,   262,    -1,   267,    -1,
     274,    -1,   277,    -1,   278,    -1,   282,    -1,   283,    -1,
     300,    -1,   310,    -1,   325,    -1,   338,    -1,   357,    -1,
     363,    -1,   374,    -1,   389,    -1,   392,    -1,   400,    -1,
     403,    -1,   404,    -1,   410,    -1,   418,    -1,   419,    -1,
     425,    -1,   426,    -1,   434,    -1,   441,    -1,   442,    -1,
     444,    -1,   445,    -1
};

/* YYRLINE[YYN] -- source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,   457,   457,   473,   485,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   528,     9,
      18,    27,    36,    45,    54,    63,    72,    85,    87,    93,
      94,    99,   103,   107,   118,   126,   130,   139,   148,   157,
     166,   175,   184,   192,   200,   209,   218,   227,   236,   253,
     262,   271,   280,   290,   303,   318,   327,   335,   350,   358,
     368,   378,   385,   392,   400,   407,   418,   419,   424,   428,
     433,   438,   446,   447,   452,   456,   457,     7,    13,    19,
      25,     6,    15,    25,    35,    45,    55,    65,    75,    85,
      95,   106,   117,   127,   140,   141,     8,    21,    27,    34,
      40,    47,    57,    61,    70,    79,    88,    95,    96,   101,
     113,   118,   143,   153,   163,   169,   180,   191,   206,   207,
     213,   214,   219,   220,   226,   227,   231,   232,   237,   239,
     245,   246,   250,   251,   256,     7,    14,    22,     9,    19,
      32,    33,     7,    14,    31,    51,    52,     9,    17,    29,
      30,    34,    35,    36,    41,    42,    43,    48,    52,    56,
      60,    64,    68,    72,    76,    80,    84,    88,    92,    97,
     101,   105,   112,   113,   117,   118,   119,     2,     9,    15,
      21,    28,    35,    45,    46,    47,     7,    21,    41,    42,
      69,    70,    71,    72,    73,    74,    78,    79,    84,    89,
      90,    91,    92,    93,    98,   105,   106,   107,   124,   131,
     138,   148,   158,   170,   179,   188,   207,   214,   219,   221,
     223,   225,   228,   233,   234,   238,   239,   240,   241,   246,
     250,   251,   256,   263,   268,   269,   270,   271,   272,   273,
     274,   275,   281,   282,   286,   291,   298,   305,   312,   324,
     325,   326,   327,   331,   336,   337,   338,   343,   348,   349,
     350,   351,   352,   353,   358,   381,   385,   392,   393,   397,
     401,   402,   403,   407,   411,   419,   420,   425,   426,   430,
     438,   439,   444,   445,   449,   454,   458,   462,   467,   475,
     476,   480,   481,   487,   498,   511,   525,   539,   553,   567,
     590,   594,   601,   605,   613,   618,   625,   635,   636,   637,
     638,   639,   646,   653,   654,   659,   660,     9,    19,    29,
      39,    49,    59,    73,    74,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    86,    87,    92,    93,
      94,    95,    96,    97,    98,   103,   104,   109,   110,   111,
     116,   117,   118,     7,    18,    19,    23,    27,     7,     1,
      30,    53,    54,    59,    63,    68,    72,    80,    81,    85,
      86,    91,    92,    96,    97,   102,   103,   104,   105,   106,
     111,   119,   123,   128,   129,   134,   138,   143,   147,   151,
     155,   159,   163,   167,   171,   175,   179,   183,   187,   191,
     195,   203,   209,   210,   211,   216,   220,    47,    48,    52,
      53,    68,    69,    76,    84,    92,   100,   108,   116,   127,
     128,   155,   170,   186,   187,   206,   210,   214,   231,   238,
     245,   255,   256,   259,   271,   282,   290,   295,   300,   305,
     310,   318,   326,   331,   336,   343,   344,   348,   349,   350,
     357,   358,   362,   363,   367,   368,   372,   376,   377,   380,
     389,   400,   401,   402,   405,   406,   407,   411,   412,   413,
     414,   418,   419,   423,   425,   441,   443,   448,   451,   459,
     463,   467,   471,   475,   479,   486,   491,   498,   499,   503,
     507,   511,   515,   522,   529,   530,   535,   536,   540,   541,
     549,   569,   570,   572,   577,   578,   582,   583,   586,   587,
     612,   613,   617,   618,   622,   623,   627,   640,   641,   645,
     646,   650,   651,   655,   656,   660,   671,   672,   673,   674,
     678,   679,   684,   685,   686,   695,   701,   719,   720,   724,
     725,   731,   737,   745,   753,   789,   815,   819,   845,   849,
     862,   876,   891,   903,   919,   925,   930,   936,   943,   944,
     952,   956,   960,   966,   973,   978,   979,   980,   981,   985,
     986,   998,   999,  1004,  1011,  1018,  1025,  1057,  1068,  1081,
    1086,  1087,  1090,  1091,  1094,  1095,  1100,  1101,  1106,  1110,
    1116,  1137,  1145,  1158,  1161,  1165,  1165,  1167,  1172,  1179,
    1184,  1190,  1195,  1201,  1209,  1211,  1214,  1218,  1219,  1220,
    1221,  1222,  1223,  1228,  1248,  1249,  1250,  1251,  1262,  1268,
    1276,  1277,  1283,  1288,  1293,  1298,  1303,  1308,  1313,  1318,
    1324,  1330,  1336,  1343,  1365,  1374,  1378,  1386,  1390,  1398,
    1410,  1431,  1435,  1441,  1445,  1458,  1466,  1476,  1478,  1480,
    1482,  1484,  1486,  1491,  1492,  1499,  1508,  1516,  1525,  1536,
    1544,  1545,  1546,  1550,  1550,  1553,  1553,  1556,  1556,  1559,
    1559,  1562,  1562,  1565,  1565,  1568,  1568,  1571,  1571,  1574,
    1576,  1578,  1580,  1582,  1584,  1586,  1588,  1590,  1595,  1600,
    1606,  1613,  1618,  1624,  1630,  1661,  1662,  1664,  1672,  1687,
    1689,  1691,  1693,  1695,  1697,  1699,  1701,  1703,  1705,  1707,
    1709,  1711,  1713,  1716,  1718,  1720,  1723,  1725,  1727,  1729,
    1732,  1737,  1742,  1749,  1754,  1761,  1766,  1774,  1779,  1788,
    1796,  1804,  1812,  1830,  1838,  1846,  1854,  1862,  1870,  1886,
    1890,  1898,  1906,  1914,  1922,  1930,  1938,  1942,  1946,  1950,
    1954,  1962,  1970,  1978,  1986,  2006,  2028,  2039,  2046,  2071,
    2073,  2075,  2077,  2079,  2081,  2083,  2085,  2087,  2089,  2091,
    2093,  2095,  2097,  2099,  2101,  2103,  2105,  2107,  2109,  2113,
    2117,  2121,  2135,  2136,  2137,  2149,  2164,  2176,  2178,  2180,
    2191,  2215,  2228,  2232,  2238,  2245,  2252,  2262,  2269,  2297,
    2332,  2343,  2344,  2351,  2357,  2361,  2365,  2369,  2373,  2377,
    2381,  2385,  2389,  2393,  2397,  2401,  2405,  2409,  2413,  2417,
    2419,  2423,  2432,  2437,  2444,  2459,  2466,  2470,  2474,  2478,
    2482,  2496,  2497,  2501,  2502,  2510,  2511,  2515,  2516,  2521,
    2529,  2531,  2545,  2548,  2575,  2576,  2579,  2580,  2591,  2609,
    2616,  2625,  2642,  2687,  2695,  2703,  2711,  2719,  2740,  2741,
    2742,  2745,  2746,  2747,  2750,  2751,  2754,  2755,  2756,  2757,
    2758,  2759,  2760,  2761,  2762,  2763,  2764,  2765,  2768,  2770,
    2775,  2777,  2782,  2784,  2786,  2788,  2790,  2792,  2794,  2796,
    2810,  2812,  2816,  2820,  2827,  2831,  2837,  2841,  2850,  2861,
    2862,  2866,  2870,  2877,  2878,  2879,  2880,  2881,  2882,  2883,
    2884,  2885,  2886,  2896,  2900,  2907,  2914,  2915,  2931,  2935,
    2940,  2944,  2959,  2964,  2968,  2971,  2974,  2975,  2976,  2979,
    2986,  2996,  3010,  3011,  3015,  3026,  3027,  3030,  3031,  3034,
    3038,  3045,  3049,  3053,  3061,  3072,  3073,  3077,  3078,  3082,
    3083,  3086,  3087,  3097,  3098,  3102,  3103,  3106,  3122,  3130,
    3138,  3160,  3161,  3172,  3176,  3203,  3205,  3210,  3212,  3222,
    3224,  3235,  3239,  3243,  3247,  3251,  3260,  3267,  3299,  3303,
    3307,  3311,  3315,  3319,  3323,  3329,  3330,  3346,  3347,  3348,
    3351,  3352,  3357,  3358,  3359,  3362,  3363,  3366,  3368,  3373,
    3374,  3377,  3385,  3386,  3387,  3388,  3389,  3392,  3393,     7,
      18,    19,    23,    24,    25,    26,     7,    16,    34,    41,
      46,    47,    48,    49,     8,    33,    62,    66,    67,    72,
      73,    78,    79,    83,    84,    89,    90,     7,    16,    25,
      34,    43,    52,     5,    11,     7,    20,     9,    16,    26,
      33,    44,    45,    50,    51,    52,    57,    58,    59,    60,
      61,    65,    66,    67,    68,    73,    74,    79,    83,    91,
      92,    97,    98,    99,   105,   110,   118,   119,    10,    16,
      22,    32,    33,    41,    52,    64,    72,    80,    87,    97,
      99,   105,   109,   113,   128,   135,   136,   137,   141,   142,
       7,    16,     8,    22,    36,    48,    56,    70,    71,    72,
      73,    74,    87,    88,    93,    94,    98,    99,     7,    21,
      25,    32,    43,    44,    50,    51,     9,    19,     2,     7,
      14,    24,    25,    32,     3,    10,    16,    22,    28,    37,
      37,    39,    40,     6,     8,    21,    34,    52,    74,    75,
      76,    77,    11,    24,    41,    42,    43,    48,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    63,    63,    63,    63,
      63,    63,    63,    63,    63,    63,    63,    63,    63,    63,
      63,    63,    63,    63,    63,    63,    63,    63,    63,    63,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || YYTOKEN_TABLE
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "IDENT", "FCONST", "SCONST", "BCONST",
  "XCONST", "Op", "ICONST", "PARAM", "TYPECAST", "DOT_DOT", "COLON_EQUALS",
  "EQUALS_GREATER", "LESS_EQUALS", "GREATER_EQUALS", "NOT_EQUALS",
  "ABORT_P", "ABSOLUTE_P", "ACCESS", "ACTION", "ADD_P", "ADMIN", "AFTER",
  "AGGREGATE", "ALL", "ALSO", "ALTER", "ALWAYS", "ANALYSE", "ANALYZE",
  "AND", "ANY", "ARRAY", "AS", "ASC_P", "ASSERTION", "ASSIGNMENT",
  "ASYMMETRIC", "AT", "ATTACH", "ATTRIBUTE", "AUTHORIZATION", "BACKWARD",
  "BEFORE", "BEGIN_P", "BETWEEN", "BIGINT", "BINARY", "BIT", "BOOLEAN_P",
  "BOTH", "BY", "CACHE", "CALL_P", "CALLED", "CASCADE", "CASCADED", "CASE",
  "CAST", "CATALOG_P", "CHAIN", "CHAR_P", "CHARACTER", "CHARACTERISTICS",
  "CHECK_P", "CHECKPOINT", "CLASS", "CLOSE", "CLUSTER", "COALESCE",
  "COLLATE", "COLLATION", "COLUMN", "COLUMNS", "COMMENT", "COMMENTS",
  "COMMIT", "COMMITTED", "CONCURRENTLY", "CONFIGURATION", "CONFLICT",
  "CONNECTION", "CONSTRAINT", "CONSTRAINTS", "CONTENT_P", "CONTINUE_P",
  "CONVERSION_P", "COPY", "COST", "CREATE_P", "CROSS", "CSV", "CUBE",
  "CURRENT_P", "CURRENT_CATALOG", "CURRENT_DATE", "CURRENT_ROLE",
  "CURRENT_SCHEMA", "CURRENT_TIME", "CURRENT_TIMESTAMP", "CURRENT_USER",
  "CURSOR", "CYCLE", "DATA_P", "DATABASE", "DAY_P", "DAYS_P", "DEALLOCATE",
  "DEC", "DECIMAL_P", "DECLARE", "DEFAULT", "DEFAULTS", "DEFERRABLE",
  "DEFERRED", "DEFINER", "DELETE_P", "DELIMITER", "DELIMITERS", "DEPENDS",
  "DESC_P", "DESCRIBE", "DETACH", "DICTIONARY", "DISABLE_P", "DISCARD",
  "DISTINCT", "DO", "DOCUMENT_P", "DOMAIN_P", "DOUBLE_P", "DROP", "EACH",
  "ELSE", "ENABLE_P", "ENCODING", "ENCRYPTED", "END_P", "ENUM_P", "ESCAPE",
  "EVENT", "EXCEPT", "EXCLUDE", "EXCLUDING", "EXCLUSIVE", "EXECUTE",
  "EXISTS", "EXPLAIN", "EXPORT_P", "EXTENSION", "EXTERNAL", "EXTRACT",
  "FALSE_P", "FAMILY", "FETCH", "FILTER", "FIRST_P", "FLOAT_P",
  "FOLLOWING", "FOR", "FORCE", "FOREIGN", "FORWARD", "FREEZE", "FROM",
  "FULL", "FUNCTION", "FUNCTIONS", "GENERATED", "GLOB", "GLOBAL", "GRANT",
  "GRANTED", "GROUP_P", "GROUPING", "HANDLER", "HAVING", "HEADER_P",
  "HOLD", "HOUR_P", "HOURS_P", "IDENTITY_P", "IF_P", "ILIKE", "IMMEDIATE",
  "IMMUTABLE", "IMPLICIT_P", "IMPORT_P", "IN_P", "INCLUDING", "INCREMENT",
  "INDEX", "INDEXES", "INHERIT", "INHERITS", "INITIALLY", "INLINE_P",
  "INNER_P", "INOUT", "INPUT_P", "INSENSITIVE", "INSERT", "INSTEAD",
  "INT_P", "INTEGER", "INTERSECT", "INTERVAL", "INTO", "INVOKER", "IS",
  "ISNULL", "ISOLATION", "JOIN", "KEY", "LABEL", "LANGUAGE", "LARGE_P",
  "LAST_P", "LATERAL_P", "LEADING", "LEAKPROOF", "LEFT", "LEVEL", "LIKE",
  "LIMIT", "LISTEN", "LOAD", "LOCAL", "LOCALTIME", "LOCALTIMESTAMP",
  "LOCATION", "LOCK_P", "LOCKED", "LOGGED", "MACRO", "MAPPING", "MATCH",
  "MATERIALIZED", "MAXVALUE", "METHOD", "MICROSECOND_P", "MICROSECONDS_P",
  "MILLISECOND_P", "MILLISECONDS_P", "MINUTE_P", "MINUTES_P", "MINVALUE",
  "MODE", "MONTH_P", "MONTHS_P", "MOVE", "NAME_P", "NAMES", "NATIONAL",
  "NATURAL", "NCHAR", "NEW", "NEXT", "NO", "NONE", "NOT", "NOTHING",
  "NOTIFY", "NOTNULL", "NOWAIT", "NULL_P", "NULLIF", "NULLS_P", "NUMERIC",
  "OBJECT_P", "OF", "OFF", "OFFSET", "OIDS", "OLD", "ON", "ONLY",
  "OPERATOR", "OPTION", "OPTIONS", "OR", "ORDER", "ORDINALITY", "OUT_P",
  "OUTER_P", "OVER", "OVERLAPS", "OVERLAY", "OVERRIDING", "OWNED", "OWNER",
  "PARALLEL", "PARSER", "PARTIAL", "PARTITION", "PASSING", "PASSWORD",
  "PERCENT", "PLACING", "PLANS", "POLICY", "POSITION", "PRAGMA_P",
  "PRECEDING", "PRECISION", "PREPARE", "PREPARED", "PRESERVE", "PRIMARY",
  "PRIOR", "PRIVILEGES", "PROCEDURAL", "PROCEDURE", "PROGRAM",
  "PUBLICATION", "QUOTE", "RANGE", "READ_P", "REAL", "REASSIGN", "RECHECK",
  "RECURSIVE", "REF", "REFERENCES", "REFERENCING", "REFRESH", "REINDEX",
  "RELATIVE_P", "RELEASE", "RENAME", "REPEATABLE", "REPLACE", "REPLICA",
  "RESET", "RESTART", "RESTRICT", "RETURNING", "RETURNS", "REVOKE",
  "RIGHT", "ROLE", "ROLLBACK", "ROLLUP", "ROW", "ROWS", "RULE", "SAMPLE",
  "SAVEPOINT", "SCHEMA", "SCHEMAS", "SCROLL", "SEARCH", "SECOND_P",
  "SECONDS_P", "SECURITY", "SELECT", "SEQUENCE", "SEQUENCES",
  "SERIALIZABLE", "SERVER", "SESSION", "SESSION_USER", "SET", "SETOF",
  "SETS", "SHARE", "SHOW", "SIMILAR", "SIMPLE", "SKIP", "SMALLINT",
  "SNAPSHOT", "SOME", "SQL_P", "STABLE", "STANDALONE_P", "START",
  "STATEMENT", "STATISTICS", "STDIN", "STDOUT", "STORAGE", "STRICT_P",
  "STRIP_P", "STRUCT", "SUBSCRIPTION", "SUBSTRING", "SYMMETRIC", "SYSID",
  "SYSTEM_P", "TABLE", "TABLES", "TABLESAMPLE", "TABLESPACE", "TEMP",
  "TEMPLATE", "TEMPORARY", "TEXT_P", "THEN", "TIME", "TIMESTAMP", "TO",
  "TRAILING", "TRANSACTION", "TRANSFORM", "TREAT", "TRIGGER", "TRIM",
  "TRUE_P", "TRUNCATE", "TRUSTED", "TYPE_P", "TYPES_P", "UNBOUNDED",
  "UNCOMMITTED", "UNENCRYPTED", "UNION", "UNIQUE", "UNKNOWN", "UNLISTEN",
  "UNLOGGED", "UNTIL", "UPDATE", "USER", "USING", "VACUUM", "VALID",
  "VALIDATE", "VALIDATOR", "VALUE_P", "VALUES", "VARCHAR", "VARIADIC",
  "VARYING", "VERBOSE", "VERSION_P", "VIEW", "VIEWS", "VOLATILE", "WHEN",
  "WHERE", "WHITESPACE_P", "WINDOW", "WITH", "WITHIN", "WITHOUT", "WORK",
  "WRAPPER", "WRITE_P", "XML_P", "XMLATTRIBUTES", "XMLCONCAT",
  "XMLELEMENT", "XMLEXISTS", "XMLFOREST", "XMLNAMESPACES", "XMLPARSE",
  "XMLPI", "XMLROOT", "XMLSERIALIZE", "XMLTABLE", "YEAR_P", "YEARS_P",
  "YES_P", "ZONE", "NOT_LA", "NULLS_LA", "WITH_LA", "'<'", "'>'", "'='",
  "POSTFIXOP", "'+'", "'-'", "'*'", "'/'", "'%'", "'^'", "UMINUS", "'['",
  "']'", "'('", "')'", "'.'", "';'", "','", "'?'", "':'", "$accept",
  "stmtblock", "stmtmulti", "stmt", "AlterTableStmt",
  "alter_identity_column_option_list", "alter_column_default",
  "alter_identity_column_option", "alter_generic_option_list",
  "alter_table_cmd", "alter_using", "alter_generic_option_elem",
  "alter_table_cmds", "alter_generic_options", "opt_set_data",
  "DeallocateStmt", "RenameStmt", "opt_column", "InsertStmt",
  "insert_rest", "insert_target", "opt_conf_expr", "opt_with_clause",
  "insert_column_item", "set_clause", "opt_on_conflict", "index_elem",
  "returning_clause", "override_kind", "set_target_list", "opt_collate",
  "opt_class", "insert_column_list", "set_clause_list", "index_params",
  "set_target", "PragmaStmt", "CreateSeqStmt", "OptSeqOptList",
  "ExecuteStmt", "execute_param_clause", "AlterSeqStmt", "SeqOptList",
  "opt_with", "NumericOnly", "SeqOptElem", "opt_by", "SignedIconst",
  "TransactionStmt", "opt_transaction", "CreateStmt",
  "ConstraintAttributeSpec", "def_arg", "OptParenthesizedSeqOptList",
  "generic_option_arg", "key_action", "ColConstraint", "ColConstraintElem",
  "generic_option_elem", "key_update", "key_actions",
  "create_generic_options", "OnCommitOption", "reloptions",
  "opt_no_inherit", "TableConstraint", "TableLikeOption", "reloption_list",
  "ExistingIndex", "ConstraintAttr", "OptWith", "definition",
  "TableLikeOptionList", "generic_option_name", "ConstraintAttributeElem",
  "columnDef", "generic_option_list", "def_list", "index_name",
  "TableElement", "def_elem", "opt_definition", "OptTableElementList",
  "columnElem", "opt_column_list", "ColQualList", "key_delete",
  "reloption_elem", "columnList", "func_type", "ConstraintElem",
  "TableElementList", "key_match", "TableLikeClause", "OptTemp",
  "generated_when", "DropStmt", "drop_type_any_name", "drop_type_name",
  "any_name_list", "opt_drop_behavior", "drop_type_name_on_any_name",
  "CreateFunctionStmt", "macro_alias", "param_list", "UpdateStmt",
  "CopyStmt", "copy_from", "copy_delimiter", "copy_generic_opt_arg_list",
  "opt_using", "opt_as", "opt_program", "copy_options",
  "copy_generic_opt_arg", "copy_generic_opt_elem", "opt_oids",
  "copy_opt_list", "opt_binary", "copy_opt_item",
  "copy_generic_opt_arg_list_item", "copy_file_name",
  "copy_generic_opt_list", "SelectStmt", "select_with_parens",
  "select_no_parens", "select_clause", "simple_select", "with_clause",
  "cte_list", "common_table_expr", "into_clause", "OptTempTableName",
  "opt_table", "all_or_distinct", "distinct_clause", "opt_all_clause",
  "opt_sort_clause", "sort_clause", "sortby_list", "sortby",
  "opt_asc_desc", "opt_nulls_order", "select_limit", "opt_select_limit",
  "limit_clause", "offset_clause", "sample_count", "sample_clause",
  "opt_sample_func", "tablesample_entry", "tablesample_clause",
  "opt_tablesample_clause", "opt_repeatable_clause", "select_limit_value",
  "select_offset_value", "select_fetch_first_value", "I_or_F_const",
  "row_or_rows", "first_or_next", "group_clause", "group_by_list",
  "group_by_item", "empty_grouping_set", "having_clause",
  "for_locking_clause", "opt_for_locking_clause", "for_locking_items",
  "for_locking_item", "for_locking_strength", "locked_rels_list",
  "opt_nowait_or_skip", "values_clause", "from_clause", "from_list",
  "table_ref", "joined_table", "alias_clause", "opt_alias_clause",
  "func_alias_clause", "join_type", "join_outer", "join_qual",
  "relation_expr", "func_table", "rowsfrom_item", "rowsfrom_list",
  "opt_col_def_list", "opt_ordinality", "where_clause",
  "TableFuncElementList", "TableFuncElement", "opt_collate_clause",
  "colid_type_list", "RowOrStruct", "Typename", "opt_array_bounds",
  "SimpleTypename", "ConstTypename", "GenericType", "opt_type_modifiers",
  "Numeric", "opt_float", "Bit", "ConstBit", "BitWithLength",
  "BitWithoutLength", "Character", "ConstCharacter", "CharacterWithLength",
  "CharacterWithoutLength", "character", "opt_varying", "ConstDatetime",
  "ConstInterval", "opt_timezone", "year_keyword", "month_keyword",
  "day_keyword", "hour_keyword", "minute_keyword", "second_keyword",
  "millisecond_keyword", "microsecond_keyword", "opt_interval", "a_expr",
  "b_expr", "c_expr", "func_application", "func_expr",
  "func_expr_windowless", "func_expr_common_subexpr",
  "within_group_clause", "filter_clause", "window_clause",
  "window_definition_list", "window_definition", "over_clause",
  "window_specification", "opt_existing_window_name",
  "opt_partition_clause", "opt_frame_clause", "frame_extent",
  "frame_bound", "row", "sub_type", "all_Op", "MathOp", "qual_Op",
  "qual_all_Op", "subquery_Op", "any_operator", "expr_list",
  "func_arg_list", "func_arg_expr", "type_list", "extract_list",
  "extract_arg", "overlay_list", "overlay_placing", "position_list",
  "substr_list", "substr_from", "substr_for", "trim_list", "in_expr",
  "case_expr", "when_clause_list", "when_clause", "case_default",
  "case_arg", "columnref", "indirection_el", "opt_slice_bound",
  "indirection", "opt_indirection", "opt_asymmetric", "opt_target_list",
  "target_list", "target_el", "qualified_name_list", "qualified_name",
  "name_list", "name", "attr_name", "func_name", "AexprConst", "Iconst",
  "Sconst", "ColId", "ColIdOrString", "type_function_name", "any_name",
  "attrs", "opt_name_list", "param_name", "ColLabel", "ColLabelOrString",
  "PrepareStmt", "prep_type_clause", "PreparableStmt", "CreateSchemaStmt",
  "OptSchemaEltList", "schema_stmt", "IndexStmt", "access_method",
  "access_method_clause", "opt_concurrently", "opt_index_name",
  "opt_reloptions", "opt_unique", "AlterObjectSchemaStmt",
  "CheckPointStmt", "ExportStmt", "ImportStmt", "ExplainStmt",
  "opt_verbose", "explain_option_arg", "ExplainableStmt",
  "NonReservedWord", "NonReservedWord_or_Sconst", "explain_option_list",
  "analyze_keyword", "opt_boolean_or_string", "explain_option_elem",
  "explain_option_name", "VariableSetStmt", "set_rest", "generic_set",
  "var_value", "zone_value", "var_list", "LoadStmt", "file_name",
  "VacuumStmt", "vacuum_option_elem", "opt_full", "vacuum_option_list",
  "opt_freeze", "DeleteStmt", "relation_expr_opt_alias",
  "where_or_current_clause", "using_clause", "AnalyzeStmt",
  "VariableResetStmt", "generic_reset", "reset_rest", "VariableShowStmt",
  "show_or_describe", "var_name", "CallStmt", "ViewStmt",
  "opt_check_option", "CreateAsStmt", "opt_with_data", "create_as_target",
  "unreserved_keyword", "col_name_keyword", "type_func_name_keyword",
  "reserved_keyword", 0
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[YYLEX-NUM] -- Internal token number corresponding to
   token YYLEX-NUM.  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
      60,    62,    61,   725,    43,    45,    42,    47,    37,    94,
     726,    91,    93,    40,    41,    46,    59,    44,    63,    58
};
# endif

/* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   490,   491,   492,   492,   493,   493,   493,   493,   493,
     493,   493,   493,   493,   493,   493,   493,   493,   493,   493,
     493,   493,   493,   493,   493,   493,   493,   493,   493,   493,
     493,   493,   493,   493,   493,   493,   493,   493,   493,   494,
     494,   494,   494,   494,   494,   494,   494,   495,   495,   496,
     496,   497,   497,   497,   497,   498,   498,   499,   499,   499,
     499,   499,   499,   499,   499,   499,   499,   499,   499,   499,
     499,   499,   499,   499,   499,   499,   499,   499,   499,   499,
     499,   499,   499,   499,   499,   499,   500,   500,   501,   501,
     501,   501,   502,   502,   503,   504,   504,   505,   505,   505,
     505,   506,   506,   506,   506,   506,   506,   506,   506,   506,
     506,   506,   506,   506,   507,   507,   508,   509,   509,   509,
     509,   509,   510,   510,   511,   511,   511,   512,   512,   513,
     514,   514,   515,   515,   515,   516,   516,   516,   517,   517,
     518,   518,   519,   519,   520,   520,   521,   521,   522,   522,
     523,   523,   524,   524,   525,   526,   526,   526,   527,   527,
     528,   528,   529,   529,   529,   530,   530,   531,   531,   532,
     532,   533,   533,   533,   534,   534,   534,   534,   535,   535,
     535,   535,   535,   535,   535,   535,   535,   535,   535,   535,
     535,   535,   536,   536,   537,   537,   537,   538,   538,   538,
     538,   538,   538,   539,   539,   539,   540,   540,   541,   541,
     542,   542,   542,   542,   542,   542,   543,   543,   544,   545,
     545,   545,   545,   545,   546,   546,   546,   546,   547,   547,
     547,   547,   547,   547,   547,   547,   548,   549,   550,   550,
     550,   550,   550,   551,   551,   552,   552,   552,   552,   553,
     554,   554,   555,   555,   556,   556,   556,   556,   556,   556,
     556,   556,   557,   557,   558,   559,   559,   559,   559,   560,
     560,   560,   560,   561,   562,   562,   562,   563,   564,   564,
     564,   564,   564,   564,   565,   566,   566,   567,   567,   568,
     569,   569,   569,   570,   570,   571,   571,   572,   572,   573,
     574,   574,   575,   575,   576,   577,   577,   577,   577,   578,
     578,   579,   579,   579,   580,   580,   580,   580,   580,   580,
     581,   581,   582,   582,   582,   582,   583,   584,   584,   584,
     584,   584,   584,   584,   584,   585,   585,   586,   586,   586,
     586,   586,   586,   587,   587,   587,   587,   587,   587,   587,
     587,   587,   587,   587,   587,   587,   587,   587,   588,   588,
     588,   588,   588,   588,   588,   589,   589,   590,   590,   590,
     591,   591,   591,   592,   593,   593,   594,   594,   595,   596,
     596,   597,   597,   598,   598,   599,   599,   600,   600,   601,
     601,   602,   602,   603,   603,   604,   604,   604,   604,   604,
     605,   606,   606,   607,   607,   608,   608,   609,   609,   609,
     609,   609,   609,   609,   609,   609,   609,   609,   609,   609,
     609,   610,   611,   611,   611,   612,   612,   613,   613,   614,
     614,   615,   615,   615,   615,   615,   615,   615,   615,   616,
     616,   617,   617,   617,   617,   617,   617,   617,   618,   618,
     618,   619,   619,   620,   621,   621,   622,   622,   622,   622,
     622,   622,   622,   622,   622,   623,   623,   624,   624,   624,
     625,   625,   626,   626,   627,   627,   628,   629,   629,   630,
     630,   631,   631,   631,   632,   632,   632,   633,   633,   633,
     633,   634,   634,   635,   635,   635,   635,   636,   636,   637,
     637,   637,   637,   637,   637,   638,   638,   639,   639,   640,
     640,   640,   640,   641,   642,   642,   643,   643,   644,   644,
     645,   646,   646,   646,   647,   647,   648,   648,   649,   649,
     650,   650,   651,   651,   652,   652,   653,   654,   654,   655,
     655,   656,   656,   657,   657,   658,   659,   659,   659,   659,
     660,   660,   661,   661,   661,   662,   662,   663,   663,   664,
     664,   665,   665,   665,   665,   665,   665,   665,   666,   666,
     666,   666,   666,   666,   667,   667,   667,   667,   668,   668,
     669,   669,   669,   669,   669,   670,   670,   670,   670,   671,
     671,   672,   672,   673,   673,   673,   673,   674,   674,   675,
     676,   676,   677,   677,   678,   678,   679,   679,   680,   680,
     681,   682,   682,   683,   683,   684,   684,   685,   685,   685,
     685,   685,   685,   685,   686,   686,   686,   687,   687,   687,
     687,   687,   687,   687,   688,   688,   688,   688,   689,   689,
     690,   690,   691,   691,   691,   691,   691,   691,   691,   691,
     691,   691,   691,   692,   692,   693,   693,   694,   694,   695,
     696,   697,   697,   698,   698,   699,   700,   701,   701,   701,
     701,   701,   701,   702,   702,   703,   703,   703,   703,   704,
     705,   705,   705,   706,   706,   707,   707,   708,   708,   709,
     709,   710,   710,   711,   711,   712,   712,   713,   713,   714,
     714,   714,   714,   714,   714,   714,   714,   714,   714,   714,
     714,   714,   714,   714,   714,   715,   715,   715,   715,   715,
     715,   715,   715,   715,   715,   715,   715,   715,   715,   715,
     715,   715,   715,   715,   715,   715,   715,   715,   715,   715,
     715,   715,   715,   715,   715,   715,   715,   715,   715,   715,
     715,   715,   715,   715,   715,   715,   715,   715,   715,   715,
     715,   715,   715,   715,   715,   715,   715,   715,   715,   715,
     715,   715,   715,   715,   715,   715,   715,   715,   715,   716,
     716,   716,   716,   716,   716,   716,   716,   716,   716,   716,
     716,   716,   716,   716,   716,   716,   716,   716,   716,   716,
     716,   716,   717,   717,   717,   717,   717,   717,   717,   717,
     717,   717,   718,   718,   718,   718,   718,   718,   718,   719,
     719,   720,   720,   721,   721,   721,   721,   721,   721,   721,
     721,   721,   721,   721,   721,   721,   721,   721,   721,   721,
     721,   721,   721,   721,   721,   721,   721,   721,   721,   721,
     721,   722,   722,   723,   723,   724,   724,   725,   725,   726,
     727,   727,   727,   728,   729,   729,   730,   730,   731,   731,
     731,   732,   732,   733,   733,   733,   733,   733,   734,   734,
     734,   735,   735,   735,   736,   736,   737,   737,   737,   737,
     737,   737,   737,   737,   737,   737,   737,   737,   738,   738,
     739,   739,   740,   740,   740,   740,   740,   740,   740,   740,
     741,   741,   742,   742,   743,   743,   744,   744,   744,   745,
     745,   746,   746,   747,   747,   747,   747,   747,   747,   747,
     747,   747,   747,   748,   748,   749,   750,   750,   751,   751,
     751,   751,   751,   751,   752,   753,   754,   754,   754,   755,
     755,   756,   757,   757,   758,   759,   759,   760,   760,   761,
     761,   762,   762,   762,   762,   763,   763,   764,   764,   765,
     765,   766,   766,   767,   767,   768,   768,   769,   769,   769,
     769,   770,   770,   771,   771,   772,   772,   773,   774,   775,
     775,   776,   776,   776,   776,   776,   776,   776,   776,   776,
     776,   776,   776,   776,   776,   777,   778,   779,   779,   779,
     780,   780,   781,   781,   781,   782,   782,   783,   783,   784,
     784,   785,   786,   786,   786,   786,   786,   787,   787,   788,
     789,   789,   790,   790,   790,   790,   791,   791,   792,   792,
     793,   793,   793,   793,   794,   794,   795,   796,   796,   797,
     797,   798,   798,   799,   799,   800,   800,   801,   801,   801,
     801,   801,   801,   802,   802,   803,   804,   805,   805,   805,
     805,   806,   806,   807,   807,   807,   808,   808,   808,   808,
     808,   809,   809,   809,   809,   810,   810,   811,   811,   812,
     812,   813,   813,   813,   813,   814,   815,   815,   816,   816,
     816,   817,   817,   817,   817,   818,   818,   818,   818,   819,
     819,   820,   820,   820,   820,   820,   820,   820,   821,   821,
     822,   823,   824,   824,   824,   824,   824,   825,   825,   825,
     825,   825,   826,   826,   827,   827,   828,   828,   829,   830,
     830,   830,   831,   831,   832,   832,   833,   833,   834,   835,
     835,   836,   836,   836,   837,   837,   837,   837,   837,   838,
     838,   839,   839,   840,   841,   841,   841,   841,   842,   842,
     842,   842,   843,   843,   844,   844,   844,   845,   846,   846,
     846,   846,   846,   846,   846,   846,   846,   846,   846,   846,
     846,   846,   846,   846,   846,   846,   846,   846,   846,   846,
     846,   846,   846,   846,   846,   846,   846,   846,   846,   846,
     846,   846,   846,   846,   846,   846,   846,   846,   846,   846,
     846,   846,   846,   846,   846,   846,   846,   846,   846,   846,
     846,   846,   846,   846,   846,   846,   846,   846,   846,   846,
     846,   846,   846,   846,   846,   846,   846,   846,   846,   846,
     846,   846,   846,   846,   846,   846,   846,   846,   846,   846,
     846,   846,   846,   846,   846,   846,   846,   846,   846,   846,
     846,   846,   846,   846,   846,   846,   846,   846,   846,   846,
     846,   846,   846,   846,   846,   846,   846,   846,   846,   846,
     846,   846,   846,   846,   846,   846,   846,   846,   846,   846,
     846,   846,   846,   846,   846,   846,   846,   846,   846,   846,
     846,   846,   846,   846,   846,   846,   846,   846,   846,   846,
     846,   846,   846,   846,   846,   846,   846,   846,   846,   846,
     846,   846,   846,   846,   846,   846,   846,   846,   846,   846,
     846,   846,   846,   846,   846,   846,   846,   846,   846,   846,
     846,   846,   846,   846,   846,   846,   846,   846,   846,   846,
     846,   846,   846,   846,   846,   846,   846,   846,   846,   846,
     846,   846,   846,   846,   846,   846,   846,   846,   846,   846,
     846,   846,   846,   846,   846,   846,   846,   846,   846,   846,
     846,   846,   846,   846,   846,   846,   846,   846,   846,   846,
     846,   846,   846,   846,   846,   846,   846,   846,   846,   846,
     846,   846,   846,   846,   846,   846,   846,   846,   846,   846,
     846,   846,   846,   846,   846,   846,   846,   846,   846,   846,
     846,   846,   846,   846,   846,   846,   846,   846,   846,   846,
     846,   846,   846,   846,   846,   846,   846,   846,   846,   846,
     846,   846,   846,   846,   846,   846,   846,   846,   846,   846,
     846,   846,   846,   846,   846,   846,   846,   846,   846,   846,
     846,   846,   846,   846,   846,   846,   846,   847,   847,   847,
     847,   847,   847,   847,   847,   847,   847,   847,   847,   847,
     847,   847,   847,   847,   847,   847,   847,   847,   847,   847,
     847,   847,   847,   847,   847,   847,   847,   847,   847,   847,
     847,   847,   847,   847,   847,   847,   847,   847,   847,   847,
     847,   847,   847,   847,   847,   847,   848,   848,   848,   848,
     848,   848,   848,   848,   848,   848,   848,   848,   848,   848,
     848,   848,   848,   848,   848,   848,   848,   848,   848,   848,
     849,   849,   849,   849,   849,   849,   849,   849,   849,   849,
     849,   849,   849,   849,   849,   849,   849,   849,   849,   849,
     849,   849,   849,   849,   849,   849,   849,   849,   849,   849,
     849,   849,   849,   849,   849,   849,   849,   849,   849,   849,
     849,   849,   849,   849,   849,   849,   849,   849,   849,   849,
     849,   849,   849,   849,   849,   849,   849,   849,   849,   849,
     849,   849,   849,   849,   849,   849,   849,   849,   849,   849,
     849,   849,   849,   849,   849,   849,   849
};

/* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     0,     4,
       6,     4,     6,     4,     6,     4,     6,     1,     2,     3,
       2,     1,     3,     2,     3,     1,     3,     2,     5,     3,
       6,     4,     6,     6,     6,     5,     5,     6,     9,     4,
       5,     7,     6,     4,     8,     4,     2,     4,     3,     6,
       4,     2,     2,     2,     2,     1,     2,     0,     1,     2,
       2,     2,     1,     3,     4,     2,     0,     2,     3,     2,
       3,     6,     6,     8,     6,     8,     6,     8,     6,     8,
       8,    10,     8,    10,     1,     0,     7,     1,     4,     4,
       7,     2,     1,     3,     4,     3,     0,     1,     0,     2,
       3,     5,     8,     5,     0,     5,     5,     7,     2,     0,
       1,     1,     1,     3,     2,     0,     1,     0,     1,     3,
       1,     3,     1,     3,     2,     2,     4,     5,     5,     8,
       1,     0,     3,     9,    12,     3,     0,     4,     6,     1,
       2,     1,     1,     0,     1,     2,     2,     1,     2,     2,
       1,     2,     3,     2,     2,     2,     2,     3,     3,     3,
       1,     3,     1,     0,     1,     2,     2,     2,     2,     2,
       2,     2,     2,     1,     1,     0,     9,    12,     0,     2,
       1,     1,     1,     1,     1,     1,     3,     0,     1,     2,
       1,     1,     2,     2,     3,     1,     1,     2,     2,     1,
       2,     3,     5,     2,     5,     5,     2,     3,     1,     1,
       2,     2,     0,     4,     0,     3,     4,     4,     0,     3,
       2,     0,     3,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     3,     3,     1,     2,     2,     2,     2,
       2,     2,     0,     3,     3,     3,     0,     1,     2,     1,
       2,     2,     2,     2,     4,     1,     3,     1,     3,     1,
       1,     1,     1,     3,     1,     2,     0,     1,     0,     1,
       3,     0,     2,     0,     3,     3,     1,     5,     3,     1,
       3,     1,     4,     5,     5,     6,     3,     7,     4,    11,
       1,     3,     2,     2,     2,     0,     3,     1,     1,     2,
       2,     2,     2,     1,     0,     1,     2,     6,     4,     6,
       4,     6,     8,     1,     1,     1,     1,     1,     2,     1,
       2,     1,     1,     1,     3,     3,     3,     3,     2,     2,
       1,     3,     1,     1,     1,     1,     3,     1,     1,     0,
       1,     1,     1,     6,     1,     1,     2,     3,     8,    11,
       9,     1,     1,     3,     0,     1,     3,     1,     0,     1,
       0,     1,     0,     1,     3,     1,     1,     1,     3,     0,
       2,     2,     0,     2,     0,     1,     0,     1,     1,     1,
       3,     3,     1,     1,     3,     3,     3,     3,     4,     3,
       2,     1,     1,     1,     1,     1,     3,     1,     1,     3,
       3,     1,     2,     4,     4,     2,     3,     5,     5,     1,
       1,    10,    10,     1,     2,     4,     4,     4,     2,     2,
       3,     1,     3,     6,     2,     0,     3,     3,     4,     4,
       4,     4,     3,     2,     1,     1,     0,     1,     1,     0,
       1,     5,     1,     0,     1,     0,     3,     1,     3,     4,
       3,     1,     1,     0,     2,     2,     0,     2,     2,     1,
       1,     1,     0,     2,     4,     5,     4,     2,     3,     2,
       2,     2,     2,     1,     2,     3,     0,     1,     0,     5,
       1,     4,     6,     2,     1,     0,     4,     0,     1,     1,
       1,     1,     2,     2,     1,     1,     1,     1,     1,     1,
       3,     0,     1,     3,     1,     1,     2,     2,     0,     1,
       3,     1,     0,     1,     2,     3,     2,     4,     2,     3,
       2,     0,     1,     2,     0,     4,     5,     2,     0,     1,
       3,     3,     3,     3,     3,     3,     1,     4,     3,     4,
       5,     4,     5,     4,     5,     2,     4,     1,     1,     0,
       1,     4,     5,     4,     0,     2,     2,     2,     1,     1,
       0,     4,     2,     1,     2,     2,     4,     2,     6,     2,
       1,     3,     4,     0,     2,     0,     2,     0,     1,     3,
       3,     2,     0,     2,     4,     1,     1,     2,     3,     5,
       6,     2,     3,     4,     3,     4,     0,     1,     1,     1,
       1,     1,     2,     4,     1,     1,     1,     1,     2,     3,
       3,     0,     1,     1,     1,     1,     1,     2,     2,     2,
       2,     2,     1,     3,     0,     1,     1,     1,     1,     5,
       2,     1,     1,     1,     1,     4,     1,     2,     2,     1,
       3,     3,     2,     1,     0,     5,     2,     5,     2,     1,
       3,     3,     0,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     3,     3,     3,
       3,     3,     3,     3,     0,     1,     3,     3,     5,     2,
       2,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     2,     2,     3,     3,     2,     2,
       3,     3,     5,     4,     6,     3,     5,     4,     6,     4,
       6,     5,     7,     3,     2,     4,     3,     2,     3,     1,
       3,     4,     3,     4,     3,     4,     5,     6,     6,     7,
       6,     7,     6,     7,     3,     4,     4,     6,     1,     1,
       3,     2,     2,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     2,     2,     5,     6,
       6,     7,     1,     1,     2,     2,     4,     1,     1,     1,
       2,     2,     3,     5,     6,     8,     6,     6,     4,     4,
       1,     1,     1,     5,     1,     1,     4,     1,     4,     1,
       4,     1,     4,     1,     1,     1,     1,     1,     1,     6,
       4,     4,     4,     4,     6,     5,     5,     5,     4,     6,
       4,     5,     0,     5,     0,     2,     0,     1,     3,     3,
       2,     2,     0,     6,     1,     0,     3,     0,     2,     2,
       0,     1,     4,     2,     2,     2,     2,     2,     4,     3,
       5,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     4,
       1,     4,     1,     4,     1,     2,     1,     2,     1,     2,
       1,     3,     1,     3,     1,     3,     1,     3,     3,     1,
       3,     3,     0,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     4,     3,     2,     3,     0,     3,     3,
       2,     2,     1,     0,     2,     2,     3,     2,     1,     1,
       3,     5,     1,     2,     4,     2,     0,     1,     0,     1,
       2,     2,     2,     3,     5,     1,     0,     1,     2,     0,
       2,     1,     0,     1,     0,     1,     3,     3,     2,     1,
       1,     1,     3,     1,     2,     1,     3,     1,     1,     1,
       2,     1,     1,     1,     1,     1,     2,     6,     2,     5,
       3,     3,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     2,     2,     3,     3,
       0,     1,     1,     1,     1,     1,     1,     1,     1,     5,
       3,     0,     1,     1,     1,     1,     4,     7,     2,     0,
       1,     1,     1,     1,    13,    16,     1,     2,     0,     1,
       0,     1,     0,     2,     0,     1,     0,     6,     8,     6,
       8,     6,     8,     2,     1,     4,     3,     2,     4,     3,
       5,     1,     0,     1,     1,     0,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     3,     1,
       1,     1,     1,     1,     1,     2,     1,     1,     2,     3,
       3,     1,     3,     3,     2,     3,     3,     3,     3,     1,
       1,     1,     1,     3,     5,     1,     1,     1,     1,     3,
       2,     1,     4,     5,     5,     4,     6,     1,     1,     1,
       1,     1,     1,     0,     1,     3,     1,     0,     7,     1,
       2,     3,     2,     0,     2,     0,     2,     4,     2,     1,
       1,     1,     2,     3,     2,     2,     3,     4,     2,     1,
       1,     1,     3,     2,     9,    11,    12,    14,     3,     4,
       4,     0,     7,    10,     2,     3,     0,     4,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1
};

/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
   means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
     128,   205,     0,  1090,  1089,   205,     0,  1064,   205,   406,
     334,     0,  1160,     0,   205,     0,   128,     0,     0,     0,
       0,     0,     0,     0,   205,   473,     0,  1159,   205,     0,
    1133,     0,     0,     0,     0,     0,     2,     4,     7,    17,
      29,    25,     0,    27,    15,    20,     6,    31,    16,    19,
      13,    32,    11,    30,   440,   427,   475,   439,   127,   443,
      28,    14,    24,     5,    10,    22,    23,    21,  1072,    35,
      26,    33,    18,     8,    34,    36,     0,     9,    37,    12,
     204,   203,   197,     0,     0,     0,     0,     0,   198,  1007,
    1178,  1179,  1180,  1181,  1182,  1183,  1184,  1185,  1186,  1187,
    1188,  1189,  1190,  1191,  1192,  1193,  1526,  1194,  1195,  1196,
    1477,  1478,  1527,  1479,  1480,  1197,  1198,  1199,  1200,  1201,
    1202,  1203,  1204,  1481,  1482,  1205,  1206,  1207,  1208,  1209,
    1483,  1528,  1210,  1211,  1212,  1213,  1214,  1529,  1215,  1216,
    1217,  1218,  1219,  1220,  1221,  1222,  1223,  1530,  1224,  1225,
    1226,  1531,  1227,  1228,  1229,  1230,  1231,  1232,  1233,  1484,
    1485,  1234,  1235,  1236,  1237,  1238,  1239,  1240,  1241,  1242,
    1243,  1244,  1245,  1246,  1247,  1248,  1249,  1250,  1251,  1252,
    1253,  1254,  1255,  1256,  1257,  1258,  1259,  1260,  1261,  1486,
    1262,  1263,  1264,  1265,  1487,  1266,  1267,  1268,  1488,  1269,
    1270,  1271,  1532,  1533,  1272,  1273,  1274,  1534,  1275,  1276,
    1489,  1277,  1278,  1279,  1280,  1281,  1282,  1283,  1535,  1284,
    1285,  1286,  1287,  1288,  1289,  1290,  1291,  1292,  1293,  1294,
    1536,  1490,  1295,  1296,  1297,  1298,  1491,  1492,  1493,  1299,
    1537,  1538,  1300,  1539,  1301,  1302,  1303,  1304,  1305,  1306,
    1540,  1307,  1541,  1308,  1309,  1310,  1311,  1312,  1313,  1314,
    1315,  1316,  1317,  1318,  1319,  1320,  1321,  1322,  1323,  1324,
    1325,  1326,  1327,  1328,  1329,  1330,  1331,  1332,  1333,  1494,
    1542,  1495,  1334,  1335,  1336,  1496,  1337,  1338,  1543,  1339,
    1497,  1340,  1498,  1341,  1342,  1343,  1344,  1345,  1346,  1347,
    1348,  1349,  1499,  1544,  1350,  1545,  1500,  1351,  1352,  1353,
    1354,  1355,  1356,  1357,  1358,  1359,  1360,  1361,  1362,  1501,
    1363,  1364,  1502,  1365,  1366,  1367,  1368,  1369,  1370,  1371,
    1372,  1373,  1374,  1375,  1376,  1503,  1377,  1378,  1379,  1380,
    1381,  1382,  1383,  1384,  1385,  1386,  1387,  1388,  1389,  1390,
    1391,  1392,  1393,  1394,  1546,  1395,  1396,  1397,  1504,  1398,
    1399,  1400,  1401,  1402,  1403,  1404,  1405,  1406,  1407,  1408,
    1409,  1410,  1411,  1412,  1413,  1414,  1505,  1415,  1416,  1417,
    1547,  1418,  1419,  1506,  1420,  1421,  1422,  1423,  1424,  1425,
    1426,  1427,  1428,  1429,  1430,  1431,  1507,  1432,  1508,  1433,
    1434,  1435,  1548,  1436,  1437,  1438,  1439,  1440,  1509,  1510,
    1441,  1442,  1511,  1443,  1512,  1444,  1445,  1446,  1447,  1448,
    1449,  1450,  1451,  1452,  1453,  1454,  1455,  1456,  1457,  1458,
    1459,  1460,  1513,  1514,  1461,  1549,  1462,  1463,  1464,  1465,
    1466,  1467,  1468,  1469,  1470,  1471,  1472,  1515,  1516,  1517,
    1518,  1519,  1520,  1521,  1522,  1523,  1524,  1525,  1473,  1474,
    1475,  1476,  1163,     0,     0,   989,  1008,  1009,  1014,   200,
     405,   128,     0,   374,     0,     0,   375,     0,     0,   328,
     327,  1055,   333,     0,     0,     0,  1007,    99,  1365,    97,
     987,  1008,     0,   351,   352,     0,   360,     0,   345,   349,
     346,     0,   370,   362,   371,   363,   344,   364,   353,   343,
       0,   372,   347,     0,     0,     0,   201,   166,   334,   128,
       0,  1077,  1078,  1076,  1067,  1072,  1079,  1080,     0,  1063,
       0,  1006,  1121,  1120,   155,  1031,  1150,  1509,  1441,  1161,
    1151,  1148,  1149,   202,   472,   470,     0,   974,  1310,  1402,
    1413,  1509,  1098,  1101,     0,   199,     0,   444,   593,   983,
    1132,     0,  1137,     0,  1379,   448,   451,  1020,   449,   440,
       0,     0,     1,   128,     0,     0,     0,   469,   469,     0,
     469,     0,   432,   440,   435,   439,     0,  1071,  1146,  1158,
    1509,  1441,  1513,  1154,  1155,  1283,     0,     0,  1283,     0,
    1283,     0,  1283,     0,     0,   966,     0,   967,   990,  1033,
    1034,  1032,     0,  1035,   301,   332,   331,   330,   329,   334,
    1283,  1039,     0,     0,     0,     0,     0,  1050,   100,    98,
     358,   359,     0,   350,   348,     0,  1283,   369,  1015,   365,
    1283,   369,   985,  1283,     0,     0,   162,     0,  1069,  1081,
    1096,     0,  1097,  1087,  1075,  1082,  1083,  1084,   128,   404,
    1066,     0,     0,     0,     0,  1152,     0,     0,     0,   992,
     994,   995,   898,  1005,   969,  1478,  1479,  1480,   958,     0,
    1481,  1482,  1483,  1528,   837,   824,   833,   838,   825,   827,
     834,  1484,  1485,   778,  1249,  1486,  1487,  1003,  1488,  1491,
    1492,  1493,   829,   831,  1494,  1495,     0,  1004,  1497,  1498,
    1346,  1500,  1501,  1503,  1504,   835,  1506,  1508,  1509,  1510,
    1511,  1512,  1002,   836,  1514,     0,     0,     0,   980,     0,
     969,   809,     0,   634,   635,   657,   658,   636,   663,   664,
     666,   637,     0,   979,   715,   852,   808,   820,   759,     0,
     807,   802,   455,   975,     0,   803,   991,   993,   959,   455,
     973,  1099,  1104,  1100,     0,     0,     0,     0,     0,   595,
     594,   984,  1131,  1129,  1130,  1128,  1127,  1134,     0,  1136,
    1072,   912,     0,   450,     0,     0,     0,   430,   429,     3,
       0,     0,  1139,     0,   467,   468,     0,     0,     0,     0,
       0,     0,     0,     0,   542,   489,   490,   492,   539,   543,
     551,     0,   436,     0,  1020,  1156,     0,     0,     0,   115,
     115,     0,     0,     0,     0,     0,    92,    41,    85,     0,
       0,     0,     0,   180,   193,     0,     0,     0,     0,     0,
     190,     0,     0,   173,    43,   167,   169,     0,   115,     0,
      39,     0,     0,     0,    45,     0,     0,     0,     0,   812,
     916,   475,   914,   989,     0,   965,     0,  1022,  1550,  1551,
    1552,  1553,  1554,  1555,  1556,  1557,  1558,  1559,  1560,  1561,
    1562,  1563,  1564,  1565,  1566,  1567,  1568,  1569,  1570,  1571,
    1572,  1573,  1574,  1575,  1576,  1577,  1578,  1579,  1580,  1581,
    1582,  1583,  1584,  1585,  1586,  1587,  1588,  1589,  1590,  1591,
    1592,  1593,  1594,  1595,  1596,  1597,  1598,  1599,  1600,  1601,
    1602,  1603,  1604,  1605,  1606,  1607,  1608,  1609,  1610,  1611,
    1612,  1613,  1614,  1615,  1616,  1617,  1618,  1619,  1620,  1621,
    1622,  1623,  1624,  1625,  1626,   962,   961,   988,  1023,  1024,
    1025,  1026,   968,     0,     0,   402,     0,     0,  1036,     0,
    1283,   161,  1283,   301,     0,   301,     0,     0,  1049,  1052,
     361,   357,   355,   354,   356,     0,   367,   368,     0,   338,
       0,  1016,     0,     0,   340,     0,     0,     0,     0,   128,
       0,   174,  1092,  1093,  1091,     0,     0,  1074,   177,   194,
    1086,  1095,  1085,  1094,  1073,  1068,     0,  1065,   393,  1110,
    1109,  1118,   156,     0,  1012,   645,   674,   652,   674,   674,
     641,   641,   654,   642,   643,   679,     0,   674,   641,   646,
     615,     0,   644,   616,   682,   682,   669,     0,   919,   626,
     627,   628,   629,   655,   656,   630,   661,   662,   631,   714,
       0,   641,  1013,   128,  1153,  1162,     0,   805,   673,   660,
     957,     0,     0,   668,   667,     0,     0,     0,     0,     0,
     650,   649,   648,   811,   922,     0,   647,     0,     0,   674,
     674,   672,   738,     0,   651,     0,     0,   937,     0,   943,
       0,     0,     0,   678,     0,   676,     0,     0,   739,   719,
     720,   809,   912,     0,   804,   810,   998,     0,     0,   714,
     714,   978,   898,     0,   895,   896,   897,     0,     0,     0,
     972,     0,   906,   908,     0,     0,   754,   904,     0,   757,
       0,     0,     0,     0,   892,   893,   894,   886,   887,   888,
     889,   890,   891,   902,   885,   735,     0,     0,   854,     0,
     734,     0,     0,   558,     0,   996,   960,   558,  1112,  1116,
    1117,  1115,     0,  1111,  1103,  1102,  1107,  1105,  1108,  1106,
       0,  1125,     0,  1122,   555,     0,   452,     0,     0,  1145,
       0,   122,     0,  1140,     0,   447,   446,   476,   477,   483,
     445,   528,   529,     0,     0,     0,     0,   548,   546,   519,
     493,   518,     0,     0,   497,     0,   520,   715,   541,   434,
     487,   488,   491,   433,     0,   544,     0,   554,   542,   492,
       0,  1147,  1157,     0,     0,     0,     0,     0,  1283,     0,
       0,    76,    57,   253,     0,   114,     0,     0,     0,     0,
       0,     0,     0,    84,    81,    82,    83,     0,     0,     0,
       0,   178,   179,   192,     0,   183,   184,   181,   185,   186,
       0,     0,   171,   172,     0,     0,     0,     0,   170,     0,
       0,     0,     0,     0,     0,     0,     0,   475,   475,   475,
     818,     0,     0,   474,     0,     0,   963,   966,   392,   309,
       0,   299,     0,     0,     0,     0,     0,   334,  1042,  1040,
    1038,  1041,  1043,     0,     0,   158,   160,     0,   298,   272,
       0,  1054,   376,     0,     0,  1283,  1051,   289,     0,   369,
     366,  1017,     0,   369,   986,     0,   369,   165,  1283,   301,
       0,  1070,  1088,   175,   195,   176,   196,   425,     0,   399,
     407,   412,   390,     0,   390,     0,   409,   413,   390,   408,
     390,   403,     0,   157,     0,   626,     0,   621,   617,   687,
     688,   689,   690,   697,   698,   695,   696,   691,   692,   685,
     686,   693,   694,   683,   684,     0,   699,   700,   701,   702,
     703,   704,   705,   706,   632,  1030,     0,   638,   641,  1029,
       0,   970,     0,     0,   956,   952,     0,     0,     0,     0,
       0,     0,   923,   924,   925,   926,   927,   928,   929,   930,
     931,     0,     0,   932,     0,     0,     0,   671,   670,     0,
     884,   895,   896,   897,   892,   893,   894,   886,   887,   888,
     889,   890,   891,   910,     0,     0,     0,     0,     0,     0,
       0,     0,   779,     0,     0,   879,     0,   912,   942,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   912,
     948,     0,   969,     0,     0,     0,  1000,  1001,   716,   730,
     731,   732,   736,  1028,  1027,   977,     0,   971,     0,     0,
     717,   740,   745,     0,   949,   774,     0,   762,     0,   753,
       0,   760,   764,   741,   756,     0,   737,     0,   972,   907,
     909,     0,   905,     0,   727,   728,   729,   721,   722,   723,
     724,   725,   726,   733,   883,   881,   882,     0,     0,     0,
     862,     0,     0,   758,  1275,  1310,     0,   466,   466,   466,
     454,   464,   976,     0,   607,   475,   607,     0,   714,   596,
    1020,  1135,  1123,  1124,   913,  1019,   128,     0,  1143,     0,
       0,     0,   134,   117,     0,  1141,     0,   150,   558,     0,
     969,     0,   481,   482,     0,   486,  1504,  1398,     0,     0,
       0,     0,   521,   549,     0,   540,     0,   992,   522,   991,
     523,   526,   527,   498,   550,   981,   552,     0,   545,   438,
     437,   556,     0,    42,     0,  1283,    59,     0,     0,     0,
       0,     0,     0,   208,   244,   208,    96,  1283,   369,  1283,
     369,  1182,  1250,  1414,     0,    55,    88,     0,   277,   108,
       0,   262,   306,    78,    93,   101,     0,     0,    44,   168,
     182,   187,   104,   191,   188,  1059,   189,   115,     0,    40,
       0,   102,     0,  1057,     0,     0,    46,   106,  1061,     0,
       0,     0,     0,   915,   813,   917,   918,   965,     0,   391,
       0,   300,     0,   401,   381,   382,   392,     0,   301,  1039,
       0,     0,     0,     0,     0,   292,   290,   320,     0,   297,
     291,   299,     0,     0,   248,     0,  1176,     0,     0,   377,
     373,     0,     0,   337,  1018,   339,     0,   341,     0,     0,
     394,     0,   397,     0,   396,   400,   395,   389,     0,   420,
       0,     0,     0,     0,     0,     0,  1119,   622,   618,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   920,   639,
     471,     0,     0,     0,   953,     0,     0,   850,     0,   826,
     828,   640,   840,     0,   653,   830,   832,     0,   899,     0,
       0,     0,   841,   781,   782,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   797,   796,   842,   878,     0,     0,   940,   941,
     843,   681,   680,   682,   682,     0,     0,   947,     0,     0,
       0,   848,   806,   913,   665,   714,     0,     0,     0,     0,
       0,     0,     0,   763,   755,     0,   761,   765,     0,     0,
       0,   749,     0,     0,   747,   775,   743,     0,     0,   776,
       0,     0,     0,   819,   466,   466,   466,   466,   463,   465,
       0,     0,     0,     0,  1398,     0,   579,   557,   559,   566,
     579,   584,   821,   605,   822,   983,     0,   531,     0,   531,
       0,  1113,  1126,     0,  1144,     0,   139,   121,   141,   140,
       0,   148,     0,   969,     0,   139,   123,     0,   142,     0,
    1143,     0,   154,   478,     0,   900,   486,     0,   480,   525,
     524,     0,   496,   547,   494,     0,   553,     0,     0,     0,
     252,     0,     0,     0,   208,     0,     0,   316,     0,   303,
      77,     0,     0,     0,    51,     0,    69,    61,    47,    75,
       0,     0,    80,     0,    73,    90,    91,    89,    94,     0,
     236,   218,   249,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   816,   817,   814,   475,
     964,   423,   424,   173,   422,   310,     0,     0,  1054,  1037,
       0,     0,   161,   301,     0,   276,   272,     0,   270,   269,
     271,     0,  1177,   166,     0,  1172,  1053,     0,     0,  1048,
     369,     0,   426,     0,   385,   421,   410,   415,     0,   419,
     417,   416,   411,   414,     0,   623,     0,   613,     0,   624,
       0,   633,   707,   708,   709,   710,   711,   712,   713,   659,
       0,   955,   951,     0,   823,   921,     0,   911,   935,   934,
     780,   792,   793,   794,   936,     0,     0,     0,   789,   790,
     791,   783,   784,   785,   786,   787,   788,   795,   945,   944,
     938,   939,   677,   675,     0,   845,   846,   847,   946,   880,
     999,   718,     0,     0,   746,   950,   766,     0,     0,     0,
     742,   899,     0,     0,     0,     0,     0,   751,     0,     0,
       0,   865,   860,   861,     0,     0,     0,     0,   457,   456,
     462,   579,   584,     0,   440,     0,   566,     0,   578,   515,
     577,     0,     0,   590,   588,     0,   590,     0,   590,     0,
     515,     0,   580,   515,   577,     0,   597,   984,   606,     0,
     538,   813,   538,     0,   453,  1142,     0,  1138,     0,     0,
       0,   129,   126,   116,     0,     0,   151,   139,   130,     0,
     479,   484,   485,   495,   982,   109,   208,     0,     0,    58,
       0,   318,   264,   296,   279,     0,     0,     0,   209,     0,
     284,     0,    50,    70,     0,    66,     0,    95,     0,     0,
       0,     0,     0,    53,    65,     0,    48,     0,   369,   369,
      56,   263,   215,  1346,     0,   886,   887,   213,   305,   210,
     311,   212,   214,   641,   211,   308,   105,  1060,     0,   103,
       0,  1058,   112,   110,   107,  1062,     0,   404,   384,     0,
       0,  1283,     0,  1054,   159,   298,     0,   326,   248,   321,
       0,  1176,  1174,     0,  1171,     0,     0,     0,   342,     0,
     398,     0,   418,     0,     0,   619,   625,   954,   839,   849,
     933,     0,     0,     0,     0,   844,   772,   770,   767,     0,
     768,   750,     0,     0,   748,   744,     0,   777,   851,     0,
     867,   864,   461,   460,   459,   458,   565,   563,     0,   568,
    1011,  1010,   575,   508,   514,   564,     0,   560,     0,   589,
     585,     0,   586,     0,     0,   587,     0,   561,     0,  1010,
     562,     0,   604,     0,     0,   856,   997,   856,  1114,   138,
     118,     0,   119,   149,     0,     0,     0,     0,   143,   378,
       0,   314,    60,     0,   296,     0,   208,   281,   280,   283,
     278,   282,   285,     0,     0,     0,     0,     0,   265,     0,
       0,     0,   229,     0,     0,   296,   302,   225,   226,   335,
       0,     0,     0,    62,    52,    49,    54,    63,     0,     0,
      64,    67,   612,    79,    72,   641,   641,     0,     0,     0,
     815,   380,   387,   173,     0,     0,     0,     0,   298,     0,
       0,     0,  1176,     0,     0,   206,     0,   245,     0,   163,
    1175,     0,  1164,     0,  1046,  1047,     0,     0,   386,   620,
     614,   798,     0,     0,     0,   769,   773,   771,   752,   853,
       0,   475,   600,     0,   603,   567,     0,     0,   503,   510,
       0,   513,   507,     0,   569,     0,     0,   571,   573,     0,
       0,     0,   608,     0,     0,     0,   987,     0,   530,   532,
     535,   534,   537,     0,   506,   506,     0,     0,     0,   152,
       0,   145,   145,     0,   131,   901,     0,   208,     0,   295,
     315,   243,     0,     0,   227,     0,   233,     0,   267,   268,
     266,   228,   296,   301,   230,   336,     0,    71,     0,    87,
     641,     0,   307,   113,   111,   404,     0,  1054,  1171,     0,
       0,   272,   166,  1173,   261,   254,   255,   256,   257,   258,
     259,   260,   275,   274,   246,   247,     0,     0,     0,  1048,
       0,   799,     0,   800,     0,   870,   605,     0,     0,   599,
       0,   501,   499,   502,   504,   500,     0,     0,   576,   592,
       0,   572,   570,   581,     0,   612,     0,   583,   536,     0,
     855,   857,     0,     0,   442,   441,     0,   125,     0,   607,
       0,     0,   147,   147,   133,     0,   301,   317,     0,   287,
     294,   286,     0,     0,   224,     0,   231,   325,   217,   611,
       0,    74,     0,   312,   379,   383,     0,  1165,     0,  1171,
     248,  1176,     0,  1168,     0,     0,  1054,   801,   866,     0,
       0,     0,   598,   601,     0,   574,     0,     0,     0,   609,
     610,   582,   533,     0,     0,   508,   120,   145,   124,   153,
     144,   483,   146,   483,     0,   325,   273,     0,     0,   251,
     217,     0,   242,     0,    68,    86,   313,     0,   298,  1166,
     207,   164,  1169,  1170,     0,   607,  1477,  1226,  1448,     0,
     868,   871,   869,   863,     0,   511,     0,   517,   591,   858,
     859,   505,   147,   486,   486,   607,   242,   288,   293,     0,
     232,   234,   322,   323,   324,     0,   238,   235,   239,     0,
    1171,     0,  1044,     0,   875,   874,   873,   877,   876,   602,
       0,     0,   509,   483,   136,   135,   132,   208,   250,     0,
       0,     0,   240,     0,   241,   216,  1167,  1054,     0,   512,
       0,   486,   319,   221,     0,   220,     0,   304,   237,   607,
     872,     0,   137,   219,   223,   222,  1045,   516
};

/* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    35,    36,    37,    38,  1906,  1907,  1908,  1614,   826,
    2541,  1615,   827,   828,  1910,    39,    40,  1237,   521,  1552,
    1180,  2286,    42,  1861,  1557,  1865,  2419,  2107,  1860,  1867,
    2522,  2581,  1862,  1558,  2420,  1559,    43,    44,  1305,    45,
     646,    46,  1306,  1264,  1009,   846,  1254,   998,    47,    82,
      48,  1897,  2168,  2594,  1920,  2677,  2316,  2317,  1616,  2636,
    2637,  1899,  1962,  1246,  2630,  1675,  2472,  1620,  1603,  2318,
    1684,  2429,  2197,  1617,  2138,  1676,  2303,  2528,  1316,  1677,
    2529,  2296,  1678,  1289,  1309,  2140,  2638,  1621,  1290,  2169,
    1233,  1679,  2592,  1680,   483,  2321,    49,   513,   514,   637,
     979,   515,    50,   484,   967,   522,    52,  1666,  2343,  1973,
    2344,  1708,  1660,  1007,  1705,  1337,  1293,  1008,   472,  1351,
    1974,  1943,  1338,   523,   731,    55,    56,    57,   571,   565,
     566,  1153,  1530,  1830,   796,   546,   547,   581,  1283,  1187,
    1188,  1565,  1878,  1212,  1213,   805,   806,  2389,  2514,  2390,
    2391,  2254,  2255,  2652,  1200,  1204,  1205,  1578,  1571,  1193,
    2100,  2408,  2409,  2410,  2275,  1208,  1209,   808,   809,   810,
    1217,  1588,    59,  1534,  1837,  1838,  1839,  2078,  2079,  2093,
    2089,  2260,  2397,  1840,  1841,  2382,  2383,  2489,  2096,  1847,
    2401,  2402,  2449,  1719,  1037,  1038,  1358,  1039,   732,  1040,
    1387,   733,  1076,  1042,   734,   735,   736,  1045,   737,   738,
     739,   740,  1059,   741,   742,  1093,  1376,  1377,  1378,  1379,
    1380,  1381,  1382,  1383,  1384,   781,  1441,   744,   745,   746,
    1843,   747,  1148,  1520,  2414,  2510,  2511,  1823,  2062,  2240,
    2381,  2561,  2610,  2611,   748,  1517,  1143,  1144,   749,  2171,
    1146,  1434,  1460,   861,   862,  1050,  1411,  1412,  1437,  1751,
    1444,  1449,  1778,  1779,  1461,  1485,   750,  1394,  1395,  1735,
    1061,   751,   607,   866,   608,  1057,  1479,   759,   752,   753,
    1584,   558,  2393,   642,   946,   754,   755,   756,   757,   758,
    2252,   465,  2582,   981,   786,   864,  1618,  1475,    60,   664,
     612,    61,   958,  1300,    62,  2365,  2207,   969,  1318,  1688,
     485,    63,    64,    65,    66,    67,   588,  1001,   524,  1002,
    1003,   651,    68,  1010,   653,   654,    69,   552,   553,  1011,
    1164,  1012,    70,   533,    71,   777,   562,   778,   780,   526,
     793,  1856,  1548,    73,    74,   540,   541,    75,    76,   554,
      77,    78,  2362,   527,  1965,   964,   491,   467,   468,   951
};

/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
   STATE-NUM.  */
#define YYPACT_NINF -2316
static const int yypact[] =
{
    4532,  -107,   496, -2316, -2316,  -107, 30597, -2316,  -107,    35,
    1943, 32917, -2316,  5740,  -107, 37093,   952,   177,   252,   387,
     598, 37093, 37093, 33381,  -107,   233, 37557, -2316,  -107, 33845,
     -27,    52, 38021, 37093,   944,   622,   190, -2316, -2316, -2316,
   -2316, -2316,    59, -2316, -2316, -2316, -2316, -2316, -2316, -2316,
   -2316, -2316, -2316, -2316,   109, -2316,    47,   135,  -118,   294,
   -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316,   358, -2316,
   -2316, -2316, -2316, -2316, -2316, -2316, 19614, -2316, -2316, -2316,
   -2316, -2316, -2316, 38485, 37093, 38949, 34309, 39413, -2316,    86,
   -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316,
   -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316,
   -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316,
   -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316,
   -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316,
   -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316,
   -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316,
   -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316,
   -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316,
   -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316,
   -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316,
   -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316,
   -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316,
   -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316,
   -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316,
   -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316,
   -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316,
   -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316,
   -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316,
   -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316,
   -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316,
   -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316,
   -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316,
   -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316,
   -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316,
   -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316,
   -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316,
   -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316,
   -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316,
   -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316,
   -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316,
   -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316,
   -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316,
   -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316,
   -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316,
   -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316,
   -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316,
   -2316, -2316, -2316,   318,   430, -2316,    99, -2316, -2316, -2316,
   -2316,   944, 37093, -2316,   370,   473, -2316,   478, 39877, -2316,
   -2316, -2316, -2316,   686, 37093,   637, -2316, -2316, 34773, -2316,
   -2316, -2316,   596, -2316, -2316,   454, -2316,    40, -2316, -2316,
   -2316,   456, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316,
     526, -2316, -2316, 40341, 40805, 41269, -2316,   431,   995,   708,
   19147, -2316, -2316, -2316, -2316,   358, -2316, -2316,   598, -2316,
     598, -2316, -2316, -2316,   427,   438, -2316,   469,   726, -2316,
   -2316, -2316,   500, -2316, -2316,   699,  8111,  8111, 41733,   598,
   41733,   525, -2316, -2316,   -37, -2316, 21014, -2316,   575,   430,
   -2316,    85,   875, 11027, 37093,   573, -2316,   601,   573,   608,
     643,  -118, -2316,  4532,   976,   942, 33845,   462,   462,  1103,
     462,    82,   678, -2316,  1204, -2316,   683, -2316, 37093, -2316,
     696,   957,    52, -2316,   500,  1030,   845,   864,  1040,  3483,
    1050,   890,  1058,  1303,  6167, 11027, 24312, -2316,   430, -2316,
   -2316, -2316,   716, -2316,   727, -2316, -2316, -2316, -2316,   995,
     960, -2316,   780, 42197, 42661, 37093,   748,  1155, -2316, -2316,
   -2316, -2316,   788, -2316, -2316,   159,  1101,    36,   767, -2316,
    1128,   104, -2316,  1132,  1019, 11027, -2316,   893, -2316, -2316,
   -2316,   441, -2316, -2316, 26168, -2316, -2316, -2316,   708,   821,
   -2316, 26168, 11027, 46373,  1276, -2316,  1097, 37093,   851, -2316,
   -2316, -2316, -2316, -2316, -2316,  1350,    87,  1352, 11027,   886,
      87,    87,   888,  1212, -2316, -2316, -2316,   125,   896,   898,
   -2316,   103,   103, -2316,  1077,   902,   911, -2316,   121,  1385,
    1390,   119,   925,   931,   228,    87, 11027, -2316,   933,   103,
     945,   946,   948,  1441,   964, -2316,  1443,   987,    89,   149,
     991,  1003, -2316, -2316,   126, 11027, 11027, 11027, -2316,  7139,
   -2316,   430,   598, -2316, -2316, -2316, -2316, -2316, -2316, -2316,
    1005, -2316,   127,  3194, -2316,  1013, -2316, -2316,  1166, 11027,
   -2316, -2316,   -59, -2316,   129, -2316, -2316, -2316,   430,  1266,
     994, -2316, -2316, -2316,   216,  1395, 25240, 25704, 37093, -2316,
   -2316,   430, -2316, -2316, -2316, -2316, -2316, -2316,   568, -2316,
     358, 27306,   582,   573, 37093, 37093,  1466, -2316, -2316, -2316,
   33845, 37093, 43125,  1139, -2316, -2316,  -118,  -118, 11027,  -118,
     205,     3,  8597, 11513,  1347,  1237,    91,   506,  1351, -2316,
    1242,    82,   678, 11027,   601, -2316,  1291, 37093, 31061,   657,
     679,  1036,  1121,  1042,   194,  1450, -2316,  1059, -2316,  1134,
   37093, 47286,   193, -2316,  1492,   193,   193,   653,  1496,  1148,
     169,  1300,   -50,  -172,  1059,  1812, -2316, 33845,    78,   -22,
    1059, 37093,  1151,   423,  1059, 11027, 11027, 11027,  1072, -2316,
   27306,  -116, -2316,   636,   682, 23847,  1068, -2316, -2316, -2316,
   -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316,
   -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316,
   -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316,
   -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316,
   -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316,
   -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316,
   -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316,
   -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316,
   -2316, -2316, -2316,  1156, 37093,  1115,   -74,  1414,  1472, 37093,
    1305,  1812,  1306,  1088,  1537,   727,  9083,  1538, -2316, 43589,
   -2316, -2316, -2316, -2316, -2316, 37093, -2316, -2316, 37093, -2316,
   28277,  1089, 37093, 37093, -2316, 37093, 37093,   587, 44053,   708,
   30133, -2316, -2316, -2316, -2316,   528,   941, -2316, -2316, -2316,
   -2316, -2316, -2316, -2316, -2316, -2316, 28277, -2316,  2633, -2316,
   -2316, -2316,  1090,   635, -2316, -2316,  1141, -2316,  1141,  1141,
    1099,  1099,  1112, -2316, -2316, -2316,   228,  1141,  1099, -2316,
   -2316, 47286, -2316, -2316,  -162,   444, -2316,  1113, -2316,  1552,
   -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316,  3308,
     654,   468, -2316,   944, -2316, -2316, 11027,   430, -2316,  1114,
   27306,  1157, 11027, -2316, -2316, 11027,  1116,  1592,  1592, 11027,
   -2316, -2316, -2316, -2316,  4095,  1592, -2316,  1592,  1592,  1141,
    1141, -2316, 27350, 11027, -2316, 22880, 11027, 13943,  9569, 11027,
    1201,  1202,  1592, -2316,  1592, -2316, 11027,  7625, 27350,  1593,
    1593,  1933,  5013,  1122,   430,   430, -2316,  1592, 11027,  5014,
    5014, -2316,   146, 46373, 11027, 11027, 11027, 11027, 27813,  1209,
     102, 37093, 11027, 11027,  1129,   628, -2316, 11027,  1346, -2316,
    1131, 11027,  1213,   839, 11027, 11027, 11027, 11027, 11027, 11027,
   11027, 11027, 11027, -2316, -2316, 15876,   155,  1446,  1476,   182,
     737, 35237,  8111,  1469,  6167, -2316,   100,  1469, -2316, -2316,
   -2316, -2316,   137, -2316, -2316, -2316, -2316,  1090, -2316,  1090,
    1152, 37093,    85, 31989, -2316, 11027, -2316,   660,  1158,  1216,
     548,  1604, 37093, -2316, 21480,  1436, -2316,  1160, -2316, 26629,
    1436, -2316, -2316, 14418,  1277,  1430,  1370, -2316, -2316, -2316,
    1162, 27306, 11999, 11999, -2316,   296, 27306,   382, -2316, -2316,
   -2316, -2316, -2316, -2316,   588, -2316, 37093,   -11,  1347,   506,
     665, -2316, -2316,  1376,  1167, 44517, 37093,  1437,  1389,  1439,
     203, -2316, -2316, -2316, 46373, -2316, 37093, 37093, 44981, 45445,
   28741, 37093, 28277, -2316, -2316, -2316, -2316, 37093,   638, 37093,
    4610, -2316, -2316, -2316,   193, -2316, -2316, -2316, -2316, -2316,
   37093, 37093, -2316, -2316,   193, 37093, 37093,   193, -2316,  1384,
   37093, 37093, 37093, 37093,  1504, 37093, 37093,  -113,  -113,  1372,
   -2316, 10055,  1172, -2316, 11027, 11027, -2316, 11027,  1345, -2316,
     671, -2316,  1386,    39,  1221, 37093, 37093,  1189, -2316, -2316,
   -2316, -2316, -2316,  1179,  1515, -2316,  1812,  1516, 31525,   530,
     932,  1223, -2316,   677, 11027,  1407, -2316, -2316,  1393,    36,
   -2316, -2316, 28277,   104, -2316,  1394,   107, -2316,  1412,   727,
    1641, -2316, -2316, -2316, -2316, -2316, -2316, -2316,   688, 18681,
   -2316, -2316,  1644,   598,  1644,   591, -2316, -2316,  1644, -2316,
    1644, -2316, 26168, -2316, 11027,  1646, 37093,  1200,  1203, -2316,
   -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316,
   -2316, -2316, -2316, -2316, -2316,  1592,  1279, -2316,  1280,  1283,
    1284, -2316, -2316, -2316, -2316, -2316, 46373, -2316,   590, -2316,
     702, -2316, 11027, 11027,     8, -2316, 26713,   733, 11027,  1205,
    1206,   739, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316,
   -2316,  1210,  1526, -2316,  1214,  1215,  1218, -2316, -2316,  4098,
   -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316,
   -2316, -2316, -2316, -2316,  1220,  1225, 26759,  1232, 13943, 13943,
    7139,   768, -2316, 13943,  1233, -2316,   743, 26647,  1231,  1238,
    1227,  1234,  1239,  1240, 26985, 10541, 11027, 10541, 10541, 27037,
    1231,  1241, -2316, 11027,  1244,  5369, -2316, -2316, -2316,  5511,
    5511,  5511, 27350, -2316, -2316, -2316,  1255, -2316, 13943, 13943,
   -2316,  4048,  2882,  7139, -2316, -2316,  1539, -2316,   907, -2316,
    1243, -2316, -2316,  3461, -2316, 22880,  4866, 11027,   117, -2316,
   11027,  1129, 11027,  1326,  5511,  5511,  5511,   204,   204,    74,
      74,    74,   271,   737, -2316, -2316, -2316,  1248,  1250,  1251,
    1449,   964, 11027, -2316,   617,   701, 37093,  2527,  4666,  4824,
   -2316, -2316, -2316, 17283,  1296,  -116,  1296,  1592,  5014, -2316,
     601, -2316, -2316, -2316, 27306, -2316,   944, 17283,  1297,  1311,
    -135, 20081,  1470, -2316, 37093, -2316, 37093, -2316,   -44,  1274,
   -2316, 11027, -2316, -2316,   493,  1281,  1477,  1478,   983,   983,
     296,  1490, -2316, -2316,  1348, -2316, 11027,   700, -2316,   859,
   -2316, -2316, -2316, -2316,  1282, -2316, -2316,  1540, -2316, -2316,
   -2316, -2316,  1373,  1059, 11027,  1511, -2316,    71,  1294,  1630,
     210,  1589, 37093, -2316,  1502, -2316,   685,  1638,   107,  1640,
     107, 28277, 28277, 28277,   745, -2316, -2316,   598, -2316, -2316,
     764, -2316,    66, -2316, -2316, -2316,  1391,   443,  1059,  1812,
   -2316, -2316, -2316, -2316, -2316, -2316, -2316,    81,   507,  1059,
    1397, -2316,  1398, -2316,  1401,   606,  1059, -2316, -2316,  1312,
    1313,  1330, 11027, -2316, -2316, 27306, 27306, 27306,  1307, -2316,
     143, -2316, 37093, -2316, -2316, -2316,  1345, 37093,   727, -2316,
     765, 37093, 37093, 37093, 37093, -2316, -2316, -2316,  1332,  1331,
   -2316, 46373,   -95,  1542,  1543, 37093,  1374,  1042,  1786, -2316,
   27306,  1674, 37093, -2316, -2316, -2316, 37093, -2316,  1677,   944,
   -2316, 28277, -2316, 29669, -2316, -2316, -2316, -2316,   598, -2316,
     598,  1561, 37093, 24776,   598,   598, -2316,  1349,  1203,   766,
   46373,  1592,    77,  1354,  1016,   489,   -10,  1008, -2316, -2316,
   -2316,   771, 27257, 11027, -2316,  1692, 46373, -2316,  5590, -2316,
   -2316, -2316, -2316, 11027, -2316, -2316, -2316, 11027, -2316, 22880,
   11027,  1666, -2316,  1823,  1823,  5013, 46373, 13943, 13943, 13943,
   13943,   564,   945, 13943, 13943, 13943, 13943, 13943, 13943, 13943,
   13943, 13943, 14904,   312, -2316, -2316, 11027, 11027,  1675,  1666,
   -2316, -2316, -2316,   200,   200, 46373,  1357,  1231,  1359,  1361,
   11027, -2316,   430, 23352, -2316,  5014, 11027,   406,   990, 11027,
     772, 11027,  1682, -2316, -2316,  1367, -2316, -2316, 46373, 11027,
    1368,  3785, 13943, 13943,  4807, -2316,  5632, 11027,  7139, -2316,
    1372,  1411, 21946, -2316,  1462,  1462,  1462,  1462, -2316, -2316,
   37093, 37093, 37093, 17749,  1689, 16816, 35701,  1369,   675, -2316,
   35701, 36165, -2316,  1388, -2316,   430, 11027,  1684,  1377,  1684,
    1379, -2316, -2316,  1380,  1369, 11027,  1529, -2316, -2316, -2316,
    1438, -2316,   776, -2316,  1788,  1529, -2316,   781, -2316, 21480,
    1297, 11027,   430, -2316,  1399, -2316,  1281,   482, -2316, -2316,
   -2316,  1594, -2316, -2316, -2316, 37093, -2316, 37093, 23370,  1723,
   -2316, 37093, 37093, 37093, -2316, 37093,   813,   130,  1400, -2316,
     130,  1703,   151,  1042,   169,  5261,   -71, -2316, -2316, -2316,
    1461, 37093, -2316, 37093, -2316, -2316, -2316, -2316, -2316, 28741,
   -2316, -2316, -2316, 28277, 22415, 28277, 37093, 37093, 37093, 37093,
   37093, 37093, 37093, 37093, 37093, 37093, -2316, -2316, -2316,  1372,
   -2316, -2316, -2316,  -172, -2316, -2316,   143,  1402,  1223,  1472,
   45909,   818,  1812,  1404,  1841, -2316,   530, 31525, -2316, -2316,
   -2316,  1802, -2316,   431,    64, -2316, -2316,   944, 37093,  1458,
     107, 37093, -2316,   828, -2316, -2316, -2316, -2316, 37093,  1405,
   -2316,  1405, -2316, -2316,  1592, -2316, 37093, -2316,  1413, -2316,
    1416, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316, -2316,
   11027, 27306, -2316,  1409, -2316, 27306, 23398, -2316, 27306,  1675,
   -2316,   816,   816,   816,  2177,  1733,   178,  1406,   816,   816,
     816,   268,   268,    96,    96,    96,  1823,   312, 27306, 27306,
   -2316, -2316, -2316, -2316,  1417, -2316, -2316, -2316,  1231, -2316,
   -2316,   723, 11027, 11027,  4048, -2316,  2839, 11027, 46373,   848,
    4048,   181, 11027,  2239,  2364, 11027, 11027, 23532, 23436,  1418,
   11027, 46822, -2316, -2316, 37093, 37093, 37093, 37093, -2316, -2316,
   -2316, 35701, 36165,  1420, 16349,   675,  1421, 36629, -2316,  1506,
    1423, 17283,  1690,  1623, -2316, 17283,  1623,   673,  1623,  1696,
    1506, 20548, -2316,  1506,  1428,  1628, -2316,   549, 27306,  1862,
    1743,   598,  1743,   598, -2316, 27306,  8111, -2316,   944,  1208,
   37093,   430,   -16, -2316,  1451, 37093, -2316,  1529, 27306, 22880,
   -2316, -2316, -2316, -2316, -2316, -2316, -2316, 37093,   858, -2316,
     867,   130, -2316,  1481, -2316,   153,  1735,    29, -2316, 28277,
    1859,   721, -2316,  1744,  1668, -2316,   193, -2316, 11027,   721,
    1670,   150, 37093, -2316, -2316,  4143, -2316, 46373,   107,   107,
   -2316, -2316, -2316,  1399, 47286,   528,   941, -2316, -2316, -2316,
   -2316, -2316, -2316,   468, -2316,  1467, -2316, -2316,  1535, -2316,
    1545, -2316, -2316, -2316, -2316, -2316,  1456,   821,    69, 37093,
    1906,  1687,  1463,  1223, -2316, 31525,  1052,   108,  1543, -2316,
      75,  1374, -2316,  1845,  1508,  1678, 37093,  1468, -2316,  1917,
   -2316, 29669,  1405,  1474, 46373, -2316, -2316, 27306, -2316, -2316,
   -2316, 13943,  1791,  1471, 46373, -2316,  4048,  4048,  2839,   869,
   -2316,  4048, 11027, 11027,  4048,  4048, 11027, -2316, -2316, 23482,
    1664, -2316, -2316, -2316, -2316, -2316, -2316, -2316, 29205, 35701,
   -2316,  1479, -2316, 32453, -2316, -2316, 37093,   675, 17283, -2316,
   -2316,    90, -2316, 17283,  1747, -2316, 17283, -2316, 37093,  1480,
   -2316, 37093, -2316, 12485, 11027,  1520, -2316,  1520, -2316,   994,
   -2316,  -135, -2316, -2316,  1881, 18215,  1837, 11027, -2316, -2316,
    1483,   130, -2316,  1643,  1481,  1493, -2316, -2316, -2316, -2316,
   -2316, -2316, -2316,   883,  1494, 37093, 37093, 13943, -2316,   721,
     154,   101, -2316,  1754, 37093,  1481, -2316, -2316, -2316, -2316,
    1860,  1940,  1830, -2316, -2316, 27306, -2316, -2316,  1592,  1592,
   -2316, -2316,  1908, -2316, -2316,   468,   476, 22415, 37093, 37093,
   -2316, -2316, -2316,  -172,  1861,   891,   944,  1835, 31525,  1949,
    1503, 37093,  1374,   132,   132, -2316,  1642, -2316,  1647, -2316,
   -2316,   164, -2316, 37093, -2316, -2316, 18215,   944, -2316, -2316,
   -2316,  2616, 13943, 46373,   916, -2316,  4048,  4048,  4048, -2316,
    1936,  1372, -2316,   918,  1951, -2316, 37093,   -58,   -98,  1514,
    1517, -2316, -2316,   923, -2316, 11027,  1518, -2316, -2316, 17283,
      90,   935, -2316, 46373, 37093,   939, 46373,  6653,  1512, -2316,
   -2316, 27306, 27306, 37093,  1564,  1564,  1572, 37093, 11027, -2316,
     954,  1934,    26,   -92, 27306, -2316, 37093, -2316, 28277, -2316,
     130, -2316, 28277, 11027, -2316,   192,  2177,  1970, -2316, -2316,
   -2316, -2316,  1481,   727, -2316, -2316,  1824, -2316, 37093,  1582,
     503,  1597, -2316, -2316, -2316,   821,   598,  1223,  1508, 37093,
     944,   530,   431, -2316, -2316, -2316, -2316, -2316, -2316, -2316,
   -2316, -2316, -2316, -2316, -2316, -2316,  1945,  1732,  1948,  1458,
     955,  2616,   956, -2316, 11027,   -51,  1388, 29205,  1533, -2316,
     969, -2316, -2316, -2316, -2316, -2316, 37093,   985, -2316, 27306,
   37093, -2316, -2316, -2316, 37093,  1908,   971, -2316, -2316, 12485,
    1531, -2316,  1984,  1676, -2316, -2316,   944, -2316, 23719,  1296,
   18215, 37093, 37093, 37093, -2316,  1659,   727,   130,   992, -2316,
    1553, -2316, 23761,  1759, -2316,  1844, -2316,  1790,  1548, -2316,
   11027, -2316,  1619, -2316, -2316, -2316,  1998, -2316,  1551,  1508,
    1543,  1374,  1755, -2316,  1758,  1556,  1223, -2316,  1231, 12971,
   12971,  1559, -2316, -2316, 37093, -2316,   996,  1560,   998, -2316,
   -2316, -2316, -2316, 37093,  1557, 32453, -2316,  1934, -2316, -2316,
   -2316,   196, -2316,   196, 21480,  1790, -2316, 28277, 22415,  1785,
    1548,    25,  1770,  1812, -2316, 27306, -2316,   944, 31525, -2316,
   -2316, -2316, -2316, -2316, 18215,  1296, 15390,  1706,   134, 26675,
   -2316, -2316, -2316, -2316,  1015, -2316,  2039,  1721, -2316, -2316,
   -2316, -2316, 37093,  1281,  1281,  -191,  1770, -2316, -2316,  1863,
   -2316, -2316, -2316, -2316, -2316,    31,  1782, -2316,  1784,  1825,
    1508,  1023, -2316,  2030, -2316, -2316, -2316, -2316, -2316, -2316,
    1580,  1583, -2316,   196, -2316, -2316, -2316, -2316, -2316,   491,
     491,  1950, -2316,  1645, -2316, -2316, -2316,  1223, 13457, -2316,
    2058,  1281,   130, -2316,  2049, -2316,   120, -2316, -2316,  1296,
   -2316,  1590, -2316, -2316, -2316, -2316, -2316, -2316
};

/* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -2316, -2316, -2316,  1505, -2316, -2316, -2316,   171, -2316,   832,
   -2316,   163,  -536,   480, -2316, -2316, -2316,  -773,    32, -2316,
   -2316, -2316, -2316,   -26,   218, -2316,  -432, -1699,  -188, -2316,
   -2223, -2038, -2316,  -494, -2168, -1487, -2316,  -931,   152, -2316,
   -1884, -2316,  -597,  -800,  -641,  -829, -2316,   -49, -2316,  1344,
    -930, -1559, -2169,  -492, -2316,  -555, -2316,  -329, -1571,  -531,
    -518, -2316, -2071,  -785, -2316,  1292,  -240, -2316,   517, -2316,
   -1888, -2316, -2316,   508, -2316,  -799, -2316, -2316, -1635,   161,
    -465, -1984, -2106,   457,  -606, -2316,  -512,   202, -1538, -2316,
     531, -2316,  -456, -2316,  -468, -1920, -2316, -2316, -2316,  1159,
    -611, -2316, -2316, -2316, -2316,    33, -2316, -2316, -2316, -2316,
   -2316,  -412,   471, -2030, -2316,   434, -2316, -2316, -2316, -2316,
     -73,   195, -2316,     4,  1775,   -20,    18,    23,    15,    37,
    1355,  1387, -2316,  -883,   523, -2316, -2316,  -573,   -53, -2316,
     583, -2315, -1819,  -395,   924,  1339,  1342,  -347,  -263, -2316,
    -422, -2316, -1057, -2316, -2316,   579,   963, -1107, -1102, -2316,
     311, -2316,  -346, -2316,    62,  -377,   947, -2316,  1358, -2316,
   -2316, -2316, -2316, -1062,   624, -1769,   327, -1730, -1677,   105,
      88,  -973,  -227,    16,   343,  -309, -2316, -2316,  -306, -1511,
   -2118,  -323,  -319, -2316, -2316, -1007,   827,  -821, -2316, -2316,
    -670,   711, -2316, -2316, -2316,   857,  1486, -2316, -2316,  2269,
    2296, -2316,   243,  2381,   106,  -678,  1117, -1013,  1123, -1015,
   -1023, -1001,  1124,  1125, -1056,  3270, -1361,  -140,    11, -2316,
   -2138, -1450, -2316, -2316,   -90, -2316,  -384, -2316,  -379, -2316,
   -2316, -2316,  -364, -1952,  1053, -2316, -1065, -2316,  3701,   640,
   -2316, -1440,  -526,  -575,  -805, -1746, -2316, -2316, -2316, -2316,
   -2316, -2316, -1476, -1572,  -416,   705, -2316, -2316,   807, -2316,
   -2316, -2316,  -559,   926,  -535,  -704,   712, -2316,  -542,  1060,
   -2316,  1849,  -508,  1875,  -859,    42, -2316,  2160,    -2,  1507,
   -2316,  -479,  -506, -1028,  -770, -2316,  -605, -2316, -2316, -2316,
    -982, -2316,   542, -2316,  -923, -2316,  -265, -2316, -2316, -1892,
   -2316, -2316, -2316, -2316, -2316, -2316,  -365, -2316,  -447,  -446,
   -2316, -2316,    13,  -645,  1229, -2316, -2316,   615, -2316,   865,
   -2316,   658, -2316, -2316, -2316,  1048, -2316, -2316, -2316,    34,
    1431,   352, -2316,  1051, -2316, -2316, -2316, -2316, -2316,   249,
   -2316,  -922, -2180,    60, -2081,  -976,    -6,  -430,  -419, -1866
};

/* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
   positive, shift that token.  If negative, reduce the rule which
   number is the opposite.  If zero, do what YYDEFACT says.
   If YYTABLE_NINF, syntax error.  */
#define YYTABLE_NINF -1532
static const yytype_int16 yytable[] =
{
     466,   947,   845,   582,    53,   760,   641,   639,   955,  1004,
    1251,   811,  1330,   997,   570,    58,  1268,   462,   532,  1232,
    1433,  1070,  1071,  1388,   771,  1849,  1104,  1298,  1299,   525,
     984,    58,    41,    51,    72,  1301,  1302,   782,  1243,  1084,
    1915,  1095,  1917,  1267,  1221,   557,  1900,  1239,   463,   952,
     647,  1407,  1279,  1466,  1467,  1810,  2190,  2120,  2174,  1406,
      79,  1404,  2049,   844,  1896,   850,  2075,   854,  2198,  1868,
     568,  1389,   648,  1408,   650,  1272,   584,  1753,  1754,  2201,
     593,   585,  1773,  1844,   470,  1113,   673,  1013,   772,  2350,
     656, -1012,  -674,   976,  -682,  1536,  1580,  1844,  2521, -1012,
   -1012,   657,   601,  1583, -1013,  -990,  1468,  1756,  -641,  -428,
    2384,  2092, -1013, -1013,  1119,     3,     4,  1797,  1798,   987,
    2359,  1321,  1533,  1161,  -679,   863,  -654,  2355,  -679,   765,
   -1531,  -669,   531,  1951,   531,  -431,   673,  1224, -1531, -1531,
     560,  1477,   531,  1733,  2300,   632,  1121,  2421,   531,  2659,
    1151,   956,  1235,  2405,  -682,  1235,  1477,  2341,  2464,   673,
     658,   976,  1270,  2090,   976,  1928,  2113,   579,  2452,  2202,
     579,  2524,  -884,  -173,  1979,  1981,   949,   574,  -173,  -884,
    1958,  1514,  2082,   863,  1051,  1244,   804,   950,  1515,  -388,
     577,  1252,  2632,  2356,  1255,  1256,  1105,   991,  2480,  2523,
    -428,  2493,   673,  1103,   807,  1664,  2030,  -903,  2357,  2465,
    1355,  1005,   952,  1244,  -903,  1113,  2440,  2466,  1194,  1158,
     991,   531,  2476,  1156,   656,   673,  -431,  1604,  2421,  2326,
    2477,   656,  1562,  2684,  1227,   657,  1367,  1368,   800,    25,
     971,  2491,   657,   801,  1119,  2134,  2467,   800,  2494,  1294,
     773,  1846,   774,  2353,   578,  1586,  1858,  2083,  2304,   544,
    2132,  2284,   575,  1195,  2142,  1904,  2623,  2559,  2624,  2297,
    2438,  2463,   542,  1262,    29,  2009,  1121,  1177,  2547,  1756,
    1277,  1278,  1113,   528,   972,  1090,  2506,  1220,  1282,  2084,
    1859,  1079,  1080,  2155,  2645,  2560,  1869,  1263,    80,  2354,
    1266,  2349,  2229,  2031,  2085,  2307,  2222,  1091,   802,  2007,
    2427,  1119,  2257,  2086,    31,  2468,  2261,   802,  1563,   529,
    2633,  1092,  1196,  1756,  2203,   594,  2469,  2135,  1273,  1159,
     579,  2444,  2525,  2205,  2143,  2131,   656,   656,  2671,  2298,
    2439,    81,  2092,  1121,  1371,  1372,  2087,   657,   657,  2384,
    1070,  1071,  1051,  2128,  2622,  2130,   803,  1095,  1084,  1311,
    1587,   545,  2309,  1191,  1295,    34,   766,  2395,  2441,  2599,
    1197,  1281,  1245,   977,  1354,   947,   863,   863,   863,  1728,
    2495,  1229,  2421,  1844,  2358,  1844,  -428,  2685,  1242,  2437,
    2136,  1313,  2137,  2478,  2246,  2634,  2011,  2012,  2013,  2014,
    1245,  1339,  2018,  2019,  2020,  2021,  2022,  2023,  2024,  2025,
    2026,  2027,  -431,  2144,   672,  1173,  1218,  1756,  2289,  2628,
    2492,  1757,  1758,  1759,  1025,  2544,  1596,  1198,  1152,  1244,
    1433,  2088,   633,  1242,  1219,   767,  2641,  2220,  2042,  2646,
    2212,   977,  1665,  1869,   977,  1160,  2614,  -428,   667,  1393,
    2223,  2053,  2054,   973,  2533,  2660,   561,  2301,  2536,  2312,
    2666,  1242,  1580,  1694,  1192,   580,  2421,  2285,  1881,   639,
    2601,  2174,  1320,  -431,  1323,   611,  1653,  1268,  2374,  2600,
    1326,  1271,  1851,   576,  1929,  2583,    58,   863,   794,  2394,
    1230,  1478,  2350,   530,  2398,  2342,  1870,  2400,  1391,  1875,
     570,  1420,  2313,   609,   610,   613,  1812,   605,  1421,  1422,
    1423,   606,  2470,  1474,   655,  2471,  2396,  2314,   471,  2385,
    -884,   775,  1058,   978,  1941,  1942,   659,  1521,   660,  1516,
    1390,   812,  1333,   652,    58,   563,  1090,   673,  1924,  1397,
     466,   466,  1331,  1401,   650,  1391,   952,   762,  2673,  1653,
     949,  1925,  1051,  1142,  -428,  -903,   974,   466,  1091,  1989,
     656,   950,  1446,  1448,  1853,  2546,  1105,  2291,  2302, -1012,
    -674,   657,  1092,  2550,   776,  1771,   949,    53,  2551,  1535,
    -431,   605, -1013,  -990,  2653,   606,  1069,   950,    58,   584,
     795,   983,   792,  -428,   585,  -428,  1090,   952,   466,   466,
     948,   783,  -679,   531,  1075,    41,    51,    72, -1531,  -669,
    1108,  2315,  1154,  1630,  1262,  1480,  1245,  1761,  1091,  -431,
    1537,  -431,   572,  1633,  2328,  2329,  1636,  2482,  2288,  1601,
    2501,  1844,  1094,    79,  1051,  1844,  1601,  1622,  1263,   466,
    2121,  1581,  1582,  -173,  -173,  1831,  1832,  1090,   655, -1021,
   -1021,  2345,  1000,  1629,  2643,   655,   466,  1052,  1244,  1000,
     818,  1549,   800,  1207,  2605,  1522,   819,   995,   996,  1091,
    1361,  1362,   466,    58,  1604,   863,   573,  1242,  1244,  2290,
    1139,  1140,  1141,  1142,  1433,  1762,  1602,  1593,   949,    83,
     995,   996,  2015,  1893,  1706,  1284,  1285,  1954,  1704,   950,
     466,  2122,  1994,  1996,  1649,  1650,  1651,  1901,  1693,   570,
    1993,  1992,  1695,  1987,  1628,  1697,  2680,   947,  1729,   466,
     466,   466,  2174,   466,  1995,  1997,  1998,  -521,  -521,  2003,
    1106,  1235,   802,  1639,  1113,  1367,  1368,  2430,  1646,  2040,
    1110,  1236,  1244,   466,  1768,  1769,  1770,  1771,  1113,  2010,
    2319,  2674,  1155,  1235,  1631,  1051,  1486,  1257,  1792,  1634,
     655,   655,  1163,  1238,  1000,  1000,   615,  2082,   616,  1049,
    1852,   820,  1874,  1276,  2320,  2679,   672,  1119,  2034,  1756,
     803,   586,  1487,  1757,  1758,  1759,  1766,  1767,  1768,  1769,
    1770,  1771,   466,  1927,   587,  1121,   466,   466,  1844,   518,
    1268,   604,   863,  1194,  2654,  2655,   792,   466,  1844,  1121,
     949,   619,   949,  1844,  1185,  1186,  1844,  1190,  1902,   585,
     585,   950,   585,   950,   672,  1052,  2016,  1756,  2675,  1670,
     627, -1532, -1532, -1532,  -474,  1844,  2017,   630,  1550,  -474,
    2083,  1244,  2083,  1371,  1372,  1245,    84,  1939,  1195,   466,
     466,   466,  2682,  1711,    85,  2676,  1872,  1931,  1712,  1875,
    2371,  2531,   631,  1269,  1930,  1245,  1731,   818,  2527,   617,
    1162,   618,  2084,   819,  2084,   863,  1763,  1764,  1765,   635,
    1766,  1767,  1768,  1769,  1770,  1771,  1498,  2263,    86,  2085,
    1488,  1090,   949,  1258,   634,  1489,  2086,  1959,  2086,   661,
    1490,  1259,  1966,   950,  -474,    25,  1242,  1051,  1713,   656,
     662,   605,   818,  1091,   645,   606,  1844,  2170,   819,   821,
     657,   663,   656,  1063,  1064,   989,  1242,  1094,   990,  1245,
    1787,  2087,  1710,   657,    87,   665,  1714,  1049,  1715,   666,
      29,  2064,  2065,  2066,  2067,  1335,  2436,  1442,  1081,  1844,
     673,  1069,  -474,   980,  2451,  1197,  1935,  1800,  1760,  1069,
     466,  1322,  1848,  1424,  1425,  1426,   821,  1427,  1428,  1429,
    1430,  1431,  1432,   823,   948,  1682,   668,  1683,   820,  1761,
      31,  2542,     3,     4,   655,   667,  1069,  1879,  1322,  2387,
    1242,   764,   673,    32,  2388,  2209,  1103,  1912,   672,  1914,
     948,  1756,   824,   652,    58,  1757,  1758,  1759,  2578,   622,
    1499,  2481,  1198,  1824,  2088,  1825,  2088,    33,  1298,  1299,
    1903,  1904,  2043,   820,  1500,  1052,  1301,  1302,  1245,  1501,
     605,  1551,  -990,  2267,   606,  1802,  2270,  1844,  1491,  1786,
     779,  1788,  1789,   518,   623,  -525,  -525,  1762,  1492,  1905,
     466,   770,  1171,  1572,  1433,  1172,   466,   611,  1975,   466,
     784,  1803,  1948,   466,  1502,    25,  1174,   825,    58,  1175,
    1844,  1327,  1413,  1069,  1175,  1322,  2153,   466,   624,  1685,
     466,   466,   466,   466,   785,   609,   610,   613,   622,  1242,
     466,   466,   787,  2129,  2642,  1762,  1339,  1826,  2672,  1827,
      29,   797,   466,   799,  2146,  2032,  2033,  1052,   466,   466,
     466,   466,   948,  2262,  2656,  2265,   466,   466,  2145,  1353,
    2154,   466,  1354,   623,   625,   466,   821,   788,   466,   466,
     466,   466,   466,   466,   466,   466,   466,  1049,  1385,   466,
      31,  1386,   790,  2187,  1545,  2336,   466,   983,   466,  1591,
    2332,   791,  1175,    32,  1844,  1661,   798,  1950,  1662,  2111,
    1538,  1689,   815,   761,  1354,   763,   813,   474,  2686,   466,
     816,   821,  1700,   863,  1804,  1701,   822,    33,   817,  1805,
     823,   949,   949,   949,  1553,   776,  1730,   466,   830,  1175,
    1970,    34,   950,   950,   950,   829,   466,   466,   847,  2351,
     953,  1761,  1051,   625,  -524,  -524,   851,  2370,  1503,   824,
     954,  1137,  1138,  1139,  1140,  1141,  1142,  1737,   959,  1049,
    1175,   848,   957,  1741,   475,   823,  1175,  1775,  1052,  1918,
    1175,   966,  1919,  1391,   948,   968,   948,   970,  1763,  1764,
    1765,  1051,  1766,  1767,  1768,  1769,  1770,  1771,  1922,   975,
    1985,  1923,   980,  1986,   849,  1999,  2045,  1051,  1175,  1175,
    2109,  1063,  1064,  2110,  2038,  2114,  1369,  1370,  2115,  1762,
    1081,   949,  1875,   656,   825,   466,   982,  1051,   466,   466,
     985,   466,   950,  2167,   657,   988, -1532, -1532, -1532,    25,
    1766,  1767,  1768,  1769,  1770,  1771,   986,  2133,  1442,  1442,
    1662,    25,  2193,  1442,  1006,  1662,  1051,  2450,   466,    25,
    2097,  1053,  2210,  1391,  1686,  2211,   948,  1806,  1622,   825,
    2175,  1054,  1417,  1418,    29,   818,  2153,  1807,  2292,  1051,
    2170,   819,  2230,   655,  1056,  1386,    29,  1000,  1442,  1442,
    1049,  1709,  2293,  1355,    29,  1662,   655,   577,   466,    88,
    1000,  2294,   469,  2375,  1662,  -645,  1386,  -652,   516,  2208,
    -475,   474,  1371,  1372,    31,  -475,  2186,  2431,   543,  1062,
    2432,  1065,   555,  1066,  1041,  2457,    31,    32,  1662,  1067,
    1052,  1068, -1056,  1072,    31,    34,   466,   466,   519,    32,
    -642,   479,   466,   480,  1074,  -643,  2505,    32,   818,  2505,
    2483,    33,  2486,  1386,   819,  2487,   818,  2498,  1077,    25,
     983,   578,   819,    33,  1078,    34,  1083,   482,   475,  2503,
     570,    33,  2504,  2507,  1167,  1169,  2504,    34,  1085,  1086,
    -475,  1087,   466,   466,   466,   520,   820,   466,  2519,  2556,
    2557,  2520,  2520,  1386,    29,  2173,  -646,  1088,  -644,   466,
     466,   466,   466,  2565,  1149,  2571,   983,   466,  2504,  1147,
    1763,  1764,  1765,   570,  1766,  1767,  1768,  1769,  1770,  1771,
    1089,   477,   466,   466,  1096,  1151,  2586,   466,  -475,  2587,
    2615,  1152,  2618,  2616,    31,   983,  1097,   579,  1107,   949,
    1165,   466,  1049,   949,   466,   949,   466,    32,  2281,  2649,
     950,  1178,  2504,  1184,   950,  2324,   950,  2667,   801,   820,
    2520,   803,  1214,   464,  1216,  1222,   466,   820,   490,  1240,
    1043,    33,   490,  1875,  1241,  1242,   818,   466,   534,   490,
     539,   570,   819,   539,  1247,    34,   559,  1249,   952,   490,
     490,   466,  1041,  2455,  1842,  1253,  1248,  2333,  2334,  1260,
     611,  1261,  1391,  1265,  1275,   466,  1280,  1287,  1842,  1288,
    1292,    58,  1296,  1297,  2279,    25,  1975,  1304,  1307,  1051,
     466,  1308,  1310,  1314,  1322,   463,  1058,  1352,   609,   610,
     613,  2170,  1069,   539,   821,   479,  1357,   480,   466,   463,
     559,   490,   559,   559,   559,  1075,  1356,  1392,  1393,  1398,
      29,   673,  1450,  1451,  1113,   948,   948,   948,   481,  1463,
    1476,   482,  1483,  1494,  1495,  1921,  1497,  1442,  1442,  1442,
    1442,  1518,   580,  1442,  1442,  1442,  1442,  1442,  1442,  1442,
    1442,  1442,  1442,  1519,   852,  1533,  1539,   820,   823,  1554,
      31,  1546,  1547,   578,  1573,  1574,   466,  1561,  1575,  1576,
    1594,  1599,  1598,    32,  1600,   579,  1654,   821,  1944,  1667,
    1659,  1663,  1671,  1672,  1673,   821,  1729,   853,  1687,  1691,
    1692,  1696,  1442,  1442,  1698,  1052,  1699,    33,  1051,  1707,
    1717,  1721,  1724,  1725,  1722,  2335,  1726,  1727,  1043,  1739,
    1740,    34,  1743,  1781,  1742,   948,  2167,   655,  1744,  1745,
    1782,  1000,  1746,  1686,  1748,  1801,  1976,  1592,  1977,   949,
    1749,   823,  1982,  1983,  1052,  1637,  1752,  1774,  1175,   823,
     950,  1796,  1780,  1783,  1784,  1791,  1808,   466,  1794,  1817,
    1052,  1818,   825,  1820,  1821,  1051,  1822,   466,  1846,  1855,
     824,   466,  1041,  1857,   466,  1051,  1871,  1864,  1638,  1877,
    1052,   466,   466,   466,   466,  -526,  -527,   466,   466,   466,
     466,   466,   466,   466,   466,   466,   466,  2059,  1882,  1885,
     466,   466,  1883,  1889,  1886,    54,  1887,  1891,  1892,  1052,
    1729,   656,  1895,  1898,   466,   821,  1911,  1049,  1913,  1940,
     466,    54,   657,   466,  1926,   466,  1936,  1937,   570,  2434,
    1932,  1933,  1052,   466,  1934,   825,   466,   466,  2485,   569,
    1268,   466,   466,   825,  1938,   570,  1956,  1960,  1957,  1964,
    1961,  1967,  1968,  2530,  1041,  1971,  1049,   466,  1978,   466,
    1984,  2002,  1777,   583,  1756,  1644,  1776,  2537,  1991,   823,
     466,  2035,  1049,  2036,  1842,  2037,  1842,   831,  2047,   466,
    2048,    54,  2051,  2060,  1829,  2073,  2081,  2095,  2173,  2099,
     831,  2101,  1049,  2103,  2104,   466,   832,  2106,  1645,  2108,
    2112,  2127,  2123,  2141,  2157,   463,  2196,   463,  2490,   832,
    2200,  1103,  2119,  2139,  2206,  2189,   489,  2195,  1043,  2224,
     517,  1049,  1662,  2218,  1051,  2215,  2490,   535,  2216,  2221,
    2253,  2225,  2238,  2248,  2258,  2249,  2256,   567,   567,  2259,
    2266,  2271,  2272,   948,  1049,  2273,   833,   948,  1052,   948,
    2585,  2274,  2172,  2287,  1051,  2304,  2295,  1051,  2322,   833,
    2299,  2305,   596,   825,   599,  2323,   603,  2327,  2338,  2337,
    2340,  2346,  2539,  2306,  1944,  1041,  2348,  2167,  2339,  2347,
    2360,  2366,  2367,  2361,  2373,  2363,  2369,  2372,  2558,   597,
    2380,  2399,  2386,  2404,  2413,  2417,  2423,  2425,  2426,  2442,
    1043,  2204,  2307,  2445,  2308,  2446,  2428,  2433,  2447,   559,
    2448,  2456,  2530,  2459,  2460,   621,  2488,  2461,  2474,  2484,
    2513,   559,  2568,  2475,   466,   490,  2639,  2496,   949,  2509,
    2497,  2500,   949,  2516,   834,  2535,  2521,  2538,  2540,   950,
    2543,  2552,  2553,   950,  2554,  2580,  2564,   834,  2573,  2574,
     638,   490,   490,  2584,  2575,  2588,  2441,  2590,  2591,  2309,
    1049,  2593,  2596,  2597,  2598,  2602,   466,   466,  2603,  2604,
    2061,   466,  1052,  2613,  2617,  2629,   466,  2635,  2650,   466,
     466,  2644,   835,  2651,   466,   539,  2310,   539,  2658,  2661,
     836,  2663,  2668,   559,  2669,   835,  2670,  2681,  2659,  2660,
    2683,   490,   837,   836,  2687,   466,  -440,  2156,   789,   466,
    1624,  1442,  2160,   559,  2283,   837,  1909,  2116,  2579,  -440,
    2625,  1043,  1842,  2416,  -440,   559,  1842,  1041,  2631,  2276,
     466,  2278,  2330,   838,  2194,  2678,  2534,  2664,  2657,  2173,
    1231,   473,  2280,  2282,  2473,   474,   838,  1894,  2199,  1945,
    1916,  2311,  2627,   463,  2662,  2161,  2312,   463,  1890,  2626,
     559,   559,   559,   948,  1319,  1972, -1056,  1946,  2368,  1176,
    -440,  2188,   466,  1590,  1873,  1211,  1157,  1210,   840,  1044,
    2567,  1052,  2515,  2621,  1049,  1884,  1570,   949,  1052,  -440,
    2102,   840,  2076,  2572,  2277,  1589,  1215,  1442,   950,  2313,
     841,  1854,   475,  2502,  1055,  2264,  2072,  2247,  2563,   476,
    2562,  2569,  1718,   841,  2314,   672,  2570,  2415,  1756,  2619,
     843,  1403,  1757,  1758,  1759,  2620,  2612,  1405,  1409,  1410,
    2352,  1734,  1523,   843,  1876,   655,  1815,  -440,  1052,  1000,
    1813,  1949,  1532,  1658,  2555,   466,  -440,  1716,  1052,  1332,
    1541,  1179,  2117,     0,  1543,   477,   466,   466,     0,     0,
     466,     0,  1442,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   466,  1043,     0,     0,    54,   672,     0,     0,
    1756,     0,   466,     0,  1757,  1758,  1759,   466,     0,  1842,
     466,     0,     0,  1049,     0,     0,     0,   466,   466,  1842,
    1049,  2232,     0,     0,  1842,   559,     0,  1842,  2315,   466,
       0,   466,     0,     0,     0,     0,     0,     0,     0,     0,
     463,   490,   490,   478,    54,   569,  1842,   559,   559,  1183,
     463,   466,     0,     0,     0,   463,     0,     0,   463,  2665,
       0,     0,     0,     0,     0,     0,     0,  1044,     0,     0,
    1049,   614,     0,     0,   559,  1234,     0,   463,     0,     0,
    1049,  1052,     0,   626,     0,  2172,     0,   559,     0,   479,
       0,   480,     0,     0,     0,     0,   583,     0,    54,     0,
    2458,  -440,     0,     0,   559,     0,     0,     0,   559,     0,
     466,     0,   481,   629,     0,   482,   466,  1052,     0,     0,
       0,  2352,   672,     0,     0,  1756,     0,  1842,     0,  1757,
    1758,  1759,     0,     0,     0,     0,     0,   570,  1761,   466,
     644,     0,  1041,   466,     0,     0,  2233,  1052,     0,     0,
    1052,   466,     0,     0,     0,   769,     0,     0,   463,     0,
    1842,     0,   466,     0,   605,     0,     0,   787,   606,     0,
       0,     0,   948,     0,     0,     0,   948,   466,     0,     0,
       0,  1041,     0,    54,     0,     0,     0,   814,     0,   567,
       0,   463,     0,  1049,     0,     0,     0,  1041,     0,     0,
    1761,     0,     0,     0,  2545,     0,  1762,     0,     0,     0,
       0,  1291,     0,     0,  2549,     0,   559,  1041,     0,     0,
    1073,     0,   961,   963,   965,     0,  1317,     0,   466,  1049,
       0,   466,   638,     0,     0,   638,     0,     0,     0,   490,
     490,     0,   490,   638,     0,   559,  1041,     0,  1842,     0,
       0,     0,     0,   466,  1101,     0,     0,     0,     0,  1049,
       0,     0,  1049,     0,   466,     0,     0,  1044,  1762,  1041,
    2576,     0,     0,     0,     0,     0,     0, -1437,     0,   463,
       0,  1842,     0,     0,   466,     0,     0,     0,  1043,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   466,   466,     0,     0,     0,     0,     0,
       0,     0,   463,     0,     0,     0,     0,     0,     0,     0,
       0,   583,   583,     0,   583,  1761,     0,  1043,     0,     0,
       0,   948,  1052,     0,     0,     0,  2172,     0,     0,     0,
       0,     0,  1435,  1043,     0,     0,     0,     0,   466,  1044,
     466,  2640,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1043,     0,  1842,     0,  1170, -1437,     0,
       0,     0,     0,     0,   672,     0,     0,  1756,   638,     0,
       0,  1757,  1758,  1759,     0,  1041,     0,     0,     0,     0,
    1181,     0,  1043,  1762,     0,     0,   463,  1763,  1764,  1765,
       0,  1766,  1767,  1768,  1769,  1770,  1771,     0,   559,   567,
       0,     0,   466,     0,     0,  1043,  1223,     0,     0,     0,
   -1437,     0,     0,     0,     0,     0,     0,     0,   559,  1250,
     559,     0,  1340, -1437,     0,     0,     0,     0, -1437,  1555,
       0,  1560,     0, -1437,  1049,     0,     0,     0,     0,     0,
    1274,     0, -1437,     0,     0, -1437,     0,     0,     0,  1763,
    1764,  1765,     0,  1766,  1767,  1768,  1769,  1770,  1771,     0,
    1044,     0,     0,   559,     0,     0,  1341,     0,     0,     0,
       0,     0,  1234,   490, -1437,     0,     0,     0,     0,     0,
       0,     0,     0,   490,  1606,   490,  1610,     0,   490,     0,
       0,     0,  1342, -1437,   490,     0,   490,     0,     0,  1041,
       0,     0,     0,     0,    54,     0,     0,   638,   490,     0,
    1343,     0,   638,   490,  1344,     0,     0,   490,   490,   490,
     490,  1043,   490,   490,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1345,     0,     0,  1346,     0,
       0, -1437,   559,  1669, -1437,     0,     0,     0,  1303,     0,
   -1437,     0,  1347,     0,   999,  1681,     0,     0,     0,     0,
       0,   999,     0,     0,     0,     0,     0, -1532,    54,     0,
       0,     0,     0,     0,  1763,  1764,  1765,  1329,  1766,  1767,
    1768,  1769,  1770,  1771,     0,     0,     0,  1112,     0,     0,
    1113,     0,     0,     0,  1114,  1115,  1116,     0,  1324,     0,
    1325,     0,     0,  1720,     0, -1437,     0,     0,  1041,     0,
       0,     0,  1044,     0,     0,  1041,     0,     0,     0,  1119,
       0,     0,     0,     0,     0,     0,  1120,     0,     0,     0,
    1112,     0,     0,  1113,     0,  1762,     0,     0,     0,  1484,
    1348,     0,  1109,     0,     0,  1043,     0,     0,  1349,     0,
       0,  1121,     0,     0,     0,     0,     0,     0,     0,  1829,
       0,     0,  1119,     0,   999,  1041,   999,   999,     0, -1532,
       0,     0,  1046,     0,     0,  1041,     0,     0,     0,     0,
       0,     0,     0,     0,     0, -1437,     0,     0,     0,     0,
    1350,     0,     0, -1437,  1121,    54,     0,     0,     0,  1047,
       0,     0,     0,     0,     0,     0,     0,     0,     0, -1437,
       0, -1437, -1437,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   999,     0,     0,   999,   999,     0,     0,     0,
    1531,     0,  1435,     0,     0,     0,     0,     0, -1437,     0,
    1122, -1437, -1437, -1437,  1043,     0,     0,     0,     0,     0,
    1540,  1043,  1542,  1799,  1123,     0,     0,     0,     0,  1124,
       0,     0,     0,   559,     0,     0,     0,     0,     0,     0,
    1845,     0,     0,     0,  1048,     0,     0,     0,  1041,     0,
   -1532, -1532,     0, -1532,  1845,     0,     0,     0,  1863,     0,
       0,  1866,     0,  1560,  1127,  1585,     0, -1532,     0,     0,
       0,  1043, -1532,     0,     0,     0,     0,     0,     0,     0,
       0,  1043,     0,     0,  1041,    54,  1763,  1764,  1765,     0,
    1766,  1767,  1768,  1769,  1770,  1771,     0,     0,     0,     0,
    1046,  1597,     0,     0, -1532,     0,     0, -1532,     0,  1291,
       0,  1605,     0,  1608,  1041,     0,  1619,  1041,  1130,     0,
       0,     0,  1623,     0,  1625,     0,     0,  1047,     0,     0,
       0,     0,     0,     0,     0,     0,  1632,     0,     0,     0,
       0,  1635,     0,     0,  1668,  1640,  1641,  1642,  1643,     0,
    1647,  1648,     0,     0,     0,  1334,  1336,     0,     0,     0,
       0,  1130,     0,     0,     0,     0,     0,  1044,     0,  1291,
       0,     0,     0,     0,   559,     0,     0,     0,  1291,   559,
     559,   559,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   490,     0,  1043,     0,     0,  1111,     0,   559,
       0,     0,  1112,   638,     0,  1113,  1044,     0,  1132,  1114,
    1115,  1116,  1048,     0,     0,  1101,     0,     0,     0,  1291,
    1291,     0,  1044,     0,     0,     0,  1117,  1399,  1400,  1118,
    1043,     0,     0,     0,  1119,  1414,     0,  1415,  1416,     0,
       0,  1120,  1044,     0,     0,     0,     0,     0,     0,     0,
       0, -1532,  1452,     0,  1453,     0,  1435,     0,  1101,     0,
    1043,     0,     0,  1043,     0,     0,  1121,  1464,     0,     0,
       0,  1044,     0,     0,     0,     0,  1484,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1819,     0,  1044,     0,     0,     0,     0,  1041,
    1046,     0,     0,     0,     0,     0,  1133,     0,  1836,  1134,
    1135,  1136,     0,  1137,  1138,  1139,  1140,  1141,  1142,     0,
       0,    54,  1836,     0,     0,     0,   569,  1047,     0,  2063,
       0,     0,     0,     0,     0,     0,     0,   559,   559,   559,
     464,     0,  1845,  2080,     0,     0,     0,  2080,  2094, -1532,
       0,     0,     0,     0,     0,     0,  1137,  1138,  1139,  1140,
    1141,  1142,  1579,  1579,     0,  1122,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1828,  1560,     0,     0,  1123,
       0,     0,  1046,     0,  1124,     0,     0,     0,     0,     0,
       0,     0,   559,     0,   490,     0,     0,     0,  1291,  1234,
    1291,     0,  1317,     0,     0,  1125,  1126,     0,     0,  1047,
    1044,     0,  1048,     0,   999,  1359,  1360,     0,   490,  1127,
    2159,     0,     0,     0,   999,     0,     0,   999,     0,     0,
       0,     0,     0,   490,   490,   490,   490,   490,   490,   490,
     490,   490,   490,     0,     0,  1043,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1128,   559,     0,  1129,
       0,     0,     0,     0,  1234,     0,     0,     0,     0,  1112,
       0,     0,  1113,  1130,    54,  1317,  1131,     0,   559,     0,
       0,     0,     0,     0,     0,  1291,     0,     0,     0,  1361,
    1362,     0,     0,  2214,  1048,     0,     0,     0,     0,   999,
       0,  1119,     0,  1046,     0,   818,     0,     0, -1532,     0,
       0,   819,   999,     0,     0,     0,  1947,     0,   831,     0,
       0,  1952,  1953,  1955,     0,     0,     0,     0,     0,     0,
    1047,     0,     0,  1121,  1044,  1723,     0,   832,     0,     0,
       0,  1969,     0,     0,     0,     0,     0,     0,     0,     0,
    1363,  1364,  1365,  1366,  1367,  1368,     0,     0,  1369,  1370,
    1963,     0,     0,  1132,     0,     0,     0,     0,  2241,     0,
       0,   559,   559,   559,   559,     0,     0,     0,  2080,  2094,
       0,  2080,     0,     0,  2251,     0,     0,   833,  1845,     0,
       0,     0,  1845,  1101,     0,     0,     0,     0,  2269,     0,
       0,     0,  1809,     0,     0,     0,     0,     0,  2071,     0,
    2074,     0,     0,     0,     0,  1048,   820,  1863,     0,     0,
       0,     0,  1560,     0,     0,     0,  1435,     0,     0,     0,
       0,     0, -1532,     0,  1234,     0,     0,     0,     0,     0,
       0,     0,     0,  1044,     0,     0, -1532,     0,     0,     0,
    1044, -1532,     0,     0,     0,  1046,     0,     0,     0,  2331,
       0,  1133,  1371,  1372,  1134,  1135,  1136,     0,  1137,  1138,
    1139,  1140,  1141,  1142,     0,   834,     0,     0,     0,  2068,
    2069,  2070,  1047,     0,     0,     0, -1532,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1291,  1850,     0,     0,
    1044,     0,  1681,     0,     0,     0,     0,     0,     0,     0,
    1044,     0,     0,  2364,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   835,     0,     0,     0,     0,  1880,  1880,
       0,   836,     0,     0,  2124,     0,     0,     0,     0,     0,
    1130,     0,    54,   837,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   464,  2080,     0,     0,     0,
    2392,     0,  2125,   490,   821,  1845,     0,  1048,     0,     0,
    1845,  1373,  1374,  1845,   838,  2403,     0,     0,  2406,     0,
       0,     0,     0,     0,     0,     0,  2158,     0,     0,     0,
       0,  1375,  2422,  1112,     0,     0,  1113,     0,     0,  2192,
       0,  2176,  2177,  2178,  2179,  2180,  2181,  2182,  2183,  2184,
    2185,     0,   638,   490,   839,     0,   743,   743,   823,   840,
    1329,   559,     0,  1044,     0,  1119,     0,     0,     0,     0,
   -1532,     0, -1532,     0,     0,     0,     0,     0,     0,     0,
       0,   841,     0,     0,     0,   490,   490,   842,     0,     0,
       0,     0,     0,     0,     0,  1234,  1836,  1121,   490,  1044,
    1836,   843,     0,     0,     0,     0,     0,     0,     0,     0,
     559,     0,     0,  2422,   860,   865,     0,     0,     0,     0,
       0,  1988,  1990,    54,    54,     0,     0,     0,     0,  1044,
       0,     0,  1044,   490,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1845,     0,     0,     0,
       0,  2406,   825,  2242,  2243,  2244,  2245,     0,     0,     0,
    2512,     0,     0,     0,   490,     0,  2052,     0, -1532,     0,
       0,     0,   860,   559,     0,  1137,  1138,  1139,  1140,  1141,
    1142,     0,     0,     0,     0,     0,     0,     0,  1060,     0,
    1046,     0,     0,     0,     0,   638, -1532,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   559,     0,     0,     0,
   -1532,    54,     0,     0,     0, -1532,  1082,  1047,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1046,
       0,     0,     0,     0,   464,  1098,  1099,  1100,     0,  1102,
       0,     0,     0,  2566,     0,  1046,     0,   490,     0,     0,
   -1532,  2403,     0,     0,     0,     0,  1047,     0,     0,  1150,
       0,     0,     0,     0,     0,  1046,     0,  2422,   638,   638,
     638,     0,  1047,  1836,     0,     0,     0,     0,  1836,     0,
       0,  1836,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1047,     0,  1046,     0,  1112,     0,     0,  1113,
       0,     0,  1048,     0,  1130,     0,     0,     0,  1189,     0,
       0,  2403,  1201,  1206,  1044,     0,     0,  1046,     0,     0,
    2512,  1047,  2392,     0,   999,     0,     0,     0,  1119,     0,
       0,  1560,     0,     0,     0, -1532,     0,     0,  1402,     0,
     531,  1048,     0,     0,  1047,  1234,  1112,     0,     0,  1113,
       0,  2422,     0,  1114,  1115,  1116,     0,  1048,     0,     0,
    1121,    54,     0,     0,     0,   860,   860,   860,     0,   638,
    1117,     0,     0,     0,     0,     0,     0,  1048,  1119,     0,
       0,     0,    54,     0,  2213,  1120,     0,     0,     0,     0,
       0,     0,     0,     0, -1532,     0,     0,     0,     0,     0,
       0,     0,     0,  2443,     0,     0,  1048,     0,     0,     0,
    1121,     0,     0,     0,  1836,     0,     0,     0,   831,     0,
       0,  2435,  1101,     0,     0,     0,     0,     0,     0,  1048,
       0,     0,     0,  1046,     0,     0,     0,   832,     0,     0,
       0,     0,  1359,  1360,     0,     0,     0,     0,     0,     0,
       0,     0,  2479,  2453,  2454,     0,     0,     0,     0, -1532,
    1047,     0,     0,     0,     0,     0,  2462,     0,     0,     0,
       0,     0,     0, -1532,     0,    54,   860,     0, -1532,     0,
       0,     0,     0,     0,     0,     0,     0,   833,     0,     0,
       0,     0, -1532,     0,     0,     0,     0,     0,     0,  1137,
    1138,  1139,  1140,  1141,  1142,     0,     0,     0,     0,  1122,
       0,     0,     0, -1532,     0,  2526,  1361,  1362,     0,     0,
       0,     0,     0,  1123,     0,     0,     0,     0,  1124,     0,
       0,    54,  2517,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1048,   999,     0,  2548,  1125,
    1126,   999,     0,  2149,     0,     0,     0,  1046,     0,     0,
       0,     0,     0,  1127,     0,  1334,  1336,  1130,     0,     0,
       0,     0,  1396,     0,     0,   834,     0,  1363,  1364,  1365,
    1366,  1367,  1368,     0,  1047,  1369,  1370,     0,     0,     0,
       0,     0,     0,  1419,     0,     0,  1436,     0,     0,  1447,
    1128,     0,     0,  1129,     0,     0,  1454,  1459,     0,     0,
       0,     0,    54,     0,     0,     0,     0,  1130,  1465,     0,
    1131,     0,     0,   835,  1469,  1470,  1471,  1472,     0,     0,
       0,   836,  1481,  1482,     0,     0,     0,  1493,     0,     0,
       0,  1496,     0,   837,  1504,  1505,  1506,  1507,  1508,  1509,
    1510,  1511,  1512,     0,     0,  1513,     0, -1532,     0,     0,
       0,     0,   743,     0,   860,     0,  1046,     0,     0,  1048,
       0,     0,     0,  1046,   838,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1145,  1544,     0,     0,     0,  1371,
    1372,     0,     0,  1047,     0,     0,     0,     0,     0,     0,
    1047,     0,     0,     0,     0,     0,     0,  1132,     0,     0,
       0,     0,  1099,  1100,     0,     0,     0,     0,     0,   840,
       0,     0,  1145,  1046,     0,     0,     0,     0,  1334,  1336,
       0,     0,     0,  1046,     0,     0,     0,   999,     0,     0,
       0,   841,     0,     0,     0,     0,     0,     0,     0,     0,
    1047,     0,     0,     0,     0, -1532,     0,     0,     0,     0,
    1047,   843,  1137,  1138,  1139,  1140,  1141,  1142,     0,     0,
       0,     0,   -38,     0,     0,     0,     0,     0,  1048,     0,
       0,     0,     0,     0,     0,  1048,     0,     0,     0,     0,
       1,   860,     0,     0,  1655,  1656,     0,  1657,  1373,  1374,
       2,  1145,     3,     4,     0,  1133,  1145,     0,  1134,  1135,
    1136,     0,  1137,  1138,  1139,  1140,  1141,  1142,     5,     0,
       0,     0,     0,     0,  1690,  1747,     0,     6,     0,     0,
       0,     0,     0,     0,     0,  1048,     0,     0,     0,     7,
       0,     0,     0,     0,     0,  1048,  1046,     0,     0,     0,
       8,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     9,     0,    10,   860,     0,     0,     0,     0,     0,
       0,     0,   818,  1047,     0,     0,     0,     0,   819,     0,
       0,    11,  1046,     0,     0,   831,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    12,     0,     0,     0,     0,
       0,     0,     0,  1732,   832,    13, -1439,     0,  1738,  1047,
       0,    14,  1046,     0,     0,  1046,     0,     0,     0,    15,
       0,    16,    17,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    18,     0,     0,     0,     0,  1047,
       0,     0,  1047,     0,     0,     0,     0,     0,     0,     0,
    1755,     0,     0,     0,   833,     0,     0,     0,  1048,     0,
       0,    19,     0,     0,     0,  1459,     0,  1459,  1459,     0,
       0,     0,     0,  1793,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   820,     0,     0,     0,     0,   999,     0,
       0,     0,     0,     0,  1048,     0,     0, -1439,     0,     0,
      20,  1145,     0,     0,     0,     0,     0,  1811,     0,     0,
    1814,     0,  1816,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1145,  1048,     0,     0,  1048,  1443,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1145,
    1145,  1145,   834,  1145,     0,     0,     0,     0,     0, -1439,
       0,     0,     0,     0,     0,  1112,     0,     0,  1113,     0,
       0,     0, -1439,     0, -1453,     0,     0, -1439,     0,     0,
       0,  1189, -1439,     0,     0,     0,    21,     0,     0,    22,
       0, -1439,     0,     0, -1439,     0,  1206,  1119,     0,     0,
     835,  1145,     0,     0, -1532,     0,     0,  1046,   836,     0,
       0,     0,     0,     0,  1888,     0,     0,    23,     0,     0,
     837,     0,     0, -1439,  1112,    24,     0,  1113,     0,  1121,
       0,  1114,  1115,  1116,  1047,     0,     0,     0,     0,    25,
    1145,   821, -1439,     0,     0,     0,    26,     0,  1117,     0,
      27,   838,  1145,     0,     0,     0,  1119,  1145,     0,     0,
      28,     0,     0,  1120,     0, -1453,     0,     0,     0,     0,
       0,     0,   860,     0,    29,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1121,     0,
   -1439,  1626,     0, -1439,     0,   823,   840,     0,  2055, -1439,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    30,
       0,     0,     0,     0,    31,     0,     0, -1453,   841,  1048,
       0,     0,     0,     0,  1627,     0,     0,    32, -1532,     0,
   -1453,     0,     0,     0,     0, -1453,     0,     0,   843,     0,
   -1453,     0, -1532,     0,     0,     0,     0, -1532,     0, -1453,
       0,    33, -1453,  2001, -1439,     0,     0,     0,     0,     0,
       0,     0,     0,  2005,     0,    34,     0,  2006,   -38,     0,
    2008,  1112,     0,     0,  1113,     0,     0,     0,  1114,  1115,
    1116, -1453, -1532,     0,     0,     0,     0,  1122,     0,   825,
       0,     0,     0,     0,     0,  1117,  2028,  2029,     0,     0,
   -1453,  1123,     0,  1119,     0,     0,  1124,     0,  1829,     0,
    1120,     0,     0,     0,     0,     0,  2041,     0,     0,  2044,
       0,  2046,     0,     0,     0,     0,     0,  1125,  1126,  2050,
       0,     0,     0,     0, -1439,  1121,  1130,  2057,  2058,     0,
       0,  1127, -1439,     0,     0,     0,     0,  1145, -1453,     0,
       0, -1453,     0,     0,     0,     0,     0, -1453, -1439,     0,
   -1439, -1439,     0,     0,     0,     0,  2098,     0,     0,     0,
    1145,  1359,  1360,     0,     0,  2105,     0,     0,  1128,     0,
       0,  1129,     0,     0,     0,     0,     0,  1145,     0,  1443,
    1443,  2118,  1772,     0,  1443,  1130,     0, -1439,  1145,     0,
   -1439, -1439, -1439,     0,     0,  1145,     0,     0,     0,     0,
    1145,     0, -1453,     0,     0,     0,  1145,     0,     0,     0,
    1145,  1145,  1145,  1145,     0,     0, -1532,     0,     0,  1443,
    1443,     0,  1145,  1145,  1122,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1145,  1361,  1362,  1145,  1123,     0,
       0,     0,     0,  1124,     0,  1145,  1145,  1145,  1145,  1145,
    1145,  1145,  1145,  1145,  1145,     0,  1829,     0,     0,     0,
       0,     0,     0,     0,  1125,  1126,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1132,     0,     0,  1127,     0,
       0,     0, -1453,     0,     0,  1145,     0,     0,     0,     0,
   -1453,     0,     0,     0,     0,     0,  1363,  1364,  1365,  1366,
    1367,  1368,     0,     0,  1369,  1370, -1453,     0, -1453, -1453,
    2217,     0,     0,     0, -1532,  1128,     0,     0,  1129,     0,
       0,  1137,  1138,  1139,  1140,  1141,  1142,     0,     0,     0,
       0,     0,  1130,     0,     0,  1131,   831,     0,     0,     0,
       0,     0,     0,     0,     0, -1453,     0,     0, -1453, -1453,
   -1453,     0,  2226,  2227,     0,   832,     0,  2228,     0,     0,
       0,     0,  2231,     0,     0,  2234,  2235,     0,     0,     0,
    2239,     0,     0,  1133,     0,     0,  1134,  1135,  1136,     0,
    1137,  1138,  1139,  1140,  1141,  1142,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1145,  1145,  1145,     0,
       0,     0,     0,     0,     0,   833,  2147,     0,  1371,  1372,
       0,     0,     0,     0,  2148,     0,   743,  1112,     0,     0,
    1113,     0,  1132,     0,  1114,  1115,  1116,     0,     0,     0,
       0,  1145,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1117,     0,     0,     0,     0,     0,     0,     0,  1119,
       0,     0,     0,     0,     0,     0,  1120,     0,  2325,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2149,     0,  1145,     0,     0,     0,     0,     0,  1145,
       0,  1121,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   834,  1772,  1772,  1145,     0,  1443,  1443,
    1443,  1443,     0,     0,  1443,  1443,  1443,  1443,  1443,  1443,
    1443,  1443,  1443,  1443,  1772,     0,     0,  1373,  1374,     0,
    1133,     0,     0,  1134,  1135,  1136,     0,  1137,  1138,  1139,
    1140,  1141,  1142,     0,  1145,     0,     0,  1462,  1772,  1772,
       0,   835,  2376,  2377,     0,     0,  2378,     0,     0,   836,
       0,     0,  1145,  1443,  1443,  1145,     0,  1145,     0,  1112,
       0,   837,  1113,  2150,     0,     0, -1532, -1532, -1532,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1122,     0,     0,  2411,  2412,     0,     0,     0,     0,     0,
       0,  1119,   838,     0,  1123,     0,     0,  2424,  1120,  1124,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1125,  1126,     0,  1121,     0,     0,     0,     0,     0,  1145,
       0,     0,     0,     0,  1127,     0,     0,   840,  1112,     0,
       0,  1113,     0,     0,     0,  1114,  1115,  1116,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   841,
       0,     0,  1117,     0,     0,     0,     0,     0,     0,     0,
    1119,  1128,     0,     0,  1129,     0,     0,  1120,     0,   843,
    1112,  2151,     0,  1113,  2152,     0,     0,     0,  1130,     0,
       0,  1131,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1121,     0,     0,  2499,     0,     0,     0,     0,
       0,     0,  1119,     0,     0,     0,     0,  1102,     0, -1532,
       0,     0,  1122,     0,     0,     0,     0,     0,  2518,     0,
       0,     0,     0,     0,     0,     0,  1123,     0,     0,     0,
       0,  1124,  1145,  2532,  1121,     0,  1145,  1145,     0,  1145,
       0,     0,  1772,  1772,  1772,  1772,     0,     0,     0,  1772,
    1772,  1772,  1772,  1772,  1772,  1772,  1772,  1772,  1772,  1145,
    1145,     0,     0,     0,     0,     0,  1127,     0,  1132,     0,
       0,     0,  1145,     0,  1242,  1145,     0,  1145,     0,     0,
       0,  1145,     0,     0,  1772,  1772,     0,     0,  1145,  1145,
     492,  1122,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2056,     0,  1123,     0,     0,     0,  2411,
    1124,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1130,     0,     0,     0,     0,     0,     0,     0,     0,  1145,
       0,  1125,  1126, -1532,     0,     0,  1145,     0,     0,     0,
    2595,     0,     0,   493,     0,  1127,     0, -1532,     0,  1145,
       0,     0, -1532,     0,     0,     0,     0,     0,   494,  2609,
    2609,     0,     0,     0,     0,     0,  1133,     0,     0,  1134,
    1135,  1136,     0,  1137,  1138,  1139,  1140,  1141,  1142,     0,
       0,     0,  1128,  1795,     0,  1129,     0, -1532,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1130,
       0,     0,  1131,     0,     0,     0,  2609,     0,     0,     0,
    1132,     0,   495,     0,     0,     0,     0,     0,     0,     0,
       0,   496,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   497,     0,     0,     0,     0,   498,     0,
       0,  1130,     0,     0,     0,     0,     0,     0,  1145,     0,
       0,     0,  1443,     0,     0,     0,     0,  1145,  1145,  1145,
       0,     0,  1145,   499,     0,  1145,  1145,     0,  2609,     0,
    1145,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1132,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   500,     0,  1133,   501,
       0, -1532, -1532, -1532,     0,  1137,  1138,  1139,  1140,  1141,
    1142,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0, -1532,     0,     0,     0,     0,     0,     0,  1443,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1145,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   502,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   503,  1133,     0,     0,
    1134,  1135,  1136,     0,  1137,  1138,  1139,  1140,  1141,  1142,
       0,     0,  1772,  1443,  2004,     0,     0,  1145,  1145,  1145,
       0,     0,     0,     0,     0,     0,     0,   504,     0,     0,
     505,     0,     0,     0,     0,     0,     0,     0,   506, -1532,
       0,   507,     0,     0,     0,     0,  1137,  1138,  1139,  1140,
    1141,  1142,  1145,  1145,     0,     0,     0,     0,     0,     0,
     508,     0,     0,     0,     0,  1145,     0,     0,     0,     0,
       0,     0,   509,     0,     0,     0,     0,  1772,     0,   510,
       0,     0,     0,     0,     0,     0,     0,     0,   511,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      89,   669,   531,   670,   671,   672,   673,   674,   512,     0,
       0,     0,  1772,     0,     0,    90,    91,    92,    93,    94,
      95,    96,    97,   855,    98,    99,   100,     0,     0,     0,
    1145,     0,     0,     0,   101,   102,     0,   103,   104,   105,
     106,   107,   108,   109,   110,   675,   112,   676,   677,  1145,
     115,   116,   117,   118,   119,   120,   678,   679,   121,   122,
     680,   681,   125,  1145,   126,   127,   128,   129,   682,     0,
     683,     0,   132,   133,   134,   135,   136,   137,   138,   139,
     140,     0,   141,   142,   143,   144,   145,   146,     0,   147,
     148,   149,   150,   684,   685,   686,   687,   688,   689,   690,
     152,   153,   154,   155,   156,   157,   158,   691,   692,   161,
     693,   162,     0,   163,   164,   165,   166,   167,   168,     0,
     169,   170,   171,   172,   173,   856,  1145,   174,   175,   694,
     177,   178,     0,   179,   180,   181,     0,   182,   183,   184,
    1145,   185,   186,   187,   188,   695,   190,   191,   192,   193,
     696,   697,   195,     0,   196,   197,   698,   199,     0,   200,
       0,   201,   202,     0,   203,   204,   205,   206,   207,   208,
       0,   209,     0,   210,   211,     0,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,     0,   223,   224,
     225,   226,   227,   228,     0,   229,   230,   231,   232,   233,
     234,   235,   699,   700,     0,   701,     0,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,     0,     0,   249,
     250,   251,   252,     0,   253,   254,   255,   702,   703,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   704,   280,   705,   282,   283,   284,   285,   706,
     286,   287,   288,   289,   707,   708,   291,   709,   293,   294,
     295,     0,   296,   297,     0,     0,   710,   299,   300,     0,
       0,   301,   302,   303,   304,   305,   711,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,     0,   317,   318,
     712,   320,   321,   322,   323,   324,   325,     0,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   713,   336,   337,
     338,   339,     0,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,     0,   352,   353,   354,   355,
     356,   357,   714,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,     0,   370,   371,   372,   373,   374,
     715,   375,   376,   377,   378,   379,   380,   381,   382,   716,
     384,     0,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   717,     0,   399,   400,     0,
     401,   402,   403,   404,   405,   406,   407,     0,   718,   719,
       0,     0,   410,   411,   720,   413,   721,   722,   415,   416,
     417,   418,   419,   420,   421,     0,     0,   422,   423,   424,
     425,   426,   723,     0,   427,   428,   429,   430,   431,   432,
     724,   857,   434,   435,   436,   437,   438,   439,     0,     0,
     440,     0,     0,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   725,     0,     0,     0,     0,     0,
       0,   726,   727,   858,     0,     0,     0,     0,     0,     0,
     729,   859,     0,     0,     0,   730,    89,   669,   531,   670,
     671,   672,   673,   674,     0,     0,     0,     0,     0,     0,
       0,    90,    91,    92,    93,    94,    95,    96,    97,     0,
      98,    99,   100,     0,     0,     0,     0,     0,     0,     0,
     101,   102,     0,   103,   104,   105,   106,   107,   108,   109,
     110,   675,   112,   676,   677,     0,   115,   116,   117,   118,
     119,   120,   678,   679,   121,   122,   680,   681,   125,     0,
     126,   127,   128,   129,   682,     0,   683,     0,   132,   133,
     134,   135,   136,   137,   138,   139,   140,     0,   141,   142,
     143,   144,   145,   146,     0,   147,   148,   149,   150,   684,
     685,   686,   687,   688,   689,   690,   152,   153,   154,   155,
     156,   157,   158,   691,   692,   161,   693,   162,     0,   163,
     164,   165,   166,   167,   168,     0,   169,   170,   171,   172,
     173,     0,     0,   174,   175,   694,   177,   178,     0,   179,
     180,   181,     0,   182,   183,   184,     0,   185,   186,   187,
     188,   695,   190,   191,   192,   193,   696,   697,   195,     0,
     196,   197,   698,   199,     0,   200,     0,   201,   202,     0,
     203,   204,   205,   206,   207,   208,     0,   209,     0,   210,
     211,     0,   212,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,     0,   223,   224,   225,   226,   227,   228,
       0,   229,   230,   231,   232,   233,   234,   235,   699,   700,
       0,   701,     0,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,     0,     0,   249,   250,   251,   252,     0,
     253,   254,   255,   702,   703,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   704,   280,
     705,   282,   283,   284,   285,   706,   286,   287,   288,   289,
     707,   708,   291,   709,   293,   294,   295,     0,   296,   297,
       0,     0,   710,   299,   300,     0,     0,   301,   302,   303,
     304,   305,   711,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,     0,   317,   318,   712,   320,   321,   322,
     323,   324,   325,     0,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   713,   336,   337,   338,   339,     0,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,     0,   352,   353,   354,   355,   356,   357,   714,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
      25,   370,   371,   372,   373,   374,   715,   375,   376,   377,
     378,   379,   380,   381,   382,   716,   384,     0,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   717,     0,   399,   400,    29,   401,   402,   403,   404,
     405,   406,   407,     0,   718,   719,     0,     0,   410,   411,
     720,   413,   721,   722,   415,   416,   417,   418,   419,   420,
     421,     0,     0,   422,   423,   424,   425,   426,   723,     0,
     427,   428,   429,   430,   431,   592,   724,     0,   434,   435,
     436,   437,   438,   439,     0,     0,   440,     0,    32,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     725,     0,    33,     0,     0,     0,     0,   726,   727,     0,
       0,     0,     0,     0,     0,     0,   729,  2508,     0,     0,
       0,   730,    89,   669,   531,   670,   671,   672,   673,   674,
       0,     0,     0,     0,     0,     0,     0,    90,    91,    92,
      93,    94,    95,    96,    97,     0,    98,    99,   100,     0,
       0,     0,     0,     0,     0,     0,   101,   102,     0,   103,
     104,   105,   106,   107,   108,   109,   110,   675,   112,   676,
     677,     0,   115,   116,   117,   118,   119,   120,   678,   679,
     121,   122,   680,   681,   125,     0,   126,   127,   128,   129,
     682,     0,   683,     0,   132,   133,   134,   135,   136,   137,
     138,   139,   140,     0,   141,   142,   143,   144,   145,   146,
       0,   147,   148,   149,   150,   684,   685,   686,   687,   688,
     689,   690,   152,   153,   154,   155,   156,   157,   158,   691,
     692,   161,   693,   162,     0,   163,   164,   165,   166,   167,
     168,     0,   169,   170,   171,   172,   173,     0,     0,   174,
     175,   694,   177,   178,     0,   179,   180,   181,     0,   182,
     183,   184,     0,   185,   186,   187,   188,   695,   190,   191,
     192,   193,   696,   697,   195,     0,   196,   197,   698,   199,
       0,   200,     0,   201,   202,     0,   203,   204,   205,   206,
     207,   208,     0,   209,     0,   210,   211,     0,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,     0,
     223,   224,   225,   226,   227,   228,     0,   229,   230,   231,
     232,   233,   234,   235,   699,   700,     0,   701,     0,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,     0,
       0,   249,   250,   251,   252,     0,   253,   254,   255,   702,
     703,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   704,   280,   705,   282,   283,   284,
     285,   706,   286,   287,   288,   289,   707,   708,   291,   709,
     293,   294,   295,     0,   296,   297,     0,     0,   710,   299,
     300,     0,     0,   301,   302,   303,   304,   305,   711,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,     0,
     317,   318,   712,   320,   321,   322,   323,   324,   325,     0,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   713,
     336,   337,   338,   339,     0,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,     0,   352,   353,
     354,   355,   356,   357,   714,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,    25,   370,   371,   372,
     373,   374,   715,   375,   376,   377,   378,   379,   380,   381,
     382,   716,   384,     0,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   717,     0,   399,
     400,    29,   401,   402,   403,   404,   405,   406,   407,     0,
     718,   719,     0,     0,   410,   411,   720,   413,   721,   722,
     415,   416,   417,   418,   419,   420,   421,     0,     0,   422,
     423,   424,   425,   426,   723,     0,   427,   428,   429,   430,
     431,   592,   724,     0,   434,   435,   436,   437,   438,   439,
       0,     0,   440,     0,    32,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   725,     0,    33,     0,
       0,     0,     0,   726,   727,     0,     0,     0,     0,     0,
       0,     0,   729,     0,     0,     0,     0,   730,    89,   669,
     531,   670,   671,   672,   673,   674,     0,     0,     0,     0,
       0,     0,     0,    90,    91,    92,    93,    94,    95,    96,
      97,     0,    98,    99,   100,     0,     0,     0,     0,     0,
       0,     0,   101,   102,     0,   103,   104,   105,   106,   107,
     108,   109,   110,   675,   112,   676,   677,  1455,   115,   116,
     117,   118,   119,   120,   678,   679,   121,   122,   680,   681,
     125,     0,   126,   127,   128,   129,   682,     0,   683,     0,
     132,   133,   134,   135,   136,   137,   138,   139,   140,     0,
     141,   142,   143,   144,   145,   146,     0,   147,   148,   149,
     150,   684,   685,   686,   687,   688,   689,   690,   152,   153,
     154,   155,   156,   157,   158,   691,   692,   161,   693,   162,
       0,   163,   164,   165,   166,   167,   168,     0,   169,   170,
     171,   172,   173,     0,     0,   174,   175,   694,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,   188,   695,   190,   191,   192,   193,   696,   697,
     195,     0,   196,   197,   698,   199,     0,   200,     0,   201,
     202,  1456,   203,   204,   205,   206,   207,   208,     0,   209,
       0,   210,   211,     0,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,     0,   223,   224,   225,   226,
     227,   228,     0,   229,   230,   231,   232,   233,   234,   235,
     699,   700,     0,   701,     0,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,     0,  1457,   249,   250,   251,
     252,     0,   253,   254,   255,   702,   703,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     704,   280,   705,   282,   283,   284,   285,   706,   286,   287,
     288,   289,   707,   708,   291,   709,   293,   294,   295,     0,
     296,   297,     0,     0,   710,   299,   300,     0,     0,   301,
     302,   303,   304,   305,   711,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,     0,   317,   318,   712,   320,
     321,   322,   323,   324,   325,     0,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   713,   336,   337,   338,   339,
       0,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,     0,   352,   353,   354,   355,   356,   357,
     714,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,     0,   370,   371,   372,   373,   374,   715,   375,
     376,   377,   378,   379,   380,   381,   382,   716,   384,     0,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   717,     0,   399,   400,     0,   401,   402,
     403,   404,   405,   406,   407,     0,   718,   719,     0,  1458,
     410,   411,   720,   413,   721,   722,   415,   416,   417,   418,
     419,   420,   421,     0,     0,   422,   423,   424,   425,   426,
     723,     0,   427,   428,   429,   430,   431,   432,   724,     0,
     434,   435,   436,   437,   438,   439,     0,     0,   440,     0,
       0,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   725,     0,     0,     0,     0,     0,     0,   726,
     727,     0,     0,     0,     0,     0,     0,     0,   729,     0,
       0,     0,     0,   730,    89,   669,   531,   670,   671,   672,
     673,   674,     0,     0,     0,     0,     0,     0,     0,    90,
      91,    92,    93,    94,    95,    96,    97,     0,    98,    99,
     100,     0,     0,     0,     0,     0,     0,     0,   101,   102,
       0,   103,   104,   105,   106,   107,   108,   109,   110,   675,
     112,   676,   677,     0,   115,   116,   117,   118,   119,   120,
     678,   679,   121,   122,   680,   681,   125,     0,   126,   127,
     128,   129,   682,     0,   683,     0,   132,   133,   134,   135,
     136,   137,   138,   139,   140,     0,   141,   142,   143,   144,
     145,   146,     0,   147,   148,   149,   150,   684,   685,   686,
     687,   688,   689,   690,   152,   153,   154,   155,   156,   157,
     158,   691,   692,   161,   693,   162,     0,   163,   164,   165,
     166,   167,   168,     0,   169,   170,   171,   172,   173,     0,
       0,   174,   175,   694,   177,   178,     0,   179,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,   188,   695,
     190,   191,   192,   193,   696,   697,   195,     0,   196,   197,
     698,   199,     0,   200,     0,   201,   202,     0,   203,   204,
     205,   206,   207,   208,     0,   209,     0,   210,   211,     0,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,     0,   223,   224,   225,   226,   227,   228,     0,   229,
     230,   231,   232,   233,   234,   235,   699,   700,     0,   701,
       0,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,     0,     0,   249,   250,   251,   252,     0,   253,   254,
     255,   702,   703,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   704,   280,   705,   282,
     283,   284,   285,   706,   286,   287,   288,   289,   707,   708,
     291,   709,   293,   294,   295,     0,   296,   297,     0,     0,
     710,   299,   300,     0,     0,   301,   302,   303,   304,   305,
     711,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,     0,   317,   318,   712,   320,   321,   322,   323,   324,
     325,     0,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   713,   336,   337,   338,   339,     0,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,     0,
     352,   353,   354,   355,   356,   357,   714,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,     0,   370,
     371,   372,   373,   374,   715,   375,   376,   377,   378,   379,
     380,   381,   382,   716,   384,     0,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   717,
       0,   399,   400,     0,   401,   402,   403,   404,   405,   406,
     407,     0,   718,   719,     0,     0,   410,   411,   720,   413,
     721,   722,   415,   416,   417,   418,   419,   420,   421,     0,
       0,   422,   423,   424,   425,   426,   723,     0,   427,   428,
     429,   430,   431,   432,   724,     0,   434,   435,   436,   437,
     438,   439,     0,     0,   440,     0,     0,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   725,     0,
       0,     0,     0,     0,     0,   726,   727,   728,     0,     0,
       0,     0,     0,     0,   729,     0,     0,     0,     0,   730,
      89,   669,   531,   670,   671,   672,   673,   674,     0,     0,
       0,     0,     0,     0,     0,    90,    91,    92,    93,    94,
      95,    96,    97,  1199,    98,    99,   100,     0,     0,     0,
       0,     0,     0,     0,   101,   102,     0,   103,   104,   105,
     106,   107,   108,   109,   110,   675,   112,   676,   677,     0,
     115,   116,   117,   118,   119,   120,   678,   679,   121,   122,
     680,   681,   125,     0,   126,   127,   128,   129,   682,     0,
     683,     0,   132,   133,   134,   135,   136,   137,   138,   139,
     140,     0,   141,   142,   143,   144,   145,   146,     0,   147,
     148,   149,   150,   684,   685,   686,   687,   688,   689,   690,
     152,   153,   154,   155,   156,   157,   158,   691,   692,   161,
     693,   162,     0,   163,   164,   165,   166,   167,   168,     0,
     169,   170,   171,   172,   173,     0,     0,   174,   175,   694,
     177,   178,     0,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,   188,   695,   190,   191,   192,   193,
     696,   697,   195,     0,   196,   197,   698,   199,     0,   200,
       0,   201,   202,     0,   203,   204,   205,   206,   207,   208,
       0,   209,     0,   210,   211,     0,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,     0,   223,   224,
     225,   226,   227,   228,     0,   229,   230,   231,   232,   233,
     234,   235,   699,   700,     0,   701,     0,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,     0,     0,   249,
     250,   251,   252,     0,   253,   254,   255,   702,   703,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   704,   280,   705,   282,   283,   284,   285,   706,
     286,   287,   288,   289,   707,   708,   291,   709,   293,   294,
     295,     0,   296,   297,     0,     0,   710,   299,   300,     0,
       0,   301,   302,   303,   304,   305,   711,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,     0,   317,   318,
     712,   320,   321,   322,   323,   324,   325,     0,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   713,   336,   337,
     338,   339,     0,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,     0,   352,   353,   354,   355,
     356,   357,   714,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,     0,   370,   371,   372,   373,   374,
     715,   375,   376,   377,   378,   379,   380,   381,   382,   716,
     384,     0,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   717,     0,   399,   400,     0,
     401,   402,   403,   404,   405,   406,   407,     0,   718,   719,
       0,     0,   410,   411,   720,   413,   721,   722,   415,   416,
     417,   418,   419,   420,   421,     0,     0,   422,   423,   424,
     425,   426,   723,     0,   427,   428,   429,   430,   431,   432,
     724,     0,   434,   435,   436,   437,   438,   439,     0,     0,
     440,     0,     0,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   725,     0,     0,     0,     0,     0,
       0,   726,   727,     0,     0,     0,     0,     0,     0,     0,
     729,     0,     0,     0,     0,   730,    89,   669,   531,   670,
     671,   672,   673,   674,     0,     0,     0,     0,     0,     0,
       0,    90,    91,    92,    93,    94,    95,    96,    97,     0,
      98,    99,   100,     0,     0,     0,     0,     0,     0,     0,
     101,   102,     0,   103,   104,   105,   106,   107,   108,   109,
     110,   675,   112,   676,   677,     0,   115,   116,   117,   118,
     119,   120,   678,   679,   121,   122,   680,   681,   125,     0,
     126,   127,   128,   129,   682,     0,   683,     0,   132,   133,
     134,   135,   136,   137,   138,   139,   140,     0,   141,   142,
     143,   144,   145,   146,     0,   147,   148,   149,   150,   684,
     685,   686,   687,   688,   689,   690,   152,   153,   154,   155,
     156,   157,   158,   691,   692,   161,   693,   162,     0,   163,
     164,   165,   166,   167,   168,     0,   169,   170,   171,   172,
     173,     0,     0,   174,   175,   694,   177,   178,     0,   179,
     180,   181,     0,   182,   183,   184,     0,   185,   186,   187,
     188,   695,   190,   191,   192,   193,   696,   697,   195,     0,
     196,   197,   698,   199,     0,   200,     0,   201,   202,     0,
     203,   204,   205,   206,   207,   208,     0,   209,     0,   210,
     211,     0,   212,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,     0,   223,   224,   225,   226,   227,   228,
       0,   229,   230,   231,   232,   233,   234,   235,   699,   700,
       0,   701,     0,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,     0,     0,   249,   250,   251,   252,     0,
     253,   254,   255,   702,   703,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   704,   280,
     705,   282,   283,   284,   285,   706,   286,   287,   288,   289,
     707,   708,   291,   709,   293,   294,   295,     0,   296,   297,
       0,     0,   710,   299,   300,     0,     0,   301,   302,   303,
     304,   305,   711,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,     0,   317,   318,   712,   320,   321,   322,
     323,   324,   325,     0,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   713,   336,   337,   338,   339,     0,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,     0,   352,   353,   354,   355,   356,   357,   714,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
       0,   370,   371,   372,   373,   374,   715,   375,   376,   377,
     378,   379,   380,   381,   382,   716,   384,     0,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   717,     0,   399,   400,     0,   401,   402,   403,   404,
     405,   406,   407,     0,   718,   719,     0,     0,   410,   411,
     720,   413,   721,   722,   415,   416,   417,   418,   419,   420,
     421,     0,     0,   422,   423,   424,   425,   426,   723,     0,
     427,   428,   429,   430,   431,   432,   724,     0,   434,   435,
     436,   437,   438,   439,     0,     0,   440,     0,     0,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     725,     0,     0,     0,     0,     0,     0,   726,   727,     0,
       0,     0,     0,     0,     0,     0,   729,  1312,     0,     0,
       0,   730,    89,   669,   531,   670,   671,   672,   673,   674,
       0,     0,     0,     0,     0,     0,     0,    90,    91,    92,
      93,    94,    95,    96,    97,     0,    98,    99,   100,     0,
       0,     0,     0,     0,     0,     0,   101,   102,     0,   103,
     104,   105,   106,   107,   108,   109,   110,   675,   112,   676,
     677,     0,   115,   116,   117,   118,   119,   120,   678,   679,
     121,   122,   680,   681,   125,     0,   126,   127,   128,   129,
     682,     0,   683,     0,   132,   133,   134,   135,   136,   137,
     138,   139,   140,     0,   141,   142,   143,   144,   145,   146,
       0,   147,   148,   149,   150,   684,   685,   686,   687,   688,
     689,   690,   152,   153,   154,   155,   156,   157,   158,   691,
     692,   161,   693,   162,     0,   163,   164,   165,   166,   167,
     168,     0,   169,   170,   171,   172,   173,     0,     0,   174,
     175,   694,   177,   178,     0,   179,   180,   181,     0,   182,
     183,   184,     0,   185,   186,   187,   188,   695,   190,   191,
     192,   193,   696,   697,   195,     0,   196,   197,   698,   199,
       0,   200,     0,   201,   202,     0,   203,   204,   205,   206,
     207,   208,     0,   209,     0,   210,   211,     0,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,     0,
     223,   224,   225,   226,   227,   228,     0,   229,   230,   231,
     232,   233,   234,   235,   699,   700,     0,   701,     0,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,     0,
       0,   249,   250,   251,   252,     0,   253,   254,   255,   702,
     703,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   704,   280,   705,   282,   283,   284,
     285,   706,   286,   287,   288,   289,   707,   708,   291,   709,
     293,   294,   295,     0,   296,   297,     0,     0,   710,   299,
     300,     0,     0,   301,   302,   303,   304,   305,   711,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,     0,
     317,   318,   712,   320,   321,   322,   323,   324,   325,     0,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   713,
     336,   337,   338,   339,     0,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,     0,   352,   353,
     354,   355,   356,   357,   714,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,     0,   370,   371,   372,
     373,   374,   715,   375,   376,   377,   378,   379,   380,   381,
     382,   716,   384,     0,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   717,     0,   399,
     400,     0,   401,   402,   403,   404,   405,   406,   407,     0,
     718,   719,     0,     0,   410,   411,   720,   413,   721,   722,
     415,   416,   417,   418,   419,   420,   421,     0,     0,   422,
     423,   424,   425,   426,   723,     0,   427,   428,   429,   430,
     431,   432,   724,     0,   434,   435,   436,   437,   438,   439,
       0,     0,   440,     0,     0,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   725,     0,     0,     0,
       0,     0,     0,   726,   727,     0,     0,     0,     0,     0,
       0,     0,   729,  1445,     0,     0,     0,   730,    89,   669,
     531,   670,   671,   672,   673,   674,     0,     0,     0,     0,
       0,     0,     0,    90,    91,    92,    93,    94,    95,    96,
      97,     0,    98,    99,   100,     0,     0,     0,     0,     0,
       0,     0,   101,   102,     0,   103,   104,   105,   106,   107,
     108,   109,   110,   675,   112,   676,   677,     0,   115,   116,
     117,   118,   119,   120,   678,   679,   121,   122,   680,   681,
     125,     0,   126,   127,   128,   129,   682,     0,   683,     0,
     132,   133,   134,   135,   136,   137,   138,   139,   140,     0,
     141,   142,   143,   144,   145,   146,     0,   147,   148,   149,
     150,   684,   685,   686,   687,   688,   689,   690,   152,   153,
     154,   155,   156,   157,   158,   691,   692,   161,   693,   162,
       0,   163,   164,   165,   166,   167,   168,     0,   169,   170,
     171,   172,   173,     0,     0,   174,   175,   694,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,   188,   695,   190,   191,   192,   193,   696,   697,
     195,     0,   196,   197,   698,   199,     0,   200,     0,   201,
     202,     0,   203,   204,   205,   206,   207,   208,     0,   209,
       0,   210,   211,     0,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,     0,   223,   224,   225,   226,
     227,   228,     0,   229,   230,   231,   232,   233,   234,   235,
     699,   700,     0,   701,     0,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,     0,     0,   249,   250,   251,
     252,     0,   253,   254,   255,   702,   703,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     704,   280,   705,   282,   283,   284,   285,   706,   286,   287,
     288,   289,   707,   708,   291,   709,   293,   294,   295,     0,
     296,   297,     0,     0,   710,   299,   300,     0,     0,   301,
     302,   303,   304,   305,   711,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,     0,   317,   318,   712,   320,
     321,   322,   323,   324,   325,     0,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   713,   336,   337,   338,   339,
       0,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,     0,   352,   353,   354,   355,   356,   357,
     714,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,     0,   370,   371,   372,   373,   374,   715,   375,
     376,   377,   378,   379,   380,   381,   382,   716,   384,     0,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   717,     0,   399,   400,     0,   401,   402,
     403,   404,   405,   406,   407,     0,   718,   719,     0,     0,
     410,   411,   720,   413,   721,   722,   415,   416,   417,   418,
     419,   420,   421,     0,     0,   422,   423,   424,   425,   426,
     723,     0,   427,   428,   429,   430,   431,   432,   724,  1652,
     434,   435,   436,   437,   438,   439,     0,     0,   440,     0,
       0,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   725,     0,     0,     0,     0,     0,     0,   726,
     727,     0,     0,     0,     0,     0,     0,     0,   729,     0,
       0,     0,     0,   730,    89,   669,   531,   670,   671,   672,
     673,   674,     0,     0,     0,     0,     0,     0,     0,    90,
      91,    92,    93,    94,    95,    96,    97,     0,    98,    99,
     100,     0,     0,     0,     0,     0,     0,     0,   101,   102,
       0,   103,   104,   105,   106,   107,   108,   109,   110,   675,
     112,   676,   677,     0,   115,   116,   117,   118,   119,   120,
     678,   679,   121,   122,   680,   681,   125,     0,   126,   127,
     128,   129,   682,     0,   683,     0,   132,   133,   134,   135,
     136,   137,   138,   139,   140,     0,   141,   142,   143,   144,
     145,   146,     0,   147,   148,   149,   150,   684,   685,   686,
     687,   688,   689,   690,   152,   153,   154,   155,   156,   157,
     158,   691,   692,   161,   693,   162,     0,   163,   164,   165,
     166,   167,   168,     0,   169,   170,   171,   172,   173,     0,
       0,   174,   175,   694,   177,   178,     0,   179,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,   188,   695,
     190,   191,   192,   193,   696,   697,   195,     0,   196,   197,
     698,   199,     0,   200,     0,   201,   202,  1456,   203,   204,
     205,   206,   207,   208,     0,   209,     0,   210,   211,     0,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,     0,   223,   224,   225,   226,   227,   228,     0,   229,
     230,   231,   232,   233,   234,   235,   699,   700,     0,   701,
       0,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,     0,     0,   249,   250,   251,   252,     0,   253,   254,
     255,   702,   703,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   704,   280,   705,   282,
     283,   284,   285,   706,   286,   287,   288,   289,   707,   708,
     291,   709,   293,   294,   295,     0,   296,   297,     0,     0,
     710,   299,   300,     0,     0,   301,   302,   303,   304,   305,
     711,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,     0,   317,   318,   712,   320,   321,   322,   323,   324,
     325,     0,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   713,   336,   337,   338,   339,     0,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,     0,
     352,   353,   354,   355,   356,   357,   714,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,     0,   370,
     371,   372,   373,   374,   715,   375,   376,   377,   378,   379,
     380,   381,   382,   716,   384,     0,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   717,
       0,   399,   400,     0,   401,   402,   403,   404,   405,   406,
     407,     0,   718,   719,     0,     0,   410,   411,   720,   413,
     721,   722,   415,   416,   417,   418,   419,   420,   421,     0,
       0,   422,   423,   424,   425,   426,   723,     0,   427,   428,
     429,   430,   431,   432,   724,     0,   434,   435,   436,   437,
     438,   439,     0,     0,   440,     0,     0,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   725,     0,
       0,     0,     0,     0,     0,   726,   727,     0,     0,     0,
       0,     0,     0,     0,   729,     0,     0,     0,     0,   730,
      89,   669,   531,   670,   671,   672,   673,   674,     0,     0,
       0,     0,     0,     0,     0,    90,    91,    92,    93,    94,
      95,    96,    97,     0,    98,    99,   100,     0,     0,     0,
       0,     0,     0,     0,   101,   102,     0,   103,   104,   105,
     106,   107,   108,   109,   110,   675,   112,   676,   677,     0,
     115,   116,   117,   118,   119,   120,   678,   679,   121,   122,
     680,   681,   125,     0,   126,   127,   128,   129,   682,     0,
     683,     0,   132,   133,   134,   135,   136,   137,   138,   139,
     140,     0,   141,   142,   143,   144,   145,   146,     0,   147,
     148,   149,   150,   684,   685,   686,   687,   688,   689,   690,
     152,   153,   154,   155,   156,   157,   158,   691,   692,   161,
     693,   162,     0,   163,   164,   165,   166,   167,   168,     0,
     169,   170,   171,   172,   173,     0,     0,   174,   175,   694,
     177,   178,     0,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,   188,   695,   190,   191,   192,   193,
     696,   697,   195,     0,   196,   197,   698,   199,     0,   200,
       0,   201,   202,     0,   203,   204,   205,   206,   207,   208,
       0,   209,     0,   210,   211,     0,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,     0,   223,   224,
     225,   226,   227,   228,     0,   229,   230,   231,   232,   233,
     234,   235,   699,   700,     0,   701,     0,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,     0,     0,   249,
     250,   251,   252,     0,   253,   254,   255,   702,   703,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   704,   280,   705,   282,   283,   284,   285,   706,
     286,   287,   288,   289,   707,   708,   291,   709,   293,   294,
     295,     0,   296,   297,     0,     0,   710,   299,   300,     0,
       0,   301,   302,   303,   304,   305,   711,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,     0,   317,   318,
     712,   320,   321,   322,   323,   324,   325,     0,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   713,   336,   337,
     338,   339,     0,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,     0,   352,   353,   354,   355,
     356,   357,   714,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,     0,   370,   371,   372,   373,   374,
     715,   375,   376,   377,   378,   379,   380,   381,   382,   716,
     384,     0,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   717,     0,   399,   400,     0,
     401,   402,   403,   404,   405,   406,   407,     0,   718,   719,
       0,     0,   410,   411,   720,   413,   721,   722,   415,   416,
     417,   418,   419,   420,   421,     0,     0,   422,   423,   424,
     425,   426,   723,     0,   427,   428,   429,   430,   431,   432,
     724,     0,   434,   435,   436,   437,   438,   439,     0,     0,
     440,     0,     0,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   725,     0,     0,     0,     0,     0,
       0,   726,   727,     0,     0,     0,     0,     0,     0,     0,
     729,     0,     0,     0,     0,   730,    89,   669,   531,   670,
     671,   672,   673,   674,     0,     0,     0,     0,     0,     0,
       0,    90,    91,    92,    93,    94,    95,    96,    97,     0,
      98,    99,   100,     0,     0,     0,     0,     0,     0,     0,
     101,   102,     0,   103,   104,   105,   106,   107,   108,   109,
     110,   675,   112,   676,   677,     0,   115,   116,   117,   118,
     119,   120,   678,   679,   121,   122,   680,   681,   125,     0,
     126,   127,   128,   129,   682,     0,   683,     0,   132,   133,
     134,   135,   136,   137,   138,   139,   140,     0,   141,   142,
     143,   144,   145,   146,     0,   147,   148,   149,   150,   684,
     685,   686,   687,   688,   689,   690,   152,   153,   154,   155,
     156,   157,   158,   691,   692,   161,   693,   162,     0,   163,
     164,   165,   166,   167,   168,     0,   169,   170,   171,   172,
     173,     0,     0,   174,   175,   694,   177,   178,     0,   179,
     180,   181,     0,   182,   183,   184,     0,   185,   186,   187,
     188,   695,   190,   191,   192,   193,   696,   697,   195,     0,
     196,   197,   698,   199,     0,   200,     0,   201,   202,     0,
     203,   204,   205,   206,   207,   208,     0,   209,     0,   210,
     211,     0,   212,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,     0,   223,   224,   225,   226,   227,   228,
       0,   229,   230,   231,   232,   233,   234,   235,   699,   700,
       0,   701,     0,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,     0,     0,   249,   250,   251,   252,     0,
     253,   254,   255,   702,   703,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   704,   280,
     705,   282,   283,   284,   285,   706,   286,   287,   288,   289,
     707,   708,   291,   709,   293,   294,   295,     0,   296,   297,
       0,     0,   710,   299,   300,     0,     0,   301,   302,   303,
     304,   305,   711,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,     0,   317,   318,   712,   320,   321,   322,
     323,   324,   325,     0,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   713,   336,   337,   338,   339,     0,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,     0,   352,   353,   354,   355,   356,   357,   714,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
       0,   370,   371,   372,   373,   374,   715,   375,   376,   377,
     378,   379,   380,   381,   382,   716,   384,     0,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   717,     0,   399,   400,     0,   401,   402,   403,   404,
     405,   406,   407,     0,   718,   719,     0,     0,   410,   411,
     720,   413,   721,   722,   415,   416,   417,   418,   419,   420,
     421,     0,     0,   422,   423,   424,   425,   426,   723,     0,
     427,   428,   429,   430,   431,   432,   724,     0,   434,   435,
     436,   437,   438,   439,     0,     0,   440,     0,     0,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     725,     0,     0,     0,     0,     0,     0,  1202,  1203,     0,
       0,     0,     0,     0,     0,     0,   729,     0,     0,     0,
       0,   730,    89,  1577,   531,   670,   671,   672,   673,   674,
       0,     0,     0,     0,     0,     0,     0,    90,    91,    92,
      93,    94,    95,    96,    97,     0,    98,    99,   100,     0,
       0,     0,     0,     0,     0,     0,   101,   102,     0,   103,
     104,   105,   106,   107,   108,   109,   110,   675,   112,   676,
     677,     0,   115,   116,   117,   118,   119,   120,   678,   679,
     121,   122,   680,   681,   125,     0,   126,   127,   128,   129,
     682,     0,   683,     0,   132,   133,   134,   135,   136,   137,
     138,   139,   140,     0,   141,   142,   143,   144,   145,   146,
       0,   147,   148,   149,   150,   684,   685,   686,   687,   688,
     689,   690,   152,   153,   154,   155,   156,   157,   158,   691,
     692,   161,   693,   162,     0,   163,   164,   165,   166,   167,
     168,     0,   169,   170,   171,   172,   173,     0,     0,   174,
     175,   694,   177,   178,     0,   179,   180,   181,     0,   182,
     183,   184,     0,   185,   186,   187,   188,   695,   190,   191,
     192,   193,   696,   697,   195,     0,   196,   197,   698,   199,
       0,   200,     0,   201,   202,     0,   203,   204,   205,   206,
     207,   208,     0,   209,     0,   210,   211,     0,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,     0,
     223,   224,   225,   226,   227,   228,     0,   229,   230,   231,
     232,   233,   234,   235,   699,   700,     0,   701,     0,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,     0,
       0,   249,   250,   251,   252,     0,   253,   254,   255,   702,
     703,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   704,   280,   705,   282,   283,   284,
     285,   706,   286,   287,   288,   289,   707,   708,   291,   709,
     293,   294,   295,     0,   296,   297,     0,     0,   710,   299,
     300,     0,     0,   301,   302,   303,   304,   305,   711,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,     0,
     317,   318,   712,   320,   321,   322,   323,   324,   325,     0,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   713,
     336,   337,   338,   339,     0,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,     0,   352,   353,
     354,   355,   356,   357,   714,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,     0,   370,   371,   372,
     373,   374,   715,   375,   376,   377,   378,   379,   380,   381,
     382,   716,   384,     0,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   717,     0,   399,
     400,     0,   401,   402,   403,   404,   405,   406,   407,     0,
     718,   719,     0,     0,   410,   411,   720,   413,   721,   722,
     415,   416,   417,   418,   419,   420,   421,     0,     0,   422,
     423,   424,   425,   426,   723,     0,   427,   428,   429,   430,
     431,   432,   724,     0,   434,   435,   436,   437,   438,   439,
       0,     0,   440,     0,     0,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   725,     0,     0,     0,
       0,     0,     0,   726,   727,     0,     0,     0,     0,     0,
       0,     0,   729,     0,     0,     0,     0,   730,    89,   669,
     531,   670,   671,   672,   673,   674,     0,     0,     0,     0,
       0,     0,     0,    90,    91,    92,    93,    94,    95,    96,
      97,     0,    98,    99,   100,     0,     0,     0,     0,     0,
       0,     0,   101,   102,     0,   103,   104,   105,   106,   107,
     108,   109,   110,   675,   112,   676,   677,     0,   115,   116,
     117,   118,   119,   120,   678,   679,   121,   122,   680,   681,
     125,     0,   126,   127,   128,   129,   682,     0,   683,     0,
     132,   133,   134,   135,   136,   137,   138,   139,   140,     0,
     141,   142,   143,   144,   145,   146,     0,   147,   148,   149,
     150,   684,   685,   686,   687,   688,   689,   690,   152,   153,
     154,   155,   156,   157,   158,   691,   692,   161,   693,   162,
       0,   163,   164,   165,   166,   167,   168,     0,   169,   170,
     171,   172,   173,     0,     0,   174,   175,   694,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,   188,   695,   190,   191,   192,   193,   696,   697,
     195,     0,   196,   197,   698,   199,     0,   200,     0,   201,
     202,     0,   203,   204,   205,   206,   207,   208,     0,   209,
       0,   210,   211,     0,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,     0,   223,   224,   225,   226,
     227,   228,     0,   229,   230,   231,   232,   233,   234,   235,
     699,   700,     0,   701,     0,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,     0,     0,   249,   250,   251,
     252,     0,   253,   254,   255,   702,   703,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     704,   280,   705,   282,   283,   284,   285,   706,   286,   287,
     288,   289,   707,   708,   291,   709,   293,   294,   295,     0,
     296,   297,     0,     0,   710,   299,   300,     0,     0,   301,
     302,   303,   304,   305,   711,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,     0,   317,   318,   712,   320,
     321,   322,   323,   324,   325,     0,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   713,   336,   337,   338,   339,
       0,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,     0,   352,   353,   354,   355,   356,   357,
     714,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,     0,   370,   371,   372,   373,   374,   715,   375,
     376,   377,   378,   379,   380,   381,   382,   716,   384,     0,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   717,     0,   399,   400,     0,   401,   402,
     403,   404,   405,   406,   407,     0,   718,   719,     0,     0,
     410,   411,   720,   413,   721,   722,   415,   416,   417,   418,
     419,   420,   421,     0,     0,   422,   423,   424,   425,   426,
     723,     0,   427,   428,   429,   430,   431,   432,   724,     0,
     434,   435,   436,   437,   438,   439,     0,     0,   440,     0,
       0,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   725,     0,     0,     0,     0,     0,     0,   726,
     727,     0,     0,     0,     0,     0,     0,     0,  2407,     0,
       0,     0,     0,   730,    89,   669,   531,   670,   671,   672,
     673,   674,     0,     0,     0,     0,     0,     0,     0,    90,
      91,    92,    93,    94,    95,    96,    97,     0,    98,    99,
     100,     0,     0,     0,     0,     0,     0,     0,   101,   102,
       0,   103,   104,   105,   106,   107,   108,   109,  2606,   675,
     112,   676,   677,     0,   115,   116,   117,   118,   119,   120,
     678,   679,   121,   122,   680,   681,   125,     0,   126,   127,
     128,   129,   682,     0,   683,     0,   132,   133,   134,   135,
     136,   137,   138,   139,   140,     0,   141,   142,   143,   144,
     145,   146,     0,   147,   148,   149,  2607,   684,   685,   686,
     687,   688,   689,   690,   152,   153,   154,   155,   156,   157,
     158,   691,   692,   161,   693,   162,     0,   163,   164,   165,
     166,   167,   168,     0,   169,   170,   171,   172,   173,     0,
       0,   174,   175,   694,   177,   178,     0,   179,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,   188,   695,
     190,   191,   192,   193,   696,   697,   195,     0,   196,   197,
     698,   199,     0,   200,     0,   201,   202,     0,   203,   204,
     205,   206,   207,   208,     0,   209,     0,   210,   211,     0,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,     0,   223,   224,   225,   226,   227,   228,     0,   229,
     230,   231,   232,   233,   234,   235,   699,   700,     0,   701,
       0,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,     0,     0,   249,   250,   251,   252,     0,   253,   254,
     255,   702,   703,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   704,   280,   705,   282,
     283,   284,   285,   706,   286,   287,   288,   289,   707,   708,
     291,   709,   293,   294,   295,     0,   296,   297,     0,     0,
     710,   299,   300,     0,     0,   301,   302,   303,   304,   305,
     711,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,     0,   317,   318,   712,   320,   321,   322,   323,   324,
     325,     0,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   713,   336,   337,   338,   339,     0,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,     0,
     352,   353,   354,   355,   356,   357,   714,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,     0,   370,
     371,   372,   373,   374,   715,   375,   376,   377,   378,   379,
     380,   381,   382,   716,   384,     0,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   717,
       0,   399,   400,     0,   401,   402,   403,   404,   405,   406,
     407,     0,   718,   719,     0,     0,   410,   411,   720,   413,
     721,   722,   415,   416,   417,   418,  2608,   420,   421,     0,
       0,   422,   423,   424,   425,   426,   723,     0,   427,   428,
     429,   430,   431,   432,   724,     0,   434,   435,   436,   437,
     438,   439,     0,     0,   440,     0,     0,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   725,     0,
       0,     0,     0,     0,     0,   726,   727,     0,     0,     0,
       0,     0,     0,     0,   729,     0,     0,     0,     0,   730,
      89,   669,   531,   670,   671,   672,   673,   674,     0,     0,
       0,     0,     0,     0,     0,    90,    91,    92,    93,    94,
      95,    96,    97,     0,    98,    99,   100,     0,     0,     0,
       0,     0,     0,     0,   101,   102,     0,   103,   104,   105,
     106,   107,   108,   109,   110,   675,   112,   676,   677,     0,
     115,   116,   117,   118,   119,   120,   678,   679,   121,   122,
     680,   681,   125,     0,   126,   127,   128,   129,   682,     0,
     683,     0,   132,   133,   134,   135,   136,   137,   138,   139,
     140,     0,   141,   142,   143,   144,   145,   146,     0,   147,
     148,   149,  2607,   684,   685,   686,   687,   688,   689,   690,
     152,   153,   154,   155,   156,   157,   158,   691,   692,   161,
     693,   162,     0,   163,   164,   165,   166,   167,   168,     0,
     169,   170,   171,   172,   173,     0,     0,   174,   175,   694,
     177,   178,     0,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,   188,   695,   190,   191,   192,   193,
     696,   697,   195,     0,   196,   197,   698,   199,     0,   200,
       0,   201,   202,     0,   203,   204,   205,   206,   207,   208,
       0,   209,     0,   210,   211,     0,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,     0,   223,   224,
     225,   226,   227,   228,     0,   229,   230,   231,   232,   233,
     234,   235,   699,   700,     0,   701,     0,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,     0,     0,   249,
     250,   251,   252,     0,   253,   254,   255,   702,   703,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   704,   280,   705,   282,   283,   284,   285,   706,
     286,   287,   288,   289,   707,   708,   291,   709,   293,   294,
     295,     0,   296,   297,     0,     0,   710,   299,   300,     0,
       0,   301,   302,   303,   304,   305,   711,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,     0,   317,   318,
     712,   320,   321,   322,   323,   324,   325,     0,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   713,   336,   337,
     338,   339,     0,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,     0,   352,   353,   354,   355,
     356,   357,   714,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,     0,   370,   371,   372,   373,   374,
     715,   375,   376,   377,   378,   379,   380,   381,   382,   716,
     384,     0,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   717,     0,   399,   400,     0,
     401,   402,   403,   404,   405,   406,   407,     0,   718,   719,
       0,     0,   410,   411,   720,   413,   721,   722,   415,   416,
     417,   418,  2608,   420,   421,     0,     0,   422,   423,   424,
     425,   426,   723,     0,   427,   428,   429,   430,   431,   432,
     724,     0,   434,   435,   436,   437,   438,   439,     0,     0,
     440,     0,     0,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   725,     0,     0,     0,     0,     0,
       0,   726,   727,     0,     0,     0,     0,     0,     0,     0,
     729,     0,     0,     0,     0,   730,    89,   669,   531,   670,
     671,   672,   673,   674,     0,     0,     0,     0,     0,     0,
       0,    90,    91,    92,    93,    94,    95,    96,    97,     0,
      98,    99,   100,     0,     0,     0,     0,     0,     0,     0,
     101,   102,     0,   103,   104,   105,   106,   107,   108,   109,
     110,   675,   112,   676,   677,     0,   115,   116,   117,   118,
     119,   120,   678,   679,   121,   122,   680,   681,   125,     0,
     126,   127,   128,   129,   682,     0,   683,     0,   132,   133,
     134,   135,   136,   137,   138,   139,   140,     0,   141,   142,
     143,   144,   145,   146,     0,   147,   148,   149,   150,   684,
     685,   686,   687,   688,   689,   690,   152,   153,   154,   155,
     156,   157,   158,   691,   692,   161,     0,   162,     0,   163,
     164,   165,   166,   167,   168,     0,   169,   170,   171,   172,
     173,     0,     0,   174,   175,   694,   177,   178,     0,   179,
     180,   181,     0,   182,   183,   184,     0,   185,   186,   187,
     188,   695,   190,   191,   192,   193,   696,   697,   195,     0,
     196,   197,   698,   199,     0,   200,     0,   201,   202,     0,
     203,   204,   205,   206,   207,   208,     0,   209,     0,   210,
     211,     0,   212,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,     0,   223,   224,   225,   226,   227,   228,
       0,   229,   230,   231,   232,   233,   234,   235,   699,   700,
       0,   701,     0,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,     0,     0,   249,   250,   251,   252,     0,
     253,   254,   255,   702,   703,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   704,   280,
     705,   282,   283,   284,   285,     0,   286,   287,   288,   289,
     707,   708,   291,   709,   293,   294,   295,     0,   296,   297,
       0,     0,   710,   299,   300,     0,     0,   301,   302,   303,
     304,   305,   711,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,     0,   317,   318,   712,   320,   321,   322,
     323,   324,   325,     0,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   713,   336,   337,   338,   339,     0,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,     0,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
       0,   370,   371,   372,   373,   374,   715,   375,   376,   377,
     378,   379,   380,   381,   382,   716,   384,     0,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   717,     0,   399,   400,     0,   401,   402,   403,   404,
     405,   406,   407,     0,   718,   719,     0,     0,   410,   411,
     720,   413,   721,   722,   415,   416,   417,   418,   419,   420,
     421,     0,     0,   422,   423,   424,   425,   426,   723,     0,
     427,   428,   429,   430,   431,   432,   724,     0,   434,   435,
     436,   437,   438,   439,     0,     0,   440,     0,     0,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
       0,     0,     0,     0,     0,     0,     0,  1438,  1439,     0,
       0,    89,   669,   531,   670,   671,  1440,   673,   674,     0,
       0,   730,     0,     0,     0,     0,    90,    91,    92,    93,
      94,    95,    96,    97,     0,    98,    99,   100,     0,     0,
       0,     0,     0,     0,     0,   101,   102,     0,   103,   104,
     105,   106,   107,   108,   109,   110,   675,   112,   676,   677,
       0,   115,   116,   117,   118,   119,   120,   678,   679,   121,
     122,   680,   681,   125,     0,   126,   127,   128,   129,   682,
       0,   683,     0,   132,   133,   134,   135,   136,   137,   138,
     139,   140,     0,   141,   142,   143,   144,   145,   146,     0,
     147,   148,   149,   150,   684,   685,   686,   687,   688,   689,
     690,   152,   153,   154,   155,   156,   157,   158,   691,   692,
     161,     0,   162,     0,   163,   164,   165,   166,   167,   168,
       0,   169,   170,   171,   172,   173,     0,     0,   174,   175,
     694,   177,   178,     0,   179,   180,   181,     0,   182,   183,
     184,     0,   185,   186,   187,   188,   695,   190,   191,   192,
     193,   696,   697,   195,     0,   196,   197,   698,   199,     0,
     200,     0,   201,   202,     0,   203,   204,   205,   206,   207,
     208,     0,   209,     0,   210,   211,     0,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,     0,   223,
     224,   225,   226,   227,   228,     0,   229,   230,   231,   232,
     233,   234,   235,   699,   700,     0,   701,     0,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,     0,     0,
     249,   250,   251,   252,     0,   253,   254,   255,   702,   703,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   704,   280,   705,   282,   283,   284,   285,
       0,   286,   287,   288,   289,   707,   708,   291,   709,   293,
     294,   295,     0,   296,   297,     0,     0,   298,   299,   300,
       0,     0,   301,   302,   303,   304,   305,   711,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,     0,   317,
     318,   712,   320,   321,   322,   323,   324,   325,     0,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   713,   336,
     337,   338,   339,     0,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,     0,   352,   353,   354,
     355,   356,   357,  1566,  1567,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,     0,   370,   371,   372,   373,
     374,   715,   375,   376,   377,   378,   379,   380,   381,   382,
     716,   384,     0,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   717,     0,   399,   400,
       0,   401,   402,   403,   404,   405,   406,   407,     0,   718,
     719,     0,     0,   410,   411,   720,   413,   721,   722,   415,
     416,   417,   418,   419,   420,   421,     0,     0,   422,   423,
     424,   425,   426,   723,     0,   427,   428,   429,   430,   431,
     432,   724,     0,   434,   435,   436,   437,   438,   439,     0,
       0,   440,     0,     0,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,     0,     0,     0,     0,     0,
       0,     0,  1568,  1569,     0,     0,     0,     0,     0,     0,
       0,  1440,     0,     0,     0,     0,   730,    89,   669,   531,
     670,   671,   672,   673,   674,     0,     0,     0,     0,     0,
       0,     0,    90,    91,    92,    93,    94,    95,    96,    97,
       0,    98,    99,   100,     0,     0,     0,     0,     0,     0,
       0,   101,   102,     0,   103,   104,   105,   106,   107,   108,
     109,   110,   675,   112,   676,   677,     0,   115,   116,   117,
     118,   119,   120,   678,   679,   121,   122,   680,   681,   125,
       0,   126,   127,   128,   129,   682,     0,   683,     0,   132,
     133,   134,   135,   136,   137,   138,   139,   140,     0,   141,
     142,   143,   144,   145,   146,     0,   147,   148,   149,   150,
     684,   685,   686,   687,   688,   689,   690,   152,   153,   154,
     155,   156,   157,   158,   691,   692,   161,     0,   162,     0,
     163,   164,   165,   166,   167,   168,     0,   169,   170,   171,
     172,   173,     0,     0,   174,   175,   694,   177,   178,     0,
     179,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,   188,   695,   190,   191,   192,   193,   696,   697,   195,
       0,   196,   197,   698,   199,     0,   200,     0,   201,   202,
       0,   203,   204,   205,   206,   207,   208,     0,   209,     0,
     210,   211,     0,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,   222,     0,   223,   224,   225,   226,   227,
     228,     0,   229,   230,   231,   232,   233,   234,   235,   699,
     700,     0,   701,     0,   239,     0,   241,   242,   243,   244,
     245,   246,   247,   248,     0,     0,   249,   250,   251,   252,
       0,   253,   254,   255,   702,   703,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   704,
     280,   705,   282,   283,   284,   285,     0,   286,   287,   288,
     289,   707,   708,   291,   709,   293,   294,   295,     0,   296,
     297,     0,     0,   710,   299,   300,     0,     0,   301,   302,
     303,   304,   305,   711,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,     0,   317,   318,   712,   320,   321,
     322,   323,   324,   325,     0,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   713,   336,   337,   338,   339,     0,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,     0,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,     0,   370,   371,   372,   373,   374,   715,   375,   376,
     377,   378,   379,   380,   381,   382,   716,   384,     0,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   717,     0,   399,   400,     0,   401,   402,   403,
     404,   405,   406,   407,     0,   718,   719,     0,     0,   410,
     411,   720,   413,   721,   722,   415,   416,   417,   418,   419,
     420,   421,     0,     0,   422,   423,   424,   425,   426,   723,
       0,   427,   428,   429,   430,   431,   432,   724,     0,   434,
     435,   436,   437,   438,   439,     0,     0,   440,     0,     0,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,     0,     0,     0,     0,     0,     0,     0,  1438,  1439,
       0,     0,     0,     0,     0,     0,     0,  1440,     0,     0,
       0,     0,   730,    89,   669,   531,   670,   671,   672,   673,
     674,     0,     0,     0,     0,     0,     0,     0,    90,    91,
      92,    93,    94,    95,    96,    97,     0,    98,    99,   100,
       0,     0,     0,     0,     0,     0,     0,   101,   102,     0,
     103,   104,   105,   106,   107,   108,   109, -1532,   675,   112,
     676,   677,     0,   115,   116,   117,   118,   119,   120,   678,
     679,   121,   122,   680,   681,   125,     0,   126,   127,   128,
     129,   682,     0,   683,     0,   132,   133,   134,   135,   136,
     137,   138,   139,   140,     0,   141,   142,   143,   144,   145,
     146,     0,   147,   148,   149,  2607,   684,   685,   686,   687,
     688,   689,   690,   152,   153,   154,   155,   156,   157,   158,
     691,   692,   161,   693,   162,     0,   163,   164,   165,   166,
     167,   168,     0,   169,   170,   171,   172,   173,     0,     0,
     174,   175,   694,   177,   178,     0,   179,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,   188,   695,   190,
     191,   192,   193,   696,   697,   195,     0,   196,   197,   698,
     199,     0,   200,     0,   201,   202,     0,   203,   204,   205,
     206, -1532,   208,     0,   209,     0,   210,   211,     0,   212,
     213,   214,   215,   216,   217, -1532,   219,   220,   221,   222,
       0,   223,   224,   225,   226,   227,   228,     0,   229,   230,
     231,   232,   233,   234,   235,   699,   700,     0,   701,     0,
     239,     0,     0,   242,   243,   244,   245,   246,   247,   248,
       0,     0,   249,   250,   251, -1532,     0,   253,   254,   255,
     702,   703,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   704,   280,   705,   282,   283,
     284,   285,     0,   286,   287,     0,   289,   707,   708,   291,
     709,   293,   294,   295,     0,   296,   297,     0,     0,   710,
     299,   300,     0,     0,   301,   302,   303,   304,   305,   711,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
       0,   317,   318,   712,   320,   321,   322,   323,   324,   325,
       0,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     713,   336,   337,   338,   339,     0,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,     0,   352,
     353,   354,   355,   356,   357,   714,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,     0,   370,   371,
     372,   373,   374,   715,   375,   376,   377,   378,   379, -1532,
     381,   382,   716,   384,     0,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   717,     0,
     399,   400,     0,   401,   402,   403,   404,   405,   406,   407,
       0,   718,   719,     0,     0,   410,   411,   720,   413,   721,
     722,   415,   416,   417,   418,  2608,   420,   421,     0,     0,
     422,   423,   424,   425,   426,   723,     0,   427,   428,   429,
     430,   431,   432,   724,     0,   434,   435,   436,   437,   438,
     439,     0,     0,   440,     0,     0,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461, -1532,     0,     0,
       0,     0,     0,     0,   726,   727,     0,     0,     0,     0,
       0,     0,     0,   729,     0,     0,     0,     0,   730,    89,
     669,   531,   670,   671,   672,   673,   674,     0,     0,     0,
       0,     0,     0,     0,    90,    91,    92,    93,    94,    95,
      96,    97,     0,    98,    99,   100,     0,     0,     0,     0,
       0,     0,     0,   101,   102,     0,   103,   104,   105,   106,
     107,   108,   109,     0,   675,   112,   676,   677,     0,   115,
     116,   117,   118,   119,   120,   678,   679,   121,   122,   680,
     681,   125,     0,   126,   127,   128,   129,   682,     0,   683,
       0,   132,   133,   134,   135,   136,   137,   138,   139,   140,
       0,   141,   142,   143,   144,   145,   146,     0,   147,   148,
     149,   150,   684,   685,   686,   687,   688,   689,   690,   152,
     153,   154,   155,   156,   157,   158,   691,   692,   161,   693,
     162,     0,   163,   164,   165,   166,   167,   168,     0,   169,
     170,   171,   172,   173,     0,     0,   174,   175,   694,   177,
     178,     0,   179,   180,   181,     0,   182,     0,   184,     0,
     185,   186,   187,   188,   695,   190,   191,   192,   193,   696,
     697,   195,     0,   196,   197,   698,   199,     0,   200,     0,
     201,   202,     0,   203,   204,   205,   206,     0,   208,     0,
     209,     0,   210,   211,     0,   212,   213,   214,   215,   216,
     217,     0,   219,   220,   221,   222,     0,   223,   224,   225,
     226,   227,   228,     0,   229,   230,   231,   232,   233,   234,
     235,   699,   700,     0,   701,     0,   239,     0,     0,   242,
     243,   244,   245,   246,   247,   248,     0,     0,   249,   250,
     251,     0,     0,   253,   254,   255,   702,   703,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   704,   280,   705,   282,   283,   284,   285,     0,   286,
     287,     0,   289,   707,   708,   291,   709,   293,   294,   295,
       0,   296,   297,     0,     0,   710,   299,   300,     0,     0,
     301,   302,   303,   304,   305,   711,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,     0,   317,   318,   712,
     320,   321,   322,   323,   324,   325,     0,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   713,   336,   337,   338,
     339,     0,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,     0,   352,   353,   354,   355,   356,
     357,   714,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,     0,   370,   371,   372,   373,   374,   715,
     375,   376,   377,   378,   379,     0,   381,   382,   716,   384,
       0,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   717,     0,   399,   400,     0,   401,
     402,   403,   404,   405,   406,   407,     0,   718,   719,     0,
       0,   410,   411,   720,   413,   721,   722,   415,   416,   417,
     418,   419,   420,   421,     0,     0,   422,   423,   424,   425,
     426,   723,     0,   427,   428,   429,   430,   431,   432,   724,
       0,   434,   435,   436,   437,   438,   439,     0,     0,   440,
       0,     0,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,     0,     0,     0,     0,     0,     0,     0,
     726,   727,   486,     0,     0,     0,     0,     0,     0,   729,
       0,     0,     0,     0,   730,     0,     0,    90,    91,    92,
      93,    94,    95,    96,    97,     0,    98,    99,   100,     0,
       0,     0,     0,     0,  2077,     0,   101,   102,     0,   103,
     104,   105,     0,   107,   108,   109,   110,   111,     0,   113,
     114,     0,   115,   116,   117,   118,   119,   120,     0,     0,
     121,   122,   123,   124,   125,     0,   126,   127,   128,   129,
     130,     0,     0,     0,   132,   133,   134,   135,   136,     0,
     138,   139,   140,     0,   141,   142,   143,   144,   145,   146,
       0,  -579,   148,   149,   150,     0,     0,     0,     0,     0,
       0,     0,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   161,     0,   162,     0,   163,   164,   165,   166,   167,
     168,     0,   169,   170,   171,   172,   173,     0,     0,   174,
     175,   176,   177,   178,     0,   179,   180,   181,     0,   182,
     183,   184,     0,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,     0,   195,     0,   196,   197,   198,   199,
       0,   200,     0,   201,     0,     0,  -579,   204,   205,   206,
       0,   208,     0,   209,     0,   210,   211,     0,   212,   213,
     214,   215,   216,   217,     0,   219,   220,   221,   222,     0,
     223,   224,   225,   226,   227,   228,     0,   229,  -579,   231,
     232,   233,   234,   235,   236,   237,     0,   238,     0,   239,
       0,     0,   242,  -579,   244,   245,   246,   247,   248,     0,
       0,   249,  -579,   251,     0,     0,   253,   254,   255,     0,
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,  -579,   281,   282,   283,   284,
     285,     0,   286,   287,     0,   289,     0,   290,   291,   292,
     293,   294,   295,     0,   296,   297,     0,     0,   298,   299,
     300,     0,     0,   301,   302,     0,   304,     0,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,     0,
     317,   318,   319,   320,   321,   322,   323,   324,   325,     0,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,     0,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,     0,   352,   353,
    -579,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,     0,   370,   371,   372,
     373,   374,     0,   375,   376,   377,   378,   379,     0,   381,
     382,   383,   384,     0,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,     0,   399,
     400,     0,   401,  -579,   403,   404,   405,   406,   407,     0,
     408,   409,     0,     0,   410,   411,   412,   413,   414,     0,
     415,   416,   417,   418,   419,   420,   421,     0,     0,   422,
     423,   424,   425,   426,     0,     0,   427,   428,   429,   430,
     431,   432,   433,     0,   434,     0,   436,   437,   438,   439,
       0,     0,   440,     0,     0,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,     0,     0,     0,    89,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   787,    90,    91,    92,    93,    94,    95,
      96,    97,     0,    98,    99,   100,     0,     0,     0,     0,
       0,     0,     0,   101,   102,     0,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,     0,   115,
     116,   117,   118,   119,   120,     0,   679,   121,   122,   123,
     124,   125,     0,   126,   127,   128,   129,   682,     0,   683,
       0,   132,   133,   134,   135,   136,   137,   138,   139,   140,
       0,   141,   142,   143,   144,   145,   146,     0,   147,   148,
     149,   150,   684,   685,   686,   687,   688,   689,   690,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   161,     0,
     162,     0,   163,   164,   165,   166,   167,   168,     0,   169,
     170,   171,   172,   173,     0,     0,   174,   175,   176,   177,
     178,     0,   179,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   696,
       0,   195,     0,   196,   197,   198,   199,     0,   200,     0,
     201,   202,     0,   203,   204,   205,   206,   207,   208,     0,
     209,     0,   210,   211,     0,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,   222,     0,   223,   224,   225,
     226,   227,   228,     0,   229,   230,   231,   232,   233,   234,
     235,   236,   237,     0,   238,     0,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,  1833,     0,   249,   250,
     251,   252,     0,   253,   254,   255,   702,   703,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,     0,   286,
     287,   288,   289,     0,   708,   291,   292,   293,   294,   295,
       0,   296,   297,     0,   556,   298,   299,   300,     0,     0,
     301,   302,   303,   304,   305,   711,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,     0,   317,   318,   712,
     320,   321,   322,   323,   324,   325,     0,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,     0,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,     0,   352,   353,   354,   355,   356,
     357,   358,  1834,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,    25,   370,   371,   372,   373,   374,   715,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
       0,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   717,     0,   399,   400,    29,   401,
     402,   403,   404,   405,   406,   407,     0,   408,   409,     0,
       0,   410,   411,   720,   413,   721,     0,   415,   416,   417,
     418,   419,   420,   421,     0,     0,   422,   423,   424,   425,
     426,   723,     0,   427,   428,   429,   430,   431,   592,   433,
       0,   434,   435,   436,   437,   438,   439,     0,     0,   440,
       0,    32,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,     0,     0,    33,    89,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1835,
       0,    90,    91,    92,    93,    94,    95,    96,    97,     0,
      98,    99,   100,     0,     0,     0,     0,     0,     0,     0,
     101,   102,     0,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,     0,   115,   116,   117,   118,
     119,   120,     0,   679,   121,   122,   123,   124,   125,     0,
     126,   127,   128,   129,   682,     0,   683,     0,   132,   133,
     134,   135,   136,   137,   138,   139,   140,     0,   141,   142,
     143,   144,   145,   146,     0,   147,   148,   149,   150,   684,
     685,   686,   687,   688,   689,   690,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   161,     0,   162,     0,   163,
     164,   165,   166,   167,   168,     0,   169,   170,   171,   172,
     173,     0,     0,   174,   175,   176,   177,   178,     0,   179,
     180,   181,     0,   182,   183,   184,     0,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   696,     0,   195,     0,
     196,   197,   198,   199,     0,   200,     0,   201,   202,     0,
     203,   204,   205,   206,   207,   208,     0,   209,     0,   210,
     211,     0,   212,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,     0,   223,   224,   225,   226,   227,   228,
       0,   229,   230,   231,   232,   233,   234,   235,   236,   237,
       0,   238,     0,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,  1833,     0,   249,   250,   251,   252,     0,
     253,   254,   255,   702,   703,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,     0,   286,   287,   288,   289,
       0,   708,   291,   292,   293,   294,   295,     0,   296,   297,
       0,   556,   298,   299,   300,     0,     0,   301,   302,   303,
     304,   305,   711,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,     0,   317,   318,   712,   320,   321,   322,
     323,   324,   325,     0,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,     0,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,     0,   352,   353,   354,   355,   356,   357,   358,  1834,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
       0,   370,   371,   372,   373,   374,   715,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,     0,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   717,     0,   399,   400,     0,   401,   402,   403,   404,
     405,   406,   407,     0,   408,   409,     0,     0,   410,   411,
     720,   413,   721,     0,   415,   416,   417,   418,   419,   420,
     421,     0,     0,   422,   423,   424,   425,   426,   723,     0,
     427,   428,   429,   430,   431,   432,   433,     0,   434,   435,
     436,   437,   438,   439,     0,     0,   440,     0,     0,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
       0,     0,    89,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1835,    90,    91,    92,
      93,    94,    95,    96,    97,     0,    98,    99,   100,     0,
       0,     0,     0,     0,     0,     0,   101,   102,     0,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,     0,   115,   116,   117,   118,   119,   120,     0,   679,
     121,   122,   123,   124,   125,     0,   126,   127,   128,   129,
     682,     0,   683,     0,   132,   133,   134,   135,   136,   137,
     138,   139,   140,     0,   141,   142,   143,   144,   145,   146,
       0,   147,   148,   149,   150,   684,   685,   686,   687,   688,
     689,   690,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   161,     0,   162,     0,   163,   164,   165,   166,   167,
     168,     0,   169,   170,   171,   172,   173,     0,     0,   174,
     175,   176,   177,   178,     0,   179,   180,   181,     0,   182,
     183,   184,     0,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   696,     0,   195,     0,   196,   197,   198,   199,
       0,   200,     0,   201,   202,     0,   203,   204,   205,   206,
     207,   208,     0,   209,     0,   210,   211,     0,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,     0,
     223,   224,   225,   226,   227,   228,     0,   229,   230,   231,
     232,   233,   234,   235,   236,   237,     0,   238,     0,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,     0,
       0,   249,   250,   251,   252,     0,   253,   254,   255,   702,
     703,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,     0,   286,   287,   288,   289,     0,   708,   291,   292,
     293,   294,   295,     0,   296,   297,     0,     0,   298,   299,
     300,     0,     0,   301,   302,   303,   304,   305,   711,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,     0,
     317,   318,   712,   320,   321,   322,   323,   324,   325,     0,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,     0,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,     0,   352,   353,
     354,   355,   356,   357,   358,  1834,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,     0,   370,   371,   372,
     373,   374,   715,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,     0,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   717,     0,   399,
     400,     0,   401,   402,   403,   404,   405,   406,   407,     0,
     408,   409,     0,     0,   410,   411,   720,   413,   721,     0,
     415,   416,   417,   418,   419,   420,   421,     0,     0,   422,
     423,   424,   425,   426,   723,     0,   427,   428,   429,   430,
     431,   432,   433,     0,   434,   435,   436,   437,   438,   439,
       0,     0,   440,     0,     0,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,     0,     0,    89,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    34,    90,    91,    92,    93,    94,    95,    96,
      97,     0,    98,    99,   100,     0,     0,     0,     0,     0,
       0,     0,   101,   102,     0,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,     0,   115,   116,
     117,   118,   119,   120,     0,   679,   121,   122,   123,   124,
     125,     0,   126,   127,   128,   129,   682,     0,   683,     0,
     132,   133,   134,   135,   136,   137,   138,   139,   140,     0,
     141,   142,   143,   144,   145,   146,     0,   147,   148,   149,
     150,   684,   685,   686,   687,   688,   689,   690,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,     0,   162,
       0,   163,   164,   165,   166,   167,   168,     0,   169,   170,
     171,   172,   173,     0,     0,   174,   175,   176,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   696,     0,
     195,     0,   196,   197,   198,   199,     0,   200,     0,   201,
     202,     0,   203,   204,   205,   206,   207,   208,     0,   209,
       0,   210,   211,     0,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,     0,   223,   224,   225,   226,
     227,   228,     0,   229,   230,   231,   232,   233,   234,   235,
     236,   237,     0,   238,     0,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,     0,     0,   249,   250,   251,
     252,     0,   253,   254,   255,   702,   703,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,     0,   286,   287,
     288,   289,     0,   708,   291,   292,   293,   294,   295,     0,
     296,   297,     0,     0,   298,   299,   300,     0,     0,   301,
     302,   303,   304,   305,   711,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,     0,   317,   318,   712,   320,
     321,   322,   323,   324,   325,     0,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
       0,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,     0,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,     0,   370,   371,   372,   373,   374,   715,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,     0,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   717,     0,   399,   400,     0,   401,   402,
     403,   404,   405,   406,   407,     0,   408,   409,     0,     0,
     410,   411,   720,   413,   721,     0,   415,   416,   417,   418,
     419,   420,   421,     0,     0,   422,   423,   424,   425,   426,
     723,     0,   427,   428,   429,   430,   431,   432,   433,     0,
     434,   435,   436,   437,   438,   439,     0,     0,   440,     0,
       0,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,     0,     0,   649,   991,   531,     0,     0,     0,
     673,     0,     0,     0,     0,     0,     0,     0,  2418,    90,
      91,    92,    93,    94,    95,    96,    97,     0,    98,    99,
     100,     0,     0,     0,     0,     0,     0,     0,   101,   102,
       0,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,     0,   115,   116,   117,   118,   119,   120,
       0,     0,   121,   122,   123,   124,   125,     0,   126,   127,
     128,   129,   130,     0,   131,     0,   132,   133,   134,   135,
     136,   137,   138,   139,   140,     0,   141,   142,   143,   144,
     145,   146,     0,   147,   148,   149,   150,     0,     0,     0,
     151,     0,     0,     0,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   161,     0,   162,     0,   163,   164,   165,
     166,   167,   168,     0,   169,   170,   171,   172,   173,     0,
       0,   174,   175,   176,   177,   178,     0,   179,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,   992,   195,     0,   196,   197,
     198,   199,     0,   200,     0,   201,   202,     0,   203,   204,
     205,   206,   207,   208,     0,   209,     0,   210,   211,     0,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,     0,   223,   224,   225,   226,   227,   228,     0,   229,
     230,   231,   232,   233,   234,   235,   236,   237,     0,   238,
       0,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,     0,     0,   249,   250,   251,   252,     0,   253,   254,
     255,     0,     0,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,     0,   286,   287,   288,   289,     0,   290,
     291,   292,   293,   294,   295,     0,   296,   297,   993,     0,
     298,   299,   300,     0,     0,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,     0,   317,   318,   319,   320,   321,   322,   323,   324,
     325,     0,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,     0,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,     0,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,     0,   370,
     371,   372,   373,   374,     0,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,     0,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
       0,   399,   400,     0,   401,   402,   403,   404,   405,   406,
     407,     0,   408,   409,     0,     0,   410,   411,   412,   413,
     414,   994,   415,   416,   417,   418,   419,   420,   421,     0,
       0,   422,   423,   424,   425,   426,     0,     0,   427,   428,
     429,   430,   431,   432,   433,     0,   434,   435,   436,   437,
     438,   439,     0,     0,   440,     0,     0,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,     0,     0,
     649,     0,     0,     0,     0,   995,   996,  1702,     0,     0,
       0,     0,     0,     0,  1703,    90,    91,    92,    93,    94,
      95,    96,    97,     0,    98,    99,   100,     3,     4,     0,
       0,     0,     0,     0,   101,   102,     0,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,     0,
     115,   116,   117,   118,   119,   120,     0,     0,   121,   122,
     123,   124,   125,     0,   126,   127,   128,   129,   130,     0,
     131,     0,   132,   133,   134,   135,   136,   137,   138,   139,
     140,     0,   141,   142,   143,   144,   145,   146,     0,   147,
     148,   149,   150,     0,     0,     0,   151,     0,     0,     0,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   161,
       0,   162,     0,   163,   164,   165,   166,   167,   168,     0,
     169,   170,   171,   172,   173,     0,     0,   174,   175,   176,
     177,   178,     0,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,     0,   195,     0,   196,   197,   198,   199,     0,   200,
       0,   201,   202,     0,   203,   204,   205,   206,   207,   208,
       0,   209,     0,   210,   211,     0,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,     0,   223,   224,
     225,   226,   227,   228,     0,   229,   230,   231,   232,   233,
     234,   235,   236,   237,     0,   238,     0,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,     0,     0,   249,
     250,   251,   252,     0,   253,   254,   255,     0,     0,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,     0,
     286,   287,   288,   289,     0,   290,   291,   292,   293,   294,
     295,     0,   296,   297,     0,     0,   298,   299,   300,     0,
       0,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,     0,   317,   318,
     319,   320,   321,   322,   323,   324,   325,     0,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,     0,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,     0,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,    25,   370,   371,   372,   373,   374,
       0,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,     0,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,     0,   399,   400,    29,
     401,   402,   403,   404,   405,   406,   407,     0,   408,   409,
       0,     0,   410,   411,   412,   413,   414,     0,   415,   416,
     417,   418,   419,   420,   421,     0,     0,   422,   423,   424,
     425,   426,     0,     0,   427,   428,   429,   430,   431,   592,
     433,     0,   434,   435,   436,   437,   438,   439,     0,     0,
     440,     0,    32,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,     0,     0,    33,   486,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      34,     0,    90,    91,    92,    93,    94,    95,    96,    97,
     589,    98,    99,   100,     0,     0,     0,     0,     0,     0,
       0,   101,   102,     0,   103,   104,   105,     0,   107,   108,
     109,   110,   111,     0,   113,   114,     0,   115,   116,   117,
     118,   119,   120,     0,     0,   121,   122,   123,   124,   125,
       0,   126,   127,   128,   129,   130,     0,     0,     0,   132,
     133,   134,   135,   136,     0,   138,   139,   140,     0,   141,
     142,   143,   144,   145,   146,     0,     0,   148,   149,   150,
       0,     0,     0,     0,     0,     0,     0,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,     0,   162,     0,
     163,   164,   165,   166,   167,   168,     0,   169,   170,   171,
     172,   173,     0,     0,   174,   175,   176,   177,   178,     0,
     179,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   194,     0,   195,
       0,   196,   197,   198,   199,     0,   200,     0,   201,     0,
       0,     0,   204,   205,   206,     0,   208,     0,   209,     0,
     210,   211,     0,   212,   213,   214,   215,   216,   217,     0,
     219,   220,   221,   222,     0,   223,   224,   225,   226,   227,
     228,     0,   229,     0,   231,   232,   233,   234,   235,   236,
     237,     0,   238,     0,   239,     0,     0,   242,     0,   244,
     245,   246,   247,   248,     0,     0,   249,     0,   251,     0,
       0,   253,   254,   255,     0,     0,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
       0,   281,   282,   283,   284,   285,     0,   286,   287,     0,
     289,     0,   290,   291,   292,   293,   294,   295,     0,   296,
     297,     0,     0,   298,   299,   300,     0,     0,   301,   302,
       0,   304,     0,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,     0,   317,   318,   319,   320,   321,
     322,   323,   324,   325,     0,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,     0,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,     0,   352,   353,     0,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,    25,   370,   371,   372,   373,   374,     0,   375,   376,
     377,   378,   379,     0,   381,   382,   383,   384,     0,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,     0,   399,   400,    29,   401,     0,   403,
     404,   405,   406,   407,     0,   590,   409,     0,     0,   591,
     411,   412,   413,   414,     0,   415,   416,   417,   418,   419,
     420,   421,     0,     0,   422,   423,   424,   425,   426,     0,
       0,   427,   428,   429,   430,   431,   592,   433,     0,   434,
       0,   436,   437,   438,   439,     0,     0,   440,     0,    32,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,     0,     0,    33,   486,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    34,     0,    90,
      91,    92,    93,    94,    95,    96,    97,     0,    98,    99,
     100,     0,     0,     0,     0,     0,     0,     0,   101,   102,
       0,   103,   104,   105,     0,   107,   108,   109,   110,   111,
       0,   113,   114,     0,   115,   116,   117,   118,   119,   120,
       0,     0,   121,   122,   123,   124,   125,     0,   126,   127,
     128,   129,   130,     0,     0,     0,   132,   133,   134,   135,
     136,     0,   138,   139,   140,     0,   141,   142,   143,   144,
     145,   146,     0,     0,   148,   149,   150,     0,     0,     0,
       0,     0,     0,     0,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   161,     0,   162,     0,   163,   164,   165,
     166,   167,   168,     0,   169,   170,   171,   172,   173,     0,
       0,   174,   175,   176,   177,   178,     0,   179,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,     0,   195,     0,   196,   197,
     198,   199,     0,   200,     0,   201,     0,     0,     0,   204,
     205,   206,     0,   208,     0,   209,     0,   210,   211,     0,
     212,   213,   214,   215,   216,   217,     0,   219,   220,   221,
     222,     0,   223,   224,   225,   226,   227,   228,     0,   229,
       0,   231,   232,   233,   234,   235,   236,   237,     0,   238,
       0,   239,     0,     0,   242,     0,   244,   245,   246,   247,
     248,     0,     0,   249,     0,   251,     0,     0,   253,   254,
     255,     0,     0,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,     0,   281,   282,
     283,   284,   285,     0,   286,   287,     0,   289,     0,   290,
     291,   292,   293,   294,   295,     0,   296,   297,     0,     0,
     298,   299,   300,     0,     0,   301,   302,     0,   304,     0,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,     0,   317,   318,   319,   320,   321,   322,   323,   324,
     325,     0,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,     0,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,     0,
     352,   353,     0,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,    25,   370,
     371,   372,   373,   374,     0,   375,   376,   377,   378,   379,
       0,   381,   382,   383,   384,     0,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
       0,   399,   400,    29,   401,     0,   403,   404,   405,   406,
     407,     0,   408,   409,     0,     0,   410,   411,   412,   413,
     414,     0,   415,   416,   417,   418,   419,   420,   421,     0,
       0,   422,   423,   424,   425,   426,     0,     0,   427,   428,
     429,   430,   431,   592,   433,     0,   434,     0,   436,   437,
     438,   439,     0,     0,   440,     0,    32,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,     0,     0,
      33,   486,     0,  2250,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    34,     0,    90,    91,    92,    93,
      94,    95,    96,    97,     0,    98,    99,   100,     0,     0,
       0,     0,     0,     0,     0,   101,   102,     0,   103,   104,
     105,     0,   107,   108,   109,   110,   111,     0,   113,   114,
       0,   115,   116,   117,   118,   119,   120,     0,     0,   121,
     122,   123,   124,   125,     0,   126,   127,   128,   129,   130,
       0,     0,     0,   132,   133,   134,   135,   136,     0,   138,
     139,   140,     0,   141,   142,   143,   144,   145,   146,     0,
       0,   148,   149,   150,     0,     0,     0,     0,     0,     0,
       0,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     161,     0,   162,     0,   163,   164,   165,   166,   167,   168,
       0,   169,   170,   171,   172,   173,     0,     0,   174,   175,
     176,   177,   178,     0,   179,   180,   181,     0,   182,   183,
     184,     0,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,     0,   195,     0,   196,   197,   198,   199,     0,
     200,     0,   201,     0,     0,     0,   204,   205,   206,     0,
     208,     0,   209,     0,   210,   211,     0,   212,   213,   214,
     215,   216,   217,     0,   219,   220,   221,   222,     0,   223,
     224,   225,   226,   227,   228,     0,   229,     0,   231,   232,
     233,   234,   235,   236,   237,     0,   238,     0,   239,     0,
       0,   242,     0,   244,   245,   246,   247,   248,     0,     0,
     249,     0,   251,     0,     0,   253,   254,   255,     0,     0,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,     0,   281,   282,   283,   284,   285,
       0,   286,   287,     0,   289,     0,   290,   291,   292,   293,
     294,   295,     0,   296,   297,     0,     0,   298,   299,   300,
       0,     0,   301,   302,     0,   304,     0,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,     0,   317,
     318,   319,   320,   321,   322,   323,   324,   325,     0,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,     0,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,     0,   352,   353,     0,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,     0,   370,   371,   372,   373,
     374,     0,   375,   376,   377,   378,   379,     0,   381,   382,
     383,   384,     0,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,     0,   399,   400,
       0,   401,     0,   403,   404,   405,   406,   407,     0,   408,
     409,     0,     0,   410,   411,   412,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,     0,     0,   422,   423,
     424,   425,   426,     0,     0,   427,   428,   429,   430,   431,
     432,   433,     0,   434,     0,   436,   437,   438,   439,     0,
       0,   440,     0,     0,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,     0,     0,   486,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2268,    90,    91,    92,    93,    94,    95,    96,    97,
       0,    98,    99,   100,     0,     0,     0,     0,     0,     0,
       0,   101,   102,     0,   103,   104,   105,     0,   107,   108,
     109,   110,   111,     0,   113,   114,     0,   115,   116,   117,
     118,   119,   120,     0,     0,   121,   122,   123,   124,   125,
       0,   126,   127,   128,   129,   130,     0,     0,     0,   132,
     133,   134,   135,   136,     0,   138,   139,   140,     0,   141,
     142,   143,   144,   145,   146,     0,     0,   148,   149,   150,
       0,     0,     0,     0,     0,     0,     0,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,     0,   162,     0,
     163,   164,   165,   166,   167,   168,     0,   169,   170,   171,
     172,   173,     0,     0,   174,   175,   176,   177,   178,     0,
     179,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   194,     0,   195,
       0,   196,   197,   198,   199,     0,   200,     0,   201,     0,
       0,     0,   204,   205,   206,     0,   208,     0,   209,     0,
     210,   211,     0,   212,   213,   214,   215,   216,   217,     0,
     219,   220,   221,   222,     0,   223,   224,   225,   226,   227,
     228,     0,   229,     0,   231,   232,   233,   234,   235,   236,
     237,     0,   238,     0,   239,     0,     0,   242,     0,   244,
     245,   246,   247,   248,     0,     0,   249,     0,   251,     0,
       0,   253,   254,   255,     0,     0,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
       0,   281,   282,   283,   284,   285,     0,   286,   287,     0,
     289,     0,   290,   291,   292,   293,   294,   295,     0,   296,
     297,     0,     0,   298,   299,   300,     0,     0,   301,   302,
       0,   304,     0,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,     0,   317,   318,   319,   320,   321,
     322,   323,   324,   325,     0,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,     0,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,     0,   352,   353,     0,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,     0,   370,   371,   372,   373,   374,     0,   375,   376,
     377,   378,   379,     0,   381,   382,   383,   384,     0,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,     0,   399,   400,     0,   401,     0,   403,
     404,   405,   406,   407,     0,   408,   409,     0,     0,   410,
     411,   412,   413,   414,     0,   415,   416,   417,   418,   419,
     420,   421,     0,     0,   422,   423,   424,   425,   426,     0,
       0,   427,   428,   429,   430,   431,   432,   433,     0,   434,
       0,   436,   437,   438,   439,     0,     0,   440,     0,     0,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,     0,     0,   486,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   768,    90,    91,
      92,    93,    94,    95,    96,    97,     0,    98,    99,   100,
       0,     0,     0,     0,     0,     0,     0,   101,   102,     0,
     103,   104,   105,     0,   107,   108,   109,   110,   111,     0,
     113,   114,     0,   115,   116,   117,   118,   119,   120,     0,
       0,   121,   122,   123,   124,   125,     0,   126,   127,   128,
     129,   130,     0,     0,     0,   132,   133,   134,   135,   136,
       0,   138,   139,   140,     0,   141,   142,   143,   144,   145,
     146,     0,     0,   148,   149,   150,     0,     0,     0,     0,
       0,     0,     0,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   161,     0,   162,     0,   163,   164,   165,   166,
     167,   168,     0,   169,   170,   171,   172,   173,     0,     0,
     174,   175,   176,   177,   178,     0,   179,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   194,     0,   195,     0,   196,   197,   198,
     199,     0,   200,     0,   201,     0,     0,     0,   204,   205,
     206,     0,   208,     0,   209,     0,   210,   211,     0,   212,
     213,   214,   215,   216,   217,     0,   219,   220,   221,   222,
       0,   223,   224,   225,   226,   227,   228,     0,   229,     0,
     231,   232,   233,   234,   235,   236,   237,     0,   238,     0,
     239,     0,     0,   242,     0,   244,   245,   246,   247,   248,
       0,     0,   249,     0,   251,     0,     0,   253,   254,   255,
       0,     0,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,     0,   281,   282,   283,
     284,   285,     0,   286,   287,     0,   289,     0,   290,   291,
     292,   293,   294,   295,     0,   296,   297,     0,     0,   298,
     299,   300,     0,     0,   301,   302,     0,   304,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
       0,   317,   318,   319,   320,   321,   322,   323,   324,   325,
       0,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,     0,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,     0,   352,
     353,     0,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,     0,   370,   371,
     372,   373,   374,     0,   375,   376,   377,   378,   379,     0,
     381,   382,   383,   384,     0,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,     0,
     399,   400,     0,   401,     0,   403,   404,   405,   406,   407,
       0,   408,   409,     0,     0,   410,   411,   412,   413,   414,
       0,   415,   416,   417,   418,   419,   420,   421,     0,     0,
     422,   423,   424,   425,   426,     0,     0,   427,   428,   429,
     430,   431,   432,   433,     0,   434,     0,   436,   437,   438,
     439,     0,     0,   440,     0,     0,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,     0,     0,   486,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1556,    90,    91,    92,    93,    94,    95,
      96,    97,     0,    98,    99,   100,     0,     0,     0,     0,
       0,     0,     0,   101,   102,     0,   103,   104,   105,     0,
     107,   108,   109,   110,   111,     0,   113,   114,     0,   115,
     116,   117,   118,   119,   120,     0,     0,   121,   122,   123,
     124,   125,     0,   126,   127,   128,   129,   130,     0,     0,
       0,   132,   133,   134,   135,   136,     0,   138,   139,   140,
       0,   141,   142,   143,   144,   145,   146,     0,     0,   148,
     149,   150,     0,     0,     0,     0,     0,     0,     0,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   161,     0,
     162,     0,   163,   164,   165,   166,   167,   168,     0,   169,
     170,   171,   172,   173,     0,     0,   174,   175,   176,   177,
     178,     0,   179,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
       0,   195,     0,   196,   197,   198,   199,     0,   200,     0,
     201,     0,     0,     0,   204,   205,   206,     0,   208,     0,
     209,     0,   210,   211,     0,   212,   213,   214,   215,   216,
     217,     0,   219,   220,   221,   222,     0,   223,   224,   225,
     226,   227,   228,     0,   229,     0,   231,   232,   233,   234,
     235,   236,   237,     0,   238,     0,   239,     0,     0,   242,
       0,   244,   245,   246,   247,   248,     0,     0,   249,     0,
     251,     0,     0,   253,   254,   255,     0,     0,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,     0,   281,   282,   283,   284,   285,     0,   286,
     287,     0,   289,     0,   290,   291,   292,   293,   294,   295,
       0,   296,   297,     0,     0,   298,   299,   300,     0,     0,
     301,   302,     0,   304,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,     0,   317,   318,   319,
     320,   321,   322,   323,   324,   325,     0,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,     0,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,     0,   352,   353,     0,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,     0,   370,   371,   372,   373,   374,     0,
     375,   376,   377,   378,   379,     0,   381,   382,   383,   384,
       0,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,     0,   399,   400,     0,   401,
       0,   403,   404,   405,   406,   407,     0,   408,   409,     0,
       0,   410,   411,   412,   413,   414,     0,   415,   416,   417,
     418,   419,   420,   421,     0,     0,   422,   423,   424,   425,
     426,     0,     0,   427,   428,   429,   430,   431,   432,   433,
       0,   434,     0,   436,   437,   438,   439,     0,     0,   440,
       0,     0,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,     0,     0,     0,     0,     0,  1014,   991,
     531,     0,     0,  1420,   673,     0,     0,     0,     0,  2061,
    1421,  1422,  1423,    90,    91,    92,    93,    94,    95,    96,
      97,   868,    98,    99,   100,   869,   870,   871,   872,   873,
     874,   875,   101,   102,   876,   103,   104,   105,   106,   107,
     108,   109,     0,  1015,   112,  1016,  1017,   877,   115,   116,
     117,   118,   119,   120,   878,   879,   121,   122,  1018,  1019,
     125,   880,   126,   127,   128,   129,     0,   881,   131,   882,
     132,   133,   134,   135,   136,   137,   138,   139,   140,   883,
     141,   142,   143,   144,   145,   146,   884,   147,   148,   149,
     150,   885,   886,   887,   151,   888,   889,   890,   152,   153,
     154,   155,   156,   157,   158,  1020,  1021,   161,   891,   162,
     892,   163,   164,   165,   166,   167,   168,   893,   169,   170,
     171,   172,   173,   894,   895,   174,   175,   694,   177,   178,
     896,   179,   180,   181,   897,   182,   183,   184,   898,   185,
     186,   187,   188,     0,   190,   191,   192,   193,     0,   899,
     195,   900,   196,   197,  1022,   199,   901,   200,   902,   201,
     202,   903,   203,   204,   205,   206,   207,   208,   904,   209,
     905,     0,   211,   906,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   907,   223,   224,   225,   226,
     227,   228,   908,   229,   230,     0,   232,   233,   234,   235,
    1023,  1024,   909,  1025,   910,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   911,   912,   249,   250,   251,
     252,   913,   253,   254,   255,   914,   915,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
    1026,   280,  1027,   282,   283,   284,  2162,   916,   286,   287,
     288,   289,   917,     0,   291,  1028,   293,   294,   295,   918,
     296,   297,   919,   920,  2163,   299,   300,   921,   922,   301,
       0,   303,   304,   305,     0,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   923,   317,   318,     0,   320,
     321,     0,   323,   324,   325,   924,   326,   327,   328,   329,
     330,   331,   332,   333,   334,  1029,   336,   337,   338,   339,
     925,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   926,   352,   353,   354,   355,   356,   357,
    1030,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   927,   370,   371,   372,   373,   374,   928,   375,
    2164,   377,   378,   379,   380,   381,   382,  1032,   384,   929,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,  1033,   397,     0,   930,   399,   400,   931,   401,   402,
     403,   404,   405,   406,   407,   932,  1034,  1035,   933,   934,
     410,   411,     0,   413,     0,   935,   415,   416,   417,   418,
     419,   420,   421,   936,   937,   422,   423,   424,   425,   426,
     938,   939,   427,   428,   429,   430,   431,     0,  1036,   940,
     434,   435,   436,   437,   438,   439,   941,   942,   440,   943,
     944,   441,   442,   443,   444,   445,   446,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   458,   459,
     460,   461,     0,   486,     0,  1424,  1425,  1426,  1420,  2165,
    2166,  1429,  1430,  1431,  1432,  1421,  1422,  1423,    90,    91,
      92,    93,    94,    95,    96,    97,     0,    98,    99,   100,
       0,     0,     0,     0,     0,     0,     0,   101,   102,     0,
     103,   104,   105,     0,   107,   108,   109,   110,   111,     0,
     113,   114,     0,   115,   116,   117,   118,   119,   120,     0,
       0,   121,   122,   123,   124,   125,     0,   126,   127,   128,
     129,   130,     0,     0,     0,   132,   133,   134,   135,   136,
       0,   138,   139,   140,     0,   141,   142,   143,   144,   145,
     146,     0,     0,   148,   149,   150,     0,     0,     0,     0,
       0,     0,     0,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   161,     0,   162,     0,   163,   164,   165,   166,
     167,   168,     0,   169,   170,   171,   172,   173,     0,     0,
     174,   175,   176,   177,   178,     0,   179,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   194,     0,   195,     0,   196,   197,   198,
     199,     0,   200,     0,   201,     0,     0,     0,   204,   205,
     206,     0,   208,     0,   209,     0,   210,   211,     0,   212,
     213,   214,   215,   216,   217,     0,   219,   220,   221,   222,
       0,   223,   224,   225,   226,   227,   228,     0,   229,     0,
     231,   232,   233,   234,   235,   236,   237,     0,   238,     0,
     239,     0,     0,   242,     0,   244,   245,   246,   247,   248,
       0,     0,   249,     0,   251,     0,     0,   253,   254,   255,
       0,     0,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,     0,   281,   282,   283,
     284,   285,     0,   286,   287,     0,   289,     0,   290,   291,
     292,   293,   294,   295,     0,   296,   297,     0,     0,   298,
     299,   300,     0,     0,   301,   302,     0,   304,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
       0,   317,   318,   319,   320,   321,   322,   323,   324,   325,
       0,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,     0,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,     0,   352,
     353,     0,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,     0,   370,   371,
     372,   373,   374,     0,   375,   376,   377,   378,   379,     0,
     381,   382,   383,   384,     0,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,     0,
     399,   400,     0,   401,     0,   403,   404,   405,   406,   407,
       0,   408,   409,     0,     0,   410,   411,   412,   413,   414,
       0,   415,   416,   417,   418,   419,   420,   421,     0,     0,
     422,   423,   424,   425,   426,     0,     0,   427,   428,   429,
     430,   431,   432,   433,     0,   434,     0,   436,   437,   438,
     439,     0,     0,   440,     0,     0,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,     0,     0,     0,
    1424,  1425,  1426,     0,  1427,  1428,  1429,  1430,  1431,  1432,
    1112,     0,     0,  1113,     0,     0,     0,  1114,  1115,  1116,
       0,     0,     0,     0,     0,     0,     0,     0,  1112,     0,
       0,  1113,     0,     0,  1117,  1114,  1115,  1116,     0,     0,
       0,     0,  1119,     0,     0,     0,     0,     0,     0,  1120,
       0,     0,  1117,     0,     0,     0,  1112,     0,     0,  1113,
    1119,     0,     0,  1114,  1115,  1116,     0,  1120,     0,     0,
       0,     0,     0,     0,  1121,     0,     0,     0,     0,     0,
    1117,     0,     0,     0,     0,     0,     0,     0,  1119,     0,
       0,     0,  1121,     0,  1112,  1120,     0,  1113,     0,     0,
       0,  1114,  1115,  1116,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1117,     0,
    1121,     0,     0,     0,     0,     0,  1119,     0,     0,     0,
       0,     0,     0,  1120,     0,     0,     0,     0,     0,     0,
    1112,     0,     0,  1113,     0,     0,     0,  1114,  1115,  1116,
       0,     0,     0,     0,     0,     0,     0,     0,  1121,     0,
       0,     0,     0,     0,  1117,     0,     0,     0,     0,     0,
       0,     0,  1119,  1122,     0,     0,     0,     0,     0,  1120,
       0,     0,     0,     0,     0,     0,     0,  1123,     0,     0,
    1112,  1122,  1124,  1113,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1121,  1123,     0,     0,     0,     0,
    1124,     0,     0,  1125,  1126,     0,     0,     0,     0,  1122,
       0,     0,  1119,     0,     0,     0,     0,  1127,     0, -1532,
       0,  1125,  1126,  1123,     0,     0,     0,     0,  1124,     0,
       0,     0,     0,     0,     0,  1127,     0,     0,     0,     0,
       0,     0,     0,     0,  1121,     0,     0,  1122,     0,  1125,
    1126,     0,     0,     0,  1128,     0,     0,  1129,     0,     0,
       0,  1123,     0,  1127,     0,     0,  1124,     0,     0,     0,
       0,  1130,  1128,     0,  1131,  1129,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1125,  1126,  1130,
       0,     0,  1131,  1122,     0,     0,     0,     0,     0,     0,
    1128,  1127,     0,  1129,     0,     0,     0,  1123,     0,     0,
       0,     0,  1124,  2236,     0,     0,     0,  1130,     0,     0,
    1131,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1125,  1126,     0,     0,     0,  1128,     0,
       0,  1129,     0, -1532,     0,     0,     0,  1127,     0,     0,
       0,     0,     0,     0,     0,  1130,     0, -1532,  1131,     0,
       0,  1132, -1532,     0,     0,     0,     0,  1112,     0,     0,
    1113,     0,     0,     0,  1114,  1115,  1116,     0,     0,  1132,
       0,     0,     0,     0,  1128,     0,     0,  1129,     0,     0,
       0,  1117,     0,     0,     0,     0,     0, -1532,     0,  1119,
       0,  1130,     0,     0,  1131,     0,  1120,  1132,     0,  1112,
       0,     0,  1113,     0,     0,     0,  1114,  1115,  1116,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1121,     0,  1117,     0,     0,     0,     0,     0,     0,
       0,  1119,     0,     0,     0,  1132,     0,     0,  1120,     0,
       0,  1130,     0,     0,     0,     0,     0,     0,     0,  1133,
       0,     0,  1134,  1135,  1136,     0,  1137,  1138,  1139,  1140,
    1141,  1142,     0,  1121,     0,     0,  2039,  1133,     0,     0,
    1134,  1135,  1136,     0,  1137,  1138,  1139,  1140,  1141,  1142,
       0,  1132,     0,     0,  2126,  1112,     0,     0,  1113,     0,
       0,     0,  1114,  1115,  1116,  1133,     0,     0,  1134,  1135,
    1136,     0,  1137,  1138,  1139,  1140,  1141,  1142,     0,  1117,
       0,     0,  2219,     0,     0,     0,     0,  1119,     0,     0,
    1122,     0,     0,     0,  1120,     0,     0,     0,     0,     0,
       0, -1532,     0,  1133,  1123,     0,  1134,  1135,  1136,  1124,
    1137,  1138,  1139,  1140,  1141,  1142,     0,     0,     0,  1121,
    2237,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1125,  1126,  1122,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1127,     0,  1123,     0,     0,  1133,
       0,  1124,  1134,  1135,  1136,     0,  1137,  1138,  1139,  1140,
    1141,  1142,     0,     0,     0,     0,  2379,     0,     0,     0,
       0,     0,  1125,  1126,     0,     0,     0,     0,     0,     0,
       0,  1128,     0,     0,  1129,     0,  1127,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1130, -1532,
       0,  1131,     0,     0,     0,     0,  1137,  1138,  1139,  1140,
    1141,  1142,     0,     0,     0,     0,     0,     0,  1122,     0,
       0,     0,     0,  1128,     0,     0,  1129,     0,     0,     0,
       0,     0,  1123,     0,     0,     0,     0,  1124,     0,     0,
    1130,     0,     0,  1131,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1125,  1126,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1127,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1132,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1128,
       0,     0,  1129,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1130,     0,     0,  1131,
    1132,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1133,     0,     0,  1134,
    1135,  1136,     0,  1137,  1138,  1139,  1140,  1141,  1142,     0,
       0,     0,     0,  2577,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1132,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1133,     0,
       0,  1134,  1135,  1136,     0,  1137,  1138,  1139,  1140,  1141,
    1142,     0,     0,     0,     0,  2589,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1133,   867,     0,  1134,  1135,  1136,
       0,  1137,  1138,  1139,  1140,  1141,  1142,     0,     0,  1286,
      90,    91,    92,    93,    94,    95,    96,    97,   868,    98,
      99,   100,   869,   870,   871,   872,   873,   874,   875,   101,
     102,   876,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   877,   115,   116,   117,   118,   119,
     120,   878,   879,   121,   122,   123,   124,   125,   880,   126,
     127,   128,   129,   130,   881,   131,   882,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   883,   141,   142,   143,
     144,   145,   146,   884,   147,   148,   149,   150,   885,   886,
     887,   151,   888,   889,   890,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   161,   891,   162,   892,   163,   164,
     165,   166,   167,   168,   893,   169,   170,   171,   172,   173,
     894,   895,   174,   175,   176,   177,   178,   896,   179,   180,
     181,   897,   182,   183,   184,   898,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   899,   195,   900,   196,
     197,   198,   199,   901,   200,   902,   201,   202,   903,   203,
     204,   205,   206,   207,   208,   904,   209,   905,   210,   211,
     906,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   907,   223,   224,   225,   226,   227,   228,   908,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   909,
     238,   910,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   911,   912,   249,   250,   251,   252,   913,   253,
     254,   255,   914,   915,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   916,   286,   287,   288,   289,   917,
     290,   291,   292,   293,   294,   295,   918,   296,   297,   919,
     920,   298,   299,   300,   921,   922,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   923,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   924,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   925,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     926,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   927,
     370,   371,   372,   373,   374,   928,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   929,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   930,   399,   400,   931,   401,   402,   403,   404,   405,
     406,   407,   932,   408,   409,   933,   934,   410,   411,   412,
     413,   414,   935,   415,   416,   417,   418,   419,   420,   421,
     936,   937,   422,   423,   424,   425,   426,   938,   939,   427,
     428,   429,   430,   431,   432,   433,   940,   434,   435,   436,
     437,   438,   439,   941,   942,   440,   943,   944,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   486,
       0,     0,     0,     0,     0,     0,     0,     0,   945,     0,
       0,     0,     0,     0,    90,    91,    92,    93,    94,    95,
      96,    97,     0,    98,    99,   100,     0,     0,     0,     0,
       0,     0,     0,   101,   102,     0,   103,   104,   105,     0,
     107,   108,   109,   110,   111,     0,   113,   114,     0,   115,
     116,   117,   118,   119,   120,     0,     0,   121,   122,   123,
     124,   125,     0,   126,   127,   128,   129,   130,     0,     0,
       0,   132,   133,   134,   135,   136,     0,   138,   139,   140,
       0,   141,   142,   143,   144,   145,   146,     0,     0,   148,
     149,   150,     0,     0,     0,     0,     0,     0,     0,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   161,     0,
     162,     0,   163,   164,   165,   166,   167,   168,     0,   169,
     170,   171,   172,   173,     0,     0,   174,   175,   176,   177,
     178,     0,   179,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
       0,   195,     0,   196,   197,   198,   199,     0,   200,     0,
     201,     0,     0,     0,   204,   205,   206,     0,   208,     0,
     209,     0,   210,   211,     0,   212,   213,   214,   215,   216,
     217,     0,   219,   220,   221,   222,     0,   223,   224,   225,
     226,   227,   228,     0,   229,     0,   231,   232,   233,   234,
     235,   236,   237,     0,   238,     0,   239,     0,     0,   242,
       0,   244,   245,   246,   247,   248,     0,     0,   249,     0,
     251,     0,     0,   253,   254,   255,     0,     0,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,     0,   281,   282,   283,   284,   285,     0,   286,
     287,     0,   289,     0,   290,   291,   292,   293,   294,   295,
       0,   296,   297,     0,     0,   298,   299,   300,     0,     0,
     301,   302,     0,   304,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,     0,   317,   318,   319,
     320,   321,   322,   323,   324,   325,     0,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,     0,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,     0,   352,   353,     0,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,     0,   370,   371,   372,   373,   374,     0,
     375,   376,   377,   378,   379,     0,   381,   382,   383,   384,
       0,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,     0,   399,   400,     0,   401,
       0,   403,   404,   405,   406,   407,     0,   408,   409,     0,
       0,   410,   411,   412,   413,   414,     0,   415,   416,   417,
     418,   419,   420,   421,     0,     0,   422,   423,   424,   425,
     426,     0,     0,   427,   428,   429,   430,   431,   432,   433,
       0,   434,     0,   436,   437,   438,   439,     0,     0,   440,
       0,     0,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   649,   991,   531,     0,     0,     0,   673,
       0,     0,  1980,     0,     0,     0,     0,     0,    90,    91,
      92,    93,    94,    95,    96,    97,     0,    98,    99,   100,
       0,     0,     0,     0,     0,     0,     0,   101,   102,     0,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,     0,   115,   116,   117,   118,   119,   120,     0,
       0,   121,   122,   123,   124,   125,     0,   126,   127,   128,
     129,   130,     0,   131,     0,   132,   133,   134,   135,   136,
     137,   138,   139,   140,     0,   141,   142,   143,   144,   145,
     146,     0,   147,   148,   149,   150,     0,     0,     0,   151,
       0,     0,     0,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   161,  1166,   162,     0,   163,   164,   165,   166,
     167,   168,     0,   169,   170,   171,   172,   173,     0,     0,
     174,   175,   176,   177,   178,     0,   179,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   194,   992,   195,     0,   196,   197,   198,
     199,     0,   200,     0,   201,   202,     0,   203,   204,   205,
     206,   207,   208,     0,   209,     0,   210,   211,     0,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
       0,   223,   224,   225,   226,   227,   228,     0,   229,   230,
     231,   232,   233,   234,   235,   236,   237,     0,   238,     0,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
       0,     0,   249,   250,   251,   252,     0,   253,   254,   255,
       0,     0,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,     0,   286,   287,   288,   289,     0,   290,   291,
     292,   293,   294,   295,     0,   296,   297,   993,     0,   298,
     299,   300,     0,     0,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
       0,   317,   318,   319,   320,   321,   322,   323,   324,   325,
       0,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,     0,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,     0,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,     0,   370,   371,
     372,   373,   374,     0,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,     0,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,     0,
     399,   400,     0,   401,   402,   403,   404,   405,   406,   407,
       0,   408,   409,     0,     0,   410,   411,   412,   413,   414,
     994,   415,   416,   417,   418,   419,   420,   421,     0,     0,
     422,   423,   424,   425,   426,     0,     0,   427,   428,   429,
     430,   431,   432,   433,     0,   434,   435,   436,   437,   438,
     439,     0,     0,   440,     0,     0,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   649,   991,   531,
       0,     0,     0,   673,   995,   996,     0,     0,     0,     0,
       0,     0,    90,    91,    92,    93,    94,    95,    96,    97,
       0,    98,    99,   100,     0,     0,     0,     0,     0,     0,
       0,   101,   102,     0,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,     0,   115,   116,   117,
     118,   119,   120,     0,     0,   121,   122,   123,   124,   125,
       0,   126,   127,   128,   129,   130,     0,   131,     0,   132,
     133,   134,   135,   136,   137,   138,   139,   140,     0,   141,
     142,   143,   144,   145,   146,     0,   147,   148,   149,   150,
       0,     0,     0,   151,     0,     0,     0,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,  1168,   162,     0,
     163,   164,   165,   166,   167,   168,     0,   169,   170,   171,
     172,   173,     0,     0,   174,   175,   176,   177,   178,     0,
     179,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   194,   992,   195,
       0,   196,   197,   198,   199,     0,   200,     0,   201,   202,
       0,   203,   204,   205,   206,   207,   208,     0,   209,     0,
     210,   211,     0,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,   222,     0,   223,   224,   225,   226,   227,
     228,     0,   229,   230,   231,   232,   233,   234,   235,   236,
     237,     0,   238,     0,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,     0,     0,   249,   250,   251,   252,
       0,   253,   254,   255,     0,     0,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,     0,   286,   287,   288,
     289,     0,   290,   291,   292,   293,   294,   295,     0,   296,
     297,   993,     0,   298,   299,   300,     0,     0,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,     0,   317,   318,   319,   320,   321,
     322,   323,   324,   325,     0,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,     0,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,     0,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,     0,   370,   371,   372,   373,   374,     0,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,     0,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,     0,   399,   400,     0,   401,   402,   403,
     404,   405,   406,   407,     0,   408,   409,     0,     0,   410,
     411,   412,   413,   414,   994,   415,   416,   417,   418,   419,
     420,   421,     0,     0,   422,   423,   424,   425,   426,     0,
       0,   427,   428,   429,   430,   431,   432,   433,     0,   434,
     435,   436,   437,   438,   439,     0,     0,   440,     0,     0,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   649,   991,   531,     0,     0,     0,   673,   995,   996,
       0,     0,     0,     0,     0,     0,    90,    91,    92,    93,
      94,    95,    96,    97,     0,    98,    99,   100,     0,     0,
       0,     0,     0,     0,     0,   101,   102,     0,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
       0,   115,   116,   117,   118,   119,   120,     0,     0,   121,
     122,   123,   124,   125,     0,   126,   127,   128,   129,   130,
       0,   131,     0,   132,   133,   134,   135,   136,   137,   138,
     139,   140,     0,   141,   142,   143,   144,   145,   146,     0,
     147,   148,   149,   150,     0,     0,     0,   151,     0,     0,
       0,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     161,     0,   162,     0,   163,   164,   165,   166,   167,   168,
       0,   169,   170,   171,   172,   173,     0,     0,   174,   175,
     176,   177,   178,     0,   179,   180,   181,     0,   182,   183,
     184,     0,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   992,   195,     0,   196,   197,   198,   199,     0,
     200,     0,   201,   202,     0,   203,   204,   205,   206,   207,
     208,     0,   209,     0,   210,   211,     0,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,     0,   223,
     224,   225,   226,   227,   228,     0,   229,   230,   231,   232,
     233,   234,   235,   236,   237,     0,   238,     0,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,     0,     0,
     249,   250,   251,   252,     0,   253,   254,   255,     0,     0,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
       0,   286,   287,   288,   289,     0,   290,   291,   292,   293,
     294,   295,     0,   296,   297,   993,     0,   298,   299,   300,
       0,     0,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,     0,   317,
     318,   319,   320,   321,   322,   323,   324,   325,     0,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,     0,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,     0,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,     0,   370,   371,   372,   373,
     374,     0,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,     0,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,     0,   399,   400,
       0,   401,   402,   403,   404,   405,   406,   407,     0,   408,
     409,     0,     0,   410,   411,   412,   413,   414,   994,   415,
     416,   417,   418,   419,   420,   421,     0,     0,   422,   423,
     424,   425,   426,     0,     0,   427,   428,   429,   430,   431,
     432,   433,     0,   434,   435,   436,   437,   438,   439,     0,
       0,   440,     0,     0,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,     0,     0,  1112,     0,     0,
    1113,     0,   995,   996,  1114,  1115,  1116,     0,     0,     0,
       0,     0,     0,     0,     0,  1112,     0,     0,  1113,     0,
       0,  1117,  1114,  1115,  1116,  1562,     0,     0,     0,  1119,
       0,     0,     0,     0,     0,     0,  1120,     0,     0,  1117,
       0,     0,     0,  1112,     0,     0,  1113,  1119,     0,     0,
    1114,  1115,  1116,     0,  1120,     0,     0,     0,     0,     0,
       0,  1121,     0,     0,     0,     0,     0,  1117,     0,     0,
       0,     0,     0,     0,     0,  1119,     0,     0,     0,  1121,
       0,  1112,  1120,     0,  1113,     0,     0,     0,  1114,  1115,
    1116,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1117,     0,  1121,  1736,     0,
       0,  1563,     0,  1119,     0,     0,     0,     0,     0,     0,
    1120,     0,     0,     0,     0,     0,     0,  1112,     0,     0,
    1113,     0,     0,     0,  1114,  1115,  1116,     0,     0,     0,
       0,     0,     0,     0,     0,  1121,     0,     0,     0,     0,
       0,  1117,     0,     0,     0,     0,     0,     0,     0,  1119,
    1122,     0,     0,     0,     0,     0,  1120,     0,  1776,     0,
       0,     0,     0,  1777,  1123,     0,     0,     0,  1122,  1124,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1121,  1123,     0,     0,  2647,     0,  1124,     0,     0,
    1125,  1126,     0,     0,     0,     0,  1122,     0,     0,     0,
       0,     0,     0,     0,  1127,     0,     0,     0,  1125,  1126,
    1123,     0,     0,     0,     0,  1124,     0,     0,     0,     0,
       0,     0,  1127,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1122,     0,  1125,  1126,     0,     0,
       0,  1128,     0,     0,  1129,     0,     0,     0,  1123,     0,
    1127,     0,     0,  1124,     0,     0,     0,     0,  1130,  1128,
       0,  1131,  1129,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1125,  1126,  1130,     0,     0,  1131,
    1122,     0,     0,     0,     0,     0,     0,  1128,  1127,     0,
    1129,     0,     0,     0,  1123,     0,     0,     0,     0,  1124,
       0,     0,     0,     0,  1130,     0,     0,  1131,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1125,  1126,     0,     0,     0,  1128,     0,     0,  1129,     0,
    2648,     0,     0,     0,  1127,     0,     0,     0,     0,     0,
       0,     0,  1130,  1112,     0,  1131,  1113,     0,  1132,     0,
    1114,  1115,  1116,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1132,  1117,     0,     0,
    1785,  1128,     0,     0,  1129,  1119,     0,     0,     0,     0,
       0,     0,  1120,     0,     0,     0,     0,     0,  1130,     0,
       0,  1131,     0,     0,  1132,  1112,     0,     0,  1113,     0,
       0,     0,  1114,  1115,  1116,  1564,     0,  1121,     0,  1750,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1117,
       0,     0,     0,     0,     0,     0,     0,  1119,     0,     0,
       0,     0,  1132,     0,  1120,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1133,     0,     0,  1134,
    1135,  1136,     0,  1137,  1138,  1139,  1140,  1141,  1142,  1121,
       0,     0,     0,     0,  1133,     0,     0,  1134,  1135,  1136,
       0,  1137,  1138,  1139,  1140,  1141,  1142,     0,  1132,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1133,     0,     0,  1134,  1135,  1136,     0,  1137,
    1138,  1139,  1140,  1141,  1142,     0,  1122,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1123,     0,     0,     0,     0,  1124,     0,     0,     0,     0,
    1133,     0,     0,  1134,  1135,  1136,     0,  1137,  1138,  1139,
    1140,  1141,  1142,     0,     0,     0,  1125,  1126,     0,     0,
       0,     0,     0,  1790,     0,     0,     0,     0,  1122,     0,
    1127,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1123,     0,     0,     0,  1133,  1124,     0,  1134,
    1135,  1136,     0,  1137,  1138,  1139,  1140,  1141,  1142,     0,
       0,     0,     0,     0,     0,     0,     0,  1128,  1125,  1126,
    1129,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1127,     0,  1130,  1112,     0,  1131,  1113,     0,
       0,     0,  1114,  1115,  1116,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1117,
       0,     0,     0,     0,     0,     0,     0,  1119,     0,  1128,
       0,     0,  1129,     0,  1120,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1112,     0,  1130,  1113,     0,  1131,
       0,  1114,  1115,  1116,     0,     0,     0,     0,     0,  1121,
       0,     0,     0,     0,     0,     0,     0,     0,  1117,     0,
       0,     0,     0,     0,     0,     0,  1119,     0,     0,     0,
       0,     0,     0,  1120,  1132,     0,     0,     0,  1112,     0,
       0,  1113,     0,     0,     0,  1114,  1115,  1116,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1121,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1119,     0,     0,     0,     0,     0,     0,  1120,     0,     0,
       0,     0,     0,     0,     0,     0,  1132,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1121,     0,     0,     0,     0,     0,  1122,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1123,     0,     0,     0,     0,  1124,     0,     0,
       0,     0,  1133,     0,     0,  1134,  1135,  1136,     0,  1137,
    1138,  1139,  1140,  1141,  1142,     0,     0,     0,  1125,  1126,
       0,     0,     0,     0,     0,     0,     0,  1122,     0,     0,
       0,     0,  1127,     0,     0,     0,     0,     0,     0,     0,
       0,  1123,     0,     0,     0,     0,  1124,     0,     0,     0,
       0,     0,     0,     0,  1133,     0,     0,  1134,  1135,  1136,
       0,  1137,  1138,  1139,  1140,  1141,  1142,  1125,  1126,  1128,
       0,  1122,  1129,     0,     0,     0,     0,     0,     0,     0,
       0,  1127,     0,     0,     0,  1123,  1130,     0,     0,  1131,
    1124,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1125,  1126,     0,     0,     0,     0,     0,  1128,     0,
       0,  1129,     0,     0,     0,  1127,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1130,     0,     0,  1131,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1128,     0,     0,  1129,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1132,     0,     0,  1130,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2000,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1132,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1132,
       0,     0,     0,     0,  1133,     0,     0,  1134,  1135,  1136,
       0,  1137,  1138,  1139,  1140,  1141,  1142,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1133,     0,     0,  1134,  1135,  1136,     0,
    1137,  1138,  1139,  1140,  1141,  1142,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   867,  1133,  1473,     0,
    1134,  1135,  1136,     0,  1137,  1138,  1139,  1140,  1141,  1142,
       0,    90,    91,    92,    93,    94,    95,    96,    97,   868,
      98,    99,   100,   869,   870,   871,   872,   873,   874,   875,
     101,   102,   876,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   877,   115,   116,   117,   118,
     119,   120,   878,   879,   121,   122,   123,   124,   125,   880,
     126,   127,   128,   129,   130,   881,   131,   882,   132,   133,
     134,   135,   136,   137,   138,   139,   140,   883,   141,   142,
     143,   144,   145,   146,   884,   147,   148,   149,   150,   885,
     886,   887,   151,   888,   889,   890,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   161,   891,   162,   892,   163,
     164,   165,   166,   167,   168,   893,   169,   170,   171,   172,
     173,   894,   895,   174,   175,   176,   177,   178,   896,   179,
     180,   181,   897,   182,   183,   184,   898,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   899,   195,   900,
     196,   197,   198,   199,   901,   200,   902,   201,   202,   903,
     203,   204,   205,   206,   207,   208,   904,   209,   905,   210,
     211,   906,   212,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   907,   223,   224,   225,   226,   227,   228,
     908,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     909,   238,   910,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   911,   912,   249,   250,   251,   252,   913,
     253,   254,   255,   914,   915,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   916,   286,   287,   288,   289,
     917,   290,   291,   292,   293,   294,   295,   918,   296,   297,
     919,   920,   298,   299,   300,   921,   922,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   923,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   924,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   925,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   926,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     927,   370,   371,   372,   373,   374,   928,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   929,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   930,   399,   400,   931,   401,   402,   403,   404,
     405,   406,   407,   932,   408,   409,   933,   934,   410,   411,
     412,   413,   414,   935,   415,   416,   417,   418,   419,   420,
     421,   936,   937,   422,   423,   424,   425,   426,   938,   939,
     427,   428,   429,   430,   431,   432,   433,   940,   434,   435,
     436,   437,   438,   439,   941,   942,   440,   943,   944,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     867,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    90,    91,    92,    93,    94,
      95,    96,    97,   868,    98,    99,   100,   869,   870,   871,
     872,   873,   874,   875,   101,   102,   876,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   877,
     115,   116,   117,   118,   119,   120,   878,   879,   121,   122,
     123,   124,   125,   880,   126,   127,   128,   129,   130,   881,
     131,   882,   132,   133,   134,   135,   136,   137,   138,   139,
     140,   883,   141,   142,   143,   144,   145,   146,   884,   147,
     148,   149,   150,   885,   886,   887,   151,   888,   889,   890,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   161,
     891,   162,   892,   163,   164,   165,   166,   167,   168,   893,
     169,   170,   171,   172,   173,   894,   895,   174,   175,   176,
     177,   178,   896,   179,   180,   181,   897,   182,   183,   184,
     898,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   899,   195,   900,   196,   197,   198,   199,   901,   200,
     902,   201,   202,   903,   203,   204,   205,   206,   207,   208,
     904,   209,   905,   210,   211,   906,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   907,   223,   224,
     225,   226,   227,   228,   908,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   909,   238,   910,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   911,   912,   249,
     250,   251,   252,   913,   253,   254,   255,   914,   915,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   916,
     286,   287,   288,   289,   917,   290,   291,   292,   293,   294,
     295,   918,   296,   297,   919,   920,   298,   299,   300,   921,
     922,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   923,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   924,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   925,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   926,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   927,   370,   371,   372,   373,   374,
     928,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   929,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   930,   399,   400,   931,
     401,   402,   403,   404,   405,   406,   407,   932,   408,   409,
     933,   934,   410,   411,   412,   413,   414,   935,   415,   416,
     417,   418,   419,   420,   421,   936,   937,   422,   423,   424,
     425,   426,   938,   939,   427,   428,   429,   430,   431,   432,
     433,   940,   434,   435,   436,   437,   438,   439,   941,   942,
     440,   943,   944,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   867,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    90,
      91,    92,    93,  1611,    95,    96,    97,   868,    98,    99,
     100,   869,   870,   871,   872,   873,   874,   875,   101,   102,
     876,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   877,   115,   116,   117,   118,   119,   120,
     878,   879,   121,   122,   123,   124,   125,   880,   126,   127,
     128,   129,   130,   881,   131,   882,   132,   133,   134,   135,
     136,   137,   138,   139,   140,   883,   141,   142,   143,   144,
     145,   146,   884,   147,   148,   149,   150,   885,   886,   887,
     151,   888,   889,   890,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   161,   891,   162,   892,   163,   164,   165,
     166,   167,   168,   893,   169,   170,   171,   172,   173,   894,
     895,   174,   175,   176,  1612,   178,   896,   179,   180,   181,
     897,   182,   183,   184,   898,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,   899,   195,   900,   196,   197,
     198,   199,   901,   200,   902,   201,   202,   903,   203,   204,
     205,   206,   207,   208,   904,   209,   905,   210,   211,   906,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   907,   223,   224,   225,   226,   227,   228,   908,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   909,   238,
     910,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   911,   912,   249,   250,   251,   252,   913,   253,   254,
     255,   914,   915,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   916,   286,   287,   288,   289,   917,   290,
     291,   292,   293,   294,   295,   918,   296,   297,   919,   920,
     298,   299,   300,   921,   922,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   923,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   924,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   925,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   926,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   927,   370,
     371,   372,   373,   374,   928,  1613,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   929,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     930,   399,   400,   931,   401,   402,   403,   404,   405,   406,
     407,   932,   408,   409,   933,   934,   410,   411,   412,   413,
     414,   935,   415,   416,   417,   418,   419,   420,   421,   936,
     937,   422,   423,   424,   425,   426,   938,   939,   427,   428,
     429,   430,   431,   432,   433,   940,   434,   435,   436,   437,
     438,   439,   941,   942,   440,   943,   944,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,    89,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    90,    91,    92,    93,    94,    95,    96,
      97,     0,    98,    99,   100,     0,     0,     0,     0,     0,
       0,     0,   101,   102,     0,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,     0,   115,   116,
     117,   118,   119,   120,     0,   679,   121,   122,   123,   124,
     125,     0,   126,   127,   128,   129,   682,     0,   683,     0,
     132,   133,   134,   135,   136,   137,   138,   139,   140,     0,
     141,   142,   143,   144,   145,   146,     0,   147,   148,   149,
     150,   684,   685,   686,   687,   688,   689,   690,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,     0,   162,
       0,   163,   164,   165,   166,   167,   168,     0,   169,   170,
     171,   172,   173,     0,     0,   174,   175,   176,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   696,     0,
     195,     0,   196,   197,   198,   199,     0,   200,     0,   201,
     202,     0,   203,   204,   205,   206,   207,   208,     0,   209,
       0,   210,   211,     0,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,     0,   223,   224,   225,   226,
     227,   228,     0,   229,   230,   231,   232,   233,   234,   235,
     236,   237,     0,   238,     0,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,     0,     0,   249,   250,   251,
     252,     0,   253,   254,   255,   702,   703,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,     0,   286,   287,
     288,   289,     0,   708,   291,   292,   293,   294,   295,     0,
     296,   297,     0,     0,   298,   299,   300,     0,     0,   301,
     302,   303,   304,   305,   711,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,     0,   317,   318,   712,   320,
     321,   322,   323,   324,   325,     0,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
       0,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,     0,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,     0,   370,   371,   372,   373,   374,   715,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,     0,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   717,     0,   399,   400,     0,   401,   402,
     403,   404,   405,   406,   407,     0,   408,   409,     0,     0,
     410,   411,   720,   413,   721,     0,   415,   416,   417,   418,
     419,   420,   421,     0,     0,   422,   423,   424,   425,   426,
     723,     0,   427,   428,   429,   430,   431,   432,   433,     0,
     434,   435,   436,   437,   438,   439,     0,     0,   440,     0,
       0,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   649,     0,   531,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    90,    91,    92,
      93,    94,    95,    96,    97,     0,    98,    99,   100,     0,
       0,     0,     0,     0,     0,     0,   101,   102,     0,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,     0,   115,   116,   117,   118,   119,   120,     0,     0,
     121,   122,   123,   124,   125,     0,   126,   127,   128,   129,
     130,     0,   131,     0,   132,   133,   134,   135,   136,   137,
     138,   139,   140,     0,   141,   142,   143,   144,   145,   146,
       0,   147,   148,   149,   150,     0,     0,     0,   151,     0,
       0,     0,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   161,     0,   162,     0,   163,   164,   165,   166,   167,
     168,     0,   169,   170,   171,   172,   173,     0,     0,   174,
     175,   176,   177,   178,     0,   179,   180,   181,     0,   182,
     183,   184,     0,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   992,   195,     0,   196,   197,   198,   199,
       0,   200,     0,   201,   202,     0,   203,   204,   205,   206,
     207,   208,     0,   209,     0,   210,   211,     0,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,     0,
     223,   224,   225,   226,   227,   228,     0,   229,   230,   231,
     232,   233,   234,   235,   236,   237,     0,   238,     0,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,     0,
       0,   249,   250,   251,   252,     0,   253,   254,   255,     0,
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,     0,   286,   287,   288,   289,     0,   290,   291,   292,
     293,   294,   295,     0,   296,   297,   993,     0,   298,   299,
     300,     0,     0,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,     0,
     317,   318,   319,   320,   321,   322,   323,   324,   325,     0,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,     0,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,     0,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,     0,   370,   371,   372,
     373,   374,     0,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,     0,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,     0,   399,
     400,     0,   401,   402,   403,   404,   405,   406,   407,     0,
     408,   409,     0,     0,   410,   411,   412,   413,   414,   994,
     415,   416,   417,   418,   419,   420,   421,     0,     0,   422,
     423,   424,   425,   426,     0,     0,   427,   428,   429,   430,
     431,   432,   433,     0,   434,   435,   436,   437,   438,   439,
       0,     0,   440,     0,     0,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   649,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    90,    91,    92,    93,    94,    95,    96,    97,     0,
      98,    99,   100,     3,     4,     0,     0,     0,     0,     0,
     101,   102,     0,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,     0,   115,   116,   117,   118,
     119,   120,     0,     0,   121,   122,   123,   124,   125,     0,
     126,   127,   128,   129,   130,     0,   131,     0,   132,   133,
     134,   135,   136,   137,   138,   139,   140,     0,   141,   142,
     143,   144,   145,   146,     0,   147,   148,   149,   150,     0,
       0,     0,   151,     0,     0,     0,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   161,     0,   162,     0,   163,
     164,   165,   166,   167,   168,     0,   169,   170,   171,   172,
     173,     0,     0,   174,   175,   176,   177,   178,     0,   179,
     180,   181,     0,   182,   183,   184,     0,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,     0,   195,     0,
     196,   197,   198,   199,     0,   200,     0,   201,   202,     0,
     203,   204,   205,   206,   207,   208,     0,   209,     0,   210,
     211,     0,   212,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,     0,   223,   224,   225,   226,   227,   228,
       0,   229,   230,   231,   232,   233,   234,   235,   236,   237,
       0,   238,     0,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,     0,     0,   249,   250,   251,   252,     0,
     253,   254,   255,     0,     0,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,     0,   286,   287,   288,   289,
       0,   290,   291,   292,   293,   294,   295,     0,   296,   297,
       0,     0,   298,   299,   300,     0,     0,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,     0,   317,   318,   319,   320,   321,   322,
     323,   324,   325,     0,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,     0,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,     0,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
       0,   370,   371,   372,   373,   374,     0,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,     0,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,     0,   399,   400,     0,   401,   402,   403,   404,
     405,   406,   407,     0,   408,   409,     0,     0,   410,   411,
     412,   413,   414,     0,   415,   416,   417,   418,   419,   420,
     421,     0,     0,   422,   423,   424,   425,   426,     0,     0,
     427,   428,   429,   430,   431,   432,   433,     0,   434,   435,
     436,   437,   438,   439,     0,     0,   440,     0,     0,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
      89,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    90,    91,    92,    93,    94,
      95,    96,    97,     0,    98,    99,   100,     0,     0,     0,
       0,     0,     0,     0,   101,   102,     0,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,     0,
     115,   116,   117,   118,   119,   120,     0,     0,   121,   122,
     123,   124,   125,     0,   126,   127,   128,   129,   130,     0,
     131,     0,   132,   133,   134,   135,   136,   137,   138,   139,
     140,     0,   141,   142,   143,   144,   145,   146,     0,   147,
     148,   149,   150,     0,     0,     0,   151,     0,     0,     0,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   161,
       0,   162,     0,   163,   164,   165,   166,   167,   168,     0,
     169,   170,   171,   172,   173,     0,     0,   174,   175,   176,
     177,   178,     0,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,     0,   195,     0,   196,   197,   198,   199,     0,   200,
       0,   201,   202,     0,   203,   204,   205,   206,   207,   208,
       0,   209,     0,   210,   211,     0,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,     0,   223,   224,
     225,   226,   227,   228,     0,   229,   230,   231,   232,   233,
     234,   235,   236,   237,     0,   238,     0,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,     0,     0,   249,
     250,   251,   252,     0,   253,   254,   255,     0,     0,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,     0,
     286,   287,   288,   289,     0,   290,   291,   292,   293,   294,
     295,     0,   296,   297,     0,     0,   298,   299,   300,     0,
       0,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,     0,   317,   318,
     319,   320,   321,   322,   323,   324,   325,     0,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,     0,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,     0,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,     0,   370,   371,   372,   373,   374,
       0,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,     0,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,     0,   399,   400,     0,
     401,   402,   403,   404,   405,   406,   407,     0,   408,   409,
       0,     0,   410,   411,   412,   413,   414,     0,   415,   416,
     417,   418,   419,   420,   421,     0,     0,   422,   423,   424,
     425,   426,     0,     0,   427,   428,   429,   430,   431,   432,
     433,     0,   434,   435,   436,   437,   438,   439,     0,     0,
     440,     0,     0,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   486,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    90,
      91,    92,    93,    94,    95,    96,    97,     0,    98,    99,
     100,     0,     0,     0,     0,     0,     0,     0,   101,   102,
       0,   103,   104,   105,     0,   107,   108,   109,   110,   111,
       0,   113,   114,     0,   115,   116,   117,   118,   119,   120,
       0,     0,   121,   122,   123,   124,   125,  1224,   126,   127,
     128,   129,   130,     0,     0,  1225,   132,   133,   134,   135,
     136,     0,   138,   139,   140,  1226,   141,   142,   143,   144,
     145,   146,     0,     0,   148,   149,   150,     0,     0,     0,
       0,     0,     0,     0,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   161,     0,   162,     0,   163,   164,   165,
     166,   167,   168,     0,   169,   170,   171,   172,   173,     0,
       0,   174,   175,   176,   177,   178,     0,   179,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,     0,   195,     0,   196,   197,
     198,   199,     0,   200,  1227,   201,     0,     0,     0,   204,
     205,   206,     0,   208,     0,   209,     0,   210,   211,     0,
     212,   213,   214,   215,   216,  1228,     0,   219,   220,   221,
     222,     0,   223,   224,   225,   226,   227,   228,     0,   229,
       0,   231,   232,   233,   234,   235,   236,   237,     0,   238,
       0,   239,     0,     0,   242,     0,   244,   245,   246,   247,
     248,     0,     0,   249,     0,   251,     0,     0,   253,   254,
     255,     0,     0,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,     0,   281,   282,
     283,   284,   285,     0,   286,   287,     0,   289,     0,   290,
     291,   292,   293,   294,   295,     0,   296,   297,     0,     0,
     298,   299,   300,     0,     0,   301,   302,     0,   304,     0,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,     0,   317,   318,   319,   320,   321,   322,   323,   324,
     325,  1229,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,     0,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,     0,
     352,   353,     0,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,     0,   370,
     371,   372,   373,   374,     0,   375,   376,   377,   378,   379,
       0,   381,   382,   383,   384,     0,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
       0,   399,   400,     0,   401,     0,   403,   404,   405,   406,
     407,     0,   408,   409,     0,     0,   410,   411,   412,   413,
     414,     0,   415,   416,   417,   418,   419,   420,   421,     0,
    1230,   422,   423,   424,   425,   426,     0,     0,   427,   428,
     429,   430,   431,   432,   433,     0,   434,     0,   436,   437,
     438,   439,     0,     0,   440,     0,     0,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   486,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    90,    91,    92,    93,    94,    95,    96,
      97,     0,    98,    99,   100,     0,     0,     0,     0,     0,
       0,     0,   101,   102,     0,   103,   104,   105,     0,   107,
     108,   109,   110,   111,     0,   113,   114,     0,   115,   116,
     117,   118,   119,   120,     0,     0,   121,   122,   123,   124,
     125,  1224,   126,   127,   128,   129,   130,     0,     0,     0,
     132,   133,   134,   135,   136,     0,   138,   139,   140,  1226,
     141,   142,   143,   144,   145,   146,     0,     0,   148,   149,
     150,     0,     0,     0,     0,     0,     0,     0,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,     0,   162,
       0,   163,   164,   165,   166,   167,   168,     0,   169,   170,
     171,   172,   173,     0,     0,   174,   175,   176,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,     0,
     195,     0,   196,   197,   198,   199,     0,   200,  1227,   201,
       0,     0,     0,   204,   205,   206,     0,   208,     0,   209,
       0,   210,   211,     0,   212,   213,   214,   215,   216,   217,
       0,   219,   220,   221,   222,     0,   223,   224,   225,   226,
     227,   228,     0,   229,     0,   231,   232,   233,   234,   235,
     236,   237,     0,   238,     0,   239,     0,     0,   242,     0,
     244,   245,   246,   247,   248,     0,     0,   249,     0,   251,
    1674,     0,   253,   254,   255,     0,     0,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,     0,   281,   282,   283,   284,   285,     0,   286,   287,
       0,   289,     0,   290,   291,   292,   293,   294,   295,     0,
     296,   297,     0,     0,   298,   299,   300,     0,     0,   301,
     302,     0,   304,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,     0,   317,   318,   319,   320,
     321,   322,   323,   324,   325,  1229,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
       0,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,     0,   352,   353,     0,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,     0,   370,   371,   372,   373,   374,     0,   375,
     376,   377,   378,   379,     0,   381,   382,   383,   384,     0,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,     0,   399,   400,     0,   401,     0,
     403,   404,   405,   406,   407,     0,   408,   409,     0,     0,
     410,   411,   412,   413,   414,     0,   415,   416,   417,   418,
     419,   420,   421,     0,  1230,   422,   423,   424,   425,   426,
       0,     0,   427,   428,   429,   430,   431,   432,   433,     0,
     434,     0,   436,   437,   438,   439,     0,     0,   440,     0,
       0,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   486,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    90,    91,    92,
      93,    94,    95,    96,    97,     0,    98,    99,   100,     3,
       4,     0,     0,     0,     0,     0,   101,   102,     0,   103,
     104,   105,     0,   107,   108,   109,   110,   111,     0,   113,
     114,     0,   115,   116,   117,   118,   119,   120,     0,     0,
     121,   122,   123,   124,   125,     0,   126,   127,   128,   129,
     130,     0,     0,     0,   132,   133,   134,   135,   136,     0,
     138,   139,   140,     0,   141,   142,   143,   144,   145,   146,
       0,     0,   148,   149,   150,     0,     0,     0,     0,     0,
       0,     0,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   161,     0,   162,     0,   163,   164,   165,   166,   167,
     168,     0,   169,   170,   171,   172,   173,     0,     0,   174,
     175,   176,   177,   178,     0,   179,   180,   181,     0,   182,
     183,   184,     0,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,     0,   195,     0,   196,   197,   198,   199,
       0,   200,     0,   201,     0,     0,     0,   204,   205,   206,
       0,   208,     0,   209,     0,   210,   211,     0,   212,   213,
     214,   215,   216,   217,     0,   219,   220,   221,   222,     0,
     223,   224,   225,   226,   227,   228,     0,   229,     0,   231,
     232,   233,   234,   235,   236,   237,     0,   238,     0,   239,
       0,     0,   242,     0,   244,   245,   246,   247,   248,     0,
       0,   249,     0,   251,     0,     0,   253,   254,   255,     0,
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,     0,   281,   282,   283,   284,
     285,     0,   286,   287,     0,   289,     0,   290,   291,   292,
     293,   294,   295,     0,   296,   297,     0,     0,   298,   299,
     300,     0,     0,   301,   302,     0,   304,     0,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,     0,
     317,   318,   319,   320,   321,   322,   323,   324,   325,     0,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,     0,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,     0,   352,   353,
       0,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,     0,   370,   371,   372,
     373,   374,     0,   375,   376,   377,   378,   379,     0,   381,
     382,   383,   384,     0,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,     0,   399,
     400,     0,   401,     0,   403,   404,   405,   406,   407,     0,
     408,   409,     0,     0,   410,   411,   412,   413,   414,     0,
     415,   416,   417,   418,   419,   420,   421,     0,     0,   422,
     423,   424,   425,   426,     0,     0,   427,   428,   429,   430,
     431,   432,   433,     0,   434,     0,   436,   437,   438,   439,
       0,     0,   440,     0,     0,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   486,  2387,     0,     0,
       0,     0,  2388,     0,     0,     0,     0,     0,     0,     0,
       0,    90,    91,    92,    93,    94,    95,    96,    97,     0,
      98,    99,   100,     0,     0,     0,     0,     0,     0,     0,
     101,   102,     0,   103,   104,   105,     0,   107,   108,   109,
     110,   111,     0,   113,   114,     0,   115,   116,   117,   118,
     119,   120,     0,     0,   121,   122,   123,   124,   125,     0,
     126,   127,   128,   129,   130,     0,     0,     0,   132,   133,
     134,   135,   136,     0,   138,   139,   140,     0,   141,   142,
     143,   144,   145,   146,     0,     0,   148,   149,   150,     0,
       0,     0,     0,     0,     0,     0,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   161,     0,   162,     0,   163,
     164,   165,   166,   167,   168,     0,   169,   170,   171,   172,
     173,     0,     0,   174,   175,   176,   177,   178,     0,   179,
     180,   181,     0,   182,   183,   184,     0,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,     0,   195,     0,
     196,   197,   198,   199,     0,   200,     0,   201,     0,     0,
       0,   204,   205,   206,     0,   208,     0,   209,     0,   210,
     211,     0,   212,   213,   214,   215,   216,   217,     0,   219,
     220,   221,   222,     0,   223,   224,   225,   226,   227,   228,
       0,   229,     0,   231,   232,   233,   234,   235,   236,   237,
       0,   238,     0,   239,     0,     0,   242,     0,   244,   245,
     246,   247,   248,     0,     0,   249,     0,   251,     0,     0,
     253,   254,   255,     0,     0,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,     0,
     281,   282,   283,   284,   285,     0,   286,   287,     0,   289,
       0,   290,   291,   292,   293,   294,   295,     0,   296,   297,
       0,     0,   298,   299,   300,     0,     0,   301,   302,     0,
     304,     0,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,     0,   317,   318,   319,   320,   321,   322,
     323,   324,   325,     0,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,     0,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,     0,   352,   353,     0,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
       0,   370,   371,   372,   373,   374,     0,   375,   376,   377,
     378,   379,     0,   381,   382,   383,   384,     0,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,     0,   399,   400,     0,   401,     0,   403,   404,
     405,   406,   407,     0,   408,   409,     0,     0,   410,   411,
     412,   413,   414,     0,   415,   416,   417,   418,   419,   420,
     421,     0,     0,   422,   423,   424,   425,   426,     0,     0,
     427,   428,   429,   430,   431,   432,   433,     0,   434,     0,
     436,   437,   438,   439,     0,     0,   440,     0,     0,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     486,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    90,    91,    92,    93,    94,
      95,    96,    97,   487,    98,    99,   100,     0,     0,     0,
       0,     0,     0,     0,   101,   102,     0,   103,   104,   105,
       0,   107,   108,   109,   110,   111,     0,   113,   114,     0,
     115,   116,   117,   118,   119,   120,     0,     0,   121,   122,
     123,   124,   125,     0,   126,   127,   128,   129,   130,     0,
       0,     0,   132,   133,   134,   135,   136,     0,   138,   139,
     140,     0,   141,   142,   143,   144,   145,   146,     0,     0,
     148,   149,   150,     0,     0,     0,     0,     0,     0,     0,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   161,
       0,   162,     0,   163,   164,   165,   166,   167,   168,     0,
     169,   170,   171,   172,   173,     0,     0,   174,   175,   176,
     177,   178,     0,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,     0,   195,     0,   196,   197,   198,   199,     0,   200,
       0,   201,     0,     0,     0,   204,   205,   206,     0,   208,
       0,   209,     0,   210,   211,     0,   212,   213,   214,   215,
     216,   217,     0,   219,   220,   221,   222,     0,   223,   224,
     225,   226,   227,   228,     0,   229,     0,   231,   232,   233,
     234,   235,   236,   237,     0,   238,     0,   239,     0,     0,
     242,     0,   244,   245,   246,   247,   248,     0,     0,   249,
       0,   251,     0,     0,   253,   254,   255,     0,     0,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,     0,   281,   282,   283,   284,   285,     0,
     286,   287,     0,   289,     0,   290,   291,   292,   293,   294,
     295,     0,   296,   297,     0,     0,   298,   299,   300,     0,
       0,   301,   302,     0,   304,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,     0,   317,   318,
     319,   320,   321,   322,   488,   324,   325,     0,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,     0,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,     0,   352,   353,     0,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,     0,   370,   371,   372,   373,   374,
       0,   375,   376,   377,   378,   379,     0,   381,   382,   383,
     384,     0,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,     0,   399,   400,     0,
     401,     0,   403,   404,   405,   406,   407,     0,   408,   409,
       0,     0,   410,   411,   412,   413,   414,     0,   415,   416,
     417,   418,   419,   420,   421,     0,     0,   422,   423,   424,
     425,   426,     0,     0,   427,   428,   429,   430,   431,   432,
     433,     0,   434,     0,   436,   437,   438,   439,     0,     0,
     440,     0,     0,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   486,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    90,
      91,    92,    93,    94,    95,    96,    97,   536,    98,    99,
     100,     0,     0,     0,     0,     0,     0,     0,   101,   102,
       0,   103,   104,   105,     0,   107,   108,   109,   110,   111,
       0,   113,   114,     0,   115,   116,   117,   118,   119,   120,
       0,     0,   121,   122,   123,   124,   125,     0,   126,   127,
     128,   129,   130,     0,     0,     0,   132,   133,   134,   135,
     136,     0,   138,   139,   140,     0,   141,   142,   143,   144,
     145,   146,     0,     0,   148,   149,   150,     0,     0,     0,
       0,     0,     0,     0,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   161,     0,   162,     0,   163,   164,   165,
     166,   167,   168,     0,   169,   170,   171,   172,   173,     0,
       0,   174,   175,   176,   177,   178,     0,   179,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,     0,   195,     0,   196,   197,
     198,   199,     0,   200,     0,   201,     0,     0,     0,   204,
     205,   206,     0,   208,     0,   209,     0,   210,   211,     0,
     212,   213,   214,   215,   216,   217,     0,   219,   220,   221,
     222,     0,   223,   224,   225,   226,   227,   228,     0,   229,
       0,   231,   232,   233,   234,   235,   236,   237,     0,   238,
       0,   239,     0,     0,   242,     0,   244,   245,   246,   247,
     248,     0,     0,   249,     0,   251,     0,     0,   253,   254,
     255,     0,     0,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,     0,   281,   282,
     283,   284,   285,     0,   286,   287,     0,   289,     0,   290,
     291,   292,   293,   294,   295,     0,   296,   297,     0,     0,
     298,   299,   300,     0,     0,   301,   302,     0,   304,     0,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,     0,   317,   318,   319,   320,   321,   322,   323,   324,
     325,     0,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,     0,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,     0,
     352,   353,     0,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,     0,   370,
     371,   372,   373,   374,     0,   375,   376,   377,   378,   379,
       0,   381,   382,   383,   384,     0,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
       0,   399,   400,     0,   401,     0,   403,   404,   405,   406,
     407,     0,   537,   409,     0,     0,   538,   411,   412,   413,
     414,     0,   415,   416,   417,   418,   419,   420,   421,     0,
       0,   422,   423,   424,   425,   426,     0,     0,   427,   428,
     429,   430,   431,   432,   433,     0,   434,     0,   436,   437,
     438,   439,     0,     0,   440,     0,     0,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   486,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    90,    91,    92,    93,    94,    95,    96,
      97,     0,    98,    99,   100,     0,     0,     0,     0,     0,
       0,     0,   101,   102,     0,   103,   104,   105,     0,   107,
     108,   109,   110,   111,     0,   113,   114,     0,   115,   116,
     117,   118,   119,   120,     0,     0,   121,   122,   123,   124,
     125,     0,   126,   127,   128,   129,   130,     0,     0,     0,
     132,   133,   134,   135,   136,     0,   138,   139,   140,     0,
     141,   142,   143,   144,   145,   146,     0,     0,   148,   149,
     150,     0,     0,     0,     0,     0,     0,     0,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,     0,   162,
       0,   163,   164,   165,   166,   167,   168,     0,   169,   170,
     171,   172,   173,     0,     0,   174,   175,   176,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,     0,
     195,     0,   196,   197,   198,   199,     0,   200,     0,   201,
       0,     0,     0,   204,   205,   206,     0,   208,     0,   209,
       0,   210,   211,     0,   212,   213,   214,   215,   216,   217,
       0,   219,   220,   221,   222,     0,   223,   224,   225,   226,
     227,   228,     0,   229,     0,   231,   232,   233,   234,   235,
     236,   237,     0,   238,     0,   239,     0,     0,   242,     0,
     244,   245,   246,   247,   248,     0,     0,   249,     0,   251,
       0,     0,   253,   254,   255,     0,     0,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,     0,   281,   282,   283,   284,   285,     0,   286,   287,
       0,   289,     0,   290,   291,   292,   293,   294,   295,     0,
     296,   297,     0,   556,   298,   299,   300,     0,     0,   301,
     302,     0,   304,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,     0,   317,   318,   319,   320,
     321,   322,   323,   324,   325,     0,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
       0,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,     0,   352,   353,     0,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,     0,   370,   371,   372,   373,   374,     0,   375,
     376,   377,   378,   379,     0,   381,   382,   383,   384,     0,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,     0,   399,   400,     0,   401,     0,
     403,   404,   405,   406,   407,     0,   408,   409,     0,     0,
     410,   411,   412,   413,   414,     0,   415,   416,   417,   418,
     419,   420,   421,     0,     0,   422,   423,   424,   425,   426,
       0,     0,   427,   428,   429,   430,   431,   432,   433,     0,
     434,     0,   436,   437,   438,   439,     0,     0,   440,     0,
       0,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   486,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    90,    91,    92,
      93,    94,    95,    96,    97,     0,    98,    99,   100,     0,
       0,     0,     0,     0,     0,     0,   101,   102,     0,   103,
     104,   105,     0,   107,   108,   109,   110,   111,     0,   113,
     114,     0,   115,   116,   117,   118,   119,   120,     0,     0,
     121,   122,   123,   124,   125,     0,   126,   127,   128,   129,
     130,     0,     0,     0,   132,   133,   134,   135,   136,     0,
     138,   139,   140,     0,   141,   142,   143,   144,   145,   146,
       0,     0,   148,   149,   150,     0,     0,     0,     0,     0,
       0,     0,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   161,     0,   162,     0,   163,   164,   165,   166,   167,
     168,     0,   169,   170,   171,   172,   173,     0,     0,   174,
     175,   176,   177,   178,     0,   179,   180,   181,     0,   182,
     183,   184,     0,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,     0,   195,     0,   196,   197,   198,   199,
       0,   200,     0,   201,     0,     0,     0,   204,   205,   206,
       0,   208,     0,   209,     0,   210,   211,     0,   212,   213,
     214,   215,   216,   600,     0,   219,   220,   221,   222,     0,
     223,   224,   225,   226,   227,   228,     0,   229,     0,   231,
     232,   233,   234,   235,   236,   237,     0,   238,     0,   239,
       0,     0,   242,     0,   244,   245,   246,   247,   248,     0,
       0,   249,     0,   251,     0,     0,   253,   254,   255,     0,
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,     0,   281,   282,   283,   284,
     285,     0,   286,   287,     0,   289,     0,   290,   291,   292,
     293,   294,   295,     0,   296,   297,     0,   556,   298,   299,
     300,     0,     0,   301,   302,     0,   304,     0,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,     0,
     317,   318,   319,   320,   321,   322,   323,   324,   325,     0,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,     0,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,     0,   352,   353,
       0,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,     0,   370,   371,   372,
     373,   374,     0,   375,   376,   377,   378,   379,     0,   381,
     382,   383,   384,     0,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,     0,   399,
     400,     0,   401,     0,   403,   404,   405,   406,   407,     0,
     408,   409,     0,     0,   410,   411,   412,   413,   414,     0,
     415,   416,   417,   418,   419,   420,   421,     0,     0,   422,
     423,   424,   425,   426,     0,     0,   427,   428,   429,   430,
     431,   432,   433,     0,   434,     0,   436,   437,   438,   439,
       0,     0,   440,     0,     0,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   486,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    90,    91,    92,    93,    94,    95,    96,    97,   628,
      98,    99,   100,     0,     0,     0,     0,     0,     0,     0,
     101,   102,     0,   103,   104,   105,     0,   107,   108,   109,
     110,   111,     0,   113,   114,     0,   115,   116,   117,   118,
     119,   120,     0,     0,   121,   122,   123,   124,   125,     0,
     126,   127,   128,   129,   130,     0,     0,     0,   132,   133,
     134,   135,   136,     0,   138,   139,   140,     0,   141,   142,
     143,   144,   145,   146,     0,     0,   148,   149,   150,     0,
       0,     0,     0,     0,     0,     0,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   161,     0,   162,     0,   163,
     164,   165,   166,   167,   168,     0,   169,   170,   171,   172,
     173,     0,     0,   174,   175,   176,   177,   178,     0,   179,
     180,   181,     0,   182,   183,   184,     0,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,     0,   195,     0,
     196,   197,   198,   199,     0,   200,     0,   201,     0,     0,
       0,   204,   205,   206,     0,   208,     0,   209,     0,   210,
     211,     0,   212,   213,   214,   215,   216,   217,     0,   219,
     220,   221,   222,     0,   223,   224,   225,   226,   227,   228,
       0,   229,     0,   231,   232,   233,   234,   235,   236,   237,
       0,   238,     0,   239,     0,     0,   242,     0,   244,   245,
     246,   247,   248,     0,     0,   249,     0,   251,     0,     0,
     253,   254,   255,     0,     0,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,     0,
     281,   282,   283,   284,   285,     0,   286,   287,     0,   289,
       0,   290,   291,   292,   293,   294,   295,     0,   296,   297,
       0,     0,   298,   299,   300,     0,     0,   301,   302,     0,
     304,     0,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,     0,   317,   318,   319,   320,   321,   322,
     323,   324,   325,     0,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,     0,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,     0,   352,   353,     0,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
       0,   370,   371,   372,   373,   374,     0,   375,   376,   377,
     378,   379,     0,   381,   382,   383,   384,     0,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,     0,   399,   400,     0,   401,     0,   403,   404,
     405,   406,   407,     0,   408,   409,     0,     0,   410,   411,
     412,   413,   414,     0,   415,   416,   417,   418,   419,   420,
     421,     0,     0,   422,   423,   424,   425,   426,     0,     0,
     427,   428,   429,   430,   431,   432,   433,     0,   434,     0,
     436,   437,   438,   439,     0,     0,   440,     0,     0,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     486,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    90,    91,    92,    93,    94,
      95,    96,    97,     0,    98,    99,   100,     0,     0,     0,
       0,     0,     0,     0,   101,   102,     0,   103,   104,   105,
       0,   107,   108,   109,   110,   111,     0,   113,   114,     0,
     115,   116,   117,   118,   119,   120,     0,     0,   121,   122,
     123,   124,   125,     0,   126,   127,   128,   129,   130,     0,
       0,     0,   132,   133,   134,   135,   136,     0,   138,   139,
     140,     0,   141,   142,   143,   144,   145,   146,     0,     0,
     148,   149,   150,     0,     0,     0,     0,     0,     0,     0,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   161,
       0,   162,     0,   163,   164,   165,   166,   167,   168,     0,
     169,   170,   171,   172,   173,     0,     0,   174,   175,   176,
     177,   178,     0,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,     0,   195,     0,   196,   197,   198,   199,     0,   200,
       0,   201,     0,     0,     0,   204,   205,   206,     0,  1524,
       0,   209,     0,   210,   211,     0,   212,   213,   214,   215,
     216,   217,     0,   219,   220,   221,   222,     0,   223,   224,
     225,   226,   227,   228,     0,   229,     0,   231,   232,   233,
     234,   235,   236,   237,     0,   238,     0,   239,     0,     0,
     242,     0,   244,   245,   246,   247,   248,     0,     0,   249,
       0,   251,     0,     0,   253,   254,  1525,     0,     0,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,     0,   281,   282,   283,   284,   285,     0,
     286,   287,     0,   289,     0,   290,   291,   292,   293,   294,
     295,     0,   296,   297,     0,     0,   298,   299,   300,     0,
       0,   301,   302,     0,   304,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,     0,   317,   318,
     319,   320,   321,   322,   323,   324,   325,     0,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,     0,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,     0,   352,   353,     0,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,     0,   370,   371,   372,   373,   374,
       0,   375,   376,   377,   378,   379,     0,   381,   382,   383,
     384,     0,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,     0,   399,   400,  1526,
     401,     0,   403,  1527,   405,  1528,   407,     0,   408,   409,
       0,     0,   410,   411,   412,   413,   414,     0,   415,   416,
     417,   418,   419,   420,   421,     0,     0,   422,   423,  1529,
     425,   426,     0,     0,   427,   428,   429,   430,   431,   432,
     433,     0,   434,     0,   436,   437,   438,   439,     0,     0,
     440,     0,     0,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   486,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    90,
      91,    92,    93,    94,    95,    96,    97,     0,    98,    99,
     100,     0,     0,     0,     0,     0,  2077,     0,   101,   102,
       0,   103,   104,   105,     0,   107,   108,   109,   110,   111,
       0,   113,   114,     0,   115,   116,   117,   118,   119,   120,
       0,     0,   121,   122,   123,   124,   125,     0,   126,   127,
     128,   129,   130,     0,     0,     0,   132,   133,   134,   135,
     136,     0,   138,   139,   140,     0,   141,   142,   143,   144,
     145,   146,     0,     0,   148,   149,   150,     0,     0,     0,
       0,     0,     0,     0,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   161,     0,   162,     0,   163,   164,   165,
     166,   167,   168,     0,   169,   170,   171,   172,   173,     0,
       0,   174,   175,   176,   177,   178,     0,   179,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,     0,   195,     0,   196,   197,
     198,   199,     0,   200,     0,   201,     0,     0,     0,   204,
     205,   206,     0,   208,     0,   209,     0,   210,   211,     0,
     212,   213,   214,   215,   216,   217,     0,   219,   220,   221,
     222,     0,   223,   224,   225,   226,   227,   228,     0,   229,
       0,   231,   232,   233,   234,   235,   236,   237,     0,   238,
       0,   239,     0,     0,   242,     0,   244,   245,   246,   247,
     248,     0,     0,   249,     0,   251,     0,     0,   253,   254,
     255,     0,     0,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,     0,   281,   282,
     283,   284,   285,     0,   286,   287,     0,   289,     0,   290,
     291,   292,   293,   294,   295,     0,   296,   297,     0,     0,
     298,   299,   300,     0,     0,   301,   302,     0,   304,     0,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,     0,   317,   318,   319,   320,   321,   322,   323,   324,
     325,     0,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,     0,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,     0,
     352,   353,     0,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,     0,   370,
     371,   372,   373,   374,     0,   375,   376,   377,   378,   379,
       0,   381,   382,   383,   384,     0,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
       0,   399,   400,     0,   401,     0,   403,   404,   405,   406,
     407,     0,   408,   409,     0,     0,   410,   411,   412,   413,
     414,     0,   415,   416,   417,   418,   419,   420,   421,     0,
       0,   422,   423,   424,   425,   426,     0,     0,   427,   428,
     429,   430,   431,   432,   433,     0,   434,     0,   436,   437,
     438,   439,     0,     0,   440,     0,     0,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   486,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    90,    91,    92,    93,    94,    95,    96,
      97,     0,    98,    99,   100,     0,     0,     0,     0,     0,
    2091,     0,   101,   102,     0,   103,   104,   105,     0,   107,
     108,   109,   110,   111,     0,   113,   114,     0,   115,   116,
     117,   118,   119,   120,     0,     0,   121,   122,   123,   124,
     125,     0,   126,   127,   128,   129,   130,     0,     0,     0,
     132,   133,   134,   135,   136,     0,   138,   139,   140,     0,
     141,   142,   143,   144,   145,   146,     0,     0,   148,   149,
     150,     0,     0,     0,     0,     0,     0,     0,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,     0,   162,
       0,   163,   164,   165,   166,   167,   168,     0,   169,   170,
     171,   172,   173,     0,     0,   174,   175,   176,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,     0,
     195,     0,   196,   197,   198,   199,     0,   200,     0,   201,
       0,     0,     0,   204,   205,   206,     0,   208,     0,   209,
       0,   210,   211,     0,   212,   213,   214,   215,   216,   217,
       0,   219,   220,   221,   222,     0,   223,   224,   225,   226,
     227,   228,     0,   229,     0,   231,   232,   233,   234,   235,
     236,   237,     0,   238,     0,   239,     0,     0,   242,     0,
     244,   245,   246,   247,   248,     0,     0,   249,     0,   251,
       0,     0,   253,   254,   255,     0,     0,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,     0,   281,   282,   283,   284,   285,     0,   286,   287,
       0,   289,     0,   290,   291,   292,   293,   294,   295,     0,
     296,   297,     0,     0,   298,   299,   300,     0,     0,   301,
     302,     0,   304,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,     0,   317,   318,   319,   320,
     321,   322,   323,   324,   325,     0,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
       0,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,     0,   352,   353,     0,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,     0,   370,   371,   372,   373,   374,     0,   375,
     376,   377,   378,   379,     0,   381,   382,   383,   384,     0,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,     0,   399,   400,     0,   401,     0,
     403,   404,   405,   406,   407,     0,   408,   409,     0,     0,
     410,   411,   412,   413,   414,     0,   415,   416,   417,   418,
     419,   420,   421,     0,     0,   422,   423,   424,   425,   426,
       0,     0,   427,   428,   429,   430,   431,   432,   433,     0,
     434,     0,   436,   437,   438,   439,     0,     0,   440,     0,
       0,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   486,     0,  2250,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    90,    91,    92,
      93,    94,    95,    96,    97,     0,    98,    99,   100,     0,
       0,     0,     0,     0,     0,     0,   101,   102,     0,   103,
     104,   105,     0,   107,   108,   109,   110,   111,     0,   113,
     114,     0,   115,   116,   117,   118,   119,   120,     0,     0,
     121,   122,   123,   124,   125,     0,   126,   127,   128,   129,
     130,     0,     0,     0,   132,   133,   134,   135,   136,     0,
     138,   139,   140,     0,   141,   142,   143,   144,   145,   146,
       0,     0,   148,   149,   150,     0,     0,     0,     0,     0,
       0,     0,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   161,     0,   162,     0,   163,   164,   165,   166,   167,
     168,     0,   169,   170,   171,   172,   173,     0,     0,   174,
     175,   176,   177,   178,     0,   179,   180,   181,     0,   182,
     183,   184,     0,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,     0,   195,     0,   196,   197,   198,   199,
       0,   200,     0,   201,     0,     0,     0,   204,   205,   206,
       0,   208,     0,   209,     0,   210,   211,     0,   212,   213,
     214,   215,   216,   217,     0,   219,   220,   221,   222,     0,
     223,   224,   225,   226,   227,   228,     0,   229,     0,   231,
     232,   233,   234,   235,   236,   237,     0,   238,     0,   239,
       0,     0,   242,     0,   244,   245,   246,   247,   248,     0,
       0,   249,     0,   251,     0,     0,   253,   254,   255,     0,
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,     0,   281,   282,   283,   284,
     285,     0,   286,   287,     0,   289,     0,   290,   291,   292,
     293,   294,   295,     0,   296,   297,     0,     0,   298,   299,
     300,     0,     0,   301,   302,     0,   304,     0,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,     0,
     317,   318,   319,   320,   321,   322,   323,   324,   325,     0,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,     0,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,     0,   352,   353,
       0,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,     0,   370,   371,   372,
     373,   374,     0,   375,   376,   377,   378,   379,     0,   381,
     382,   383,   384,     0,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,     0,   399,
     400,     0,   401,     0,   403,   404,   405,   406,   407,     0,
     408,   409,     0,     0,   410,   411,   412,   413,   414,     0,
     415,   416,   417,   418,   419,   420,   421,     0,     0,   422,
     423,   424,   425,   426,     0,     0,   427,   428,   429,   430,
     431,   432,   433,     0,   434,     0,   436,   437,   438,   439,
       0,     0,   440,     0,     0,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   486,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    90,    91,    92,    93,    94,    95,    96,    97,     0,
      98,    99,   100,     0,     0,     0,     0,     0,     0,     0,
     101,   102,     0,   103,   104,   105,     0,   107,   108,   109,
     110,   111,     0,   113,   114,     0,   115,   116,   117,   118,
     119,   120,     0,     0,   121,   122,   123,   124,   125,     0,
     126,   127,   128,   129,   130,     0,     0,     0,   132,   133,
     134,   135,   136,     0,   138,   139,   140,     0,   141,   142,
     143,   144,   145,   146,     0,     0,   148,   149,   150,     0,
       0,     0,     0,     0,     0,     0,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   161,     0,   162,     0,   163,
     164,   165,   166,   167,   168,     0,   169,   170,   171,   172,
     173,     0,     0,   174,   175,   176,   177,   178,     0,   179,
     180,   181,     0,   182,   183,   184,     0,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,     0,   195,     0,
     196,   197,   198,   199,     0,   200,     0,   201,     0,     0,
       0,   204,   205,   206,     0,   208,     0,   209,     0,   210,
     211,     0,   212,   213,   214,   215,   216,   217,     0,   219,
     220,   221,   222,     0,   223,   224,   225,   226,   227,   228,
       0,   229,     0,   231,   232,   233,   234,   235,   236,   237,
       0,   238,     0,   239,     0,     0,   242,     0,   244,   245,
     246,   247,   248,     0,     0,   249,     0,   251,     0,     0,
     253,   254,   255,     0,     0,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,     0,
     281,   282,   283,   284,   285,     0,   286,   287,     0,   289,
       0,   290,   291,   292,   293,   294,   295,     0,   296,   297,
       0,     0,   298,   299,   300,     0,     0,   301,   302,     0,
     304,     0,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,     0,   317,   318,   319,   320,   321,   322,
     323,   324,   325,     0,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,     0,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,     0,   352,   353,     0,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
       0,   370,   371,   372,   373,   374,     0,   375,   376,   377,
     378,   379,     0,   381,   382,   383,   384,     0,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,     0,   399,   400,     0,   401,     0,   403,   404,
     405,   406,   407,     0,   408,   409,     0,     0,   410,   411,
     412,   413,   414,     0,   415,   416,   417,   418,   419,   420,
     421,     0,     0,   422,   423,   424,   425,   426,     0,     0,
     427,   428,   429,   430,   431,   432,   433,     0,   434,     0,
     436,   437,   438,   439,     0,     0,   440,     0,     0,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     486,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    90,    91,    92,    93,    94,
      95,    96,    97,     0,    98,    99,   100,     0,     0,     0,
       0,     0,     0,     0,   101,   102,     0,   103,   104,   105,
       0,   107,   108,   109,   110,   111,     0,   113,   114,     0,
     115,   116,   117,   118,   119,   120,     0,     0,   121,   122,
     123,   124,   125,     0,   126,   127,   128,   129,   130,     0,
       0,     0,   132,   133,   134,   135,   136,     0,   138,   139,
     140,     0,   141,   142,   143,   144,   145,   146,     0,     0,
     148,   149,   150,     0,     0,     0,     0,     0,     0,     0,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   161,
       0,   162,     0,   163,   164,   165,   166,   167,   168,     0,
     169,   170,   171,   172,   173,     0,     0,   174,   175,   176,
     177,   178,     0,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,     0,   195,     0,   196,   197,   198,   199,     0,   200,
       0,   201,     0,     0,     0,   204,   205,   206,     0,   208,
       0,   209,     0,   210,   211,     0,   212,   213,   214,   215,
     216,   217,     0,   219,   220,   221,   222,     0,   223,   224,
     225,   226,   227,   228,     0,   229,     0,   231,   232,   233,
     234,   235,   236,   237,     0,   238,     0,   239,     0,     0,
     242,     0,   244,   245,   246,   247,   248,     0,     0,   249,
       0,   251,     0,     0,   253,   254,   548,     0,     0,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,     0,   281,   282,   283,   284,   285,     0,
     286,   287,     0,   289,     0,   290,   291,   292,   293,   294,
     295,     0,   296,   297,     0,     0,   298,   299,   300,     0,
       0,   301,   302,     0,   304,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,     0,   317,   318,
     319,   320,   321,   322,   323,   324,   325,     0,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,     0,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,     0,   352,   353,     0,   355,
     356,   357,   358,   359,   360,   361,   362,   549,   364,   365,
     366,   367,   368,   369,     0,   370,   371,   372,   373,   550,
       0,   375,   376,   377,   378,   379,     0,   381,   382,   383,
     384,     0,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,     0,   399,   400,     0,
     401,     0,   403,   404,   405,   406,   407,     0,   551,   409,
       0,     0,   410,   411,   412,   413,   414,     0,   415,   416,
     417,   418,   419,   420,   421,     0,     0,   422,   423,   424,
     425,   426,     0,     0,   427,   428,   429,   430,   431,   432,
     433,     0,   434,     0,   436,   437,   438,   439,     0,     0,
     440,     0,     0,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   486,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    90,
      91,    92,    93,    94,    95,    96,    97,     0,    98,    99,
     100,     0,     0,     0,     0,     0,     0,     0,   101,   102,
       0,   103,   104,   105,     0,   107,   108,   109,   110,   111,
       0,   113,   114,     0,   115,   116,   117,   118,   119,   120,
       0,     0,   121,   122,   123,   124,   125,     0,   126,   127,
     128,   129,   130,     0,     0,     0,   132,   133,   134,   135,
     136,     0,   138,   139,   140,     0,   141,   142,   143,   144,
     145,   146,     0,     0,   148,   149,   150,     0,     0,     0,
       0,     0,     0,     0,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   161,     0,   162,     0,   163,   164,   165,
     166,   167,   168,     0,   169,   170,   171,   172,   173,     0,
       0,   174,   175,   176,   177,   178,     0,   179,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,     0,   195,     0,   196,   197,
     198,   199,     0,   200,     0,   201,     0,     0,     0,   204,
     205,   206,     0,   208,     0,   209,     0,   210,   211,     0,
     212,   213,   214,   215,   216,   217,     0,   219,   220,   221,
     222,     0,   223,   224,   225,   226,   227,   228,     0,   229,
       0,   231,   232,   233,   234,   235,   236,   237,     0,   238,
       0,   239,     0,     0,   242,     0,   244,   245,   246,   247,
     248,     0,     0,   249,     0,   251,     0,     0,   253,   254,
     255,     0,     0,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,     0,   281,   282,
     283,   284,   285,     0,   286,   287,     0,   289,     0,   290,
     291,   292,   293,   294,   295,     0,   296,   297,     0,     0,
     298,   299,   300,     0,     0,   301,   302,     0,   304,     0,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,     0,   317,   318,   319,   320,   321,   322,   323,   324,
     325,     0,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   564,   339,     0,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,     0,
     352,   353,     0,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,     0,   370,
     371,   372,   373,   374,     0,   375,   376,   377,   378,   379,
       0,   381,   382,   383,   384,     0,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
       0,   399,   400,     0,   401,     0,   403,   404,   405,   406,
     407,     0,   408,   409,     0,     0,   410,   411,   412,   413,
     414,     0,   415,   416,   417,   418,   419,   420,   421,     0,
       0,   422,   423,   424,   425,   426,     0,     0,   427,   428,
     429,   430,   431,   432,   433,     0,   434,     0,   436,   437,
     438,   439,     0,     0,   440,     0,     0,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   486,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    90,    91,    92,    93,    94,    95,    96,
      97,     0,    98,    99,   100,     0,     0,     0,     0,     0,
       0,     0,   101,   102,     0,   103,   104,   105,     0,   107,
     108,   109,   110,   111,     0,   113,   114,     0,   115,   116,
     117,   118,   119,   120,     0,     0,   121,   122,   123,   124,
     125,     0,   126,   127,   128,   129,   130,     0,     0,     0,
     132,   133,   134,   135,   136,     0,   138,   139,   140,     0,
     141,   142,   143,   144,   145,   146,     0,     0,   148,   149,
     150,     0,     0,     0,     0,     0,     0,     0,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,     0,   162,
       0,   163,   164,   165,   166,   167,   168,     0,   169,   170,
     171,   172,   173,     0,     0,   174,   175,   176,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,     0,
     195,     0,   196,   197,   198,   199,     0,   200,     0,   201,
       0,     0,     0,   204,   205,   206,     0,   208,     0,   209,
       0,   210,   211,     0,   212,   213,   214,   215,   216,   595,
       0,   219,   220,   221,   222,     0,   223,   224,   225,   226,
     227,   228,     0,   229,     0,   231,   232,   233,   234,   235,
     236,   237,     0,   238,     0,   239,     0,     0,   242,     0,
     244,   245,   246,   247,   248,     0,     0,   249,     0,   251,
       0,     0,   253,   254,   255,     0,     0,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,     0,   281,   282,   283,   284,   285,     0,   286,   287,
       0,   289,     0,   290,   291,   292,   293,   294,   295,     0,
     296,   297,     0,     0,   298,   299,   300,     0,     0,   301,
     302,     0,   304,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,     0,   317,   318,   319,   320,
     321,   322,   323,   324,   325,     0,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
       0,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,     0,   352,   353,     0,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,     0,   370,   371,   372,   373,   374,     0,   375,
     376,   377,   378,   379,     0,   381,   382,   383,   384,     0,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,     0,   399,   400,     0,   401,     0,
     403,   404,   405,   406,   407,     0,   408,   409,     0,     0,
     410,   411,   412,   413,   414,     0,   415,   416,   417,   418,
     419,   420,   421,     0,     0,   422,   423,   424,   425,   426,
       0,     0,   427,   428,   429,   430,   431,   432,   433,     0,
     434,     0,   436,   437,   438,   439,     0,     0,   440,     0,
       0,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   486,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    90,    91,    92,
      93,    94,    95,    96,    97,     0,    98,    99,   100,     0,
       0,     0,     0,     0,     0,     0,   101,   102,     0,   103,
     104,   105,     0,   107,   108,   109,   110,   111,     0,   113,
     114,     0,   115,   116,   117,   118,   119,   120,     0,     0,
     121,   122,   123,   124,   125,     0,   126,   127,   128,   129,
     130,     0,     0,     0,   132,   133,   134,   135,   136,     0,
     138,   139,   140,     0,   141,   142,   143,   144,   145,   146,
       0,     0,   148,   149,   150,     0,     0,     0,     0,     0,
       0,     0,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   161,     0,   162,     0,   163,   164,   165,   166,   167,
     168,     0,   169,   170,   171,   172,   173,     0,     0,   174,
     175,   176,   177,   178,     0,   179,   180,   181,     0,   182,
     183,   184,     0,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,     0,   195,     0,   196,   197,   198,   199,
       0,   200,     0,   201,     0,     0,     0,   204,   205,   206,
       0,   208,     0,   209,     0,   210,   211,     0,   212,   213,
     214,   215,   216,   598,     0,   219,   220,   221,   222,     0,
     223,   224,   225,   226,   227,   228,     0,   229,     0,   231,
     232,   233,   234,   235,   236,   237,     0,   238,     0,   239,
       0,     0,   242,     0,   244,   245,   246,   247,   248,     0,
       0,   249,     0,   251,     0,     0,   253,   254,   255,     0,
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,     0,   281,   282,   283,   284,
     285,     0,   286,   287,     0,   289,     0,   290,   291,   292,
     293,   294,   295,     0,   296,   297,     0,     0,   298,   299,
     300,     0,     0,   301,   302,     0,   304,     0,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,     0,
     317,   318,   319,   320,   321,   322,   323,   324,   325,     0,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,     0,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,     0,   352,   353,
       0,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,     0,   370,   371,   372,
     373,   374,     0,   375,   376,   377,   378,   379,     0,   381,
     382,   383,   384,     0,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,     0,   399,
     400,     0,   401,     0,   403,   404,   405,   406,   407,     0,
     408,   409,     0,     0,   410,   411,   412,   413,   414,     0,
     415,   416,   417,   418,   419,   420,   421,     0,     0,   422,
     423,   424,   425,   426,     0,     0,   427,   428,   429,   430,
     431,   432,   433,     0,   434,     0,   436,   437,   438,   439,
       0,     0,   440,     0,     0,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   486,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    90,    91,    92,    93,    94,    95,    96,    97,     0,
      98,    99,   100,     0,     0,     0,     0,     0,     0,     0,
     101,   102,     0,   103,   104,   105,     0,   107,   108,   109,
     110,   111,     0,   113,   114,     0,   115,   116,   117,   118,
     119,   120,     0,     0,   121,   122,   123,   124,   125,     0,
     126,   127,   128,   129,   130,     0,     0,     0,   132,   133,
     134,   135,   136,     0,   138,   139,   140,     0,   141,   142,
     143,   144,   145,   146,     0,     0,   148,   149,   150,     0,
       0,     0,     0,     0,     0,     0,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   161,     0,   162,     0,   163,
     164,   165,   166,   167,   168,     0,   169,   170,   171,   172,
     173,     0,     0,   174,   175,   176,   177,   178,     0,   179,
     180,   181,     0,   182,   183,   184,     0,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,     0,   195,     0,
     196,   197,   198,   199,     0,   200,     0,   201,     0,     0,
       0,   204,   205,   206,     0,   208,     0,   209,     0,   210,
     211,     0,   212,   213,   214,   215,   216,   602,     0,   219,
     220,   221,   222,     0,   223,   224,   225,   226,   227,   228,
       0,   229,     0,   231,   232,   233,   234,   235,   236,   237,
       0,   238,     0,   239,     0,     0,   242,     0,   244,   245,
     246,   247,   248,     0,     0,   249,     0,   251,     0,     0,
     253,   254,   255,     0,     0,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,     0,
     281,   282,   283,   284,   285,     0,   286,   287,     0,   289,
       0,   290,   291,   292,   293,   294,   295,     0,   296,   297,
       0,     0,   298,   299,   300,     0,     0,   301,   302,     0,
     304,     0,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,     0,   317,   318,   319,   320,   321,   322,
     323,   324,   325,     0,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,     0,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,     0,   352,   353,     0,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
       0,   370,   371,   372,   373,   374,     0,   375,   376,   377,
     378,   379,     0,   381,   382,   383,   384,     0,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,     0,   399,   400,     0,   401,     0,   403,   404,
     405,   406,   407,     0,   408,   409,     0,     0,   410,   411,
     412,   413,   414,     0,   415,   416,   417,   418,   419,   420,
     421,     0,     0,   422,   423,   424,   425,   426,     0,     0,
     427,   428,   429,   430,   431,   432,   433,     0,   434,     0,
     436,   437,   438,   439,     0,     0,   440,     0,     0,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     486,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    90,    91,    92,    93,    94,
      95,    96,    97,     0,    98,    99,   100,     0,     0,     0,
       0,     0,     0,     0,   101,   102,     0,   103,   104,   105,
       0,   107,   108,   109,   110,   111,     0,   113,   114,     0,
     115,   116,   117,   118,   119,   120,     0,     0,   121,   122,
     123,   124,   125,     0,   126,   127,   128,   129,   130,     0,
       0,     0,   132,   133,   134,   135,   136,     0,   138,   139,
     140,     0,   141,   142,   143,   144,   145,   146,     0,     0,
     148,   149,   150,     0,     0,     0,     0,     0,     0,     0,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   161,
       0,   162,     0,   163,   164,   165,   166,   167,   168,     0,
     169,   170,   171,   172,   173,     0,     0,   174,   175,   176,
     177,   178,     0,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,     0,   195,     0,   196,   197,   198,   199,     0,   200,
       0,   201,     0,     0,     0,   204,   205,   206,     0,   208,
       0,   209,     0,   210,   211,     0,   212,   213,   214,   215,
     216,   620,     0,   219,   220,   221,   222,     0,   223,   224,
     225,   226,   227,   228,     0,   229,     0,   231,   232,   233,
     234,   235,   236,   237,     0,   238,     0,   239,     0,     0,
     242,     0,   244,   245,   246,   247,   248,     0,     0,   249,
       0,   251,     0,     0,   253,   254,   255,     0,     0,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,     0,   281,   282,   283,   284,   285,     0,
     286,   287,     0,   289,     0,   290,   291,   292,   293,   294,
     295,     0,   296,   297,     0,     0,   298,   299,   300,     0,
       0,   301,   302,     0,   304,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,     0,   317,   318,
     319,   320,   321,   322,   323,   324,   325,     0,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,     0,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,     0,   352,   353,     0,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,     0,   370,   371,   372,   373,   374,
       0,   375,   376,   377,   378,   379,     0,   381,   382,   383,
     384,     0,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,     0,   399,   400,     0,
     401,     0,   403,   404,   405,   406,   407,     0,   408,   409,
       0,     0,   410,   411,   412,   413,   414,     0,   415,   416,
     417,   418,   419,   420,   421,     0,     0,   422,   423,   424,
     425,   426,     0,     0,   427,   428,   429,   430,   431,   432,
     433,     0,   434,     0,   436,   437,   438,   439,     0,     0,
     440,     0,     0,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   486,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    90,
      91,    92,    93,    94,    95,    96,    97,     0,    98,    99,
     100,     0,     0,     0,     0,     0,     0,     0,   101,   102,
       0,   103,   104,   105,     0,   107,   108,   109,   110,   111,
       0,   113,   114,     0,   115,   116,   117,   118,   119,   120,
       0,     0,   121,   122,   123,   124,   125,     0,   126,   127,
     128,   129,   130,     0,     0,     0,   132,   133,   134,   135,
     136,     0,   138,   139,   140,     0,   141,   142,   143,   144,
     145,   146,     0,     0,   148,   149,   150,     0,     0,     0,
       0,     0,     0,     0,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   161,     0,   162,     0,   163,   164,   165,
     166,   167,   168,     0,   169,   170,   171,   172,   173,     0,
       0,   174,   175,   176,   177,   178,     0,   179,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,     0,   195,     0,   196,   197,
     198,   199,     0,   200,     0,   201,     0,     0,     0,   204,
     205,   206,     0,   208,     0,   209,     0,   210,   211,     0,
     212,   213,   214,   215,   216,   636,     0,   219,   220,   221,
     222,     0,   223,   224,   225,   226,   227,   228,     0,   229,
       0,   231,   232,   233,   234,   235,   236,   237,     0,   238,
       0,   239,     0,     0,   242,     0,   244,   245,   246,   247,
     248,     0,     0,   249,     0,   251,     0,     0,   253,   254,
     255,     0,     0,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,     0,   281,   282,
     283,   284,   285,     0,   286,   287,     0,   289,     0,   290,
     291,   292,   293,   294,   295,     0,   296,   297,     0,     0,
     298,   299,   300,     0,     0,   301,   302,     0,   304,     0,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,     0,   317,   318,   319,   320,   321,   322,   323,   324,
     325,     0,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,     0,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,     0,
     352,   353,     0,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,     0,   370,
     371,   372,   373,   374,     0,   375,   376,   377,   378,   379,
       0,   381,   382,   383,   384,     0,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
       0,   399,   400,     0,   401,     0,   403,   404,   405,   406,
     407,     0,   408,   409,     0,     0,   410,   411,   412,   413,
     414,     0,   415,   416,   417,   418,   419,   420,   421,     0,
       0,   422,   423,   424,   425,   426,     0,     0,   427,   428,
     429,   430,   431,   432,   433,     0,   434,     0,   436,   437,
     438,   439,     0,     0,   440,     0,     0,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   486,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    90,    91,    92,    93,    94,    95,    96,
      97,     0,    98,    99,   100,     0,     0,     0,     0,     0,
       0,     0,   101,   102,     0,   103,   104,   105,     0,   107,
     108,   109,   110,   111,     0,   113,   114,     0,   115,   116,
     117,   118,   119,   120,     0,     0,   121,   122,   123,   124,
     125,     0,   126,   127,   128,   129,   130,     0,     0,     0,
     132,   133,   134,   135,   136,     0,   138,   139,   140,     0,
     141,   142,   143,   144,   145,   146,     0,     0,   148,   149,
     150,     0,     0,     0,     0,     0,     0,     0,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,     0,   162,
       0,   163,   164,   165,   166,   167,   168,     0,   169,   170,
     171,   172,   173,     0,     0,   174,   175,   176,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,     0,
     195,     0,   196,   197,   198,   199,     0,   200,     0,   201,
       0,     0,     0,   204,   205,   206,     0,   208,     0,   209,
       0,   210,   211,     0,   212,   213,   214,   215,   216,   640,
       0,   219,   220,   221,   222,     0,   223,   224,   225,   226,
     227,   228,     0,   229,     0,   231,   232,   233,   234,   235,
     236,   237,     0,   238,     0,   239,     0,     0,   242,     0,
     244,   245,   246,   247,   248,     0,     0,   249,     0,   251,
       0,     0,   253,   254,   255,     0,     0,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,     0,   281,   282,   283,   284,   285,     0,   286,   287,
       0,   289,     0,   290,   291,   292,   293,   294,   295,     0,
     296,   297,     0,     0,   298,   299,   300,     0,     0,   301,
     302,     0,   304,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,     0,   317,   318,   319,   320,
     321,   322,   323,   324,   325,     0,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
       0,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,     0,   352,   353,     0,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,     0,   370,   371,   372,   373,   374,     0,   375,
     376,   377,   378,   379,     0,   381,   382,   383,   384,     0,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,     0,   399,   400,     0,   401,     0,
     403,   404,   405,   406,   407,     0,   408,   409,     0,     0,
     410,   411,   412,   413,   414,     0,   415,   416,   417,   418,
     419,   420,   421,     0,     0,   422,   423,   424,   425,   426,
       0,     0,   427,   428,   429,   430,   431,   432,   433,     0,
     434,     0,   436,   437,   438,   439,     0,     0,   440,     0,
       0,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   486,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    90,    91,    92,
      93,    94,    95,    96,    97,     0,    98,    99,   100,     0,
       0,     0,     0,     0,     0,     0,   101,   102,     0,   103,
     104,   105,     0,   107,   108,   109,   110,   111,     0,   113,
     114,     0,   115,   116,   117,   118,   119,   120,     0,     0,
     121,   122,   123,   124,   125,     0,   126,   127,   128,   129,
     130,     0,     0,     0,   132,   133,   134,   135,   136,     0,
     138,   139,   140,     0,   141,   142,   143,   144,   145,   146,
       0,     0,   148,   149,   150,     0,     0,     0,     0,     0,
       0,     0,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   161,     0,   162,     0,   163,   164,   165,   166,   167,
     168,     0,   169,   170,   171,   172,   173,     0,     0,   174,
     175,   176,   177,   178,     0,   179,   180,   181,     0,   182,
     183,   184,     0,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,     0,   195,     0,   196,   197,   198,   199,
       0,   200,     0,   201,     0,     0,     0,   204,   205,   206,
       0,   208,     0,   209,     0,   210,   211,     0,   212,   213,
     214,   215,   216,   643,     0,   219,   220,   221,   222,     0,
     223,   224,   225,   226,   227,   228,     0,   229,     0,   231,
     232,   233,   234,   235,   236,   237,     0,   238,     0,   239,
       0,     0,   242,     0,   244,   245,   246,   247,   248,     0,
       0,   249,     0,   251,     0,     0,   253,   254,   255,     0,
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,     0,   281,   282,   283,   284,
     285,     0,   286,   287,     0,   289,     0,   290,   291,   292,
     293,   294,   295,     0,   296,   297,     0,     0,   298,   299,
     300,     0,     0,   301,   302,     0,   304,     0,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,     0,
     317,   318,   319,   320,   321,   322,   323,   324,   325,     0,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,     0,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,     0,   352,   353,
       0,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,     0,   370,   371,   372,
     373,   374,     0,   375,   376,   377,   378,   379,     0,   381,
     382,   383,   384,     0,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,     0,   399,
     400,     0,   401,     0,   403,   404,   405,   406,   407,     0,
     408,   409,     0,     0,   410,   411,   412,   413,   414,     0,
     415,   416,   417,   418,   419,   420,   421,     0,     0,   422,
     423,   424,   425,   426,     0,     0,   427,   428,   429,   430,
     431,   432,   433,     0,   434,     0,   436,   437,   438,   439,
       0,     0,   440,     0,     0,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   486,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    90,    91,    92,    93,    94,    95,    96,    97,     0,
      98,    99,   100,     0,     0,     0,     0,     0,     0,     0,
     101,   102,     0,   103,   104,   105,     0,   107,   108,   109,
     110,   111,     0,   113,   114,     0,   115,   116,   117,   118,
     119,   120,     0,     0,   121,   122,   123,   124,   125,     0,
     126,   127,   128,   129,   130,     0,     0,     0,   132,   133,
     134,   135,   136,     0,   138,   139,   140,     0,   141,   142,
     143,   144,   145,   146,     0,     0,   148,   149,   150,     0,
       0,     0,     0,     0,     0,     0,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   161,     0,   162,     0,   163,
     164,   165,   166,   167,   168,     0,   169,   170,   171,   172,
     173,     0,     0,   174,   175,   176,   177,   178,     0,   179,
     180,   181,     0,   182,   183,   184,     0,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,     0,   195,     0,
     196,   197,   198,   199,     0,   200,     0,   201,     0,     0,
       0,   204,   205,   206,     0,   208,     0,   209,     0,   210,
     211,     0,   212,   213,   214,   215,   216,   217,     0,   219,
     220,   221,   222,     0,   223,   224,   225,   226,   227,   228,
       0,   229,     0,   231,   232,   233,   234,   235,   236,   237,
       0,   238,     0,   239,     0,     0,   242,     0,   244,   245,
     246,   247,   248,     0,     0,   249,     0,   251,     0,     0,
     253,   254,   255,     0,     0,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,     0,
     281,   282,   283,   284,   285,     0,   286,   287,     0,   289,
       0,   290,   291,   292,   293,   294,   295,     0,   296,   297,
       0,     0,   298,   299,   300,     0,     0,   301,   302,     0,
     304,     0,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,     0,   317,   318,   319,   320,   321,   322,
     323,   324,   325,     0,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,     0,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,     0,   352,   353,     0,   355,   356,   357,   358,   359,
     360,   361,   362,   549,   364,   365,   366,   367,   368,   369,
       0,   370,   371,   372,   373,   374,     0,   375,   376,   377,
     378,   379,     0,   381,   382,   383,   384,     0,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,     0,   399,   400,     0,   401,     0,   403,   404,
     405,   406,   407,     0,   551,   409,     0,     0,   410,   411,
     412,   413,   414,     0,   415,   416,   417,   418,   419,   420,
     421,     0,     0,   422,   423,   424,   425,   426,     0,     0,
     427,   428,   429,   430,   431,   432,   433,     0,   434,     0,
     436,   437,   438,   439,     0,     0,   440,     0,     0,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     486,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    90,    91,    92,    93,    94,
      95,    96,    97,     0,    98,    99,   100,     0,     0,     0,
       0,     0,     0,     0,   101,   102,     0,   103,   104,   105,
       0,   107,   108,   109,   110,   111,     0,   113,   114,     0,
     115,   116,   117,   118,   119,   120,     0,     0,   121,   122,
     123,   124,   125,     0,   126,   127,   128,   129,   130,     0,
       0,     0,   132,   133,   134,   135,   136,     0,   138,   139,
     140,     0,   141,   142,   143,   144,   145,   146,     0,     0,
     148,   149,   150,     0,     0,     0,     0,     0,     0,     0,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   161,
       0,   162,     0,   163,   164,   165,   166,   167,   168,     0,
     169,   170,   171,   172,   173,     0,     0,   174,   175,   176,
     177,   178,     0,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,     0,   195,     0,   196,   197,   198,   199,     0,   200,
       0,   201,     0,     0,     0,   204,   205,   206,     0,   208,
       0,   209,     0,   210,   211,     0,   212,   213,   214,   215,
     216,   960,     0,   219,   220,   221,   222,     0,   223,   224,
     225,   226,   227,   228,     0,   229,     0,   231,   232,   233,
     234,   235,   236,   237,     0,   238,     0,   239,     0,     0,
     242,     0,   244,   245,   246,   247,   248,     0,     0,   249,
       0,   251,     0,     0,   253,   254,   255,     0,     0,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,     0,   281,   282,   283,   284,   285,     0,
     286,   287,     0,   289,     0,   290,   291,   292,   293,   294,
     295,     0,   296,   297,     0,     0,   298,   299,   300,     0,
       0,   301,   302,     0,   304,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,     0,   317,   318,
     319,   320,   321,   322,   323,   324,   325,     0,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,     0,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,     0,   352,   353,     0,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,     0,   370,   371,   372,   373,   374,
       0,   375,   376,   377,   378,   379,     0,   381,   382,   383,
     384,     0,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,     0,   399,   400,     0,
     401,     0,   403,   404,   405,   406,   407,     0,   408,   409,
       0,     0,   410,   411,   412,   413,   414,     0,   415,   416,
     417,   418,   419,   420,   421,     0,     0,   422,   423,   424,
     425,   426,     0,     0,   427,   428,   429,   430,   431,   432,
     433,     0,   434,     0,   436,   437,   438,   439,     0,     0,
     440,     0,     0,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   486,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    90,
      91,    92,    93,    94,    95,    96,    97,     0,    98,    99,
     100,     0,     0,     0,     0,     0,     0,     0,   101,   102,
       0,   103,   104,   105,     0,   107,   108,   109,   110,   111,
       0,   113,   114,     0,   115,   116,   117,   118,   119,   120,
       0,     0,   121,   122,   123,   124,   125,     0,   126,   127,
     128,   129,   130,     0,     0,     0,   132,   133,   134,   135,
     136,     0,   138,   139,   140,     0,   141,   142,   143,   144,
     145,   146,     0,     0,   148,   149,   150,     0,     0,     0,
       0,     0,     0,     0,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   161,     0,   162,     0,   163,   164,   165,
     166,   167,   168,     0,   169,   170,   171,   172,   173,     0,
       0,   174,   175,   176,   177,   178,     0,   179,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,     0,   195,     0,   196,   197,
     198,   199,     0,   200,     0,   201,     0,     0,     0,   204,
     205,   206,     0,   208,     0,   209,     0,   210,   211,     0,
     212,   213,   214,   215,   216,   962,     0,   219,   220,   221,
     222,     0,   223,   224,   225,   226,   227,   228,     0,   229,
       0,   231,   232,   233,   234,   235,   236,   237,     0,   238,
       0,   239,     0,     0,   242,     0,   244,   245,   246,   247,
     248,     0,     0,   249,     0,   251,     0,     0,   253,   254,
     255,     0,     0,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,     0,   281,   282,
     283,   284,   285,     0,   286,   287,     0,   289,     0,   290,
     291,   292,   293,   294,   295,     0,   296,   297,     0,     0,
     298,   299,   300,     0,     0,   301,   302,     0,   304,     0,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,     0,   317,   318,   319,   320,   321,   322,   323,   324,
     325,     0,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,     0,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,     0,
     352,   353,     0,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,     0,   370,
     371,   372,   373,   374,     0,   375,   376,   377,   378,   379,
       0,   381,   382,   383,   384,     0,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
       0,   399,   400,     0,   401,     0,   403,   404,   405,   406,
     407,     0,   408,   409,     0,     0,   410,   411,   412,   413,
     414,     0,   415,   416,   417,   418,   419,   420,   421,     0,
       0,   422,   423,   424,   425,   426,     0,     0,   427,   428,
     429,   430,   431,   432,   433,     0,   434,     0,   436,   437,
     438,   439,     0,     0,   440,     0,     0,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   486,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    90,    91,    92,    93,    94,    95,    96,
      97,     0,    98,    99,   100,     0,     0,     0,     0,     0,
    1182,     0,   101,   102,     0,   103,   104,   105,     0,   107,
     108,   109,   110,   111,     0,   113,   114,     0,   115,   116,
     117,   118,   119,   120,     0,     0,   121,   122,   123,   124,
     125,     0,   126,   127,   128,   129,   130,     0,     0,     0,
     132,   133,   134,   135,   136,     0,   138,   139,   140,     0,
     141,   142,   143,   144,   145,   146,     0,     0,   148,   149,
     150,     0,     0,     0,     0,     0,     0,     0,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,     0,   162,
       0,   163,   164,   165,   166,   167,   168,     0,   169,   170,
     171,   172,   173,     0,     0,   174,   175,   176,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,     0,
     195,     0,   196,   197,   198,   199,     0,   200,     0,   201,
       0,     0,     0,   204,   205,   206,     0,   208,     0,   209,
       0,   210,   211,     0,   212,   213,   214,   215,   216,   217,
       0,   219,   220,   221,   222,     0,   223,   224,   225,   226,
     227,   228,     0,   229,     0,   231,   232,   233,   234,   235,
     236,   237,     0,   238,     0,   239,     0,     0,   242,     0,
     244,   245,   246,   247,   248,     0,     0,   249,     0,   251,
       0,     0,   253,   254,   255,     0,     0,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,     0,   281,   282,   283,   284,   285,     0,   286,   287,
       0,   289,     0,   290,   291,   292,   293,   294,   295,     0,
     296,   297,     0,     0,   298,   299,   300,     0,     0,   301,
     302,     0,   304,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,     0,   317,   318,   319,   320,
     321,   322,   323,   324,   325,     0,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
       0,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,     0,   352,   353,     0,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,     0,   370,   371,   372,   373,   374,     0,     0,
     376,   377,   378,   379,     0,   381,   382,   383,   384,     0,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,     0,   399,   400,     0,   401,     0,
     403,   404,   405,   406,   407,     0,   408,   409,     0,     0,
     410,   411,   412,   413,   414,     0,   415,   416,   417,   418,
     419,   420,   421,     0,     0,   422,   423,   424,   425,   426,
       0,     0,   427,   428,   429,   430,   431,   432,   433,     0,
     434,     0,   436,   437,   438,   439,     0,     0,   440,     0,
       0,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   486,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    90,    91,    92,
      93,    94,    95,    96,    97,     0,    98,    99,   100,     0,
       0,     0,     0,     0,     0,     0,   101,   102,     0,   103,
     104,   105,     0,   107,   108,   109,   110,   111,     0,   113,
     114,     0,   115,   116,   117,   118,   119,   120,     0,     0,
     121,   122,   123,   124,   125,     0,   126,   127,   128,   129,
     130,     0,     0,     0,   132,   133,   134,   135,   136,     0,
     138,   139,   140,     0,   141,   142,   143,   144,   145,   146,
       0,     0,   148,   149,   150,     0,     0,     0,     0,     0,
       0,     0,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   161,     0,   162,     0,   163,   164,   165,   166,   167,
     168,     0,   169,   170,   171,   172,   173,     0,     0,   174,
     175,   176,   177,   178,     0,   179,   180,   181,     0,   182,
     183,   184,     0,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,     0,   195,     0,   196,   197,   198,   199,
       0,   200,     0,   201,     0,     0,     0,   204,   205,   206,
       0,   208,     0,   209,     0,   210,   211,     0,   212,   213,
     214,   215,   216,  1315,     0,   219,   220,   221,   222,     0,
     223,   224,   225,   226,   227,   228,     0,   229,     0,   231,
     232,   233,   234,   235,   236,   237,     0,   238,     0,   239,
       0,     0,   242,     0,   244,   245,   246,   247,   248,     0,
       0,   249,     0,   251,     0,     0,   253,   254,   255,     0,
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,     0,   281,   282,   283,   284,
     285,     0,   286,   287,     0,   289,     0,   290,   291,   292,
     293,   294,   295,     0,   296,   297,     0,     0,   298,   299,
     300,     0,     0,   301,   302,     0,   304,     0,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,     0,
     317,   318,   319,   320,   321,   322,   323,   324,   325,     0,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,     0,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,     0,   352,   353,
       0,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,     0,   370,   371,   372,
     373,   374,     0,   375,   376,   377,   378,   379,     0,   381,
     382,   383,   384,     0,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,     0,   399,
     400,     0,   401,     0,   403,   404,   405,   406,   407,     0,
     408,   409,     0,     0,   410,   411,   412,   413,   414,     0,
     415,   416,   417,   418,   419,   420,   421,     0,     0,   422,
     423,   424,   425,   426,     0,     0,   427,   428,   429,   430,
     431,   432,   433,     0,   434,     0,   436,   437,   438,   439,
       0,     0,   440,     0,     0,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   486,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    90,    91,    92,    93,    94,    95,    96,    97,     0,
      98,    99,   100,     0,     0,     0,     0,     0,     0,     0,
     101,   102,     0,   103,   104,   105,     0,   107,   108,   109,
     110,   111,     0,   113,   114,     0,   115,   116,   117,   118,
     119,   120,     0,     0,   121,   122,   123,   124,   125,     0,
     126,   127,   128,   129,   130,     0,     0,     0,   132,   133,
     134,   135,   136,     0,   138,   139,   140,     0,   141,   142,
     143,   144,   145,   146,     0,     0,   148,   149,   150,     0,
       0,     0,     0,     0,     0,     0,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   161,     0,   162,     0,   163,
     164,   165,   166,   167,   168,     0,   169,   170,   171,   172,
     173,     0,     0,   174,   175,   176,   177,   178,     0,   179,
     180,   181,     0,   182,   183,   184,     0,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,     0,   195,     0,
     196,   197,   198,   199,     0,   200,     0,   201,     0,     0,
       0,   204,   205,   206,     0,   208,     0,   209,     0,   210,
     211,     0,   212,   213,   214,   215,   216,  1328,     0,   219,
     220,   221,   222,     0,   223,   224,   225,   226,   227,   228,
       0,   229,     0,   231,   232,   233,   234,   235,   236,   237,
       0,   238,     0,   239,     0,     0,   242,     0,   244,   245,
     246,   247,   248,     0,     0,   249,     0,   251,     0,     0,
     253,   254,   255,     0,     0,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,     0,
     281,   282,   283,   284,   285,     0,   286,   287,     0,   289,
       0,   290,   291,   292,   293,   294,   295,     0,   296,   297,
       0,     0,   298,   299,   300,     0,     0,   301,   302,     0,
     304,     0,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,     0,   317,   318,   319,   320,   321,   322,
     323,   324,   325,     0,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,     0,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,     0,   352,   353,     0,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
       0,   370,   371,   372,   373,   374,     0,   375,   376,   377,
     378,   379,     0,   381,   382,   383,   384,     0,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,     0,   399,   400,     0,   401,     0,   403,   404,
     405,   406,   407,     0,   408,   409,     0,     0,   410,   411,
     412,   413,   414,     0,   415,   416,   417,   418,   419,   420,
     421,     0,     0,   422,   423,   424,   425,   426,     0,     0,
     427,   428,   429,   430,   431,   432,   433,     0,   434,     0,
     436,   437,   438,   439,     0,     0,   440,     0,     0,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     486,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    90,    91,    92,    93,    94,
      95,    96,    97,     0,    98,    99,   100,     0,     0,     0,
       0,     0,     0,     0,   101,   102,     0,   103,   104,   105,
       0,   107,   108,   109,   110,   111,     0,   113,   114,     0,
     115,   116,   117,   118,   119,   120,     0,     0,   121,   122,
     123,   124,   125,     0,   126,   127,   128,   129,   130,     0,
       0,     0,   132,   133,   134,   135,   136,     0,   138,   139,
     140,     0,   141,   142,   143,   144,   145,   146,     0,     0,
     148,   149,   150,     0,     0,     0,     0,     0,     0,     0,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   161,
       0,   162,     0,   163,   164,   165,   166,   167,   168,     0,
     169,   170,   171,   172,   173,     0,     0,   174,   175,   176,
     177,   178,     0,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,     0,   195,     0,   196,   197,   198,   199,     0,   200,
       0,   201,     0,     0,     0,   204,   205,   206,     0,   208,
       0,   209,     0,   210,   211,     0,   212,   213,   214,   215,
     216,  1595,     0,   219,   220,   221,   222,     0,   223,   224,
     225,   226,   227,   228,     0,   229,     0,   231,   232,   233,
     234,   235,   236,   237,     0,   238,     0,   239,     0,     0,
     242,     0,   244,   245,   246,   247,   248,     0,     0,   249,
       0,   251,     0,     0,   253,   254,   255,     0,     0,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,     0,   281,   282,   283,   284,   285,     0,
     286,   287,     0,   289,     0,   290,   291,   292,   293,   294,
     295,     0,   296,   297,     0,     0,   298,   299,   300,     0,
       0,   301,   302,     0,   304,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,     0,   317,   318,
     319,   320,   321,   322,   323,   324,   325,     0,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,     0,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,     0,   352,   353,     0,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,     0,   370,   371,   372,   373,   374,
       0,   375,   376,   377,   378,   379,     0,   381,   382,   383,
     384,     0,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,     0,   399,   400,     0,
     401,     0,   403,   404,   405,   406,   407,     0,   408,   409,
       0,     0,   410,   411,   412,   413,   414,     0,   415,   416,
     417,   418,   419,   420,   421,     0,     0,   422,   423,   424,
     425,   426,     0,     0,   427,   428,   429,   430,   431,   432,
     433,     0,   434,     0,   436,   437,   438,   439,     0,     0,
     440,     0,     0,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   486,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    90,
      91,    92,    93,    94,    95,    96,    97,     0,    98,    99,
     100,     0,     0,     0,     0,     0,     0,     0,   101,   102,
       0,   103,   104,   105,     0,   107,   108,   109,   110,   111,
       0,   113,   114,     0,   115,   116,   117,   118,   119,   120,
       0,     0,   121,   122,   123,   124,   125,     0,   126,   127,
     128,   129,   130,     0,     0,     0,   132,   133,   134,   135,
     136,     0,   138,   139,   140,     0,   141,   142,   143,   144,
     145,   146,     0,     0,   148,   149,   150,     0,     0,     0,
       0,     0,     0,     0,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   161,     0,   162,     0,   163,   164,   165,
     166,   167,   168,     0,   169,   170,   171,   172,   173,     0,
       0,   174,   175,   176,   177,   178,     0,   179,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,     0,   195,     0,   196,   197,
     198,   199,     0,   200,     0,   201,     0,     0,     0,   204,
     205,   206,     0,   208,     0,   209,     0,   210,   211,     0,
     212,   213,   214,   215,   216,  1607,     0,   219,   220,   221,
     222,     0,   223,   224,   225,   226,   227,   228,     0,   229,
       0,   231,   232,   233,   234,   235,   236,   237,     0,   238,
       0,   239,     0,     0,   242,     0,   244,   245,   246,   247,
     248,     0,     0,   249,     0,   251,     0,     0,   253,   254,
     255,     0,     0,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,     0,   281,   282,
     283,   284,   285,     0,   286,   287,     0,   289,     0,   290,
     291,   292,   293,   294,   295,     0,   296,   297,     0,     0,
     298,   299,   300,     0,     0,   301,   302,     0,   304,     0,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,     0,   317,   318,   319,   320,   321,   322,   323,   324,
     325,     0,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,     0,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,     0,
     352,   353,     0,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,     0,   370,
     371,   372,   373,   374,     0,   375,   376,   377,   378,   379,
       0,   381,   382,   383,   384,     0,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
       0,   399,   400,     0,   401,     0,   403,   404,   405,   406,
     407,     0,   408,   409,     0,     0,   410,   411,   412,   413,
     414,     0,   415,   416,   417,   418,   419,   420,   421,     0,
       0,   422,   423,   424,   425,   426,     0,     0,   427,   428,
     429,   430,   431,   432,   433,     0,   434,     0,   436,   437,
     438,   439,     0,     0,   440,     0,     0,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   486,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    90,    91,    92,    93,    94,    95,    96,
      97,     0,    98,    99,   100,     0,     0,     0,     0,     0,
       0,     0,   101,   102,     0,   103,   104,   105,     0,   107,
     108,   109,   110,   111,     0,   113,   114,     0,   115,   116,
     117,   118,   119,   120,     0,     0,   121,   122,   123,   124,
     125,     0,   126,   127,   128,   129,   130,     0,     0,     0,
     132,   133,   134,   135,   136,     0,   138,   139,   140,     0,
     141,   142,   143,   144,   145,   146,     0,     0,   148,   149,
     150,     0,     0,     0,     0,     0,     0,     0,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,     0,   162,
       0,   163,   164,   165,   166,   167,   168,     0,   169,   170,
     171,   172,   173,     0,     0,   174,   175,   176,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,     0,
     195,     0,   196,   197,   198,   199,     0,   200,     0,   201,
       0,     0,     0,   204,   205,   206,     0,   208,     0,   209,
       0,   210,   211,     0,   212,   213,   214,   215,   216,  1609,
       0,   219,   220,   221,   222,     0,   223,   224,   225,   226,
     227,   228,     0,   229,     0,   231,   232,   233,   234,   235,
     236,   237,     0,   238,     0,   239,     0,     0,   242,     0,
     244,   245,   246,   247,   248,     0,     0,   249,     0,   251,
       0,     0,   253,   254,   255,     0,     0,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,     0,   281,   282,   283,   284,   285,     0,   286,   287,
       0,   289,     0,   290,   291,   292,   293,   294,   295,     0,
     296,   297,     0,     0,   298,   299,   300,     0,     0,   301,
     302,     0,   304,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,     0,   317,   318,   319,   320,
     321,   322,   323,   324,   325,     0,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
       0,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,     0,   352,   353,     0,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,     0,   370,   371,   372,   373,   374,     0,   375,
     376,   377,   378,   379,     0,   381,   382,   383,   384,     0,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,     0,   399,   400,     0,   401,     0,
     403,   404,   405,   406,   407,     0,   408,   409,     0,     0,
     410,   411,   412,   413,   414,     0,   415,   416,   417,   418,
     419,   420,   421,     0,     0,   422,   423,   424,   425,   426,
       0,     0,   427,   428,   429,   430,   431,   432,   433,     0,
     434,     0,   436,   437,   438,   439,     0,     0,   440,     0,
       0,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   486,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    90,    91,    92,
      93,    94,    95,    96,    97,     0,    98,    99,   100,     0,
       0,     0,     0,     0,     0,     0,   101,   102,     0,   103,
     104,   105,     0,   107,   108,   109,   110,   111,     0,   113,
     114,     0,   115,   116,   117,   118,   119,   120,     0,     0,
     121,   122,   123,   124,   125,     0,   126,   127,   128,   129,
     130,     0,     0,     0,   132,   133,   134,   135,   136,     0,
     138,   139,   140,     0,   141,   142,   143,   144,   145,   146,
       0,     0,   148,   149,   150,     0,     0,     0,     0,     0,
       0,     0,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   161,     0,   162,     0,   163,   164,   165,   166,   167,
     168,     0,   169,   170,   171,   172,   173,     0,     0,   174,
     175,   176,   177,   178,     0,   179,   180,   181,     0,   182,
     183,   184,     0,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,     0,   195,     0,   196,   197,   198,   199,
       0,   200,     0,   201,     0,     0,     0,   204,   205,   206,
       0,   208,     0,   209,     0,   210,   211,     0,   212,   213,
     214,   215,   216,  2191,     0,   219,   220,   221,   222,     0,
     223,   224,   225,   226,   227,   228,     0,   229,     0,   231,
     232,   233,   234,   235,   236,   237,     0,   238,     0,   239,
       0,     0,   242,     0,   244,   245,   246,   247,   248,     0,
       0,   249,     0,   251,     0,     0,   253,   254,   255,     0,
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,     0,   281,   282,   283,   284,
     285,     0,   286,   287,     0,   289,     0,   290,   291,   292,
     293,   294,   295,     0,   296,   297,     0,     0,   298,   299,
     300,     0,     0,   301,   302,     0,   304,     0,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,     0,
     317,   318,   319,   320,   321,   322,   323,   324,   325,     0,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,     0,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,     0,   352,   353,
       0,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,     0,   370,   371,   372,
     373,   374,     0,   375,   376,   377,   378,   379,     0,   381,
     382,   383,   384,     0,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,     0,   399,
     400,     0,   401,     0,   403,   404,   405,   406,   407,     0,
     408,   409,     0,     0,   410,   411,   412,   413,   414,     0,
     415,   416,   417,   418,   419,   420,   421,     0,     0,   422,
     423,   424,   425,   426,     0,     0,   427,   428,   429,   430,
     431,   432,   433,     0,   434,     0,   436,   437,   438,   439,
       0,     0,   440,     0,     0,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,  1014,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    90,    91,    92,    93,    94,    95,    96,    97,     0,
      98,    99,   100,     0,     0,     0,     0,     0,     0,     0,
     101,   102,     0,   103,   104,   105,   106,   107,   108,   109,
       0,  1015,   112,  1016,  1017,     0,   115,   116,   117,   118,
     119,   120,     0,     0,   121,   122,  1018,  1019,   125,     0,
     126,   127,   128,   129,     0,     0,   131,     0,   132,   133,
     134,   135,   136,   137,   138,   139,   140,     0,   141,   142,
     143,   144,   145,   146,     0,   147,   148,   149,   150,     0,
       0,     0,   151,     0,     0,     0,   152,   153,   154,   155,
     156,   157,   158,  1020,  1021,   161,     0,   162,     0,   163,
     164,   165,   166,   167,   168,     0,   169,   170,   171,   172,
     173,     0,     0,   174,   175,   694,   177,   178,     0,   179,
     180,   181,     0,   182,   183,   184,     0,   185,   186,   187,
     188,     0,   190,   191,   192,   193,     0,     0,   195,     0,
     196,   197,  1022,   199,     0,   200,     0,   201,   202,     0,
     203,   204,   205,   206,   207,   208,     0,   209,     0,     0,
     211,     0,   212,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,     0,   223,   224,   225,   226,   227,   228,
       0,   229,   230,     0,   232,   233,   234,   235,  1023,  1024,
       0,  1025,     0,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,     0,     0,   249,   250,   251,   252,     0,
     253,   254,   255,     0,     0,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,  1026,   280,
    1027,   282,   283,   284,     0,     0,   286,   287,   288,   289,
       0,     0,   291,  1028,   293,   294,   295,     0,   296,   297,
       0,     0,   298,   299,   300,     0,     0,   301,     0,   303,
     304,   305,     0,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,     0,   317,   318,     0,   320,   321,     0,
     323,   324,   325,     0,   326,   327,   328,   329,   330,   331,
     332,   333,   334,  1029,   336,   337,   338,   339,     0,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,     0,   352,   353,   354,   355,   356,   357,  1030,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
       0,   370,   371,   372,   373,   374,     0,   375,  1031,   377,
     378,   379,   380,   381,   382,  1032,   384,     0,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,  1033,
     397,     0,     0,   399,   400,     0,   401,   402,   403,   404,
     405,   406,   407,     0,  1034,  1035,     0,     0,   410,   411,
       0,   413,     0,     0,   415,   416,   417,   418,   419,   420,
     421,     0,     0,   422,   423,   424,   425,   426,     0,     0,
     427,   428,   429,   430,   431,     0,  1036,     0,   434,   435,
     436,   437,   438,   439,     0,     0,   440,     0,     0,   441,
     442,   443,   444,   445,   446,   486,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   458,   459,   460,   461,
      90,    91,    92,    93,    94,    95,    96,    97,     0,    98,
      99,   100,     0,     0,     0,     0,     0,     0,     0,   101,
     102,     0,   103,   104,   105,     0,   107,   108,   109,   110,
     111,     0,   113,   114,     0,   115,   116,   117,   118,   119,
     120,     0,     0,   121,   122,   123,   124,   125,     0,   126,
     127,   128,   129,   130,     0,     0,     0,   132,   133,   134,
     135,   136,     0,   138,   139,   140,     0,   141,   142,   143,
     144,   145,   146,     0,     0,   148,   149,   150,     0,     0,
       0,     0,     0,     0,     0,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   161,     0,   162,     0,   163,   164,
     165,   166,   167,   168,     0,   169,   170,   171,   172,   173,
       0,     0,   174,   175,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,     0,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,     0,   195,     0,   196,
     197,   198,   199,     0,   200,     0,   201,     0,     0,     0,
     204,   205,   206,     0,   208,     0,   209,     0,   210,   211,
       0,   212,   213,   214,   215,   216,   217,     0,   219,   220,
     221,   222,     0,   223,   224,   225,   226,   227,   228,     0,
     229,     0,   231,   232,   233,   234,   235,   236,   237,     0,
     238,     0,   239,     0,     0,   242,     0,   244,   245,   246,
     247,   248,     0,     0,   249,     0,   251,     0,     0,   253,
     254,   255,     0,     0,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,     0,   281,
     282,   283,   284,   285,     0,   286,   287,     0,   289,     0,
     290,   291,   292,   293,   294,   295,     0,   296,   297,     0,
       0,   298,   299,   300,     0,     0,   301,   302,     0,   304,
       0,   306,   307,   308,   309,   310,   311,   312,     0,   314,
     315,   316,     0,   317,   318,   319,   320,   321,   322,   323,
     324,   325,     0,   326,   327,   328,   329,   330,   331,   332,
       0,   334,   335,   336,   337,   338,   339,     0,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
       0,   352,   353,     0,   355,   356,   357,   358,     0,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,     0,
     370,   371,   372,   373,   374,     0,   375,   376,   377,   378,
     379,     0,   381,   382,   383,   384,     0,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,     0,   399,   400,     0,   401,     0,   403,   404,   405,
     406,   407,     0,   408,   409,     0,     0,   410,   411,   412,
     413,   414,     0,   415,   416,   417,   418,   419,   420,   421,
       0,     0,   422,   423,   424,   425,   426,     0,     0,   427,
     428,   429,   430,   431,   432,   433,     0,   434,     0,   436,
     437,   438,   439,     0,     0,   440,     0,     0,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,  1014,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    90,    91,    92,    93,    94,    95,
      96,    97,     0,    98,    99,   100,     0,     0,     0,     0,
       0,     0,     0,   101,   102,     0,   103,   104,   105,   106,
     107,   108,   109,     0,  1015,   112,  1016,  1017,     0,   115,
     116,   117,   118,   119,   120,     0,     0,   121,   122,  1018,
    1019,   125,     0,   126,   127,   128,   129,     0,     0,   131,
       0,   132,   133,   134,   135,   136,   137,   138,   139,   140,
       0,   141,   142,   143,   144,   145,   146,     0,   147,   148,
     149,   150,     0,     0,     0,   151,     0,     0,     0,   152,
     153,   154,   155,   156,   157,   158,  1020,  1021,   161,     0,
     162,     0,   163,   164,   165,   166,   167,   168,     0,   169,
     170,   171,   172,   173,     0,     0,   174,   175,   694,   177,
     178,     0,   179,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,   188,     0,   190,   191,   192,   193,     0,
       0,   195,     0,   196,   197,  1022,   199,     0,   200,     0,
     201,   202,     0,   203,   204,   205,   206,   207,   208,     0,
     209,     0,     0,   211,     0,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,   222,     0,   223,   224,   225,
     226,   227,   228,     0,   229,   230,     0,   232,   233,   234,
     235,  1023,  1024,     0,  1025,     0,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,     0,     0,   249,   250,
     251,   252,     0,   253,   254,   255,     0,     0,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,  1026,   280,  1027,   282,   283,   284,     0,     0,   286,
     287,   288,   289,     0,     0,   291,  1028,   293,   294,   295,
       0,   296,   297,     0,     0,   298,   299,   300,     0,     0,
     301,     0,   303,   304,   305,     0,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,     0,   317,   318,     0,
     320,   321,     0,   323,   324,   325,     0,   326,   327,   328,
     329,   330,   331,   332,   333,   334,  1029,   336,   337,   338,
     339,     0,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,     0,   352,   353,   354,   355,   356,
     357,     0,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,     0,   370,   371,   372,   373,   374,     0,
     375,     0,   377,   378,   379,   380,   381,   382,  1032,   384,
       0,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,     0,   397,     0,     0,   399,   400,     0,   401,
     402,   403,   404,   405,   406,   407,     0,  1034,  1035,     0,
       0,   410,   411,     0,   413,     0,     0,   415,   416,   417,
     418,   419,   420,   421,     0,     0,   422,   423,   424,   425,
     426,     0,     0,   427,   428,   429,   430,   431,     0,  1036,
       0,   434,   435,   436,   437,   438,   439,     0,     0,   440,
       0,     0,   441,   442,   443,   444,   445,   446,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   458,
     459,   460,   461
};

static const yytype_int16 yycheck[] =
{
       6,   606,   599,    56,     0,   547,   514,   513,   614,   654,
     831,   584,   988,   654,    34,     0,   845,     6,    20,   818,
    1085,   691,   692,  1051,   559,  1536,   730,   958,   958,    16,
     641,    16,     0,     0,     0,   958,   958,   563,   823,   709,
    1611,   719,  1613,   843,   814,    29,  1605,   820,     6,   608,
     518,  1074,   857,  1109,  1110,  1495,  1948,  1876,  1924,  1074,
       0,  1074,  1808,   599,  1602,   601,  1835,   603,  1956,  1556,
      33,  1053,   519,  1074,   520,   848,    58,  1438,  1439,  1963,
      76,    58,  1443,  1533,    49,    11,     9,   662,     3,  2195,
     520,     5,     5,    57,     5,  1157,  1203,  1547,    72,    13,
      14,   520,    86,  1205,     5,     5,  1113,    11,     5,     0,
    2248,  1841,    13,    14,    40,    30,    31,  1478,  1479,   645,
    2201,   980,   166,   764,     5,   604,     5,  2198,     9,   166,
       5,     5,     5,  1671,     5,     0,     9,    66,    13,    14,
     167,    39,     5,   135,   115,   105,    72,  2285,     5,   118,
     209,   619,    74,  2271,     5,    74,    39,  2187,    26,     9,
     525,    57,    84,  1840,    57,    84,  1865,   283,  2337,   105,
     283,   263,    26,     4,  1712,  1713,   606,   118,     9,    33,
     275,    26,    92,   662,   663,   235,   581,   606,    33,   120,
     143,   832,   167,   118,   835,   836,   731,     4,  2366,  2422,
      91,   299,     9,   729,   581,   166,  1778,    26,   133,    77,
    1031,   658,   771,   235,    33,    11,   115,    85,   215,     3,
       4,     5,    58,   758,   654,     9,    91,  1234,  2366,  2149,
      66,   661,    36,   113,   163,   654,   246,   247,   156,   357,
      81,   299,   661,   161,    40,   115,   114,   156,   346,   323,
     165,   442,   167,   145,   207,   266,   391,   167,    66,    26,
    1895,   277,   203,   260,   113,   336,  2581,   318,  2583,   116,
     116,  2352,    23,   445,   392,  1751,    72,   785,  2458,    11,
     855,   856,    11,   106,   125,   447,  2404,   813,   861,   199,
     425,    63,    64,   364,   160,   346,   487,   469,   405,   191,
     350,  2193,  2048,  1779,   214,   113,   128,   469,   226,  1749,
    2294,    40,  2081,   223,   432,   183,  2085,   226,   122,    67,
     295,   483,   319,    11,   260,    76,   194,   197,   350,   113,
     283,  2315,   424,  1968,   183,  1894,   766,   767,  2653,   186,
     186,   448,  2072,    72,   354,   355,   256,   766,   767,  2487,
    1020,  1021,   831,  1891,  2577,  1893,   274,  1035,  1028,   965,
     371,   128,   170,   158,   438,   483,   403,   277,   267,  2549,
     367,   487,   422,   337,   487,   980,   855,   856,   857,  1386,
     478,   310,  2520,  1833,   309,  1835,   277,   267,   483,  2309,
     260,   966,   262,   229,  2071,   370,  1757,  1758,  1759,  1760,
     422,  1006,  1763,  1764,  1765,  1766,  1767,  1768,  1769,  1770,
    1771,  1772,   277,   262,     8,   780,   811,    11,  2117,  2588,
     478,    15,    16,    17,   208,  2455,  1225,   424,   487,   235,
    1495,   341,   392,   483,   811,   472,  2604,  2009,    32,   305,
    1978,   337,   403,   487,   337,   229,  2564,   338,   485,   441,
     272,  1812,  1813,   294,   262,   424,   483,   428,  2442,   267,
    2640,   483,  1569,  1322,   259,   418,  2604,   483,  1570,   975,
    2551,  2337,   978,   338,   982,   471,  1281,  1306,  2224,  2550,
     986,   403,  1538,   424,   403,  2523,   471,   966,    26,  2258,
     419,   389,  2598,   106,  2263,   426,  1558,  2266,  1057,  1564,
     520,     8,   310,   471,   471,   471,   389,   481,    15,    16,
      17,   485,   380,  1118,   520,   383,   426,   325,   483,  2249,
     374,   436,   435,   487,   381,   382,   528,   345,   530,   374,
    1056,   584,     4,   520,   519,   483,   447,     9,   472,  1065,
     546,   547,   989,  1069,   990,  1104,  1105,   549,    57,  1354,
     980,   485,  1031,   479,   445,   374,   397,   563,   469,   482,
     990,   980,  1088,  1089,  1546,  2457,  1101,  2126,  2139,   483,
     483,   990,   483,  2461,   561,   479,  1006,   573,  2462,  1154,
     445,   481,   483,   483,  2622,   485,   483,  1006,   573,   571,
     128,   487,   576,   484,   571,   486,   447,  1156,   604,   605,
     606,   564,   483,     5,   483,   573,   573,   573,   483,   483,
     483,   419,   483,  1254,   445,  1121,   422,   211,   469,   484,
     483,   486,     0,  1264,   474,   475,  1267,  2373,  2115,   426,
    2399,  2081,   483,   573,  1113,  2085,   426,  1242,   469,   645,
     158,   345,   346,   474,   475,  1528,  1529,   447,   654,    13,
      14,  2189,   654,  1250,  2606,   661,   662,   663,   235,   661,
      22,   113,   156,   803,  2556,   483,    28,   474,   475,   469,
     181,   182,   678,   658,  1681,  1154,   486,   483,   235,  2119,
     476,   477,   478,   479,  1749,   279,   483,  1223,  1118,   193,
     474,   475,   128,   483,  1339,    13,    14,  1673,  1339,  1118,
     706,   219,  1725,  1726,  1277,  1278,  1279,    22,  1319,   729,
    1725,  1724,  1323,  1720,  1250,  1326,  2668,  1322,  1388,   725,
     726,   727,  2588,   729,  1725,  1726,  1727,   345,   346,  1736,
     732,    74,   226,  1269,    11,   246,   247,  2296,  1274,  1795,
     742,    84,   235,   749,   476,   477,   478,   479,    11,  1756,
      29,   260,   754,    74,  1260,  1234,   128,   104,  1462,  1265,
     766,   767,   764,    84,   766,   767,   396,    92,   398,   663,
    1540,   133,   279,   350,    53,  2667,     8,    40,  1785,    11,
     274,   487,   154,    15,    16,    17,   474,   475,   476,   477,
     478,   479,   798,   350,   436,    72,   802,   803,  2248,    91,
    1629,   483,  1281,   215,  2623,  2624,   790,   813,  2258,    72,
    1240,   333,  1242,  2263,   796,   797,  2266,   799,   133,   796,
     797,  1240,   799,  1242,     8,   831,   262,    11,   337,  1297,
     193,    15,    16,    17,   156,  2285,   272,   241,   290,   161,
     167,   235,   167,   354,   355,   422,   350,  1652,   260,   855,
     856,   857,  2671,   262,   358,   364,  1560,   350,   267,  1924,
    2221,  2432,   408,   847,  1637,   422,  1392,    22,  2427,   396,
     764,   398,   199,    28,   199,  1354,   470,   471,   472,   353,
     474,   475,   476,   477,   478,   479,    47,   214,   392,   214,
     262,   447,  1322,   240,   438,   267,   223,  1682,   223,   472,
     272,   248,  1687,  1322,   226,   357,   483,  1386,   317,  1339,
     483,   481,    22,   469,   483,   485,  2366,  1924,    28,   281,
    1339,   483,  1352,   680,   681,   484,   483,   483,   487,   422,
    1456,   256,  1344,  1352,   438,   466,  1348,   831,  1350,   213,
     392,  1824,  1825,  1826,  1827,     4,  2307,  1087,   705,  2399,
       9,   483,   274,   485,   478,   367,   350,  1483,   190,   483,
     966,   485,  1535,   470,   471,   472,   281,   474,   475,   476,
     477,   478,   479,   335,   980,   445,   277,   447,   133,   211,
     432,   478,    30,    31,   990,   485,   483,     4,   485,     4,
     483,   466,     9,   445,     9,  1971,  1522,  1608,     8,  1610,
    1006,    11,   364,   990,   989,    15,    16,    17,  2519,   323,
     171,  2372,   424,   396,   341,   398,   341,   469,  1949,  1949,
     335,   336,    32,   133,   185,  1031,  1949,  1949,   422,   190,
     481,   483,   483,  2090,   485,   128,  2093,  2487,   410,  1455,
     165,  1457,  1458,    91,   358,   345,   346,   279,   420,   364,
    1056,   476,   484,  1193,  2119,   487,  1062,  1053,  1703,  1065,
     487,   154,  1668,  1069,   225,   357,   484,   429,  1053,   487,
    2520,   484,  1074,   483,   487,   485,  1905,  1083,   392,   147,
    1086,  1087,  1088,  1089,   483,  1053,  1053,  1053,   323,   483,
    1096,  1097,   484,  1892,  2605,   279,  1701,   396,  2657,   398,
     392,   578,  1108,   580,  1904,  1783,  1784,  1113,  1114,  1115,
    1116,  1117,  1118,  2086,  2625,  2088,  1122,  1123,  1903,   484,
    1905,  1127,   487,   358,   438,  1131,   281,   484,  1134,  1135,
    1136,  1137,  1138,  1139,  1140,  1141,  1142,  1031,   484,  1145,
     432,   487,   166,  1943,   484,  2173,  1152,   487,  1154,   484,
    2157,   209,   487,   445,  2604,   484,    53,   392,   487,  1863,
    1162,   484,   466,   548,   487,   550,   483,   172,  2679,  1175,
     213,   281,   484,  1652,   267,   487,   331,   469,   148,   272,
     335,  1611,  1612,  1613,  1180,  1172,   484,  1193,   148,   487,
    1696,   483,  1611,  1612,  1613,   331,  1202,  1203,   148,   147,
     484,   211,  1681,   438,   345,   346,   148,  2214,   369,   364,
     483,   474,   475,   476,   477,   478,   479,   484,   438,  1113,
     487,   331,   262,   484,   229,   335,   487,   484,  1234,   484,
     487,   483,   487,  1792,  1240,    80,  1242,   449,   470,   471,
     472,  1720,   474,   475,   476,   477,   478,   479,   484,   148,
     484,   487,   485,   487,   364,   484,   484,  1736,   487,   487,
     484,  1018,  1019,   487,  1790,   484,   250,   251,   487,   279,
    1027,  1701,  2337,  1703,   429,  1281,   148,  1756,  1284,  1285,
     148,  1287,  1701,  1924,  1703,   392,   470,   471,   472,   357,
     474,   475,   476,   477,   478,   479,   277,   484,  1438,  1439,
     487,   357,   484,  1443,   483,   487,  1785,  2335,  1314,   357,
    1845,    35,   484,  1872,  1310,   487,  1322,   410,  1923,   429,
    1925,   224,  1079,  1080,   392,    22,  2155,   420,  2127,  1808,
    2337,    28,   484,  1339,   483,   487,   392,  1339,  1478,  1479,
    1234,  1343,   484,  2164,   392,   487,  1352,   143,  1354,     5,
    1352,   484,     8,   484,   487,     5,   487,     5,    14,  1970,
     156,   172,   354,   355,   432,   161,  1939,   484,    24,   483,
     487,   483,    28,   161,   663,   484,   432,   445,   487,   483,
    1386,   483,   193,   306,   432,   483,  1392,  1393,   436,   445,
       5,   396,  1398,   398,   483,     5,  2403,   445,    22,  2406,
     484,   469,   484,   487,    28,   487,    22,   484,   483,   357,
     487,   207,    28,   469,   483,   483,   483,   422,   229,   484,
    1440,   469,   487,   484,   766,   767,   487,   483,   483,   483,
     226,   483,  1438,  1439,  1440,   483,   133,  1443,   484,   484,
     484,   487,   487,   487,   392,  1924,     5,   483,     5,  1455,
    1456,  1457,  1458,   484,   288,   484,   487,  1463,   487,   446,
     470,   471,   472,  1483,   474,   475,   476,   477,   478,   479,
     483,   282,  1478,  1479,   483,   209,   484,  1483,   274,   487,
     484,   487,   484,   487,   432,   487,   483,   283,   483,  1919,
      95,  1497,  1386,  1923,  1500,  1925,  1502,   445,   290,   484,
    1919,    35,   487,   364,  1923,  2146,  1925,   484,   161,   133,
     487,   274,   161,     6,   272,   224,  1522,   133,    11,   483,
     663,   469,    15,  2588,   403,   483,    22,  1533,    21,    22,
      23,  1551,    28,    26,    84,   483,    29,   403,  2097,    32,
      33,  1547,   831,  2343,  1533,    53,   487,  2158,  2159,    53,
    1546,   403,  2111,   253,   403,  1561,   484,   489,  1547,   403,
     445,  1546,   148,    91,  2106,   357,  2211,   262,   262,  2048,
    1576,   483,    35,    35,   485,  1533,   435,   487,  1546,  1546,
    1546,  2588,   483,    76,   281,   396,    34,   398,  1594,  1547,
      83,    84,    85,    86,    87,   483,   483,   483,   441,   483,
     392,     9,   401,   401,    11,  1611,  1612,  1613,   419,   487,
     401,   422,   483,   267,   483,  1617,   403,  1757,  1758,  1759,
    1760,   175,   418,  1763,  1764,  1765,  1766,  1767,  1768,  1769,
    1770,  1771,  1772,   157,   331,   166,   484,   133,   335,    35,
     432,   483,   426,   207,   367,   215,  1652,   487,   278,   487,
     483,   262,   215,   445,   215,   283,   484,   281,  1660,   438,
     315,   275,   483,   148,   148,   281,  2336,   364,   445,   262,
     277,   277,  1812,  1813,   262,  1681,    35,   469,  2157,    35,
      34,   481,   403,   403,   481,  2164,   403,   403,   831,   484,
     484,   483,   166,   466,   484,  1701,  2337,  1703,   484,   484,
     466,  1703,   484,  1699,   484,   166,  1708,   331,  1710,  2139,
     485,   335,  1714,  1715,  1720,   331,   484,   484,   487,   335,
    2139,   466,   484,   484,   484,   484,   483,  1733,   484,   403,
    1736,   483,   429,   483,   483,  2214,   287,  1743,   442,   442,
     364,  1747,  1031,   432,  1750,  2224,   472,   277,   364,   468,
    1756,  1757,  1758,  1759,  1760,   278,   278,  1763,  1764,  1765,
    1766,  1767,  1768,  1769,  1770,  1771,  1772,  1820,   278,   487,
    1776,  1777,   424,   262,   234,     0,   403,   483,   148,  1785,
    2450,  2211,   193,   281,  1790,   281,   148,  1681,   148,   482,
    1796,    16,  2211,  1799,   403,  1801,   484,   484,  1818,  2305,
     403,   403,  1808,  1809,   403,   429,  1812,  1813,  2381,    34,
    2639,  1817,  1818,   429,   484,  1835,   484,   275,   487,   445,
     277,    35,   148,  2428,  1113,   148,  1720,  1833,   267,  1835,
     481,   139,   166,    58,    11,   331,   161,  2443,   484,   335,
    1846,   484,  1736,   484,  1833,   484,  1835,    35,   166,  1855,
     483,    76,   484,   442,   392,   166,   487,   469,  2337,   175,
      35,   484,  1756,   484,   484,  1871,    54,   338,   364,   431,
      82,   148,   278,   170,   413,  1833,    35,  1835,  2386,    54,
      78,  2407,   483,   483,   426,   483,    11,   483,  1031,   483,
      15,  1785,   487,   484,  2373,   482,  2404,    22,   482,   166,
     394,   484,   484,   483,   214,   484,   483,    32,    33,   286,
     214,   483,   284,  1919,  1808,    53,   104,  1923,  1924,  1925,
    2526,   178,  1924,   472,  2403,    66,   445,  2406,   184,   104,
     195,    72,    83,   429,    85,   267,    87,   267,   403,   472,
     484,    35,  2448,    84,  1946,  1234,   483,  2588,   403,   262,
     105,   483,    35,   445,   483,   277,   482,   166,  2484,    84,
     296,   214,   483,   483,   444,    84,   129,   484,   325,   215,
    1113,  1967,   113,   113,   115,    35,   483,   483,   148,   472,
      72,   120,  2587,   148,    35,   478,    35,   484,   346,    53,
     426,   484,  2500,   346,  2000,   488,  2593,   483,  2428,   487,
     483,   483,  2432,   431,   192,    35,    72,   183,   426,  2428,
     413,    66,   280,  2432,    66,  2521,   483,   192,   487,    35,
     513,   514,   515,   364,   348,   472,   267,   183,   238,   170,
    1924,   483,   413,    35,   483,   280,  2042,  2043,   280,   483,
     483,  2047,  2048,   484,   484,   260,  2052,   277,     9,  2055,
    2056,   345,   240,   332,  2060,   548,   197,   550,   195,   277,
     248,   277,    32,   556,   484,   240,   483,     9,   118,   424,
      21,   564,   260,   248,   484,  2081,   143,  1906,   573,  2085,
    1248,  2221,  1919,   576,  2110,   260,  1606,  1869,  2520,   156,
    2584,  1234,  2081,  2281,   161,   588,  2085,  1386,  2590,  2101,
    2106,  2103,  2151,   291,  1952,  2660,  2435,  2638,  2626,  2588,
     818,   168,  2108,  2109,  2354,   172,   291,  1600,  1957,  1662,
    1612,   262,  2587,  2081,  2636,  1923,   267,  2085,  1597,  2585,
     623,   624,   625,  2139,   975,  1701,   193,  1666,  2211,   784,
     207,  1946,  2148,  1219,  1561,   806,   759,   805,   336,   663,
    2497,  2157,  2415,  2575,  2048,  1576,  1193,  2587,  2164,   226,
    1849,   336,  1835,  2509,  2102,  1218,   808,  2307,  2587,   310,
     358,  1547,   229,  2400,   667,  2087,  1833,  2072,  2487,   236,
    2486,  2504,  1355,   358,   325,     8,  2505,  2277,    11,  2573,
     378,  1074,    15,    16,    17,  2574,  2560,  1074,  1074,  1074,
    2196,  1394,  1149,   378,  1564,  2211,  1501,   274,  2214,  2211,
    1498,  1669,  1152,  1287,  2479,  2221,   283,  1352,  2224,   990,
    1172,   790,  1870,    -1,  1173,   282,  2232,  2233,    -1,    -1,
    2236,    -1,  2372,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2248,  1386,    -1,    -1,   471,     8,    -1,    -1,
      11,    -1,  2258,    -1,    15,    16,    17,  2263,    -1,  2248,
    2266,    -1,    -1,  2157,    -1,    -1,    -1,  2273,  2274,  2258,
    2164,    32,    -1,    -1,  2263,   768,    -1,  2266,   419,  2285,
      -1,  2287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2248,   784,   785,   350,   519,   520,  2285,   790,   791,   792,
    2258,  2307,    -1,    -1,    -1,  2263,    -1,    -1,  2266,   484,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   831,    -1,    -1,
    2214,   472,    -1,    -1,   817,   818,    -1,  2285,    -1,    -1,
    2224,  2337,    -1,   484,    -1,  2337,    -1,   830,    -1,   396,
      -1,   398,    -1,    -1,    -1,    -1,   571,    -1,   573,    -1,
    2346,   418,    -1,    -1,   847,    -1,    -1,    -1,   851,    -1,
    2366,    -1,   419,   488,    -1,   422,  2372,  2373,    -1,    -1,
      -1,  2367,     8,    -1,    -1,    11,    -1,  2366,    -1,    15,
      16,    17,    -1,    -1,    -1,    -1,    -1,  2407,   211,  2395,
     515,    -1,  1681,  2399,    -1,    -1,    32,  2403,    -1,    -1,
    2406,  2407,    -1,    -1,    -1,   556,    -1,    -1,  2366,    -1,
    2399,    -1,  2418,    -1,   481,    -1,    -1,   484,   485,    -1,
      -1,    -1,  2428,    -1,    -1,    -1,  2432,  2433,    -1,    -1,
      -1,  1720,    -1,   658,    -1,    -1,    -1,   588,    -1,   564,
      -1,  2399,    -1,  2337,    -1,    -1,    -1,  1736,    -1,    -1,
     211,    -1,    -1,    -1,  2456,    -1,   279,    -1,    -1,    -1,
      -1,   954,    -1,    -1,  2460,    -1,   959,  1756,    -1,    -1,
     695,    -1,   623,   624,   625,    -1,   969,    -1,  2484,  2373,
      -1,  2487,   975,    -1,    -1,   978,    -1,    -1,    -1,   982,
     983,    -1,   985,   986,    -1,   988,  1785,    -1,  2487,    -1,
      -1,    -1,    -1,  2509,   729,    -1,    -1,    -1,    -1,  2403,
      -1,    -1,  2406,    -1,  2520,    -1,    -1,  1031,   279,  1808,
    2516,    -1,    -1,    -1,    -1,    -1,    -1,     0,    -1,  2487,
      -1,  2520,    -1,    -1,  2540,    -1,    -1,    -1,  1681,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2559,  2560,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2520,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   796,   797,    -1,   799,   211,    -1,  1720,    -1,    -1,
      -1,  2587,  2588,    -1,    -1,    -1,  2588,    -1,    -1,    -1,
      -1,    -1,  1085,  1736,    -1,    -1,    -1,    -1,  2604,  1113,
    2606,  2597,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1756,    -1,  2604,    -1,   768,    91,    -1,
      -1,    -1,    -1,    -1,     8,    -1,    -1,    11,  1121,    -1,
      -1,    15,    16,    17,    -1,  1924,    -1,    -1,    -1,    -1,
     791,    -1,  1785,   279,    -1,    -1,  2604,   470,   471,   472,
      -1,   474,   475,   476,   477,   478,   479,    -1,  1151,   784,
      -1,    -1,  2668,    -1,    -1,  1808,   817,    -1,    -1,    -1,
     143,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1171,   830,
    1173,    -1,    49,   156,    -1,    -1,    -1,    -1,   161,  1182,
      -1,  1184,    -1,   166,  2588,    -1,    -1,    -1,    -1,    -1,
     851,    -1,   175,    -1,    -1,   178,    -1,    -1,    -1,   470,
     471,   472,    -1,   474,   475,   476,   477,   478,   479,    -1,
    1234,    -1,    -1,  1216,    -1,    -1,    93,    -1,    -1,    -1,
      -1,    -1,  1225,  1226,   207,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1236,  1237,  1238,  1239,    -1,  1241,    -1,
      -1,    -1,   119,   226,  1247,    -1,  1249,    -1,    -1,  2048,
      -1,    -1,    -1,    -1,   989,    -1,    -1,  1260,  1261,    -1,
     137,    -1,  1265,  1266,   141,    -1,    -1,  1270,  1271,  1272,
    1273,  1924,  1275,  1276,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   162,    -1,    -1,   165,    -1,
      -1,   274,  1295,  1296,   277,    -1,    -1,    -1,   959,    -1,
     283,    -1,   179,    -1,   654,  1308,    -1,    -1,    -1,    -1,
      -1,   661,    -1,    -1,    -1,    -1,    -1,   211,  1053,    -1,
      -1,    -1,    -1,    -1,   470,   471,   472,   988,   474,   475,
     476,   477,   478,   479,    -1,    -1,    -1,     8,    -1,    -1,
      11,    -1,    -1,    -1,    15,    16,    17,    -1,   983,    -1,
     985,    -1,    -1,  1356,    -1,   338,    -1,    -1,  2157,    -1,
      -1,    -1,  1386,    -1,    -1,  2164,    -1,    -1,    -1,    40,
      -1,    -1,    -1,    -1,    -1,    -1,    47,    -1,    -1,    -1,
       8,    -1,    -1,    11,    -1,   279,    -1,    -1,    -1,  1124,
     267,    -1,   742,    -1,    -1,  2048,    -1,    -1,   275,    -1,
      -1,    72,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   392,
      -1,    -1,    40,    -1,   764,  2214,   766,   767,    -1,    47,
      -1,    -1,   663,    -1,    -1,  2224,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   418,    -1,    -1,    -1,    -1,
     317,    -1,    -1,   426,    72,  1180,    -1,    -1,    -1,   663,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   442,
      -1,   444,   445,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   832,    -1,    -1,   835,   836,    -1,    -1,    -1,
    1151,    -1,  1495,    -1,    -1,    -1,    -1,    -1,   481,    -1,
     171,   484,   485,   486,  2157,    -1,    -1,    -1,    -1,    -1,
    1171,  2164,  1173,   141,   185,    -1,    -1,    -1,    -1,   190,
      -1,    -1,    -1,  1526,    -1,    -1,    -1,    -1,    -1,    -1,
    1533,    -1,    -1,    -1,   663,    -1,    -1,    -1,  2337,    -1,
     211,   212,    -1,   171,  1547,    -1,    -1,    -1,  1551,    -1,
      -1,  1554,    -1,  1556,   225,  1216,    -1,   185,    -1,    -1,
      -1,  2214,   190,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2224,    -1,    -1,  2373,  1310,   470,   471,   472,    -1,
     474,   475,   476,   477,   478,   479,    -1,    -1,    -1,    -1,
     831,  1226,    -1,    -1,   265,    -1,    -1,   225,    -1,  1602,
      -1,  1236,    -1,  1238,  2403,    -1,  1241,  2406,   279,    -1,
      -1,    -1,  1247,    -1,  1249,    -1,    -1,   831,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1261,    -1,    -1,    -1,
      -1,  1266,    -1,    -1,  1295,  1270,  1271,  1272,  1273,    -1,
    1275,  1276,    -1,    -1,    -1,   995,   996,    -1,    -1,    -1,
      -1,   279,    -1,    -1,    -1,    -1,    -1,  1681,    -1,  1662,
      -1,    -1,    -1,    -1,  1667,    -1,    -1,    -1,  1671,  1672,
    1673,  1674,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1685,    -1,  2337,    -1,    -1,     3,    -1,  1692,
      -1,    -1,     8,  1696,    -1,    11,  1720,    -1,   369,    15,
      16,    17,   831,    -1,    -1,  1440,    -1,    -1,    -1,  1712,
    1713,    -1,  1736,    -1,    -1,    -1,    32,  1067,  1068,    35,
    2373,    -1,    -1,    -1,    40,  1075,    -1,  1077,  1078,    -1,
      -1,    47,  1756,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   369,  1092,    -1,  1094,    -1,  1749,    -1,  1483,    -1,
    2403,    -1,    -1,  2406,    -1,    -1,    72,  1107,    -1,    -1,
      -1,  1785,    -1,    -1,    -1,    -1,  1501,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1517,    -1,  1808,    -1,    -1,    -1,    -1,  2588,
    1031,    -1,    -1,    -1,    -1,    -1,   467,    -1,  1533,   470,
     471,   472,    -1,   474,   475,   476,   477,   478,   479,    -1,
      -1,  1546,  1547,    -1,    -1,    -1,  1551,  1031,    -1,  1822,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1830,  1831,  1832,
    1833,    -1,  1835,  1836,    -1,    -1,    -1,  1840,  1841,   467,
      -1,    -1,    -1,    -1,    -1,    -1,   474,   475,   476,   477,
     478,   479,  1202,  1203,    -1,   171,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1526,  1869,    -1,    -1,   185,
      -1,    -1,  1113,    -1,   190,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1885,    -1,  1887,    -1,    -1,    -1,  1891,  1892,
    1893,    -1,  1895,    -1,    -1,   211,   212,    -1,    -1,  1113,
    1924,    -1,  1031,    -1,  1254,   107,   108,    -1,  1911,   225,
    1913,    -1,    -1,    -1,  1264,    -1,    -1,  1267,    -1,    -1,
      -1,    -1,    -1,  1926,  1927,  1928,  1929,  1930,  1931,  1932,
    1933,  1934,  1935,    -1,    -1,  2588,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   262,  1950,    -1,   265,
      -1,    -1,    -1,    -1,  1957,    -1,    -1,    -1,    -1,     8,
      -1,    -1,    11,   279,  1699,  1968,   282,    -1,  1971,    -1,
      -1,    -1,    -1,    -1,    -1,  1978,    -1,    -1,    -1,   181,
     182,    -1,    -1,  1986,  1113,    -1,    -1,    -1,    -1,  1339,
      -1,    40,    -1,  1234,    -1,    22,    -1,    -1,    47,    -1,
      -1,    28,  1352,    -1,    -1,    -1,  1667,    -1,    35,    -1,
      -1,  1672,  1673,  1674,    -1,    -1,    -1,    -1,    -1,    -1,
    1234,    -1,    -1,    72,  2048,  1375,    -1,    54,    -1,    -1,
      -1,  1692,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     242,   243,   244,   245,   246,   247,    -1,    -1,   250,   251,
    1685,    -1,    -1,   369,    -1,    -1,    -1,    -1,  2061,    -1,
      -1,  2064,  2065,  2066,  2067,    -1,    -1,    -1,  2071,  2072,
      -1,  2074,    -1,    -1,  2077,    -1,    -1,   104,  2081,    -1,
      -1,    -1,  2085,  1818,    -1,    -1,    -1,    -1,  2091,    -1,
      -1,    -1,   141,    -1,    -1,    -1,    -1,    -1,  1833,    -1,
    1835,    -1,    -1,    -1,    -1,  1234,   133,  2110,    -1,    -1,
      -1,    -1,  2115,    -1,    -1,    -1,  2119,    -1,    -1,    -1,
      -1,    -1,   171,    -1,  2127,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2157,    -1,    -1,   185,    -1,    -1,    -1,
    2164,   190,    -1,    -1,    -1,  1386,    -1,    -1,    -1,  2152,
      -1,   467,   354,   355,   470,   471,   472,    -1,   474,   475,
     476,   477,   478,   479,    -1,   192,    -1,    -1,    -1,  1830,
    1831,  1832,  1386,    -1,    -1,    -1,   225,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2189,  1537,    -1,    -1,
    2214,    -1,  2195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2224,    -1,    -1,  2206,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   240,    -1,    -1,    -1,    -1,  1568,  1569,
      -1,   248,    -1,    -1,  1885,    -1,    -1,    -1,    -1,    -1,
     279,    -1,  1967,   260,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2248,  2249,    -1,    -1,    -1,
    2253,    -1,  1887,  2256,   281,  2258,    -1,  1386,    -1,    -1,
    2263,   463,   464,  2266,   291,  2268,    -1,    -1,  2271,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1911,    -1,    -1,    -1,
      -1,   483,  2285,     8,    -1,    -1,    11,    -1,    -1,  1950,
      -1,  1926,  1927,  1928,  1929,  1930,  1931,  1932,  1933,  1934,
    1935,    -1,  2305,  2306,   331,    -1,   546,   547,   335,   336,
    1971,  2314,    -1,  2337,    -1,    40,    -1,    -1,    -1,    -1,
     369,    -1,    47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   358,    -1,    -1,    -1,  2338,  2339,   364,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2348,  2081,    72,  2351,  2373,
    2085,   378,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2363,    -1,    -1,  2366,   604,   605,    -1,    -1,    -1,    -1,
      -1,  1721,  1722,  2108,  2109,    -1,    -1,    -1,    -1,  2403,
      -1,    -1,  2406,  2386,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2399,    -1,    -1,    -1,
      -1,  2404,   429,  2064,  2065,  2066,  2067,    -1,    -1,    -1,
    2413,    -1,    -1,    -1,  2417,    -1,   141,    -1,   467,    -1,
      -1,    -1,   662,  2426,    -1,   474,   475,   476,   477,   478,
     479,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   678,    -1,
    1681,    -1,    -1,    -1,    -1,  2448,   171,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2459,    -1,    -1,    -1,
     185,  2196,    -1,    -1,    -1,   190,   706,  1681,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1720,
      -1,    -1,    -1,    -1,  2487,   725,   726,   727,    -1,   729,
      -1,    -1,    -1,  2496,    -1,  1736,    -1,  2500,    -1,    -1,
     225,  2504,    -1,    -1,    -1,    -1,  1720,    -1,    -1,   749,
      -1,    -1,    -1,    -1,    -1,  1756,    -1,  2520,  2521,  2522,
    2523,    -1,  1736,  2258,    -1,    -1,    -1,    -1,  2263,    -1,
      -1,  2266,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1756,    -1,  1785,    -1,     8,    -1,    -1,    11,
      -1,    -1,  1681,    -1,   279,    -1,    -1,    -1,   798,    -1,
      -1,  2564,   802,   803,  2588,    -1,    -1,  1808,    -1,    -1,
    2573,  1785,  2575,    -1,  1924,    -1,    -1,    -1,    40,    -1,
      -1,  2584,    -1,    -1,    -1,    47,    -1,    -1,     3,    -1,
       5,  1720,    -1,    -1,  1808,  2598,     8,    -1,    -1,    11,
      -1,  2604,    -1,    15,    16,    17,    -1,  1736,    -1,    -1,
      72,  2346,    -1,    -1,    -1,   855,   856,   857,    -1,  2622,
      32,    -1,    -1,    -1,    -1,    -1,    -1,  1756,    40,    -1,
      -1,    -1,  2367,    -1,  1984,    47,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   369,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2314,    -1,    -1,  1785,    -1,    -1,    -1,
      72,    -1,    -1,    -1,  2399,    -1,    -1,    -1,    35,    -1,
      -1,  2306,  2407,    -1,    -1,    -1,    -1,    -1,    -1,  1808,
      -1,    -1,    -1,  1924,    -1,    -1,    -1,    54,    -1,    -1,
      -1,    -1,   107,   108,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2363,  2338,  2339,    -1,    -1,    -1,    -1,   171,
    1924,    -1,    -1,    -1,    -1,    -1,  2351,    -1,    -1,    -1,
      -1,    -1,    -1,   185,    -1,  2460,   966,    -1,   190,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,    -1,    -1,
      -1,    -1,   467,    -1,    -1,    -1,    -1,    -1,    -1,   474,
     475,   476,   477,   478,   479,    -1,    -1,    -1,    -1,   171,
      -1,    -1,    -1,   225,    -1,  2426,   181,   182,    -1,    -1,
      -1,    -1,    -1,   185,    -1,    -1,    -1,    -1,   190,    -1,
      -1,  2516,  2417,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1924,  2146,    -1,  2459,   211,
     212,  2151,    -1,   170,    -1,    -1,    -1,  2048,    -1,    -1,
      -1,    -1,    -1,   225,    -1,  2165,  2166,   279,    -1,    -1,
      -1,    -1,  1062,    -1,    -1,   192,    -1,   242,   243,   244,
     245,   246,   247,    -1,  2048,   250,   251,    -1,    -1,    -1,
      -1,    -1,    -1,  1083,    -1,    -1,  1086,    -1,    -1,  1089,
     262,    -1,    -1,   265,    -1,    -1,  1096,  1097,    -1,    -1,
      -1,    -1,  2597,    -1,    -1,    -1,    -1,   279,  1108,    -1,
     282,    -1,    -1,   240,  1114,  1115,  1116,  1117,    -1,    -1,
      -1,   248,  1122,  1123,    -1,    -1,    -1,  1127,    -1,    -1,
      -1,  1131,    -1,   260,  1134,  1135,  1136,  1137,  1138,  1139,
    1140,  1141,  1142,    -1,    -1,  1145,    -1,   369,    -1,    -1,
      -1,    -1,  1152,    -1,  1154,    -1,  2157,    -1,    -1,  2048,
      -1,    -1,    -1,  2164,   291,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   743,  1175,    -1,    -1,    -1,   354,
     355,    -1,    -1,  2157,    -1,    -1,    -1,    -1,    -1,    -1,
    2164,    -1,    -1,    -1,    -1,    -1,    -1,   369,    -1,    -1,
      -1,    -1,  1202,  1203,    -1,    -1,    -1,    -1,    -1,   336,
      -1,    -1,   781,  2214,    -1,    -1,    -1,    -1,  2328,  2329,
      -1,    -1,    -1,  2224,    -1,    -1,    -1,  2337,    -1,    -1,
      -1,   358,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2214,    -1,    -1,    -1,    -1,   467,    -1,    -1,    -1,    -1,
    2224,   378,   474,   475,   476,   477,   478,   479,    -1,    -1,
      -1,    -1,     0,    -1,    -1,    -1,    -1,    -1,  2157,    -1,
      -1,    -1,    -1,    -1,    -1,  2164,    -1,    -1,    -1,    -1,
      18,  1281,    -1,    -1,  1284,  1285,    -1,  1287,   463,   464,
      28,   860,    30,    31,    -1,   467,   865,    -1,   470,   471,
     472,    -1,   474,   475,   476,   477,   478,   479,    46,    -1,
      -1,    -1,    -1,    -1,  1314,   487,    -1,    55,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2214,    -1,    -1,    -1,    67,
      -1,    -1,    -1,    -1,    -1,  2224,  2337,    -1,    -1,    -1,
      78,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    89,    -1,    91,  1354,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    22,  2337,    -1,    -1,    -1,    -1,    28,    -1,
      -1,   109,  2373,    -1,    -1,    35,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   123,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1393,    54,   133,     0,    -1,  1398,  2373,
      -1,   139,  2403,    -1,    -1,  2406,    -1,    -1,    -1,   147,
      -1,   149,   150,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   162,    -1,    -1,    -1,    -1,  2403,
      -1,    -1,  2406,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1440,    -1,    -1,    -1,   104,    -1,    -1,    -1,  2337,    -1,
      -1,   189,    -1,    -1,    -1,  1455,    -1,  1457,  1458,    -1,
      -1,    -1,    -1,  1463,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   133,    -1,    -1,    -1,    -1,  2588,    -1,
      -1,    -1,    -1,    -1,  2373,    -1,    -1,    91,    -1,    -1,
     228,  1060,    -1,    -1,    -1,    -1,    -1,  1497,    -1,    -1,
    1500,    -1,  1502,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1082,  2403,    -1,    -1,  2406,  1087,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1098,
    1099,  1100,   192,  1102,    -1,    -1,    -1,    -1,    -1,   143,
      -1,    -1,    -1,    -1,    -1,     8,    -1,    -1,    11,    -1,
      -1,    -1,   156,    -1,     0,    -1,    -1,   161,    -1,    -1,
      -1,  1561,   166,    -1,    -1,    -1,   304,    -1,    -1,   307,
      -1,   175,    -1,    -1,   178,    -1,  1576,    40,    -1,    -1,
     240,  1150,    -1,    -1,    47,    -1,    -1,  2588,   248,    -1,
      -1,    -1,    -1,    -1,  1594,    -1,    -1,   335,    -1,    -1,
     260,    -1,    -1,   207,     8,   343,    -1,    11,    -1,    72,
      -1,    15,    16,    17,  2588,    -1,    -1,    -1,    -1,   357,
    1189,   281,   226,    -1,    -1,    -1,   364,    -1,    32,    -1,
     368,   291,  1201,    -1,    -1,    -1,    40,  1206,    -1,    -1,
     378,    -1,    -1,    47,    -1,    91,    -1,    -1,    -1,    -1,
      -1,    -1,  1652,    -1,   392,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    72,    -1,
     274,   331,    -1,   277,    -1,   335,   336,    -1,   141,   283,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   427,
      -1,    -1,    -1,    -1,   432,    -1,    -1,   143,   358,  2588,
      -1,    -1,    -1,    -1,   364,    -1,    -1,   445,   171,    -1,
     156,    -1,    -1,    -1,    -1,   161,    -1,    -1,   378,    -1,
     166,    -1,   185,    -1,    -1,    -1,    -1,   190,    -1,   175,
      -1,   469,   178,  1733,   338,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1743,    -1,   483,    -1,  1747,   486,    -1,
    1750,     8,    -1,    -1,    11,    -1,    -1,    -1,    15,    16,
      17,   207,   225,    -1,    -1,    -1,    -1,   171,    -1,   429,
      -1,    -1,    -1,    -1,    -1,    32,  1776,  1777,    -1,    -1,
     226,   185,    -1,    40,    -1,    -1,   190,    -1,   392,    -1,
      47,    -1,    -1,    -1,    -1,    -1,  1796,    -1,    -1,  1799,
      -1,  1801,    -1,    -1,    -1,    -1,    -1,   211,   212,  1809,
      -1,    -1,    -1,    -1,   418,    72,   279,  1817,  1818,    -1,
      -1,   225,   426,    -1,    -1,    -1,    -1,  1396,   274,    -1,
      -1,   277,    -1,    -1,    -1,    -1,    -1,   283,   442,    -1,
     444,   445,    -1,    -1,    -1,    -1,  1846,    -1,    -1,    -1,
    1419,   107,   108,    -1,    -1,  1855,    -1,    -1,   262,    -1,
      -1,   265,    -1,    -1,    -1,    -1,    -1,  1436,    -1,  1438,
    1439,  1871,  1441,    -1,  1443,   279,    -1,   481,  1447,    -1,
     484,   485,   486,    -1,    -1,  1454,    -1,    -1,    -1,    -1,
    1459,    -1,   338,    -1,    -1,    -1,  1465,    -1,    -1,    -1,
    1469,  1470,  1471,  1472,    -1,    -1,   369,    -1,    -1,  1478,
    1479,    -1,  1481,  1482,   171,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1493,   181,   182,  1496,   185,    -1,
      -1,    -1,    -1,   190,    -1,  1504,  1505,  1506,  1507,  1508,
    1509,  1510,  1511,  1512,  1513,    -1,   392,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   211,   212,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   369,    -1,    -1,   225,    -1,
      -1,    -1,   418,    -1,    -1,  1544,    -1,    -1,    -1,    -1,
     426,    -1,    -1,    -1,    -1,    -1,   242,   243,   244,   245,
     246,   247,    -1,    -1,   250,   251,   442,    -1,   444,   445,
    2000,    -1,    -1,    -1,   467,   262,    -1,    -1,   265,    -1,
      -1,   474,   475,   476,   477,   478,   479,    -1,    -1,    -1,
      -1,    -1,   279,    -1,    -1,   282,    35,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   481,    -1,    -1,   484,   485,
     486,    -1,  2042,  2043,    -1,    54,    -1,  2047,    -1,    -1,
      -1,    -1,  2052,    -1,    -1,  2055,  2056,    -1,    -1,    -1,
    2060,    -1,    -1,   467,    -1,    -1,   470,   471,   472,    -1,
     474,   475,   476,   477,   478,   479,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1655,  1656,  1657,    -1,
      -1,    -1,    -1,    -1,    -1,   104,   105,    -1,   354,   355,
      -1,    -1,    -1,    -1,   113,    -1,  2106,     8,    -1,    -1,
      11,    -1,   369,    -1,    15,    16,    17,    -1,    -1,    -1,
      -1,  1690,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,
      -1,    -1,    -1,    -1,    -1,    -1,    47,    -1,  2148,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   170,    -1,  1732,    -1,    -1,    -1,    -1,    -1,  1738,
      -1,    72,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   192,  1753,  1754,  1755,    -1,  1757,  1758,
    1759,  1760,    -1,    -1,  1763,  1764,  1765,  1766,  1767,  1768,
    1769,  1770,  1771,  1772,  1773,    -1,    -1,   463,   464,    -1,
     467,    -1,    -1,   470,   471,   472,    -1,   474,   475,   476,
     477,   478,   479,    -1,  1793,    -1,    -1,   484,  1797,  1798,
      -1,   240,  2232,  2233,    -1,    -1,  2236,    -1,    -1,   248,
      -1,    -1,  1811,  1812,  1813,  1814,    -1,  1816,    -1,     8,
      -1,   260,    11,   262,    -1,    -1,    15,    16,    17,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     171,    -1,    -1,  2273,  2274,    -1,    -1,    -1,    -1,    -1,
      -1,    40,   291,    -1,   185,    -1,    -1,  2287,    47,   190,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     211,   212,    -1,    72,    -1,    -1,    -1,    -1,    -1,  1888,
      -1,    -1,    -1,    -1,   225,    -1,    -1,   336,     8,    -1,
      -1,    11,    -1,    -1,    -1,    15,    16,    17,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   358,
      -1,    -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      40,   262,    -1,    -1,   265,    -1,    -1,    47,    -1,   378,
       8,   380,    -1,    11,   383,    -1,    -1,    -1,   279,    -1,
      -1,   282,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    72,    -1,    -1,  2395,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    -1,    -1,    -1,    -1,  2407,    -1,    47,
      -1,    -1,   171,    -1,    -1,    -1,    -1,    -1,  2418,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   185,    -1,    -1,    -1,
      -1,   190,  2001,  2433,    72,    -1,  2005,  2006,    -1,  2008,
      -1,    -1,  2011,  2012,  2013,  2014,    -1,    -1,    -1,  2018,
    2019,  2020,  2021,  2022,  2023,  2024,  2025,  2026,  2027,  2028,
    2029,    -1,    -1,    -1,    -1,    -1,   225,    -1,   369,    -1,
      -1,    -1,  2041,    -1,   483,  2044,    -1,  2046,    -1,    -1,
      -1,  2050,    -1,    -1,  2053,  2054,    -1,    -1,  2057,  2058,
      20,   171,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   141,    -1,   185,    -1,    -1,    -1,  2509,
     190,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     279,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2098,
      -1,   211,   212,   171,    -1,    -1,  2105,    -1,    -1,    -1,
    2540,    -1,    -1,    73,    -1,   225,    -1,   185,    -1,  2118,
      -1,    -1,   190,    -1,    -1,    -1,    -1,    -1,    88,  2559,
    2560,    -1,    -1,    -1,    -1,    -1,   467,    -1,    -1,   470,
     471,   472,    -1,   474,   475,   476,   477,   478,   479,    -1,
      -1,    -1,   262,   484,    -1,   265,    -1,   225,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   279,
      -1,    -1,   282,    -1,    -1,    -1,  2606,    -1,    -1,    -1,
     369,    -1,   142,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   151,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   163,    -1,    -1,    -1,    -1,   168,    -1,
      -1,   279,    -1,    -1,    -1,    -1,    -1,    -1,  2217,    -1,
      -1,    -1,  2221,    -1,    -1,    -1,    -1,  2226,  2227,  2228,
      -1,    -1,  2231,   193,    -1,  2234,  2235,    -1,  2668,    -1,
    2239,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   369,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   236,    -1,   467,   239,
      -1,   470,   471,   472,    -1,   474,   475,   476,   477,   478,
     479,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   369,    -1,    -1,    -1,    -1,    -1,    -1,  2307,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2325,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   302,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   316,   467,    -1,    -1,
     470,   471,   472,    -1,   474,   475,   476,   477,   478,   479,
      -1,    -1,  2371,  2372,   484,    -1,    -1,  2376,  2377,  2378,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   347,    -1,    -1,
     350,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   358,   467,
      -1,   361,    -1,    -1,    -1,    -1,   474,   475,   476,   477,
     478,   479,  2411,  2412,    -1,    -1,    -1,    -1,    -1,    -1,
     380,    -1,    -1,    -1,    -1,  2424,    -1,    -1,    -1,    -1,
      -1,    -1,   392,    -1,    -1,    -1,    -1,  2436,    -1,   399,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   408,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
       3,     4,     5,     6,     7,     8,     9,    10,   438,    -1,
      -1,    -1,  2481,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
    2499,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,  2518,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,  2532,    67,    68,    69,    70,    71,    -1,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    88,    89,    90,    -1,    92,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,    -1,   116,   117,   118,   119,   120,   121,    -1,
     123,   124,   125,   126,   127,   128,  2595,   130,   131,   132,
     133,   134,    -1,   136,   137,   138,    -1,   140,   141,   142,
    2609,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,    -1,   157,   158,   159,   160,    -1,   162,
      -1,   164,   165,    -1,   167,   168,   169,   170,   171,   172,
      -1,   174,    -1,   176,   177,    -1,   179,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,    -1,   191,   192,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,   204,   205,   206,    -1,   208,    -1,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   219,    -1,    -1,   222,
     223,   224,   225,    -1,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,    -1,   275,   276,    -1,    -1,   279,   280,   281,    -1,
      -1,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,    -1,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,    -1,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,    -1,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,    -1,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,    -1,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,    -1,   390,   391,    -1,
     393,   394,   395,   396,   397,   398,   399,    -1,   401,   402,
      -1,    -1,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,    -1,    -1,   420,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,    -1,    -1,
     443,    -1,    -1,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,    -1,    -1,    -1,    -1,    -1,
      -1,   474,   475,   476,    -1,    -1,    -1,    -1,    -1,    -1,
     483,   484,    -1,    -1,    -1,   488,     3,     4,     5,     6,
       7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    -1,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    -1,
      67,    68,    69,    70,    71,    -1,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    -1,    85,    86,
      87,    88,    89,    90,    -1,    92,    93,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,    -1,   116,
     117,   118,   119,   120,   121,    -1,   123,   124,   125,   126,
     127,    -1,    -1,   130,   131,   132,   133,   134,    -1,   136,
     137,   138,    -1,   140,   141,   142,    -1,   144,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,    -1,
     157,   158,   159,   160,    -1,   162,    -1,   164,   165,    -1,
     167,   168,   169,   170,   171,   172,    -1,   174,    -1,   176,
     177,    -1,   179,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   189,    -1,   191,   192,   193,   194,   195,   196,
      -1,   198,   199,   200,   201,   202,   203,   204,   205,   206,
      -1,   208,    -1,   210,   211,   212,   213,   214,   215,   216,
     217,   218,   219,    -1,    -1,   222,   223,   224,   225,    -1,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,    -1,   275,   276,
      -1,    -1,   279,   280,   281,    -1,    -1,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,    -1,   301,   302,   303,   304,   305,   306,
     307,   308,   309,    -1,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,    -1,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,    -1,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,    -1,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,    -1,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,    -1,    -1,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,    -1,    -1,   420,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,   430,   431,   432,   433,    -1,   435,   436,
     437,   438,   439,   440,    -1,    -1,   443,    -1,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,    -1,   469,    -1,    -1,    -1,    -1,   474,   475,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   483,   484,    -1,    -1,
      -1,   488,     3,     4,     5,     6,     7,     8,     9,    10,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    92,    93,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,   117,   118,   119,   120,
     121,    -1,   123,   124,   125,   126,   127,    -1,    -1,   130,
     131,   132,   133,   134,    -1,   136,   137,   138,    -1,   140,
     141,   142,    -1,   144,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,   158,   159,   160,
      -1,   162,    -1,   164,   165,    -1,   167,   168,   169,   170,
     171,   172,    -1,   174,    -1,   176,   177,    -1,   179,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   189,    -1,
     191,   192,   193,   194,   195,   196,    -1,   198,   199,   200,
     201,   202,   203,   204,   205,   206,    -1,   208,    -1,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   219,    -1,
      -1,   222,   223,   224,   225,    -1,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,    -1,   275,   276,    -1,    -1,   279,   280,
     281,    -1,    -1,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,    -1,
     301,   302,   303,   304,   305,   306,   307,   308,   309,    -1,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,    -1,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,    -1,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,    -1,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,    -1,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,    -1,    -1,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,    -1,    -1,   420,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,   430,
     431,   432,   433,    -1,   435,   436,   437,   438,   439,   440,
      -1,    -1,   443,    -1,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,    -1,   469,    -1,
      -1,    -1,    -1,   474,   475,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   483,    -1,    -1,    -1,    -1,   488,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    -1,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
      -1,   116,   117,   118,   119,   120,   121,    -1,   123,   124,
     125,   126,   127,    -1,    -1,   130,   131,   132,   133,   134,
      -1,   136,   137,   138,    -1,   140,   141,   142,    -1,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,    -1,   157,   158,   159,   160,    -1,   162,    -1,   164,
     165,   166,   167,   168,   169,   170,   171,   172,    -1,   174,
      -1,   176,   177,    -1,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,    -1,   191,   192,   193,   194,
     195,   196,    -1,   198,   199,   200,   201,   202,   203,   204,
     205,   206,    -1,   208,    -1,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,    -1,   221,   222,   223,   224,
     225,    -1,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,    -1,
     275,   276,    -1,    -1,   279,   280,   281,    -1,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,    -1,   301,   302,   303,   304,
     305,   306,   307,   308,   309,    -1,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,    -1,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,    -1,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,    -1,   390,   391,    -1,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,    -1,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,    -1,    -1,   420,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,   430,   431,   432,   433,    -1,
     435,   436,   437,   438,   439,   440,    -1,    -1,   443,    -1,
      -1,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,    -1,    -1,    -1,    -1,    -1,    -1,   474,
     475,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   483,    -1,
      -1,    -1,    -1,   488,     3,     4,     5,     6,     7,     8,
       9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    -1,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    -1,    67,    68,
      69,    70,    71,    -1,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    -1,    85,    86,    87,    88,
      89,    90,    -1,    92,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,    -1,   116,   117,   118,
     119,   120,   121,    -1,   123,   124,   125,   126,   127,    -1,
      -1,   130,   131,   132,   133,   134,    -1,   136,   137,   138,
      -1,   140,   141,   142,    -1,   144,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,    -1,   157,   158,
     159,   160,    -1,   162,    -1,   164,   165,    -1,   167,   168,
     169,   170,   171,   172,    -1,   174,    -1,   176,   177,    -1,
     179,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,    -1,   191,   192,   193,   194,   195,   196,    -1,   198,
     199,   200,   201,   202,   203,   204,   205,   206,    -1,   208,
      -1,   210,   211,   212,   213,   214,   215,   216,   217,   218,
     219,    -1,    -1,   222,   223,   224,   225,    -1,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,    -1,   275,   276,    -1,    -1,
     279,   280,   281,    -1,    -1,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,    -1,   301,   302,   303,   304,   305,   306,   307,   308,
     309,    -1,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,    -1,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,    -1,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,    -1,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,    -1,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
      -1,   390,   391,    -1,   393,   394,   395,   396,   397,   398,
     399,    -1,   401,   402,    -1,    -1,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,    -1,
      -1,   420,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,   430,   431,   432,   433,    -1,   435,   436,   437,   438,
     439,   440,    -1,    -1,   443,    -1,    -1,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,    -1,
      -1,    -1,    -1,    -1,    -1,   474,   475,   476,    -1,    -1,
      -1,    -1,    -1,    -1,   483,    -1,    -1,    -1,    -1,   488,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    -1,    67,    68,    69,    70,    71,    -1,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    88,    89,    90,    -1,    92,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,    -1,   116,   117,   118,   119,   120,   121,    -1,
     123,   124,   125,   126,   127,    -1,    -1,   130,   131,   132,
     133,   134,    -1,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,    -1,   157,   158,   159,   160,    -1,   162,
      -1,   164,   165,    -1,   167,   168,   169,   170,   171,   172,
      -1,   174,    -1,   176,   177,    -1,   179,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,    -1,   191,   192,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,   204,   205,   206,    -1,   208,    -1,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   219,    -1,    -1,   222,
     223,   224,   225,    -1,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,    -1,   275,   276,    -1,    -1,   279,   280,   281,    -1,
      -1,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,    -1,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,    -1,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,    -1,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,    -1,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,    -1,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,    -1,   390,   391,    -1,
     393,   394,   395,   396,   397,   398,   399,    -1,   401,   402,
      -1,    -1,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,    -1,    -1,   420,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,   430,   431,   432,
     433,    -1,   435,   436,   437,   438,   439,   440,    -1,    -1,
     443,    -1,    -1,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,    -1,    -1,    -1,    -1,    -1,
      -1,   474,   475,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     483,    -1,    -1,    -1,    -1,   488,     3,     4,     5,     6,
       7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    -1,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    -1,
      67,    68,    69,    70,    71,    -1,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    -1,    85,    86,
      87,    88,    89,    90,    -1,    92,    93,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,    -1,   116,
     117,   118,   119,   120,   121,    -1,   123,   124,   125,   126,
     127,    -1,    -1,   130,   131,   132,   133,   134,    -1,   136,
     137,   138,    -1,   140,   141,   142,    -1,   144,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,    -1,
     157,   158,   159,   160,    -1,   162,    -1,   164,   165,    -1,
     167,   168,   169,   170,   171,   172,    -1,   174,    -1,   176,
     177,    -1,   179,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   189,    -1,   191,   192,   193,   194,   195,   196,
      -1,   198,   199,   200,   201,   202,   203,   204,   205,   206,
      -1,   208,    -1,   210,   211,   212,   213,   214,   215,   216,
     217,   218,   219,    -1,    -1,   222,   223,   224,   225,    -1,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,    -1,   275,   276,
      -1,    -1,   279,   280,   281,    -1,    -1,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,    -1,   301,   302,   303,   304,   305,   306,
     307,   308,   309,    -1,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,    -1,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,    -1,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
      -1,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,    -1,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,    -1,   390,   391,    -1,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,    -1,    -1,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,    -1,    -1,   420,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,   430,   431,   432,   433,    -1,   435,   436,
     437,   438,   439,   440,    -1,    -1,   443,    -1,    -1,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,    -1,    -1,    -1,    -1,    -1,    -1,   474,   475,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   483,   484,    -1,    -1,
      -1,   488,     3,     4,     5,     6,     7,     8,     9,    10,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    92,    93,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,   117,   118,   119,   120,
     121,    -1,   123,   124,   125,   126,   127,    -1,    -1,   130,
     131,   132,   133,   134,    -1,   136,   137,   138,    -1,   140,
     141,   142,    -1,   144,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,   158,   159,   160,
      -1,   162,    -1,   164,   165,    -1,   167,   168,   169,   170,
     171,   172,    -1,   174,    -1,   176,   177,    -1,   179,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   189,    -1,
     191,   192,   193,   194,   195,   196,    -1,   198,   199,   200,
     201,   202,   203,   204,   205,   206,    -1,   208,    -1,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   219,    -1,
      -1,   222,   223,   224,   225,    -1,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,    -1,   275,   276,    -1,    -1,   279,   280,
     281,    -1,    -1,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,    -1,
     301,   302,   303,   304,   305,   306,   307,   308,   309,    -1,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,    -1,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,    -1,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,    -1,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,    -1,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,    -1,   390,
     391,    -1,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,    -1,    -1,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,    -1,    -1,   420,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,   430,
     431,   432,   433,    -1,   435,   436,   437,   438,   439,   440,
      -1,    -1,   443,    -1,    -1,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,    -1,    -1,    -1,
      -1,    -1,    -1,   474,   475,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   483,   484,    -1,    -1,    -1,   488,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    -1,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
      -1,   116,   117,   118,   119,   120,   121,    -1,   123,   124,
     125,   126,   127,    -1,    -1,   130,   131,   132,   133,   134,
      -1,   136,   137,   138,    -1,   140,   141,   142,    -1,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,    -1,   157,   158,   159,   160,    -1,   162,    -1,   164,
     165,    -1,   167,   168,   169,   170,   171,   172,    -1,   174,
      -1,   176,   177,    -1,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,    -1,   191,   192,   193,   194,
     195,   196,    -1,   198,   199,   200,   201,   202,   203,   204,
     205,   206,    -1,   208,    -1,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,    -1,    -1,   222,   223,   224,
     225,    -1,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,    -1,
     275,   276,    -1,    -1,   279,   280,   281,    -1,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,    -1,   301,   302,   303,   304,
     305,   306,   307,   308,   309,    -1,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,    -1,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,    -1,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,    -1,   390,   391,    -1,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,    -1,    -1,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,    -1,    -1,   420,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,    -1,    -1,   443,    -1,
      -1,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,    -1,    -1,    -1,    -1,    -1,    -1,   474,
     475,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   483,    -1,
      -1,    -1,    -1,   488,     3,     4,     5,     6,     7,     8,
       9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    -1,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    -1,    67,    68,
      69,    70,    71,    -1,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    -1,    85,    86,    87,    88,
      89,    90,    -1,    92,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,    -1,   116,   117,   118,
     119,   120,   121,    -1,   123,   124,   125,   126,   127,    -1,
      -1,   130,   131,   132,   133,   134,    -1,   136,   137,   138,
      -1,   140,   141,   142,    -1,   144,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,    -1,   157,   158,
     159,   160,    -1,   162,    -1,   164,   165,   166,   167,   168,
     169,   170,   171,   172,    -1,   174,    -1,   176,   177,    -1,
     179,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,    -1,   191,   192,   193,   194,   195,   196,    -1,   198,
     199,   200,   201,   202,   203,   204,   205,   206,    -1,   208,
      -1,   210,   211,   212,   213,   214,   215,   216,   217,   218,
     219,    -1,    -1,   222,   223,   224,   225,    -1,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,    -1,   275,   276,    -1,    -1,
     279,   280,   281,    -1,    -1,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,    -1,   301,   302,   303,   304,   305,   306,   307,   308,
     309,    -1,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,    -1,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,    -1,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,    -1,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,    -1,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
      -1,   390,   391,    -1,   393,   394,   395,   396,   397,   398,
     399,    -1,   401,   402,    -1,    -1,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,    -1,
      -1,   420,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,   430,   431,   432,   433,    -1,   435,   436,   437,   438,
     439,   440,    -1,    -1,   443,    -1,    -1,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,    -1,
      -1,    -1,    -1,    -1,    -1,   474,   475,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   483,    -1,    -1,    -1,    -1,   488,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    -1,    67,    68,    69,    70,    71,    -1,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    88,    89,    90,    -1,    92,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,    -1,   116,   117,   118,   119,   120,   121,    -1,
     123,   124,   125,   126,   127,    -1,    -1,   130,   131,   132,
     133,   134,    -1,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,    -1,   157,   158,   159,   160,    -1,   162,
      -1,   164,   165,    -1,   167,   168,   169,   170,   171,   172,
      -1,   174,    -1,   176,   177,    -1,   179,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,    -1,   191,   192,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,   204,   205,   206,    -1,   208,    -1,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   219,    -1,    -1,   222,
     223,   224,   225,    -1,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,    -1,   275,   276,    -1,    -1,   279,   280,   281,    -1,
      -1,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,    -1,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,    -1,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,    -1,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,    -1,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,    -1,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,    -1,   390,   391,    -1,
     393,   394,   395,   396,   397,   398,   399,    -1,   401,   402,
      -1,    -1,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,    -1,    -1,   420,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,   430,   431,   432,
     433,    -1,   435,   436,   437,   438,   439,   440,    -1,    -1,
     443,    -1,    -1,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,    -1,    -1,    -1,    -1,    -1,
      -1,   474,   475,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     483,    -1,    -1,    -1,    -1,   488,     3,     4,     5,     6,
       7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    -1,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    -1,
      67,    68,    69,    70,    71,    -1,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    -1,    85,    86,
      87,    88,    89,    90,    -1,    92,    93,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,    -1,   116,
     117,   118,   119,   120,   121,    -1,   123,   124,   125,   126,
     127,    -1,    -1,   130,   131,   132,   133,   134,    -1,   136,
     137,   138,    -1,   140,   141,   142,    -1,   144,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,    -1,
     157,   158,   159,   160,    -1,   162,    -1,   164,   165,    -1,
     167,   168,   169,   170,   171,   172,    -1,   174,    -1,   176,
     177,    -1,   179,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   189,    -1,   191,   192,   193,   194,   195,   196,
      -1,   198,   199,   200,   201,   202,   203,   204,   205,   206,
      -1,   208,    -1,   210,   211,   212,   213,   214,   215,   216,
     217,   218,   219,    -1,    -1,   222,   223,   224,   225,    -1,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,    -1,   275,   276,
      -1,    -1,   279,   280,   281,    -1,    -1,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,    -1,   301,   302,   303,   304,   305,   306,
     307,   308,   309,    -1,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,    -1,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,    -1,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
      -1,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,    -1,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,    -1,   390,   391,    -1,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,    -1,    -1,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,    -1,    -1,   420,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,   430,   431,   432,   433,    -1,   435,   436,
     437,   438,   439,   440,    -1,    -1,   443,    -1,    -1,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,    -1,    -1,    -1,    -1,    -1,    -1,   474,   475,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   483,    -1,    -1,    -1,
      -1,   488,     3,     4,     5,     6,     7,     8,     9,    10,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    92,    93,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,   117,   118,   119,   120,
     121,    -1,   123,   124,   125,   126,   127,    -1,    -1,   130,
     131,   132,   133,   134,    -1,   136,   137,   138,    -1,   140,
     141,   142,    -1,   144,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,   158,   159,   160,
      -1,   162,    -1,   164,   165,    -1,   167,   168,   169,   170,
     171,   172,    -1,   174,    -1,   176,   177,    -1,   179,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   189,    -1,
     191,   192,   193,   194,   195,   196,    -1,   198,   199,   200,
     201,   202,   203,   204,   205,   206,    -1,   208,    -1,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   219,    -1,
      -1,   222,   223,   224,   225,    -1,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,    -1,   275,   276,    -1,    -1,   279,   280,
     281,    -1,    -1,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,    -1,
     301,   302,   303,   304,   305,   306,   307,   308,   309,    -1,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,    -1,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,    -1,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,    -1,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,    -1,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,    -1,   390,
     391,    -1,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,    -1,    -1,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,    -1,    -1,   420,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,   430,
     431,   432,   433,    -1,   435,   436,   437,   438,   439,   440,
      -1,    -1,   443,    -1,    -1,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,    -1,    -1,    -1,
      -1,    -1,    -1,   474,   475,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   483,    -1,    -1,    -1,    -1,   488,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    -1,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
      -1,   116,   117,   118,   119,   120,   121,    -1,   123,   124,
     125,   126,   127,    -1,    -1,   130,   131,   132,   133,   134,
      -1,   136,   137,   138,    -1,   140,   141,   142,    -1,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,    -1,   157,   158,   159,   160,    -1,   162,    -1,   164,
     165,    -1,   167,   168,   169,   170,   171,   172,    -1,   174,
      -1,   176,   177,    -1,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,    -1,   191,   192,   193,   194,
     195,   196,    -1,   198,   199,   200,   201,   202,   203,   204,
     205,   206,    -1,   208,    -1,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,    -1,    -1,   222,   223,   224,
     225,    -1,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,    -1,
     275,   276,    -1,    -1,   279,   280,   281,    -1,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,    -1,   301,   302,   303,   304,
     305,   306,   307,   308,   309,    -1,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,    -1,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,    -1,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,    -1,   390,   391,    -1,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,    -1,    -1,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,    -1,    -1,   420,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,   430,   431,   432,   433,    -1,
     435,   436,   437,   438,   439,   440,    -1,    -1,   443,    -1,
      -1,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,    -1,    -1,    -1,    -1,    -1,    -1,   474,
     475,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   483,    -1,
      -1,    -1,    -1,   488,     3,     4,     5,     6,     7,     8,
       9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    -1,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    -1,    67,    68,
      69,    70,    71,    -1,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    -1,    85,    86,    87,    88,
      89,    90,    -1,    92,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,    -1,   116,   117,   118,
     119,   120,   121,    -1,   123,   124,   125,   126,   127,    -1,
      -1,   130,   131,   132,   133,   134,    -1,   136,   137,   138,
      -1,   140,   141,   142,    -1,   144,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,    -1,   157,   158,
     159,   160,    -1,   162,    -1,   164,   165,    -1,   167,   168,
     169,   170,   171,   172,    -1,   174,    -1,   176,   177,    -1,
     179,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,    -1,   191,   192,   193,   194,   195,   196,    -1,   198,
     199,   200,   201,   202,   203,   204,   205,   206,    -1,   208,
      -1,   210,   211,   212,   213,   214,   215,   216,   217,   218,
     219,    -1,    -1,   222,   223,   224,   225,    -1,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,    -1,   275,   276,    -1,    -1,
     279,   280,   281,    -1,    -1,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,    -1,   301,   302,   303,   304,   305,   306,   307,   308,
     309,    -1,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,    -1,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,    -1,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,    -1,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,    -1,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
      -1,   390,   391,    -1,   393,   394,   395,   396,   397,   398,
     399,    -1,   401,   402,    -1,    -1,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,    -1,
      -1,   420,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,   430,   431,   432,   433,    -1,   435,   436,   437,   438,
     439,   440,    -1,    -1,   443,    -1,    -1,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,    -1,
      -1,    -1,    -1,    -1,    -1,   474,   475,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   483,    -1,    -1,    -1,    -1,   488,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    -1,    67,    68,    69,    70,    71,    -1,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    88,    89,    90,    -1,    92,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,    -1,   116,   117,   118,   119,   120,   121,    -1,
     123,   124,   125,   126,   127,    -1,    -1,   130,   131,   132,
     133,   134,    -1,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,    -1,   157,   158,   159,   160,    -1,   162,
      -1,   164,   165,    -1,   167,   168,   169,   170,   171,   172,
      -1,   174,    -1,   176,   177,    -1,   179,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,    -1,   191,   192,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,   204,   205,   206,    -1,   208,    -1,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   219,    -1,    -1,   222,
     223,   224,   225,    -1,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,    -1,   275,   276,    -1,    -1,   279,   280,   281,    -1,
      -1,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,    -1,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,    -1,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,    -1,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,    -1,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,    -1,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,    -1,   390,   391,    -1,
     393,   394,   395,   396,   397,   398,   399,    -1,   401,   402,
      -1,    -1,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,    -1,    -1,   420,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,   430,   431,   432,
     433,    -1,   435,   436,   437,   438,   439,   440,    -1,    -1,
     443,    -1,    -1,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,    -1,    -1,    -1,    -1,    -1,
      -1,   474,   475,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     483,    -1,    -1,    -1,    -1,   488,     3,     4,     5,     6,
       7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    -1,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    -1,
      67,    68,    69,    70,    71,    -1,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    -1,    85,    86,
      87,    88,    89,    90,    -1,    92,    93,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,    -1,   114,    -1,   116,
     117,   118,   119,   120,   121,    -1,   123,   124,   125,   126,
     127,    -1,    -1,   130,   131,   132,   133,   134,    -1,   136,
     137,   138,    -1,   140,   141,   142,    -1,   144,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,    -1,
     157,   158,   159,   160,    -1,   162,    -1,   164,   165,    -1,
     167,   168,   169,   170,   171,   172,    -1,   174,    -1,   176,
     177,    -1,   179,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   189,    -1,   191,   192,   193,   194,   195,   196,
      -1,   198,   199,   200,   201,   202,   203,   204,   205,   206,
      -1,   208,    -1,   210,   211,   212,   213,   214,   215,   216,
     217,   218,   219,    -1,    -1,   222,   223,   224,   225,    -1,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,    -1,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,    -1,   275,   276,
      -1,    -1,   279,   280,   281,    -1,    -1,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,    -1,   301,   302,   303,   304,   305,   306,
     307,   308,   309,    -1,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,    -1,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,    -1,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
      -1,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,    -1,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,    -1,   390,   391,    -1,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,    -1,    -1,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,    -1,    -1,   420,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,   430,   431,   432,   433,    -1,   435,   436,
     437,   438,   439,   440,    -1,    -1,   443,    -1,    -1,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   474,   475,    -1,
      -1,     3,     4,     5,     6,     7,   483,     9,    10,    -1,
      -1,   488,    -1,    -1,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      -1,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    -1,    67,    68,    69,    70,    71,
      -1,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    -1,    85,    86,    87,    88,    89,    90,    -1,
      92,    93,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,    -1,   114,    -1,   116,   117,   118,   119,   120,   121,
      -1,   123,   124,   125,   126,   127,    -1,    -1,   130,   131,
     132,   133,   134,    -1,   136,   137,   138,    -1,   140,   141,
     142,    -1,   144,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,    -1,   157,   158,   159,   160,    -1,
     162,    -1,   164,   165,    -1,   167,   168,   169,   170,   171,
     172,    -1,   174,    -1,   176,   177,    -1,   179,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,    -1,   191,
     192,   193,   194,   195,   196,    -1,   198,   199,   200,   201,
     202,   203,   204,   205,   206,    -1,   208,    -1,   210,   211,
     212,   213,   214,   215,   216,   217,   218,   219,    -1,    -1,
     222,   223,   224,   225,    -1,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
      -1,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,    -1,   275,   276,    -1,    -1,   279,   280,   281,
      -1,    -1,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,    -1,   301,
     302,   303,   304,   305,   306,   307,   308,   309,    -1,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,    -1,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,    -1,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,    -1,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,    -1,   390,   391,
      -1,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,    -1,    -1,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,    -1,    -1,   420,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,   430,   431,
     432,   433,    -1,   435,   436,   437,   438,   439,   440,    -1,
      -1,   443,    -1,    -1,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   474,   475,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   483,    -1,    -1,    -1,    -1,   488,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    -1,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      -1,    67,    68,    69,    70,    71,    -1,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    -1,    85,
      86,    87,    88,    89,    90,    -1,    92,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,    -1,   114,    -1,
     116,   117,   118,   119,   120,   121,    -1,   123,   124,   125,
     126,   127,    -1,    -1,   130,   131,   132,   133,   134,    -1,
     136,   137,   138,    -1,   140,   141,   142,    -1,   144,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
      -1,   157,   158,   159,   160,    -1,   162,    -1,   164,   165,
      -1,   167,   168,   169,   170,   171,   172,    -1,   174,    -1,
     176,   177,    -1,   179,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,    -1,   191,   192,   193,   194,   195,
     196,    -1,   198,   199,   200,   201,   202,   203,   204,   205,
     206,    -1,   208,    -1,   210,    -1,   212,   213,   214,   215,
     216,   217,   218,   219,    -1,    -1,   222,   223,   224,   225,
      -1,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,    -1,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,    -1,   275,
     276,    -1,    -1,   279,   280,   281,    -1,    -1,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,    -1,   301,   302,   303,   304,   305,
     306,   307,   308,   309,    -1,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,    -1,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,    -1,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,    -1,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,    -1,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,    -1,   390,   391,    -1,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,    -1,    -1,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,    -1,    -1,   420,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,   430,   431,   432,   433,    -1,   435,
     436,   437,   438,   439,   440,    -1,    -1,   443,    -1,    -1,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   474,   475,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   483,    -1,    -1,
      -1,    -1,   488,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    -1,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    -1,    67,    68,    69,
      70,    71,    -1,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    -1,    85,    86,    87,    88,    89,
      90,    -1,    92,    93,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,   117,   118,   119,
     120,   121,    -1,   123,   124,   125,   126,   127,    -1,    -1,
     130,   131,   132,   133,   134,    -1,   136,   137,   138,    -1,
     140,   141,   142,    -1,   144,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,    -1,   157,   158,   159,
     160,    -1,   162,    -1,   164,   165,    -1,   167,   168,   169,
     170,   171,   172,    -1,   174,    -1,   176,   177,    -1,   179,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
      -1,   191,   192,   193,   194,   195,   196,    -1,   198,   199,
     200,   201,   202,   203,   204,   205,   206,    -1,   208,    -1,
     210,    -1,    -1,   213,   214,   215,   216,   217,   218,   219,
      -1,    -1,   222,   223,   224,   225,    -1,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,    -1,   263,   264,    -1,   266,   267,   268,   269,
     270,   271,   272,   273,    -1,   275,   276,    -1,    -1,   279,
     280,   281,    -1,    -1,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
      -1,   301,   302,   303,   304,   305,   306,   307,   308,   309,
      -1,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,    -1,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,    -1,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,    -1,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,    -1,
     390,   391,    -1,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,    -1,    -1,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,    -1,    -1,
     420,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
     430,   431,   432,   433,    -1,   435,   436,   437,   438,   439,
     440,    -1,    -1,   443,    -1,    -1,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,    -1,    -1,
      -1,    -1,    -1,    -1,   474,   475,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   483,    -1,    -1,    -1,    -1,   488,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    43,
      44,    45,    46,    -1,    48,    49,    50,    51,    -1,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    -1,    67,    68,    69,    70,    71,    -1,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      -1,    85,    86,    87,    88,    89,    90,    -1,    92,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,   117,   118,   119,   120,   121,    -1,   123,
     124,   125,   126,   127,    -1,    -1,   130,   131,   132,   133,
     134,    -1,   136,   137,   138,    -1,   140,    -1,   142,    -1,
     144,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,    -1,   157,   158,   159,   160,    -1,   162,    -1,
     164,   165,    -1,   167,   168,   169,   170,    -1,   172,    -1,
     174,    -1,   176,   177,    -1,   179,   180,   181,   182,   183,
     184,    -1,   186,   187,   188,   189,    -1,   191,   192,   193,
     194,   195,   196,    -1,   198,   199,   200,   201,   202,   203,
     204,   205,   206,    -1,   208,    -1,   210,    -1,    -1,   213,
     214,   215,   216,   217,   218,   219,    -1,    -1,   222,   223,
     224,    -1,    -1,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,    -1,   263,
     264,    -1,   266,   267,   268,   269,   270,   271,   272,   273,
      -1,   275,   276,    -1,    -1,   279,   280,   281,    -1,    -1,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,    -1,   301,   302,   303,
     304,   305,   306,   307,   308,   309,    -1,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,    -1,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,    -1,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,    -1,   370,   371,   372,   373,
      -1,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,    -1,   390,   391,    -1,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,    -1,
      -1,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,    -1,    -1,   420,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,   430,   431,   432,   433,
      -1,   435,   436,   437,   438,   439,   440,    -1,    -1,   443,
      -1,    -1,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     474,   475,     3,    -1,    -1,    -1,    -1,    -1,    -1,   483,
      -1,    -1,    -1,    -1,   488,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    35,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    -1,    -1,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    92,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,    -1,   114,    -1,   116,   117,   118,   119,   120,
     121,    -1,   123,   124,   125,   126,   127,    -1,    -1,   130,
     131,   132,   133,   134,    -1,   136,   137,   138,    -1,   140,
     141,   142,    -1,   144,   145,   146,   147,   148,   149,   150,
     151,   152,   153,    -1,   155,    -1,   157,   158,   159,   160,
      -1,   162,    -1,   164,    -1,    -1,   167,   168,   169,   170,
      -1,   172,    -1,   174,    -1,   176,   177,    -1,   179,   180,
     181,   182,   183,   184,    -1,   186,   187,   188,   189,    -1,
     191,   192,   193,   194,   195,   196,    -1,   198,   199,   200,
     201,   202,   203,   204,   205,   206,    -1,   208,    -1,   210,
      -1,    -1,   213,   214,   215,   216,   217,   218,   219,    -1,
      -1,   222,   223,   224,    -1,    -1,   227,   228,   229,    -1,
      -1,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,    -1,   263,   264,    -1,   266,    -1,   268,   269,   270,
     271,   272,   273,    -1,   275,   276,    -1,    -1,   279,   280,
     281,    -1,    -1,   284,   285,    -1,   287,    -1,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,    -1,
     301,   302,   303,   304,   305,   306,   307,   308,   309,    -1,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,    -1,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,    -1,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,    -1,   358,   359,   360,
     361,   362,    -1,   364,   365,   366,   367,   368,    -1,   370,
     371,   372,   373,    -1,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,    -1,   390,
     391,    -1,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,    -1,    -1,   405,   406,   407,   408,   409,    -1,
     411,   412,   413,   414,   415,   416,   417,    -1,    -1,   420,
     421,   422,   423,   424,    -1,    -1,   427,   428,   429,   430,
     431,   432,   433,    -1,   435,    -1,   437,   438,   439,   440,
      -1,    -1,   443,    -1,    -1,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,    -1,    -1,    -1,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   484,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    -1,    53,
      54,    55,    56,    57,    58,    -1,    60,    61,    62,    63,
      64,    65,    -1,    67,    68,    69,    70,    71,    -1,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      -1,    85,    86,    87,    88,    89,    90,    -1,    92,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,    -1,
     114,    -1,   116,   117,   118,   119,   120,   121,    -1,   123,
     124,   125,   126,   127,    -1,    -1,   130,   131,   132,   133,
     134,    -1,   136,   137,   138,    -1,   140,   141,   142,    -1,
     144,   145,   146,   147,   148,   149,   150,   151,   152,   153,
      -1,   155,    -1,   157,   158,   159,   160,    -1,   162,    -1,
     164,   165,    -1,   167,   168,   169,   170,   171,   172,    -1,
     174,    -1,   176,   177,    -1,   179,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,    -1,   191,   192,   193,
     194,   195,   196,    -1,   198,   199,   200,   201,   202,   203,
     204,   205,   206,    -1,   208,    -1,   210,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,    -1,   222,   223,
     224,   225,    -1,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,    -1,   263,
     264,   265,   266,    -1,   268,   269,   270,   271,   272,   273,
      -1,   275,   276,    -1,   278,   279,   280,   281,    -1,    -1,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,    -1,   301,   302,   303,
     304,   305,   306,   307,   308,   309,    -1,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,    -1,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
      -1,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,    -1,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,    -1,
      -1,   405,   406,   407,   408,   409,    -1,   411,   412,   413,
     414,   415,   416,   417,    -1,    -1,   420,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,   430,   431,   432,   433,
      -1,   435,   436,   437,   438,   439,   440,    -1,    -1,   443,
      -1,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,    -1,    -1,   469,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   483,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    -1,    53,    54,    55,    56,
      57,    58,    -1,    60,    61,    62,    63,    64,    65,    -1,
      67,    68,    69,    70,    71,    -1,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    -1,    85,    86,
      87,    88,    89,    90,    -1,    92,    93,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,    -1,   114,    -1,   116,
     117,   118,   119,   120,   121,    -1,   123,   124,   125,   126,
     127,    -1,    -1,   130,   131,   132,   133,   134,    -1,   136,
     137,   138,    -1,   140,   141,   142,    -1,   144,   145,   146,
     147,   148,   149,   150,   151,   152,   153,    -1,   155,    -1,
     157,   158,   159,   160,    -1,   162,    -1,   164,   165,    -1,
     167,   168,   169,   170,   171,   172,    -1,   174,    -1,   176,
     177,    -1,   179,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   189,    -1,   191,   192,   193,   194,   195,   196,
      -1,   198,   199,   200,   201,   202,   203,   204,   205,   206,
      -1,   208,    -1,   210,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,    -1,   222,   223,   224,   225,    -1,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,    -1,   263,   264,   265,   266,
      -1,   268,   269,   270,   271,   272,   273,    -1,   275,   276,
      -1,   278,   279,   280,   281,    -1,    -1,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,    -1,   301,   302,   303,   304,   305,   306,
     307,   308,   309,    -1,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,    -1,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,    -1,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
      -1,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,    -1,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,    -1,   390,   391,    -1,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,    -1,    -1,   405,   406,
     407,   408,   409,    -1,   411,   412,   413,   414,   415,   416,
     417,    -1,    -1,   420,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,   430,   431,   432,   433,    -1,   435,   436,
     437,   438,   439,   440,    -1,    -1,   443,    -1,    -1,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
      -1,    -1,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   483,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    -1,    60,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    92,    93,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,    -1,   114,    -1,   116,   117,   118,   119,   120,
     121,    -1,   123,   124,   125,   126,   127,    -1,    -1,   130,
     131,   132,   133,   134,    -1,   136,   137,   138,    -1,   140,
     141,   142,    -1,   144,   145,   146,   147,   148,   149,   150,
     151,   152,   153,    -1,   155,    -1,   157,   158,   159,   160,
      -1,   162,    -1,   164,   165,    -1,   167,   168,   169,   170,
     171,   172,    -1,   174,    -1,   176,   177,    -1,   179,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   189,    -1,
     191,   192,   193,   194,   195,   196,    -1,   198,   199,   200,
     201,   202,   203,   204,   205,   206,    -1,   208,    -1,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   219,    -1,
      -1,   222,   223,   224,   225,    -1,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,    -1,   263,   264,   265,   266,    -1,   268,   269,   270,
     271,   272,   273,    -1,   275,   276,    -1,    -1,   279,   280,
     281,    -1,    -1,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,    -1,
     301,   302,   303,   304,   305,   306,   307,   308,   309,    -1,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,    -1,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,    -1,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,    -1,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,    -1,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,    -1,   390,
     391,    -1,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,    -1,    -1,   405,   406,   407,   408,   409,    -1,
     411,   412,   413,   414,   415,   416,   417,    -1,    -1,   420,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,   430,
     431,   432,   433,    -1,   435,   436,   437,   438,   439,   440,
      -1,    -1,   443,    -1,    -1,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,    -1,    -1,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   483,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    -1,    60,    61,    62,    63,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    -1,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,    -1,   114,
      -1,   116,   117,   118,   119,   120,   121,    -1,   123,   124,
     125,   126,   127,    -1,    -1,   130,   131,   132,   133,   134,
      -1,   136,   137,   138,    -1,   140,   141,   142,    -1,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,    -1,
     155,    -1,   157,   158,   159,   160,    -1,   162,    -1,   164,
     165,    -1,   167,   168,   169,   170,   171,   172,    -1,   174,
      -1,   176,   177,    -1,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,    -1,   191,   192,   193,   194,
     195,   196,    -1,   198,   199,   200,   201,   202,   203,   204,
     205,   206,    -1,   208,    -1,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,    -1,    -1,   222,   223,   224,
     225,    -1,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,    -1,   263,   264,
     265,   266,    -1,   268,   269,   270,   271,   272,   273,    -1,
     275,   276,    -1,    -1,   279,   280,   281,    -1,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,    -1,   301,   302,   303,   304,
     305,   306,   307,   308,   309,    -1,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,    -1,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,    -1,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,    -1,   390,   391,    -1,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,    -1,    -1,
     405,   406,   407,   408,   409,    -1,   411,   412,   413,   414,
     415,   416,   417,    -1,    -1,   420,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,   430,   431,   432,   433,    -1,
     435,   436,   437,   438,   439,   440,    -1,    -1,   443,    -1,
      -1,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,    -1,    -1,     3,     4,     5,    -1,    -1,    -1,
       9,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   483,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    -1,    53,    54,    55,    56,    57,    58,
      -1,    -1,    61,    62,    63,    64,    65,    -1,    67,    68,
      69,    70,    71,    -1,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    -1,    85,    86,    87,    88,
      89,    90,    -1,    92,    93,    94,    95,    -1,    -1,    -1,
      99,    -1,    -1,    -1,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,    -1,   114,    -1,   116,   117,   118,
     119,   120,   121,    -1,   123,   124,   125,   126,   127,    -1,
      -1,   130,   131,   132,   133,   134,    -1,   136,   137,   138,
      -1,   140,   141,   142,    -1,   144,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,    -1,   157,   158,
     159,   160,    -1,   162,    -1,   164,   165,    -1,   167,   168,
     169,   170,   171,   172,    -1,   174,    -1,   176,   177,    -1,
     179,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,    -1,   191,   192,   193,   194,   195,   196,    -1,   198,
     199,   200,   201,   202,   203,   204,   205,   206,    -1,   208,
      -1,   210,   211,   212,   213,   214,   215,   216,   217,   218,
     219,    -1,    -1,   222,   223,   224,   225,    -1,   227,   228,
     229,    -1,    -1,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,    -1,   263,   264,   265,   266,    -1,   268,
     269,   270,   271,   272,   273,    -1,   275,   276,   277,    -1,
     279,   280,   281,    -1,    -1,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,    -1,   301,   302,   303,   304,   305,   306,   307,   308,
     309,    -1,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,    -1,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,    -1,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,    -1,   358,
     359,   360,   361,   362,    -1,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,    -1,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
      -1,   390,   391,    -1,   393,   394,   395,   396,   397,   398,
     399,    -1,   401,   402,    -1,    -1,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,    -1,
      -1,   420,   421,   422,   423,   424,    -1,    -1,   427,   428,
     429,   430,   431,   432,   433,    -1,   435,   436,   437,   438,
     439,   440,    -1,    -1,   443,    -1,    -1,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,    -1,    -1,
       3,    -1,    -1,    -1,    -1,   474,   475,   476,    -1,    -1,
      -1,    -1,    -1,    -1,   483,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    30,    31,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    -1,    -1,    61,    62,
      63,    64,    65,    -1,    67,    68,    69,    70,    71,    -1,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    88,    89,    90,    -1,    92,
      93,    94,    95,    -1,    -1,    -1,    99,    -1,    -1,    -1,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
      -1,   114,    -1,   116,   117,   118,   119,   120,   121,    -1,
     123,   124,   125,   126,   127,    -1,    -1,   130,   131,   132,
     133,   134,    -1,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,    -1,   155,    -1,   157,   158,   159,   160,    -1,   162,
      -1,   164,   165,    -1,   167,   168,   169,   170,   171,   172,
      -1,   174,    -1,   176,   177,    -1,   179,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,    -1,   191,   192,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,   204,   205,   206,    -1,   208,    -1,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   219,    -1,    -1,   222,
     223,   224,   225,    -1,   227,   228,   229,    -1,    -1,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,    -1,
     263,   264,   265,   266,    -1,   268,   269,   270,   271,   272,
     273,    -1,   275,   276,    -1,    -1,   279,   280,   281,    -1,
      -1,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,    -1,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,    -1,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,    -1,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
      -1,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,    -1,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,    -1,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,    -1,   401,   402,
      -1,    -1,   405,   406,   407,   408,   409,    -1,   411,   412,
     413,   414,   415,   416,   417,    -1,    -1,   420,   421,   422,
     423,   424,    -1,    -1,   427,   428,   429,   430,   431,   432,
     433,    -1,   435,   436,   437,   438,   439,   440,    -1,    -1,
     443,    -1,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,    -1,    -1,   469,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     483,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      26,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    -1,    44,    45,
      46,    47,    48,    -1,    50,    51,    -1,    53,    54,    55,
      56,    57,    58,    -1,    -1,    61,    62,    63,    64,    65,
      -1,    67,    68,    69,    70,    71,    -1,    -1,    -1,    75,
      76,    77,    78,    79,    -1,    81,    82,    83,    -1,    85,
      86,    87,    88,    89,    90,    -1,    -1,    93,    94,    95,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,    -1,   114,    -1,
     116,   117,   118,   119,   120,   121,    -1,   123,   124,   125,
     126,   127,    -1,    -1,   130,   131,   132,   133,   134,    -1,
     136,   137,   138,    -1,   140,   141,   142,    -1,   144,   145,
     146,   147,   148,   149,   150,   151,   152,   153,    -1,   155,
      -1,   157,   158,   159,   160,    -1,   162,    -1,   164,    -1,
      -1,    -1,   168,   169,   170,    -1,   172,    -1,   174,    -1,
     176,   177,    -1,   179,   180,   181,   182,   183,   184,    -1,
     186,   187,   188,   189,    -1,   191,   192,   193,   194,   195,
     196,    -1,   198,    -1,   200,   201,   202,   203,   204,   205,
     206,    -1,   208,    -1,   210,    -1,    -1,   213,    -1,   215,
     216,   217,   218,   219,    -1,    -1,   222,    -1,   224,    -1,
      -1,   227,   228,   229,    -1,    -1,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
      -1,   257,   258,   259,   260,   261,    -1,   263,   264,    -1,
     266,    -1,   268,   269,   270,   271,   272,   273,    -1,   275,
     276,    -1,    -1,   279,   280,   281,    -1,    -1,   284,   285,
      -1,   287,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,    -1,   301,   302,   303,   304,   305,
     306,   307,   308,   309,    -1,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,    -1,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,    -1,   339,   340,    -1,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,    -1,   364,   365,
     366,   367,   368,    -1,   370,   371,   372,   373,    -1,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,    -1,   390,   391,   392,   393,    -1,   395,
     396,   397,   398,   399,    -1,   401,   402,    -1,    -1,   405,
     406,   407,   408,   409,    -1,   411,   412,   413,   414,   415,
     416,   417,    -1,    -1,   420,   421,   422,   423,   424,    -1,
      -1,   427,   428,   429,   430,   431,   432,   433,    -1,   435,
      -1,   437,   438,   439,   440,    -1,    -1,   443,    -1,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,    -1,    -1,   469,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   483,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    -1,    44,    45,    46,    47,    48,
      -1,    50,    51,    -1,    53,    54,    55,    56,    57,    58,
      -1,    -1,    61,    62,    63,    64,    65,    -1,    67,    68,
      69,    70,    71,    -1,    -1,    -1,    75,    76,    77,    78,
      79,    -1,    81,    82,    83,    -1,    85,    86,    87,    88,
      89,    90,    -1,    -1,    93,    94,    95,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,    -1,   114,    -1,   116,   117,   118,
     119,   120,   121,    -1,   123,   124,   125,   126,   127,    -1,
      -1,   130,   131,   132,   133,   134,    -1,   136,   137,   138,
      -1,   140,   141,   142,    -1,   144,   145,   146,   147,   148,
     149,   150,   151,   152,   153,    -1,   155,    -1,   157,   158,
     159,   160,    -1,   162,    -1,   164,    -1,    -1,    -1,   168,
     169,   170,    -1,   172,    -1,   174,    -1,   176,   177,    -1,
     179,   180,   181,   182,   183,   184,    -1,   186,   187,   188,
     189,    -1,   191,   192,   193,   194,   195,   196,    -1,   198,
      -1,   200,   201,   202,   203,   204,   205,   206,    -1,   208,
      -1,   210,    -1,    -1,   213,    -1,   215,   216,   217,   218,
     219,    -1,    -1,   222,    -1,   224,    -1,    -1,   227,   228,
     229,    -1,    -1,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,    -1,   257,   258,
     259,   260,   261,    -1,   263,   264,    -1,   266,    -1,   268,
     269,   270,   271,   272,   273,    -1,   275,   276,    -1,    -1,
     279,   280,   281,    -1,    -1,   284,   285,    -1,   287,    -1,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,    -1,   301,   302,   303,   304,   305,   306,   307,   308,
     309,    -1,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,    -1,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,    -1,
     339,   340,    -1,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,    -1,   364,   365,   366,   367,   368,
      -1,   370,   371,   372,   373,    -1,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
      -1,   390,   391,   392,   393,    -1,   395,   396,   397,   398,
     399,    -1,   401,   402,    -1,    -1,   405,   406,   407,   408,
     409,    -1,   411,   412,   413,   414,   415,   416,   417,    -1,
      -1,   420,   421,   422,   423,   424,    -1,    -1,   427,   428,
     429,   430,   431,   432,   433,    -1,   435,    -1,   437,   438,
     439,   440,    -1,    -1,   443,    -1,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,    -1,    -1,
     469,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   483,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    -1,    44,    45,    46,    47,    48,    -1,    50,    51,
      -1,    53,    54,    55,    56,    57,    58,    -1,    -1,    61,
      62,    63,    64,    65,    -1,    67,    68,    69,    70,    71,
      -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,    81,
      82,    83,    -1,    85,    86,    87,    88,    89,    90,    -1,
      -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,    -1,   114,    -1,   116,   117,   118,   119,   120,   121,
      -1,   123,   124,   125,   126,   127,    -1,    -1,   130,   131,
     132,   133,   134,    -1,   136,   137,   138,    -1,   140,   141,
     142,    -1,   144,   145,   146,   147,   148,   149,   150,   151,
     152,   153,    -1,   155,    -1,   157,   158,   159,   160,    -1,
     162,    -1,   164,    -1,    -1,    -1,   168,   169,   170,    -1,
     172,    -1,   174,    -1,   176,   177,    -1,   179,   180,   181,
     182,   183,   184,    -1,   186,   187,   188,   189,    -1,   191,
     192,   193,   194,   195,   196,    -1,   198,    -1,   200,   201,
     202,   203,   204,   205,   206,    -1,   208,    -1,   210,    -1,
      -1,   213,    -1,   215,   216,   217,   218,   219,    -1,    -1,
     222,    -1,   224,    -1,    -1,   227,   228,   229,    -1,    -1,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,    -1,   257,   258,   259,   260,   261,
      -1,   263,   264,    -1,   266,    -1,   268,   269,   270,   271,
     272,   273,    -1,   275,   276,    -1,    -1,   279,   280,   281,
      -1,    -1,   284,   285,    -1,   287,    -1,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,    -1,   301,
     302,   303,   304,   305,   306,   307,   308,   309,    -1,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,    -1,   339,   340,    -1,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,    -1,   358,   359,   360,   361,
     362,    -1,   364,   365,   366,   367,   368,    -1,   370,   371,
     372,   373,    -1,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,    -1,   390,   391,
      -1,   393,    -1,   395,   396,   397,   398,   399,    -1,   401,
     402,    -1,    -1,   405,   406,   407,   408,   409,    -1,   411,
     412,   413,   414,   415,   416,   417,    -1,    -1,   420,   421,
     422,   423,   424,    -1,    -1,   427,   428,   429,   430,   431,
     432,   433,    -1,   435,    -1,   437,   438,   439,   440,    -1,
      -1,   443,    -1,    -1,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,    -1,    -1,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   483,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    -1,    44,    45,
      46,    47,    48,    -1,    50,    51,    -1,    53,    54,    55,
      56,    57,    58,    -1,    -1,    61,    62,    63,    64,    65,
      -1,    67,    68,    69,    70,    71,    -1,    -1,    -1,    75,
      76,    77,    78,    79,    -1,    81,    82,    83,    -1,    85,
      86,    87,    88,    89,    90,    -1,    -1,    93,    94,    95,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,    -1,   114,    -1,
     116,   117,   118,   119,   120,   121,    -1,   123,   124,   125,
     126,   127,    -1,    -1,   130,   131,   132,   133,   134,    -1,
     136,   137,   138,    -1,   140,   141,   142,    -1,   144,   145,
     146,   147,   148,   149,   150,   151,   152,   153,    -1,   155,
      -1,   157,   158,   159,   160,    -1,   162,    -1,   164,    -1,
      -1,    -1,   168,   169,   170,    -1,   172,    -1,   174,    -1,
     176,   177,    -1,   179,   180,   181,   182,   183,   184,    -1,
     186,   187,   188,   189,    -1,   191,   192,   193,   194,   195,
     196,    -1,   198,    -1,   200,   201,   202,   203,   204,   205,
     206,    -1,   208,    -1,   210,    -1,    -1,   213,    -1,   215,
     216,   217,   218,   219,    -1,    -1,   222,    -1,   224,    -1,
      -1,   227,   228,   229,    -1,    -1,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
      -1,   257,   258,   259,   260,   261,    -1,   263,   264,    -1,
     266,    -1,   268,   269,   270,   271,   272,   273,    -1,   275,
     276,    -1,    -1,   279,   280,   281,    -1,    -1,   284,   285,
      -1,   287,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,    -1,   301,   302,   303,   304,   305,
     306,   307,   308,   309,    -1,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,    -1,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,    -1,   339,   340,    -1,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,    -1,   358,   359,   360,   361,   362,    -1,   364,   365,
     366,   367,   368,    -1,   370,   371,   372,   373,    -1,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,    -1,   390,   391,    -1,   393,    -1,   395,
     396,   397,   398,   399,    -1,   401,   402,    -1,    -1,   405,
     406,   407,   408,   409,    -1,   411,   412,   413,   414,   415,
     416,   417,    -1,    -1,   420,   421,   422,   423,   424,    -1,
      -1,   427,   428,   429,   430,   431,   432,   433,    -1,   435,
      -1,   437,   438,   439,   440,    -1,    -1,   443,    -1,    -1,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,    -1,    -1,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   483,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    -1,    44,    45,    46,    47,    48,    -1,
      50,    51,    -1,    53,    54,    55,    56,    57,    58,    -1,
      -1,    61,    62,    63,    64,    65,    -1,    67,    68,    69,
      70,    71,    -1,    -1,    -1,    75,    76,    77,    78,    79,
      -1,    81,    82,    83,    -1,    85,    86,    87,    88,    89,
      90,    -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,    -1,   114,    -1,   116,   117,   118,   119,
     120,   121,    -1,   123,   124,   125,   126,   127,    -1,    -1,
     130,   131,   132,   133,   134,    -1,   136,   137,   138,    -1,
     140,   141,   142,    -1,   144,   145,   146,   147,   148,   149,
     150,   151,   152,   153,    -1,   155,    -1,   157,   158,   159,
     160,    -1,   162,    -1,   164,    -1,    -1,    -1,   168,   169,
     170,    -1,   172,    -1,   174,    -1,   176,   177,    -1,   179,
     180,   181,   182,   183,   184,    -1,   186,   187,   188,   189,
      -1,   191,   192,   193,   194,   195,   196,    -1,   198,    -1,
     200,   201,   202,   203,   204,   205,   206,    -1,   208,    -1,
     210,    -1,    -1,   213,    -1,   215,   216,   217,   218,   219,
      -1,    -1,   222,    -1,   224,    -1,    -1,   227,   228,   229,
      -1,    -1,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,    -1,   257,   258,   259,
     260,   261,    -1,   263,   264,    -1,   266,    -1,   268,   269,
     270,   271,   272,   273,    -1,   275,   276,    -1,    -1,   279,
     280,   281,    -1,    -1,   284,   285,    -1,   287,    -1,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
      -1,   301,   302,   303,   304,   305,   306,   307,   308,   309,
      -1,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,    -1,   339,
     340,    -1,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,    -1,   358,   359,
     360,   361,   362,    -1,   364,   365,   366,   367,   368,    -1,
     370,   371,   372,   373,    -1,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,    -1,
     390,   391,    -1,   393,    -1,   395,   396,   397,   398,   399,
      -1,   401,   402,    -1,    -1,   405,   406,   407,   408,   409,
      -1,   411,   412,   413,   414,   415,   416,   417,    -1,    -1,
     420,   421,   422,   423,   424,    -1,    -1,   427,   428,   429,
     430,   431,   432,   433,    -1,   435,    -1,   437,   438,   439,
     440,    -1,    -1,   443,    -1,    -1,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,    -1,    -1,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   483,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,
      44,    45,    46,    47,    48,    -1,    50,    51,    -1,    53,
      54,    55,    56,    57,    58,    -1,    -1,    61,    62,    63,
      64,    65,    -1,    67,    68,    69,    70,    71,    -1,    -1,
      -1,    75,    76,    77,    78,    79,    -1,    81,    82,    83,
      -1,    85,    86,    87,    88,    89,    90,    -1,    -1,    93,
      94,    95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,    -1,
     114,    -1,   116,   117,   118,   119,   120,   121,    -1,   123,
     124,   125,   126,   127,    -1,    -1,   130,   131,   132,   133,
     134,    -1,   136,   137,   138,    -1,   140,   141,   142,    -1,
     144,   145,   146,   147,   148,   149,   150,   151,   152,   153,
      -1,   155,    -1,   157,   158,   159,   160,    -1,   162,    -1,
     164,    -1,    -1,    -1,   168,   169,   170,    -1,   172,    -1,
     174,    -1,   176,   177,    -1,   179,   180,   181,   182,   183,
     184,    -1,   186,   187,   188,   189,    -1,   191,   192,   193,
     194,   195,   196,    -1,   198,    -1,   200,   201,   202,   203,
     204,   205,   206,    -1,   208,    -1,   210,    -1,    -1,   213,
      -1,   215,   216,   217,   218,   219,    -1,    -1,   222,    -1,
     224,    -1,    -1,   227,   228,   229,    -1,    -1,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,    -1,   257,   258,   259,   260,   261,    -1,   263,
     264,    -1,   266,    -1,   268,   269,   270,   271,   272,   273,
      -1,   275,   276,    -1,    -1,   279,   280,   281,    -1,    -1,
     284,   285,    -1,   287,    -1,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,    -1,   301,   302,   303,
     304,   305,   306,   307,   308,   309,    -1,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,    -1,   339,   340,    -1,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,    -1,   358,   359,   360,   361,   362,    -1,
     364,   365,   366,   367,   368,    -1,   370,   371,   372,   373,
      -1,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,    -1,   390,   391,    -1,   393,
      -1,   395,   396,   397,   398,   399,    -1,   401,   402,    -1,
      -1,   405,   406,   407,   408,   409,    -1,   411,   412,   413,
     414,   415,   416,   417,    -1,    -1,   420,   421,   422,   423,
     424,    -1,    -1,   427,   428,   429,   430,   431,   432,   433,
      -1,   435,    -1,   437,   438,   439,   440,    -1,    -1,   443,
      -1,    -1,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,    -1,    -1,    -1,    -1,    -1,     3,     4,
       5,    -1,    -1,     8,     9,    -1,    -1,    -1,    -1,   483,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    -1,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,    -1,   149,   150,   151,   152,    -1,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,    -1,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,    -1,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,    -1,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
      -1,   286,   287,   288,    -1,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,    -1,   304,
     305,    -1,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,    -1,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,    -1,   408,    -1,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,    -1,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   463,   464,
     465,   466,    -1,     3,    -1,   470,   471,   472,     8,   474,
     475,   476,   477,   478,   479,    15,    16,    17,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    -1,    44,    45,    46,    47,    48,    -1,
      50,    51,    -1,    53,    54,    55,    56,    57,    58,    -1,
      -1,    61,    62,    63,    64,    65,    -1,    67,    68,    69,
      70,    71,    -1,    -1,    -1,    75,    76,    77,    78,    79,
      -1,    81,    82,    83,    -1,    85,    86,    87,    88,    89,
      90,    -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,    -1,   114,    -1,   116,   117,   118,   119,
     120,   121,    -1,   123,   124,   125,   126,   127,    -1,    -1,
     130,   131,   132,   133,   134,    -1,   136,   137,   138,    -1,
     140,   141,   142,    -1,   144,   145,   146,   147,   148,   149,
     150,   151,   152,   153,    -1,   155,    -1,   157,   158,   159,
     160,    -1,   162,    -1,   164,    -1,    -1,    -1,   168,   169,
     170,    -1,   172,    -1,   174,    -1,   176,   177,    -1,   179,
     180,   181,   182,   183,   184,    -1,   186,   187,   188,   189,
      -1,   191,   192,   193,   194,   195,   196,    -1,   198,    -1,
     200,   201,   202,   203,   204,   205,   206,    -1,   208,    -1,
     210,    -1,    -1,   213,    -1,   215,   216,   217,   218,   219,
      -1,    -1,   222,    -1,   224,    -1,    -1,   227,   228,   229,
      -1,    -1,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,    -1,   257,   258,   259,
     260,   261,    -1,   263,   264,    -1,   266,    -1,   268,   269,
     270,   271,   272,   273,    -1,   275,   276,    -1,    -1,   279,
     280,   281,    -1,    -1,   284,   285,    -1,   287,    -1,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
      -1,   301,   302,   303,   304,   305,   306,   307,   308,   309,
      -1,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,    -1,   339,
     340,    -1,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,    -1,   358,   359,
     360,   361,   362,    -1,   364,   365,   366,   367,   368,    -1,
     370,   371,   372,   373,    -1,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,    -1,
     390,   391,    -1,   393,    -1,   395,   396,   397,   398,   399,
      -1,   401,   402,    -1,    -1,   405,   406,   407,   408,   409,
      -1,   411,   412,   413,   414,   415,   416,   417,    -1,    -1,
     420,   421,   422,   423,   424,    -1,    -1,   427,   428,   429,
     430,   431,   432,   433,    -1,   435,    -1,   437,   438,   439,
     440,    -1,    -1,   443,    -1,    -1,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,    -1,    -1,    -1,
     470,   471,   472,    -1,   474,   475,   476,   477,   478,   479,
       8,    -1,    -1,    11,    -1,    -1,    -1,    15,    16,    17,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     8,    -1,
      -1,    11,    -1,    -1,    32,    15,    16,    17,    -1,    -1,
      -1,    -1,    40,    -1,    -1,    -1,    -1,    -1,    -1,    47,
      -1,    -1,    32,    -1,    -1,    -1,     8,    -1,    -1,    11,
      40,    -1,    -1,    15,    16,    17,    -1,    47,    -1,    -1,
      -1,    -1,    -1,    -1,    72,    -1,    -1,    -1,    -1,    -1,
      32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    -1,
      -1,    -1,    72,    -1,     8,    47,    -1,    11,    -1,    -1,
      -1,    15,    16,    17,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    32,    -1,
      72,    -1,    -1,    -1,    -1,    -1,    40,    -1,    -1,    -1,
      -1,    -1,    -1,    47,    -1,    -1,    -1,    -1,    -1,    -1,
       8,    -1,    -1,    11,    -1,    -1,    -1,    15,    16,    17,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    72,    -1,
      -1,    -1,    -1,    -1,    32,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,   171,    -1,    -1,    -1,    -1,    -1,    47,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   185,    -1,    -1,
       8,   171,   190,    11,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    72,   185,    -1,    -1,    -1,    -1,
     190,    -1,    -1,   211,   212,    -1,    -1,    -1,    -1,   171,
      -1,    -1,    40,    -1,    -1,    -1,    -1,   225,    -1,    47,
      -1,   211,   212,   185,    -1,    -1,    -1,    -1,   190,    -1,
      -1,    -1,    -1,    -1,    -1,   225,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    72,    -1,    -1,   171,    -1,   211,
     212,    -1,    -1,    -1,   262,    -1,    -1,   265,    -1,    -1,
      -1,   185,    -1,   225,    -1,    -1,   190,    -1,    -1,    -1,
      -1,   279,   262,    -1,   282,   265,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   211,   212,   279,
      -1,    -1,   282,   171,    -1,    -1,    -1,    -1,    -1,    -1,
     262,   225,    -1,   265,    -1,    -1,    -1,   185,    -1,    -1,
      -1,    -1,   190,   141,    -1,    -1,    -1,   279,    -1,    -1,
     282,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   211,   212,    -1,    -1,    -1,   262,    -1,
      -1,   265,    -1,   171,    -1,    -1,    -1,   225,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   279,    -1,   185,   282,    -1,
      -1,   369,   190,    -1,    -1,    -1,    -1,     8,    -1,    -1,
      11,    -1,    -1,    -1,    15,    16,    17,    -1,    -1,   369,
      -1,    -1,    -1,    -1,   262,    -1,    -1,   265,    -1,    -1,
      -1,    32,    -1,    -1,    -1,    -1,    -1,   225,    -1,    40,
      -1,   279,    -1,    -1,   282,    -1,    47,   369,    -1,     8,
      -1,    -1,    11,    -1,    -1,    -1,    15,    16,    17,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    72,    -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    40,    -1,    -1,    -1,   369,    -1,    -1,    47,    -1,
      -1,   279,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   467,
      -1,    -1,   470,   471,   472,    -1,   474,   475,   476,   477,
     478,   479,    -1,    72,    -1,    -1,   484,   467,    -1,    -1,
     470,   471,   472,    -1,   474,   475,   476,   477,   478,   479,
      -1,   369,    -1,    -1,   484,     8,    -1,    -1,    11,    -1,
      -1,    -1,    15,    16,    17,   467,    -1,    -1,   470,   471,
     472,    -1,   474,   475,   476,   477,   478,   479,    -1,    32,
      -1,    -1,   484,    -1,    -1,    -1,    -1,    40,    -1,    -1,
     171,    -1,    -1,    -1,    47,    -1,    -1,    -1,    -1,    -1,
      -1,   369,    -1,   467,   185,    -1,   470,   471,   472,   190,
     474,   475,   476,   477,   478,   479,    -1,    -1,    -1,    72,
     484,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     211,   212,   171,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   225,    -1,   185,    -1,    -1,   467,
      -1,   190,   470,   471,   472,    -1,   474,   475,   476,   477,
     478,   479,    -1,    -1,    -1,    -1,   484,    -1,    -1,    -1,
      -1,    -1,   211,   212,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   262,    -1,    -1,   265,    -1,   225,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   279,   467,
      -1,   282,    -1,    -1,    -1,    -1,   474,   475,   476,   477,
     478,   479,    -1,    -1,    -1,    -1,    -1,    -1,   171,    -1,
      -1,    -1,    -1,   262,    -1,    -1,   265,    -1,    -1,    -1,
      -1,    -1,   185,    -1,    -1,    -1,    -1,   190,    -1,    -1,
     279,    -1,    -1,   282,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   211,   212,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   225,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   369,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   262,
      -1,    -1,   265,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   279,    -1,    -1,   282,
     369,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   467,    -1,    -1,   470,
     471,   472,    -1,   474,   475,   476,   477,   478,   479,    -1,
      -1,    -1,    -1,   484,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   369,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   467,    -1,
      -1,   470,   471,   472,    -1,   474,   475,   476,   477,   478,
     479,    -1,    -1,    -1,    -1,   484,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   467,     3,    -1,   470,   471,   472,
      -1,   474,   475,   476,   477,   478,   479,    -1,    -1,   482,
      18,    19,    20,    21,    22,    23,    24,    25,    26,    27,
      28,    29,    30,    31,    32,    33,    34,    35,    36,    37,
      38,    39,    40,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,    71,    72,    73,    74,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    86,    87,
      88,    89,    90,    91,    92,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
     138,   139,   140,   141,   142,   143,   144,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   169,   170,   171,   172,   173,   174,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   476,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,
      44,    45,    46,    47,    48,    -1,    50,    51,    -1,    53,
      54,    55,    56,    57,    58,    -1,    -1,    61,    62,    63,
      64,    65,    -1,    67,    68,    69,    70,    71,    -1,    -1,
      -1,    75,    76,    77,    78,    79,    -1,    81,    82,    83,
      -1,    85,    86,    87,    88,    89,    90,    -1,    -1,    93,
      94,    95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,    -1,
     114,    -1,   116,   117,   118,   119,   120,   121,    -1,   123,
     124,   125,   126,   127,    -1,    -1,   130,   131,   132,   133,
     134,    -1,   136,   137,   138,    -1,   140,   141,   142,    -1,
     144,   145,   146,   147,   148,   149,   150,   151,   152,   153,
      -1,   155,    -1,   157,   158,   159,   160,    -1,   162,    -1,
     164,    -1,    -1,    -1,   168,   169,   170,    -1,   172,    -1,
     174,    -1,   176,   177,    -1,   179,   180,   181,   182,   183,
     184,    -1,   186,   187,   188,   189,    -1,   191,   192,   193,
     194,   195,   196,    -1,   198,    -1,   200,   201,   202,   203,
     204,   205,   206,    -1,   208,    -1,   210,    -1,    -1,   213,
      -1,   215,   216,   217,   218,   219,    -1,    -1,   222,    -1,
     224,    -1,    -1,   227,   228,   229,    -1,    -1,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,    -1,   257,   258,   259,   260,   261,    -1,   263,
     264,    -1,   266,    -1,   268,   269,   270,   271,   272,   273,
      -1,   275,   276,    -1,    -1,   279,   280,   281,    -1,    -1,
     284,   285,    -1,   287,    -1,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,    -1,   301,   302,   303,
     304,   305,   306,   307,   308,   309,    -1,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,    -1,   339,   340,    -1,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,    -1,   358,   359,   360,   361,   362,    -1,
     364,   365,   366,   367,   368,    -1,   370,   371,   372,   373,
      -1,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,    -1,   390,   391,    -1,   393,
      -1,   395,   396,   397,   398,   399,    -1,   401,   402,    -1,
      -1,   405,   406,   407,   408,   409,    -1,   411,   412,   413,
     414,   415,   416,   417,    -1,    -1,   420,   421,   422,   423,
     424,    -1,    -1,   427,   428,   429,   430,   431,   432,   433,
      -1,   435,    -1,   437,   438,   439,   440,    -1,    -1,   443,
      -1,    -1,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,     3,     4,     5,    -1,    -1,    -1,     9,
      -1,    -1,   476,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    -1,    53,    54,    55,    56,    57,    58,    -1,
      -1,    61,    62,    63,    64,    65,    -1,    67,    68,    69,
      70,    71,    -1,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    -1,    85,    86,    87,    88,    89,
      90,    -1,    92,    93,    94,    95,    -1,    -1,    -1,    99,
      -1,    -1,    -1,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,   117,   118,   119,
     120,   121,    -1,   123,   124,   125,   126,   127,    -1,    -1,
     130,   131,   132,   133,   134,    -1,   136,   137,   138,    -1,
     140,   141,   142,    -1,   144,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,    -1,   157,   158,   159,
     160,    -1,   162,    -1,   164,   165,    -1,   167,   168,   169,
     170,   171,   172,    -1,   174,    -1,   176,   177,    -1,   179,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
      -1,   191,   192,   193,   194,   195,   196,    -1,   198,   199,
     200,   201,   202,   203,   204,   205,   206,    -1,   208,    -1,
     210,   211,   212,   213,   214,   215,   216,   217,   218,   219,
      -1,    -1,   222,   223,   224,   225,    -1,   227,   228,   229,
      -1,    -1,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,    -1,   263,   264,   265,   266,    -1,   268,   269,
     270,   271,   272,   273,    -1,   275,   276,   277,    -1,   279,
     280,   281,    -1,    -1,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
      -1,   301,   302,   303,   304,   305,   306,   307,   308,   309,
      -1,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,    -1,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,    -1,   358,   359,
     360,   361,   362,    -1,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,    -1,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,    -1,
     390,   391,    -1,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,    -1,    -1,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,    -1,    -1,
     420,   421,   422,   423,   424,    -1,    -1,   427,   428,   429,
     430,   431,   432,   433,    -1,   435,   436,   437,   438,   439,
     440,    -1,    -1,   443,    -1,    -1,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,     3,     4,     5,
      -1,    -1,    -1,     9,   474,   475,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    -1,    53,    54,    55,
      56,    57,    58,    -1,    -1,    61,    62,    63,    64,    65,
      -1,    67,    68,    69,    70,    71,    -1,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    -1,    85,
      86,    87,    88,    89,    90,    -1,    92,    93,    94,    95,
      -1,    -1,    -1,    99,    -1,    -1,    -1,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,   117,   118,   119,   120,   121,    -1,   123,   124,   125,
     126,   127,    -1,    -1,   130,   131,   132,   133,   134,    -1,
     136,   137,   138,    -1,   140,   141,   142,    -1,   144,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
      -1,   157,   158,   159,   160,    -1,   162,    -1,   164,   165,
      -1,   167,   168,   169,   170,   171,   172,    -1,   174,    -1,
     176,   177,    -1,   179,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,    -1,   191,   192,   193,   194,   195,
     196,    -1,   198,   199,   200,   201,   202,   203,   204,   205,
     206,    -1,   208,    -1,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   219,    -1,    -1,   222,   223,   224,   225,
      -1,   227,   228,   229,    -1,    -1,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,    -1,   263,   264,   265,
     266,    -1,   268,   269,   270,   271,   272,   273,    -1,   275,
     276,   277,    -1,   279,   280,   281,    -1,    -1,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,    -1,   301,   302,   303,   304,   305,
     306,   307,   308,   309,    -1,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,    -1,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,    -1,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,    -1,   358,   359,   360,   361,   362,    -1,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,    -1,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,    -1,   390,   391,    -1,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,    -1,    -1,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,    -1,    -1,   420,   421,   422,   423,   424,    -1,
      -1,   427,   428,   429,   430,   431,   432,   433,    -1,   435,
     436,   437,   438,   439,   440,    -1,    -1,   443,    -1,    -1,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,     3,     4,     5,    -1,    -1,    -1,     9,   474,   475,
      -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      -1,    53,    54,    55,    56,    57,    58,    -1,    -1,    61,
      62,    63,    64,    65,    -1,    67,    68,    69,    70,    71,
      -1,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    -1,    85,    86,    87,    88,    89,    90,    -1,
      92,    93,    94,    95,    -1,    -1,    -1,    99,    -1,    -1,
      -1,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,    -1,   114,    -1,   116,   117,   118,   119,   120,   121,
      -1,   123,   124,   125,   126,   127,    -1,    -1,   130,   131,
     132,   133,   134,    -1,   136,   137,   138,    -1,   140,   141,
     142,    -1,   144,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,    -1,   157,   158,   159,   160,    -1,
     162,    -1,   164,   165,    -1,   167,   168,   169,   170,   171,
     172,    -1,   174,    -1,   176,   177,    -1,   179,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,    -1,   191,
     192,   193,   194,   195,   196,    -1,   198,   199,   200,   201,
     202,   203,   204,   205,   206,    -1,   208,    -1,   210,   211,
     212,   213,   214,   215,   216,   217,   218,   219,    -1,    -1,
     222,   223,   224,   225,    -1,   227,   228,   229,    -1,    -1,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
      -1,   263,   264,   265,   266,    -1,   268,   269,   270,   271,
     272,   273,    -1,   275,   276,   277,    -1,   279,   280,   281,
      -1,    -1,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,    -1,   301,
     302,   303,   304,   305,   306,   307,   308,   309,    -1,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,    -1,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,    -1,   358,   359,   360,   361,
     362,    -1,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,    -1,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,    -1,   390,   391,
      -1,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,    -1,    -1,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,    -1,    -1,   420,   421,
     422,   423,   424,    -1,    -1,   427,   428,   429,   430,   431,
     432,   433,    -1,   435,   436,   437,   438,   439,   440,    -1,
      -1,   443,    -1,    -1,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,    -1,    -1,     8,    -1,    -1,
      11,    -1,   474,   475,    15,    16,    17,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,     8,    -1,    -1,    11,    -1,
      -1,    32,    15,    16,    17,    36,    -1,    -1,    -1,    40,
      -1,    -1,    -1,    -1,    -1,    -1,    47,    -1,    -1,    32,
      -1,    -1,    -1,     8,    -1,    -1,    11,    40,    -1,    -1,
      15,    16,    17,    -1,    47,    -1,    -1,    -1,    -1,    -1,
      -1,    72,    -1,    -1,    -1,    -1,    -1,    32,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    40,    -1,    -1,    -1,    72,
      -1,     8,    47,    -1,    11,    -1,    -1,    -1,    15,    16,
      17,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    32,    -1,    72,    35,    -1,
      -1,   122,    -1,    40,    -1,    -1,    -1,    -1,    -1,    -1,
      47,    -1,    -1,    -1,    -1,    -1,    -1,     8,    -1,    -1,
      11,    -1,    -1,    -1,    15,    16,    17,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    72,    -1,    -1,    -1,    -1,
      -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,
     171,    -1,    -1,    -1,    -1,    -1,    47,    -1,   161,    -1,
      -1,    -1,    -1,   166,   185,    -1,    -1,    -1,   171,   190,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    72,   185,    -1,    -1,   160,    -1,   190,    -1,    -1,
     211,   212,    -1,    -1,    -1,    -1,   171,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   225,    -1,    -1,    -1,   211,   212,
     185,    -1,    -1,    -1,    -1,   190,    -1,    -1,    -1,    -1,
      -1,    -1,   225,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   171,    -1,   211,   212,    -1,    -1,
      -1,   262,    -1,    -1,   265,    -1,    -1,    -1,   185,    -1,
     225,    -1,    -1,   190,    -1,    -1,    -1,    -1,   279,   262,
      -1,   282,   265,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   211,   212,   279,    -1,    -1,   282,
     171,    -1,    -1,    -1,    -1,    -1,    -1,   262,   225,    -1,
     265,    -1,    -1,    -1,   185,    -1,    -1,    -1,    -1,   190,
      -1,    -1,    -1,    -1,   279,    -1,    -1,   282,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     211,   212,    -1,    -1,    -1,   262,    -1,    -1,   265,    -1,
     305,    -1,    -1,    -1,   225,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   279,     8,    -1,   282,    11,    -1,   369,    -1,
      15,    16,    17,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   369,    32,    -1,    -1,
      35,   262,    -1,    -1,   265,    40,    -1,    -1,    -1,    -1,
      -1,    -1,    47,    -1,    -1,    -1,    -1,    -1,   279,    -1,
      -1,   282,    -1,    -1,   369,     8,    -1,    -1,    11,    -1,
      -1,    -1,    15,    16,    17,   426,    -1,    72,    -1,   300,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    32,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    -1,    -1,
      -1,    -1,   369,    -1,    47,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   467,    -1,    -1,   470,
     471,   472,    -1,   474,   475,   476,   477,   478,   479,    72,
      -1,    -1,    -1,    -1,   467,    -1,    -1,   470,   471,   472,
      -1,   474,   475,   476,   477,   478,   479,    -1,   369,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   467,    -1,    -1,   470,   471,   472,    -1,   474,
     475,   476,   477,   478,   479,    -1,   171,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     185,    -1,    -1,    -1,    -1,   190,    -1,    -1,    -1,    -1,
     467,    -1,    -1,   470,   471,   472,    -1,   474,   475,   476,
     477,   478,   479,    -1,    -1,    -1,   211,   212,    -1,    -1,
      -1,    -1,    -1,   166,    -1,    -1,    -1,    -1,   171,    -1,
     225,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   185,    -1,    -1,    -1,   467,   190,    -1,   470,
     471,   472,    -1,   474,   475,   476,   477,   478,   479,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   262,   211,   212,
     265,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   225,    -1,   279,     8,    -1,   282,    11,    -1,
      -1,    -1,    15,    16,    17,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    32,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,    -1,   262,
      -1,    -1,   265,    -1,    47,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,     8,    -1,   279,    11,    -1,   282,
      -1,    15,    16,    17,    -1,    -1,    -1,    -1,    -1,    72,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    32,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    40,    -1,    -1,    -1,
      -1,    -1,    -1,    47,   369,    -1,    -1,    -1,     8,    -1,
      -1,    11,    -1,    -1,    -1,    15,    16,    17,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    72,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      40,    -1,    -1,    -1,    -1,    -1,    -1,    47,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   369,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    72,    -1,    -1,    -1,    -1,    -1,   171,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   185,    -1,    -1,    -1,    -1,   190,    -1,    -1,
      -1,    -1,   467,    -1,    -1,   470,   471,   472,    -1,   474,
     475,   476,   477,   478,   479,    -1,    -1,    -1,   211,   212,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   171,    -1,    -1,
      -1,    -1,   225,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   185,    -1,    -1,    -1,    -1,   190,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   467,    -1,    -1,   470,   471,   472,
      -1,   474,   475,   476,   477,   478,   479,   211,   212,   262,
      -1,   171,   265,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   225,    -1,    -1,    -1,   185,   279,    -1,    -1,   282,
     190,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   211,   212,    -1,    -1,    -1,    -1,    -1,   262,    -1,
      -1,   265,    -1,    -1,    -1,   225,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   279,    -1,    -1,   282,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   262,    -1,    -1,   265,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   369,    -1,    -1,   279,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   400,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   369,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   369,
      -1,    -1,    -1,    -1,   467,    -1,    -1,   470,   471,   472,
      -1,   474,   475,   476,   477,   478,   479,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   467,    -1,    -1,   470,   471,   472,    -1,
     474,   475,   476,   477,   478,   479,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,     3,   467,     5,    -1,
     470,   471,   472,    -1,   474,   475,   476,   477,   478,   479,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    26,
      27,    28,    29,    30,    31,    32,    33,    34,    35,    36,
      37,    38,    39,    40,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,    73,    74,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    86,
      87,    88,    89,    90,    91,    92,    93,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,   129,   130,   131,   132,   133,   134,   135,   136,
     137,   138,   139,   140,   141,   142,   143,   144,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   169,   170,   171,   172,   173,   174,   175,   176,
     177,   178,   179,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   210,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    26,    27,    28,    29,    30,    31,    32,
      33,    34,    35,    36,    37,    38,    39,    40,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
      73,    74,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    86,    87,    88,    89,    90,    91,    92,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   129,   130,   131,   132,
     133,   134,   135,   136,   137,   138,   139,   140,   141,   142,
     143,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     173,   174,   175,   176,   177,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    26,    27,    28,
      29,    30,    31,    32,    33,    34,    35,    36,    37,    38,
      39,    40,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,    73,    74,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    86,    87,    88,
      89,    90,    91,    92,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     129,   130,   131,   132,   133,   134,   135,   136,   137,   138,
     139,   140,   141,   142,   143,   144,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   173,   174,   175,   176,   177,   178,
     179,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   210,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    -1,    60,    61,    62,    63,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    -1,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,    -1,   114,
      -1,   116,   117,   118,   119,   120,   121,    -1,   123,   124,
     125,   126,   127,    -1,    -1,   130,   131,   132,   133,   134,
      -1,   136,   137,   138,    -1,   140,   141,   142,    -1,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,    -1,
     155,    -1,   157,   158,   159,   160,    -1,   162,    -1,   164,
     165,    -1,   167,   168,   169,   170,   171,   172,    -1,   174,
      -1,   176,   177,    -1,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,    -1,   191,   192,   193,   194,
     195,   196,    -1,   198,   199,   200,   201,   202,   203,   204,
     205,   206,    -1,   208,    -1,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,    -1,    -1,   222,   223,   224,
     225,    -1,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,    -1,   263,   264,
     265,   266,    -1,   268,   269,   270,   271,   272,   273,    -1,
     275,   276,    -1,    -1,   279,   280,   281,    -1,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,    -1,   301,   302,   303,   304,
     305,   306,   307,   308,   309,    -1,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,    -1,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,    -1,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,    -1,   390,   391,    -1,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,    -1,    -1,
     405,   406,   407,   408,   409,    -1,   411,   412,   413,   414,
     415,   416,   417,    -1,    -1,   420,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,   430,   431,   432,   433,    -1,
     435,   436,   437,   438,   439,   440,    -1,    -1,   443,    -1,
      -1,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    -1,    -1,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    92,    93,    94,    95,    -1,    -1,    -1,    99,    -1,
      -1,    -1,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,    -1,   114,    -1,   116,   117,   118,   119,   120,
     121,    -1,   123,   124,   125,   126,   127,    -1,    -1,   130,
     131,   132,   133,   134,    -1,   136,   137,   138,    -1,   140,
     141,   142,    -1,   144,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,   158,   159,   160,
      -1,   162,    -1,   164,   165,    -1,   167,   168,   169,   170,
     171,   172,    -1,   174,    -1,   176,   177,    -1,   179,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   189,    -1,
     191,   192,   193,   194,   195,   196,    -1,   198,   199,   200,
     201,   202,   203,   204,   205,   206,    -1,   208,    -1,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   219,    -1,
      -1,   222,   223,   224,   225,    -1,   227,   228,   229,    -1,
      -1,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,    -1,   263,   264,   265,   266,    -1,   268,   269,   270,
     271,   272,   273,    -1,   275,   276,   277,    -1,   279,   280,
     281,    -1,    -1,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,    -1,
     301,   302,   303,   304,   305,   306,   307,   308,   309,    -1,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,    -1,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,    -1,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,    -1,   358,   359,   360,
     361,   362,    -1,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,    -1,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,    -1,   390,
     391,    -1,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,    -1,    -1,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,    -1,    -1,   420,
     421,   422,   423,   424,    -1,    -1,   427,   428,   429,   430,
     431,   432,   433,    -1,   435,   436,   437,   438,   439,   440,
      -1,    -1,   443,    -1,    -1,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    30,    31,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    -1,    53,    54,    55,    56,
      57,    58,    -1,    -1,    61,    62,    63,    64,    65,    -1,
      67,    68,    69,    70,    71,    -1,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    -1,    85,    86,
      87,    88,    89,    90,    -1,    92,    93,    94,    95,    -1,
      -1,    -1,    99,    -1,    -1,    -1,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,    -1,   114,    -1,   116,
     117,   118,   119,   120,   121,    -1,   123,   124,   125,   126,
     127,    -1,    -1,   130,   131,   132,   133,   134,    -1,   136,
     137,   138,    -1,   140,   141,   142,    -1,   144,   145,   146,
     147,   148,   149,   150,   151,   152,   153,    -1,   155,    -1,
     157,   158,   159,   160,    -1,   162,    -1,   164,   165,    -1,
     167,   168,   169,   170,   171,   172,    -1,   174,    -1,   176,
     177,    -1,   179,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   189,    -1,   191,   192,   193,   194,   195,   196,
      -1,   198,   199,   200,   201,   202,   203,   204,   205,   206,
      -1,   208,    -1,   210,   211,   212,   213,   214,   215,   216,
     217,   218,   219,    -1,    -1,   222,   223,   224,   225,    -1,
     227,   228,   229,    -1,    -1,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,    -1,   263,   264,   265,   266,
      -1,   268,   269,   270,   271,   272,   273,    -1,   275,   276,
      -1,    -1,   279,   280,   281,    -1,    -1,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,    -1,   301,   302,   303,   304,   305,   306,
     307,   308,   309,    -1,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,    -1,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,    -1,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
      -1,   358,   359,   360,   361,   362,    -1,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,    -1,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,    -1,   390,   391,    -1,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,    -1,    -1,   405,   406,
     407,   408,   409,    -1,   411,   412,   413,   414,   415,   416,
     417,    -1,    -1,   420,   421,   422,   423,   424,    -1,    -1,
     427,   428,   429,   430,   431,   432,   433,    -1,   435,   436,
     437,   438,   439,   440,    -1,    -1,   443,    -1,    -1,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    -1,    -1,    61,    62,
      63,    64,    65,    -1,    67,    68,    69,    70,    71,    -1,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    -1,    85,    86,    87,    88,    89,    90,    -1,    92,
      93,    94,    95,    -1,    -1,    -1,    99,    -1,    -1,    -1,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
      -1,   114,    -1,   116,   117,   118,   119,   120,   121,    -1,
     123,   124,   125,   126,   127,    -1,    -1,   130,   131,   132,
     133,   134,    -1,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,    -1,   155,    -1,   157,   158,   159,   160,    -1,   162,
      -1,   164,   165,    -1,   167,   168,   169,   170,   171,   172,
      -1,   174,    -1,   176,   177,    -1,   179,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,    -1,   191,   192,
     193,   194,   195,   196,    -1,   198,   199,   200,   201,   202,
     203,   204,   205,   206,    -1,   208,    -1,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   219,    -1,    -1,   222,
     223,   224,   225,    -1,   227,   228,   229,    -1,    -1,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,    -1,
     263,   264,   265,   266,    -1,   268,   269,   270,   271,   272,
     273,    -1,   275,   276,    -1,    -1,   279,   280,   281,    -1,
      -1,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,    -1,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,    -1,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,    -1,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,    -1,   358,   359,   360,   361,   362,
      -1,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,    -1,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,    -1,   390,   391,    -1,
     393,   394,   395,   396,   397,   398,   399,    -1,   401,   402,
      -1,    -1,   405,   406,   407,   408,   409,    -1,   411,   412,
     413,   414,   415,   416,   417,    -1,    -1,   420,   421,   422,
     423,   424,    -1,    -1,   427,   428,   429,   430,   431,   432,
     433,    -1,   435,   436,   437,   438,   439,   440,    -1,    -1,
     443,    -1,    -1,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    -1,    44,    45,    46,    47,    48,
      -1,    50,    51,    -1,    53,    54,    55,    56,    57,    58,
      -1,    -1,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    -1,    -1,    74,    75,    76,    77,    78,
      79,    -1,    81,    82,    83,    84,    85,    86,    87,    88,
      89,    90,    -1,    -1,    93,    94,    95,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,    -1,   114,    -1,   116,   117,   118,
     119,   120,   121,    -1,   123,   124,   125,   126,   127,    -1,
      -1,   130,   131,   132,   133,   134,    -1,   136,   137,   138,
      -1,   140,   141,   142,    -1,   144,   145,   146,   147,   148,
     149,   150,   151,   152,   153,    -1,   155,    -1,   157,   158,
     159,   160,    -1,   162,   163,   164,    -1,    -1,    -1,   168,
     169,   170,    -1,   172,    -1,   174,    -1,   176,   177,    -1,
     179,   180,   181,   182,   183,   184,    -1,   186,   187,   188,
     189,    -1,   191,   192,   193,   194,   195,   196,    -1,   198,
      -1,   200,   201,   202,   203,   204,   205,   206,    -1,   208,
      -1,   210,    -1,    -1,   213,    -1,   215,   216,   217,   218,
     219,    -1,    -1,   222,    -1,   224,    -1,    -1,   227,   228,
     229,    -1,    -1,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,    -1,   257,   258,
     259,   260,   261,    -1,   263,   264,    -1,   266,    -1,   268,
     269,   270,   271,   272,   273,    -1,   275,   276,    -1,    -1,
     279,   280,   281,    -1,    -1,   284,   285,    -1,   287,    -1,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,    -1,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,    -1,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,    -1,
     339,   340,    -1,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,    -1,   358,
     359,   360,   361,   362,    -1,   364,   365,   366,   367,   368,
      -1,   370,   371,   372,   373,    -1,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
      -1,   390,   391,    -1,   393,    -1,   395,   396,   397,   398,
     399,    -1,   401,   402,    -1,    -1,   405,   406,   407,   408,
     409,    -1,   411,   412,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,    -1,    -1,   427,   428,
     429,   430,   431,   432,   433,    -1,   435,    -1,   437,   438,
     439,   440,    -1,    -1,   443,    -1,    -1,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,    44,
      45,    46,    47,    48,    -1,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    -1,    -1,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    -1,    -1,    -1,
      75,    76,    77,    78,    79,    -1,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    -1,    -1,    93,    94,
      95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,    -1,   114,
      -1,   116,   117,   118,   119,   120,   121,    -1,   123,   124,
     125,   126,   127,    -1,    -1,   130,   131,   132,   133,   134,
      -1,   136,   137,   138,    -1,   140,   141,   142,    -1,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,    -1,
     155,    -1,   157,   158,   159,   160,    -1,   162,   163,   164,
      -1,    -1,    -1,   168,   169,   170,    -1,   172,    -1,   174,
      -1,   176,   177,    -1,   179,   180,   181,   182,   183,   184,
      -1,   186,   187,   188,   189,    -1,   191,   192,   193,   194,
     195,   196,    -1,   198,    -1,   200,   201,   202,   203,   204,
     205,   206,    -1,   208,    -1,   210,    -1,    -1,   213,    -1,
     215,   216,   217,   218,   219,    -1,    -1,   222,    -1,   224,
     225,    -1,   227,   228,   229,    -1,    -1,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,    -1,   257,   258,   259,   260,   261,    -1,   263,   264,
      -1,   266,    -1,   268,   269,   270,   271,   272,   273,    -1,
     275,   276,    -1,    -1,   279,   280,   281,    -1,    -1,   284,
     285,    -1,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,    -1,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,    -1,   339,   340,    -1,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,    -1,   358,   359,   360,   361,   362,    -1,   364,
     365,   366,   367,   368,    -1,   370,   371,   372,   373,    -1,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,    -1,   390,   391,    -1,   393,    -1,
     395,   396,   397,   398,   399,    -1,   401,   402,    -1,    -1,
     405,   406,   407,   408,   409,    -1,   411,   412,   413,   414,
     415,   416,   417,    -1,   419,   420,   421,   422,   423,   424,
      -1,    -1,   427,   428,   429,   430,   431,   432,   433,    -1,
     435,    -1,   437,   438,   439,   440,    -1,    -1,   443,    -1,
      -1,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    30,
      31,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    -1,    -1,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,    -1,   114,    -1,   116,   117,   118,   119,   120,
     121,    -1,   123,   124,   125,   126,   127,    -1,    -1,   130,
     131,   132,   133,   134,    -1,   136,   137,   138,    -1,   140,
     141,   142,    -1,   144,   145,   146,   147,   148,   149,   150,
     151,   152,   153,    -1,   155,    -1,   157,   158,   159,   160,
      -1,   162,    -1,   164,    -1,    -1,    -1,   168,   169,   170,
      -1,   172,    -1,   174,    -1,   176,   177,    -1,   179,   180,
     181,   182,   183,   184,    -1,   186,   187,   188,   189,    -1,
     191,   192,   193,   194,   195,   196,    -1,   198,    -1,   200,
     201,   202,   203,   204,   205,   206,    -1,   208,    -1,   210,
      -1,    -1,   213,    -1,   215,   216,   217,   218,   219,    -1,
      -1,   222,    -1,   224,    -1,    -1,   227,   228,   229,    -1,
      -1,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,    -1,   257,   258,   259,   260,
     261,    -1,   263,   264,    -1,   266,    -1,   268,   269,   270,
     271,   272,   273,    -1,   275,   276,    -1,    -1,   279,   280,
     281,    -1,    -1,   284,   285,    -1,   287,    -1,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,    -1,
     301,   302,   303,   304,   305,   306,   307,   308,   309,    -1,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,    -1,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,    -1,   339,   340,
      -1,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,    -1,   358,   359,   360,
     361,   362,    -1,   364,   365,   366,   367,   368,    -1,   370,
     371,   372,   373,    -1,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,    -1,   390,
     391,    -1,   393,    -1,   395,   396,   397,   398,   399,    -1,
     401,   402,    -1,    -1,   405,   406,   407,   408,   409,    -1,
     411,   412,   413,   414,   415,   416,   417,    -1,    -1,   420,
     421,   422,   423,   424,    -1,    -1,   427,   428,   429,   430,
     431,   432,   433,    -1,   435,    -1,   437,   438,   439,   440,
      -1,    -1,   443,    -1,    -1,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,     3,     4,    -1,    -1,
      -1,    -1,     9,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    -1,    44,    45,    46,
      47,    48,    -1,    50,    51,    -1,    53,    54,    55,    56,
      57,    58,    -1,    -1,    61,    62,    63,    64,    65,    -1,
      67,    68,    69,    70,    71,    -1,    -1,    -1,    75,    76,
      77,    78,    79,    -1,    81,    82,    83,    -1,    85,    86,
      87,    88,    89,    90,    -1,    -1,    93,    94,    95,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,    -1,   114,    -1,   116,
     117,   118,   119,   120,   121,    -1,   123,   124,   125,   126,
     127,    -1,    -1,   130,   131,   132,   133,   134,    -1,   136,
     137,   138,    -1,   140,   141,   142,    -1,   144,   145,   146,
     147,   148,   149,   150,   151,   152,   153,    -1,   155,    -1,
     157,   158,   159,   160,    -1,   162,    -1,   164,    -1,    -1,
      -1,   168,   169,   170,    -1,   172,    -1,   174,    -1,   176,
     177,    -1,   179,   180,   181,   182,   183,   184,    -1,   186,
     187,   188,   189,    -1,   191,   192,   193,   194,   195,   196,
      -1,   198,    -1,   200,   201,   202,   203,   204,   205,   206,
      -1,   208,    -1,   210,    -1,    -1,   213,    -1,   215,   216,
     217,   218,   219,    -1,    -1,   222,    -1,   224,    -1,    -1,
     227,   228,   229,    -1,    -1,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,    -1,
     257,   258,   259,   260,   261,    -1,   263,   264,    -1,   266,
      -1,   268,   269,   270,   271,   272,   273,    -1,   275,   276,
      -1,    -1,   279,   280,   281,    -1,    -1,   284,   285,    -1,
     287,    -1,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,    -1,   301,   302,   303,   304,   305,   306,
     307,   308,   309,    -1,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,    -1,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,    -1,   339,   340,    -1,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
      -1,   358,   359,   360,   361,   362,    -1,   364,   365,   366,
     367,   368,    -1,   370,   371,   372,   373,    -1,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,    -1,   390,   391,    -1,   393,    -1,   395,   396,
     397,   398,   399,    -1,   401,   402,    -1,    -1,   405,   406,
     407,   408,   409,    -1,   411,   412,   413,   414,   415,   416,
     417,    -1,    -1,   420,   421,   422,   423,   424,    -1,    -1,
     427,   428,   429,   430,   431,   432,   433,    -1,   435,    -1,
     437,   438,   439,   440,    -1,    -1,   443,    -1,    -1,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      -1,    44,    45,    46,    47,    48,    -1,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    -1,    -1,    61,    62,
      63,    64,    65,    -1,    67,    68,    69,    70,    71,    -1,
      -1,    -1,    75,    76,    77,    78,    79,    -1,    81,    82,
      83,    -1,    85,    86,    87,    88,    89,    90,    -1,    -1,
      93,    94,    95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
      -1,   114,    -1,   116,   117,   118,   119,   120,   121,    -1,
     123,   124,   125,   126,   127,    -1,    -1,   130,   131,   132,
     133,   134,    -1,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,    -1,   155,    -1,   157,   158,   159,   160,    -1,   162,
      -1,   164,    -1,    -1,    -1,   168,   169,   170,    -1,   172,
      -1,   174,    -1,   176,   177,    -1,   179,   180,   181,   182,
     183,   184,    -1,   186,   187,   188,   189,    -1,   191,   192,
     193,   194,   195,   196,    -1,   198,    -1,   200,   201,   202,
     203,   204,   205,   206,    -1,   208,    -1,   210,    -1,    -1,
     213,    -1,   215,   216,   217,   218,   219,    -1,    -1,   222,
      -1,   224,    -1,    -1,   227,   228,   229,    -1,    -1,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,    -1,   257,   258,   259,   260,   261,    -1,
     263,   264,    -1,   266,    -1,   268,   269,   270,   271,   272,
     273,    -1,   275,   276,    -1,    -1,   279,   280,   281,    -1,
      -1,   284,   285,    -1,   287,    -1,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,    -1,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,    -1,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,    -1,   339,   340,    -1,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,    -1,   358,   359,   360,   361,   362,
      -1,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,    -1,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,    -1,   390,   391,    -1,
     393,    -1,   395,   396,   397,   398,   399,    -1,   401,   402,
      -1,    -1,   405,   406,   407,   408,   409,    -1,   411,   412,
     413,   414,   415,   416,   417,    -1,    -1,   420,   421,   422,
     423,   424,    -1,    -1,   427,   428,   429,   430,   431,   432,
     433,    -1,   435,    -1,   437,   438,   439,   440,    -1,    -1,
     443,    -1,    -1,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    26,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    -1,    44,    45,    46,    47,    48,
      -1,    50,    51,    -1,    53,    54,    55,    56,    57,    58,
      -1,    -1,    61,    62,    63,    64,    65,    -1,    67,    68,
      69,    70,    71,    -1,    -1,    -1,    75,    76,    77,    78,
      79,    -1,    81,    82,    83,    -1,    85,    86,    87,    88,
      89,    90,    -1,    -1,    93,    94,    95,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,    -1,   114,    -1,   116,   117,   118,
     119,   120,   121,    -1,   123,   124,   125,   126,   127,    -1,
      -1,   130,   131,   132,   133,   134,    -1,   136,   137,   138,
      -1,   140,   141,   142,    -1,   144,   145,   146,   147,   148,
     149,   150,   151,   152,   153,    -1,   155,    -1,   157,   158,
     159,   160,    -1,   162,    -1,   164,    -1,    -1,    -1,   168,
     169,   170,    -1,   172,    -1,   174,    -1,   176,   177,    -1,
     179,   180,   181,   182,   183,   184,    -1,   186,   187,   188,
     189,    -1,   191,   192,   193,   194,   195,   196,    -1,   198,
      -1,   200,   201,   202,   203,   204,   205,   206,    -1,   208,
      -1,   210,    -1,    -1,   213,    -1,   215,   216,   217,   218,
     219,    -1,    -1,   222,    -1,   224,    -1,    -1,   227,   228,
     229,    -1,    -1,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,    -1,   257,   258,
     259,   260,   261,    -1,   263,   264,    -1,   266,    -1,   268,
     269,   270,   271,   272,   273,    -1,   275,   276,    -1,    -1,
     279,   280,   281,    -1,    -1,   284,   285,    -1,   287,    -1,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,    -1,   301,   302,   303,   304,   305,   306,   307,   308,
     309,    -1,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,    -1,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,    -1,
     339,   340,    -1,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,    -1,   358,
     359,   360,   361,   362,    -1,   364,   365,   366,   367,   368,
      -1,   370,   371,   372,   373,    -1,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
      -1,   390,   391,    -1,   393,    -1,   395,   396,   397,   398,
     399,    -1,   401,   402,    -1,    -1,   405,   406,   407,   408,
     409,    -1,   411,   412,   413,   414,   415,   416,   417,    -1,
      -1,   420,   421,   422,   423,   424,    -1,    -1,   427,   428,
     429,   430,   431,   432,   433,    -1,   435,    -1,   437,   438,
     439,   440,    -1,    -1,   443,    -1,    -1,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,    44,
      45,    46,    47,    48,    -1,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    -1,    -1,    61,    62,    63,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    -1,    -1,
      75,    76,    77,    78,    79,    -1,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    -1,    -1,    93,    94,
      95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,    -1,   114,
      -1,   116,   117,   118,   119,   120,   121,    -1,   123,   124,
     125,   126,   127,    -1,    -1,   130,   131,   132,   133,   134,
      -1,   136,   137,   138,    -1,   140,   141,   142,    -1,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,    -1,
     155,    -1,   157,   158,   159,   160,    -1,   162,    -1,   164,
      -1,    -1,    -1,   168,   169,   170,    -1,   172,    -1,   174,
      -1,   176,   177,    -1,   179,   180,   181,   182,   183,   184,
      -1,   186,   187,   188,   189,    -1,   191,   192,   193,   194,
     195,   196,    -1,   198,    -1,   200,   201,   202,   203,   204,
     205,   206,    -1,   208,    -1,   210,    -1,    -1,   213,    -1,
     215,   216,   217,   218,   219,    -1,    -1,   222,    -1,   224,
      -1,    -1,   227,   228,   229,    -1,    -1,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,    -1,   257,   258,   259,   260,   261,    -1,   263,   264,
      -1,   266,    -1,   268,   269,   270,   271,   272,   273,    -1,
     275,   276,    -1,   278,   279,   280,   281,    -1,    -1,   284,
     285,    -1,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,    -1,   301,   302,   303,   304,
     305,   306,   307,   308,   309,    -1,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,    -1,   339,   340,    -1,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,    -1,   358,   359,   360,   361,   362,    -1,   364,
     365,   366,   367,   368,    -1,   370,   371,   372,   373,    -1,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,    -1,   390,   391,    -1,   393,    -1,
     395,   396,   397,   398,   399,    -1,   401,   402,    -1,    -1,
     405,   406,   407,   408,   409,    -1,   411,   412,   413,   414,
     415,   416,   417,    -1,    -1,   420,   421,   422,   423,   424,
      -1,    -1,   427,   428,   429,   430,   431,   432,   433,    -1,
     435,    -1,   437,   438,   439,   440,    -1,    -1,   443,    -1,
      -1,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    -1,    -1,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,    -1,   114,    -1,   116,   117,   118,   119,   120,
     121,    -1,   123,   124,   125,   126,   127,    -1,    -1,   130,
     131,   132,   133,   134,    -1,   136,   137,   138,    -1,   140,
     141,   142,    -1,   144,   145,   146,   147,   148,   149,   150,
     151,   152,   153,    -1,   155,    -1,   157,   158,   159,   160,
      -1,   162,    -1,   164,    -1,    -1,    -1,   168,   169,   170,
      -1,   172,    -1,   174,    -1,   176,   177,    -1,   179,   180,
     181,   182,   183,   184,    -1,   186,   187,   188,   189,    -1,
     191,   192,   193,   194,   195,   196,    -1,   198,    -1,   200,
     201,   202,   203,   204,   205,   206,    -1,   208,    -1,   210,
      -1,    -1,   213,    -1,   215,   216,   217,   218,   219,    -1,
      -1,   222,    -1,   224,    -1,    -1,   227,   228,   229,    -1,
      -1,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,    -1,   257,   258,   259,   260,
     261,    -1,   263,   264,    -1,   266,    -1,   268,   269,   270,
     271,   272,   273,    -1,   275,   276,    -1,   278,   279,   280,
     281,    -1,    -1,   284,   285,    -1,   287,    -1,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,    -1,
     301,   302,   303,   304,   305,   306,   307,   308,   309,    -1,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,    -1,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,    -1,   339,   340,
      -1,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,    -1,   358,   359,   360,
     361,   362,    -1,   364,   365,   366,   367,   368,    -1,   370,
     371,   372,   373,    -1,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,    -1,   390,
     391,    -1,   393,    -1,   395,   396,   397,   398,   399,    -1,
     401,   402,    -1,    -1,   405,   406,   407,   408,   409,    -1,
     411,   412,   413,   414,   415,   416,   417,    -1,    -1,   420,
     421,   422,   423,   424,    -1,    -1,   427,   428,   429,   430,
     431,   432,   433,    -1,   435,    -1,   437,   438,   439,   440,
      -1,    -1,   443,    -1,    -1,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    26,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    -1,    44,    45,    46,
      47,    48,    -1,    50,    51,    -1,    53,    54,    55,    56,
      57,    58,    -1,    -1,    61,    62,    63,    64,    65,    -1,
      67,    68,    69,    70,    71,    -1,    -1,    -1,    75,    76,
      77,    78,    79,    -1,    81,    82,    83,    -1,    85,    86,
      87,    88,    89,    90,    -1,    -1,    93,    94,    95,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,    -1,   114,    -1,   116,
     117,   118,   119,   120,   121,    -1,   123,   124,   125,   126,
     127,    -1,    -1,   130,   131,   132,   133,   134,    -1,   136,
     137,   138,    -1,   140,   141,   142,    -1,   144,   145,   146,
     147,   148,   149,   150,   151,   152,   153,    -1,   155,    -1,
     157,   158,   159,   160,    -1,   162,    -1,   164,    -1,    -1,
      -1,   168,   169,   170,    -1,   172,    -1,   174,    -1,   176,
     177,    -1,   179,   180,   181,   182,   183,   184,    -1,   186,
     187,   188,   189,    -1,   191,   192,   193,   194,   195,   196,
      -1,   198,    -1,   200,   201,   202,   203,   204,   205,   206,
      -1,   208,    -1,   210,    -1,    -1,   213,    -1,   215,   216,
     217,   218,   219,    -1,    -1,   222,    -1,   224,    -1,    -1,
     227,   228,   229,    -1,    -1,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,    -1,
     257,   258,   259,   260,   261,    -1,   263,   264,    -1,   266,
      -1,   268,   269,   270,   271,   272,   273,    -1,   275,   276,
      -1,    -1,   279,   280,   281,    -1,    -1,   284,   285,    -1,
     287,    -1,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,    -1,   301,   302,   303,   304,   305,   306,
     307,   308,   309,    -1,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,    -1,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,    -1,   339,   340,    -1,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
      -1,   358,   359,   360,   361,   362,    -1,   364,   365,   366,
     367,   368,    -1,   370,   371,   372,   373,    -1,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,    -1,   390,   391,    -1,   393,    -1,   395,   396,
     397,   398,   399,    -1,   401,   402,    -1,    -1,   405,   406,
     407,   408,   409,    -1,   411,   412,   413,   414,   415,   416,
     417,    -1,    -1,   420,   421,   422,   423,   424,    -1,    -1,
     427,   428,   429,   430,   431,   432,   433,    -1,   435,    -1,
     437,   438,   439,   440,    -1,    -1,   443,    -1,    -1,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      -1,    44,    45,    46,    47,    48,    -1,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    -1,    -1,    61,    62,
      63,    64,    65,    -1,    67,    68,    69,    70,    71,    -1,
      -1,    -1,    75,    76,    77,    78,    79,    -1,    81,    82,
      83,    -1,    85,    86,    87,    88,    89,    90,    -1,    -1,
      93,    94,    95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
      -1,   114,    -1,   116,   117,   118,   119,   120,   121,    -1,
     123,   124,   125,   126,   127,    -1,    -1,   130,   131,   132,
     133,   134,    -1,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,    -1,   155,    -1,   157,   158,   159,   160,    -1,   162,
      -1,   164,    -1,    -1,    -1,   168,   169,   170,    -1,   172,
      -1,   174,    -1,   176,   177,    -1,   179,   180,   181,   182,
     183,   184,    -1,   186,   187,   188,   189,    -1,   191,   192,
     193,   194,   195,   196,    -1,   198,    -1,   200,   201,   202,
     203,   204,   205,   206,    -1,   208,    -1,   210,    -1,    -1,
     213,    -1,   215,   216,   217,   218,   219,    -1,    -1,   222,
      -1,   224,    -1,    -1,   227,   228,   229,    -1,    -1,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,    -1,   257,   258,   259,   260,   261,    -1,
     263,   264,    -1,   266,    -1,   268,   269,   270,   271,   272,
     273,    -1,   275,   276,    -1,    -1,   279,   280,   281,    -1,
      -1,   284,   285,    -1,   287,    -1,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,    -1,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,    -1,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,    -1,   339,   340,    -1,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,    -1,   358,   359,   360,   361,   362,
      -1,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,    -1,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,    -1,   390,   391,   392,
     393,    -1,   395,   396,   397,   398,   399,    -1,   401,   402,
      -1,    -1,   405,   406,   407,   408,   409,    -1,   411,   412,
     413,   414,   415,   416,   417,    -1,    -1,   420,   421,   422,
     423,   424,    -1,    -1,   427,   428,   429,   430,   431,   432,
     433,    -1,   435,    -1,   437,   438,   439,   440,    -1,    -1,
     443,    -1,    -1,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    35,    -1,    37,    38,
      -1,    40,    41,    42,    -1,    44,    45,    46,    47,    48,
      -1,    50,    51,    -1,    53,    54,    55,    56,    57,    58,
      -1,    -1,    61,    62,    63,    64,    65,    -1,    67,    68,
      69,    70,    71,    -1,    -1,    -1,    75,    76,    77,    78,
      79,    -1,    81,    82,    83,    -1,    85,    86,    87,    88,
      89,    90,    -1,    -1,    93,    94,    95,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,    -1,   114,    -1,   116,   117,   118,
     119,   120,   121,    -1,   123,   124,   125,   126,   127,    -1,
      -1,   130,   131,   132,   133,   134,    -1,   136,   137,   138,
      -1,   140,   141,   142,    -1,   144,   145,   146,   147,   148,
     149,   150,   151,   152,   153,    -1,   155,    -1,   157,   158,
     159,   160,    -1,   162,    -1,   164,    -1,    -1,    -1,   168,
     169,   170,    -1,   172,    -1,   174,    -1,   176,   177,    -1,
     179,   180,   181,   182,   183,   184,    -1,   186,   187,   188,
     189,    -1,   191,   192,   193,   194,   195,   196,    -1,   198,
      -1,   200,   201,   202,   203,   204,   205,   206,    -1,   208,
      -1,   210,    -1,    -1,   213,    -1,   215,   216,   217,   218,
     219,    -1,    -1,   222,    -1,   224,    -1,    -1,   227,   228,
     229,    -1,    -1,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,    -1,   257,   258,
     259,   260,   261,    -1,   263,   264,    -1,   266,    -1,   268,
     269,   270,   271,   272,   273,    -1,   275,   276,    -1,    -1,
     279,   280,   281,    -1,    -1,   284,   285,    -1,   287,    -1,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,    -1,   301,   302,   303,   304,   305,   306,   307,   308,
     309,    -1,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,    -1,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,    -1,
     339,   340,    -1,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,    -1,   358,
     359,   360,   361,   362,    -1,   364,   365,   366,   367,   368,
      -1,   370,   371,   372,   373,    -1,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
      -1,   390,   391,    -1,   393,    -1,   395,   396,   397,   398,
     399,    -1,   401,   402,    -1,    -1,   405,   406,   407,   408,
     409,    -1,   411,   412,   413,   414,   415,   416,   417,    -1,
      -1,   420,   421,   422,   423,   424,    -1,    -1,   427,   428,
     429,   430,   431,   432,   433,    -1,   435,    -1,   437,   438,
     439,   440,    -1,    -1,   443,    -1,    -1,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      35,    -1,    37,    38,    -1,    40,    41,    42,    -1,    44,
      45,    46,    47,    48,    -1,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    -1,    -1,    61,    62,    63,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    -1,    -1,
      75,    76,    77,    78,    79,    -1,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    -1,    -1,    93,    94,
      95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,    -1,   114,
      -1,   116,   117,   118,   119,   120,   121,    -1,   123,   124,
     125,   126,   127,    -1,    -1,   130,   131,   132,   133,   134,
      -1,   136,   137,   138,    -1,   140,   141,   142,    -1,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,    -1,
     155,    -1,   157,   158,   159,   160,    -1,   162,    -1,   164,
      -1,    -1,    -1,   168,   169,   170,    -1,   172,    -1,   174,
      -1,   176,   177,    -1,   179,   180,   181,   182,   183,   184,
      -1,   186,   187,   188,   189,    -1,   191,   192,   193,   194,
     195,   196,    -1,   198,    -1,   200,   201,   202,   203,   204,
     205,   206,    -1,   208,    -1,   210,    -1,    -1,   213,    -1,
     215,   216,   217,   218,   219,    -1,    -1,   222,    -1,   224,
      -1,    -1,   227,   228,   229,    -1,    -1,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,    -1,   257,   258,   259,   260,   261,    -1,   263,   264,
      -1,   266,    -1,   268,   269,   270,   271,   272,   273,    -1,
     275,   276,    -1,    -1,   279,   280,   281,    -1,    -1,   284,
     285,    -1,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,    -1,   301,   302,   303,   304,
     305,   306,   307,   308,   309,    -1,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,    -1,   339,   340,    -1,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,    -1,   358,   359,   360,   361,   362,    -1,   364,
     365,   366,   367,   368,    -1,   370,   371,   372,   373,    -1,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,    -1,   390,   391,    -1,   393,    -1,
     395,   396,   397,   398,   399,    -1,   401,   402,    -1,    -1,
     405,   406,   407,   408,   409,    -1,   411,   412,   413,   414,
     415,   416,   417,    -1,    -1,   420,   421,   422,   423,   424,
      -1,    -1,   427,   428,   429,   430,   431,   432,   433,    -1,
     435,    -1,   437,   438,   439,   440,    -1,    -1,   443,    -1,
      -1,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    -1,    -1,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,    -1,   114,    -1,   116,   117,   118,   119,   120,
     121,    -1,   123,   124,   125,   126,   127,    -1,    -1,   130,
     131,   132,   133,   134,    -1,   136,   137,   138,    -1,   140,
     141,   142,    -1,   144,   145,   146,   147,   148,   149,   150,
     151,   152,   153,    -1,   155,    -1,   157,   158,   159,   160,
      -1,   162,    -1,   164,    -1,    -1,    -1,   168,   169,   170,
      -1,   172,    -1,   174,    -1,   176,   177,    -1,   179,   180,
     181,   182,   183,   184,    -1,   186,   187,   188,   189,    -1,
     191,   192,   193,   194,   195,   196,    -1,   198,    -1,   200,
     201,   202,   203,   204,   205,   206,    -1,   208,    -1,   210,
      -1,    -1,   213,    -1,   215,   216,   217,   218,   219,    -1,
      -1,   222,    -1,   224,    -1,    -1,   227,   228,   229,    -1,
      -1,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,    -1,   257,   258,   259,   260,
     261,    -1,   263,   264,    -1,   266,    -1,   268,   269,   270,
     271,   272,   273,    -1,   275,   276,    -1,    -1,   279,   280,
     281,    -1,    -1,   284,   285,    -1,   287,    -1,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,    -1,
     301,   302,   303,   304,   305,   306,   307,   308,   309,    -1,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,    -1,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,    -1,   339,   340,
      -1,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,    -1,   358,   359,   360,
     361,   362,    -1,   364,   365,   366,   367,   368,    -1,   370,
     371,   372,   373,    -1,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,    -1,   390,
     391,    -1,   393,    -1,   395,   396,   397,   398,   399,    -1,
     401,   402,    -1,    -1,   405,   406,   407,   408,   409,    -1,
     411,   412,   413,   414,   415,   416,   417,    -1,    -1,   420,
     421,   422,   423,   424,    -1,    -1,   427,   428,   429,   430,
     431,   432,   433,    -1,   435,    -1,   437,   438,   439,   440,
      -1,    -1,   443,    -1,    -1,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    -1,    44,    45,    46,
      47,    48,    -1,    50,    51,    -1,    53,    54,    55,    56,
      57,    58,    -1,    -1,    61,    62,    63,    64,    65,    -1,
      67,    68,    69,    70,    71,    -1,    -1,    -1,    75,    76,
      77,    78,    79,    -1,    81,    82,    83,    -1,    85,    86,
      87,    88,    89,    90,    -1,    -1,    93,    94,    95,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,    -1,   114,    -1,   116,
     117,   118,   119,   120,   121,    -1,   123,   124,   125,   126,
     127,    -1,    -1,   130,   131,   132,   133,   134,    -1,   136,
     137,   138,    -1,   140,   141,   142,    -1,   144,   145,   146,
     147,   148,   149,   150,   151,   152,   153,    -1,   155,    -1,
     157,   158,   159,   160,    -1,   162,    -1,   164,    -1,    -1,
      -1,   168,   169,   170,    -1,   172,    -1,   174,    -1,   176,
     177,    -1,   179,   180,   181,   182,   183,   184,    -1,   186,
     187,   188,   189,    -1,   191,   192,   193,   194,   195,   196,
      -1,   198,    -1,   200,   201,   202,   203,   204,   205,   206,
      -1,   208,    -1,   210,    -1,    -1,   213,    -1,   215,   216,
     217,   218,   219,    -1,    -1,   222,    -1,   224,    -1,    -1,
     227,   228,   229,    -1,    -1,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,    -1,
     257,   258,   259,   260,   261,    -1,   263,   264,    -1,   266,
      -1,   268,   269,   270,   271,   272,   273,    -1,   275,   276,
      -1,    -1,   279,   280,   281,    -1,    -1,   284,   285,    -1,
     287,    -1,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,    -1,   301,   302,   303,   304,   305,   306,
     307,   308,   309,    -1,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,    -1,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,    -1,   339,   340,    -1,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
      -1,   358,   359,   360,   361,   362,    -1,   364,   365,   366,
     367,   368,    -1,   370,   371,   372,   373,    -1,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,    -1,   390,   391,    -1,   393,    -1,   395,   396,
     397,   398,   399,    -1,   401,   402,    -1,    -1,   405,   406,
     407,   408,   409,    -1,   411,   412,   413,   414,   415,   416,
     417,    -1,    -1,   420,   421,   422,   423,   424,    -1,    -1,
     427,   428,   429,   430,   431,   432,   433,    -1,   435,    -1,
     437,   438,   439,   440,    -1,    -1,   443,    -1,    -1,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      -1,    44,    45,    46,    47,    48,    -1,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    -1,    -1,    61,    62,
      63,    64,    65,    -1,    67,    68,    69,    70,    71,    -1,
      -1,    -1,    75,    76,    77,    78,    79,    -1,    81,    82,
      83,    -1,    85,    86,    87,    88,    89,    90,    -1,    -1,
      93,    94,    95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
      -1,   114,    -1,   116,   117,   118,   119,   120,   121,    -1,
     123,   124,   125,   126,   127,    -1,    -1,   130,   131,   132,
     133,   134,    -1,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,    -1,   155,    -1,   157,   158,   159,   160,    -1,   162,
      -1,   164,    -1,    -1,    -1,   168,   169,   170,    -1,   172,
      -1,   174,    -1,   176,   177,    -1,   179,   180,   181,   182,
     183,   184,    -1,   186,   187,   188,   189,    -1,   191,   192,
     193,   194,   195,   196,    -1,   198,    -1,   200,   201,   202,
     203,   204,   205,   206,    -1,   208,    -1,   210,    -1,    -1,
     213,    -1,   215,   216,   217,   218,   219,    -1,    -1,   222,
      -1,   224,    -1,    -1,   227,   228,   229,    -1,    -1,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,    -1,   257,   258,   259,   260,   261,    -1,
     263,   264,    -1,   266,    -1,   268,   269,   270,   271,   272,
     273,    -1,   275,   276,    -1,    -1,   279,   280,   281,    -1,
      -1,   284,   285,    -1,   287,    -1,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,    -1,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,    -1,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,    -1,   339,   340,    -1,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,    -1,   358,   359,   360,   361,   362,
      -1,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,    -1,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,    -1,   390,   391,    -1,
     393,    -1,   395,   396,   397,   398,   399,    -1,   401,   402,
      -1,    -1,   405,   406,   407,   408,   409,    -1,   411,   412,
     413,   414,   415,   416,   417,    -1,    -1,   420,   421,   422,
     423,   424,    -1,    -1,   427,   428,   429,   430,   431,   432,
     433,    -1,   435,    -1,   437,   438,   439,   440,    -1,    -1,
     443,    -1,    -1,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    -1,    44,    45,    46,    47,    48,
      -1,    50,    51,    -1,    53,    54,    55,    56,    57,    58,
      -1,    -1,    61,    62,    63,    64,    65,    -1,    67,    68,
      69,    70,    71,    -1,    -1,    -1,    75,    76,    77,    78,
      79,    -1,    81,    82,    83,    -1,    85,    86,    87,    88,
      89,    90,    -1,    -1,    93,    94,    95,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,    -1,   114,    -1,   116,   117,   118,
     119,   120,   121,    -1,   123,   124,   125,   126,   127,    -1,
      -1,   130,   131,   132,   133,   134,    -1,   136,   137,   138,
      -1,   140,   141,   142,    -1,   144,   145,   146,   147,   148,
     149,   150,   151,   152,   153,    -1,   155,    -1,   157,   158,
     159,   160,    -1,   162,    -1,   164,    -1,    -1,    -1,   168,
     169,   170,    -1,   172,    -1,   174,    -1,   176,   177,    -1,
     179,   180,   181,   182,   183,   184,    -1,   186,   187,   188,
     189,    -1,   191,   192,   193,   194,   195,   196,    -1,   198,
      -1,   200,   201,   202,   203,   204,   205,   206,    -1,   208,
      -1,   210,    -1,    -1,   213,    -1,   215,   216,   217,   218,
     219,    -1,    -1,   222,    -1,   224,    -1,    -1,   227,   228,
     229,    -1,    -1,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,    -1,   257,   258,
     259,   260,   261,    -1,   263,   264,    -1,   266,    -1,   268,
     269,   270,   271,   272,   273,    -1,   275,   276,    -1,    -1,
     279,   280,   281,    -1,    -1,   284,   285,    -1,   287,    -1,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,    -1,   301,   302,   303,   304,   305,   306,   307,   308,
     309,    -1,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,    -1,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,    -1,
     339,   340,    -1,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,    -1,   358,
     359,   360,   361,   362,    -1,   364,   365,   366,   367,   368,
      -1,   370,   371,   372,   373,    -1,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
      -1,   390,   391,    -1,   393,    -1,   395,   396,   397,   398,
     399,    -1,   401,   402,    -1,    -1,   405,   406,   407,   408,
     409,    -1,   411,   412,   413,   414,   415,   416,   417,    -1,
      -1,   420,   421,   422,   423,   424,    -1,    -1,   427,   428,
     429,   430,   431,   432,   433,    -1,   435,    -1,   437,   438,
     439,   440,    -1,    -1,   443,    -1,    -1,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,    44,
      45,    46,    47,    48,    -1,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    -1,    -1,    61,    62,    63,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    -1,    -1,
      75,    76,    77,    78,    79,    -1,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    -1,    -1,    93,    94,
      95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,    -1,   114,
      -1,   116,   117,   118,   119,   120,   121,    -1,   123,   124,
     125,   126,   127,    -1,    -1,   130,   131,   132,   133,   134,
      -1,   136,   137,   138,    -1,   140,   141,   142,    -1,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,    -1,
     155,    -1,   157,   158,   159,   160,    -1,   162,    -1,   164,
      -1,    -1,    -1,   168,   169,   170,    -1,   172,    -1,   174,
      -1,   176,   177,    -1,   179,   180,   181,   182,   183,   184,
      -1,   186,   187,   188,   189,    -1,   191,   192,   193,   194,
     195,   196,    -1,   198,    -1,   200,   201,   202,   203,   204,
     205,   206,    -1,   208,    -1,   210,    -1,    -1,   213,    -1,
     215,   216,   217,   218,   219,    -1,    -1,   222,    -1,   224,
      -1,    -1,   227,   228,   229,    -1,    -1,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,    -1,   257,   258,   259,   260,   261,    -1,   263,   264,
      -1,   266,    -1,   268,   269,   270,   271,   272,   273,    -1,
     275,   276,    -1,    -1,   279,   280,   281,    -1,    -1,   284,
     285,    -1,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,    -1,   301,   302,   303,   304,
     305,   306,   307,   308,   309,    -1,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,    -1,   339,   340,    -1,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,    -1,   358,   359,   360,   361,   362,    -1,   364,
     365,   366,   367,   368,    -1,   370,   371,   372,   373,    -1,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,    -1,   390,   391,    -1,   393,    -1,
     395,   396,   397,   398,   399,    -1,   401,   402,    -1,    -1,
     405,   406,   407,   408,   409,    -1,   411,   412,   413,   414,
     415,   416,   417,    -1,    -1,   420,   421,   422,   423,   424,
      -1,    -1,   427,   428,   429,   430,   431,   432,   433,    -1,
     435,    -1,   437,   438,   439,   440,    -1,    -1,   443,    -1,
      -1,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    -1,    -1,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,    -1,   114,    -1,   116,   117,   118,   119,   120,
     121,    -1,   123,   124,   125,   126,   127,    -1,    -1,   130,
     131,   132,   133,   134,    -1,   136,   137,   138,    -1,   140,
     141,   142,    -1,   144,   145,   146,   147,   148,   149,   150,
     151,   152,   153,    -1,   155,    -1,   157,   158,   159,   160,
      -1,   162,    -1,   164,    -1,    -1,    -1,   168,   169,   170,
      -1,   172,    -1,   174,    -1,   176,   177,    -1,   179,   180,
     181,   182,   183,   184,    -1,   186,   187,   188,   189,    -1,
     191,   192,   193,   194,   195,   196,    -1,   198,    -1,   200,
     201,   202,   203,   204,   205,   206,    -1,   208,    -1,   210,
      -1,    -1,   213,    -1,   215,   216,   217,   218,   219,    -1,
      -1,   222,    -1,   224,    -1,    -1,   227,   228,   229,    -1,
      -1,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,    -1,   257,   258,   259,   260,
     261,    -1,   263,   264,    -1,   266,    -1,   268,   269,   270,
     271,   272,   273,    -1,   275,   276,    -1,    -1,   279,   280,
     281,    -1,    -1,   284,   285,    -1,   287,    -1,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,    -1,
     301,   302,   303,   304,   305,   306,   307,   308,   309,    -1,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,    -1,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,    -1,   339,   340,
      -1,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,    -1,   358,   359,   360,
     361,   362,    -1,   364,   365,   366,   367,   368,    -1,   370,
     371,   372,   373,    -1,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,    -1,   390,
     391,    -1,   393,    -1,   395,   396,   397,   398,   399,    -1,
     401,   402,    -1,    -1,   405,   406,   407,   408,   409,    -1,
     411,   412,   413,   414,   415,   416,   417,    -1,    -1,   420,
     421,   422,   423,   424,    -1,    -1,   427,   428,   429,   430,
     431,   432,   433,    -1,   435,    -1,   437,   438,   439,   440,
      -1,    -1,   443,    -1,    -1,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    -1,    44,    45,    46,
      47,    48,    -1,    50,    51,    -1,    53,    54,    55,    56,
      57,    58,    -1,    -1,    61,    62,    63,    64,    65,    -1,
      67,    68,    69,    70,    71,    -1,    -1,    -1,    75,    76,
      77,    78,    79,    -1,    81,    82,    83,    -1,    85,    86,
      87,    88,    89,    90,    -1,    -1,    93,    94,    95,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,    -1,   114,    -1,   116,
     117,   118,   119,   120,   121,    -1,   123,   124,   125,   126,
     127,    -1,    -1,   130,   131,   132,   133,   134,    -1,   136,
     137,   138,    -1,   140,   141,   142,    -1,   144,   145,   146,
     147,   148,   149,   150,   151,   152,   153,    -1,   155,    -1,
     157,   158,   159,   160,    -1,   162,    -1,   164,    -1,    -1,
      -1,   168,   169,   170,    -1,   172,    -1,   174,    -1,   176,
     177,    -1,   179,   180,   181,   182,   183,   184,    -1,   186,
     187,   188,   189,    -1,   191,   192,   193,   194,   195,   196,
      -1,   198,    -1,   200,   201,   202,   203,   204,   205,   206,
      -1,   208,    -1,   210,    -1,    -1,   213,    -1,   215,   216,
     217,   218,   219,    -1,    -1,   222,    -1,   224,    -1,    -1,
     227,   228,   229,    -1,    -1,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,    -1,
     257,   258,   259,   260,   261,    -1,   263,   264,    -1,   266,
      -1,   268,   269,   270,   271,   272,   273,    -1,   275,   276,
      -1,    -1,   279,   280,   281,    -1,    -1,   284,   285,    -1,
     287,    -1,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,    -1,   301,   302,   303,   304,   305,   306,
     307,   308,   309,    -1,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,    -1,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,    -1,   339,   340,    -1,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
      -1,   358,   359,   360,   361,   362,    -1,   364,   365,   366,
     367,   368,    -1,   370,   371,   372,   373,    -1,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,    -1,   390,   391,    -1,   393,    -1,   395,   396,
     397,   398,   399,    -1,   401,   402,    -1,    -1,   405,   406,
     407,   408,   409,    -1,   411,   412,   413,   414,   415,   416,
     417,    -1,    -1,   420,   421,   422,   423,   424,    -1,    -1,
     427,   428,   429,   430,   431,   432,   433,    -1,   435,    -1,
     437,   438,   439,   440,    -1,    -1,   443,    -1,    -1,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      -1,    44,    45,    46,    47,    48,    -1,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    -1,    -1,    61,    62,
      63,    64,    65,    -1,    67,    68,    69,    70,    71,    -1,
      -1,    -1,    75,    76,    77,    78,    79,    -1,    81,    82,
      83,    -1,    85,    86,    87,    88,    89,    90,    -1,    -1,
      93,    94,    95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
      -1,   114,    -1,   116,   117,   118,   119,   120,   121,    -1,
     123,   124,   125,   126,   127,    -1,    -1,   130,   131,   132,
     133,   134,    -1,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,    -1,   155,    -1,   157,   158,   159,   160,    -1,   162,
      -1,   164,    -1,    -1,    -1,   168,   169,   170,    -1,   172,
      -1,   174,    -1,   176,   177,    -1,   179,   180,   181,   182,
     183,   184,    -1,   186,   187,   188,   189,    -1,   191,   192,
     193,   194,   195,   196,    -1,   198,    -1,   200,   201,   202,
     203,   204,   205,   206,    -1,   208,    -1,   210,    -1,    -1,
     213,    -1,   215,   216,   217,   218,   219,    -1,    -1,   222,
      -1,   224,    -1,    -1,   227,   228,   229,    -1,    -1,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,    -1,   257,   258,   259,   260,   261,    -1,
     263,   264,    -1,   266,    -1,   268,   269,   270,   271,   272,
     273,    -1,   275,   276,    -1,    -1,   279,   280,   281,    -1,
      -1,   284,   285,    -1,   287,    -1,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,    -1,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,    -1,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,    -1,   339,   340,    -1,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,    -1,   358,   359,   360,   361,   362,
      -1,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,    -1,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,    -1,   390,   391,    -1,
     393,    -1,   395,   396,   397,   398,   399,    -1,   401,   402,
      -1,    -1,   405,   406,   407,   408,   409,    -1,   411,   412,
     413,   414,   415,   416,   417,    -1,    -1,   420,   421,   422,
     423,   424,    -1,    -1,   427,   428,   429,   430,   431,   432,
     433,    -1,   435,    -1,   437,   438,   439,   440,    -1,    -1,
     443,    -1,    -1,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    -1,    44,    45,    46,    47,    48,
      -1,    50,    51,    -1,    53,    54,    55,    56,    57,    58,
      -1,    -1,    61,    62,    63,    64,    65,    -1,    67,    68,
      69,    70,    71,    -1,    -1,    -1,    75,    76,    77,    78,
      79,    -1,    81,    82,    83,    -1,    85,    86,    87,    88,
      89,    90,    -1,    -1,    93,    94,    95,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,    -1,   114,    -1,   116,   117,   118,
     119,   120,   121,    -1,   123,   124,   125,   126,   127,    -1,
      -1,   130,   131,   132,   133,   134,    -1,   136,   137,   138,
      -1,   140,   141,   142,    -1,   144,   145,   146,   147,   148,
     149,   150,   151,   152,   153,    -1,   155,    -1,   157,   158,
     159,   160,    -1,   162,    -1,   164,    -1,    -1,    -1,   168,
     169,   170,    -1,   172,    -1,   174,    -1,   176,   177,    -1,
     179,   180,   181,   182,   183,   184,    -1,   186,   187,   188,
     189,    -1,   191,   192,   193,   194,   195,   196,    -1,   198,
      -1,   200,   201,   202,   203,   204,   205,   206,    -1,   208,
      -1,   210,    -1,    -1,   213,    -1,   215,   216,   217,   218,
     219,    -1,    -1,   222,    -1,   224,    -1,    -1,   227,   228,
     229,    -1,    -1,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,    -1,   257,   258,
     259,   260,   261,    -1,   263,   264,    -1,   266,    -1,   268,
     269,   270,   271,   272,   273,    -1,   275,   276,    -1,    -1,
     279,   280,   281,    -1,    -1,   284,   285,    -1,   287,    -1,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,    -1,   301,   302,   303,   304,   305,   306,   307,   308,
     309,    -1,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,    -1,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,    -1,
     339,   340,    -1,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,    -1,   358,
     359,   360,   361,   362,    -1,   364,   365,   366,   367,   368,
      -1,   370,   371,   372,   373,    -1,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
      -1,   390,   391,    -1,   393,    -1,   395,   396,   397,   398,
     399,    -1,   401,   402,    -1,    -1,   405,   406,   407,   408,
     409,    -1,   411,   412,   413,   414,   415,   416,   417,    -1,
      -1,   420,   421,   422,   423,   424,    -1,    -1,   427,   428,
     429,   430,   431,   432,   433,    -1,   435,    -1,   437,   438,
     439,   440,    -1,    -1,   443,    -1,    -1,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,    44,
      45,    46,    47,    48,    -1,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    -1,    -1,    61,    62,    63,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    -1,    -1,
      75,    76,    77,    78,    79,    -1,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    -1,    -1,    93,    94,
      95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,    -1,   114,
      -1,   116,   117,   118,   119,   120,   121,    -1,   123,   124,
     125,   126,   127,    -1,    -1,   130,   131,   132,   133,   134,
      -1,   136,   137,   138,    -1,   140,   141,   142,    -1,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,    -1,
     155,    -1,   157,   158,   159,   160,    -1,   162,    -1,   164,
      -1,    -1,    -1,   168,   169,   170,    -1,   172,    -1,   174,
      -1,   176,   177,    -1,   179,   180,   181,   182,   183,   184,
      -1,   186,   187,   188,   189,    -1,   191,   192,   193,   194,
     195,   196,    -1,   198,    -1,   200,   201,   202,   203,   204,
     205,   206,    -1,   208,    -1,   210,    -1,    -1,   213,    -1,
     215,   216,   217,   218,   219,    -1,    -1,   222,    -1,   224,
      -1,    -1,   227,   228,   229,    -1,    -1,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,    -1,   257,   258,   259,   260,   261,    -1,   263,   264,
      -1,   266,    -1,   268,   269,   270,   271,   272,   273,    -1,
     275,   276,    -1,    -1,   279,   280,   281,    -1,    -1,   284,
     285,    -1,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,    -1,   301,   302,   303,   304,
     305,   306,   307,   308,   309,    -1,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,    -1,   339,   340,    -1,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,    -1,   358,   359,   360,   361,   362,    -1,   364,
     365,   366,   367,   368,    -1,   370,   371,   372,   373,    -1,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,    -1,   390,   391,    -1,   393,    -1,
     395,   396,   397,   398,   399,    -1,   401,   402,    -1,    -1,
     405,   406,   407,   408,   409,    -1,   411,   412,   413,   414,
     415,   416,   417,    -1,    -1,   420,   421,   422,   423,   424,
      -1,    -1,   427,   428,   429,   430,   431,   432,   433,    -1,
     435,    -1,   437,   438,   439,   440,    -1,    -1,   443,    -1,
      -1,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    -1,    -1,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,    -1,   114,    -1,   116,   117,   118,   119,   120,
     121,    -1,   123,   124,   125,   126,   127,    -1,    -1,   130,
     131,   132,   133,   134,    -1,   136,   137,   138,    -1,   140,
     141,   142,    -1,   144,   145,   146,   147,   148,   149,   150,
     151,   152,   153,    -1,   155,    -1,   157,   158,   159,   160,
      -1,   162,    -1,   164,    -1,    -1,    -1,   168,   169,   170,
      -1,   172,    -1,   174,    -1,   176,   177,    -1,   179,   180,
     181,   182,   183,   184,    -1,   186,   187,   188,   189,    -1,
     191,   192,   193,   194,   195,   196,    -1,   198,    -1,   200,
     201,   202,   203,   204,   205,   206,    -1,   208,    -1,   210,
      -1,    -1,   213,    -1,   215,   216,   217,   218,   219,    -1,
      -1,   222,    -1,   224,    -1,    -1,   227,   228,   229,    -1,
      -1,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,    -1,   257,   258,   259,   260,
     261,    -1,   263,   264,    -1,   266,    -1,   268,   269,   270,
     271,   272,   273,    -1,   275,   276,    -1,    -1,   279,   280,
     281,    -1,    -1,   284,   285,    -1,   287,    -1,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,    -1,
     301,   302,   303,   304,   305,   306,   307,   308,   309,    -1,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,    -1,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,    -1,   339,   340,
      -1,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,    -1,   358,   359,   360,
     361,   362,    -1,   364,   365,   366,   367,   368,    -1,   370,
     371,   372,   373,    -1,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,    -1,   390,
     391,    -1,   393,    -1,   395,   396,   397,   398,   399,    -1,
     401,   402,    -1,    -1,   405,   406,   407,   408,   409,    -1,
     411,   412,   413,   414,   415,   416,   417,    -1,    -1,   420,
     421,   422,   423,   424,    -1,    -1,   427,   428,   429,   430,
     431,   432,   433,    -1,   435,    -1,   437,   438,   439,   440,
      -1,    -1,   443,    -1,    -1,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    -1,    44,    45,    46,
      47,    48,    -1,    50,    51,    -1,    53,    54,    55,    56,
      57,    58,    -1,    -1,    61,    62,    63,    64,    65,    -1,
      67,    68,    69,    70,    71,    -1,    -1,    -1,    75,    76,
      77,    78,    79,    -1,    81,    82,    83,    -1,    85,    86,
      87,    88,    89,    90,    -1,    -1,    93,    94,    95,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,    -1,   114,    -1,   116,
     117,   118,   119,   120,   121,    -1,   123,   124,   125,   126,
     127,    -1,    -1,   130,   131,   132,   133,   134,    -1,   136,
     137,   138,    -1,   140,   141,   142,    -1,   144,   145,   146,
     147,   148,   149,   150,   151,   152,   153,    -1,   155,    -1,
     157,   158,   159,   160,    -1,   162,    -1,   164,    -1,    -1,
      -1,   168,   169,   170,    -1,   172,    -1,   174,    -1,   176,
     177,    -1,   179,   180,   181,   182,   183,   184,    -1,   186,
     187,   188,   189,    -1,   191,   192,   193,   194,   195,   196,
      -1,   198,    -1,   200,   201,   202,   203,   204,   205,   206,
      -1,   208,    -1,   210,    -1,    -1,   213,    -1,   215,   216,
     217,   218,   219,    -1,    -1,   222,    -1,   224,    -1,    -1,
     227,   228,   229,    -1,    -1,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,    -1,
     257,   258,   259,   260,   261,    -1,   263,   264,    -1,   266,
      -1,   268,   269,   270,   271,   272,   273,    -1,   275,   276,
      -1,    -1,   279,   280,   281,    -1,    -1,   284,   285,    -1,
     287,    -1,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,    -1,   301,   302,   303,   304,   305,   306,
     307,   308,   309,    -1,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,    -1,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,    -1,   339,   340,    -1,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
      -1,   358,   359,   360,   361,   362,    -1,   364,   365,   366,
     367,   368,    -1,   370,   371,   372,   373,    -1,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,    -1,   390,   391,    -1,   393,    -1,   395,   396,
     397,   398,   399,    -1,   401,   402,    -1,    -1,   405,   406,
     407,   408,   409,    -1,   411,   412,   413,   414,   415,   416,
     417,    -1,    -1,   420,   421,   422,   423,   424,    -1,    -1,
     427,   428,   429,   430,   431,   432,   433,    -1,   435,    -1,
     437,   438,   439,   440,    -1,    -1,   443,    -1,    -1,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      -1,    44,    45,    46,    47,    48,    -1,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    -1,    -1,    61,    62,
      63,    64,    65,    -1,    67,    68,    69,    70,    71,    -1,
      -1,    -1,    75,    76,    77,    78,    79,    -1,    81,    82,
      83,    -1,    85,    86,    87,    88,    89,    90,    -1,    -1,
      93,    94,    95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
      -1,   114,    -1,   116,   117,   118,   119,   120,   121,    -1,
     123,   124,   125,   126,   127,    -1,    -1,   130,   131,   132,
     133,   134,    -1,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,    -1,   155,    -1,   157,   158,   159,   160,    -1,   162,
      -1,   164,    -1,    -1,    -1,   168,   169,   170,    -1,   172,
      -1,   174,    -1,   176,   177,    -1,   179,   180,   181,   182,
     183,   184,    -1,   186,   187,   188,   189,    -1,   191,   192,
     193,   194,   195,   196,    -1,   198,    -1,   200,   201,   202,
     203,   204,   205,   206,    -1,   208,    -1,   210,    -1,    -1,
     213,    -1,   215,   216,   217,   218,   219,    -1,    -1,   222,
      -1,   224,    -1,    -1,   227,   228,   229,    -1,    -1,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,    -1,   257,   258,   259,   260,   261,    -1,
     263,   264,    -1,   266,    -1,   268,   269,   270,   271,   272,
     273,    -1,   275,   276,    -1,    -1,   279,   280,   281,    -1,
      -1,   284,   285,    -1,   287,    -1,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,    -1,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,    -1,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,    -1,   339,   340,    -1,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,    -1,   358,   359,   360,   361,   362,
      -1,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,    -1,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,    -1,   390,   391,    -1,
     393,    -1,   395,   396,   397,   398,   399,    -1,   401,   402,
      -1,    -1,   405,   406,   407,   408,   409,    -1,   411,   412,
     413,   414,   415,   416,   417,    -1,    -1,   420,   421,   422,
     423,   424,    -1,    -1,   427,   428,   429,   430,   431,   432,
     433,    -1,   435,    -1,   437,   438,   439,   440,    -1,    -1,
     443,    -1,    -1,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    -1,    44,    45,    46,    47,    48,
      -1,    50,    51,    -1,    53,    54,    55,    56,    57,    58,
      -1,    -1,    61,    62,    63,    64,    65,    -1,    67,    68,
      69,    70,    71,    -1,    -1,    -1,    75,    76,    77,    78,
      79,    -1,    81,    82,    83,    -1,    85,    86,    87,    88,
      89,    90,    -1,    -1,    93,    94,    95,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,    -1,   114,    -1,   116,   117,   118,
     119,   120,   121,    -1,   123,   124,   125,   126,   127,    -1,
      -1,   130,   131,   132,   133,   134,    -1,   136,   137,   138,
      -1,   140,   141,   142,    -1,   144,   145,   146,   147,   148,
     149,   150,   151,   152,   153,    -1,   155,    -1,   157,   158,
     159,   160,    -1,   162,    -1,   164,    -1,    -1,    -1,   168,
     169,   170,    -1,   172,    -1,   174,    -1,   176,   177,    -1,
     179,   180,   181,   182,   183,   184,    -1,   186,   187,   188,
     189,    -1,   191,   192,   193,   194,   195,   196,    -1,   198,
      -1,   200,   201,   202,   203,   204,   205,   206,    -1,   208,
      -1,   210,    -1,    -1,   213,    -1,   215,   216,   217,   218,
     219,    -1,    -1,   222,    -1,   224,    -1,    -1,   227,   228,
     229,    -1,    -1,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,    -1,   257,   258,
     259,   260,   261,    -1,   263,   264,    -1,   266,    -1,   268,
     269,   270,   271,   272,   273,    -1,   275,   276,    -1,    -1,
     279,   280,   281,    -1,    -1,   284,   285,    -1,   287,    -1,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,    -1,   301,   302,   303,   304,   305,   306,   307,   308,
     309,    -1,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,    -1,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,    -1,
     339,   340,    -1,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,    -1,   358,
     359,   360,   361,   362,    -1,   364,   365,   366,   367,   368,
      -1,   370,   371,   372,   373,    -1,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
      -1,   390,   391,    -1,   393,    -1,   395,   396,   397,   398,
     399,    -1,   401,   402,    -1,    -1,   405,   406,   407,   408,
     409,    -1,   411,   412,   413,   414,   415,   416,   417,    -1,
      -1,   420,   421,   422,   423,   424,    -1,    -1,   427,   428,
     429,   430,   431,   432,   433,    -1,   435,    -1,   437,   438,
     439,   440,    -1,    -1,   443,    -1,    -1,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      35,    -1,    37,    38,    -1,    40,    41,    42,    -1,    44,
      45,    46,    47,    48,    -1,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    -1,    -1,    61,    62,    63,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    -1,    -1,
      75,    76,    77,    78,    79,    -1,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    -1,    -1,    93,    94,
      95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,    -1,   114,
      -1,   116,   117,   118,   119,   120,   121,    -1,   123,   124,
     125,   126,   127,    -1,    -1,   130,   131,   132,   133,   134,
      -1,   136,   137,   138,    -1,   140,   141,   142,    -1,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,    -1,
     155,    -1,   157,   158,   159,   160,    -1,   162,    -1,   164,
      -1,    -1,    -1,   168,   169,   170,    -1,   172,    -1,   174,
      -1,   176,   177,    -1,   179,   180,   181,   182,   183,   184,
      -1,   186,   187,   188,   189,    -1,   191,   192,   193,   194,
     195,   196,    -1,   198,    -1,   200,   201,   202,   203,   204,
     205,   206,    -1,   208,    -1,   210,    -1,    -1,   213,    -1,
     215,   216,   217,   218,   219,    -1,    -1,   222,    -1,   224,
      -1,    -1,   227,   228,   229,    -1,    -1,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,    -1,   257,   258,   259,   260,   261,    -1,   263,   264,
      -1,   266,    -1,   268,   269,   270,   271,   272,   273,    -1,
     275,   276,    -1,    -1,   279,   280,   281,    -1,    -1,   284,
     285,    -1,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,    -1,   301,   302,   303,   304,
     305,   306,   307,   308,   309,    -1,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,    -1,   339,   340,    -1,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,    -1,   358,   359,   360,   361,   362,    -1,    -1,
     365,   366,   367,   368,    -1,   370,   371,   372,   373,    -1,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,    -1,   390,   391,    -1,   393,    -1,
     395,   396,   397,   398,   399,    -1,   401,   402,    -1,    -1,
     405,   406,   407,   408,   409,    -1,   411,   412,   413,   414,
     415,   416,   417,    -1,    -1,   420,   421,   422,   423,   424,
      -1,    -1,   427,   428,   429,   430,   431,   432,   433,    -1,
     435,    -1,   437,   438,   439,   440,    -1,    -1,   443,    -1,
      -1,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    -1,    -1,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,    -1,   114,    -1,   116,   117,   118,   119,   120,
     121,    -1,   123,   124,   125,   126,   127,    -1,    -1,   130,
     131,   132,   133,   134,    -1,   136,   137,   138,    -1,   140,
     141,   142,    -1,   144,   145,   146,   147,   148,   149,   150,
     151,   152,   153,    -1,   155,    -1,   157,   158,   159,   160,
      -1,   162,    -1,   164,    -1,    -1,    -1,   168,   169,   170,
      -1,   172,    -1,   174,    -1,   176,   177,    -1,   179,   180,
     181,   182,   183,   184,    -1,   186,   187,   188,   189,    -1,
     191,   192,   193,   194,   195,   196,    -1,   198,    -1,   200,
     201,   202,   203,   204,   205,   206,    -1,   208,    -1,   210,
      -1,    -1,   213,    -1,   215,   216,   217,   218,   219,    -1,
      -1,   222,    -1,   224,    -1,    -1,   227,   228,   229,    -1,
      -1,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,    -1,   257,   258,   259,   260,
     261,    -1,   263,   264,    -1,   266,    -1,   268,   269,   270,
     271,   272,   273,    -1,   275,   276,    -1,    -1,   279,   280,
     281,    -1,    -1,   284,   285,    -1,   287,    -1,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,    -1,
     301,   302,   303,   304,   305,   306,   307,   308,   309,    -1,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,    -1,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,    -1,   339,   340,
      -1,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,    -1,   358,   359,   360,
     361,   362,    -1,   364,   365,   366,   367,   368,    -1,   370,
     371,   372,   373,    -1,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,    -1,   390,
     391,    -1,   393,    -1,   395,   396,   397,   398,   399,    -1,
     401,   402,    -1,    -1,   405,   406,   407,   408,   409,    -1,
     411,   412,   413,   414,   415,   416,   417,    -1,    -1,   420,
     421,   422,   423,   424,    -1,    -1,   427,   428,   429,   430,
     431,   432,   433,    -1,   435,    -1,   437,   438,   439,   440,
      -1,    -1,   443,    -1,    -1,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    -1,    44,    45,    46,
      47,    48,    -1,    50,    51,    -1,    53,    54,    55,    56,
      57,    58,    -1,    -1,    61,    62,    63,    64,    65,    -1,
      67,    68,    69,    70,    71,    -1,    -1,    -1,    75,    76,
      77,    78,    79,    -1,    81,    82,    83,    -1,    85,    86,
      87,    88,    89,    90,    -1,    -1,    93,    94,    95,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,    -1,   114,    -1,   116,
     117,   118,   119,   120,   121,    -1,   123,   124,   125,   126,
     127,    -1,    -1,   130,   131,   132,   133,   134,    -1,   136,
     137,   138,    -1,   140,   141,   142,    -1,   144,   145,   146,
     147,   148,   149,   150,   151,   152,   153,    -1,   155,    -1,
     157,   158,   159,   160,    -1,   162,    -1,   164,    -1,    -1,
      -1,   168,   169,   170,    -1,   172,    -1,   174,    -1,   176,
     177,    -1,   179,   180,   181,   182,   183,   184,    -1,   186,
     187,   188,   189,    -1,   191,   192,   193,   194,   195,   196,
      -1,   198,    -1,   200,   201,   202,   203,   204,   205,   206,
      -1,   208,    -1,   210,    -1,    -1,   213,    -1,   215,   216,
     217,   218,   219,    -1,    -1,   222,    -1,   224,    -1,    -1,
     227,   228,   229,    -1,    -1,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,    -1,
     257,   258,   259,   260,   261,    -1,   263,   264,    -1,   266,
      -1,   268,   269,   270,   271,   272,   273,    -1,   275,   276,
      -1,    -1,   279,   280,   281,    -1,    -1,   284,   285,    -1,
     287,    -1,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,    -1,   301,   302,   303,   304,   305,   306,
     307,   308,   309,    -1,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,    -1,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,    -1,   339,   340,    -1,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
      -1,   358,   359,   360,   361,   362,    -1,   364,   365,   366,
     367,   368,    -1,   370,   371,   372,   373,    -1,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,    -1,   390,   391,    -1,   393,    -1,   395,   396,
     397,   398,   399,    -1,   401,   402,    -1,    -1,   405,   406,
     407,   408,   409,    -1,   411,   412,   413,   414,   415,   416,
     417,    -1,    -1,   420,   421,   422,   423,   424,    -1,    -1,
     427,   428,   429,   430,   431,   432,   433,    -1,   435,    -1,
     437,   438,   439,   440,    -1,    -1,   443,    -1,    -1,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      -1,    44,    45,    46,    47,    48,    -1,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    -1,    -1,    61,    62,
      63,    64,    65,    -1,    67,    68,    69,    70,    71,    -1,
      -1,    -1,    75,    76,    77,    78,    79,    -1,    81,    82,
      83,    -1,    85,    86,    87,    88,    89,    90,    -1,    -1,
      93,    94,    95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
      -1,   114,    -1,   116,   117,   118,   119,   120,   121,    -1,
     123,   124,   125,   126,   127,    -1,    -1,   130,   131,   132,
     133,   134,    -1,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,    -1,   155,    -1,   157,   158,   159,   160,    -1,   162,
      -1,   164,    -1,    -1,    -1,   168,   169,   170,    -1,   172,
      -1,   174,    -1,   176,   177,    -1,   179,   180,   181,   182,
     183,   184,    -1,   186,   187,   188,   189,    -1,   191,   192,
     193,   194,   195,   196,    -1,   198,    -1,   200,   201,   202,
     203,   204,   205,   206,    -1,   208,    -1,   210,    -1,    -1,
     213,    -1,   215,   216,   217,   218,   219,    -1,    -1,   222,
      -1,   224,    -1,    -1,   227,   228,   229,    -1,    -1,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,    -1,   257,   258,   259,   260,   261,    -1,
     263,   264,    -1,   266,    -1,   268,   269,   270,   271,   272,
     273,    -1,   275,   276,    -1,    -1,   279,   280,   281,    -1,
      -1,   284,   285,    -1,   287,    -1,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,    -1,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,    -1,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,    -1,   339,   340,    -1,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,    -1,   358,   359,   360,   361,   362,
      -1,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,    -1,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,    -1,   390,   391,    -1,
     393,    -1,   395,   396,   397,   398,   399,    -1,   401,   402,
      -1,    -1,   405,   406,   407,   408,   409,    -1,   411,   412,
     413,   414,   415,   416,   417,    -1,    -1,   420,   421,   422,
     423,   424,    -1,    -1,   427,   428,   429,   430,   431,   432,
     433,    -1,   435,    -1,   437,   438,   439,   440,    -1,    -1,
     443,    -1,    -1,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    -1,    44,    45,    46,    47,    48,
      -1,    50,    51,    -1,    53,    54,    55,    56,    57,    58,
      -1,    -1,    61,    62,    63,    64,    65,    -1,    67,    68,
      69,    70,    71,    -1,    -1,    -1,    75,    76,    77,    78,
      79,    -1,    81,    82,    83,    -1,    85,    86,    87,    88,
      89,    90,    -1,    -1,    93,    94,    95,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,    -1,   114,    -1,   116,   117,   118,
     119,   120,   121,    -1,   123,   124,   125,   126,   127,    -1,
      -1,   130,   131,   132,   133,   134,    -1,   136,   137,   138,
      -1,   140,   141,   142,    -1,   144,   145,   146,   147,   148,
     149,   150,   151,   152,   153,    -1,   155,    -1,   157,   158,
     159,   160,    -1,   162,    -1,   164,    -1,    -1,    -1,   168,
     169,   170,    -1,   172,    -1,   174,    -1,   176,   177,    -1,
     179,   180,   181,   182,   183,   184,    -1,   186,   187,   188,
     189,    -1,   191,   192,   193,   194,   195,   196,    -1,   198,
      -1,   200,   201,   202,   203,   204,   205,   206,    -1,   208,
      -1,   210,    -1,    -1,   213,    -1,   215,   216,   217,   218,
     219,    -1,    -1,   222,    -1,   224,    -1,    -1,   227,   228,
     229,    -1,    -1,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,    -1,   257,   258,
     259,   260,   261,    -1,   263,   264,    -1,   266,    -1,   268,
     269,   270,   271,   272,   273,    -1,   275,   276,    -1,    -1,
     279,   280,   281,    -1,    -1,   284,   285,    -1,   287,    -1,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,    -1,   301,   302,   303,   304,   305,   306,   307,   308,
     309,    -1,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,    -1,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,    -1,
     339,   340,    -1,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,    -1,   358,
     359,   360,   361,   362,    -1,   364,   365,   366,   367,   368,
      -1,   370,   371,   372,   373,    -1,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
      -1,   390,   391,    -1,   393,    -1,   395,   396,   397,   398,
     399,    -1,   401,   402,    -1,    -1,   405,   406,   407,   408,
     409,    -1,   411,   412,   413,   414,   415,   416,   417,    -1,
      -1,   420,   421,   422,   423,   424,    -1,    -1,   427,   428,
     429,   430,   431,   432,   433,    -1,   435,    -1,   437,   438,
     439,   440,    -1,    -1,   443,    -1,    -1,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,    44,
      45,    46,    47,    48,    -1,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    -1,    -1,    61,    62,    63,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    -1,    -1,
      75,    76,    77,    78,    79,    -1,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    -1,    -1,    93,    94,
      95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,    -1,   114,
      -1,   116,   117,   118,   119,   120,   121,    -1,   123,   124,
     125,   126,   127,    -1,    -1,   130,   131,   132,   133,   134,
      -1,   136,   137,   138,    -1,   140,   141,   142,    -1,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,    -1,
     155,    -1,   157,   158,   159,   160,    -1,   162,    -1,   164,
      -1,    -1,    -1,   168,   169,   170,    -1,   172,    -1,   174,
      -1,   176,   177,    -1,   179,   180,   181,   182,   183,   184,
      -1,   186,   187,   188,   189,    -1,   191,   192,   193,   194,
     195,   196,    -1,   198,    -1,   200,   201,   202,   203,   204,
     205,   206,    -1,   208,    -1,   210,    -1,    -1,   213,    -1,
     215,   216,   217,   218,   219,    -1,    -1,   222,    -1,   224,
      -1,    -1,   227,   228,   229,    -1,    -1,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,    -1,   257,   258,   259,   260,   261,    -1,   263,   264,
      -1,   266,    -1,   268,   269,   270,   271,   272,   273,    -1,
     275,   276,    -1,    -1,   279,   280,   281,    -1,    -1,   284,
     285,    -1,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,    -1,   301,   302,   303,   304,
     305,   306,   307,   308,   309,    -1,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,    -1,   339,   340,    -1,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,    -1,   358,   359,   360,   361,   362,    -1,   364,
     365,   366,   367,   368,    -1,   370,   371,   372,   373,    -1,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,    -1,   390,   391,    -1,   393,    -1,
     395,   396,   397,   398,   399,    -1,   401,   402,    -1,    -1,
     405,   406,   407,   408,   409,    -1,   411,   412,   413,   414,
     415,   416,   417,    -1,    -1,   420,   421,   422,   423,   424,
      -1,    -1,   427,   428,   429,   430,   431,   432,   433,    -1,
     435,    -1,   437,   438,   439,   440,    -1,    -1,   443,    -1,
      -1,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    -1,    -1,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,    -1,   114,    -1,   116,   117,   118,   119,   120,
     121,    -1,   123,   124,   125,   126,   127,    -1,    -1,   130,
     131,   132,   133,   134,    -1,   136,   137,   138,    -1,   140,
     141,   142,    -1,   144,   145,   146,   147,   148,   149,   150,
     151,   152,   153,    -1,   155,    -1,   157,   158,   159,   160,
      -1,   162,    -1,   164,    -1,    -1,    -1,   168,   169,   170,
      -1,   172,    -1,   174,    -1,   176,   177,    -1,   179,   180,
     181,   182,   183,   184,    -1,   186,   187,   188,   189,    -1,
     191,   192,   193,   194,   195,   196,    -1,   198,    -1,   200,
     201,   202,   203,   204,   205,   206,    -1,   208,    -1,   210,
      -1,    -1,   213,    -1,   215,   216,   217,   218,   219,    -1,
      -1,   222,    -1,   224,    -1,    -1,   227,   228,   229,    -1,
      -1,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,    -1,   257,   258,   259,   260,
     261,    -1,   263,   264,    -1,   266,    -1,   268,   269,   270,
     271,   272,   273,    -1,   275,   276,    -1,    -1,   279,   280,
     281,    -1,    -1,   284,   285,    -1,   287,    -1,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,    -1,
     301,   302,   303,   304,   305,   306,   307,   308,   309,    -1,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,    -1,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,    -1,   339,   340,
      -1,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,    -1,   358,   359,   360,
     361,   362,    -1,   364,   365,   366,   367,   368,    -1,   370,
     371,   372,   373,    -1,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,    -1,   390,
     391,    -1,   393,    -1,   395,   396,   397,   398,   399,    -1,
     401,   402,    -1,    -1,   405,   406,   407,   408,   409,    -1,
     411,   412,   413,   414,   415,   416,   417,    -1,    -1,   420,
     421,   422,   423,   424,    -1,    -1,   427,   428,   429,   430,
     431,   432,   433,    -1,   435,    -1,   437,   438,   439,   440,
      -1,    -1,   443,    -1,    -1,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    43,    44,    45,    46,
      -1,    48,    49,    50,    51,    -1,    53,    54,    55,    56,
      57,    58,    -1,    -1,    61,    62,    63,    64,    65,    -1,
      67,    68,    69,    70,    -1,    -1,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    -1,    85,    86,
      87,    88,    89,    90,    -1,    92,    93,    94,    95,    -1,
      -1,    -1,    99,    -1,    -1,    -1,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,    -1,   114,    -1,   116,
     117,   118,   119,   120,   121,    -1,   123,   124,   125,   126,
     127,    -1,    -1,   130,   131,   132,   133,   134,    -1,   136,
     137,   138,    -1,   140,   141,   142,    -1,   144,   145,   146,
     147,    -1,   149,   150,   151,   152,    -1,    -1,   155,    -1,
     157,   158,   159,   160,    -1,   162,    -1,   164,   165,    -1,
     167,   168,   169,   170,   171,   172,    -1,   174,    -1,    -1,
     177,    -1,   179,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   189,    -1,   191,   192,   193,   194,   195,   196,
      -1,   198,   199,    -1,   201,   202,   203,   204,   205,   206,
      -1,   208,    -1,   210,   211,   212,   213,   214,   215,   216,
     217,   218,   219,    -1,    -1,   222,   223,   224,   225,    -1,
     227,   228,   229,    -1,    -1,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,    -1,    -1,   263,   264,   265,   266,
      -1,    -1,   269,   270,   271,   272,   273,    -1,   275,   276,
      -1,    -1,   279,   280,   281,    -1,    -1,   284,    -1,   286,
     287,   288,    -1,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,    -1,   301,   302,    -1,   304,   305,    -1,
     307,   308,   309,    -1,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,    -1,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,    -1,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
      -1,   358,   359,   360,   361,   362,    -1,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,    -1,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,    -1,    -1,   390,   391,    -1,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,    -1,    -1,   405,   406,
      -1,   408,    -1,    -1,   411,   412,   413,   414,   415,   416,
     417,    -1,    -1,   420,   421,   422,   423,   424,    -1,    -1,
     427,   428,   429,   430,   431,    -1,   433,    -1,   435,   436,
     437,   438,   439,   440,    -1,    -1,   443,    -1,    -1,   446,
     447,   448,   449,   450,   451,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   463,   464,   465,   466,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    -1,    44,    45,    46,    47,
      48,    -1,    50,    51,    -1,    53,    54,    55,    56,    57,
      58,    -1,    -1,    61,    62,    63,    64,    65,    -1,    67,
      68,    69,    70,    71,    -1,    -1,    -1,    75,    76,    77,
      78,    79,    -1,    81,    82,    83,    -1,    85,    86,    87,
      88,    89,    90,    -1,    -1,    93,    94,    95,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,    -1,   114,    -1,   116,   117,
     118,   119,   120,   121,    -1,   123,   124,   125,   126,   127,
      -1,    -1,   130,   131,   132,   133,   134,    -1,   136,   137,
     138,    -1,   140,   141,   142,    -1,   144,   145,   146,   147,
     148,   149,   150,   151,   152,   153,    -1,   155,    -1,   157,
     158,   159,   160,    -1,   162,    -1,   164,    -1,    -1,    -1,
     168,   169,   170,    -1,   172,    -1,   174,    -1,   176,   177,
      -1,   179,   180,   181,   182,   183,   184,    -1,   186,   187,
     188,   189,    -1,   191,   192,   193,   194,   195,   196,    -1,
     198,    -1,   200,   201,   202,   203,   204,   205,   206,    -1,
     208,    -1,   210,    -1,    -1,   213,    -1,   215,   216,   217,
     218,   219,    -1,    -1,   222,    -1,   224,    -1,    -1,   227,
     228,   229,    -1,    -1,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,    -1,   257,
     258,   259,   260,   261,    -1,   263,   264,    -1,   266,    -1,
     268,   269,   270,   271,   272,   273,    -1,   275,   276,    -1,
      -1,   279,   280,   281,    -1,    -1,   284,   285,    -1,   287,
      -1,   289,   290,   291,   292,   293,   294,   295,    -1,   297,
     298,   299,    -1,   301,   302,   303,   304,   305,   306,   307,
     308,   309,    -1,   311,   312,   313,   314,   315,   316,   317,
      -1,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
      -1,   339,   340,    -1,   342,   343,   344,   345,    -1,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,    -1,
     358,   359,   360,   361,   362,    -1,   364,   365,   366,   367,
     368,    -1,   370,   371,   372,   373,    -1,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,    -1,   390,   391,    -1,   393,    -1,   395,   396,   397,
     398,   399,    -1,   401,   402,    -1,    -1,   405,   406,   407,
     408,   409,    -1,   411,   412,   413,   414,   415,   416,   417,
      -1,    -1,   420,   421,   422,   423,   424,    -1,    -1,   427,
     428,   429,   430,   431,   432,   433,    -1,   435,    -1,   437,
     438,   439,   440,    -1,    -1,   443,    -1,    -1,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    43,
      44,    45,    46,    -1,    48,    49,    50,    51,    -1,    53,
      54,    55,    56,    57,    58,    -1,    -1,    61,    62,    63,
      64,    65,    -1,    67,    68,    69,    70,    -1,    -1,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      -1,    85,    86,    87,    88,    89,    90,    -1,    92,    93,
      94,    95,    -1,    -1,    -1,    99,    -1,    -1,    -1,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,    -1,
     114,    -1,   116,   117,   118,   119,   120,   121,    -1,   123,
     124,   125,   126,   127,    -1,    -1,   130,   131,   132,   133,
     134,    -1,   136,   137,   138,    -1,   140,   141,   142,    -1,
     144,   145,   146,   147,    -1,   149,   150,   151,   152,    -1,
      -1,   155,    -1,   157,   158,   159,   160,    -1,   162,    -1,
     164,   165,    -1,   167,   168,   169,   170,   171,   172,    -1,
     174,    -1,    -1,   177,    -1,   179,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,    -1,   191,   192,   193,
     194,   195,   196,    -1,   198,   199,    -1,   201,   202,   203,
     204,   205,   206,    -1,   208,    -1,   210,   211,   212,   213,
     214,   215,   216,   217,   218,   219,    -1,    -1,   222,   223,
     224,   225,    -1,   227,   228,   229,    -1,    -1,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,    -1,    -1,   263,
     264,   265,   266,    -1,    -1,   269,   270,   271,   272,   273,
      -1,   275,   276,    -1,    -1,   279,   280,   281,    -1,    -1,
     284,    -1,   286,   287,   288,    -1,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,    -1,   301,   302,    -1,
     304,   305,    -1,   307,   308,   309,    -1,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,    -1,   339,   340,   341,   342,   343,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,    -1,   358,   359,   360,   361,   362,    -1,
     364,    -1,   366,   367,   368,   369,   370,   371,   372,   373,
      -1,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,    -1,   387,    -1,    -1,   390,   391,    -1,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,    -1,
      -1,   405,   406,    -1,   408,    -1,    -1,   411,   412,   413,
     414,   415,   416,   417,    -1,    -1,   420,   421,   422,   423,
     424,    -1,    -1,   427,   428,   429,   430,   431,    -1,   433,
      -1,   435,   436,   437,   438,   439,   440,    -1,    -1,   443,
      -1,    -1,   446,   447,   448,   449,   450,   451,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   463,
     464,   465,   466
};

/* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
   symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,    18,    28,    30,    31,    46,    55,    67,    78,    89,
      91,   109,   123,   133,   139,   147,   149,   150,   162,   189,
     228,   304,   307,   335,   343,   357,   364,   368,   378,   392,
     427,   432,   445,   469,   483,   491,   492,   493,   494,   505,
     506,   508,   512,   526,   527,   529,   531,   538,   540,   586,
     592,   595,   596,   613,   614,   615,   616,   617,   618,   662,
     788,   791,   794,   801,   802,   803,   804,   805,   812,   816,
     822,   824,   829,   833,   834,   837,   838,   840,   841,   843,
     405,   448,   539,   193,   350,   358,   392,   438,   539,     3,
      18,    19,    20,    21,    22,    23,    24,    25,    27,    28,
      29,    37,    38,    40,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    53,    54,    55,    56,    57,
      58,    61,    62,    63,    64,    65,    67,    68,    69,    70,
      71,    73,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    85,    86,    87,    88,    89,    90,    92,    93,    94,
      95,    99,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   114,   116,   117,   118,   119,   120,   121,   123,
     124,   125,   126,   127,   130,   131,   132,   133,   134,   136,
     137,   138,   140,   141,   142,   144,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   155,   157,   158,   159,   160,
     162,   164,   165,   167,   168,   169,   170,   171,   172,   174,
     176,   177,   179,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   189,   191,   192,   193,   194,   195,   196,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   208,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   222,
     223,   224,   225,   227,   228,   229,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   263,   264,   265,   266,
     268,   269,   270,   271,   272,   273,   275,   276,   279,   280,
     281,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     358,   359,   360,   361,   362,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   390,
     391,   393,   394,   395,   396,   397,   398,   399,   401,   402,
     405,   406,   407,   408,   409,   411,   412,   413,   414,   415,
     416,   417,   420,   421,   422,   423,   424,   427,   428,   429,
     430,   431,   432,   433,   435,   436,   437,   438,   439,   440,
     443,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   718,   775,   779,   781,   846,   847,   848,   539,
      49,   483,   608,   168,   172,   229,   236,   282,   350,   396,
     398,   419,   422,   584,   593,   800,     3,    26,   307,   773,
     779,   846,    20,    73,    88,   142,   151,   163,   168,   193,
     236,   239,   302,   316,   347,   350,   358,   361,   380,   392,
     399,   408,   438,   587,   588,   591,   539,   773,    91,   436,
     483,   508,   595,   613,   808,   812,   829,   843,   106,    67,
     106,     5,   778,   823,   779,   773,    26,   401,   405,   779,
     835,   836,   839,   539,    26,   128,   625,   626,   229,   350,
     362,   401,   817,   818,   839,   539,   278,   673,   771,   779,
     167,   483,   826,   483,   323,   619,   620,   773,   619,   614,
     615,   618,     0,   486,   118,   203,   424,   143,   207,   283,
     418,   627,   628,   614,   616,   617,   487,   436,   806,    26,
     401,   405,   432,   613,   839,   184,   771,   773,   184,   771,
     184,   673,   184,   771,   483,   481,   485,   762,   764,   508,
     595,   613,   790,   829,   771,   396,   398,   396,   398,   333,
     184,   779,   323,   358,   392,   438,   771,   193,    26,   773,
     241,   408,   105,   392,   438,   353,   184,   589,   779,   782,
     184,   772,   773,   184,   773,   483,   530,   584,   808,     3,
     809,   811,   812,   814,   815,   846,   847,   848,   806,   778,
     778,   472,   483,   483,   789,   466,   213,   485,   277,     4,
       6,     7,     8,     9,    10,    48,    50,    51,    59,    60,
      63,    64,    71,    73,    96,    97,    98,    99,   100,   101,
     102,   110,   111,   113,   132,   148,   153,   154,   159,   205,
     206,   208,   230,   231,   255,   257,   262,   267,   268,   270,
     279,   289,   303,   320,   345,   363,   372,   388,   401,   402,
     407,   409,   410,   425,   433,   467,   474,   475,   476,   483,
     488,   614,   688,   691,   694,   695,   696,   698,   699,   700,
     701,   703,   704,   715,   717,   718,   719,   721,   734,   738,
     756,   761,   768,   769,   775,   776,   777,   778,   779,   767,
     768,   817,   778,   817,   466,   166,   403,   472,   483,   771,
     476,   764,     3,   165,   167,   436,   812,   825,   827,   165,
     828,   715,   742,   619,   487,   483,   784,   484,   484,   493,
     166,   209,   673,   830,    26,   128,   624,   624,    53,   624,
     156,   161,   226,   274,   633,   635,   636,   655,   657,   658,
     659,   627,   628,   483,   771,   466,   213,   148,    22,    28,
     133,   281,   331,   335,   364,   429,   499,   502,   503,   331,
     148,    35,    54,   104,   192,   240,   248,   260,   291,   331,
     336,   358,   364,   378,   502,   532,   535,   148,   331,   364,
     502,   148,   331,   364,   502,    26,   128,   434,   476,   484,
     715,   743,   744,   781,   785,   715,   763,     3,    26,    30,
      31,    32,    33,    34,    35,    36,    39,    52,    59,    60,
      66,    72,    74,    84,    91,    96,    97,    98,   100,   101,
     102,   113,   115,   122,   128,   129,   135,   139,   143,   154,
     156,   161,   163,   166,   173,   175,   178,   190,   197,   207,
     209,   220,   221,   226,   230,   231,   262,   267,   274,   277,
     278,   282,   283,   300,   310,   325,   338,   357,   363,   374,
     389,   392,   400,   403,   404,   410,   418,   419,   425,   426,
     434,   441,   442,   444,   445,   476,   774,   786,   846,   847,
     848,   849,   762,   484,   483,   574,   584,   262,   792,   438,
     184,   771,   184,   771,   845,   771,   483,   594,    80,   797,
     449,    81,   125,   294,   397,   148,    57,   337,   487,   590,
     485,   783,   148,   487,   590,   148,   277,   742,   392,   484,
     487,     4,   154,   277,   410,   474,   475,   534,   537,   777,
     778,   807,   809,   810,   813,   808,   483,   603,   607,   534,
     813,   819,   821,   743,     3,    48,    50,    51,    63,    64,
     110,   111,   159,   205,   206,   208,   255,   257,   270,   320,
     345,   365,   372,   386,   401,   402,   433,   684,   685,   687,
     689,   691,   693,   695,   696,   697,   699,   700,   703,   704,
     745,   781,   846,    35,   224,   779,   483,   765,   435,   702,
     715,   760,   483,   702,   702,   483,   161,   483,   483,   483,
     690,   690,   306,   614,   483,   483,   692,   483,   483,    63,
      64,   702,   715,   483,   690,   483,   483,   483,   483,   483,
     447,   469,   483,   705,   483,   705,   483,   483,   715,   715,
     715,   614,   715,   742,   765,   764,   778,   483,   483,   777,
     778,     3,     8,    11,    15,    16,    17,    32,    35,    40,
      47,    72,   171,   185,   190,   211,   212,   225,   262,   265,
     279,   282,   369,   467,   470,   471,   472,   474,   475,   476,
     477,   478,   479,   736,   737,   738,   740,   446,   722,   288,
     715,   209,   487,   621,   483,   778,   764,   621,     3,   113,
     229,   534,   704,   778,   820,    95,   113,   821,   113,   821,
     771,   484,   487,   806,   484,   487,   620,   772,    35,   830,
     510,   771,    35,   779,   364,   616,   616,   629,   630,   715,
     616,   158,   259,   649,   215,   260,   319,   367,   424,    26,
     644,   715,   474,   475,   645,   646,   715,   717,   655,   656,
     636,   635,   633,   634,   161,   658,   272,   660,   633,   655,
     742,   784,   224,   771,    66,    74,    84,   163,   184,   310,
     419,   555,   565,   580,   779,    74,    84,   507,    84,   507,
     483,   403,   483,   553,   235,   422,   553,    84,   487,   403,
     771,   687,   534,    53,   536,   534,   534,   104,   240,   248,
      53,   403,   445,   469,   533,   253,   350,   533,   535,   673,
      84,   403,   507,   350,   771,   403,   350,   743,   743,   744,
     484,   487,   627,   628,    13,    14,   482,   489,   403,   573,
     578,   779,   445,   606,   323,   438,   148,    91,   527,   540,
     793,   794,   841,   771,   262,   528,   532,   262,   483,   574,
      35,   574,   484,   743,    35,   184,   568,   779,   798,   589,
     782,   774,   485,   772,   773,   773,   782,   484,   184,   771,
     845,   808,   814,     4,   777,     4,   777,   605,   612,   786,
      49,    93,   119,   137,   141,   162,   165,   179,   267,   275,
     317,   609,   487,   484,   487,   687,   483,    34,   686,   107,
     108,   181,   182,   242,   243,   244,   245,   246,   247,   250,
     251,   354,   355,   463,   464,   483,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   484,   487,   690,   783,   790,
     742,   762,   483,   441,   757,   758,   715,   742,   483,   777,
     777,   742,     3,   706,   707,   708,   709,   710,   711,   712,
     713,   746,   747,   778,   777,   777,   777,   702,   702,   715,
       8,    15,    16,    17,   470,   471,   472,   474,   475,   476,
     477,   478,   479,   736,   741,   779,   715,   748,   474,   475,
     483,   716,   717,   738,   750,   484,   742,   715,   742,   751,
     401,   401,   777,   777,   715,    52,   166,   221,   404,   715,
     742,   754,   484,   487,   777,   715,   714,   714,   685,   715,
     715,   715,   715,     5,   786,   787,   401,    39,   389,   766,
     782,   715,   715,   483,   614,   755,   128,   154,   262,   267,
     272,   410,   420,   715,   267,   483,   715,   403,    47,   171,
     185,   190,   225,   369,   715,   715,   715,   715,   715,   715,
     715,   715,   715,   715,    26,    33,   374,   735,   175,   157,
     723,   345,   483,   734,   172,   229,   392,   396,   398,   422,
     622,   771,   769,   166,   663,   743,   663,   483,   778,   484,
     771,   825,   771,   833,   715,   484,   483,   426,   832,   113,
     290,   483,   509,   613,    35,   779,   483,   514,   523,   525,
     779,   487,    36,   122,   426,   631,   345,   346,   474,   475,
     646,   648,   717,   367,   215,   278,   487,     4,   647,   777,
     647,   345,   346,   648,   770,   771,   266,   371,   661,   656,
     634,   484,   331,   502,   483,   184,   565,   773,   215,   262,
     215,   426,   483,   558,   685,   773,   779,   184,   773,   184,
     779,    22,   133,   364,   498,   501,   548,   563,   786,   773,
     557,   577,   786,   773,   499,   773,   331,   364,   502,   532,
     534,   782,   773,   534,   782,   773,   534,   331,   364,   502,
     773,   773,   773,   773,   331,   364,   502,   773,   773,   627,
     627,   627,   434,   744,   484,   715,   715,   715,   763,   315,
     602,   484,   487,   275,   166,   403,   597,   438,   771,   779,
     584,   483,   148,   148,   225,   555,   565,   569,   572,   581,
     583,   779,   445,   447,   560,   147,   613,   445,   799,   484,
     715,   262,   277,   590,   774,   590,   277,   590,   262,    35,
     484,   487,   476,   483,   534,   604,   813,    35,   601,   778,
     601,   262,   267,   317,   601,   601,   819,    34,   686,   683,
     779,   481,   481,   777,   403,   403,   403,   403,   685,   690,
     484,   742,   715,   135,   758,   759,    35,   484,   715,   484,
     484,   484,   484,   166,   484,   484,   484,   487,   484,   485,
     300,   749,   484,   716,   716,   715,    11,    15,    16,    17,
     190,   211,   279,   470,   471,   472,   474,   475,   476,   477,
     478,   479,   738,   716,   484,   484,   161,   166,   752,   753,
     484,   466,   466,   484,   484,    35,   754,   742,   754,   754,
     166,   484,   765,   715,   484,   484,   466,   716,   716,   141,
     742,   166,   128,   154,   267,   272,   410,   420,   483,   141,
     741,   715,   389,   766,   715,   755,   715,   403,   483,   614,
     483,   483,   287,   727,   396,   398,   396,   398,   771,   392,
     623,   623,   623,   220,   346,   483,   614,   664,   665,   666,
     673,   674,   718,   720,   721,   779,   442,   679,   627,   679,
     777,   714,   784,   790,   664,   442,   831,   432,   391,   425,
     518,   513,   522,   779,   277,   515,   779,   519,   525,   487,
     663,   472,   765,   630,   279,   736,   739,   468,   632,     4,
     777,   648,   278,   424,   645,   487,   234,   403,   715,   262,
     580,   483,   148,   483,   558,   193,   578,   541,   281,   551,
     541,    22,   133,   335,   336,   364,   495,   496,   497,   503,
     504,   148,   590,   148,   590,   548,   563,   548,   484,   487,
     544,   778,   484,   487,   472,   485,   403,   350,    84,   403,
     507,   350,   403,   403,   403,   350,   484,   484,   484,   744,
     482,   381,   382,   611,   778,   573,   602,   771,   574,   792,
     392,   578,   771,   771,   845,   771,   484,   487,   275,   553,
     275,   277,   552,   773,   445,   844,   553,    35,   148,   771,
     782,   148,   605,   599,   610,   813,   778,   778,   267,   578,
     476,   578,   778,   778,   481,   484,   487,   685,   777,   482,
     777,   484,   707,   709,   710,   711,   710,   711,   711,   484,
     400,   715,   139,   685,   484,   715,   715,   741,   715,   752,
     685,   716,   716,   716,   716,   128,   262,   272,   716,   716,
     716,   716,   716,   716,   716,   716,   716,   716,   715,   715,
     753,   752,   705,   705,   685,   484,   484,   484,   742,   484,
     714,   715,    32,    32,   715,   484,   715,   166,   483,   745,
     715,   484,   141,   716,   716,   141,   141,   715,   715,   628,
     442,   483,   728,   779,   623,   623,   623,   623,   771,   771,
     771,   614,   674,   166,   614,   665,   666,    35,   667,   668,
     779,   487,    92,   167,   199,   214,   223,   256,   341,   670,
     668,    35,   667,   669,   779,   469,   678,   764,   715,   175,
     650,   484,   650,   484,   484,   715,   338,   517,   431,   484,
     487,   765,    82,   517,   484,   487,   514,   831,   715,   483,
     632,   158,   219,   278,   771,   773,   484,   148,   578,   565,
     578,   541,   568,   484,   115,   197,   260,   262,   564,   483,
     575,   170,   113,   183,   262,   553,   533,   105,   113,   170,
     262,   380,   383,   535,   553,   364,   497,   413,   773,   779,
     501,   577,   261,   279,   365,   474,   475,   534,   542,   579,
     685,   739,   778,   781,   849,   786,   773,   773,   773,   773,
     773,   773,   773,   773,   773,   773,   627,   533,   611,   483,
     799,   184,   771,   484,   528,   483,    35,   562,   560,   569,
      78,   530,   105,   260,   613,   568,   426,   796,   590,   845,
     484,   487,   578,   777,   779,   482,   482,   715,   484,   484,
     753,   166,   128,   272,   483,   484,   715,   715,   715,   745,
     484,   715,    32,    32,   715,   715,   141,   484,   484,   715,
     729,   779,   771,   771,   771,   771,   668,   669,   483,   484,
       5,   779,   780,   394,   641,   642,   483,   665,   214,   286,
     671,   665,   671,   214,   670,   671,   214,   642,   483,   779,
     642,   483,   284,    53,   178,   654,   778,   654,   778,   768,
     613,   290,   613,   513,   277,   483,   511,   472,   525,   517,
     741,   541,   565,   484,   484,   445,   571,   116,   186,   195,
     115,   428,   548,   566,    66,    72,    84,   113,   115,   170,
     197,   262,   267,   310,   325,   419,   546,   547,   559,    29,
      53,   585,   184,   267,   534,   715,   585,   267,   474,   475,
     537,   779,   685,   590,   590,   781,   783,   472,   403,   403,
     484,   603,   426,   598,   600,   578,    35,   262,   483,   799,
     572,   147,   613,   145,   191,   552,   118,   133,   309,   844,
     105,   445,   842,   277,   779,   795,   483,    35,   610,   482,
     685,   716,   166,   483,   745,   484,   715,   715,   715,   484,
     296,   730,   675,   676,   720,   667,   483,     4,     9,   637,
     639,   640,   779,   772,   665,   277,   426,   672,   665,   214,
     665,   680,   681,   779,   483,   680,   779,   483,   651,   652,
     653,   715,   715,   444,   724,   724,   518,    84,   483,   516,
     524,   720,   779,   129,   715,   484,   325,   571,   483,   561,
     541,   484,   487,   483,   782,   773,   716,   585,   116,   186,
     115,   267,   215,   771,   571,   113,    35,   148,    72,   682,
     783,   478,   542,   773,   773,   533,   120,   484,   613,   148,
      35,   484,   773,   844,    26,    77,    85,   114,   183,   194,
     380,   383,   556,   556,   346,   346,    58,    66,   229,   771,
     524,   716,   745,   484,    53,   627,   484,   487,    35,   677,
     772,   299,   478,   299,   346,   478,   483,   483,   484,   715,
     483,   665,   672,   484,   487,   685,   680,   484,   484,   487,
     725,   726,   779,   426,   638,   638,   431,   773,   715,   484,
     487,    72,   520,   520,   263,   424,   771,   541,   567,   570,
     786,   548,   715,   262,   547,    35,   571,   574,   183,   782,
     426,   500,   478,   413,   603,   778,   799,   842,   771,   613,
     560,   530,    66,   280,    66,   796,   484,   484,   742,   318,
     346,   731,   678,   675,   483,   484,   779,   637,   772,   681,
     682,   484,   652,   487,    35,   348,   613,   484,   679,   516,
     782,   521,   782,   521,   364,   574,   484,   487,   472,   484,
     183,   238,   582,   483,   543,   715,   413,    35,   483,   842,
     552,   844,   280,   280,   483,   799,    47,    95,   415,   715,
     732,   733,   732,   484,   680,   484,   487,   484,   484,   726,
     728,   640,   520,   631,   631,   523,   582,   570,   542,   260,
     554,   543,   167,   295,   370,   277,   549,   550,   576,   532,
     613,   524,   679,   733,   345,   160,   305,   160,   305,   484,
       9,   332,   643,   521,   632,   632,   679,   550,   195,   118,
     424,   277,   576,   277,   549,   484,   842,   484,    32,   484,
     483,   631,   541,    57,   260,   337,   364,   545,   545,   799,
     733,     9,   632,    21,   113,   267,   679,   484
};

#define yyerrok		(yyerrstatus = 0)
#define yyclearin	(yychar = YYEMPTY)
#define YYEMPTY		(-2)
#define YYEOF		0

#define YYACCEPT	goto yyacceptlab
#define YYABORT		goto yyabortlab
#define YYERROR		goto yyerrorlab


/* Like YYERROR except do call yyerror.  This remains here temporarily
   to ease the transition to the new meaning of YYERROR, for GCC.
   Once GCC version 2 has supplanted version 1, this can go.  */

#define YYFAIL		goto yyerrlab

#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)					\
do								\
  if (yychar == YYEMPTY && yylen == 1)				\
    {								\
      yychar = (Token);						\
      yylval = (Value);						\
      yytoken = YYTRANSLATE (yychar);				\
      YYPOPSTACK (1);						\
      goto yybackup;						\
    }								\
  else								\
    {								\
      yyerror (&yylloc, yyscanner, YY_("syntax error: cannot back up")); \
      YYERROR;							\
    }								\
while (YYID (0))


#define YYTERROR	1
#define YYERRCODE	256


/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#define YYRHSLOC(Rhs, K) ((Rhs)[K])
#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)				\
    do									\
      if (YYID (N))                                                    \
	{								\
	  (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;	\
	  (Current).first_column = YYRHSLOC (Rhs, 1).first_column;	\
	  (Current).last_line    = YYRHSLOC (Rhs, N).last_line;		\
	  (Current).last_column  = YYRHSLOC (Rhs, N).last_column;	\
	}								\
      else								\
	{								\
	  (Current).first_line   = (Current).last_line   =		\
	    YYRHSLOC (Rhs, 0).last_line;				\
	  (Current).first_column = (Current).last_column =		\
	    YYRHSLOC (Rhs, 0).last_column;				\
	}								\
    while (YYID (0))
#endif


/* YY_LOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

#ifndef YY_LOCATION_PRINT
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
#  define YY_LOCATION_PRINT(File, Loc)			\
     fprintf (File, "%d.%d-%d.%d",			\
	      (Loc).first_line, (Loc).first_column,	\
	      (Loc).last_line,  (Loc).last_column)
# else
#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
# endif
#endif


/* YYLEX -- calling `yylex' with the right arguments.  */

#ifdef YYLEX_PARAM
# define YYLEX yylex (&yylval, &yylloc, YYLEX_PARAM)
#else
# define YYLEX yylex (&yylval, &yylloc, yyscanner)
#endif

/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)			\
do {						\
  if (yydebug)					\
    YYFPRINTF Args;				\
} while (YYID (0))

# define YY_SYMBOL_PRINT(Title, Type, Value, Location)			  \
do {									  \
  if (yydebug)								  \
    {									  \
      YYFPRINTF (stderr, "%s ", Title);					  \
      yy_symbol_print (stderr,						  \
		  Type, Value, Location, yyscanner); \
      YYFPRINTF (stderr, "\n");						  \
    }									  \
} while (YYID (0))


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
#else
static void
yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  if (!yyvaluep)
    return;
  YYUSE (yylocationp);
  YYUSE (yyscanner);
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# else
  YYUSE (yyoutput);
# endif
  switch (yytype)
    {
      default:
	break;
    }
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
#else
static void
yy_symbol_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  if (yytype < YYNTOKENS)
    YYFPRINTF (yyoutput, "token %s (", yytname[yytype]);
  else
    YYFPRINTF (yyoutput, "nterm %s (", yytname[yytype]);

  YY_LOCATION_PRINT (yyoutput, *yylocationp);
  YYFPRINTF (yyoutput, ": ");
  yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_stack_print (yytype_int16 *bottom, yytype_int16 *top)
#else
static void
yy_stack_print (bottom, top)
    yytype_int16 *bottom;
    yytype_int16 *top;
#endif
{
  YYFPRINTF (stderr, "Stack now");
  for (; bottom <= top; ++bottom)
    YYFPRINTF (stderr, " %d", *bottom);
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)				\
do {								\
  if (yydebug)							\
    yy_stack_print ((Bottom), (Top));				\
} while (YYID (0))


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_reduce_print (YYSTYPE *yyvsp, YYLTYPE *yylsp, int yyrule, core_yyscan_t yyscanner)
#else
static void
yy_reduce_print (yyvsp, yylsp, yyrule, yyscanner)
    YYSTYPE *yyvsp;
    YYLTYPE *yylsp;
    int yyrule;
    core_yyscan_t yyscanner;
#endif
{
  int yynrhs = yyr2[yyrule];
  int yyi;
  unsigned long int yylno = yyrline[yyrule];
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
	     yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      fprintf (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
		       &(yyvsp[(yyi + 1) - (yynrhs)])
		       , &(yylsp[(yyi + 1) - (yynrhs)])		       , yyscanner);
      fprintf (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)		\
do {					\
  if (yydebug)				\
    yy_reduce_print (yyvsp, yylsp, Rule, yyscanner); \
} while (YYID (0))

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef	YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif



#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static YYSIZE_T
yystrlen (const char *yystr)
#else
static YYSIZE_T
yystrlen (yystr)
    const char *yystr;
#endif
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static char *
yystpcpy (char *yydest, const char *yysrc)
#else
static char *
yystpcpy (yydest, yysrc)
    char *yydest;
    const char *yysrc;
#endif
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
	switch (*++yyp)
	  {
	  case '\'':
	  case ',':
	    goto do_not_strip_quotes;

	  case '\\':
	    if (*++yyp != '\\')
	      goto do_not_strip_quotes;
	    /* Fall through.  */
	  default:
	    if (yyres)
	      yyres[yyn] = *yyp;
	    yyn++;
	    break;

	  case '"':
	    if (yyres)
	      yyres[yyn] = '\0';
	    return yyn;
	  }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into YYRESULT an error message about the unexpected token
   YYCHAR while in state YYSTATE.  Return the number of bytes copied,
   including the terminating null byte.  If YYRESULT is null, do not
   copy anything; just return the number of bytes that would be
   copied.  As a special case, return 0 if an ordinary "syntax error"
   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
   size calculation.  */
static YYSIZE_T
yysyntax_error (char *yyresult, int yystate, int yychar)
{
  int yyn = yypact[yystate];

  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
    return 0;
  else
    {
      int yytype = YYTRANSLATE (yychar);
      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
      YYSIZE_T yysize = yysize0;
      YYSIZE_T yysize1;
      int yysize_overflow = 0;
      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
      int yyx;

# if 0
      /* This is so xgettext sees the translatable formats that are
	 constructed on the fly.  */
      YY_("syntax error, unexpected %s");
      YY_("syntax error, unexpected %s, expecting %s");
      YY_("syntax error, unexpected %s, expecting %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
# endif
      char *yyfmt;
      char const *yyf;
      static char const yyunexpected[] = "syntax error, unexpected %s";
      static char const yyexpecting[] = ", expecting %s";
      static char const yyor[] = " or %s";
      char yyformat[sizeof yyunexpected
		    + sizeof yyexpecting - 1
		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
		       * (sizeof yyor - 1))];
      char const *yyprefix = yyexpecting;

      /* Start YYX at -YYN if negative to avoid negative indexes in
	 YYCHECK.  */
      int yyxbegin = yyn < 0 ? -yyn : 0;

      /* Stay within bounds of both yycheck and yytname.  */
      int yychecklim = YYLAST - yyn + 1;
      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
      int yycount = 1;

      yyarg[0] = yytname[yytype];
      yyfmt = yystpcpy (yyformat, yyunexpected);

      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
	  {
	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
	      {
		yycount = 1;
		yysize = yysize0;
		yyformat[sizeof yyunexpected - 1] = '\0';
		break;
	      }
	    yyarg[yycount++] = yytname[yyx];
	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
	    yysize_overflow |= (yysize1 < yysize);
	    yysize = yysize1;
	    yyfmt = yystpcpy (yyfmt, yyprefix);
	    yyprefix = yyor;
	  }

      yyf = YY_(yyformat);
      yysize1 = yysize + yystrlen (yyf);
      yysize_overflow |= (yysize1 < yysize);
      yysize = yysize1;

      if (yysize_overflow)
	return YYSIZE_MAXIMUM;

      if (yyresult)
	{
	  /* Avoid sprintf, as that infringes on the user's name space.
	     Don't have undefined behavior even if the translation
	     produced a string with the wrong number of "%s"s.  */
	  char *yyp = yyresult;
	  int yyi = 0;
	  while ((*yyp = *yyf) != '\0')
	    {
	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
		{
		  yyp += yytnamerr (yyp, yyarg[yyi++]);
		  yyf += 2;
		}
	      else
		{
		  yyp++;
		  yyf++;
		}
	    }
	}
      return yysize;
    }
}
#endif /* YYERROR_VERBOSE */


/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, YYLTYPE *yylocationp, core_yyscan_t yyscanner)
#else
static void
yydestruct (yymsg, yytype, yyvaluep, yylocationp, yyscanner)
    const char *yymsg;
    int yytype;
    YYSTYPE *yyvaluep;
    YYLTYPE *yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  YYUSE (yyvaluep);
  YYUSE (yylocationp);
  YYUSE (yyscanner);

  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  switch (yytype)
    {

      default:
	break;
    }
}


/* Prevent warnings from -Wmissing-prototypes.  */

#ifdef YYPARSE_PARAM
#if defined __STDC__ || defined __cplusplus
int yyparse (void *YYPARSE_PARAM);
#else
int yyparse ();
#endif
#else /* ! YYPARSE_PARAM */
#if defined __STDC__ || defined __cplusplus
int yyparse (core_yyscan_t yyscanner);
#else
int yyparse ();
#endif
#endif /* ! YYPARSE_PARAM */






/*----------.
| yyparse.  |
`----------*/

#ifdef YYPARSE_PARAM
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (void *YYPARSE_PARAM)
#else
int
yyparse (YYPARSE_PARAM)
    void *YYPARSE_PARAM;
#endif
#else /* ! YYPARSE_PARAM */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (core_yyscan_t yyscanner)
#else
int
yyparse (yyscanner)
    core_yyscan_t yyscanner;
#endif
#endif
{
  /* The look-ahead symbol.  */
int yychar;

/* The semantic value of the look-ahead symbol.  */
YYSTYPE yylval;

/* Number of syntax errors so far.  */
int yynerrs;
/* Location data for the look-ahead symbol.  */
YYLTYPE yylloc;

  int yystate;
  int yyn;
  int yyresult;
  /* Number of tokens to shift before error messages enabled.  */
  int yyerrstatus;
  /* Look-ahead token as an internal (translated) token number.  */
  int yytoken = 0;
#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

  /* Three stacks and their tools:
     `yyss': related to states,
     `yyvs': related to semantic values,
     `yyls': related to locations.

     Refer to the stacks thru separate pointers, to allow yyoverflow
     to reallocate them elsewhere.  */

  /* The state stack.  */
  yytype_int16 yyssa[YYINITDEPTH];
  yytype_int16 *yyss = yyssa;
  yytype_int16 *yyssp;

  /* The semantic value stack.  */
  YYSTYPE yyvsa[YYINITDEPTH];
  YYSTYPE *yyvs = yyvsa;
  YYSTYPE *yyvsp;

  /* The location stack.  */
  YYLTYPE yylsa[YYINITDEPTH];
  YYLTYPE *yyls = yylsa;
  YYLTYPE *yylsp;
  /* The locations where the error started and ended.  */
  YYLTYPE yyerror_range[2];

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))

  YYSIZE_T yystacksize = YYINITDEPTH;

  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;
  YYLTYPE yyloc;

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY;		/* Cause a token to be read.  */

  /* Initialize stack pointers.
     Waste one element of value and location stack
     so that they stay on the same level as the state stack.
     The wasted elements are never initialized.  */

  yyssp = yyss;
  yyvsp = yyvs;
  yylsp = yyls;
#if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
  /* Initialize the default location before parsing starts.  */
  yylloc.first_line   = yylloc.last_line   = 1;
  yylloc.first_column = yylloc.last_column = 0;
#endif

  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
	/* Give user a chance to reallocate the stack.  Use copies of
	   these so that the &'s don't force the real ones into
	   memory.  */
	YYSTYPE *yyvs1 = yyvs;
	yytype_int16 *yyss1 = yyss;
	YYLTYPE *yyls1 = yyls;

	/* Each stack pointer address is followed by the size of the
	   data in use in that stack, in bytes.  This used to be a
	   conditional around just the two extra args, but that might
	   be undefined if yyoverflow is a macro.  */
	yyoverflow (YY_("memory exhausted"),
		    &yyss1, yysize * sizeof (*yyssp),
		    &yyvs1, yysize * sizeof (*yyvsp),
		    &yyls1, yysize * sizeof (*yylsp),
		    &yystacksize);
	yyls = yyls1;
	yyss = yyss1;
	yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
	goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
	yystacksize = YYMAXDEPTH;

      {
	yytype_int16 *yyss1 = yyss;
	union yyalloc *yyptr =
	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
	if (! yyptr)
	  goto yyexhaustedlab;
	YYSTACK_RELOCATE (yyss);
	YYSTACK_RELOCATE (yyvs);
	YYSTACK_RELOCATE (yyls);
#  undef YYSTACK_RELOCATE
	if (yyss1 != yyssa)
	  YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;
      yylsp = yyls + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
		  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
	YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     look-ahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to look-ahead token.  */
  yyn = yypact[yystate];
  if (yyn == YYPACT_NINF)
    goto yydefault;

  /* Not known => get a look-ahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid look-ahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = YYLEX;
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yyn == 0 || yyn == YYTABLE_NINF)
	goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the look-ahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token unless it is eof.  */
  if (yychar != YYEOF)
    yychar = YYEMPTY;

  yystate = yyn;
  *++yyvsp = yylval;
  *++yylsp = yylloc;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     `$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];

  /* Default location.  */
  YYLLOC_DEFAULT (yyloc, (yylsp - yylen), yylen);
  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 2:
#line 458 "third_party/libpg_query/grammar/grammar.y"
    {
				pg_yyget_extra(yyscanner)->parsetree = (yyvsp[(1) - (1)].list);
			;}
    break;

  case 3:
#line 474 "third_party/libpg_query/grammar/grammar.y"
    {
					if ((yyvsp[(1) - (3)].list) != NIL)
					{
						/* update length of previous stmt */
						updateRawStmtEnd(llast_node(PGRawStmt, (yyvsp[(1) - (3)].list)), (yylsp[(2) - (3)]));
					}
					if ((yyvsp[(3) - (3)].node) != NULL)
						(yyval.list) = lappend((yyvsp[(1) - (3)].list), makeRawStmt((yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]) + 1));
					else
						(yyval.list) = (yyvsp[(1) - (3)].list);
				;}
    break;

  case 4:
#line 486 "third_party/libpg_query/grammar/grammar.y"
    {
					if ((yyvsp[(1) - (1)].node) != NULL)
						(yyval.list) = list_make1(makeRawStmt((yyvsp[(1) - (1)].node), 0));
					else
						(yyval.list) = NIL;
				;}
    break;

  case 38:
#line 528 "third_party/libpg_query/grammar/grammar.y"
    { (yyval.node) = NULL; ;}
    break;

  case 39:
#line 10 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_TABLE;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 40:
#line 19 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_TABLE;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 41:
#line 28 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_INDEX;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 42:
#line 37 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_INDEX;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 43:
#line 46 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_SEQUENCE;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 44:
#line 55 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_SEQUENCE;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 45:
#line 64 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_VIEW;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 46:
#line 73 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_VIEW;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 47:
#line 86 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 48:
#line 88 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 49:
#line 93 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = (yyvsp[(3) - (3)].node); ;}
    break;

  case 50:
#line 94 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = NULL; ;}
    break;

  case 51:
#line 100 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 52:
#line 104 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 53:
#line 108 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					if (strcmp((yyvsp[(2) - (2)].defelt)->defname, "as") == 0 ||
						strcmp((yyvsp[(2) - (2)].defelt)->defname, "restart") == 0 ||
						strcmp((yyvsp[(2) - (2)].defelt)->defname, "owned_by") == 0)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("sequence option \"%s\" not supported here", (yyvsp[(2) - (2)].defelt)->defname),
								 parser_errposition((yylsp[(2) - (2)]))));
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
				;}
    break;

  case 54:
#line 119 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("generated", (PGNode *) makeInteger((yyvsp[(3) - (3)].ival)), (yylsp[(1) - (3)]));
				;}
    break;

  case 55:
#line 127 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 56:
#line 131 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 57:
#line 140 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(2) - (2)].node);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 58:
#line 149 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(5) - (5)].node);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 59:
#line 158 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(3) - (3)].node);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 60:
#line 167 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(6) - (6)].node);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 61:
#line 176 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ColumnDefault;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (yyvsp[(4) - (4)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 62:
#line 185 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropNotNull;
					n->name = (yyvsp[(3) - (6)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 63:
#line 193 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetNotNull;
					n->name = (yyvsp[(3) - (6)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 64:
#line 201 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetStatistics;
					n->name = (yyvsp[(3) - (6)].str);
					n->def = (PGNode *) makeInteger((yyvsp[(6) - (6)].ival));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 65:
#line 210 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetOptions;
					n->name = (yyvsp[(3) - (5)].str);
					n->def = (PGNode *) (yyvsp[(5) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 66:
#line 219 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ResetOptions;
					n->name = (yyvsp[(3) - (5)].str);
					n->def = (PGNode *) (yyvsp[(5) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 67:
#line 228 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetStorage;
					n->name = (yyvsp[(3) - (6)].str);
					n->def = (PGNode *) makeString((yyvsp[(6) - (6)].str));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 68:
#line 237 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGConstraint *c = makeNode(PGConstraint);

					c->contype = PG_CONSTR_IDENTITY;
					c->generated_when = (yyvsp[(6) - (9)].ival);
					c->options = (yyvsp[(9) - (9)].list);
					c->location = (yylsp[(5) - (9)]);

					n->subtype = PG_AT_AddIdentity;
					n->name = (yyvsp[(3) - (9)].str);
					n->def = (PGNode *) c;

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 69:
#line 254 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetIdentity;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (PGNode *) (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 70:
#line 263 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = AT_DropIdentity;
					n->name = (yyvsp[(3) - (5)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 71:
#line 272 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = AT_DropIdentity;
					n->name = (yyvsp[(3) - (7)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 72:
#line 281 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropColumn;
					n->name = (yyvsp[(5) - (6)].str);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 73:
#line 291 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropColumn;
					n->name = (yyvsp[(3) - (4)].str);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 74:
#line 304 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGColumnDef *def = makeNode(PGColumnDef);
					n->subtype = PG_AT_AlterColumnType;
					n->name = (yyvsp[(3) - (8)].str);
					n->def = (PGNode *) def;
					/* We only use these fields of the PGColumnDef node */
					def->typeName = (yyvsp[(6) - (8)].typnam);
					def->collClause = (PGCollateClause *) (yyvsp[(7) - (8)].node);
					def->raw_default = (yyvsp[(8) - (8)].node);
					def->location = (yylsp[(3) - (8)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 75:
#line 319 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AlterColumnGenericOptions;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (PGNode *) (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 76:
#line 328 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddConstraint;
					n->def = (yyvsp[(2) - (2)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 77:
#line 336 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGConstraint *c = makeNode(PGConstraint);
					n->subtype = PG_AT_AlterConstraint;
					n->def = (PGNode *) c;
					c->contype = PG_CONSTR_FOREIGN; /* others not supported, yet */
					c->conname = (yyvsp[(3) - (4)].str);
					processCASbits((yyvsp[(4) - (4)].ival), (yylsp[(4) - (4)]), "ALTER CONSTRAINT statement",
									&c->deferrable,
									&c->initdeferred,
									NULL, NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 78:
#line 351 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ValidateConstraint;
					n->name = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 79:
#line 359 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropConstraint;
					n->name = (yyvsp[(5) - (6)].str);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 80:
#line 369 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropConstraint;
					n->name = (yyvsp[(3) - (4)].str);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 81:
#line 379 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetLogged;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 82:
#line 386 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetUnLogged;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 83:
#line 393 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetRelOptions;
					n->def = (PGNode *)(yyvsp[(2) - (2)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 84:
#line 401 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ResetRelOptions;
					n->def = (PGNode *)(yyvsp[(2) - (2)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 85:
#line 408 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_GenericOptions;
					n->def = (PGNode *)(yyvsp[(1) - (1)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 86:
#line 418 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 87:
#line 419 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = NULL; ;}
    break;

  case 88:
#line 425 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(1) - (1)].defelt);
				;}
    break;

  case 89:
#line 429 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
					(yyval.defelt)->defaction = PG_DEFELEM_SET;
				;}
    break;

  case 90:
#line 434 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
					(yyval.defelt)->defaction = PG_DEFELEM_ADD;
				;}
    break;

  case 91:
#line 439 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElemExtended(NULL, (yyvsp[(2) - (2)].str), NULL, DEFELEM_DROP, (yylsp[(2) - (2)]));
				;}
    break;

  case 92:
#line 446 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 93:
#line 447 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 94:
#line 452 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 95:
#line 456 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 1; ;}
    break;

  case 96:
#line 457 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 0; ;}
    break;

  case 97:
#line 8 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = (yyvsp[(2) - (2)].str);
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 98:
#line 14 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = (yyvsp[(3) - (3)].str);
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 99:
#line 20 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = NULL;
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 100:
#line 26 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = NULL;
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 101:
#line 7 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SCHEMA;
					n->subname = (yyvsp[(3) - (6)].str);
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 102:
#line 16 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 103:
#line 26 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 104:
#line 36 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 105:
#line 46 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 106:
#line 56 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 107:
#line 66 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 108:
#line 76 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_INDEX;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 109:
#line 86 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_INDEX;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 110:
#line 96 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_COLUMN;
					n->relationType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (8)].range);
					n->subname = (yyvsp[(6) - (8)].str);
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 111:
#line 107 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_COLUMN;
					n->relationType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (10)].range);
					n->subname = (yyvsp[(8) - (10)].str);
					n->newname = (yyvsp[(10) - (10)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 112:
#line 118 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABCONSTRAINT;
					n->relation = (yyvsp[(3) - (8)].range);
					n->subname = (yyvsp[(6) - (8)].str);
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 113:
#line 128 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABCONSTRAINT;
					n->relation = (yyvsp[(5) - (10)].range);
					n->subname = (yyvsp[(8) - (10)].str);
					n->newname = (yyvsp[(10) - (10)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 114:
#line 140 "third_party/libpg_query/grammar/statements/rename.y"
    { (yyval.ival) = COLUMN; ;}
    break;

  case 115:
#line 141 "third_party/libpg_query/grammar/statements/rename.y"
    { (yyval.ival) = 0; ;}
    break;

  case 116:
#line 10 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(5) - (7)].istmt)->relation = (yyvsp[(4) - (7)].range);
					(yyvsp[(5) - (7)].istmt)->onConflictClause = (yyvsp[(6) - (7)].onconflict);
					(yyvsp[(5) - (7)].istmt)->returningList = (yyvsp[(7) - (7)].list);
					(yyvsp[(5) - (7)].istmt)->withClause = (yyvsp[(1) - (7)].with);
					(yyval.node) = (PGNode *) (yyvsp[(5) - (7)].istmt);
				;}
    break;

  case 117:
#line 22 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = (yyvsp[(1) - (1)].node);
				;}
    break;

  case 118:
#line 28 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->override = (yyvsp[(2) - (4)].override);
					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
				;}
    break;

  case 119:
#line 35 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = (yyvsp[(2) - (4)].list);
					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
				;}
    break;

  case 120:
#line 41 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = (yyvsp[(2) - (7)].list);
					(yyval.istmt)->override = (yyvsp[(5) - (7)].override);
					(yyval.istmt)->selectStmt = (yyvsp[(7) - (7)].node);
				;}
    break;

  case 121:
#line 48 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = NULL;
				;}
    break;

  case 122:
#line 58 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
				;}
    break;

  case 123:
#line 62 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(1) - (3)].range)->alias = makeAlias((yyvsp[(3) - (3)].str), NIL);
					(yyval.range) = (yyvsp[(1) - (3)].range);
				;}
    break;

  case 124:
#line 71 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = makeNode(PGInferClause);
					(yyval.infer)->indexElems = (yyvsp[(2) - (4)].list);
					(yyval.infer)->whereClause = (yyvsp[(4) - (4)].node);
					(yyval.infer)->conname = NULL;
					(yyval.infer)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 125:
#line 80 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = makeNode(PGInferClause);
					(yyval.infer)->indexElems = NIL;
					(yyval.infer)->whereClause = NULL;
					(yyval.infer)->conname = (yyvsp[(3) - (3)].str);
					(yyval.infer)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 126:
#line 88 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = NULL;
				;}
    break;

  case 127:
#line 95 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.with) = (yyvsp[(1) - (1)].with); ;}
    break;

  case 128:
#line 96 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.with) = NULL; ;}
    break;

  case 129:
#line 102 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(1) - (2)].str);
					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.target)->val = NULL;
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 130:
#line 114 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(1) - (3)].target)->val = (PGNode *) (yyvsp[(3) - (3)].node);
					(yyval.list) = list_make1((yyvsp[(1) - (3)].target));
				;}
    break;

  case 131:
#line 119 "third_party/libpg_query/grammar/statements/insert.y"
    {
					int ncolumns = list_length((yyvsp[(2) - (5)].list));
					int i = 1;
					PGListCell *col_cell;

					/* Create a PGMultiAssignRef source for each target */
					foreach(col_cell, (yyvsp[(2) - (5)].list))
					{
						PGResTarget *res_col = (PGResTarget *) lfirst(col_cell);
						PGMultiAssignRef *r = makeNode(PGMultiAssignRef);

						r->source = (PGNode *) (yyvsp[(5) - (5)].node);
						r->colno = i;
						r->ncolumns = ncolumns;
						res_col->val = (PGNode *) r;
						i++;
					}

					(yyval.list) = (yyvsp[(2) - (5)].list);
				;}
    break;

  case 132:
#line 144 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = makeNode(PGOnConflictClause);
					(yyval.onconflict)->action = PG_ONCONFLICT_UPDATE;
					(yyval.onconflict)->infer = (yyvsp[(3) - (8)].infer);
					(yyval.onconflict)->targetList = (yyvsp[(7) - (8)].list);
					(yyval.onconflict)->whereClause = (yyvsp[(8) - (8)].node);
					(yyval.onconflict)->location = (yylsp[(1) - (8)]);
				;}
    break;

  case 133:
#line 154 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = makeNode(PGOnConflictClause);
					(yyval.onconflict)->action = PG_ONCONFLICT_NOTHING;
					(yyval.onconflict)->infer = (yyvsp[(3) - (5)].infer);
					(yyval.onconflict)->targetList = NIL;
					(yyval.onconflict)->whereClause = NULL;
					(yyval.onconflict)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 134:
#line 163 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = NULL;
				;}
    break;

  case 135:
#line 170 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = (yyvsp[(1) - (5)].str);
					(yyval.ielem)->expr = NULL;
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(2) - (5)].list);
					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].nullorder);
				;}
    break;

  case 136:
#line 181 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[(1) - (5)].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(2) - (5)].list);
					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].nullorder);
				;}
    break;

  case 137:
#line 192 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[(2) - (7)].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(4) - (7)].list);
					(yyval.ielem)->opclass = (yyvsp[(5) - (7)].list);
					(yyval.ielem)->ordering = (yyvsp[(6) - (7)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(7) - (7)].nullorder);
				;}
    break;

  case 138:
#line 206 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 139:
#line 207 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 140:
#line 213 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.override) = PG_OVERRIDING_USER_VALUE; ;}
    break;

  case 141:
#line 214 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.override) = OVERRIDING_SYSTEM_VALUE; ;}
    break;

  case 142:
#line 219 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 143:
#line 220 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].target)); ;}
    break;

  case 144:
#line 226 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 145:
#line 227 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 146:
#line 231 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 147:
#line 232 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 148:
#line 238 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 149:
#line 240 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
    break;

  case 150:
#line 245 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 151:
#line 246 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_concat((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].list)); ;}
    break;

  case 152:
#line 250 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].ielem)); ;}
    break;

  case 153:
#line 251 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].ielem)); ;}
    break;

  case 154:
#line 257 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(1) - (2)].str);
					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.target)->val = NULL;	/* upper production sets this */
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 155:
#line 8 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_NOTHING;
					n->name = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 156:
#line 15 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_ASSIGNMENT;
					n->name = (yyvsp[(2) - (4)].str);
					n->args = (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 157:
#line 23 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_CALL;
					n->name = (yyvsp[(2) - (5)].str);
					n->args = (yyvsp[(4) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 158:
#line 10 "third_party/libpg_query/grammar/statements/create_sequence.y"
    {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[(4) - (5)].range)->relpersistence = (yyvsp[(2) - (5)].ival);
					n->sequence = (yyvsp[(4) - (5)].range);
					n->options = (yyvsp[(5) - (5)].list);
					n->ownerId = InvalidOid;
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 159:
#line 20 "third_party/libpg_query/grammar/statements/create_sequence.y"
    {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[(7) - (8)].range)->relpersistence = (yyvsp[(2) - (8)].ival);
					n->sequence = (yyvsp[(7) - (8)].range);
					n->options = (yyvsp[(8) - (8)].list);
					n->ownerId = InvalidOid;
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 160:
#line 32 "third_party/libpg_query/grammar/statements/create_sequence.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 161:
#line 33 "third_party/libpg_query/grammar/statements/create_sequence.y"
    { (yyval.list) = NIL; ;}
    break;

  case 162:
#line 8 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(2) - (3)].str);
					n->params = (yyvsp[(3) - (3)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 163:
#line 16 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(7) - (9)].str);
					n->params = (yyvsp[(8) - (9)].list);
					ctas->query = (PGNode *) n;
					ctas->into = (yyvsp[(4) - (9)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = false;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(4) - (9)].into)->rel->relpersistence = (yyvsp[(2) - (9)].ival);
					(yyvsp[(4) - (9)].into)->skipData = !((yyvsp[(9) - (9)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 164:
#line 33 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(10) - (12)].str);
					n->params = (yyvsp[(11) - (12)].list);
					ctas->query = (PGNode *) n;
					ctas->into = (yyvsp[(7) - (12)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = true;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(7) - (12)].into)->rel->relpersistence = (yyvsp[(2) - (12)].ival);
					(yyvsp[(7) - (12)].into)->skipData = !((yyvsp[(12) - (12)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 165:
#line 51 "third_party/libpg_query/grammar/statements/execute.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 166:
#line 52 "third_party/libpg_query/grammar/statements/execute.y"
    { (yyval.list) = NIL; ;}
    break;

  case 167:
#line 10 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
					n->sequence = (yyvsp[(3) - (4)].range);
					n->options = (yyvsp[(4) - (4)].list);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 168:
#line 18 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
					n->sequence = (yyvsp[(5) - (6)].range);
					n->options = (yyvsp[(6) - (6)].list);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 169:
#line 29 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 170:
#line 30 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 171:
#line 34 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 172:
#line 35 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 173:
#line 36 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 174:
#line 41 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeFloat((yyvsp[(1) - (1)].str)); ;}
    break;

  case 175:
#line 42 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeFloat((yyvsp[(2) - (2)].str)); ;}
    break;

  case 176:
#line 44 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.value) = makeFloat((yyvsp[(2) - (2)].str));
					doNegateFloat((yyval.value));
				;}
    break;

  case 177:
#line 48 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeInteger((yyvsp[(1) - (1)].ival)); ;}
    break;

  case 178:
#line 53 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("as", (PGNode *)(yyvsp[(2) - (2)].typnam), (yylsp[(1) - (2)]));
				;}
    break;

  case 179:
#line 57 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cache", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 180:
#line 61 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 181:
#line 65 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(false), (yylsp[(1) - (2)]));
				;}
    break;

  case 182:
#line 69 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("increment", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 183:
#line 73 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("maxvalue", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 184:
#line 77 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("minvalue", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 185:
#line 81 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("maxvalue", NULL, (yylsp[(1) - (2)]));
				;}
    break;

  case 186:
#line 85 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("minvalue", NULL, (yylsp[(1) - (2)]));
				;}
    break;

  case 187:
#line 89 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("owned_by", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 188:
#line 93 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					/* not documented, only used by pg_dump */
					(yyval.defelt) = makeDefElem("sequence_name", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 189:
#line 98 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("start", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 190:
#line 102 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 191:
#line 106 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 192:
#line 112 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 193:
#line 113 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 194:
#line 117 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 195:
#line 118 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = + (yyvsp[(2) - (2)].ival); ;}
    break;

  case 196:
#line 119 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = - (yyvsp[(2) - (2)].ival); ;}
    break;

  case 197:
#line 3 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 198:
#line 10 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_BEGIN;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 199:
#line 16 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_START;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 200:
#line 22 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 201:
#line 29 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 202:
#line 36 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 203:
#line 45 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 204:
#line 46 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 205:
#line 47 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 206:
#line 9 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(4) - (9)].range)->relpersistence = (yyvsp[(2) - (9)].ival);
					n->relation = (yyvsp[(4) - (9)].range);
					n->tableElts = (yyvsp[(6) - (9)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(8) - (9)].list);
					n->oncommit = (yyvsp[(9) - (9)].oncommit);
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 207:
#line 24 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(7) - (12)].range)->relpersistence = (yyvsp[(2) - (12)].ival);
					n->relation = (yyvsp[(7) - (12)].range);
					n->tableElts = (yyvsp[(9) - (12)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(11) - (12)].list);
					n->oncommit = (yyvsp[(12) - (12)].oncommit);
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 208:
#line 41 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = 0; ;}
    break;

  case 209:
#line 43 "third_party/libpg_query/grammar/statements/create.y"
    {
					/*
					 * We must complain about conflicting options.
					 * We could, but choose not to, complain about redundant
					 * options (ie, where $2's bit is already set in $1).
					 */
					int		newspec = (yyvsp[(1) - (2)].ival) | (yyvsp[(2) - (2)].ival);

					/* special message for this case */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED)) == (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("constraint declared INITIALLY DEFERRED must be DEFERRABLE"),
								 parser_errposition((yylsp[(2) - (2)]))));
					/* generic message for other conflicts */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE)) == (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE) ||
						(newspec & (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED)) == (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("conflicting constraint properties"),
								 parser_errposition((yylsp[(2) - (2)]))));
					(yyval.ival) = newspec;
				;}
    break;

  case 210:
#line 69 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].typnam); ;}
    break;

  case 211:
#line 70 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
    break;

  case 212:
#line 71 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].list); ;}
    break;

  case 213:
#line 72 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].value); ;}
    break;

  case 214:
#line 73 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 215:
#line 74 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
    break;

  case 216:
#line 78 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 217:
#line 79 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 218:
#line 84 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 219:
#line 89 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_NOACTION; ;}
    break;

  case 220:
#line 90 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_RESTRICT; ;}
    break;

  case 221:
#line 91 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_CASCADE; ;}
    break;

  case 222:
#line 92 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_SETNULL; ;}
    break;

  case 223:
#line 93 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_SETDEFAULT; ;}
    break;

  case 224:
#line 99 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = castNode(PGConstraint, (yyvsp[(3) - (3)].node));
					n->conname = (yyvsp[(2) - (3)].str);
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 225:
#line 105 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 226:
#line 106 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 227:
#line 108 "third_party/libpg_query/grammar/statements/create.y"
    {
					/*
					 * Note: the PGCollateClause is momentarily included in
					 * the list built by ColQualList, but we split it out
					 * again in SplitColQualList.
					 */
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[(2) - (2)].list);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 228:
#line 125 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_NOTNULL;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 229:
#line 132 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_NULL;
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 230:
#line 139 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (2)]);
					n->keys = NULL;
					n->options = (yyvsp[(2) - (2)].list);
					n->indexname = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 231:
#line 149 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (3)]);
					n->keys = NULL;
					n->options = (yyvsp[(3) - (3)].list);
					n->indexname = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 232:
#line 159 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_CHECK;
					n->location = (yylsp[(1) - (5)]);
					n->is_no_inherit = (yyvsp[(5) - (5)].boolean);
					n->raw_expr = (yyvsp[(3) - (5)].node);
					n->cooked_expr = NULL;
					n->skip_validation = false;
					n->initially_valid = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 233:
#line 171 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_DEFAULT;
					n->location = (yylsp[(1) - (2)]);
					n->raw_expr = (yyvsp[(2) - (2)].node);
					n->cooked_expr = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 234:
#line 180 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_IDENTITY;
					n->generated_when = (yyvsp[(2) - (5)].ival);
					n->options = (yyvsp[(5) - (5)].list);
					n->location = (yylsp[(1) - (5)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 235:
#line 189 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_FOREIGN;
					n->location = (yylsp[(1) - (5)]);
					n->pktable			= (yyvsp[(2) - (5)].range);
					n->fk_attrs			= NIL;
					n->pk_attrs			= (yyvsp[(3) - (5)].list);
					n->fk_matchtype		= (yyvsp[(4) - (5)].ival);
					n->fk_upd_action	= (char) ((yyvsp[(5) - (5)].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[(5) - (5)].ival) & 0xFF);
					n->skip_validation  = false;
					n->initially_valid  = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 236:
#line 208 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 237:
#line 214 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
    break;

  case 238:
#line 220 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(1) - (1)].ival) << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); ;}
    break;

  case 239:
#line 222 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | ((yyvsp[(1) - (1)].ival) & 0xFF); ;}
    break;

  case 240:
#line 224 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(1) - (2)].ival) << 8) | ((yyvsp[(2) - (2)].ival) & 0xFF); ;}
    break;

  case 241:
#line 226 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(2) - (2)].ival) << 8) | ((yyvsp[(1) - (2)].ival) & 0xFF); ;}
    break;

  case 242:
#line 228 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); ;}
    break;

  case 243:
#line 233 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 244:
#line 234 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 245:
#line 238 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = ONCOMMIT_DROP; ;}
    break;

  case 246:
#line 239 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_DELETE_ROWS; ;}
    break;

  case 247:
#line 240 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_PRESERVE_ROWS; ;}
    break;

  case 248:
#line 241 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_NOOP; ;}
    break;

  case 249:
#line 246 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 250:
#line 250 "third_party/libpg_query/grammar/statements/create.y"
    {  (yyval.boolean) = true; ;}
    break;

  case 251:
#line 251 "third_party/libpg_query/grammar/statements/create.y"
    {  (yyval.boolean) = false; ;}
    break;

  case 252:
#line 257 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = castNode(PGConstraint, (yyvsp[(3) - (3)].node));
					n->conname = (yyvsp[(2) - (3)].str);
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 253:
#line 263 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 254:
#line 268 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_COMMENTS; ;}
    break;

  case 255:
#line 269 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_CONSTRAINTS; ;}
    break;

  case 256:
#line 270 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_DEFAULTS; ;}
    break;

  case 257:
#line 271 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_IDENTITY; ;}
    break;

  case 258:
#line 272 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_INDEXES; ;}
    break;

  case 259:
#line 273 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_STATISTICS; ;}
    break;

  case 260:
#line 274 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_STORAGE; ;}
    break;

  case 261:
#line 275 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_ALL; ;}
    break;

  case 262:
#line 281 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 263:
#line 282 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
    break;

  case 264:
#line 286 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(3) - (3)].str); ;}
    break;

  case 265:
#line 292 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_DEFERRABLE;
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 266:
#line 299 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_NOT_DEFERRABLE;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 267:
#line 306 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_DEFERRED;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 268:
#line 313 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_IMMEDIATE;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 269:
#line 324 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 270:
#line 325 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(true), (yylsp[(1) - (2)]))); ;}
    break;

  case 271:
#line 326 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(false), (yylsp[(1) - (2)]))); ;}
    break;

  case 272:
#line 327 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 273:
#line 331 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 274:
#line 336 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
    break;

  case 275:
#line 337 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) & ~(yyvsp[(3) - (3)].ival); ;}
    break;

  case 276:
#line 338 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = 0; ;}
    break;

  case 277:
#line 343 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 278:
#line 348 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NOT_DEFERRABLE; ;}
    break;

  case 279:
#line 349 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_DEFERRABLE; ;}
    break;

  case 280:
#line 350 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_INITIALLY_IMMEDIATE; ;}
    break;

  case 281:
#line 351 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_INITIALLY_DEFERRED; ;}
    break;

  case 282:
#line 352 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NOT_VALID; ;}
    break;

  case 283:
#line 353 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NO_INHERIT; ;}
    break;

  case 284:
#line 359 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->colname = (yyvsp[(1) - (4)].str);
					n->typeName = (yyvsp[(2) - (4)].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collOid = InvalidOid;
					n->fdwoptions = (yyvsp[(3) - (4)].list);
					SplitColQualList((yyvsp[(4) - (4)].list), &n->constraints, &n->collClause,
									 yyscanner);
					n->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 285:
#line 382 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 286:
#line 386 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 287:
#line 392 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 288:
#line 393 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
    break;

  case 289:
#line 397 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 290:
#line 401 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 291:
#line 402 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 292:
#line 403 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 293:
#line 408 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (PGNode *) (yyvsp[(3) - (3)].node), (yylsp[(1) - (3)]));
				;}
    break;

  case 294:
#line 412 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 295:
#line 419 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 296:
#line 420 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 297:
#line 425 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 298:
#line 426 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 299:
#line 431 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str));
				;}
    break;

  case 300:
#line 438 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 301:
#line 439 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 302:
#line 444 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 303:
#line 445 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 304:
#line 449 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
    break;

  case 305:
#line 455 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (PGNode *) (yyvsp[(3) - (3)].node), (yylsp[(1) - (3)]));
				;}
    break;

  case 306:
#line 459 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 307:
#line 463 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (5)].str), (yyvsp[(3) - (5)].str), (PGNode *) (yyvsp[(5) - (5)].node),
											 PG_DEFELEM_UNSPEC, (yylsp[(1) - (5)]));
				;}
    break;

  case 308:
#line 468 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str), NULL, PG_DEFELEM_UNSPEC, (yylsp[(1) - (3)]));
				;}
    break;

  case 309:
#line 475 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 310:
#line 476 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 311:
#line 480 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 312:
#line 482 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(1) - (4)].str)), (yyvsp[(2) - (4)].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 313:
#line 488 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(2) - (5)].str)), (yyvsp[(3) - (5)].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->setof = true;
					(yyval.typnam)->location = (yylsp[(2) - (5)]);
				;}
    break;

  case 314:
#line 499 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_CHECK;
					n->location = (yylsp[(1) - (5)]);
					n->raw_expr = (yyvsp[(3) - (5)].node);
					n->cooked_expr = NULL;
					processCASbits((yyvsp[(5) - (5)].ival), (yylsp[(5) - (5)]), "CHECK",
								   NULL, NULL, &n->skip_validation,
								   &n->is_no_inherit, yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 315:
#line 513 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (6)]);
					n->keys = (yyvsp[(3) - (6)].list);
					n->options = (yyvsp[(5) - (6)].list);
					n->indexname = NULL;
					processCASbits((yyvsp[(6) - (6)].ival), (yylsp[(6) - (6)]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 316:
#line 526 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (3)]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[(2) - (3)].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[(3) - (3)].ival), (yylsp[(3) - (3)]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 317:
#line 541 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (7)]);
					n->keys = (yyvsp[(4) - (7)].list);
					n->options = (yyvsp[(6) - (7)].list);
					n->indexname = NULL;
					processCASbits((yyvsp[(7) - (7)].ival), (yylsp[(7) - (7)]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 318:
#line 554 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (4)]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[(3) - (4)].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[(4) - (4)].ival), (yylsp[(4) - (4)]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 319:
#line 569 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_FOREIGN;
					n->location = (yylsp[(1) - (11)]);
					n->pktable			= (yyvsp[(7) - (11)].range);
					n->fk_attrs			= (yyvsp[(4) - (11)].list);
					n->pk_attrs			= (yyvsp[(8) - (11)].list);
					n->fk_matchtype		= (yyvsp[(9) - (11)].ival);
					n->fk_upd_action	= (char) ((yyvsp[(10) - (11)].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[(10) - (11)].ival) & 0xFF);
					processCASbits((yyvsp[(11) - (11)].ival), (yylsp[(11) - (11)]), "FOREIGN KEY",
								   &n->deferrable, &n->initdeferred,
								   &n->skip_validation, NULL,
								   yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 320:
#line 591 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 321:
#line 595 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 322:
#line 602 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_FULL;
			;}
    break;

  case 323:
#line 606 "third_party/libpg_query/grammar/statements/create.y"
    {
				ereport(ERROR,
						(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
						 errmsg("MATCH PARTIAL not yet implemented"),
						 parser_errposition((yylsp[(1) - (2)]))));
				(yyval.ival) = PG_FKCONSTR_MATCH_PARTIAL;
			;}
    break;

  case 324:
#line 614 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
			;}
    break;

  case 325:
#line 618 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
			;}
    break;

  case 326:
#line 626 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGTableLikeClause *n = makeNode(PGTableLikeClause);
					n->relation = (yyvsp[(2) - (3)].range);
					n->options = (yyvsp[(3) - (3)].ival);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 327:
#line 635 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 328:
#line 636 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 329:
#line 637 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 330:
#line 638 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 331:
#line 640 "third_party/libpg_query/grammar/statements/create.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 332:
#line 647 "third_party/libpg_query/grammar/statements/create.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 333:
#line 653 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_UNLOGGED; ;}
    break;

  case 334:
#line 654 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = RELPERSISTENCE_PERMANENT; ;}
    break;

  case 335:
#line 659 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_ATTRIBUTE_IDENTITY_ALWAYS; ;}
    break;

  case 336:
#line 660 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ATTRIBUTE_IDENTITY_BY_DEFAULT; ;}
    break;

  case 337:
#line 10 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 338:
#line 20 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (4)].objtype);
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 339:
#line 30 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 340:
#line 40 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (4)].objtype);
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 341:
#line 50 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->objects = list_make1(lappend((yyvsp[(5) - (6)].list), makeString((yyvsp[(3) - (6)].str))));
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = false;
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 342:
#line 60 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (8)].objtype);
					n->objects = list_make1(lappend((yyvsp[(7) - (8)].list), makeString((yyvsp[(5) - (8)].str))));
					n->behavior = (yyvsp[(8) - (8)].dbehavior);
					n->missing_ok = true;
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 343:
#line 73 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TABLE; ;}
    break;

  case 344:
#line 74 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_SEQUENCE; ;}
    break;

  case 345:
#line 75 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FUNCTION; ;}
    break;

  case 346:
#line 76 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FUNCTION; ;}
    break;

  case 347:
#line 77 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_VIEW; ;}
    break;

  case 348:
#line 78 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_MATVIEW; ;}
    break;

  case 349:
#line 79 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_INDEX; ;}
    break;

  case 350:
#line 80 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FOREIGN_TABLE; ;}
    break;

  case 351:
#line 81 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_COLLATION; ;}
    break;

  case 352:
#line 82 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_CONVERSION; ;}
    break;

  case 353:
#line 83 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_STATISTIC_EXT; ;}
    break;

  case 354:
#line 84 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSPARSER; ;}
    break;

  case 355:
#line 85 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSDICTIONARY; ;}
    break;

  case 356:
#line 86 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSTEMPLATE; ;}
    break;

  case 357:
#line 87 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSCONFIGURATION; ;}
    break;

  case 358:
#line 92 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_ACCESS_METHOD; ;}
    break;

  case 359:
#line 93 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_EVENT_TRIGGER; ;}
    break;

  case 360:
#line 94 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_EXTENSION; ;}
    break;

  case 361:
#line 95 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FDW; ;}
    break;

  case 362:
#line 96 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_PUBLICATION; ;}
    break;

  case 363:
#line 97 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_SCHEMA; ;}
    break;

  case 364:
#line 98 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FOREIGN_SERVER; ;}
    break;

  case 365:
#line 103 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 366:
#line 104 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 367:
#line 109 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_CASCADE; ;}
    break;

  case 368:
#line 110 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_RESTRICT; ;}
    break;

  case 369:
#line 111 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_RESTRICT; /* default */ ;}
    break;

  case 370:
#line 116 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_POLICY; ;}
    break;

  case 371:
#line 117 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_RULE; ;}
    break;

  case 372:
#line 118 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TRIGGER; ;}
    break;

  case 373:
#line 8 "third_party/libpg_query/grammar/statements/create_function.y"
    {
					PGCreateFunctionStmt *n = makeNode(PGCreateFunctionStmt);
					n->name = (yyvsp[(3) - (6)].range);
					n->params = (yyvsp[(4) - (6)].list);
					n->function = (yyvsp[(6) - (6)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 376:
#line 24 "third_party/libpg_query/grammar/statements/create_function.y"
    {
				(yyval.list) = NIL;
			;}
    break;

  case 377:
#line 28 "third_party/libpg_query/grammar/statements/create_function.y"
    {
				(yyval.list) = (yyvsp[(2) - (3)].list);
			;}
    break;

  case 378:
#line 12 "third_party/libpg_query/grammar/statements/update.y"
    {
					PGUpdateStmt *n = makeNode(PGUpdateStmt);
					n->relation = (yyvsp[(3) - (8)].range);
					n->targetList = (yyvsp[(5) - (8)].list);
					n->fromClause = (yyvsp[(6) - (8)].list);
					n->whereClause = (yyvsp[(7) - (8)].node);
					n->returningList = (yyvsp[(8) - (8)].list);
					n->withClause = (yyvsp[(1) - (8)].with);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 379:
#line 3 "third_party/libpg_query/grammar/statements/copy.y"
    {
					PGCopyStmt *n = makeNode(PGCopyStmt);
					n->relation = (yyvsp[(3) - (11)].range);
					n->query = NULL;
					n->attlist = (yyvsp[(4) - (11)].list);
					n->is_from = (yyvsp[(6) - (11)].boolean);
					n->is_program = (yyvsp[(7) - (11)].boolean);
					n->filename = (yyvsp[(8) - (11)].str);

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[(8) - (11)]))));

					n->options = NIL;
					/* Concatenate user-supplied flags */
					if ((yyvsp[(2) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(2) - (11)].defelt));
					if ((yyvsp[(5) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(5) - (11)].defelt));
					if ((yyvsp[(9) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(9) - (11)].defelt));
					if ((yyvsp[(11) - (11)].list))
						n->options = list_concat(n->options, (yyvsp[(11) - (11)].list));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 380:
#line 31 "third_party/libpg_query/grammar/statements/copy.y"
    {
					PGCopyStmt *n = makeNode(PGCopyStmt);
					n->relation = NULL;
					n->query = (yyvsp[(3) - (9)].node);
					n->attlist = NIL;
					n->is_from = false;
					n->is_program = (yyvsp[(6) - (9)].boolean);
					n->filename = (yyvsp[(7) - (9)].str);
					n->options = (yyvsp[(9) - (9)].list);

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[(5) - (9)]))));

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 381:
#line 53 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = true; ;}
    break;

  case 382:
#line 54 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = false; ;}
    break;

  case 383:
#line 60 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(2) - (3)]));
				;}
    break;

  case 384:
#line 63 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 385:
#line 69 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 386:
#line 73 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 387:
#line 80 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 388:
#line 81 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 389:
#line 85 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 390:
#line 86 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 391:
#line 91 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = true; ;}
    break;

  case 392:
#line 92 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = false; ;}
    break;

  case 393:
#line 96 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 394:
#line 97 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 395:
#line 102 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 396:
#line 103 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].value); ;}
    break;

  case 397:
#line 104 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeNode(PGAStar); ;}
    break;

  case 398:
#line 105 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) (yyvsp[(2) - (3)].list); ;}
    break;

  case 399:
#line 106 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = NULL; ;}
    break;

  case 400:
#line 112 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 401:
#line 120 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[(1) - (2)]));
				;}
    break;

  case 402:
#line 123 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 403:
#line 128 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 404:
#line 129 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = NIL; ;}
    break;

  case 405:
#line 135 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[(1) - (1)]));
				;}
    break;

  case 406:
#line 138 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 407:
#line 144 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[(1) - (1)]));
				;}
    break;

  case 408:
#line 148 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 409:
#line 152 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("freeze", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 410:
#line 156 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 411:
#line 160 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("null", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 412:
#line 164 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("csv"), (yylsp[(1) - (1)]));
				;}
    break;

  case 413:
#line 168 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("header", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 414:
#line 172 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("quote", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 415:
#line 176 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("escape", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 416:
#line 180 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 417:
#line 184 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)makeNode(PGAStar), (yylsp[(1) - (3)]));
				;}
    break;

  case 418:
#line 188 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_not_null", (PGNode *)(yyvsp[(4) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 419:
#line 192 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_null", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 420:
#line 196 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("encoding", (PGNode *)makeString((yyvsp[(2) - (2)].str)), (yylsp[(1) - (2)]));
				;}
    break;

  case 421:
#line 203 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 422:
#line 209 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 423:
#line 210 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = NULL; ;}
    break;

  case 424:
#line 211 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = NULL; ;}
    break;

  case 425:
#line 217 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 426:
#line 221 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 429:
#line 52 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 430:
#line 53 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 431:
#line 68 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 432:
#line 70 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list), NIL,
										NULL, NULL, NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (2)].node);
				;}
    break;

  case 433:
#line 77 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(3) - (4)].list),
										(PGNode*) list_nth((yyvsp[(4) - (4)].list), 0), (PGNode*) list_nth((yyvsp[(4) - (4)].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (4)].node);
				;}
    break;

  case 434:
#line 85 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(4) - (4)].list),
										(PGNode*) list_nth((yyvsp[(3) - (4)].list), 0), (PGNode*) list_nth((yyvsp[(3) - (4)].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (4)].node);
				;}
    break;

  case 435:
#line 93 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (2)].node), NULL, NIL,
										NULL, NULL,
										(yyvsp[(1) - (2)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (2)].node);
				;}
    break;

  case 436:
#line 101 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].list), NIL,
										NULL, NULL,
										(yyvsp[(1) - (3)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (3)].node);
				;}
    break;

  case 437:
#line 109 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(4) - (5)].list),
										(PGNode*) list_nth((yyvsp[(5) - (5)].list), 0), (PGNode*) list_nth((yyvsp[(5) - (5)].list), 1),
										(yyvsp[(1) - (5)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (5)].node);
				;}
    break;

  case 438:
#line 117 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(5) - (5)].list),
										(PGNode*) list_nth((yyvsp[(4) - (5)].list), 0), (PGNode*) list_nth((yyvsp[(4) - (5)].list), 1),
										(yyvsp[(1) - (5)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (5)].node);
				;}
    break;

  case 439:
#line 127 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 440:
#line 128 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 441:
#line 158 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->targetList = (yyvsp[(3) - (10)].list);
					n->intoClause = (yyvsp[(4) - (10)].into);
					n->fromClause = (yyvsp[(5) - (10)].list);
					n->whereClause = (yyvsp[(6) - (10)].node);
					n->groupClause = (yyvsp[(7) - (10)].list);
					n->havingClause = (yyvsp[(8) - (10)].node);
					n->windowClause = (yyvsp[(9) - (10)].list);
					n->sampleOptions = (yyvsp[(10) - (10)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 442:
#line 173 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->distinctClause = (yyvsp[(2) - (10)].list);
					n->targetList = (yyvsp[(3) - (10)].list);
					n->intoClause = (yyvsp[(4) - (10)].into);
					n->fromClause = (yyvsp[(5) - (10)].list);
					n->whereClause = (yyvsp[(6) - (10)].node);
					n->groupClause = (yyvsp[(7) - (10)].list);
					n->havingClause = (yyvsp[(8) - (10)].node);
					n->windowClause = (yyvsp[(9) - (10)].list);
					n->sampleOptions = (yyvsp[(10) - (10)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 443:
#line 186 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 444:
#line 188 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* same as SELECT * FROM relation_expr */
					PGColumnRef *cr = makeNode(PGColumnRef);
					PGResTarget *rt = makeNode(PGResTarget);
					PGSelectStmt *n = makeNode(PGSelectStmt);

					cr->fields = list_make1(makeNode(PGAStar));
					cr->location = -1;

					rt->name = NULL;
					rt->indirection = NIL;
					rt->val = (PGNode *)cr;
					rt->location = -1;

					n->targetList = list_make1(rt);
					n->fromClause = list_make1((yyvsp[(2) - (2)].range));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 445:
#line 207 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_UNION, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 446:
#line 211 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_INTERSECT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 447:
#line 215 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_EXCEPT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 448:
#line 232 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[(1) - (2)]);
			;}
    break;

  case 449:
#line 239 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[(1) - (2)]);
			;}
    break;

  case 450:
#line 246 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(3) - (3)].list);
				(yyval.with)->recursive = true;
				(yyval.with)->location = (yylsp[(1) - (3)]);
			;}
    break;

  case 451:
#line 255 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 452:
#line 256 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 453:
#line 260 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGCommonTableExpr *n = makeNode(PGCommonTableExpr);
				n->ctename = (yyvsp[(1) - (6)].str);
				n->aliascolnames = (yyvsp[(2) - (6)].list);
				n->ctequery = (yyvsp[(5) - (6)].node);
				n->location = (yylsp[(1) - (6)]);
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 454:
#line 272 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.into) = makeNode(PGIntoClause);
					(yyval.into)->rel = (yyvsp[(2) - (2)].range);
					(yyval.into)->colNames = NIL;
					(yyval.into)->options = NIL;
					(yyval.into)->onCommit = PG_ONCOMMIT_NOOP;
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;
				;}
    break;

  case 455:
#line 282 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.into) = NULL; ;}
    break;

  case 456:
#line 291 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 457:
#line 296 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 458:
#line 301 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 459:
#line 306 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 460:
#line 311 "third_party/libpg_query/grammar/statements/select.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (4)]))));
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 461:
#line 319 "third_party/libpg_query/grammar/statements/select.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (4)]))));
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 462:
#line 327 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_UNLOGGED;
				;}
    break;

  case 463:
#line 332 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(2) - (2)].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				;}
    break;

  case 464:
#line 337 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				;}
    break;

  case 465:
#line 343 "third_party/libpg_query/grammar/statements/select.y"
    {;}
    break;

  case 466:
#line 344 "third_party/libpg_query/grammar/statements/select.y"
    {;}
    break;

  case 467:
#line 348 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 468:
#line 349 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 469:
#line 350 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 470:
#line 357 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(NIL); ;}
    break;

  case 471:
#line 358 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
    break;

  case 472:
#line 362 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL;;}
    break;

  case 473:
#line 363 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 474:
#line 367 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list);;}
    break;

  case 475:
#line 368 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 476:
#line 372 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 477:
#line 376 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].sortby)); ;}
    break;

  case 478:
#line 377 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].sortby)); ;}
    break;

  case 479:
#line 381 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.sortby) = makeNode(PGSortBy);
					(yyval.sortby)->node = (yyvsp[(1) - (4)].node);
					(yyval.sortby)->sortby_dir = SORTBY_USING;
					(yyval.sortby)->sortby_nulls = (yyvsp[(4) - (4)].nullorder);
					(yyval.sortby)->useOp = (yyvsp[(3) - (4)].list);
					(yyval.sortby)->location = (yylsp[(3) - (4)]);
				;}
    break;

  case 480:
#line 390 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.sortby) = makeNode(PGSortBy);
					(yyval.sortby)->node = (yyvsp[(1) - (3)].node);
					(yyval.sortby)->sortby_dir = (yyvsp[(2) - (3)].sortorder);
					(yyval.sortby)->sortby_nulls = (yyvsp[(3) - (3)].nullorder);
					(yyval.sortby)->useOp = NIL;
					(yyval.sortby)->location = -1;		/* no operator */
				;}
    break;

  case 481:
#line 400 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_ASC; ;}
    break;

  case 482:
#line 401 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_DESC; ;}
    break;

  case 483:
#line 402 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_DEFAULT; ;}
    break;

  case 484:
#line 405 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_FIRST; ;}
    break;

  case 485:
#line 406 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_LAST; ;}
    break;

  case 486:
#line 407 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_DEFAULT; ;}
    break;

  case 487:
#line 411 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(2) - (2)].node), (yyvsp[(1) - (2)].node)); ;}
    break;

  case 488:
#line 412 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 489:
#line 413 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2(NULL, (yyvsp[(1) - (1)].node)); ;}
    break;

  case 490:
#line 414 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (1)].node), NULL); ;}
    break;

  case 491:
#line 418 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 492:
#line 419 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2(NULL,NULL); ;}
    break;

  case 493:
#line 424 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 494:
#line 426 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* Disabled because it was too confusing, bjm 2002-02-18 */
					ereport(ERROR,
							(errcode(PG_ERRCODE_SYNTAX_ERROR),
							 errmsg("LIMIT #,# syntax is not supported"),
							 errhint("Use separate LIMIT and OFFSET clauses."),
							 parser_errposition((yylsp[(1) - (4)]))));
				;}
    break;

  case 495:
#line 442 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(3) - (5)].node); ;}
    break;

  case 496:
#line 444 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeIntConst(1, -1); ;}
    break;

  case 497:
#line 449 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 498:
#line 452 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 499:
#line 460 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeFloat((yyvsp[(1) - (2)].str)), true);
		;}
    break;

  case 500:
#line 464 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), true);
		;}
    break;

  case 501:
#line 468 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeFloat((yyvsp[(1) - (2)].str)), true);
		;}
    break;

  case 502:
#line 472 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), true);
		;}
    break;

  case 503:
#line 476 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (1)].ival)), false);
		;}
    break;

  case 504:
#line 480 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), false);
		;}
    break;

  case 505:
#line 487 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(3) - (3)].node);
				;}
    break;

  case 506:
#line 491 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 507:
#line 498 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 508:
#line 499 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = NULL; ;}
    break;

  case 509:
#line 504 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSampleOptions((yyvsp[(3) - (5)].node), (yyvsp[(1) - (5)].str), (yyvsp[(5) - (5)].ival), (yylsp[(1) - (5)]));
				;}
    break;

  case 510:
#line 508 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (1)].node), NULL, -1, (yylsp[(1) - (1)]));
		;}
    break;

  case 511:
#line 512 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (4)].node), (yyvsp[(3) - (4)].str), -1, (yylsp[(1) - (4)]));
		;}
    break;

  case 512:
#line 516 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (6)].node), (yyvsp[(3) - (6)].str), (yyvsp[(5) - (6)].ival), (yylsp[(1) - (6)]));
		;}
    break;

  case 513:
#line 523 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(2) - (2)].node);
				;}
    break;

  case 514:
#line 529 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 515:
#line 530 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 516:
#line 535 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = (yyvsp[(3) - (4)].ival); ;}
    break;

  case 517:
#line 536 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = -1; ;}
    break;

  case 518:
#line 540 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 519:
#line 542 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* LIMIT ALL is represented as a NULL constant */
					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
				;}
    break;

  case 520:
#line 549 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 521:
#line 569 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 522:
#line 571 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 523:
#line 573 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 524:
#line 577 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival),(yylsp[(1) - (1)])); ;}
    break;

  case 525:
#line 578 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str),(yylsp[(1) - (1)])); ;}
    break;

  case 526:
#line 582 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 527:
#line 583 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 528:
#line 586 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 529:
#line 587 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 530:
#line 612 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 531:
#line 613 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 532:
#line 617 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 533:
#line 618 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].node)); ;}
    break;

  case 534:
#line 622 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 535:
#line 623 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 536:
#line 628 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_EMPTY, NIL, (yylsp[(1) - (2)]));
				;}
    break;

  case 537:
#line 640 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 538:
#line 641 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 539:
#line 645 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 540:
#line 646 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 541:
#line 650 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 542:
#line 651 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 543:
#line 655 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 544:
#line 656 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 545:
#line 661 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGLockingClause *n = makeNode(PGLockingClause);
					n->lockedRels = (yyvsp[(2) - (3)].list);
					n->strength = (yyvsp[(1) - (3)].lockstrength);
					n->waitPolicy = (yyvsp[(3) - (3)].lockwaitpolicy);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 546:
#line 671 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = LCS_FORUPDATE; ;}
    break;

  case 547:
#line 672 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORNOKEYUPDATE; ;}
    break;

  case 548:
#line 673 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORSHARE; ;}
    break;

  case 549:
#line 674 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORKEYSHARE; ;}
    break;

  case 550:
#line 678 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 551:
#line 679 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 552:
#line 684 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = LockWaitError; ;}
    break;

  case 553:
#line 685 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = PGLockWaitSkip; ;}
    break;

  case 554:
#line 686 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = PGLockWaitBlock; ;}
    break;

  case 555:
#line 696 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->valuesLists = list_make1((yyvsp[(3) - (4)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 556:
#line 702 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = (PGSelectStmt *) (yyvsp[(1) - (5)].node);
					n->valuesLists = lappend(n->valuesLists, (yyvsp[(4) - (5)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 557:
#line 719 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 558:
#line 720 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 559:
#line 724 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 560:
#line 725 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 561:
#line 732 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyvsp[(1) - (3)].range)->alias = (yyvsp[(2) - (3)].alias);
					(yyvsp[(1) - (3)].range)->sample = (yyvsp[(3) - (3)].node);
					(yyval.node) = (PGNode *) (yyvsp[(1) - (3)].range);
				;}
    break;

  case 562:
#line 738 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[(1) - (3)].node);
					n->alias = (PGAlias*) linitial((yyvsp[(2) - (3)].list));
					n->coldeflist = (PGList*) lsecond((yyvsp[(2) - (3)].list));
					n->sample = (yyvsp[(3) - (3)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 563:
#line 746 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[(2) - (3)].node);
					n->lateral = true;
					n->alias = (PGAlias*) linitial((yyvsp[(3) - (3)].list));
					n->coldeflist = (PGList*) lsecond((yyvsp[(3) - (3)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 564:
#line 754 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeSubselect *n = makeNode(PGRangeSubselect);
					n->lateral = false;
					n->subquery = (yyvsp[(1) - (3)].node);
					n->alias = (yyvsp[(2) - (3)].alias);
					n->sample = (yyvsp[(3) - (3)].node);
					/*
					 * The SQL spec does not permit a subselect
					 * (<derived_table>) without an alias clause,
					 * so we don't either.  This avoids the problem
					 * of needing to invent a unique refname for it.
					 * That could be surmounted if there's sufficient
					 * popular demand, but for now let's just implement
					 * the spec and see if anyone complains.
					 * However, it does seem like a good idea to emit
					 * an error message that's better than "syntax error".
					 */
					if ((yyvsp[(2) - (3)].alias) == NULL)
					{
						if (IsA((yyvsp[(1) - (3)].node), PGSelectStmt) &&
							((PGSelectStmt *) (yyvsp[(1) - (3)].node))->valuesLists)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("VALUES in FROM must have an alias"),
									 errhint("For example, FROM (VALUES ...) [AS] foo."),
									 parser_errposition((yylsp[(1) - (3)]))));
						else
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("subquery in FROM must have an alias"),
									 errhint("For example, FROM (SELECT ...) [AS] foo."),
									 parser_errposition((yylsp[(1) - (3)]))));
					}
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 565:
#line 790 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeSubselect *n = makeNode(PGRangeSubselect);
					n->lateral = true;
					n->subquery = (yyvsp[(2) - (3)].node);
					n->alias = (yyvsp[(3) - (3)].alias);
					n->sample = NULL;
					/* same comment as above */
					if ((yyvsp[(3) - (3)].alias) == NULL)
					{
						if (IsA((yyvsp[(2) - (3)].node), PGSelectStmt) &&
							((PGSelectStmt *) (yyvsp[(2) - (3)].node))->valuesLists)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("VALUES in FROM must have an alias"),
									 errhint("For example, FROM (VALUES ...) [AS] foo."),
									 parser_errposition((yylsp[(2) - (3)]))));
						else
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("subquery in FROM must have an alias"),
									 errhint("For example, FROM (SELECT ...) [AS] foo."),
									 parser_errposition((yylsp[(2) - (3)]))));
					}
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 566:
#line 816 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) (yyvsp[(1) - (1)].jexpr);
				;}
    break;

  case 567:
#line 820 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyvsp[(2) - (4)].jexpr)->alias = (yyvsp[(4) - (4)].alias);
					(yyval.node) = (PGNode *) (yyvsp[(2) - (4)].jexpr);
				;}
    break;

  case 568:
#line 846 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.jexpr) = (yyvsp[(2) - (3)].jexpr);
				;}
    break;

  case 569:
#line 850 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* CROSS JOIN is same as unqualified inner join */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(4) - (4)].node);
					n->usingClause = NIL;
					n->quals = NULL;
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 570:
#line 863 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[(2) - (5)].jtype);
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (5)].node);
					n->rarg = (yyvsp[(4) - (5)].node);
					if ((yyvsp[(5) - (5)].node) != NULL && IsA((yyvsp[(5) - (5)].node), PGList))
						n->usingClause = (PGList *) (yyvsp[(5) - (5)].node); /* USING clause */
					else
						n->quals = (yyvsp[(5) - (5)].node); /* ON clause */
					n->location = (yylsp[(2) - (5)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 571:
#line 877 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* letting join_type reduce to empty doesn't work */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(3) - (4)].node);
					if ((yyvsp[(4) - (4)].node) != NULL && IsA((yyvsp[(4) - (4)].node), PGList))
						n->usingClause = (PGList *) (yyvsp[(4) - (4)].node); /* USING clause */
					else
						n->quals = (yyvsp[(4) - (4)].node); /* ON clause */
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 572:
#line 892 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[(3) - (5)].jtype);
					n->isNatural = true;
					n->larg = (yyvsp[(1) - (5)].node);
					n->rarg = (yyvsp[(5) - (5)].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					n->location = (yylsp[(2) - (5)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 573:
#line 904 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* letting join_type reduce to empty doesn't work */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = true;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(4) - (4)].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 574:
#line 920 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(2) - (5)].str);
					(yyval.alias)->colnames = (yyvsp[(4) - (5)].list);
				;}
    break;

  case 575:
#line 926 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(2) - (2)].str);
				;}
    break;

  case 576:
#line 931 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(1) - (4)].str);
					(yyval.alias)->colnames = (yyvsp[(3) - (4)].list);
				;}
    break;

  case 577:
#line 937 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(1) - (1)].str);
				;}
    break;

  case 578:
#line 943 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.alias) = (yyvsp[(1) - (1)].alias); ;}
    break;

  case 579:
#line 944 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.alias) = NULL; ;}
    break;

  case 580:
#line 953 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2((yyvsp[(1) - (1)].alias), NIL);
				;}
    break;

  case 581:
#line 957 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(NULL, (yyvsp[(3) - (4)].list));
				;}
    break;

  case 582:
#line 961 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAlias *a = makeNode(PGAlias);
					a->aliasname = (yyvsp[(2) - (5)].str);
					(yyval.list) = list_make2(a, (yyvsp[(4) - (5)].list));
				;}
    break;

  case 583:
#line 967 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAlias *a = makeNode(PGAlias);
					a->aliasname = (yyvsp[(1) - (4)].str);
					(yyval.list) = list_make2(a, (yyvsp[(3) - (4)].list));
				;}
    break;

  case 584:
#line 973 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(NULL, NIL);
				;}
    break;

  case 585:
#line 978 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_FULL; ;}
    break;

  case 586:
#line 979 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_LEFT; ;}
    break;

  case 587:
#line 980 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_RIGHT; ;}
    break;

  case 588:
#line 981 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_INNER; ;}
    break;

  case 589:
#line 985 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 590:
#line 986 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 591:
#line 998 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) (yyvsp[(3) - (4)].list); ;}
    break;

  case 592:
#line 999 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 593:
#line 1005 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* inheritance query, implicitly */
					(yyval.range) = (yyvsp[(1) - (1)].range);
					(yyval.range)->inh = true;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 594:
#line 1012 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* inheritance query, explicitly */
					(yyval.range) = (yyvsp[(1) - (2)].range);
					(yyval.range)->inh = true;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 595:
#line 1019 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* no inheritance */
					(yyval.range) = (yyvsp[(2) - (2)].range);
					(yyval.range)->inh = false;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 596:
#line 1026 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* no inheritance, SQL99-style syntax */
					(yyval.range) = (yyvsp[(3) - (4)].range);
					(yyval.range)->inh = false;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 597:
#line 1058 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = makeNode(PGRangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[(2) - (2)].boolean);
					n->is_rowsfrom = false;
					n->functions = list_make1(list_make2((yyvsp[(1) - (2)].node), NIL));
					n->sample = NULL;
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 598:
#line 1069 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = makeNode(PGRangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[(6) - (6)].boolean);
					n->is_rowsfrom = true;
					n->functions = (yyvsp[(4) - (6)].list);
					n->sample = NULL;
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 599:
#line 1082 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list)); ;}
    break;

  case 600:
#line 1086 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 601:
#line 1087 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 602:
#line 1090 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 603:
#line 1091 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 604:
#line 1094 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 605:
#line 1095 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 606:
#line 1100 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 607:
#line 1101 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 608:
#line 1107 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 609:
#line 1111 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 610:
#line 1117 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->colname = (yyvsp[(1) - (3)].str);
					n->typeName = (yyvsp[(2) - (3)].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collClause = (PGCollateClause *) (yyvsp[(3) - (3)].node);
					n->collOid = InvalidOid;
					n->constraints = NIL;
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 611:
#line 1138 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[(2) - (2)].list);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 612:
#line 1145 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 613:
#line 1158 "third_party/libpg_query/grammar/statements/select.y"
    {
             (yyval.list) = list_make1(list_make2(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].typnam)));
            ;}
    break;

  case 614:
#line 1161 "third_party/libpg_query/grammar/statements/select.y"
    {
             (yyval.list) = lappend((yyvsp[(1) - (4)].list), list_make2(makeString((yyvsp[(3) - (4)].str)), (yyvsp[(4) - (4)].typnam)));
            ;}
    break;

  case 617:
#line 1168 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[(2) - (2)].list);
				;}
    break;

  case 618:
#line 1173 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[(3) - (3)].list);
					(yyval.typnam)->setof = true;
				;}
    break;

  case 619:
#line 1180 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (5)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(4) - (5)].ival)));
				;}
    break;

  case 620:
#line 1185 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (6)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(5) - (6)].ival)));
					(yyval.typnam)->setof = true;
				;}
    break;

  case 621:
#line 1191 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
				;}
    break;

  case 622:
#line 1196 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
					(yyval.typnam)->setof = true;
				;}
    break;

  case 623:
#line 1201 "third_party/libpg_query/grammar/statements/select.y"
    {
               (yyval.typnam) = SystemTypeName("struct");
               (yyval.typnam)->typmods = (yyvsp[(3) - (4)].list);
               (yyval.typnam)->location = (yylsp[(1) - (4)]);
			;}
    break;

  case 624:
#line 1210 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeInteger(-1)); ;}
    break;

  case 625:
#line 1212 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = lappend((yyvsp[(1) - (4)].list), makeInteger((yyvsp[(3) - (4)].ival))); ;}
    break;

  case 626:
#line 1214 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = NIL; ;}
    break;

  case 627:
#line 1218 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 628:
#line 1219 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 629:
#line 1220 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 630:
#line 1221 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 631:
#line 1222 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 632:
#line 1224 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
				;}
    break;

  case 633:
#line 1229 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (4)].typnam);
					(yyval.typnam)->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											 makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
				;}
    break;

  case 634:
#line 1248 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 635:
#line 1249 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 636:
#line 1250 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 637:
#line 1251 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 638:
#line 1263 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = makeTypeName((yyvsp[(1) - (2)].str));
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 639:
#line 1269 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(1) - (3)].str)), (yyvsp[(2) - (3)].list)));
					(yyval.typnam)->typmods = (yyvsp[(3) - (3)].list);
					(yyval.typnam)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 640:
#line 1276 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 641:
#line 1277 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 642:
#line 1284 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 643:
#line 1289 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 644:
#line 1294 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int2");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 645:
#line 1299 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int8");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 646:
#line 1304 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 647:
#line 1309 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (2)].typnam);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 648:
#line 1314 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float8");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 649:
#line 1319 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 650:
#line 1325 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 651:
#line 1331 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 652:
#line 1337 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("bool");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 653:
#line 1344 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Check FLOAT() precision limits assuming IEEE floating
					 * types - thomas 1997-09-18
					 */
					if ((yyvsp[(2) - (3)].ival) < 1)
						ereport(ERROR,
								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be at least 1 bit"),
								 parser_errposition((yylsp[(2) - (3)]))));
					else if ((yyvsp[(2) - (3)].ival) <= 24)
						(yyval.typnam) = SystemTypeName("float4");
					else if ((yyvsp[(2) - (3)].ival) <= 53)
						(yyval.typnam) = SystemTypeName("float8");
					else
						ereport(ERROR,
								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be less than 54 bits"),
								 parser_errposition((yylsp[(2) - (3)]))));
				;}
    break;

  case 654:
#line 1365 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float4");
				;}
    break;

  case 655:
#line 1375 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 656:
#line 1379 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 657:
#line 1387 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 658:
#line 1391 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
					(yyval.typnam)->typmods = NIL;
				;}
    break;

  case 659:
#line 1399 "third_party/libpg_query/grammar/statements/select.y"
    {
					const char *typname;

					typname = (yyvsp[(2) - (5)].boolean) ? "varbit" : "bit";
					(yyval.typnam) = SystemTypeName(typname);
					(yyval.typnam)->typmods = (yyvsp[(4) - (5)].list);
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 660:
#line 1411 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* bit defaults to bit(1), varbit to no limit */
					if ((yyvsp[(2) - (2)].boolean))
					{
						(yyval.typnam) = SystemTypeName("varbit");
					}
					else
					{
						(yyval.typnam) = SystemTypeName("bit");
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					}
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 661:
#line 1432 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 662:
#line 1436 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 663:
#line 1442 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 664:
#line 1446 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* Length was not specified so allow to be unrestricted.
					 * This handles problems with fixed-length (bpchar) strings
					 * which in column definitions must default to a length
					 * of one, but should not be constrained if the length
					 * was not specified.
					 */
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
					(yyval.typnam)->typmods = NIL;
				;}
    break;

  case 665:
#line 1459 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (4)].conststr));
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
					(yyval.typnam)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 666:
#line 1467 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (1)].conststr));
					/* char defaults to char(1), varchar to no limit */
					if (strcmp((yyvsp[(1) - (1)].conststr), "bpchar") == 0)
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 667:
#line 1477 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 668:
#line 1479 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 669:
#line 1481 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "varchar"; ;}
    break;

  case 670:
#line 1483 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 671:
#line 1485 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 672:
#line 1487 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 673:
#line 1491 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 674:
#line 1492 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 675:
#line 1500 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(5) - (5)].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 676:
#line 1509 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 677:
#line 1517 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(5) - (5)].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 678:
#line 1526 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 679:
#line 1537 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("interval");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 680:
#line 1544 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 681:
#line 1545 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 682:
#line 1546 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 699:
#line 1575 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR), (yylsp[(1) - (1)]))); ;}
    break;

  case 700:
#line 1577 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MONTH), (yylsp[(1) - (1)]))); ;}
    break;

  case 701:
#line 1579 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY), (yylsp[(1) - (1)]))); ;}
    break;

  case 702:
#line 1581 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR), (yylsp[(1) - (1)]))); ;}
    break;

  case 703:
#line 1583 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MINUTE), (yylsp[(1) - (1)]))); ;}
    break;

  case 704:
#line 1585 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(SECOND), (yylsp[(1) - (1)]))); ;}
    break;

  case 705:
#line 1587 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MILLISECOND), (yylsp[(1) - (1)]))); ;}
    break;

  case 706:
#line 1589 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MICROSECOND), (yylsp[(1) - (1)]))); ;}
    break;

  case 707:
#line 1591 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR) |
												 INTERVAL_MASK(MONTH), (yylsp[(1) - (3)])));
				;}
    break;

  case 708:
#line 1596 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR), (yylsp[(1) - (3)])));
				;}
    break;

  case 709:
#line 1601 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
				;}
    break;

  case 710:
#line 1607 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
				;}
    break;

  case 711:
#line 1614 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
				;}
    break;

  case 712:
#line 1619 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
				;}
    break;

  case 713:
#line 1625 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
				;}
    break;

  case 714:
#line 1630 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 715:
#line 1661 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 716:
#line 1663 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), (yylsp[(2) - (3)])); ;}
    break;

  case 717:
#line 1665 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = (yyvsp[(1) - (3)].node);
					n->collname = (yyvsp[(3) - (3)].list);
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 718:
#line 1673 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("timezone"),
											   list_make2((yyvsp[(5) - (5)].node), (yyvsp[(1) - (5)].node)),
											   (yylsp[(2) - (5)]));
				;}
    break;

  case 719:
#line 1688 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 720:
#line 1690 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 721:
#line 1692 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 722:
#line 1694 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 723:
#line 1696 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 724:
#line 1698 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 725:
#line 1700 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 726:
#line 1702 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 727:
#line 1704 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 728:
#line 1706 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 729:
#line 1708 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 730:
#line 1710 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 731:
#line 1712 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 732:
#line 1714 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 733:
#line 1717 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 734:
#line 1719 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 735:
#line 1721 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
    break;

  case 736:
#line 1724 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeAndExpr((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 737:
#line 1726 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeOrExpr((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 738:
#line 1728 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeNotExpr((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 739:
#line 1730 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeNotExpr((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 740:
#line 1733 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_GLOB, "~~~",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 741:
#line 1738 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "~~",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 742:
#line 1743 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make3((yyvsp[(1) - (5)].node), (yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 743:
#line 1750 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "!~~",
												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
				;}
    break;

  case 744:
#line 1755 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("not_like_escape"),
											   list_make3((yyvsp[(1) - (6)].node), (yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 745:
#line 1762 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "~~*",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 746:
#line 1767 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make2((yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "~~*",
												   (yyvsp[(1) - (5)].node), (PGNode *) n, (yylsp[(2) - (5)]));
				;}
    break;

  case 747:
#line 1775 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "!~~*",
												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
				;}
    break;

  case 748:
#line 1780 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("not_like_escape"),
											   list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "!~~*",
												   (yyvsp[(1) - (6)].node), (PGNode *) n, (yylsp[(2) - (6)]));
				;}
    break;

  case 749:
#line 1789 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(4) - (4)].node), makeNullAConst(-1)),
											   (yylsp[(2) - (4)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
												   (yyvsp[(1) - (4)].node), (PGNode *) n, (yylsp[(2) - (4)]));
				;}
    break;

  case 750:
#line 1797 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
												   (yyvsp[(1) - (6)].node), (PGNode *) n, (yylsp[(2) - (6)]));
				;}
    break;

  case 751:
#line 1805 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(5) - (5)].node), makeNullAConst(-1)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
												   (yyvsp[(1) - (5)].node), (PGNode *) n, (yylsp[(2) - (5)]));
				;}
    break;

  case 752:
#line 1813 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
											   (yylsp[(2) - (7)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
												   (yyvsp[(1) - (7)].node), (PGNode *) n, (yylsp[(2) - (7)]));
				;}
    break;

  case 753:
#line 1831 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					n->nulltesttype = PG_IS_NULL;
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 754:
#line 1839 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
					n->nulltesttype = PG_IS_NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 755:
#line 1847 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 756:
#line 1855 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 757:
#line 1863 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 758:
#line 1871 "third_party/libpg_query/grammar/statements/select.y"
    {
					if (list_length((yyvsp[(1) - (3)].list)) != 2)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on left side of OVERLAPS expression"),
								 parser_errposition((yylsp[(1) - (3)]))));
					if (list_length((yyvsp[(3) - (3)].list)) != 2)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on right side of OVERLAPS expression"),
								 parser_errposition((yylsp[(3) - (3)]))));
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlaps"),
											   list_concat((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)),
											   (yylsp[(2) - (3)]));
				;}
    break;

  case 759:
#line 1886 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("row"), (yyvsp[(1) - (1)].list), (yylsp[(1) - (1)]));
					(yyval.node) = (PGNode *) n;
		    ;}
    break;

  case 760:
#line 1891 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = PG_IS_TRUE;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 761:
#line 1899 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_TRUE;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 762:
#line 1907 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = IS_FALSE;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 763:
#line 1915 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_FALSE;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 764:
#line 1923 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = IS_UNKNOWN;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 765:
#line 1931 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_UNKNOWN;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 766:
#line 1939 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
				;}
    break;

  case 767:
#line 1943 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 768:
#line 1947 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
				;}
    break;

  case 769:
#line 1951 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
				;}
    break;

  case 770:
#line 1955 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN,
												   "BETWEEN",
												   (yyvsp[(1) - (6)].node),
												   (PGNode *) list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
												   (yylsp[(2) - (6)]));
				;}
    break;

  case 771:
#line 1963 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN,
												   "NOT BETWEEN",
												   (yyvsp[(1) - (7)].node),
												   (PGNode *) list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
												   (yylsp[(2) - (7)]));
				;}
    break;

  case 772:
#line 1971 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN_SYM,
												   "BETWEEN SYMMETRIC",
												   (yyvsp[(1) - (6)].node),
												   (PGNode *) list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
												   (yylsp[(2) - (6)]));
				;}
    break;

  case 773:
#line 1979 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN_SYM,
												   "NOT BETWEEN SYMMETRIC",
												   (yyvsp[(1) - (7)].node),
												   (PGNode *) list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
												   (yylsp[(2) - (7)]));
				;}
    break;

  case 774:
#line 1987 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* in_expr returns a PGSubLink or a list of a_exprs */
					if (IsA((yyvsp[(3) - (3)].node), PGSubLink))
					{
						/* generate foo = ANY (subquery) */
						PGSubLink *n = (PGSubLink *) (yyvsp[(3) - (3)].node);
						n->subLinkType = PG_ANY_SUBLINK;
						n->subLinkId = 0;
						n->testexpr = (yyvsp[(1) - (3)].node);
						n->operName = NIL;		/* show it's IN not = ANY */
						n->location = (yylsp[(2) - (3)]);
						(yyval.node) = (PGNode *)n;
					}
					else
					{
						/* generate scalar IN expression */
						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
					}
				;}
    break;

  case 775:
#line 2007 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* in_expr returns a PGSubLink or a list of a_exprs */
					if (IsA((yyvsp[(4) - (4)].node), PGSubLink))
					{
						/* generate NOT (foo = ANY (subquery)) */
						/* Make an = ANY node */
						PGSubLink *n = (PGSubLink *) (yyvsp[(4) - (4)].node);
						n->subLinkType = PG_ANY_SUBLINK;
						n->subLinkId = 0;
						n->testexpr = (yyvsp[(1) - (4)].node);
						n->operName = NIL;		/* show it's IN not = ANY */
						n->location = (yylsp[(2) - (4)]);
						/* Stick a NOT on top; must have same parse location */
						(yyval.node) = makeNotExpr((PGNode *) n, (yylsp[(2) - (4)]));
					}
					else
					{
						/* generate scalar NOT IN expression */
						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "<>", (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
					}
				;}
    break;

  case 776:
#line 2029 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = (yyvsp[(3) - (4)].subquerytype);
					n->subLinkId = 0;
					n->testexpr = (yyvsp[(1) - (4)].node);
					n->operName = (yyvsp[(2) - (4)].list);
					n->subselect = (yyvsp[(4) - (4)].node);
					n->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 777:
#line 2040 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(3) - (6)].subquerytype) == PG_ANY_SUBLINK)
						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ANY, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
					else
						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ALL, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 778:
#line 2047 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * The SQL spec only allows DEFAULT in "contextually typed
					 * expressions", but for us, it's easier to allow it in
					 * any a_expr and then throw error during parse analysis
					 * if it's in an inappropriate context.  This way also
					 * lets us say something smarter than "syntax error".
					 */
					PGSetToDefault *n = makeNode(PGSetToDefault);
					/* parse analysis will fill in the rest */
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 779:
#line 2072 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 780:
#line 2074 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), (yylsp[(2) - (3)])); ;}
    break;

  case 781:
#line 2076 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 782:
#line 2078 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 783:
#line 2080 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 784:
#line 2082 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 785:
#line 2084 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 786:
#line 2086 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 787:
#line 2088 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 788:
#line 2090 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 789:
#line 2092 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 790:
#line 2094 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 791:
#line 2096 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 792:
#line 2098 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 793:
#line 2100 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 794:
#line 2102 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 795:
#line 2104 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 796:
#line 2106 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 797:
#line 2108 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
    break;

  case 798:
#line 2110 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
				;}
    break;

  case 799:
#line 2114 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 800:
#line 2118 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
				;}
    break;

  case 801:
#line 2122 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
				;}
    break;

  case 802:
#line 2135 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 803:
#line 2136 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 804:
#line 2138 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = makeParamRef(0, (yylsp[(1) - (2)]));
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = makeParamRef(0, (yylsp[(1) - (2)]));
				;}
    break;

  case 805:
#line 2150 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGParamRef *p = makeNode(PGParamRef);
					p->number = (yyvsp[(1) - (2)].ival);
					p->location = (yylsp[(1) - (2)]);
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (PGNode *) p;
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = (PGNode *) p;
				;}
    break;

  case 806:
#line 2165 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(4) - (4)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (yyvsp[(2) - (4)].node);
						n->indirection = check_indirection((yyvsp[(4) - (4)].list), yyscanner);
						(yyval.node) = (PGNode *)n;
					}
					else
						(yyval.node) = (yyvsp[(2) - (4)].node);
				;}
    break;

  case 807:
#line 2177 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 808:
#line 2179 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 809:
#line 2181 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_EXPR_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(1) - (1)].node);
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 810:
#line 2192 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Because the select_with_parens nonterminal is designed
					 * to "eat" as many levels of parens as possible, the
					 * '(' a_expr ')' opt_indirection production above will
					 * fail to match a sub-SELECT with indirection decoration;
					 * the sub-SELECT won't be regarded as an a_expr as long
					 * as there are parens around it.  To support applying
					 * subscripting or field selection to a sub-SELECT result,
					 * we need this redundant-looking production.
					 */
					PGSubLink *n = makeNode(PGSubLink);
					PGAIndirection *a = makeNode(PGAIndirection);
					n->subLinkType = PG_EXPR_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(1) - (2)].node);
					n->location = (yylsp[(1) - (2)]);
					a->arg = (PGNode *)n;
					a->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.node) = (PGNode *)a;
				;}
    break;

  case 811:
#line 2216 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_EXISTS_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(2) - (2)].node);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 812:
#line 2229 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall((yyvsp[(1) - (3)].list), NIL, (yylsp[(1) - (3)]));
				;}
    break;

  case 813:
#line 2233 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (5)].list), (yyvsp[(3) - (5)].list), (yylsp[(1) - (5)]));
					n->agg_order = (yyvsp[(4) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 814:
#line 2239 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), list_make1((yyvsp[(4) - (6)].node)), (yylsp[(1) - (6)]));
					n->func_variadic = true;
					n->agg_order = (yyvsp[(5) - (6)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 815:
#line 2246 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (8)].list), lappend((yyvsp[(3) - (8)].list), (yyvsp[(6) - (8)].node)), (yylsp[(1) - (8)]));
					n->func_variadic = true;
					n->agg_order = (yyvsp[(7) - (8)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 816:
#line 2253 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), (yyvsp[(4) - (6)].list), (yylsp[(1) - (6)]));
					n->agg_order = (yyvsp[(5) - (6)].list);
					/* Ideally we'd mark the PGFuncCall node to indicate
					 * "must be an aggregate", but there's no provision
					 * for that in PGFuncCall at the moment.
					 */
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 817:
#line 2263 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), (yyvsp[(4) - (6)].list), (yylsp[(1) - (6)]));
					n->agg_order = (yyvsp[(5) - (6)].list);
					n->agg_distinct = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 818:
#line 2270 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * We consider AGGREGATE(*) to invoke a parameterless
					 * aggregate.  This does the right thing for COUNT(*),
					 * and there are no other aggregates in SQL that accept
					 * '*' as parameter.
					 *
					 * The PGFuncCall node is also marked agg_star = true,
					 * so that later processing can detect what the argument
					 * really was.
					 */
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (4)].list), NIL, (yylsp[(1) - (4)]));
					n->agg_star = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 819:
#line 2298 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = (PGFuncCall *) (yyvsp[(1) - (4)].node);
					/*
					 * The order clause for WITHIN GROUP and the one for
					 * plain-aggregate ORDER BY share a field, so we have to
					 * check here that at most one is present.  We also check
					 * for DISTINCT and VARIADIC here to give a better error
					 * location.  Other consistency checks are deferred to
					 * parse analysis.
					 */
					if ((yyvsp[(2) - (4)].list) != NIL)
					{
						if (n->agg_order != NIL)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use multiple ORDER BY clauses with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						if (n->agg_distinct)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use DISTINCT with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						if (n->func_variadic)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use VARIADIC with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						n->agg_order = (yyvsp[(2) - (4)].list);
						n->agg_within_group = true;
					}
					n->agg_filter = (yyvsp[(3) - (4)].node);
					n->over = (yyvsp[(4) - (4)].windef);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 820:
#line 2333 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 821:
#line 2343 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 822:
#line 2344 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 823:
#line 2352 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("pg_collation_for"),
											   list_make1((yyvsp[(4) - (5)].node)),
											   (yylsp[(1) - (5)]));
				;}
    break;

  case 824:
#line 2358 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_DATE, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 825:
#line 2362 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIME, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 826:
#line 2366 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIME_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 827:
#line 2370 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIMESTAMP, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 828:
#line 2374 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIMESTAMP_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 829:
#line 2378 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIME, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 830:
#line 2382 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIME_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 831:
#line 2386 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIMESTAMP, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 832:
#line 2390 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIMESTAMP_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 833:
#line 2394 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_ROLE, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 834:
#line 2398 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 835:
#line 2402 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_SESSION_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 836:
#line 2406 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 837:
#line 2410 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_CATALOG, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 838:
#line 2414 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_SCHEMA, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 839:
#line 2418 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].typnam), (yylsp[(1) - (6)])); ;}
    break;

  case 840:
#line 2420 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("date_part"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 841:
#line 2424 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* overlay(A PLACING B FROM C FOR D) is converted to
					 * overlay(A, B, C, D)
					 * overlay(A PLACING B FROM C) is converted to
					 * overlay(A, B, C)
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlay"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 842:
#line 2433 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* position(A in B) is converted to position(B, A) */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("position"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 843:
#line 2438 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* substring(A from B for C) is converted to
					 * substring(A, B, C) - thomas 2000-11-28
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("substring"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 844:
#line 2445 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* TREAT(expr AS target) converts expr of a particular type to target,
					 * which is defined to be a subtype of the original expression.
					 * In SQL99, this is intended for use with structured UDTs,
					 * but let's make this a generally useful form allowing stronger
					 * coercions than are handled by implicit casting.
					 *
					 * Convert SystemTypeName() to SystemFuncName() even though
					 * at the moment they result in the same thing.
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName(((PGValue *)llast((yyvsp[(5) - (6)].typnam)->names))->val.str),
												list_make1((yyvsp[(3) - (6)].node)),
												(yylsp[(1) - (6)]));
				;}
    break;

  case 845:
#line 2460 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* various trim expressions are defined in SQL
					 * - thomas 1997-07-19
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("trim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 846:
#line 2467 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("ltrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 847:
#line 2471 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("rtrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 848:
#line 2475 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("trim"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 849:
#line 2479 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NULLIF, "=", (yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(1) - (6)]));
				;}
    break;

  case 850:
#line 2483 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCoalesceExpr *c = makeNode(PGCoalesceExpr);
					c->args = (yyvsp[(3) - (4)].list);
					c->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)c;
				;}
    break;

  case 851:
#line 2496 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
    break;

  case 852:
#line 2497 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 853:
#line 2501 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(4) - (5)].node); ;}
    break;

  case 854:
#line 2502 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 855:
#line 2510 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 856:
#line 2511 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 857:
#line 2515 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].windef)); ;}
    break;

  case 858:
#line 2517 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].windef)); ;}
    break;

  case 859:
#line 2522 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(3) - (3)].windef);
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.windef) = n;
				;}
    break;

  case 860:
#line 2530 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.windef) = (yyvsp[(2) - (2)].windef); ;}
    break;

  case 861:
#line 2532 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->name = (yyvsp[(2) - (2)].str);
					n->refname = NULL;
					n->partitionClause = NIL;
					n->orderClause = NIL;
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.windef) = n;
				;}
    break;

  case 862:
#line 2545 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.windef) = NULL; ;}
    break;

  case 863:
#line 2550 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->name = NULL;
					n->refname = (yyvsp[(2) - (6)].str);
					n->partitionClause = (yyvsp[(3) - (6)].list);
					n->orderClause = (yyvsp[(4) - (6)].list);
					/* copy relevant fields of opt_frame_clause */
					n->frameOptions = (yyvsp[(5) - (6)].windef)->frameOptions;
					n->startOffset = (yyvsp[(5) - (6)].windef)->startOffset;
					n->endOffset = (yyvsp[(5) - (6)].windef)->endOffset;
					n->location = (yylsp[(1) - (6)]);
					(yyval.windef) = n;
				;}
    break;

  case 864:
#line 2575 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 865:
#line 2576 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = NULL; ;}
    break;

  case 866:
#line 2579 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 867:
#line 2580 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 868:
#line 2592 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(2) - (2)].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_RANGE;
					if (n->frameOptions & (FRAMEOPTION_START_VALUE_PRECEDING |
										   FRAMEOPTION_END_VALUE_PRECEDING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("RANGE PRECEDING is only supported with UNBOUNDED"),
								 parser_errposition((yylsp[(1) - (2)]))));
					if (n->frameOptions & (FRAMEOPTION_START_VALUE_FOLLOWING |
										   FRAMEOPTION_END_VALUE_FOLLOWING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("RANGE FOLLOWING is only supported with UNBOUNDED"),
								 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.windef) = n;
				;}
    break;

  case 869:
#line 2610 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(2) - (2)].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_ROWS;
					(yyval.windef) = n;
				;}
    break;

  case 870:
#line 2616 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 871:
#line 2626 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(1) - (1)].windef);
					/* reject invalid cases */
					if (n->frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[(1) - (1)]))));
					if (n->frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot end with current row"),
								 parser_errposition((yylsp[(1) - (1)]))));
					n->frameOptions |= FRAMEOPTION_END_CURRENT_ROW;
					(yyval.windef) = n;
				;}
    break;

  case 872:
#line 2643 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n1 = (yyvsp[(2) - (4)].windef);
					PGWindowDef *n2 = (yyvsp[(4) - (4)].windef);
					/* form merged options */
					int		frameOptions = n1->frameOptions;
					/* shift converts START_ options to END_ options */
					frameOptions |= n2->frameOptions << 1;
					frameOptions |= FRAMEOPTION_BETWEEN;
					/* reject invalid cases */
					if (frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[(2) - (4)]))));
					if (frameOptions & FRAMEOPTION_END_UNBOUNDED_PRECEDING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame end cannot be UNBOUNDED PRECEDING"),
								 parser_errposition((yylsp[(4) - (4)]))));
					if ((frameOptions & FRAMEOPTION_START_CURRENT_ROW) &&
						(frameOptions & FRAMEOPTION_END_VALUE_PRECEDING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from current row cannot have preceding rows"),
								 parser_errposition((yylsp[(4) - (4)]))));
					if ((frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING) &&
						(frameOptions & (FRAMEOPTION_END_VALUE_PRECEDING |
										 FRAMEOPTION_END_CURRENT_ROW)))
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot have preceding rows"),
								 parser_errposition((yylsp[(4) - (4)]))));
					n1->frameOptions = frameOptions;
					n1->endOffset = n2->startOffset;
					(yyval.windef) = n1;
				;}
    break;

  case 873:
#line 2688 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_PRECEDING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 874:
#line 2696 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_FOLLOWING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 875:
#line 2704 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_CURRENT_ROW;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 876:
#line 2712 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_PRECEDING;
					n->startOffset = (yyvsp[(1) - (2)].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 877:
#line 2720 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_FOLLOWING;
					n->startOffset = (yyvsp[(1) - (2)].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 878:
#line 2740 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 879:
#line 2741 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 880:
#line 2742 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(2) - (5)].list), (yyvsp[(4) - (5)].node)); ;}
    break;

  case 881:
#line 2745 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
    break;

  case 882:
#line 2746 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
    break;

  case 883:
#line 2747 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ALL_SUBLINK; ;}
    break;

  case 884:
#line 2750 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 885:
#line 2751 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) (yyvsp[(1) - (1)].conststr); ;}
    break;

  case 886:
#line 2754 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "+"; ;}
    break;

  case 887:
#line 2755 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "-"; ;}
    break;

  case 888:
#line 2756 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "*"; ;}
    break;

  case 889:
#line 2757 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "/"; ;}
    break;

  case 890:
#line 2758 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "%"; ;}
    break;

  case 891:
#line 2759 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "^"; ;}
    break;

  case 892:
#line 2760 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<"; ;}
    break;

  case 893:
#line 2761 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = ">"; ;}
    break;

  case 894:
#line 2762 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "="; ;}
    break;

  case 895:
#line 2763 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<="; ;}
    break;

  case 896:
#line 2764 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = ">="; ;}
    break;

  case 897:
#line 2765 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<>"; ;}
    break;

  case 898:
#line 2769 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 899:
#line 2771 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 900:
#line 2776 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 901:
#line 2778 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 902:
#line 2783 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 903:
#line 2785 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 904:
#line 2787 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~")); ;}
    break;

  case 905:
#line 2789 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~")); ;}
    break;

  case 906:
#line 2791 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~~")); ;}
    break;

  case 907:
#line 2793 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~~")); ;}
    break;

  case 908:
#line 2795 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~*")); ;}
    break;

  case 909:
#line 2797 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~*")); ;}
    break;

  case 910:
#line 2811 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 911:
#line 2813 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lcons(makeString((yyvsp[(1) - (3)].str)), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 912:
#line 2817 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 913:
#line 2821 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 914:
#line 2828 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 915:
#line 2832 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 916:
#line 2838 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(1) - (1)].node);
				;}
    break;

  case 917:
#line 2842 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[(1) - (3)].str);
					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) na;
				;}
    break;

  case 918:
#line 2851 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[(1) - (3)].str);
					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) na;
				;}
    break;

  case 919:
#line 2861 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].typnam)); ;}
    break;

  case 920:
#line 2862 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].typnam)); ;}
    break;

  case 921:
#line 2867 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(makeStringConst((yyvsp[(1) - (3)].str), (yylsp[(1) - (3)])), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 922:
#line 2870 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 923:
#line 2877 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 924:
#line 2878 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "year"; ;}
    break;

  case 925:
#line 2879 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "month"; ;}
    break;

  case 926:
#line 2880 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "day"; ;}
    break;

  case 927:
#line 2881 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "hour"; ;}
    break;

  case 928:
#line 2882 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "minute"; ;}
    break;

  case 929:
#line 2883 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "second"; ;}
    break;

  case 930:
#line 2884 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "millisecond"; ;}
    break;

  case 931:
#line 2885 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "microsecond"; ;}
    break;

  case 932:
#line 2886 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 933:
#line 2897 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make4((yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].node), (yyvsp[(3) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 934:
#line 2901 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 935:
#line 2908 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 936:
#line 2914 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(3) - (3)].node), (yyvsp[(1) - (3)].node)); ;}
    break;

  case 937:
#line 2915 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 938:
#line 2932 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 939:
#line 2936 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* not legal per SQL99, but might as well allow it */
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yyvsp[(2) - (3)].node));
				;}
    break;

  case 940:
#line 2941 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node));
				;}
    break;

  case 941:
#line 2945 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Since there are no cases where this syntax allows
					 * a textual FOR value, we forcibly cast the argument
					 * to int4.  The possible matches in pg_proc are
					 * substring(text,int4) and substring(text,text),
					 * and we don't want the parser to choose the latter,
					 * which it is likely to do if the second argument
					 * is unknown or doesn't have an implicit cast to int4.
					 */
					(yyval.list) = list_make3((yyvsp[(1) - (2)].node), makeIntConst(1, -1),
									makeTypeCast((yyvsp[(2) - (2)].node),
												 SystemTypeName("int4"), -1));
				;}
    break;

  case 942:
#line 2960 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(1) - (1)].list);
				;}
    break;

  case 943:
#line 2964 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 944:
#line 2968 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 945:
#line 2971 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 946:
#line 2974 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(3) - (3)].list), (yyvsp[(1) - (3)].node)); ;}
    break;

  case 947:
#line 2975 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 948:
#line 2976 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 949:
#line 2980 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subselect = (yyvsp[(1) - (1)].node);
					/* other fields will be filled later */
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 950:
#line 2986 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *)(yyvsp[(2) - (3)].list); ;}
    break;

  case 951:
#line 2997 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCaseExpr *c = makeNode(PGCaseExpr);
					c->casetype = InvalidOid; /* not analyzed yet */
					c->arg = (PGExpr *) (yyvsp[(2) - (5)].node);
					c->args = (yyvsp[(3) - (5)].list);
					c->defresult = (PGExpr *) (yyvsp[(4) - (5)].node);
					c->location = (yylsp[(1) - (5)]);
					(yyval.node) = (PGNode *)c;
				;}
    break;

  case 952:
#line 3010 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 953:
#line 3011 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 954:
#line 3016 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCaseWhen *w = makeNode(PGCaseWhen);
					w->expr = (PGExpr *) (yyvsp[(2) - (4)].node);
					w->result = (PGExpr *) (yyvsp[(4) - (4)].node);
					w->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)w;
				;}
    break;

  case 955:
#line 3026 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 956:
#line 3027 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 957:
#line 3030 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 958:
#line 3031 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 959:
#line 3035 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeColumnRef((yyvsp[(1) - (1)].str), NIL, (yylsp[(1) - (1)]), yyscanner);
				;}
    break;

  case 960:
#line 3039 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeColumnRef((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].list), (yylsp[(1) - (2)]), yyscanner);
				;}
    break;

  case 961:
#line 3046 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeString((yyvsp[(2) - (2)].str));
				;}
    break;

  case 962:
#line 3050 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeNode(PGAStar);
				;}
    break;

  case 963:
#line 3054 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = false;
					ai->lidx = NULL;
					ai->uidx = (yyvsp[(2) - (3)].node);
					(yyval.node) = (PGNode *) ai;
				;}
    break;

  case 964:
#line 3062 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = true;
					ai->lidx = (yyvsp[(2) - (5)].node);
					ai->uidx = (yyvsp[(4) - (5)].node);
					(yyval.node) = (PGNode *) ai;
				;}
    break;

  case 965:
#line 3072 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 966:
#line 3073 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 967:
#line 3077 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 968:
#line 3078 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 969:
#line 3082 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 970:
#line 3083 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 973:
#line 3097 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 974:
#line 3098 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 975:
#line 3102 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 976:
#line 3103 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
    break;

  case 977:
#line 3107 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(3) - (3)].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (3)].node);
					(yyval.target)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 978:
#line 3123 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(2) - (2)].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (2)].node);
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 979:
#line 3131 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (1)].node);
					(yyval.target)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 980:
#line 3139 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnRef *n = makeNode(PGColumnRef);
					n->fields = list_make1(makeNode(PGAStar));
					n->location = (yylsp[(1) - (1)]);

					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)n;
					(yyval.target)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 981:
#line 3160 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].range)); ;}
    break;

  case 982:
#line 3161 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].range)); ;}
    break;

  case 983:
#line 3173 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = makeRangeVar(NULL, (yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 984:
#line 3177 "third_party/libpg_query/grammar/statements/select.y"
    {
					check_qualified_name((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.range) = makeRangeVar(NULL, NULL, (yylsp[(1) - (2)]));
					switch (list_length((yyvsp[(2) - (2)].list)))
					{
						case 1:
							(yyval.range)->catalogname = NULL;
							(yyval.range)->schemaname = (yyvsp[(1) - (2)].str);
							(yyval.range)->relname = strVal(linitial((yyvsp[(2) - (2)].list)));
							break;
						case 2:
							(yyval.range)->catalogname = (yyvsp[(1) - (2)].str);
							(yyval.range)->schemaname = strVal(linitial((yyvsp[(2) - (2)].list)));
							(yyval.range)->relname = strVal(lsecond((yyvsp[(2) - (2)].list)));
							break;
						default:
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("improper qualified name (too many dotted names): %s",
											NameListToString(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)))),
									 parser_errposition((yylsp[(1) - (2)]))));
							break;
					}
				;}
    break;

  case 985:
#line 3204 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 986:
#line 3206 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 987:
#line 3210 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 988:
#line 3212 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 989:
#line 3223 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 990:
#line 3225 "third_party/libpg_query/grammar/statements/select.y"
    {
						(yyval.list) = check_func_name(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)),
											 yyscanner);
					;}
    break;

  case 991:
#line 3236 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival), (yylsp[(1) - (1)]));
				;}
    break;

  case 992:
#line 3240 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 993:
#line 3244 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 994:
#line 3248 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 995:
#line 3252 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* This is a bit constant per SQL99:
					 * Without Feature F511, "BIT data type",
					 * a <general literal> shall not be a
					 * <bit string literal> or a <hex string literal>.
					 */
					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 996:
#line 3261 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* generic type 'literal' syntax */
					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (2)].list));
					t->location = (yylsp[(1) - (2)]);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), t);
				;}
    break;

  case 997:
#line 3268 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* generic syntax with a type modifier */
					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (6)].list));
					PGListCell *lc;

					/*
					 * We must use func_arg_list and opt_sort_clause in the
					 * production to avoid reduce/reduce conflicts, but we
					 * don't actually wish to allow PGNamedArgExpr in this
					 * context, nor ORDER BY.
					 */
					foreach(lc, (yyvsp[(3) - (6)].list))
					{
						PGNamedArgExpr *arg = (PGNamedArgExpr *) lfirst(lc);

						if (IsA(arg, PGNamedArgExpr))
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have parameter name"),
									 parser_errposition(arg->location)));
					}
					if ((yyvsp[(4) - (6)].list) != NIL)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have ORDER BY"),
									 parser_errposition((yylsp[(4) - (6)]))));

					t->typmods = (yyvsp[(3) - (6)].list);
					t->location = (yylsp[(1) - (6)]);
					(yyval.node) = makeStringConstCast((yyvsp[(6) - (6)].str), (yylsp[(6) - (6)]), t);
				;}
    break;

  case 998:
#line 3300 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), (yyvsp[(1) - (2)].typnam));
				;}
    break;

  case 999:
#line 3304 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(3) - (5)].node), (yylsp[(3) - (5)]), (yyvsp[(5) - (5)].list));
				;}
    break;

  case 1000:
#line 3308 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(2) - (3)].ival), (yylsp[(2) - (3)]), (yyvsp[(3) - (3)].list));
				;}
    break;

  case 1001:
#line 3312 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), (yyvsp[(3) - (3)].list));
				;}
    break;

  case 1002:
#line 3316 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBoolAConst(true, (yylsp[(1) - (1)]));
				;}
    break;

  case 1003:
#line 3320 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBoolAConst(false, (yylsp[(1) - (1)]));
				;}
    break;

  case 1004:
#line 3324 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
				;}
    break;

  case 1005:
#line 3329 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 1006:
#line 3330 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1007:
#line 3346 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1008:
#line 3347 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1009:
#line 3348 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1010:
#line 3351 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1011:
#line 3352 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1012:
#line 3357 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1013:
#line 3358 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1014:
#line 3359 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1015:
#line 3362 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 1016:
#line 3363 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)); ;}
    break;

  case 1017:
#line 3367 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(2) - (2)].str))); ;}
    break;

  case 1018:
#line 3369 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 1019:
#line 3373 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 1020:
#line 3374 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1022:
#line 3385 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1023:
#line 3386 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1024:
#line 3387 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1025:
#line 3388 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1026:
#line 3389 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1027:
#line 3392 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1028:
#line 3393 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1029:
#line 8 "third_party/libpg_query/grammar/statements/prepare.y"
    {
					PGPrepareStmt *n = makeNode(PGPrepareStmt);
					n->name = (yyvsp[(2) - (5)].str);
					n->argtypes = (yyvsp[(3) - (5)].list);
					n->query = (yyvsp[(5) - (5)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1030:
#line 18 "third_party/libpg_query/grammar/statements/prepare.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 1031:
#line 19 "third_party/libpg_query/grammar/statements/prepare.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1036:
#line 8 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					/* ...but not both */
					n->schemaname = (yyvsp[(3) - (4)].str);
					n->schemaElts = (yyvsp[(4) - (4)].list);
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1037:
#line 17 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					/* ...but not here */
					n->schemaname = (yyvsp[(6) - (7)].str);
					if ((yyvsp[(7) - (7)].list) != NIL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("CREATE SCHEMA IF NOT EXISTS cannot include schema elements"),
								 parser_errposition((yylsp[(7) - (7)]))));
					n->schemaElts = (yyvsp[(7) - (7)].list);
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1038:
#line 35 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					if ((yyloc) < 0)			/* see comments for YYLLOC_DEFAULT */
						(yyloc) = (yylsp[(2) - (2)]);
					(yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node));
				;}
    break;

  case 1039:
#line 41 "third_party/libpg_query/grammar/statements/create_schema.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1044:
#line 11 "third_party/libpg_query/grammar/statements/index.y"
    {
					PGIndexStmt *n = makeNode(PGIndexStmt);
					n->unique = (yyvsp[(2) - (13)].boolean);
					n->concurrent = (yyvsp[(4) - (13)].boolean);
					n->idxname = (yyvsp[(5) - (13)].str);
					n->relation = (yyvsp[(7) - (13)].range);
					n->accessMethod = (yyvsp[(8) - (13)].str);
					n->indexParams = (yyvsp[(10) - (13)].list);
					n->options = (yyvsp[(12) - (13)].list);
					n->whereClause = (yyvsp[(13) - (13)].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;
					n->transformed = false;
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1045:
#line 36 "third_party/libpg_query/grammar/statements/index.y"
    {
					PGIndexStmt *n = makeNode(PGIndexStmt);
					n->unique = (yyvsp[(2) - (16)].boolean);
					n->concurrent = (yyvsp[(4) - (16)].boolean);
					n->idxname = (yyvsp[(8) - (16)].str);
					n->relation = (yyvsp[(10) - (16)].range);
					n->accessMethod = (yyvsp[(11) - (16)].str);
					n->indexParams = (yyvsp[(13) - (16)].list);
					n->options = (yyvsp[(15) - (16)].list);
					n->whereClause = (yyvsp[(16) - (16)].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;
					n->transformed = false;
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1046:
#line 62 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1047:
#line 66 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
    break;

  case 1048:
#line 67 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (char*) DEFAULT_INDEX_TYPE; ;}
    break;

  case 1049:
#line 72 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1050:
#line 73 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1051:
#line 78 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1052:
#line 79 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = NULL; ;}
    break;

  case 1053:
#line 83 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1054:
#line 84 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1055:
#line 89 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1056:
#line 90 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1057:
#line 8 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1058:
#line 17 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1059:
#line 26 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1060:
#line 35 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1061:
#line 44 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1062:
#line 53 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1063:
#line 6 "third_party/libpg_query/grammar/statements/checkpoint.y"
    {
					PGCheckPointStmt *n = makeNode(PGCheckPointStmt);
					n->force = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1064:
#line 12 "third_party/libpg_query/grammar/statements/checkpoint.y"
    {
					PGCheckPointStmt *n = makeNode(PGCheckPointStmt);
					n->force = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1065:
#line 8 "third_party/libpg_query/grammar/statements/export.y"
    {
					PGExportStmt *n = makeNode(PGExportStmt);
					n->filename = (yyvsp[(3) - (4)].str);
					n->options = NIL;
					if ((yyvsp[(4) - (4)].list)) {
						n->options = list_concat(n->options, (yyvsp[(4) - (4)].list));
					}
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1066:
#line 21 "third_party/libpg_query/grammar/statements/export.y"
    {
					PGImportStmt *n = makeNode(PGImportStmt);
					n->filename = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1067:
#line 10 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(2) - (2)].node);
					n->options = NIL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1068:
#line 17 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(4) - (4)].node);
					n->options = list_make1(makeDefElem("analyze", NULL, (yylsp[(2) - (4)])));
					if ((yyvsp[(3) - (4)].boolean))
						n->options = lappend(n->options,
											 makeDefElem("verbose", NULL, (yylsp[(3) - (4)])));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1069:
#line 27 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(3) - (3)].node);
					n->options = list_make1(makeDefElem("verbose", NULL, (yylsp[(2) - (3)])));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1070:
#line 34 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(5) - (5)].node);
					n->options = (yyvsp[(3) - (5)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1071:
#line 44 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1072:
#line 45 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1073:
#line 50 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 1074:
#line 51 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].value); ;}
    break;

  case 1075:
#line 52 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1081:
#line 65 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1082:
#line 66 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1083:
#line 67 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1084:
#line 68 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1085:
#line 73 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1086:
#line 74 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1087:
#line 80 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 1088:
#line 84 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 1089:
#line 91 "third_party/libpg_query/grammar/statements/explain.y"
    {;}
    break;

  case 1090:
#line 92 "third_party/libpg_query/grammar/statements/explain.y"
    {;}
    break;

  case 1091:
#line 97 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "true"; ;}
    break;

  case 1092:
#line 98 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "false"; ;}
    break;

  case 1093:
#line 99 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "on"; ;}
    break;

  case 1094:
#line 105 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1095:
#line 111 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 1096:
#line 118 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1097:
#line 119 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "analyze"; ;}
    break;

  case 1098:
#line 11 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(2) - (2)].vsetstmt);
					n->is_local = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1099:
#line 17 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->is_local = true;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1100:
#line 23 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->is_local = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1101:
#line 32 "third_party/libpg_query/grammar/statements/variable_set.y"
    {(yyval.vsetstmt) = (yyvsp[(1) - (1)].vsetstmt);;}
    break;

  case 1102:
#line 34 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_CURRENT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1103:
#line 42 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (char*) "timezone";
					if ((yyvsp[(3) - (3)].node) != NULL)
						n->args = list_make1((yyvsp[(3) - (3)].node));
					else
						n->kind = VAR_SET_DEFAULT;
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1104:
#line 53 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (char*) "search_path";
					n->args = list_make1(makeStringConst((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)])));
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1105:
#line 65 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[(1) - (3)].str);
					n->args = (yyvsp[(3) - (3)].list);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1106:
#line 73 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[(1) - (3)].str);
					n->args = (yyvsp[(3) - (3)].list);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1107:
#line 81 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1108:
#line 88 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1109:
#line 98 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)])); ;}
    break;

  case 1110:
#line 100 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
    break;

  case 1111:
#line 106 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1112:
#line 110 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1113:
#line 114 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGTypeName *t = (yyvsp[(1) - (3)].typnam);
					if ((yyvsp[(3) - (3)].list) != NIL)
					{
						PGAConst *n = (PGAConst *) linitial((yyvsp[(3) - (3)].list));
						if ((n->val.val.ival & ~(INTERVAL_MASK(HOUR) | INTERVAL_MASK(MINUTE))) != 0)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("time zone interval must be HOUR or HOUR TO MINUTE"),
									 parser_errposition((yylsp[(3) - (3)]))));
					}
					t->typmods = (yyvsp[(3) - (3)].list);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), t);
				;}
    break;

  case 1114:
#line 129 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGTypeName *t = (yyvsp[(1) - (5)].typnam);
					t->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.node) = makeStringConstCast((yyvsp[(5) - (5)].str), (yylsp[(5) - (5)]), t);
				;}
    break;

  case 1115:
#line 135 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
    break;

  case 1116:
#line 136 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1117:
#line 137 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1118:
#line 141 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 1119:
#line 142 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 1120:
#line 8 "third_party/libpg_query/grammar/statements/load.y"
    {
					PGLoadStmt *n = makeNode(PGLoadStmt);
					n->filename = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1121:
#line 16 "third_party/libpg_query/grammar/statements/load.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1122:
#line 9 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (4)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (4)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (4)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1123:
#line 23 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (5)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (5)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (5)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = (yyvsp[(5) - (5)].range);
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1124:
#line 37 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = (PGVacuumStmt *) (yyvsp[(5) - (5)].node);
					n->options |= PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (5)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (5)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (5)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1125:
#line 49 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM | (yyvsp[(3) - (4)].ival);
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1126:
#line 57 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM | (yyvsp[(3) - (6)].ival);
					n->relation = (yyvsp[(5) - (6)].range);
					n->va_cols = (yyvsp[(6) - (6)].list);
					if (n->va_cols != NIL)	/* implies analyze */
						n->options |= PG_VACOPT_ANALYZE;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1127:
#line 70 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_ANALYZE; ;}
    break;

  case 1128:
#line 71 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_VERBOSE; ;}
    break;

  case 1129:
#line 72 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_FREEZE; ;}
    break;

  case 1130:
#line 73 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_FULL; ;}
    break;

  case 1131:
#line 75 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					if (strcmp((yyvsp[(1) - (1)].str), "disable_page_skipping") == 0)
						(yyval.ival) = PG_VACOPT_DISABLE_PAGE_SKIPPING;
					else
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
							 errmsg("unrecognized VACUUM option \"%s\"", (yyvsp[(1) - (1)].str)),
									 parser_errposition((yylsp[(1) - (1)]))));
				;}
    break;

  case 1132:
#line 87 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1133:
#line 88 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1134:
#line 93 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 1135:
#line 94 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
    break;

  case 1136:
#line 98 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1137:
#line 99 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1138:
#line 9 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGDeleteStmt *n = makeNode(PGDeleteStmt);
					n->relation = (yyvsp[(4) - (7)].range);
					n->usingClause = (yyvsp[(5) - (7)].list);
					n->whereClause = (yyvsp[(6) - (7)].node);
					n->returningList = (yyvsp[(7) - (7)].list);
					n->withClause = (yyvsp[(1) - (7)].with);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1139:
#line 22 "third_party/libpg_query/grammar/statements/delete.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
				;}
    break;

  case 1140:
#line 26 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGAlias *alias = makeNode(PGAlias);
					alias->aliasname = (yyvsp[(2) - (2)].str);
					(yyvsp[(1) - (2)].range)->alias = alias;
					(yyval.range) = (yyvsp[(1) - (2)].range);
				;}
    break;

  case 1141:
#line 33 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGAlias *alias = makeNode(PGAlias);
					alias->aliasname = (yyvsp[(3) - (3)].str);
					(yyvsp[(1) - (3)].range)->alias = alias;
					(yyval.range) = (yyvsp[(1) - (3)].range);
				;}
    break;

  case 1142:
#line 43 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 1143:
#line 44 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1144:
#line 50 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1145:
#line 51 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1146:
#line 10 "third_party/libpg_query/grammar/statements/analyze.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_ANALYZE;
					if ((yyvsp[(2) - (2)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1147:
#line 20 "third_party/libpg_query/grammar/statements/analyze.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_ANALYZE;
					if ((yyvsp[(2) - (4)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = (yyvsp[(3) - (4)].range);
					n->va_cols = (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1148:
#line 2 "third_party/libpg_query/grammar/statements/variable_reset.y"
    { (yyval.node) = (PGNode *) (yyvsp[(2) - (2)].vsetstmt); ;}
    break;

  case 1149:
#line 8 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (yyvsp[(1) - (1)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1150:
#line 15 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET_ALL;
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1151:
#line 24 "third_party/libpg_query/grammar/statements/variable_reset.y"
    { (yyval.vsetstmt) = (yyvsp[(1) - (1)].vsetstmt); ;}
    break;

  case 1152:
#line 26 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (char*) "timezone";
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1153:
#line 33 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (char*) "transaction_isolation";
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1154:
#line 3 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowSelectStmt *n = makeNode(PGVariableShowSelectStmt);
				n->stmt = (yyvsp[(2) - (2)].node);
				n->name = (char*) "select";
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1155:
#line 11 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1156:
#line 17 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (char*) "timezone";
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1157:
#line 23 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (char*) "transaction_isolation";
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1158:
#line 29 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (char*) "all";
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1161:
#line 39 "third_party/libpg_query/grammar/statements/variable_show.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1162:
#line 41 "third_party/libpg_query/grammar/statements/variable_show.y"
    { (yyval.str) = psprintf("%s.%s", (yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str)); ;}
    break;

  case 1163:
#line 7 "third_party/libpg_query/grammar/statements/call.y"
    {
					PGCallStmt *n = makeNode(PGCallStmt);
					n->func = (yyvsp[(2) - (2)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1164:
#line 10 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(4) - (9)].range);
					n->view->relpersistence = (yyvsp[(2) - (9)].ival);
					n->aliases = (yyvsp[(5) - (9)].list);
					n->query = (yyvsp[(8) - (9)].node);
					n->replace = false;
					n->options = (yyvsp[(6) - (9)].list);
					n->withCheckOption = (yyvsp[(9) - (9)].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1165:
#line 23 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(6) - (11)].range);
					n->view->relpersistence = (yyvsp[(4) - (11)].ival);
					n->aliases = (yyvsp[(7) - (11)].list);
					n->query = (yyvsp[(10) - (11)].node);
					n->replace = true;
					n->options = (yyvsp[(8) - (11)].list);
					n->withCheckOption = (yyvsp[(11) - (11)].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1166:
#line 36 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(5) - (12)].range);
					n->view->relpersistence = (yyvsp[(2) - (12)].ival);
					n->aliases = (yyvsp[(7) - (12)].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[(11) - (12)].node));
					n->replace = false;
					n->options = (yyvsp[(9) - (12)].list);
					n->withCheckOption = (yyvsp[(12) - (12)].viewcheckoption);
					if (n->withCheckOption != PG_NO_CHECK_OPTION)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[(12) - (12)]))));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1167:
#line 54 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(7) - (14)].range);
					n->view->relpersistence = (yyvsp[(4) - (14)].ival);
					n->aliases = (yyvsp[(9) - (14)].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[(13) - (14)].node));
					n->replace = true;
					n->options = (yyvsp[(11) - (14)].list);
					n->withCheckOption = (yyvsp[(14) - (14)].viewcheckoption);
					if (n->withCheckOption != PG_NO_CHECK_OPTION)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[(14) - (14)]))));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1168:
#line 74 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; ;}
    break;

  case 1169:
#line 75 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; ;}
    break;

  case 1170:
#line 76 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = PG_LOCAL_CHECK_OPTION; ;}
    break;

  case 1171:
#line 77 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = PG_NO_CHECK_OPTION; ;}
    break;

  case 1172:
#line 12 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(6) - (7)].node);
					ctas->into = (yyvsp[(4) - (7)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = false;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(4) - (7)].into)->rel->relpersistence = (yyvsp[(2) - (7)].ival);
					(yyvsp[(4) - (7)].into)->skipData = !((yyvsp[(7) - (7)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1173:
#line 25 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(9) - (10)].node);
					ctas->into = (yyvsp[(7) - (10)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = true;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(7) - (10)].into)->rel->relpersistence = (yyvsp[(2) - (10)].ival);
					(yyvsp[(7) - (10)].into)->skipData = !((yyvsp[(10) - (10)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1174:
#line 41 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1175:
#line 42 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1176:
#line 43 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1177:
#line 49 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					(yyval.into) = makeNode(PGIntoClause);
					(yyval.into)->rel = (yyvsp[(1) - (4)].range);
					(yyval.into)->colNames = (yyvsp[(2) - (4)].list);
					(yyval.into)->options = (yyvsp[(3) - (4)].list);
					(yyval.into)->onCommit = (yyvsp[(4) - (4)].oncommit);
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;		/* might get changed later */
				;}
    break;


/* Line 1267 of yacc.c.  */
#line 22898 "third_party/libpg_query/grammar/grammar_out.cpp"
      default: break;
    }
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;
  *++yylsp = yyloc;

  /* Now `shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*------------------------------------.
| yyerrlab -- here on detecting error |
`------------------------------------*/
yyerrlab:
  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (&yylloc, yyscanner, YY_("syntax error"));
#else
      {
	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
	  {
	    YYSIZE_T yyalloc = 2 * yysize;
	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
	    if (yymsg != yymsgbuf)
	      YYSTACK_FREE (yymsg);
	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
	    if (yymsg)
	      yymsg_alloc = yyalloc;
	    else
	      {
		yymsg = yymsgbuf;
		yymsg_alloc = sizeof yymsgbuf;
	      }
	  }

	if (0 < yysize && yysize <= yymsg_alloc)
	  {
	    (void) yysyntax_error (yymsg, yystate, yychar);
	    yyerror (&yylloc, yyscanner, yymsg);
	  }
	else
	  {
	    yyerror (&yylloc, yyscanner, YY_("syntax error"));
	    if (yysize != 0)
	      goto yyexhaustedlab;
	  }
      }
#endif
    }

  yyerror_range[0] = yylloc;

  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse look-ahead token after an
	 error, discard it.  */

      if (yychar <= YYEOF)
	{
	  /* Return failure if at end of input.  */
	  if (yychar == YYEOF)
	    YYABORT;
	}
      else
	{
	  yydestruct ("Error: discarding",
		      yytoken, &yylval, &yylloc, yyscanner);
	  yychar = YYEMPTY;
	}
    }

  /* Else will try to reuse look-ahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  yyerror_range[0] = yylsp[1-yylen];
  /* Do not reclaim the symbols of the rule which action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;	/* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (yyn != YYPACT_NINF)
	{
	  yyn += YYTERROR;
	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
	    {
	      yyn = yytable[yyn];
	      if (0 < yyn)
		break;
	    }
	}

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
	YYABORT;

      yyerror_range[0] = *yylsp;
      yydestruct ("Error: popping",
		  yystos[yystate], yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  *++yyvsp = yylval;

  yyerror_range[1] = yylloc;
  /* Using YYLLOC is tempting, but would change the location of
     the look-ahead.  YYLOC is available though.  */
  YYLLOC_DEFAULT (yyloc, (yyerror_range - 1), 2);
  *++yylsp = yyloc;

  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#ifndef yyoverflow
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (&yylloc, yyscanner, YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEOF && yychar != YYEMPTY)
     yydestruct ("Cleanup: discarding lookahead",
		 yytoken, &yylval, &yylloc, yyscanner);
  /* Do not reclaim the symbols of the rule which action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
		  yystos[*yyssp], yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  /* Make sure YYID is used.  */
  return YYID (yyresult);
}


#line 67 "third_party/libpg_query/grammar/statements/create_as.y"


#line 1 "third_party/libpg_query/grammar/grammar.cpp"
/*
 * The signature of this function is required by bison.  However, we
 * ignore the passed yylloc and instead use the last token position
 * available from the scanner.
 */
static void
base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner, const char *msg)
{
	parser_yyerror(msg);
}

static PGRawStmt *
makeRawStmt(PGNode *stmt, int stmt_location)
{
	PGRawStmt    *rs = makeNode(PGRawStmt);

	rs->stmt = stmt;
	rs->stmt_location = stmt_location;
	rs->stmt_len = 0;			/* might get changed later */
	return rs;
}

/* Adjust a PGRawStmt to reflect that it doesn't run to the end of the string */
static void
updateRawStmtEnd(PGRawStmt *rs, int end_location)
{
	/*
	 * If we already set the length, don't change it.  This is for situations
	 * like "select foo ;; select bar" where the same statement will be last
	 * in the string for more than one semicolon.
	 */
	if (rs->stmt_len > 0)
		return;

	/* OK, update length of PGRawStmt */
	rs->stmt_len = end_location - rs->stmt_location;
}

static PGNode *
makeColumnRef(char *colname, PGList *indirection,
			  int location, core_yyscan_t yyscanner)
{
	/*
	 * Generate a PGColumnRef node, with an PGAIndirection node added if there
	 * is any subscripting in the specified indirection list.  However,
	 * any field selection at the start of the indirection list must be
	 * transposed into the "fields" part of the PGColumnRef node.
	 */
	PGColumnRef  *c = makeNode(PGColumnRef);
	int		nfields = 0;
	PGListCell *l;

	c->location = location;
	foreach(l, indirection)
	{
		if (IsA(lfirst(l), PGAIndices))
		{
			PGAIndirection *i = makeNode(PGAIndirection);

			if (nfields == 0)
			{
				/* easy case - all indirection goes to PGAIndirection */
				c->fields = list_make1(makeString(colname));
				i->indirection = check_indirection(indirection, yyscanner);
			}
			else
			{
				/* got to split the list in two */
				i->indirection = check_indirection(list_copy_tail(indirection,
																  nfields),
												   yyscanner);
				indirection = list_truncate(indirection, nfields);
				c->fields = lcons(makeString(colname), indirection);
			}
			i->arg = (PGNode *) c;
			return (PGNode *) i;
		}
		else if (IsA(lfirst(l), PGAStar))
		{
			/* We only allow '*' at the end of a PGColumnRef */
			if (lnext(l) != NULL)
				parser_yyerror("improper use of \"*\"");
		}
		nfields++;
	}
	/* No subscripting, so all indirection gets added to field list */
	c->fields = lcons(makeString(colname), indirection);
	return (PGNode *) c;
}

static PGNode *
makeTypeCast(PGNode *arg, PGTypeName *tpname, int location)
{
	PGTypeCast *n = makeNode(PGTypeCast);
	n->arg = arg;
	n->typeName = tpname;
	n->location = location;
	return (PGNode *) n;
}

static PGNode *
makeStringConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGString;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeStringConstCast(char *str, int location, PGTypeName *tpname)
{
	PGNode *s = makeStringConst(str, location);

	return makeTypeCast(s, tpname, -1);
}

static PGNode *
makeIntervalNode(char *str, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGString;
	n->sval = str;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;

}

static PGNode *
makeIntervalNode(int val, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGInteger;
	n->ival = val;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;
}

static PGNode *
makeIntervalNode(PGNode *arg, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGAExpr;
	n->eval = arg;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;
}

static PGNode *
makeSampleSize(PGValue *sample_size, bool is_percentage) {
	PGSampleSize *n = makeNode(PGSampleSize);

	n->sample_size = *sample_size;
	n->is_percentage = is_percentage;

	return (PGNode *)n;
}

static PGNode *
makeSampleOptions(PGNode *sample_size, char *method, int seed, int location) {
	PGSampleOptions *n = makeNode(PGSampleOptions);

	n->sample_size = sample_size;
	n->method = method;
	n->seed = seed;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeIntConst(int val, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGInteger;
	n->val.val.ival = val;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeFloatConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGFloat;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeBitStringConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGBitString;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeNullAConst(int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGNull;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeAConst(PGValue *v, int location)
{
	PGNode *n;

	switch (v->type)
	{
		case T_PGFloat:
			n = makeFloatConst(v->val.str, location);
			break;

		case T_PGInteger:
			n = makeIntConst(v->val.ival, location);
			break;

		case T_PGString:
		default:
			n = makeStringConst(v->val.str, location);
			break;
	}

	return n;
}

/* makeBoolAConst()
 * Create an PGAConst string node and put it inside a boolean cast.
 */
static PGNode *
makeBoolAConst(bool state, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGString;
	n->val.val.str = (state ? (char*) "t" : (char*) "f");
	n->location = location;

	return makeTypeCast((PGNode *)n, SystemTypeName("bool"), -1);
}

/* check_qualified_name --- check the result of qualified_name production
 *
 * It's easiest to let the grammar production for qualified_name allow
 * subscripts and '*', which we then must reject here.
 */
static void
check_qualified_name(PGList *names, core_yyscan_t yyscanner)
{
	PGListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), PGString))
			parser_yyerror("syntax error");
	}
}

/* check_func_name --- check the result of func_name production
 *
 * It's easiest to let the grammar production for func_name allow subscripts
 * and '*', which we then must reject here.
 */
static PGList *
check_func_name(PGList *names, core_yyscan_t yyscanner)
{
	PGListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), PGString))
			parser_yyerror("syntax error");
	}
	return names;
}

/* check_indirection --- check the result of indirection production
 *
 * We only allow '*' at the end of the list, but it's hard to enforce that
 * in the grammar, so do it here.
 */
static PGList *
check_indirection(PGList *indirection, core_yyscan_t yyscanner)
{
	PGListCell *l;

	foreach(l, indirection)
	{
		if (IsA(lfirst(l), PGAStar))
		{
			if (lnext(l) != NULL)
				parser_yyerror("improper use of \"*\"");
		}
	}
	return indirection;
}

/* makeParamRef
 * Creates a new PGParamRef node
 */
static PGNode* makeParamRef(int number, int location)
{
	PGParamRef *p = makeNode(PGParamRef);
	p->number = number;
	p->location = location;
	return (PGNode *) p;
}

static PGNode *
makeParamRefCast(int number, int location, PGTypeName *tpname)
{
	PGNode *p = makeParamRef(number, location);
	return makeTypeCast(p, tpname, -1);
}

/* insertSelectOptions()
 * Insert ORDER BY, etc into an already-constructed SelectStmt.
 *
 * This routine is just to avoid duplicating code in PGSelectStmt productions.
 */
static void
insertSelectOptions(PGSelectStmt *stmt,
					PGList *sortClause, PGList *lockingClause,
					PGNode *limitOffset, PGNode *limitCount,
					PGWithClause *withClause,
					core_yyscan_t yyscanner)
{
	Assert(IsA(stmt, PGSelectStmt));

	/*
	 * Tests here are to reject constructs like
	 *	(SELECT foo ORDER BY bar) ORDER BY baz
	 */
	if (sortClause)
	{
		if (stmt->sortClause)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple ORDER BY clauses not allowed"),
					 parser_errposition(exprLocation((PGNode *) sortClause))));
		stmt->sortClause = sortClause;
	}
	/* We can handle multiple locking clauses, though */
	stmt->lockingClause = list_concat(stmt->lockingClause, lockingClause);
	if (limitOffset)
	{
		if (stmt->limitOffset)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple OFFSET clauses not allowed"),
					 parser_errposition(exprLocation(limitOffset))));
		stmt->limitOffset = limitOffset;
	}
	if (limitCount)
	{
		if (stmt->limitCount)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple LIMIT clauses not allowed"),
					 parser_errposition(exprLocation(limitCount))));
		stmt->limitCount = limitCount;
	}
	if (withClause)
	{
		if (stmt->withClause)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple WITH clauses not allowed"),
					 parser_errposition(exprLocation((PGNode *) withClause))));
		stmt->withClause = withClause;
	}
}

static PGNode *
makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg)
{
	PGSelectStmt *n = makeNode(PGSelectStmt);

	n->op = op;
	n->all = all;
	n->larg = (PGSelectStmt *) larg;
	n->rarg = (PGSelectStmt *) rarg;
	return (PGNode *) n;
}

/* SystemFuncName()
 * Build a properly-qualified reference to a built-in function.
 */
PGList *
SystemFuncName(const char *name)
{
	return list_make2(makeString(DEFAULT_SCHEMA), makeString(name));
}

/* SystemTypeName()
 * Build a properly-qualified reference to a built-in type.
 *
 * typmod is defaulted, but may be changed afterwards by caller.
 * Likewise for the location.
 */
PGTypeName *
SystemTypeName(const char *name)
{
	return makeTypeNameFromNameList(list_make2(makeString(DEFAULT_SCHEMA),
											   makeString(name)));
}

/* doNegate()
 * Handle negation of a numeric constant.
 *
 * Formerly, we did this here because the optimizer couldn't cope with
 * indexquals that looked like "var = -4" --- it wants "var = const"
 * and a unary minus operator applied to a constant didn't qualify.
 * As of Postgres 7.0, that problem doesn't exist anymore because there
 * is a constant-subexpression simplifier in the optimizer.  However,
 * there's still a good reason for doing this here, which is that we can
 * postpone committing to a particular internal representation for simple
 * negative constants.	It's better to leave "-123.456" in string form
 * until we know what the desired type is.
 */
static PGNode *
doNegate(PGNode *n, int location)
{
	if (IsA(n, PGAConst))
	{
		PGAConst *con = (PGAConst *)n;

		/* report the constant's location as that of the '-' sign */
		con->location = location;

		if (con->val.type == T_PGInteger)
		{
			con->val.val.ival = -con->val.val.ival;
			return n;
		}
		if (con->val.type == T_PGFloat)
		{
			doNegateFloat(&con->val);
			return n;
		}
	}

	return (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", NULL, n, location);
}

static void
doNegateFloat(PGValue *v)
{
	char   *oldval = v->val.str;

	Assert(IsA(v, PGFloat));
	if (*oldval == '+')
		oldval++;
	if (*oldval == '-')
		v->val.str = oldval+1;	/* just strip the '-' */
	else
		v->val.str = psprintf("-%s", oldval);
}

static PGNode *
makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location)
{
	PGNode	   *lexp = lexpr;

	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
	while (IsA(lexp, PGAExpr) &&
		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
		lexp = ((PGAExpr *) lexp)->lexpr;
	/* Flatten "a AND b AND c ..." to a single PGBoolExpr on sight */
	if (IsA(lexp, PGBoolExpr))
	{
		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;

		if (blexpr->boolop == PG_AND_EXPR)
		{
			blexpr->args = lappend(blexpr->args, rexpr);
			return (PGNode *) blexpr;
		}
	}
	return (PGNode *) makeBoolExpr(PG_AND_EXPR, list_make2(lexpr, rexpr), location);
}

static PGNode *
makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location)
{
	PGNode	   *lexp = lexpr;

	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
	while (IsA(lexp, PGAExpr) &&
		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
		lexp = ((PGAExpr *) lexp)->lexpr;
	/* Flatten "a OR b OR c ..." to a single PGBoolExpr on sight */
	if (IsA(lexp, PGBoolExpr))
	{
		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;

		if (blexpr->boolop == PG_OR_EXPR)
		{
			blexpr->args = lappend(blexpr->args, rexpr);
			return (PGNode *) blexpr;
		}
	}
	return (PGNode *) makeBoolExpr(PG_OR_EXPR, list_make2(lexpr, rexpr), location);
}

static PGNode *
makeNotExpr(PGNode *expr, int location)
{
	return (PGNode *) makeBoolExpr(PG_NOT_EXPR, list_make1(expr), location);
}

static PGNode *
makeSQLValueFunction(PGSQLValueFunctionOp op, int32_t typmod, int location)
{
	PGSQLValueFunction *svf = makeNode(PGSQLValueFunction);

	svf->op = op;
	/* svf->type will be filled during parse analysis */
	svf->typmod = typmod;
	svf->location = location;
	return (PGNode *) svf;
}

/* Separate PGConstraint nodes from COLLATE clauses in a */
static void
SplitColQualList(PGList *qualList,
				 PGList **constraintList, PGCollateClause **collClause,
				 core_yyscan_t yyscanner)
{
	PGListCell   *cell;
	PGListCell   *prev;
	PGListCell   *next;

	*collClause = NULL;
	prev = NULL;
	for (cell = list_head(qualList); cell; cell = next)
	{
		PGNode   *n = (PGNode *) lfirst(cell);

		next = lnext(cell);
		if (IsA(n, PGConstraint))
		{
			/* keep it in list */
			prev = cell;
			continue;
		}
		if (IsA(n, PGCollateClause))
		{
			PGCollateClause *c = (PGCollateClause *) n;

			if (*collClause)
				ereport(ERROR,
						(errcode(PG_ERRCODE_SYNTAX_ERROR),
						 errmsg("multiple COLLATE clauses not allowed"),
						 parser_errposition(c->location)));
			*collClause = c;
		}
		else
			elog(ERROR, "unexpected node type %d", (int) n->type);
		/* remove non-Constraint nodes from qualList */
		qualList = list_delete_cell(qualList, cell, prev);
	}
	*constraintList = qualList;
}

/*
 * Process result of ConstraintAttributeSpec, and set appropriate bool flags
 * in the output command node.  Pass NULL for any flags the particular
 * command doesn't support.
 */
static void
processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner)
{
	/* defaults */
	if (deferrable)
		*deferrable = false;
	if (initdeferred)
		*initdeferred = false;
	if (not_valid)
		*not_valid = false;

	if (cas_bits & (CAS_DEFERRABLE | CAS_INITIALLY_DEFERRED))
	{
		if (deferrable)
			*deferrable = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_INITIALLY_DEFERRED)
	{
		if (initdeferred)
			*initdeferred = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_NOT_VALID)
	{
		if (not_valid)
			*not_valid = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NOT VALID",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_NO_INHERIT)
	{
		if (no_inherit)
			*no_inherit = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NO INHERIT",
							constrType),
					 parser_errposition(location)));
	}
}

/*----------
 * Recursive view transformation
 *
 * Convert
 *
 *     CREATE RECURSIVE VIEW relname (aliases) AS query
 *
 * to
 *
 *     CREATE VIEW relname (aliases) AS
 *         WITH RECURSIVE relname (aliases) AS (query)
 *         SELECT aliases FROM relname
 *
 * Actually, just the WITH ... part, which is then inserted into the original
 * view as the query.
 * ----------
 */
static PGNode *
makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query)
{
	PGSelectStmt *s = makeNode(PGSelectStmt);
	PGWithClause *w = makeNode(PGWithClause);
	PGCommonTableExpr *cte = makeNode(PGCommonTableExpr);
	PGList	   *tl = NIL;
	PGListCell   *lc;

	/* create common table expression */
	cte->ctename = relname;
	cte->aliascolnames = aliases;
	cte->ctequery = query;
	cte->location = -1;

	/* create WITH clause and attach CTE */
	w->recursive = true;
	w->ctes = list_make1(cte);
	w->location = -1;

	/* create target list for the new SELECT from the alias list of the
	 * recursive view specification */
	foreach (lc, aliases)
	{
		PGResTarget *rt = makeNode(PGResTarget);

		rt->name = NULL;
		rt->indirection = NIL;
		rt->val = makeColumnRef(strVal(lfirst(lc)), NIL, -1, 0);
		rt->location = -1;

		tl = lappend(tl, rt);
	}

	/* create new SELECT combining WITH clause, target list, and fake FROM
	 * clause */
	s->withClause = w;
	s->targetList = tl;
	s->fromClause = list_make1(makeRangeVar(NULL, relname, -1));

	return (PGNode *) s;
}

/* parser_init()
 * Initialize to parse one query string
 */
void
parser_init(base_yy_extra_type *yyext)
{
	yyext->parsetree = NIL;		/* in case grammar forgets to set it */
}

#undef yyparse
#undef yylex
#undef yyerror
#undef yylval
#undef yychar
#undef yydebug
#undef yynerrs
#undef yylloc

} // namespace duckdb_libpgquery
