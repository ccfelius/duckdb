/* A Bison parser, made by GNU Bison 2.3.  */

/* Skeleton implementation for Bison's Yacc-like parsers in C

   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
   Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street, Fifth Floor,
   Boston, MA 02110-1301, USA.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "2.3"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Using locations.  */
#define YYLSP_NEEDED 1

/* Substitute the variable and function names.  */
#define yyparse base_yyparse
#define yylex   base_yylex
#define yyerror base_yyerror
#define yylval  base_yylval
#define yychar  base_yychar
#define yydebug base_yydebug
#define yynerrs base_yynerrs
#define yylloc base_yylloc

/* Tokens.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
   /* Put the tokens into the symbol table, so that GDB and other debuggers
      know about them.  */
   enum yytokentype {
     IDENT = 258,
     FCONST = 259,
     SCONST = 260,
     BCONST = 261,
     XCONST = 262,
     Op = 263,
     ICONST = 264,
     PARAM = 265,
     TYPECAST = 266,
     DOT_DOT = 267,
     COLON_EQUALS = 268,
     EQUALS_GREATER = 269,
     LESS_EQUALS = 270,
     GREATER_EQUALS = 271,
     NOT_EQUALS = 272,
     ABORT_P = 273,
     ABSOLUTE_P = 274,
     ACCESS = 275,
     ACTION = 276,
     ADD_P = 277,
     ADMIN = 278,
     AFTER = 279,
     AGGREGATE = 280,
     ALL = 281,
     ALSO = 282,
     ALTER = 283,
     ALWAYS = 284,
     ANALYSE = 285,
     ANALYZE = 286,
     AND = 287,
     ANY = 288,
     ARRAY = 289,
     AS = 290,
     ASC_P = 291,
     ASSERTION = 292,
     ASSIGNMENT = 293,
     ASYMMETRIC = 294,
     AT = 295,
     ATTACH = 296,
     ATTRIBUTE = 297,
     AUTHORIZATION = 298,
     BACKWARD = 299,
     BEFORE = 300,
     BEGIN_P = 301,
     BETWEEN = 302,
     BIGINT = 303,
     BINARY = 304,
     BIT = 305,
     BOOLEAN_P = 306,
     BOTH = 307,
     BY = 308,
     CACHE = 309,
     CALL_P = 310,
     CALLED = 311,
     CASCADE = 312,
     CASCADED = 313,
     CASE = 314,
     CAST = 315,
     CATALOG_P = 316,
     CHAIN = 317,
     CHAR_P = 318,
     CHARACTER = 319,
     CHARACTERISTICS = 320,
     CHECK_P = 321,
     CHECKPOINT = 322,
     CLASS = 323,
     CLOSE = 324,
     CLUSTER = 325,
     COALESCE = 326,
     COLLATE = 327,
     COLLATION = 328,
     COLUMN = 329,
     COLUMNS = 330,
     COMMENT = 331,
     COMMENTS = 332,
     COMMIT = 333,
     COMMITTED = 334,
     CONCURRENTLY = 335,
     CONFIGURATION = 336,
     CONFLICT = 337,
     CONNECTION = 338,
     CONSTRAINT = 339,
     CONSTRAINTS = 340,
     CONTENT_P = 341,
     CONTINUE_P = 342,
     CONVERSION_P = 343,
     COPY = 344,
     COST = 345,
     CREATE_P = 346,
     CROSS = 347,
     CSV = 348,
     CUBE = 349,
     CURRENT_P = 350,
     CURRENT_CATALOG = 351,
     CURRENT_DATE = 352,
     CURRENT_ROLE = 353,
     CURRENT_SCHEMA = 354,
     CURRENT_TIME = 355,
     CURRENT_TIMESTAMP = 356,
     CURRENT_USER = 357,
     CURSOR = 358,
     CYCLE = 359,
     DATA_P = 360,
     DATABASE = 361,
     DAY_P = 362,
     DAYS_P = 363,
     DEALLOCATE = 364,
     DEC = 365,
     DECIMAL_P = 366,
     DECLARE = 367,
     DEFAULT = 368,
     DEFAULTS = 369,
     DEFERRABLE = 370,
     DEFERRED = 371,
     DEFINER = 372,
     DELETE_P = 373,
     DELIMITER = 374,
     DELIMITERS = 375,
     DEPENDS = 376,
     DESC_P = 377,
     DESCRIBE = 378,
     DETACH = 379,
     DICTIONARY = 380,
     DISABLE_P = 381,
     DISCARD = 382,
     DISTINCT = 383,
     DO = 384,
     DOCUMENT_P = 385,
     DOMAIN_P = 386,
     DOUBLE_P = 387,
     DROP = 388,
     EACH = 389,
     ELSE = 390,
     ENABLE_P = 391,
     ENCODING = 392,
     ENCRYPTED = 393,
     END_P = 394,
     ENUM_P = 395,
     ESCAPE = 396,
     EVENT = 397,
     EXCEPT = 398,
     EXCLUDE = 399,
     EXCLUDING = 400,
     EXCLUSIVE = 401,
     EXECUTE = 402,
     EXISTS = 403,
     EXPLAIN = 404,
     EXPORT_P = 405,
     EXTENSION = 406,
     EXTERNAL = 407,
     EXTRACT = 408,
     FALSE_P = 409,
     FAMILY = 410,
     FETCH = 411,
     FILTER = 412,
     FIRST_P = 413,
     FLOAT_P = 414,
     FOLLOWING = 415,
     FOR = 416,
     FORCE = 417,
     FOREIGN = 418,
     FORWARD = 419,
     FREEZE = 420,
     FROM = 421,
     FULL = 422,
     FUNCTION = 423,
     FUNCTIONS = 424,
     GENERATED = 425,
     GLOB = 426,
     GLOBAL = 427,
     GRANT = 428,
     GRANTED = 429,
     GROUP_P = 430,
     GROUPING = 431,
     HANDLER = 432,
     HAVING = 433,
     HEADER_P = 434,
     HOLD = 435,
     HOUR_P = 436,
     HOURS_P = 437,
     IDENTITY_P = 438,
     IF_P = 439,
     ILIKE = 440,
     IMMEDIATE = 441,
     IMMUTABLE = 442,
     IMPLICIT_P = 443,
     IMPORT_P = 444,
     IN_P = 445,
     INCLUDING = 446,
     INCREMENT = 447,
     INDEX = 448,
     INDEXES = 449,
     INHERIT = 450,
     INHERITS = 451,
     INITIALLY = 452,
     INLINE_P = 453,
     INNER_P = 454,
     INOUT = 455,
     INPUT_P = 456,
     INSENSITIVE = 457,
     INSERT = 458,
     INSTEAD = 459,
     INT_P = 460,
     INTEGER = 461,
     INTERSECT = 462,
     INTERVAL = 463,
     INTO = 464,
     INVOKER = 465,
     IS = 466,
     ISNULL = 467,
     ISOLATION = 468,
     JOIN = 469,
     KEY = 470,
     LABEL = 471,
     LANGUAGE = 472,
     LARGE_P = 473,
     LAST_P = 474,
     LATERAL_P = 475,
     LEADING = 476,
     LEAKPROOF = 477,
     LEFT = 478,
     LEVEL = 479,
     LIKE = 480,
     LIMIT = 481,
     LISTEN = 482,
     LOAD = 483,
     LOCAL = 484,
     LOCALTIME = 485,
     LOCALTIMESTAMP = 486,
     LOCATION = 487,
     LOCK_P = 488,
     LOCKED = 489,
     LOGGED = 490,
     MACRO = 491,
     MAPPING = 492,
     MATCH = 493,
     MATERIALIZED = 494,
     MAXVALUE = 495,
     METHOD = 496,
     MICROSECOND_P = 497,
     MICROSECONDS_P = 498,
     MILLISECOND_P = 499,
     MILLISECONDS_P = 500,
     MINUTE_P = 501,
     MINUTES_P = 502,
     MINVALUE = 503,
     MODE = 504,
     MONTH_P = 505,
     MONTHS_P = 506,
     MOVE = 507,
     NAME_P = 508,
     NAMES = 509,
     NATIONAL = 510,
     NATURAL = 511,
     NCHAR = 512,
     NEW = 513,
     NEXT = 514,
     NO = 515,
     NONE = 516,
     NOT = 517,
     NOTHING = 518,
     NOTIFY = 519,
     NOTNULL = 520,
     NOWAIT = 521,
     NULL_P = 522,
     NULLIF = 523,
     NULLS_P = 524,
     NUMERIC = 525,
     OBJECT_P = 526,
     OF = 527,
     OFF = 528,
     OFFSET = 529,
     OIDS = 530,
     OLD = 531,
     ON = 532,
     ONLY = 533,
     OPERATOR = 534,
     OPTION = 535,
     OPTIONS = 536,
     OR = 537,
     ORDER = 538,
     ORDINALITY = 539,
     OUT_P = 540,
     OUTER_P = 541,
     OVER = 542,
     OVERLAPS = 543,
     OVERLAY = 544,
     OVERRIDING = 545,
     OWNED = 546,
     OWNER = 547,
     PARALLEL = 548,
     PARSER = 549,
     PARTIAL = 550,
     PARTITION = 551,
     PASSING = 552,
     PASSWORD = 553,
     PERCENT = 554,
     PLACING = 555,
     PLANS = 556,
     POLICY = 557,
     POSITION = 558,
     PRAGMA_P = 559,
     PRECEDING = 560,
     PRECISION = 561,
     PREPARE = 562,
     PREPARED = 563,
     PRESERVE = 564,
     PRIMARY = 565,
     PRIOR = 566,
     PRIVILEGES = 567,
     PROCEDURAL = 568,
     PROCEDURE = 569,
     PROGRAM = 570,
     PUBLICATION = 571,
     QUOTE = 572,
     RANGE = 573,
     READ_P = 574,
     REAL = 575,
     REASSIGN = 576,
     RECHECK = 577,
     RECURSIVE = 578,
     REF = 579,
     REFERENCES = 580,
     REFERENCING = 581,
     REFRESH = 582,
     REINDEX = 583,
     RELATIVE_P = 584,
     RELEASE = 585,
     RENAME = 586,
     REPEATABLE = 587,
     REPLACE = 588,
     REPLICA = 589,
     RESET = 590,
     RESTART = 591,
     RESTRICT = 592,
     RETURNING = 593,
     RETURNS = 594,
     REVOKE = 595,
     RIGHT = 596,
     ROLE = 597,
     ROLLBACK = 598,
     ROLLUP = 599,
     ROW = 600,
     ROWS = 601,
     RULE = 602,
     SAMPLE = 603,
     SAVEPOINT = 604,
     SCHEMA = 605,
     SCHEMAS = 606,
     SCROLL = 607,
     SEARCH = 608,
     SECOND_P = 609,
     SECONDS_P = 610,
     SECURITY = 611,
     SELECT = 612,
     SEQUENCE = 613,
     SEQUENCES = 614,
     SERIALIZABLE = 615,
     SERVER = 616,
     SESSION = 617,
     SESSION_USER = 618,
     SET = 619,
     SETOF = 620,
     SETS = 621,
     SHARE = 622,
     SHOW = 623,
     SIMILAR = 624,
     SIMPLE = 625,
     SKIP = 626,
     SMALLINT = 627,
     SNAPSHOT = 628,
     SOME = 629,
     SQL_P = 630,
     STABLE = 631,
     STANDALONE_P = 632,
     START = 633,
     STATEMENT = 634,
     STATISTICS = 635,
     STDIN = 636,
     STDOUT = 637,
     STORAGE = 638,
     STRICT_P = 639,
     STRIP_P = 640,
     SUBSCRIPTION = 641,
     SUBSTRING = 642,
     SYMMETRIC = 643,
     SYSID = 644,
     SYSTEM_P = 645,
     TABLE = 646,
     TABLES = 647,
     TABLESAMPLE = 648,
     TABLESPACE = 649,
     TEMP = 650,
     TEMPLATE = 651,
     TEMPORARY = 652,
     TEXT_P = 653,
     THEN = 654,
     TIME = 655,
     TIMESTAMP = 656,
     TO = 657,
     TRAILING = 658,
     TRANSACTION = 659,
     TRANSFORM = 660,
     TREAT = 661,
     TRIGGER = 662,
     TRIM = 663,
     TRUE_P = 664,
     TRUNCATE = 665,
     TRUSTED = 666,
     TYPE_P = 667,
     TYPES_P = 668,
     UNBOUNDED = 669,
     UNCOMMITTED = 670,
     UNENCRYPTED = 671,
     UNION = 672,
     UNIQUE = 673,
     UNKNOWN = 674,
     UNLISTEN = 675,
     UNLOGGED = 676,
     UNTIL = 677,
     UPDATE = 678,
     USER = 679,
     USING = 680,
     VACUUM = 681,
     VALID = 682,
     VALIDATE = 683,
     VALIDATOR = 684,
     VALUE_P = 685,
     VALUES = 686,
     VARCHAR = 687,
     VARIADIC = 688,
     VARYING = 689,
     VERBOSE = 690,
     VERSION_P = 691,
     VIEW = 692,
     VIEWS = 693,
     VOLATILE = 694,
     WHEN = 695,
     WHERE = 696,
     WHITESPACE_P = 697,
     WINDOW = 698,
     WITH = 699,
     WITHIN = 700,
     WITHOUT = 701,
     WORK = 702,
     WRAPPER = 703,
     WRITE_P = 704,
     XML_P = 705,
     XMLATTRIBUTES = 706,
     XMLCONCAT = 707,
     XMLELEMENT = 708,
     XMLEXISTS = 709,
     XMLFOREST = 710,
     XMLNAMESPACES = 711,
     XMLPARSE = 712,
     XMLPI = 713,
     XMLROOT = 714,
     XMLSERIALIZE = 715,
     XMLTABLE = 716,
     YEAR_P = 717,
     YEARS_P = 718,
     YES_P = 719,
     ZONE = 720,
     NOT_LA = 721,
     NULLS_LA = 722,
     WITH_LA = 723,
     POSTFIXOP = 724,
     UMINUS = 725
   };
#endif
/* Tokens.  */
#define IDENT 258
#define FCONST 259
#define SCONST 260
#define BCONST 261
#define XCONST 262
#define Op 263
#define ICONST 264
#define PARAM 265
#define TYPECAST 266
#define DOT_DOT 267
#define COLON_EQUALS 268
#define EQUALS_GREATER 269
#define LESS_EQUALS 270
#define GREATER_EQUALS 271
#define NOT_EQUALS 272
#define ABORT_P 273
#define ABSOLUTE_P 274
#define ACCESS 275
#define ACTION 276
#define ADD_P 277
#define ADMIN 278
#define AFTER 279
#define AGGREGATE 280
#define ALL 281
#define ALSO 282
#define ALTER 283
#define ALWAYS 284
#define ANALYSE 285
#define ANALYZE 286
#define AND 287
#define ANY 288
#define ARRAY 289
#define AS 290
#define ASC_P 291
#define ASSERTION 292
#define ASSIGNMENT 293
#define ASYMMETRIC 294
#define AT 295
#define ATTACH 296
#define ATTRIBUTE 297
#define AUTHORIZATION 298
#define BACKWARD 299
#define BEFORE 300
#define BEGIN_P 301
#define BETWEEN 302
#define BIGINT 303
#define BINARY 304
#define BIT 305
#define BOOLEAN_P 306
#define BOTH 307
#define BY 308
#define CACHE 309
#define CALL_P 310
#define CALLED 311
#define CASCADE 312
#define CASCADED 313
#define CASE 314
#define CAST 315
#define CATALOG_P 316
#define CHAIN 317
#define CHAR_P 318
#define CHARACTER 319
#define CHARACTERISTICS 320
#define CHECK_P 321
#define CHECKPOINT 322
#define CLASS 323
#define CLOSE 324
#define CLUSTER 325
#define COALESCE 326
#define COLLATE 327
#define COLLATION 328
#define COLUMN 329
#define COLUMNS 330
#define COMMENT 331
#define COMMENTS 332
#define COMMIT 333
#define COMMITTED 334
#define CONCURRENTLY 335
#define CONFIGURATION 336
#define CONFLICT 337
#define CONNECTION 338
#define CONSTRAINT 339
#define CONSTRAINTS 340
#define CONTENT_P 341
#define CONTINUE_P 342
#define CONVERSION_P 343
#define COPY 344
#define COST 345
#define CREATE_P 346
#define CROSS 347
#define CSV 348
#define CUBE 349
#define CURRENT_P 350
#define CURRENT_CATALOG 351
#define CURRENT_DATE 352
#define CURRENT_ROLE 353
#define CURRENT_SCHEMA 354
#define CURRENT_TIME 355
#define CURRENT_TIMESTAMP 356
#define CURRENT_USER 357
#define CURSOR 358
#define CYCLE 359
#define DATA_P 360
#define DATABASE 361
#define DAY_P 362
#define DAYS_P 363
#define DEALLOCATE 364
#define DEC 365
#define DECIMAL_P 366
#define DECLARE 367
#define DEFAULT 368
#define DEFAULTS 369
#define DEFERRABLE 370
#define DEFERRED 371
#define DEFINER 372
#define DELETE_P 373
#define DELIMITER 374
#define DELIMITERS 375
#define DEPENDS 376
#define DESC_P 377
#define DESCRIBE 378
#define DETACH 379
#define DICTIONARY 380
#define DISABLE_P 381
#define DISCARD 382
#define DISTINCT 383
#define DO 384
#define DOCUMENT_P 385
#define DOMAIN_P 386
#define DOUBLE_P 387
#define DROP 388
#define EACH 389
#define ELSE 390
#define ENABLE_P 391
#define ENCODING 392
#define ENCRYPTED 393
#define END_P 394
#define ENUM_P 395
#define ESCAPE 396
#define EVENT 397
#define EXCEPT 398
#define EXCLUDE 399
#define EXCLUDING 400
#define EXCLUSIVE 401
#define EXECUTE 402
#define EXISTS 403
#define EXPLAIN 404
#define EXPORT_P 405
#define EXTENSION 406
#define EXTERNAL 407
#define EXTRACT 408
#define FALSE_P 409
#define FAMILY 410
#define FETCH 411
#define FILTER 412
#define FIRST_P 413
#define FLOAT_P 414
#define FOLLOWING 415
#define FOR 416
#define FORCE 417
#define FOREIGN 418
#define FORWARD 419
#define FREEZE 420
#define FROM 421
#define FULL 422
#define FUNCTION 423
#define FUNCTIONS 424
#define GENERATED 425
#define GLOB 426
#define GLOBAL 427
#define GRANT 428
#define GRANTED 429
#define GROUP_P 430
#define GROUPING 431
#define HANDLER 432
#define HAVING 433
#define HEADER_P 434
#define HOLD 435
#define HOUR_P 436
#define HOURS_P 437
#define IDENTITY_P 438
#define IF_P 439
#define ILIKE 440
#define IMMEDIATE 441
#define IMMUTABLE 442
#define IMPLICIT_P 443
#define IMPORT_P 444
#define IN_P 445
#define INCLUDING 446
#define INCREMENT 447
#define INDEX 448
#define INDEXES 449
#define INHERIT 450
#define INHERITS 451
#define INITIALLY 452
#define INLINE_P 453
#define INNER_P 454
#define INOUT 455
#define INPUT_P 456
#define INSENSITIVE 457
#define INSERT 458
#define INSTEAD 459
#define INT_P 460
#define INTEGER 461
#define INTERSECT 462
#define INTERVAL 463
#define INTO 464
#define INVOKER 465
#define IS 466
#define ISNULL 467
#define ISOLATION 468
#define JOIN 469
#define KEY 470
#define LABEL 471
#define LANGUAGE 472
#define LARGE_P 473
#define LAST_P 474
#define LATERAL_P 475
#define LEADING 476
#define LEAKPROOF 477
#define LEFT 478
#define LEVEL 479
#define LIKE 480
#define LIMIT 481
#define LISTEN 482
#define LOAD 483
#define LOCAL 484
#define LOCALTIME 485
#define LOCALTIMESTAMP 486
#define LOCATION 487
#define LOCK_P 488
#define LOCKED 489
#define LOGGED 490
#define MACRO 491
#define MAPPING 492
#define MATCH 493
#define MATERIALIZED 494
#define MAXVALUE 495
#define METHOD 496
#define MICROSECOND_P 497
#define MICROSECONDS_P 498
#define MILLISECOND_P 499
#define MILLISECONDS_P 500
#define MINUTE_P 501
#define MINUTES_P 502
#define MINVALUE 503
#define MODE 504
#define MONTH_P 505
#define MONTHS_P 506
#define MOVE 507
#define NAME_P 508
#define NAMES 509
#define NATIONAL 510
#define NATURAL 511
#define NCHAR 512
#define NEW 513
#define NEXT 514
#define NO 515
#define NONE 516
#define NOT 517
#define NOTHING 518
#define NOTIFY 519
#define NOTNULL 520
#define NOWAIT 521
#define NULL_P 522
#define NULLIF 523
#define NULLS_P 524
#define NUMERIC 525
#define OBJECT_P 526
#define OF 527
#define OFF 528
#define OFFSET 529
#define OIDS 530
#define OLD 531
#define ON 532
#define ONLY 533
#define OPERATOR 534
#define OPTION 535
#define OPTIONS 536
#define OR 537
#define ORDER 538
#define ORDINALITY 539
#define OUT_P 540
#define OUTER_P 541
#define OVER 542
#define OVERLAPS 543
#define OVERLAY 544
#define OVERRIDING 545
#define OWNED 546
#define OWNER 547
#define PARALLEL 548
#define PARSER 549
#define PARTIAL 550
#define PARTITION 551
#define PASSING 552
#define PASSWORD 553
#define PERCENT 554
#define PLACING 555
#define PLANS 556
#define POLICY 557
#define POSITION 558
#define PRAGMA_P 559
#define PRECEDING 560
#define PRECISION 561
#define PREPARE 562
#define PREPARED 563
#define PRESERVE 564
#define PRIMARY 565
#define PRIOR 566
#define PRIVILEGES 567
#define PROCEDURAL 568
#define PROCEDURE 569
#define PROGRAM 570
#define PUBLICATION 571
#define QUOTE 572
#define RANGE 573
#define READ_P 574
#define REAL 575
#define REASSIGN 576
#define RECHECK 577
#define RECURSIVE 578
#define REF 579
#define REFERENCES 580
#define REFERENCING 581
#define REFRESH 582
#define REINDEX 583
#define RELATIVE_P 584
#define RELEASE 585
#define RENAME 586
#define REPEATABLE 587
#define REPLACE 588
#define REPLICA 589
#define RESET 590
#define RESTART 591
#define RESTRICT 592
#define RETURNING 593
#define RETURNS 594
#define REVOKE 595
#define RIGHT 596
#define ROLE 597
#define ROLLBACK 598
#define ROLLUP 599
#define ROW 600
#define ROWS 601
#define RULE 602
#define SAMPLE 603
#define SAVEPOINT 604
#define SCHEMA 605
#define SCHEMAS 606
#define SCROLL 607
#define SEARCH 608
#define SECOND_P 609
#define SECONDS_P 610
#define SECURITY 611
#define SELECT 612
#define SEQUENCE 613
#define SEQUENCES 614
#define SERIALIZABLE 615
#define SERVER 616
#define SESSION 617
#define SESSION_USER 618
#define SET 619
#define SETOF 620
#define SETS 621
#define SHARE 622
#define SHOW 623
#define SIMILAR 624
#define SIMPLE 625
#define SKIP 626
#define SMALLINT 627
#define SNAPSHOT 628
#define SOME 629
#define SQL_P 630
#define STABLE 631
#define STANDALONE_P 632
#define START 633
#define STATEMENT 634
#define STATISTICS 635
#define STDIN 636
#define STDOUT 637
#define STORAGE 638
#define STRICT_P 639
#define STRIP_P 640
#define SUBSCRIPTION 641
#define SUBSTRING 642
#define SYMMETRIC 643
#define SYSID 644
#define SYSTEM_P 645
#define TABLE 646
#define TABLES 647
#define TABLESAMPLE 648
#define TABLESPACE 649
#define TEMP 650
#define TEMPLATE 651
#define TEMPORARY 652
#define TEXT_P 653
#define THEN 654
#define TIME 655
#define TIMESTAMP 656
#define TO 657
#define TRAILING 658
#define TRANSACTION 659
#define TRANSFORM 660
#define TREAT 661
#define TRIGGER 662
#define TRIM 663
#define TRUE_P 664
#define TRUNCATE 665
#define TRUSTED 666
#define TYPE_P 667
#define TYPES_P 668
#define UNBOUNDED 669
#define UNCOMMITTED 670
#define UNENCRYPTED 671
#define UNION 672
#define UNIQUE 673
#define UNKNOWN 674
#define UNLISTEN 675
#define UNLOGGED 676
#define UNTIL 677
#define UPDATE 678
#define USER 679
#define USING 680
#define VACUUM 681
#define VALID 682
#define VALIDATE 683
#define VALIDATOR 684
#define VALUE_P 685
#define VALUES 686
#define VARCHAR 687
#define VARIADIC 688
#define VARYING 689
#define VERBOSE 690
#define VERSION_P 691
#define VIEW 692
#define VIEWS 693
#define VOLATILE 694
#define WHEN 695
#define WHERE 696
#define WHITESPACE_P 697
#define WINDOW 698
#define WITH 699
#define WITHIN 700
#define WITHOUT 701
#define WORK 702
#define WRAPPER 703
#define WRITE_P 704
#define XML_P 705
#define XMLATTRIBUTES 706
#define XMLCONCAT 707
#define XMLELEMENT 708
#define XMLEXISTS 709
#define XMLFOREST 710
#define XMLNAMESPACES 711
#define XMLPARSE 712
#define XMLPI 713
#define XMLROOT 714
#define XMLSERIALIZE 715
#define XMLTABLE 716
#define YEAR_P 717
#define YEARS_P 718
#define YES_P 719
#define ZONE 720
#define NOT_LA 721
#define NULLS_LA 722
#define WITH_LA 723
#define POSTFIXOP 724
#define UMINUS 725




/* Copy the first part of user declarations.  */
#line 1 "third_party/libpg_query/grammar/grammar.y.tmp"

#line 1 "third_party/libpg_query/grammar/grammar.hpp"
/*#define YYDEBUG 1*/
/*-------------------------------------------------------------------------
 *
 * gram.y
 *	  POSTGRESQL BISON rules/actions
 *
 * Portions Copyright (c) 1996-2017, PostgreSQL Global Development PGGroup
 * Portions Copyright (c) 1994, Regents of the University of California
 *
 *
 * IDENTIFICATION
 *	  src/backend/parser/gram.y
 *
 * HISTORY
 *	  AUTHOR			DATE			MAJOR EVENT
 *	  Andrew Yu			Sept, 1994		POSTQUEL to SQL conversion
 *	  Andrew Yu			Oct, 1994		lispy code conversion
 *
 * NOTES
 *	  CAPITALS are used to represent terminal symbols.
 *	  non-capitals are used to represent non-terminals.
 *
 *	  In general, nothing in this file should initiate database accesses
 *	  nor depend on changeable state (such as SET variables).  If you do
 *	  database accesses, your code will fail when we have aborted the
 *	  current transaction and are just parsing commands to find the next
 *	  ROLLBACK or COMMIT.  If you make use of SET variables, then you
 *	  will do the wrong thing in multi-query strings like this:
 *			SET constraint_exclusion TO off; SELECT * FROM foo;
 *	  because the entire string is parsed by gram.y before the SET gets
 *	  executed.  Anything that depends on the database or changeable state
 *	  should be handled during parse analysis so that it happens at the
 *	  right time not the wrong time.
 *
 * WARNINGS
 *	  If you use a list, make sure the datum is a node so that the printing
 *	  routines work.
 *
 *	  Sometimes we assign constants to makeStrings. Make sure we don't free
 *	  those.
 *
 *-------------------------------------------------------------------------
 */
#include "pg_functions.hpp"
#include <string.h>

#include <ctype.h>
#include <limits.h>

#include "nodes/makefuncs.hpp"
#include "nodes/nodeFuncs.hpp"
#include "parser/gramparse.hpp"
#include "parser/parser.hpp"
#include "utils/datetime.hpp"

namespace duckdb_libpgquery {
#define DEFAULT_SCHEMA "main"

/*
 * Location tracking support --- simpler than bison's default, since we only
 * want to track the start position not the end position of each nonterminal.
 */
#define YYLLOC_DEFAULT(Current, Rhs, N) \
	do { \
		if ((N) > 0) \
			(Current) = (Rhs)[1]; \
		else \
			(Current) = (-1); \
	} while (0)

/*
 * The above macro assigns -1 (unknown) as the parse location of any
 * nonterminal that was reduced from an empty rule, or whose leftmost
 * component was reduced from an empty rule.  This is problematic
 * for nonterminals defined like
 *		OptFooList: / * EMPTY * / { ... } | OptFooList Foo { ... } ;
 * because we'll set -1 as the location during the first reduction and then
 * copy it during each subsequent reduction, leaving us with -1 for the
 * location even when the list is not empty.  To fix that, do this in the
 * action for the nonempty rule(s):
 *		if (@$ < 0) @$ = @2;
 * (Although we have many nonterminals that follow this pattern, we only
 * bother with fixing @$ like this when the nonterminal's parse location
 * is actually referenced in some rule.)
 *
 * A cleaner answer would be to make YYLLOC_DEFAULT scan all the Rhs
 * locations until it's found one that's not -1.  Then we'd get a correct
 * location for any nonterminal that isn't entirely empty.  But this way
 * would add overhead to every rule reduction, and so far there's not been
 * a compelling reason to pay that overhead.
 */

/*
 * Bison doesn't allocate anything that needs to live across parser calls,
 * so we can easily have it use palloc instead of malloc.  This prevents
 * memory leaks if we error out during parsing.  Note this only works with
 * bison >= 2.0.  However, in bison 1.875 the default is to use alloca()
 * if possible, so there's not really much problem anyhow, at least if
 * you're building with gcc.
 */
#define YYMALLOC palloc
#define YYFREE   pfree
#define YYINITDEPTH 1000

/* yields an integer bitmask of these flags: */
#define CAS_NOT_DEFERRABLE			0x01
#define CAS_DEFERRABLE				0x02
#define CAS_INITIALLY_IMMEDIATE		0x04
#define CAS_INITIALLY_DEFERRED		0x08
#define CAS_NOT_VALID				0x10
#define CAS_NO_INHERIT				0x20


#define parser_yyerror(msg)  scanner_yyerror(msg, yyscanner)
#define parser_errposition(pos)  scanner_errposition(pos, yyscanner)

static void base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner,
						 const char *msg);
static PGRawStmt *makeRawStmt(PGNode *stmt, int stmt_location);
static void updateRawStmtEnd(PGRawStmt *rs, int end_location);
static PGNode *makeColumnRef(char *colname, PGList *indirection,
						   int location, core_yyscan_t yyscanner);
static PGNode *makeTypeCast(PGNode *arg, PGTypeName *tpname, int location);
static PGNode *makeStringConst(char *str, int location);
static PGNode *makeStringConstCast(char *str, int location, PGTypeName *tpname);
static PGNode *makeIntervalNode(char *str, int location, PGList *typmods);
static PGNode *makeIntervalNode(int val, int location, PGList *typmods);
static PGNode *makeIntervalNode(PGNode *arg, int location, PGList *typmods);
static PGNode *makeSampleSize(PGValue *sample_size, bool is_percentage);
static PGNode *makeSampleOptions(PGNode *sample_size, char *method, int seed, int location);
static PGNode *makeIntConst(int val, int location);
static PGNode *makeFloatConst(char *str, int location);
static PGNode *makeBitStringConst(char *str, int location);
static PGNode *makeNullAConst(int location);
static PGNode *makeAConst(PGValue *v, int location);
static PGNode *makeBoolAConst(bool state, int location);
static PGNode *makeParamRef(int number, int location);
static PGNode *makeParamRefCast(int number, int location, PGTypeName *tpname);
static void check_qualified_name(PGList *names, core_yyscan_t yyscanner);
static PGList *check_func_name(PGList *names, core_yyscan_t yyscanner);
static PGList *check_indirection(PGList *indirection, core_yyscan_t yyscanner);
static void insertSelectOptions(PGSelectStmt *stmt,
								PGList *sortClause, PGList *lockingClause,
								PGNode *limitOffset, PGNode *limitCount,
								PGWithClause *withClause,
								core_yyscan_t yyscanner);
static PGNode *makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg);
static PGNode *doNegate(PGNode *n, int location);
static void doNegateFloat(PGValue *v);
static PGNode *makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location);
static PGNode *makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location);
static PGNode *makeNotExpr(PGNode *expr, int location);
static PGNode *makeSQLValueFunction(PGSQLValueFunctionOp op, int32_t typmod,
								  int location);
static void SplitColQualList(PGList *qualList,
							 PGList **constraintList, PGCollateClause **collClause,
							 core_yyscan_t yyscanner);
static void processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner);
static PGNode *makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query);



/* Enabling traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* Enabling the token table.  */
#ifndef YYTOKEN_TABLE
# define YYTOKEN_TABLE 0
#endif

#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
typedef union YYSTYPE
#line 14 "third_party/libpg_query/grammar/grammar.y"
{
	core_YYSTYPE		core_yystype;
	/* these fields must match core_YYSTYPE: */
	int					ival;
	char				*str;
	const char			*keyword;
	const char          *conststr;

	char				chr;
	bool				boolean;
	PGJoinType			jtype;
	PGDropBehavior		dbehavior;
	PGOnCommitAction		oncommit;
	PGList				*list;
	PGNode				*node;
	PGValue				*value;
	PGObjectType			objtype;
	PGTypeName			*typnam;
	PGObjectWithArgs		*objwithargs;
	PGDefElem				*defelt;
	PGSortBy				*sortby;
	PGWindowDef			*windef;
	PGJoinExpr			*jexpr;
	PGIndexElem			*ielem;
	PGAlias				*alias;
	PGRangeVar			*range;
	PGIntoClause			*into;
	PGWithClause			*with;
	PGInferClause			*infer;
	PGOnConflictClause	*onconflict;
	PGAIndices			*aind;
	PGResTarget			*target;
	PGInsertStmt			*istmt;
	PGVariableSetStmt		*vsetstmt;
	PGOverridingKind       override;
	PGSortByDir            sortorder;
	PGSortByNulls          nullorder;
	PGLockClauseStrength lockstrength;
	PGLockWaitPolicy lockwaitpolicy;
	PGSubLinkType subquerytype;
	PGViewCheckOption viewcheckoption;
}
/* Line 193 of yacc.c.  */
#line 1253 "third_party/libpg_query/grammar/grammar_out.cpp"
	YYSTYPE;
# define yystype YYSTYPE /* obsolescent; will be withdrawn */
# define YYSTYPE_IS_DECLARED 1
# define YYSTYPE_IS_TRIVIAL 1
#endif

#if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
typedef struct YYLTYPE
{
  int first_line;
  int first_column;
  int last_line;
  int last_column;
} YYLTYPE;
# define yyltype YYLTYPE /* obsolescent; will be withdrawn */
# define YYLTYPE_IS_DECLARED 1
# define YYLTYPE_IS_TRIVIAL 1
#endif


/* Copy the second part of user declarations.  */


/* Line 216 of yacc.c.  */
#line 1278 "third_party/libpg_query/grammar/grammar_out.cpp"

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#elif (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
typedef signed char yytype_int8;
#else
typedef short int yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(msgid) dgettext ("bison-runtime", msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(msgid) msgid
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(e) ((void) (e))
#else
# define YYUSE(e) /* empty */
#endif

/* Identity function, used to suppress warnings about constant conditions.  */
#ifndef lint
# define YYID(n) (n)
#else
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static int
YYID (int i)
#else
static int
YYID (i)
    int i;
#endif
{
  return i;
}
#endif

#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#     ifndef _STDLIB_H
#      define _STDLIB_H 1
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's `empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (YYID (0))
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined _STDLIB_H \
       && ! ((defined YYMALLOC || defined malloc) \
	     && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef _STDLIB_H
#    define _STDLIB_H 1
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
	 || (defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL \
	     && defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss;
  YYSTYPE yyvs;
    YYLTYPE yyls;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
      + 2 * YYSTACK_GAP_MAXIMUM)

/* Copy COUNT objects from FROM to TO.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(To, From, Count) \
      __builtin_memcpy (To, From, (Count) * sizeof (*(From)))
#  else
#   define YYCOPY(To, From, Count)		\
      do					\
	{					\
	  YYSIZE_T yyi;				\
	  for (yyi = 0; yyi < (Count); yyi++)	\
	    (To)[yyi] = (From)[yyi];		\
	}					\
      while (YYID (0))
#  endif
# endif

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack)					\
    do									\
      {									\
	YYSIZE_T yynewbytes;						\
	YYCOPY (&yyptr->Stack, Stack, yysize);				\
	Stack = &yyptr->Stack;						\
	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
	yyptr += yynewbytes / sizeof (*yyptr);				\
      }									\
    while (YYID (0))

#endif

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  569
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   47657

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  489
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  360
/* YYNRULES -- Number of rules.  */
#define YYNRULES  1623
/* YYNRULES -- Number of states.  */
#define YYNSTATES  2684

/* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   725

#define YYTRANSLATE(YYX)						\
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[YYLEX] -- Bison symbol number corresponding to YYLEX.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,   477,     2,     2,
     482,   483,   475,   473,   486,   474,   484,   476,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   488,   485,
     469,   471,   470,   487,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,   480,     2,   481,   478,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   472,   479
};

#if YYDEBUG
/* YYPRHS[YYN] -- Index of the first RHS symbol of rule number YYN in
   YYRHS.  */
static const yytype_uint16 yyprhs[] =
{
       0,     0,     3,     5,     9,    11,    13,    15,    17,    19,
      21,    23,    25,    27,    29,    31,    33,    35,    37,    39,
      41,    43,    45,    47,    49,    51,    53,    55,    57,    59,
      61,    63,    65,    67,    69,    71,    73,    75,    77,    78,
      83,    90,    95,   102,   107,   114,   119,   126,   128,   131,
     135,   138,   140,   144,   147,   151,   153,   157,   160,   166,
     170,   177,   182,   189,   196,   203,   209,   215,   222,   232,
     237,   243,   251,   258,   263,   272,   277,   280,   285,   289,
     296,   301,   304,   307,   310,   313,   315,   318,   319,   321,
     324,   327,   330,   332,   336,   341,   344,   345,   348,   352,
     355,   359,   366,   373,   382,   389,   398,   405,   414,   421,
     430,   439,   450,   459,   470,   472,   473,   481,   483,   488,
     493,   501,   504,   506,   510,   515,   519,   520,   522,   523,
     526,   530,   536,   545,   551,   552,   558,   564,   572,   575,
     576,   578,   580,   582,   586,   589,   590,   592,   593,   595,
     599,   601,   605,   607,   611,   614,   617,   622,   628,   634,
     643,   645,   646,   650,   660,   673,   677,   678,   683,   690,
     692,   695,   697,   699,   700,   702,   705,   708,   710,   713,
     716,   718,   721,   725,   728,   731,   734,   737,   741,   745,
     749,   751,   755,   757,   758,   760,   763,   766,   769,   772,
     775,   778,   781,   784,   786,   788,   789,   799,   812,   813,
     816,   818,   820,   822,   824,   826,   828,   832,   833,   835,
     838,   840,   842,   845,   848,   852,   854,   856,   859,   862,
     864,   867,   871,   877,   880,   886,   892,   895,   899,   901,
     903,   906,   909,   910,   915,   916,   920,   925,   930,   931,
     935,   938,   939,   943,   945,   947,   949,   951,   953,   955,
     957,   959,   961,   963,   967,   971,   973,   976,   979,   982,
     985,   988,   991,   992,   996,  1000,  1004,  1005,  1007,  1010,
    1012,  1015,  1018,  1021,  1024,  1029,  1031,  1035,  1037,  1041,
    1043,  1045,  1047,  1049,  1053,  1055,  1058,  1059,  1061,  1062,
    1064,  1068,  1069,  1072,  1073,  1077,  1081,  1083,  1089,  1093,
    1095,  1099,  1101,  1106,  1112,  1118,  1125,  1129,  1137,  1142,
    1154,  1156,  1160,  1163,  1166,  1169,  1170,  1174,  1176,  1178,
    1181,  1184,  1187,  1190,  1192,  1193,  1195,  1198,  1205,  1210,
    1217,  1222,  1229,  1238,  1240,  1242,  1244,  1246,  1248,  1251,
    1253,  1256,  1258,  1260,  1262,  1266,  1270,  1274,  1278,  1281,
    1284,  1286,  1290,  1292,  1294,  1296,  1298,  1302,  1304,  1306,
    1307,  1309,  1311,  1313,  1320,  1322,  1324,  1327,  1331,  1340,
    1352,  1362,  1364,  1366,  1370,  1371,  1373,  1377,  1379,  1380,
    1382,  1383,  1385,  1386,  1388,  1392,  1394,  1396,  1398,  1402,
    1403,  1406,  1409,  1410,  1413,  1414,  1416,  1417,  1419,  1421,
    1423,  1427,  1431,  1433,  1435,  1439,  1443,  1447,  1451,  1456,
    1460,  1463,  1465,  1467,  1469,  1471,  1473,  1477,  1479,  1481,
    1485,  1489,  1491,  1494,  1499,  1504,  1507,  1511,  1517,  1523,
    1525,  1527,  1538,  1549,  1551,  1554,  1559,  1564,  1569,  1572,
    1575,  1579,  1581,  1585,  1592,  1595,  1596,  1600,  1604,  1609,
    1614,  1619,  1624,  1628,  1631,  1633,  1635,  1636,  1638,  1640,
    1641,  1643,  1649,  1651,  1652,  1654,  1655,  1659,  1661,  1665,
    1670,  1674,  1676,  1678,  1679,  1682,  1685,  1686,  1689,  1692,
    1694,  1696,  1698,  1699,  1702,  1707,  1713,  1718,  1721,  1725,
    1728,  1731,  1734,  1737,  1739,  1742,  1746,  1747,  1749,  1750,
    1756,  1758,  1763,  1770,  1773,  1775,  1776,  1781,  1782,  1784,
    1786,  1788,  1790,  1793,  1796,  1798,  1800,  1802,  1804,  1806,
    1808,  1812,  1813,  1815,  1819,  1821,  1823,  1826,  1829,  1830,
    1832,  1836,  1838,  1839,  1841,  1844,  1848,  1851,  1856,  1859,
    1863,  1866,  1867,  1869,  1872,  1873,  1878,  1884,  1887,  1888,
    1890,  1894,  1898,  1902,  1906,  1910,  1914,  1916,  1921,  1925,
    1930,  1936,  1941,  1947,  1952,  1958,  1961,  1966,  1968,  1970,
    1971,  1973,  1978,  1984,  1989,  1990,  1993,  1996,  1999,  2001,
    2003,  2004,  2009,  2012,  2014,  2017,  2020,  2025,  2028,  2035,
    2038,  2040,  2044,  2049,  2050,  2053,  2054,  2057,  2058,  2060,
    2064,  2068,  2071,  2072,  2075,  2080,  2082,  2085,  2089,  2095,
    2102,  2105,  2109,  2114,  2118,  2123,  2124,  2126,  2128,  2130,
    2132,  2134,  2137,  2142,  2144,  2146,  2148,  2150,  2153,  2157,
    2161,  2162,  2164,  2166,  2168,  2170,  2172,  2175,  2178,  2181,
    2184,  2187,  2189,  2193,  2194,  2196,  2198,  2200,  2202,  2208,
    2211,  2213,  2215,  2217,  2219,  2224,  2226,  2229,  2232,  2234,
    2238,  2242,  2245,  2247,  2248,  2254,  2257,  2263,  2266,  2268,
    2272,  2276,  2277,  2279,  2281,  2283,  2285,  2287,  2289,  2291,
    2293,  2295,  2297,  2299,  2301,  2303,  2305,  2307,  2309,  2311,
    2313,  2315,  2317,  2319,  2321,  2323,  2325,  2329,  2333,  2337,
    2341,  2345,  2349,  2353,  2354,  2356,  2360,  2364,  2370,  2373,
    2376,  2380,  2384,  2388,  2392,  2396,  2400,  2404,  2408,  2412,
    2416,  2420,  2424,  2428,  2431,  2434,  2438,  2442,  2445,  2448,
    2452,  2456,  2462,  2467,  2474,  2478,  2484,  2489,  2496,  2501,
    2508,  2514,  2522,  2526,  2529,  2534,  2538,  2541,  2545,  2547,
    2551,  2556,  2560,  2565,  2569,  2574,  2580,  2587,  2594,  2602,
    2609,  2617,  2624,  2632,  2636,  2641,  2646,  2653,  2655,  2657,
    2661,  2664,  2667,  2671,  2675,  2679,  2683,  2687,  2691,  2695,
    2699,  2703,  2707,  2711,  2715,  2719,  2722,  2725,  2731,  2738,
    2745,  2753,  2755,  2757,  2760,  2763,  2768,  2770,  2772,  2774,
    2777,  2780,  2784,  2790,  2797,  2806,  2813,  2820,  2825,  2830,
    2832,  2834,  2836,  2842,  2844,  2846,  2851,  2853,  2858,  2860,
    2865,  2867,  2872,  2874,  2876,  2878,  2880,  2882,  2884,  2891,
    2896,  2901,  2906,  2911,  2918,  2924,  2930,  2936,  2941,  2948,
    2953,  2959,  2960,  2966,  2967,  2970,  2971,  2973,  2977,  2981,
    2984,  2987,  2988,  2995,  2997,  2998,  3002,  3003,  3006,  3009,
    3010,  3012,  3017,  3020,  3023,  3026,  3029,  3032,  3037,  3041,
    3047,  3049,  3051,  3053,  3055,  3057,  3059,  3061,  3063,  3065,
    3067,  3069,  3071,  3073,  3075,  3077,  3079,  3081,  3083,  3088,
    3090,  3095,  3097,  3102,  3104,  3107,  3109,  3112,  3114,  3117,
    3119,  3123,  3125,  3129,  3131,  3135,  3137,  3141,  3145,  3147,
    3151,  3155,  3156,  3158,  3160,  3162,  3164,  3166,  3168,  3170,
    3172,  3174,  3176,  3181,  3185,  3188,  3192,  3193,  3197,  3201,
    3204,  3207,  3209,  3210,  3213,  3216,  3220,  3223,  3225,  3227,
    3231,  3237,  3239,  3242,  3247,  3250,  3251,  3253,  3254,  3256,
    3259,  3262,  3265,  3269,  3275,  3277,  3278,  3280,  3283,  3284,
    3287,  3289,  3290,  3292,  3293,  3295,  3299,  3303,  3306,  3308,
    3310,  3312,  3316,  3318,  3321,  3323,  3327,  3329,  3331,  3333,
    3336,  3338,  3340,  3342,  3344,  3346,  3349,  3356,  3359,  3365,
    3369,  3373,  3375,  3377,  3379,  3381,  3383,  3385,  3387,  3389,
    3391,  3393,  3395,  3397,  3399,  3401,  3404,  3407,  3411,  3415,
    3416,  3418,  3420,  3422,  3424,  3426,  3428,  3430,  3432,  3438,
    3442,  3443,  3445,  3447,  3449,  3451,  3456,  3464,  3467,  3468,
    3470,  3472,  3474,  3476,  3490,  3507,  3509,  3512,  3513,  3515,
    3516,  3518,  3519,  3522,  3523,  3525,  3526,  3533,  3542,  3549,
    3558,  3565,  3574,  3576,  3581,  3585,  3588,  3593,  3597,  3603,
    3605,  3606,  3608,  3610,  3611,  3613,  3615,  3617,  3619,  3621,
    3623,  3625,  3627,  3629,  3631,  3633,  3635,  3639,  3641,  3643,
    3645,  3647,  3649,  3651,  3654,  3656,  3658,  3661,  3665,  3669,
    3671,  3675,  3679,  3682,  3686,  3690,  3694,  3698,  3700,  3702,
    3704,  3706,  3710,  3716,  3718,  3720,  3722,  3724,  3728,  3731,
    3733,  3738,  3744,  3750,  3755,  3762,  3764,  3766,  3768,  3770,
    3772,  3774,  3775,  3777,  3781,  3783,  3784,  3792,  3794,  3797,
    3801,  3804,  3805,  3808,  3809,  3812,  3817,  3820,  3822,  3824,
    3826,  3829,  3833,  3836,  3839,  3843,  3848,  3851,  3853,  3855,
    3857,  3861,  3864,  3874,  3886,  3899,  3914,  3918,  3923,  3928,
    3929,  3937,  3948,  3951,  3955,  3956,  3961,  3963,  3965,  3967,
    3969,  3971,  3973,  3975,  3977,  3979,  3981,  3983,  3985,  3987,
    3989,  3991,  3993,  3995,  3997,  3999,  4001,  4003,  4005,  4007,
    4009,  4011,  4013,  4015,  4017,  4019,  4021,  4023,  4025,  4027,
    4029,  4031,  4033,  4035,  4037,  4039,  4041,  4043,  4045,  4047,
    4049,  4051,  4053,  4055,  4057,  4059,  4061,  4063,  4065,  4067,
    4069,  4071,  4073,  4075,  4077,  4079,  4081,  4083,  4085,  4087,
    4089,  4091,  4093,  4095,  4097,  4099,  4101,  4103,  4105,  4107,
    4109,  4111,  4113,  4115,  4117,  4119,  4121,  4123,  4125,  4127,
    4129,  4131,  4133,  4135,  4137,  4139,  4141,  4143,  4145,  4147,
    4149,  4151,  4153,  4155,  4157,  4159,  4161,  4163,  4165,  4167,
    4169,  4171,  4173,  4175,  4177,  4179,  4181,  4183,  4185,  4187,
    4189,  4191,  4193,  4195,  4197,  4199,  4201,  4203,  4205,  4207,
    4209,  4211,  4213,  4215,  4217,  4219,  4221,  4223,  4225,  4227,
    4229,  4231,  4233,  4235,  4237,  4239,  4241,  4243,  4245,  4247,
    4249,  4251,  4253,  4255,  4257,  4259,  4261,  4263,  4265,  4267,
    4269,  4271,  4273,  4275,  4277,  4279,  4281,  4283,  4285,  4287,
    4289,  4291,  4293,  4295,  4297,  4299,  4301,  4303,  4305,  4307,
    4309,  4311,  4313,  4315,  4317,  4319,  4321,  4323,  4325,  4327,
    4329,  4331,  4333,  4335,  4337,  4339,  4341,  4343,  4345,  4347,
    4349,  4351,  4353,  4355,  4357,  4359,  4361,  4363,  4365,  4367,
    4369,  4371,  4373,  4375,  4377,  4379,  4381,  4383,  4385,  4387,
    4389,  4391,  4393,  4395,  4397,  4399,  4401,  4403,  4405,  4407,
    4409,  4411,  4413,  4415,  4417,  4419,  4421,  4423,  4425,  4427,
    4429,  4431,  4433,  4435,  4437,  4439,  4441,  4443,  4445,  4447,
    4449,  4451,  4453,  4455,  4457,  4459,  4461,  4463,  4465,  4467,
    4469,  4471,  4473,  4475,  4477,  4479,  4481,  4483,  4485,  4487,
    4489,  4491,  4493,  4495,  4497,  4499,  4501,  4503,  4505,  4507,
    4509,  4511,  4513,  4515,  4517,  4519,  4521,  4523,  4525,  4527,
    4529,  4531,  4533,  4535,  4537,  4539,  4541,  4543,  4545,  4547,
    4549,  4551,  4553,  4555,  4557,  4559,  4561,  4563,  4565,  4567,
    4569,  4571,  4573,  4575,  4577,  4579,  4581,  4583,  4585,  4587,
    4589,  4591,  4593,  4595,  4597,  4599,  4601,  4603,  4605,  4607,
    4609,  4611,  4613,  4615,  4617,  4619,  4621,  4623,  4625,  4627,
    4629,  4631,  4633,  4635,  4637,  4639,  4641,  4643,  4645,  4647,
    4649,  4651,  4653,  4655,  4657,  4659,  4661,  4663,  4665,  4667,
    4669,  4671,  4673,  4675,  4677,  4679,  4681,  4683,  4685,  4687,
    4689,  4691,  4693,  4695,  4697,  4699,  4701,  4703,  4705,  4707,
    4709,  4711,  4713,  4715,  4717,  4719,  4721,  4723,  4725,  4727,
    4729,  4731,  4733,  4735,  4737,  4739,  4741,  4743,  4745,  4747,
    4749,  4751,  4753,  4755,  4757,  4759,  4761,  4763,  4765,  4767,
    4769,  4771,  4773,  4775,  4777,  4779,  4781,  4783,  4785,  4787,
    4789,  4791,  4793,  4795,  4797,  4799,  4801,  4803,  4805,  4807,
    4809,  4811,  4813,  4815,  4817,  4819,  4821,  4823,  4825,  4827,
    4829,  4831,  4833,  4835,  4837,  4839,  4841,  4843,  4845,  4847,
    4849,  4851,  4853,  4855
};

/* YYRHS -- A `-1'-separated list of the rules' RHS.  */
static const yytype_int16 yyrhs[] =
{
     490,     0,    -1,   491,    -1,   491,   485,   492,    -1,   492,
      -1,   800,    -1,   530,    -1,   493,    -1,   832,    -1,   839,
      -1,   801,    -1,   595,    -1,   842,    -1,   591,    -1,   790,
      -1,   526,    -1,   539,    -1,   504,    -1,   828,    -1,   585,
      -1,   528,    -1,   804,    -1,   802,    -1,   803,    -1,   793,
      -1,   507,    -1,   821,    -1,   525,    -1,   787,    -1,   505,
      -1,   612,    -1,   537,    -1,   594,    -1,   823,    -1,   833,
      -1,   815,    -1,   836,    -1,   840,    -1,    -1,    28,   391,
     672,   501,    -1,    28,   391,   184,   148,   672,   501,    -1,
      28,   193,   770,   501,    -1,    28,   193,   184,   148,   770,
     501,    -1,    28,   358,   770,   501,    -1,    28,   358,   184,
     148,   770,   501,    -1,    28,   437,   770,   501,    -1,    28,
     437,   184,   148,   770,   501,    -1,   496,    -1,   494,   496,
      -1,   364,   113,   714,    -1,   133,   113,    -1,   336,    -1,
     336,   532,   533,    -1,   364,   534,    -1,   364,   170,   584,
      -1,   500,    -1,   497,   486,   500,    -1,    22,   564,    -1,
      22,   184,   262,   148,   564,    -1,    22,    74,   564,    -1,
      22,    74,   184,   262,   148,   564,    -1,    28,   506,   778,
     495,    -1,    28,   506,   778,   133,   262,   267,    -1,    28,
     506,   778,   364,   262,   267,    -1,    28,   506,   778,   364,
     380,   536,    -1,    28,   506,   778,   364,   552,    -1,    28,
     506,   778,   335,   552,    -1,    28,   506,   778,   364,   383,
     778,    -1,    28,   506,   778,    22,   170,   584,    35,   183,
     542,    -1,    28,   506,   778,   494,    -1,    28,   506,   778,
     133,   183,    -1,    28,   506,   778,   133,   183,   184,   148,
      -1,   133,   506,   184,   148,   778,   589,    -1,   133,   506,
     778,   589,    -1,    28,   506,   778,   503,   412,   684,   681,
     499,    -1,    28,   506,   778,   502,    -1,    22,   554,    -1,
      28,    84,   772,   540,    -1,   428,    84,   772,    -1,   133,
      84,   184,   148,   772,   589,    -1,   133,    84,   772,   589,
      -1,   364,   235,    -1,   364,   421,    -1,   364,   552,    -1,
     335,   552,    -1,   502,    -1,   425,   714,    -1,    -1,   547,
      -1,   364,   547,    -1,    22,   547,    -1,   133,   562,    -1,
     498,    -1,   501,   486,   498,    -1,   281,   482,   497,   483,
      -1,   364,   105,    -1,    -1,   109,   772,    -1,   109,   307,
     772,    -1,   109,    26,    -1,   109,   307,    26,    -1,    28,
     350,   772,   331,   402,   772,    -1,    28,   391,   672,   331,
     402,   772,    -1,    28,   391,   184,   148,   672,   331,   402,
     772,    -1,    28,   358,   770,   331,   402,   772,    -1,    28,
     358,   184,   148,   770,   331,   402,   772,    -1,    28,   437,
     770,   331,   402,   772,    -1,    28,   437,   184,   148,   770,
     331,   402,   772,    -1,    28,   193,   770,   331,   402,   772,
      -1,    28,   193,   184,   148,   770,   331,   402,   772,    -1,
      28,   391,   672,   331,   506,   772,   402,   772,    -1,    28,
     391,   184,   148,   672,   331,   506,   772,   402,   772,    -1,
      28,   391,   672,   331,    84,   772,   402,   772,    -1,    28,
     391,   184,   148,   672,   331,    84,   772,   402,   772,    -1,
      74,    -1,    -1,   511,   203,   209,   509,   508,   514,   516,
      -1,   612,    -1,   290,   517,   430,   612,    -1,   482,   521,
     483,   612,    -1,   482,   521,   483,   290,   517,   430,   612,
      -1,   113,   431,    -1,   770,    -1,   770,    35,   778,    -1,
     482,   523,   483,   678,    -1,   277,    84,   772,    -1,    -1,
     617,    -1,    -1,   778,   764,    -1,   524,   471,   714,    -1,
     482,   518,   483,   471,   714,    -1,   277,    82,   510,   129,
     423,   364,   522,   678,    -1,   277,    82,   510,   129,   263,
      -1,    -1,   778,   519,   520,   630,   631,    -1,   719,   519,
     520,   630,   631,    -1,   482,   714,   483,   519,   520,   630,
     631,    -1,   338,   767,    -1,    -1,   424,    -1,   390,    -1,
     524,    -1,   518,   486,   524,    -1,    72,   781,    -1,    -1,
     781,    -1,    -1,   512,    -1,   521,   486,   512,    -1,   513,
      -1,   522,   486,   513,    -1,   515,    -1,   523,   486,   515,
      -1,   778,   764,    -1,   304,   778,    -1,   304,   778,   471,
     820,    -1,   304,   778,   482,   742,   483,    -1,    91,   583,
     358,   770,   527,    -1,    91,   583,   358,   184,   262,   148,
     770,   527,    -1,   531,    -1,    -1,   147,   772,   529,    -1,
      91,   583,   391,   844,    35,   147,   772,   529,   843,    -1,
      91,   583,   391,   184,   262,   148,   844,    35,   147,   772,
     529,   843,    -1,   482,   741,   483,    -1,    -1,    28,   358,
     770,   531,    -1,    28,   358,   184,   148,   770,   531,    -1,
     534,    -1,   531,   534,    -1,   444,    -1,   468,    -1,    -1,
       4,    -1,   473,     4,    -1,   474,     4,    -1,   536,    -1,
      35,   686,    -1,    54,   533,    -1,   104,    -1,   260,   104,
      -1,   192,   535,   533,    -1,   240,   533,    -1,   248,   533,
      -1,   260,   240,    -1,   260,   248,    -1,   291,    53,   781,
      -1,   358,   253,   781,    -1,   378,   532,   533,    -1,   336,
      -1,   336,   532,   533,    -1,    53,    -1,    -1,   776,    -1,
     473,   776,    -1,   474,   776,    -1,    18,   538,    -1,    46,
     538,    -1,   378,   538,    -1,    78,   538,    -1,   139,   538,
      -1,   343,   538,    -1,   447,    -1,   404,    -1,    -1,    91,
     583,   391,   770,   482,   571,   483,   559,   551,    -1,    91,
     583,   391,   184,   262,   148,   770,   482,   571,   483,   559,
     551,    -1,    -1,   540,   563,    -1,   578,    -1,   848,    -1,
     738,    -1,   533,    -1,   777,    -1,   261,    -1,   482,   531,
     483,    -1,    -1,   777,    -1,   260,    21,    -1,   337,    -1,
      57,    -1,   364,   267,    -1,   364,   113,    -1,    84,   772,
     546,    -1,   546,    -1,   558,    -1,    72,   781,    -1,   262,
     267,    -1,   267,    -1,   418,   570,    -1,   310,   215,   570,
      -1,    66,   482,   714,   483,   553,    -1,   113,   715,    -1,
     170,   584,    35,   183,   542,    -1,   325,   770,   573,   581,
     549,    -1,   562,   543,    -1,   277,   423,   544,    -1,   548,
      -1,   575,    -1,   548,   575,    -1,   575,   548,    -1,    -1,
     281,   482,   565,   483,    -1,    -1,   277,    78,   133,    -1,
     277,    78,   118,   346,    -1,   277,    78,   309,   346,    -1,
      -1,   482,   556,   483,    -1,   260,   195,    -1,    -1,    84,
     772,   579,    -1,   579,    -1,    77,    -1,    85,    -1,   114,
      -1,   183,    -1,   194,    -1,   380,    -1,   383,    -1,    26,
      -1,   576,    -1,   556,   486,   576,    -1,   425,   193,   567,
      -1,   115,    -1,   262,   115,    -1,   197,   116,    -1,   197,
     186,    -1,   444,   552,    -1,   444,   275,    -1,   446,   275,
      -1,    -1,   482,   566,   483,    -1,   561,   191,   555,    -1,
     561,   145,   555,    -1,    -1,   785,    -1,   262,   115,    -1,
     115,    -1,   197,   186,    -1,   197,   116,    -1,   262,   427,
      -1,   260,   195,    -1,   778,   684,   550,   574,    -1,   547,
      -1,   565,   486,   547,    -1,   569,    -1,   566,   486,   569,
      -1,   778,    -1,   564,    -1,   582,    -1,   554,    -1,   785,
     471,   541,    -1,   785,    -1,   444,   560,    -1,    -1,   580,
      -1,    -1,   778,    -1,   482,   577,   483,    -1,    -1,   574,
     545,    -1,    -1,   277,   118,   544,    -1,   785,   471,   541,
      -1,   785,    -1,   785,   484,   785,   471,   541,    -1,   785,
     484,   785,    -1,   572,    -1,   577,   486,   572,    -1,   684,
      -1,   780,   782,   477,   412,    -1,   365,   780,   782,   477,
     412,    -1,    66,   482,   714,   483,   540,    -1,   418,   482,
     577,   483,   570,   540,    -1,   418,   557,   540,    -1,   310,
     215,   482,   577,   483,   570,   540,    -1,   310,   215,   557,
     540,    -1,   163,   215,   482,   577,   483,   325,   770,   573,
     581,   549,   540,    -1,   568,    -1,   580,   486,   568,    -1,
     238,   167,    -1,   238,   295,    -1,   238,   370,    -1,    -1,
     225,   770,   561,    -1,   397,    -1,   395,    -1,   229,   397,
      -1,   229,   395,    -1,   172,   397,    -1,   172,   395,    -1,
     421,    -1,    -1,    29,    -1,    53,   113,    -1,   133,   586,
     184,   148,   588,   589,    -1,   133,   586,   588,   589,    -1,
     133,   587,   184,   148,   771,   589,    -1,   133,   587,   771,
     589,    -1,   133,   590,   772,   277,   781,   589,    -1,   133,
     590,   184,   148,   772,   277,   781,   589,    -1,   391,    -1,
     358,    -1,   168,    -1,   236,    -1,   437,    -1,   239,   437,
      -1,   193,    -1,   163,   391,    -1,    73,    -1,    88,    -1,
     380,    -1,   398,   353,   294,    -1,   398,   353,   125,    -1,
     398,   353,   396,    -1,   398,   353,    81,    -1,    20,   241,
      -1,   142,   407,    -1,   151,    -1,   163,   105,   448,    -1,
     316,    -1,   350,    -1,   361,    -1,   781,    -1,   588,   486,
     781,    -1,    57,    -1,   337,    -1,    -1,   302,    -1,   347,
      -1,   407,    -1,    91,   592,   770,   593,    35,   714,    -1,
     168,    -1,   236,    -1,   482,   483,    -1,   482,   742,   483,
      -1,   511,   423,   829,   364,   522,   662,   830,   516,    -1,
      89,   607,   770,   573,   605,   596,   601,   610,   597,   532,
     602,    -1,    89,   482,   789,   483,   402,   601,   610,   532,
     602,    -1,   166,    -1,   402,    -1,   599,   120,   777,    -1,
      -1,   609,    -1,   598,   486,   609,    -1,   425,    -1,    -1,
      35,    -1,    -1,   315,    -1,    -1,   606,    -1,   482,   611,
     483,    -1,   812,    -1,   533,    -1,   475,    -1,   482,   598,
     483,    -1,    -1,   785,   603,    -1,   444,   275,    -1,    -1,
     606,   608,    -1,    -1,    49,    -1,    -1,    49,    -1,   275,
      -1,   165,    -1,   119,   600,   777,    -1,   267,   600,   777,
      -1,    93,    -1,   179,    -1,   317,   600,   777,    -1,   141,
     600,   777,    -1,   162,   317,   577,    -1,   162,   317,   475,
      -1,   162,   262,   267,   577,    -1,   162,   267,   577,    -1,
     137,   777,    -1,   812,    -1,   777,    -1,   381,    -1,   382,
      -1,   604,    -1,   611,   486,   604,    -1,   614,    -1,   613,
      -1,   482,   614,   483,    -1,   482,   613,   483,    -1,   616,
      -1,   615,   627,    -1,   615,   626,   654,   633,    -1,   615,
     626,   632,   655,    -1,   617,   615,    -1,   617,   615,   627,
      -1,   617,   615,   626,   654,   633,    -1,   617,   615,   626,
     632,   655,    -1,   616,    -1,   613,    -1,   357,   625,   766,
     620,   662,   678,   649,   653,   723,   637,    -1,   357,   624,
     767,   620,   662,   678,   649,   653,   723,   637,    -1,   661,
      -1,   391,   672,    -1,   615,   417,   623,   615,    -1,   615,
     207,   623,   615,    -1,   615,   143,   623,   615,    -1,   444,
     618,    -1,   468,   618,    -1,   444,   323,   618,    -1,   619,
      -1,   618,   486,   619,    -1,   772,   783,    35,   482,   789,
     483,    -1,   209,   621,    -1,    -1,   397,   622,   770,    -1,
     395,   622,   770,    -1,   229,   397,   622,   770,    -1,   229,
     395,   622,   770,    -1,   172,   397,   622,   770,    -1,   172,
     395,   622,   770,    -1,   421,   622,   770,    -1,   391,   770,
      -1,   770,    -1,   391,    -1,    -1,    26,    -1,   128,    -1,
      -1,   128,    -1,   128,   277,   482,   741,   483,    -1,    26,
      -1,    -1,   627,    -1,    -1,   283,    53,   628,    -1,   629,
      -1,   628,   486,   629,    -1,   714,   425,   738,   631,    -1,
     714,   630,   631,    -1,    36,    -1,   122,    -1,    -1,   467,
     158,    -1,   467,   219,    -1,    -1,   634,   635,    -1,   635,
     634,    -1,   634,    -1,   635,    -1,   632,    -1,    -1,   226,
     643,    -1,   226,   643,   486,   644,    -1,   156,   648,   645,
     647,   278,    -1,   156,   648,   647,   278,    -1,   274,   644,
      -1,   274,   645,   647,    -1,     4,   477,    -1,     9,   477,
      -1,     4,   299,    -1,     9,   299,    -1,     9,    -1,     9,
     346,    -1,   425,   348,   639,    -1,    -1,   778,    -1,    -1,
     638,   482,   636,   483,   642,    -1,   636,    -1,   636,   482,
     778,   483,    -1,   636,   482,   778,   486,     9,   483,    -1,
     393,   639,    -1,   640,    -1,    -1,   332,   482,     9,   483,
      -1,    -1,   714,    -1,    26,    -1,   714,    -1,   716,    -1,
     473,   646,    -1,   474,   646,    -1,   776,    -1,     4,    -1,
     345,    -1,   346,    -1,   158,    -1,   259,    -1,   175,    53,
     650,    -1,    -1,   651,    -1,   650,   486,   651,    -1,   714,
      -1,   652,    -1,   482,   483,    -1,   178,   714,    -1,    -1,
     656,    -1,   161,   319,   278,    -1,   654,    -1,    -1,   657,
      -1,   656,   657,    -1,   658,   659,   660,    -1,   161,   423,
      -1,   161,   260,   215,   423,    -1,   161,   367,    -1,   161,
     215,   367,    -1,   272,   769,    -1,    -1,   266,    -1,   371,
     234,    -1,    -1,   431,   482,   741,   483,    -1,   661,   486,
     482,   741,   483,    -1,   166,   663,    -1,    -1,   664,    -1,
     663,   486,   664,    -1,   672,   667,   641,    -1,   673,   668,
     641,    -1,   220,   673,   668,    -1,   613,   667,   641,    -1,
     220,   613,   667,    -1,   665,    -1,   482,   665,   483,   666,
      -1,   482,   665,   483,    -1,   664,    92,   214,   664,    -1,
     664,   669,   214,   664,   671,    -1,   664,   214,   664,   671,
      -1,   664,   256,   669,   214,   664,    -1,   664,   256,   214,
     664,    -1,    35,   778,   482,   771,   483,    -1,    35,   779,
      -1,   778,   482,   771,   483,    -1,   778,    -1,   666,    -1,
      -1,   666,    -1,    35,   482,   679,   483,    -1,    35,   778,
     482,   679,   483,    -1,   778,   482,   679,   483,    -1,    -1,
     167,   670,    -1,   223,   670,    -1,   341,   670,    -1,   199,
      -1,   286,    -1,    -1,   425,   482,   771,   483,    -1,   277,
     714,    -1,   770,    -1,   770,   475,    -1,   278,   770,    -1,
     278,   482,   770,   483,    -1,   719,   677,    -1,   346,   166,
     482,   675,   483,   677,    -1,   719,   676,    -1,   674,    -1,
     675,   486,   674,    -1,    35,   482,   679,   483,    -1,    -1,
     468,   284,    -1,    -1,   441,   714,    -1,    -1,   680,    -1,
     679,   486,   680,    -1,   778,   684,   681,    -1,    72,   781,
      -1,    -1,   778,   684,    -1,   682,   486,   778,   684,    -1,
     345,    -1,   686,   685,    -1,   365,   686,   685,    -1,   686,
      34,   480,   776,   481,    -1,   365,   686,    34,   480,   776,
     481,    -1,   686,    34,    -1,   365,   686,    34,    -1,   683,
     482,   682,   483,    -1,   685,   480,   481,    -1,   685,   480,
     776,   481,    -1,    -1,   688,    -1,   690,    -1,   692,    -1,
     696,    -1,   702,    -1,   703,   713,    -1,   703,   482,   776,
     483,    -1,   690,    -1,   693,    -1,   697,    -1,   702,    -1,
     780,   689,    -1,   780,   782,   689,    -1,   482,   741,   483,
      -1,    -1,   205,    -1,   206,    -1,   372,    -1,    48,    -1,
     320,    -1,   159,   691,    -1,   132,   306,    -1,   111,   689,
      -1,   110,   689,    -1,   270,   689,    -1,    51,    -1,   482,
     776,   483,    -1,    -1,   694,    -1,   695,    -1,   694,    -1,
     695,    -1,    50,   701,   482,   741,   483,    -1,    50,   701,
      -1,   698,    -1,   699,    -1,   698,    -1,   699,    -1,   700,
     482,   776,   483,    -1,   700,    -1,    64,   701,    -1,    63,
     701,    -1,   432,    -1,   255,    64,   701,    -1,   255,    63,
     701,    -1,   257,   701,    -1,   434,    -1,    -1,   401,   482,
     776,   483,   704,    -1,   401,   704,    -1,   400,   482,   776,
     483,   704,    -1,   400,   704,    -1,   208,    -1,   468,   400,
     465,    -1,   446,   400,   465,    -1,    -1,   462,    -1,   463,
      -1,   250,    -1,   251,    -1,   107,    -1,   108,    -1,   181,
      -1,   182,    -1,   246,    -1,   247,    -1,   354,    -1,   355,
      -1,   244,    -1,   245,    -1,   242,    -1,   243,    -1,   705,
      -1,   706,    -1,   707,    -1,   708,    -1,   709,    -1,   710,
      -1,   711,    -1,   712,    -1,   705,   402,   706,    -1,   707,
     402,   708,    -1,   707,   402,   709,    -1,   707,   402,   710,
      -1,   708,   402,   709,    -1,   708,   402,   710,    -1,   709,
     402,   710,    -1,    -1,   716,    -1,   714,    11,   684,    -1,
     714,    72,   781,    -1,   714,    40,   400,   465,   714,    -1,
     473,   714,    -1,   474,   714,    -1,   714,   473,   714,    -1,
     714,   474,   714,    -1,   714,   475,   714,    -1,   714,   476,
     714,    -1,   714,   477,   714,    -1,   714,   478,   714,    -1,
     714,   469,   714,    -1,   714,   470,   714,    -1,   714,   471,
     714,    -1,   714,    15,   714,    -1,   714,    16,   714,    -1,
     714,    17,   714,    -1,   714,   737,   714,    -1,   737,   714,
      -1,   714,   737,    -1,   714,    32,   714,    -1,   714,   282,
     714,    -1,   262,   714,    -1,   466,   714,    -1,   714,   171,
     714,    -1,   714,   225,   714,    -1,   714,   225,   714,   141,
     714,    -1,   714,   466,   225,   714,    -1,   714,   466,   225,
     714,   141,   714,    -1,   714,   185,   714,    -1,   714,   185,
     714,   141,   714,    -1,   714,   466,   185,   714,    -1,   714,
     466,   185,   714,   141,   714,    -1,   714,   369,   402,   714,
      -1,   714,   369,   402,   714,   141,   714,    -1,   714,   466,
     369,   402,   714,    -1,   714,   466,   369,   402,   714,   141,
     714,    -1,   714,   211,   267,    -1,   714,   212,    -1,   714,
     211,   262,   267,    -1,   714,   262,   267,    -1,   714,   265,
      -1,   733,   288,   733,    -1,   733,    -1,   714,   211,   409,
      -1,   714,   211,   262,   409,    -1,   714,   211,   154,    -1,
     714,   211,   262,   154,    -1,   714,   211,   419,    -1,   714,
     211,   262,   419,    -1,   714,   211,   128,   166,   714,    -1,
     714,   211,   262,   128,   166,   714,    -1,   714,   211,   272,
     482,   744,   483,    -1,   714,   211,   262,   272,   482,   744,
     483,    -1,   714,    47,   765,   715,    32,   714,    -1,   714,
     466,    47,   765,   715,    32,   714,    -1,   714,    47,   388,
     715,    32,   714,    -1,   714,   466,    47,   388,   715,    32,
     714,    -1,   714,   190,   754,    -1,   714,   466,   190,   754,
      -1,   714,   739,   734,   613,    -1,   714,   739,   734,   482,
     714,   483,    -1,   113,    -1,   716,    -1,   715,    11,   684,
      -1,   473,   715,    -1,   474,   715,    -1,   715,   473,   715,
      -1,   715,   474,   715,    -1,   715,   475,   715,    -1,   715,
     476,   715,    -1,   715,   477,   715,    -1,   715,   478,   715,
      -1,   715,   469,   715,    -1,   715,   470,   715,    -1,   715,
     471,   715,    -1,   715,    15,   715,    -1,   715,    16,   715,
      -1,   715,    17,   715,    -1,   715,   737,   715,    -1,   737,
     715,    -1,   715,   737,    -1,   715,   211,   128,   166,   715,
      -1,   715,   211,   262,   128,   166,   715,    -1,   715,   211,
     272,   482,   744,   483,    -1,   715,   211,   262,   272,   482,
     744,   483,    -1,   760,    -1,   775,    -1,   487,   764,    -1,
      10,   764,    -1,   482,   714,   483,   764,    -1,   755,    -1,
     718,    -1,   613,    -1,   613,   763,    -1,   148,   613,    -1,
     774,   482,   483,    -1,   774,   482,   742,   626,   483,    -1,
     774,   482,   433,   743,   626,   483,    -1,   774,   482,   742,
     486,   433,   743,   626,   483,    -1,   774,   482,    26,   742,
     626,   483,    -1,   774,   482,   128,   742,   626,   483,    -1,
     774,   482,   475,   483,    -1,   717,   721,   722,   726,    -1,
     720,    -1,   717,    -1,   720,    -1,    73,   161,   482,   714,
     483,    -1,    97,    -1,   100,    -1,   100,   482,   776,   483,
      -1,   101,    -1,   101,   482,   776,   483,    -1,   230,    -1,
     230,   482,   776,   483,    -1,   231,    -1,   231,   482,   776,
     483,    -1,    98,    -1,   102,    -1,   363,    -1,   424,    -1,
      96,    -1,    99,    -1,    60,   482,   714,    35,   684,   483,
      -1,   153,   482,   745,   483,    -1,   289,   482,   747,   483,
      -1,   303,   482,   749,   483,    -1,   387,   482,   750,   483,
      -1,   406,   482,   714,    35,   684,   483,    -1,   408,   482,
      52,   753,   483,    -1,   408,   482,   221,   753,   483,    -1,
     408,   482,   403,   753,   483,    -1,   408,   482,   753,   483,
      -1,   268,   482,   714,   486,   714,   483,    -1,    71,   482,
     741,   483,    -1,   445,   175,   482,   627,   483,    -1,    -1,
     157,   482,   441,   714,   483,    -1,    -1,   443,   724,    -1,
      -1,   725,    -1,   724,   486,   725,    -1,   778,    35,   727,
      -1,   287,   727,    -1,   287,   778,    -1,    -1,   482,   728,
     729,   626,   730,   483,    -1,   778,    -1,    -1,   296,    53,
     741,    -1,    -1,   318,   731,    -1,   346,   731,    -1,    -1,
     732,    -1,    47,   732,    32,   732,    -1,   414,   305,    -1,
     414,   160,    -1,    95,   345,    -1,   714,   305,    -1,   714,
     160,    -1,   345,   482,   741,   483,    -1,   345,   482,   483,
      -1,   482,   741,   486,   714,   483,    -1,    33,    -1,   374,
      -1,    26,    -1,     8,    -1,   736,    -1,   473,    -1,   474,
      -1,   475,    -1,   476,    -1,   477,    -1,   478,    -1,   469,
      -1,   470,    -1,   471,    -1,    15,    -1,    16,    -1,    17,
      -1,     8,    -1,   279,   482,   740,   483,    -1,   735,    -1,
     279,   482,   740,   483,    -1,   735,    -1,   279,   482,   740,
     483,    -1,   225,    -1,   466,   225,    -1,   171,    -1,   466,
     171,    -1,   185,    -1,   466,   185,    -1,   735,    -1,   778,
     484,   740,    -1,   714,    -1,   741,   486,   714,    -1,   743,
      -1,   742,   486,   743,    -1,   714,    -1,   784,    13,   714,
      -1,   784,    14,   714,    -1,   684,    -1,   744,   486,   684,
      -1,   746,   166,   714,    -1,    -1,     3,    -1,   705,    -1,
     706,    -1,   707,    -1,   708,    -1,   709,    -1,   710,    -1,
     711,    -1,   712,    -1,   777,    -1,   714,   748,   751,   752,
      -1,   714,   748,   751,    -1,   300,   714,    -1,   715,   190,
     715,    -1,    -1,   714,   751,   752,    -1,   714,   752,   751,
      -1,   714,   751,    -1,   714,   752,    -1,   741,    -1,    -1,
     166,   714,    -1,   161,   714,    -1,   714,   166,   741,    -1,
     166,   741,    -1,   741,    -1,   613,    -1,   482,   741,   483,
      -1,    59,   759,   756,   758,   139,    -1,   757,    -1,   756,
     757,    -1,   440,   714,   399,   714,    -1,   135,   714,    -1,
      -1,   714,    -1,    -1,   778,    -1,   778,   763,    -1,   484,
     773,    -1,   484,   475,    -1,   480,   714,   481,    -1,   480,
     762,   488,   762,   481,    -1,   714,    -1,    -1,   761,    -1,
     763,   761,    -1,    -1,   764,   761,    -1,    39,    -1,    -1,
     767,    -1,    -1,   768,    -1,   767,   486,   768,    -1,   714,
      35,   786,    -1,   714,     3,    -1,   714,    -1,   475,    -1,
     770,    -1,   769,   486,   770,    -1,   778,    -1,   778,   763,
      -1,   772,    -1,   771,   486,   772,    -1,   778,    -1,   785,
      -1,   780,    -1,   778,   763,    -1,   776,    -1,     4,    -1,
     777,    -1,     6,    -1,     7,    -1,   774,   777,    -1,   774,
     482,   742,   626,   483,   777,    -1,   687,   777,    -1,   703,
     482,   714,   483,   713,    -1,   703,   776,   713,    -1,   703,
     777,   713,    -1,   409,    -1,   154,    -1,   267,    -1,     9,
      -1,     5,    -1,     3,    -1,   845,    -1,   846,    -1,   778,
      -1,     5,    -1,     3,    -1,   845,    -1,   847,    -1,   778,
      -1,   778,   782,    -1,   484,   773,    -1,   782,   484,   773,
      -1,   482,   771,   483,    -1,    -1,   780,    -1,     3,    -1,
     845,    -1,   846,    -1,   847,    -1,   848,    -1,   785,    -1,
       5,    -1,   307,   772,   788,    35,   789,    -1,   482,   744,
     483,    -1,    -1,   612,    -1,   507,    -1,   594,    -1,   828,
      -1,    91,   350,   778,   791,    -1,    91,   350,   184,   262,
     148,   778,   791,    -1,   791,   792,    -1,    -1,   539,    -1,
     793,    -1,   526,    -1,   840,    -1,    91,   799,   193,   796,
     797,   277,   770,   795,   482,   523,   483,   798,   678,    -1,
      91,   799,   193,   796,   184,   262,   148,   567,   277,   770,
     795,   482,   523,   483,   798,   678,    -1,   778,    -1,   425,
     794,    -1,    -1,    80,    -1,    -1,   567,    -1,    -1,   444,
     552,    -1,    -1,   418,    -1,    -1,    28,   391,   672,   364,
     350,   772,    -1,    28,   391,   184,   148,   672,   364,   350,
     772,    -1,    28,   358,   770,   364,   350,   772,    -1,    28,
     358,   184,   148,   770,   364,   350,   772,    -1,    28,   437,
     770,   364,   350,   772,    -1,    28,   437,   184,   148,   770,
     364,   350,   772,    -1,    67,    -1,   150,   106,   777,   602,
      -1,   189,   106,   777,    -1,   149,   807,    -1,   149,   811,
     805,   807,    -1,   149,   435,   807,    -1,   149,   482,   810,
     483,   807,    -1,   435,    -1,    -1,   812,    -1,   533,    -1,
      -1,   612,    -1,   507,    -1,   594,    -1,   828,    -1,   842,
      -1,     3,    -1,   845,    -1,   846,    -1,   847,    -1,   808,
      -1,   777,    -1,   813,    -1,   810,   486,   813,    -1,    31,
      -1,    30,    -1,   409,    -1,   154,    -1,   277,    -1,   809,
      -1,   814,   806,    -1,   808,    -1,   811,    -1,   364,   816,
      -1,   364,   229,   816,    -1,   364,   362,   816,    -1,   817,
      -1,   838,   166,    95,    -1,   400,   465,   819,    -1,   350,
     777,    -1,   838,   402,   820,    -1,   838,   471,   820,    -1,
     838,   402,   113,    -1,   838,   471,   113,    -1,   812,    -1,
     533,    -1,   777,    -1,     3,    -1,   703,   777,   713,    -1,
     703,   482,   776,   483,   777,    -1,   533,    -1,   113,    -1,
     229,    -1,   818,    -1,   820,   486,   818,    -1,   228,   822,
      -1,   777,    -1,   426,   825,   827,   805,    -1,   426,   825,
     827,   805,   770,    -1,   426,   825,   827,   805,   832,    -1,
     426,   482,   826,   483,    -1,   426,   482,   826,   483,   770,
     783,    -1,   811,    -1,   435,    -1,   165,    -1,   167,    -1,
       3,    -1,   167,    -1,    -1,   824,    -1,   826,   486,   824,
      -1,   165,    -1,    -1,   511,   118,   166,   829,   831,   830,
     516,    -1,   672,    -1,   672,   778,    -1,   672,    35,   778,
      -1,   441,   714,    -1,    -1,   425,   663,    -1,    -1,   811,
     805,    -1,   811,   805,   770,   783,    -1,   335,   835,    -1,
     838,    -1,    26,    -1,   834,    -1,   400,   465,    -1,   404,
     213,   224,    -1,   837,   612,    -1,   837,   838,    -1,   837,
     400,   465,    -1,   837,   404,   213,   224,    -1,   837,    26,
      -1,   368,    -1,   123,    -1,   778,    -1,   838,   484,   778,
      -1,    55,   717,    -1,    91,   583,   437,   770,   573,   798,
      35,   612,   841,    -1,    91,   282,   333,   583,   437,   770,
     573,   798,    35,   612,   841,    -1,    91,   583,   323,   437,
     770,   482,   577,   483,   798,    35,   612,   841,    -1,    91,
     282,   333,   583,   323,   437,   770,   482,   577,   483,   798,
      35,   612,   841,    -1,   444,    66,   280,    -1,   444,    58,
      66,   280,    -1,   444,   229,    66,   280,    -1,    -1,    91,
     583,   391,   844,    35,   612,   843,    -1,    91,   583,   391,
     184,   262,   148,   844,    35,   612,   843,    -1,   444,   105,
      -1,   444,   260,   105,    -1,    -1,   770,   573,   559,   551,
      -1,    18,    -1,    19,    -1,    20,    -1,    21,    -1,    22,
      -1,    23,    -1,    24,    -1,    25,    -1,    27,    -1,    28,
      -1,    29,    -1,    37,    -1,    38,    -1,    40,    -1,    41,
      -1,    42,    -1,    44,    -1,    45,    -1,    46,    -1,    53,
      -1,    54,    -1,    55,    -1,    56,    -1,    57,    -1,    58,
      -1,    61,    -1,    62,    -1,    65,    -1,    67,    -1,    68,
      -1,    69,    -1,    70,    -1,    75,    -1,    76,    -1,    77,
      -1,    78,    -1,    79,    -1,    81,    -1,    82,    -1,    83,
      -1,    85,    -1,    86,    -1,    87,    -1,    88,    -1,    89,
      -1,    90,    -1,    93,    -1,    94,    -1,    95,    -1,   103,
      -1,   104,    -1,   105,    -1,   106,    -1,   107,    -1,   108,
      -1,   109,    -1,   112,    -1,   114,    -1,   116,    -1,   117,
      -1,   118,    -1,   119,    -1,   120,    -1,   121,    -1,   123,
      -1,   124,    -1,   125,    -1,   126,    -1,   127,    -1,   130,
      -1,   131,    -1,   132,    -1,   133,    -1,   134,    -1,   136,
      -1,   137,    -1,   138,    -1,   140,    -1,   141,    -1,   142,
      -1,   144,    -1,   145,    -1,   146,    -1,   147,    -1,   149,
      -1,   150,    -1,   151,    -1,   152,    -1,   155,    -1,   157,
      -1,   158,    -1,   160,    -1,   162,    -1,   164,    -1,   168,
      -1,   169,    -1,   170,    -1,   172,    -1,   174,    -1,   177,
      -1,   179,    -1,   180,    -1,   181,    -1,   182,    -1,   183,
      -1,   184,    -1,   186,    -1,   187,    -1,   188,    -1,   189,
      -1,   191,    -1,   192,    -1,   193,    -1,   194,    -1,   195,
      -1,   196,    -1,   198,    -1,   201,    -1,   202,    -1,   203,
      -1,   204,    -1,   210,    -1,   213,    -1,   215,    -1,   216,
      -1,   217,    -1,   218,    -1,   219,    -1,   222,    -1,   224,
      -1,   227,    -1,   228,    -1,   229,    -1,   232,    -1,   233,
      -1,   234,    -1,   235,    -1,   236,    -1,   237,    -1,   238,
      -1,   239,    -1,   240,    -1,   241,    -1,   242,    -1,   243,
      -1,   244,    -1,   245,    -1,   246,    -1,   247,    -1,   248,
      -1,   249,    -1,   250,    -1,   251,    -1,   252,    -1,   253,
      -1,   254,    -1,   258,    -1,   259,    -1,   260,    -1,   263,
      -1,   264,    -1,   266,    -1,   269,    -1,   271,    -1,   272,
      -1,   273,    -1,   275,    -1,   276,    -1,   279,    -1,   280,
      -1,   281,    -1,   284,    -1,   287,    -1,   290,    -1,   291,
      -1,   292,    -1,   293,    -1,   294,    -1,   295,    -1,   296,
      -1,   297,    -1,   298,    -1,   299,    -1,   301,    -1,   302,
      -1,   304,    -1,   305,    -1,   307,    -1,   308,    -1,   309,
      -1,   311,    -1,   312,    -1,   313,    -1,   314,    -1,   315,
      -1,   316,    -1,   317,    -1,   318,    -1,   319,    -1,   321,
      -1,   322,    -1,   323,    -1,   324,    -1,   326,    -1,   327,
      -1,   328,    -1,   329,    -1,   330,    -1,   331,    -1,   332,
      -1,   333,    -1,   334,    -1,   335,    -1,   336,    -1,   337,
      -1,   339,    -1,   340,    -1,   342,    -1,   343,    -1,   344,
      -1,   346,    -1,   347,    -1,   348,    -1,   349,    -1,   350,
      -1,   351,    -1,   352,    -1,   353,    -1,   354,    -1,   355,
      -1,   356,    -1,   358,    -1,   359,    -1,   360,    -1,   361,
      -1,   362,    -1,   364,    -1,   366,    -1,   367,    -1,   368,
      -1,   370,    -1,   371,    -1,   373,    -1,   375,    -1,   376,
      -1,   377,    -1,   378,    -1,   379,    -1,   380,    -1,   381,
      -1,   382,    -1,   383,    -1,   384,    -1,   385,    -1,   386,
      -1,   389,    -1,   390,    -1,   392,    -1,   394,    -1,   395,
      -1,   396,    -1,   397,    -1,   398,    -1,   404,    -1,   405,
      -1,   407,    -1,   410,    -1,   411,    -1,   412,    -1,   413,
      -1,   414,    -1,   415,    -1,   416,    -1,   419,    -1,   420,
      -1,   421,    -1,   422,    -1,   423,    -1,   426,    -1,   427,
      -1,   428,    -1,   429,    -1,   430,    -1,   434,    -1,   436,
      -1,   437,    -1,   438,    -1,   439,    -1,   442,    -1,   445,
      -1,   446,    -1,   447,    -1,   448,    -1,   449,    -1,   450,
      -1,   462,    -1,   463,    -1,   464,    -1,   465,    -1,    47,
      -1,    48,    -1,    50,    -1,    51,    -1,    63,    -1,    64,
      -1,    71,    -1,   110,    -1,   111,    -1,   148,    -1,   153,
      -1,   159,    -1,   176,    -1,   200,    -1,   205,    -1,   206,
      -1,   208,    -1,   255,    -1,   257,    -1,   261,    -1,   268,
      -1,   270,    -1,   285,    -1,   289,    -1,   303,    -1,   306,
      -1,   320,    -1,   345,    -1,   365,    -1,   372,    -1,   387,
      -1,   400,    -1,   401,    -1,   406,    -1,   408,    -1,   431,
      -1,   432,    -1,   451,    -1,   452,    -1,   453,    -1,   454,
      -1,   455,    -1,   456,    -1,   457,    -1,   458,    -1,   459,
      -1,   460,    -1,   461,    -1,    43,    -1,    49,    -1,    73,
      -1,    80,    -1,    92,    -1,    99,    -1,   165,    -1,   167,
      -1,   171,    -1,   185,    -1,   199,    -1,   211,    -1,   212,
      -1,   214,    -1,   223,    -1,   225,    -1,   256,    -1,   265,
      -1,   286,    -1,   288,    -1,   341,    -1,   369,    -1,   393,
      -1,   435,    -1,    26,    -1,    30,    -1,    31,    -1,    32,
      -1,    33,    -1,    34,    -1,    35,    -1,    36,    -1,    39,
      -1,    52,    -1,    59,    -1,    60,    -1,    66,    -1,    72,
      -1,    74,    -1,    84,    -1,    91,    -1,    96,    -1,    97,
      -1,    98,    -1,   100,    -1,   101,    -1,   102,    -1,   113,
      -1,   115,    -1,   122,    -1,   128,    -1,   129,    -1,   135,
      -1,   139,    -1,   143,    -1,   154,    -1,   156,    -1,   161,
      -1,   163,    -1,   166,    -1,   173,    -1,   175,    -1,   178,
      -1,   190,    -1,   197,    -1,   207,    -1,   209,    -1,   220,
      -1,   221,    -1,   226,    -1,   230,    -1,   231,    -1,   262,
      -1,   267,    -1,   274,    -1,   277,    -1,   278,    -1,   282,
      -1,   283,    -1,   300,    -1,   310,    -1,   325,    -1,   338,
      -1,   357,    -1,   363,    -1,   374,    -1,   388,    -1,   391,
      -1,   399,    -1,   402,    -1,   403,    -1,   409,    -1,   417,
      -1,   418,    -1,   424,    -1,   425,    -1,   433,    -1,   440,
      -1,   441,    -1,   443,    -1,   444,    -1
};

/* YYRLINE[YYN] -- source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,   457,   457,   473,   485,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   528,     9,
      18,    27,    36,    45,    54,    63,    72,    85,    87,    93,
      94,    99,   103,   107,   118,   126,   130,   139,   148,   157,
     166,   175,   184,   192,   200,   209,   218,   227,   236,   253,
     262,   271,   280,   290,   303,   318,   327,   335,   350,   358,
     368,   378,   385,   392,   400,   407,   418,   419,   424,   428,
     433,   438,   446,   447,   452,   456,   457,     7,    13,    19,
      25,     6,    15,    25,    35,    45,    55,    65,    75,    85,
      95,   106,   117,   127,   140,   141,     8,    21,    27,    34,
      40,    47,    57,    61,    70,    79,    88,    95,    96,   101,
     113,   118,   143,   153,   163,   169,   180,   191,   206,   207,
     213,   214,   219,   220,   226,   227,   231,   232,   237,   239,
     245,   246,   250,   251,   256,     7,    14,    22,     9,    19,
      32,    33,     7,    14,    31,    51,    52,     9,    17,    29,
      30,    34,    35,    36,    41,    42,    43,    48,    52,    56,
      60,    64,    68,    72,    76,    80,    84,    88,    92,    97,
     101,   105,   112,   113,   117,   118,   119,     2,     9,    15,
      21,    28,    35,    45,    46,    47,     7,    21,    41,    42,
      69,    70,    71,    72,    73,    74,    78,    79,    84,    89,
      90,    91,    92,    93,    98,   105,   106,   107,   124,   131,
     138,   148,   158,   170,   179,   188,   207,   214,   219,   221,
     223,   225,   228,   233,   234,   238,   239,   240,   241,   246,
     250,   251,   256,   263,   268,   269,   270,   271,   272,   273,
     274,   275,   281,   282,   286,   291,   298,   305,   312,   324,
     325,   326,   327,   331,   336,   337,   338,   343,   348,   349,
     350,   351,   352,   353,   358,   381,   385,   392,   393,   397,
     401,   402,   403,   407,   411,   419,   420,   425,   426,   430,
     438,   439,   444,   445,   449,   454,   458,   462,   467,   475,
     476,   480,   481,   487,   498,   511,   525,   539,   553,   567,
     590,   594,   601,   605,   613,   618,   625,   635,   636,   637,
     638,   639,   646,   653,   654,   659,   660,     9,    19,    29,
      39,    49,    59,    73,    74,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    86,    87,    92,    93,
      94,    95,    96,    97,    98,   103,   104,   109,   110,   111,
     116,   117,   118,     7,    18,    19,    23,    27,     7,     1,
      30,    53,    54,    59,    63,    68,    72,    80,    81,    85,
      86,    91,    92,    96,    97,   102,   103,   104,   105,   106,
     111,   119,   123,   128,   129,   134,   138,   143,   147,   151,
     155,   159,   163,   167,   171,   175,   179,   183,   187,   191,
     195,   203,   209,   210,   211,   216,   220,    47,    48,    52,
      53,    68,    69,    76,    84,    92,   100,   108,   116,   127,
     128,   155,   170,   186,   187,   206,   210,   214,   231,   238,
     245,   255,   256,   259,   271,   282,   290,   295,   300,   305,
     310,   318,   326,   331,   336,   343,   344,   348,   349,   350,
     357,   358,   362,   363,   367,   368,   372,   376,   377,   380,
     389,   400,   401,   402,   405,   406,   407,   411,   412,   413,
     414,   418,   419,   423,   425,   441,   443,   448,   451,   459,
     463,   467,   471,   475,   479,   486,   491,   498,   499,   503,
     507,   511,   515,   522,   529,   530,   535,   536,   540,   541,
     549,   569,   570,   572,   577,   578,   582,   583,   586,   587,
     612,   613,   617,   618,   622,   623,   627,   640,   641,   645,
     646,   650,   651,   655,   656,   660,   671,   672,   673,   674,
     678,   679,   684,   685,   686,   695,   701,   719,   720,   724,
     725,   731,   737,   745,   753,   789,   815,   819,   845,   849,
     862,   876,   891,   903,   919,   925,   930,   936,   943,   944,
     952,   956,   960,   966,   973,   978,   979,   980,   981,   985,
     986,   998,   999,  1004,  1011,  1018,  1025,  1057,  1068,  1081,
    1086,  1087,  1090,  1091,  1094,  1095,  1100,  1101,  1106,  1110,
    1116,  1137,  1145,  1158,  1161,  1165,  1167,  1172,  1179,  1184,
    1190,  1195,  1201,  1209,  1211,  1214,  1218,  1219,  1220,  1221,
    1222,  1223,  1228,  1248,  1249,  1250,  1251,  1262,  1268,  1276,
    1277,  1283,  1288,  1293,  1298,  1303,  1308,  1313,  1318,  1324,
    1330,  1336,  1343,  1365,  1374,  1378,  1386,  1390,  1398,  1410,
    1431,  1435,  1441,  1445,  1458,  1466,  1476,  1478,  1480,  1482,
    1484,  1486,  1491,  1492,  1499,  1508,  1516,  1525,  1536,  1544,
    1545,  1546,  1550,  1550,  1553,  1553,  1556,  1556,  1559,  1559,
    1562,  1562,  1565,  1565,  1568,  1568,  1571,  1571,  1574,  1576,
    1578,  1580,  1582,  1584,  1586,  1588,  1590,  1595,  1600,  1606,
    1613,  1618,  1624,  1630,  1661,  1662,  1664,  1672,  1687,  1689,
    1691,  1693,  1695,  1697,  1699,  1701,  1703,  1705,  1707,  1709,
    1711,  1713,  1716,  1718,  1720,  1723,  1725,  1727,  1729,  1732,
    1737,  1742,  1749,  1754,  1761,  1766,  1774,  1779,  1788,  1796,
    1804,  1812,  1830,  1838,  1846,  1854,  1862,  1870,  1886,  1890,
    1898,  1906,  1914,  1922,  1930,  1938,  1942,  1946,  1950,  1954,
    1962,  1970,  1978,  1986,  2006,  2028,  2039,  2046,  2071,  2073,
    2075,  2077,  2079,  2081,  2083,  2085,  2087,  2089,  2091,  2093,
    2095,  2097,  2099,  2101,  2103,  2105,  2107,  2109,  2113,  2117,
    2121,  2135,  2136,  2137,  2149,  2164,  2176,  2178,  2180,  2191,
    2215,  2228,  2232,  2238,  2245,  2252,  2262,  2269,  2297,  2332,
    2343,  2344,  2351,  2357,  2361,  2365,  2369,  2373,  2377,  2381,
    2385,  2389,  2393,  2397,  2401,  2405,  2409,  2413,  2417,  2419,
    2423,  2432,  2437,  2444,  2459,  2466,  2470,  2474,  2478,  2482,
    2496,  2497,  2501,  2502,  2510,  2511,  2515,  2516,  2521,  2529,
    2531,  2545,  2548,  2575,  2576,  2579,  2580,  2591,  2609,  2616,
    2625,  2642,  2687,  2695,  2703,  2711,  2719,  2740,  2741,  2742,
    2745,  2746,  2747,  2750,  2751,  2754,  2755,  2756,  2757,  2758,
    2759,  2760,  2761,  2762,  2763,  2764,  2765,  2768,  2770,  2775,
    2777,  2782,  2784,  2786,  2788,  2790,  2792,  2794,  2796,  2810,
    2812,  2816,  2820,  2827,  2831,  2837,  2841,  2850,  2861,  2862,
    2866,  2870,  2877,  2878,  2879,  2880,  2881,  2882,  2883,  2884,
    2885,  2886,  2896,  2900,  2907,  2914,  2915,  2931,  2935,  2940,
    2944,  2959,  2964,  2968,  2971,  2974,  2975,  2976,  2979,  2986,
    2996,  3010,  3011,  3015,  3026,  3027,  3030,  3031,  3034,  3038,
    3045,  3049,  3053,  3061,  3072,  3073,  3077,  3078,  3082,  3083,
    3086,  3087,  3097,  3098,  3102,  3103,  3106,  3122,  3130,  3138,
    3160,  3161,  3172,  3176,  3203,  3205,  3210,  3212,  3222,  3224,
    3235,  3239,  3243,  3247,  3251,  3260,  3267,  3299,  3303,  3307,
    3311,  3315,  3319,  3323,  3329,  3330,  3346,  3347,  3348,  3351,
    3352,  3357,  3358,  3359,  3362,  3363,  3366,  3368,  3373,  3374,
    3377,  3385,  3386,  3387,  3388,  3389,  3392,  3393,     7,    18,
      19,    23,    24,    25,    26,     7,    16,    34,    41,    46,
      47,    48,    49,     8,    33,    62,    66,    67,    72,    73,
      78,    79,    83,    84,    89,    90,     7,    16,    25,    34,
      43,    52,     5,     7,    20,     9,    16,    26,    33,    44,
      45,    50,    51,    52,    57,    58,    59,    60,    61,    65,
      66,    67,    68,    73,    74,    79,    83,    91,    92,    97,
      98,    99,   105,   110,   118,   119,    10,    16,    22,    32,
      33,    41,    52,    64,    72,    80,    87,    97,    99,   105,
     109,   113,   128,   135,   136,   137,   141,   142,     7,    16,
       8,    22,    36,    48,    56,    70,    71,    72,    73,    74,
      87,    88,    93,    94,    98,    99,     7,    21,    25,    32,
      43,    44,    50,    51,     9,    19,     2,     7,    14,    24,
      25,    32,     3,    10,    16,    22,    28,    37,    37,    39,
      40,     6,     8,    21,    34,    52,    74,    75,    76,    77,
      11,    24,    41,    42,    43,    48,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    63,    63,    63,    63,    63,    63,    63,
      63,    63,    63,    63,    63,    63,    63,    63,    63,    63,
      63,    63,    63,    63,    63,    63,    63,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || YYTOKEN_TABLE
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "IDENT", "FCONST", "SCONST", "BCONST",
  "XCONST", "Op", "ICONST", "PARAM", "TYPECAST", "DOT_DOT", "COLON_EQUALS",
  "EQUALS_GREATER", "LESS_EQUALS", "GREATER_EQUALS", "NOT_EQUALS",
  "ABORT_P", "ABSOLUTE_P", "ACCESS", "ACTION", "ADD_P", "ADMIN", "AFTER",
  "AGGREGATE", "ALL", "ALSO", "ALTER", "ALWAYS", "ANALYSE", "ANALYZE",
  "AND", "ANY", "ARRAY", "AS", "ASC_P", "ASSERTION", "ASSIGNMENT",
  "ASYMMETRIC", "AT", "ATTACH", "ATTRIBUTE", "AUTHORIZATION", "BACKWARD",
  "BEFORE", "BEGIN_P", "BETWEEN", "BIGINT", "BINARY", "BIT", "BOOLEAN_P",
  "BOTH", "BY", "CACHE", "CALL_P", "CALLED", "CASCADE", "CASCADED", "CASE",
  "CAST", "CATALOG_P", "CHAIN", "CHAR_P", "CHARACTER", "CHARACTERISTICS",
  "CHECK_P", "CHECKPOINT", "CLASS", "CLOSE", "CLUSTER", "COALESCE",
  "COLLATE", "COLLATION", "COLUMN", "COLUMNS", "COMMENT", "COMMENTS",
  "COMMIT", "COMMITTED", "CONCURRENTLY", "CONFIGURATION", "CONFLICT",
  "CONNECTION", "CONSTRAINT", "CONSTRAINTS", "CONTENT_P", "CONTINUE_P",
  "CONVERSION_P", "COPY", "COST", "CREATE_P", "CROSS", "CSV", "CUBE",
  "CURRENT_P", "CURRENT_CATALOG", "CURRENT_DATE", "CURRENT_ROLE",
  "CURRENT_SCHEMA", "CURRENT_TIME", "CURRENT_TIMESTAMP", "CURRENT_USER",
  "CURSOR", "CYCLE", "DATA_P", "DATABASE", "DAY_P", "DAYS_P", "DEALLOCATE",
  "DEC", "DECIMAL_P", "DECLARE", "DEFAULT", "DEFAULTS", "DEFERRABLE",
  "DEFERRED", "DEFINER", "DELETE_P", "DELIMITER", "DELIMITERS", "DEPENDS",
  "DESC_P", "DESCRIBE", "DETACH", "DICTIONARY", "DISABLE_P", "DISCARD",
  "DISTINCT", "DO", "DOCUMENT_P", "DOMAIN_P", "DOUBLE_P", "DROP", "EACH",
  "ELSE", "ENABLE_P", "ENCODING", "ENCRYPTED", "END_P", "ENUM_P", "ESCAPE",
  "EVENT", "EXCEPT", "EXCLUDE", "EXCLUDING", "EXCLUSIVE", "EXECUTE",
  "EXISTS", "EXPLAIN", "EXPORT_P", "EXTENSION", "EXTERNAL", "EXTRACT",
  "FALSE_P", "FAMILY", "FETCH", "FILTER", "FIRST_P", "FLOAT_P",
  "FOLLOWING", "FOR", "FORCE", "FOREIGN", "FORWARD", "FREEZE", "FROM",
  "FULL", "FUNCTION", "FUNCTIONS", "GENERATED", "GLOB", "GLOBAL", "GRANT",
  "GRANTED", "GROUP_P", "GROUPING", "HANDLER", "HAVING", "HEADER_P",
  "HOLD", "HOUR_P", "HOURS_P", "IDENTITY_P", "IF_P", "ILIKE", "IMMEDIATE",
  "IMMUTABLE", "IMPLICIT_P", "IMPORT_P", "IN_P", "INCLUDING", "INCREMENT",
  "INDEX", "INDEXES", "INHERIT", "INHERITS", "INITIALLY", "INLINE_P",
  "INNER_P", "INOUT", "INPUT_P", "INSENSITIVE", "INSERT", "INSTEAD",
  "INT_P", "INTEGER", "INTERSECT", "INTERVAL", "INTO", "INVOKER", "IS",
  "ISNULL", "ISOLATION", "JOIN", "KEY", "LABEL", "LANGUAGE", "LARGE_P",
  "LAST_P", "LATERAL_P", "LEADING", "LEAKPROOF", "LEFT", "LEVEL", "LIKE",
  "LIMIT", "LISTEN", "LOAD", "LOCAL", "LOCALTIME", "LOCALTIMESTAMP",
  "LOCATION", "LOCK_P", "LOCKED", "LOGGED", "MACRO", "MAPPING", "MATCH",
  "MATERIALIZED", "MAXVALUE", "METHOD", "MICROSECOND_P", "MICROSECONDS_P",
  "MILLISECOND_P", "MILLISECONDS_P", "MINUTE_P", "MINUTES_P", "MINVALUE",
  "MODE", "MONTH_P", "MONTHS_P", "MOVE", "NAME_P", "NAMES", "NATIONAL",
  "NATURAL", "NCHAR", "NEW", "NEXT", "NO", "NONE", "NOT", "NOTHING",
  "NOTIFY", "NOTNULL", "NOWAIT", "NULL_P", "NULLIF", "NULLS_P", "NUMERIC",
  "OBJECT_P", "OF", "OFF", "OFFSET", "OIDS", "OLD", "ON", "ONLY",
  "OPERATOR", "OPTION", "OPTIONS", "OR", "ORDER", "ORDINALITY", "OUT_P",
  "OUTER_P", "OVER", "OVERLAPS", "OVERLAY", "OVERRIDING", "OWNED", "OWNER",
  "PARALLEL", "PARSER", "PARTIAL", "PARTITION", "PASSING", "PASSWORD",
  "PERCENT", "PLACING", "PLANS", "POLICY", "POSITION", "PRAGMA_P",
  "PRECEDING", "PRECISION", "PREPARE", "PREPARED", "PRESERVE", "PRIMARY",
  "PRIOR", "PRIVILEGES", "PROCEDURAL", "PROCEDURE", "PROGRAM",
  "PUBLICATION", "QUOTE", "RANGE", "READ_P", "REAL", "REASSIGN", "RECHECK",
  "RECURSIVE", "REF", "REFERENCES", "REFERENCING", "REFRESH", "REINDEX",
  "RELATIVE_P", "RELEASE", "RENAME", "REPEATABLE", "REPLACE", "REPLICA",
  "RESET", "RESTART", "RESTRICT", "RETURNING", "RETURNS", "REVOKE",
  "RIGHT", "ROLE", "ROLLBACK", "ROLLUP", "ROW", "ROWS", "RULE", "SAMPLE",
  "SAVEPOINT", "SCHEMA", "SCHEMAS", "SCROLL", "SEARCH", "SECOND_P",
  "SECONDS_P", "SECURITY", "SELECT", "SEQUENCE", "SEQUENCES",
  "SERIALIZABLE", "SERVER", "SESSION", "SESSION_USER", "SET", "SETOF",
  "SETS", "SHARE", "SHOW", "SIMILAR", "SIMPLE", "SKIP", "SMALLINT",
  "SNAPSHOT", "SOME", "SQL_P", "STABLE", "STANDALONE_P", "START",
  "STATEMENT", "STATISTICS", "STDIN", "STDOUT", "STORAGE", "STRICT_P",
  "STRIP_P", "SUBSCRIPTION", "SUBSTRING", "SYMMETRIC", "SYSID", "SYSTEM_P",
  "TABLE", "TABLES", "TABLESAMPLE", "TABLESPACE", "TEMP", "TEMPLATE",
  "TEMPORARY", "TEXT_P", "THEN", "TIME", "TIMESTAMP", "TO", "TRAILING",
  "TRANSACTION", "TRANSFORM", "TREAT", "TRIGGER", "TRIM", "TRUE_P",
  "TRUNCATE", "TRUSTED", "TYPE_P", "TYPES_P", "UNBOUNDED", "UNCOMMITTED",
  "UNENCRYPTED", "UNION", "UNIQUE", "UNKNOWN", "UNLISTEN", "UNLOGGED",
  "UNTIL", "UPDATE", "USER", "USING", "VACUUM", "VALID", "VALIDATE",
  "VALIDATOR", "VALUE_P", "VALUES", "VARCHAR", "VARIADIC", "VARYING",
  "VERBOSE", "VERSION_P", "VIEW", "VIEWS", "VOLATILE", "WHEN", "WHERE",
  "WHITESPACE_P", "WINDOW", "WITH", "WITHIN", "WITHOUT", "WORK", "WRAPPER",
  "WRITE_P", "XML_P", "XMLATTRIBUTES", "XMLCONCAT", "XMLELEMENT",
  "XMLEXISTS", "XMLFOREST", "XMLNAMESPACES", "XMLPARSE", "XMLPI",
  "XMLROOT", "XMLSERIALIZE", "XMLTABLE", "YEAR_P", "YEARS_P", "YES_P",
  "ZONE", "NOT_LA", "NULLS_LA", "WITH_LA", "'<'", "'>'", "'='",
  "POSTFIXOP", "'+'", "'-'", "'*'", "'/'", "'%'", "'^'", "UMINUS", "'['",
  "']'", "'('", "')'", "'.'", "';'", "','", "'?'", "':'", "$accept",
  "stmtblock", "stmtmulti", "stmt", "AlterTableStmt",
  "alter_identity_column_option_list", "alter_column_default",
  "alter_identity_column_option", "alter_generic_option_list",
  "alter_table_cmd", "alter_using", "alter_generic_option_elem",
  "alter_table_cmds", "alter_generic_options", "opt_set_data",
  "DeallocateStmt", "RenameStmt", "opt_column", "InsertStmt",
  "insert_rest", "insert_target", "opt_conf_expr", "opt_with_clause",
  "insert_column_item", "set_clause", "opt_on_conflict", "index_elem",
  "returning_clause", "override_kind", "set_target_list", "opt_collate",
  "opt_class", "insert_column_list", "set_clause_list", "index_params",
  "set_target", "PragmaStmt", "CreateSeqStmt", "OptSeqOptList",
  "ExecuteStmt", "execute_param_clause", "AlterSeqStmt", "SeqOptList",
  "opt_with", "NumericOnly", "SeqOptElem", "opt_by", "SignedIconst",
  "TransactionStmt", "opt_transaction", "CreateStmt",
  "ConstraintAttributeSpec", "def_arg", "OptParenthesizedSeqOptList",
  "generic_option_arg", "key_action", "ColConstraint", "ColConstraintElem",
  "generic_option_elem", "key_update", "key_actions",
  "create_generic_options", "OnCommitOption", "reloptions",
  "opt_no_inherit", "TableConstraint", "TableLikeOption", "reloption_list",
  "ExistingIndex", "ConstraintAttr", "OptWith", "definition",
  "TableLikeOptionList", "generic_option_name", "ConstraintAttributeElem",
  "columnDef", "generic_option_list", "def_list", "index_name",
  "TableElement", "def_elem", "opt_definition", "OptTableElementList",
  "columnElem", "opt_column_list", "ColQualList", "key_delete",
  "reloption_elem", "columnList", "func_type", "ConstraintElem",
  "TableElementList", "key_match", "TableLikeClause", "OptTemp",
  "generated_when", "DropStmt", "drop_type_any_name", "drop_type_name",
  "any_name_list", "opt_drop_behavior", "drop_type_name_on_any_name",
  "CreateFunctionStmt", "macro_alias", "param_list", "UpdateStmt",
  "CopyStmt", "copy_from", "copy_delimiter", "copy_generic_opt_arg_list",
  "opt_using", "opt_as", "opt_program", "copy_options",
  "copy_generic_opt_arg", "copy_generic_opt_elem", "opt_oids",
  "copy_opt_list", "opt_binary", "copy_opt_item",
  "copy_generic_opt_arg_list_item", "copy_file_name",
  "copy_generic_opt_list", "SelectStmt", "select_with_parens",
  "select_no_parens", "select_clause", "simple_select", "with_clause",
  "cte_list", "common_table_expr", "into_clause", "OptTempTableName",
  "opt_table", "all_or_distinct", "distinct_clause", "opt_all_clause",
  "opt_sort_clause", "sort_clause", "sortby_list", "sortby",
  "opt_asc_desc", "opt_nulls_order", "select_limit", "opt_select_limit",
  "limit_clause", "offset_clause", "sample_count", "sample_clause",
  "opt_sample_func", "tablesample_entry", "tablesample_clause",
  "opt_tablesample_clause", "opt_repeatable_clause", "select_limit_value",
  "select_offset_value", "select_fetch_first_value", "I_or_F_const",
  "row_or_rows", "first_or_next", "group_clause", "group_by_list",
  "group_by_item", "empty_grouping_set", "having_clause",
  "for_locking_clause", "opt_for_locking_clause", "for_locking_items",
  "for_locking_item", "for_locking_strength", "locked_rels_list",
  "opt_nowait_or_skip", "values_clause", "from_clause", "from_list",
  "table_ref", "joined_table", "alias_clause", "opt_alias_clause",
  "func_alias_clause", "join_type", "join_outer", "join_qual",
  "relation_expr", "func_table", "rowsfrom_item", "rowsfrom_list",
  "opt_col_def_list", "opt_ordinality", "where_clause",
  "TableFuncElementList", "TableFuncElement", "opt_collate_clause",
  "colid_type_list", "RowOrStruct", "Typename", "opt_array_bounds",
  "SimpleTypename", "ConstTypename", "GenericType", "opt_type_modifiers",
  "Numeric", "opt_float", "Bit", "ConstBit", "BitWithLength",
  "BitWithoutLength", "Character", "ConstCharacter", "CharacterWithLength",
  "CharacterWithoutLength", "character", "opt_varying", "ConstDatetime",
  "ConstInterval", "opt_timezone", "year_keyword", "month_keyword",
  "day_keyword", "hour_keyword", "minute_keyword", "second_keyword",
  "millisecond_keyword", "microsecond_keyword", "opt_interval", "a_expr",
  "b_expr", "c_expr", "func_application", "func_expr",
  "func_expr_windowless", "func_expr_common_subexpr",
  "within_group_clause", "filter_clause", "window_clause",
  "window_definition_list", "window_definition", "over_clause",
  "window_specification", "opt_existing_window_name",
  "opt_partition_clause", "opt_frame_clause", "frame_extent",
  "frame_bound", "row", "sub_type", "all_Op", "MathOp", "qual_Op",
  "qual_all_Op", "subquery_Op", "any_operator", "expr_list",
  "func_arg_list", "func_arg_expr", "type_list", "extract_list",
  "extract_arg", "overlay_list", "overlay_placing", "position_list",
  "substr_list", "substr_from", "substr_for", "trim_list", "in_expr",
  "case_expr", "when_clause_list", "when_clause", "case_default",
  "case_arg", "columnref", "indirection_el", "opt_slice_bound",
  "indirection", "opt_indirection", "opt_asymmetric", "opt_target_list",
  "target_list", "target_el", "qualified_name_list", "qualified_name",
  "name_list", "name", "attr_name", "func_name", "AexprConst", "Iconst",
  "Sconst", "ColId", "ColIdOrString", "type_function_name", "any_name",
  "attrs", "opt_name_list", "param_name", "ColLabel", "ColLabelOrString",
  "PrepareStmt", "prep_type_clause", "PreparableStmt", "CreateSchemaStmt",
  "OptSchemaEltList", "schema_stmt", "IndexStmt", "access_method",
  "access_method_clause", "opt_concurrently", "opt_index_name",
  "opt_reloptions", "opt_unique", "AlterObjectSchemaStmt",
  "CheckPointStmt", "ExportStmt", "ImportStmt", "ExplainStmt",
  "opt_verbose", "explain_option_arg", "ExplainableStmt",
  "NonReservedWord", "NonReservedWord_or_Sconst", "explain_option_list",
  "analyze_keyword", "opt_boolean_or_string", "explain_option_elem",
  "explain_option_name", "VariableSetStmt", "set_rest", "generic_set",
  "var_value", "zone_value", "var_list", "LoadStmt", "file_name",
  "VacuumStmt", "vacuum_option_elem", "opt_full", "vacuum_option_list",
  "opt_freeze", "DeleteStmt", "relation_expr_opt_alias",
  "where_or_current_clause", "using_clause", "AnalyzeStmt",
  "VariableResetStmt", "generic_reset", "reset_rest", "VariableShowStmt",
  "show_or_describe", "var_name", "CallStmt", "ViewStmt",
  "opt_check_option", "CreateAsStmt", "opt_with_data", "create_as_target",
  "unreserved_keyword", "col_name_keyword", "type_func_name_keyword",
  "reserved_keyword", 0
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[YYLEX-NUM] -- Internal token number corresponding to
   token YYLEX-NUM.  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,    60,
      62,    61,   724,    43,    45,    42,    47,    37,    94,   725,
      91,    93,    40,    41,    46,    59,    44,    63,    58
};
# endif

/* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   489,   490,   491,   491,   492,   492,   492,   492,   492,
     492,   492,   492,   492,   492,   492,   492,   492,   492,   492,
     492,   492,   492,   492,   492,   492,   492,   492,   492,   492,
     492,   492,   492,   492,   492,   492,   492,   492,   492,   493,
     493,   493,   493,   493,   493,   493,   493,   494,   494,   495,
     495,   496,   496,   496,   496,   497,   497,   498,   498,   498,
     498,   498,   498,   498,   498,   498,   498,   498,   498,   498,
     498,   498,   498,   498,   498,   498,   498,   498,   498,   498,
     498,   498,   498,   498,   498,   498,   499,   499,   500,   500,
     500,   500,   501,   501,   502,   503,   503,   504,   504,   504,
     504,   505,   505,   505,   505,   505,   505,   505,   505,   505,
     505,   505,   505,   505,   506,   506,   507,   508,   508,   508,
     508,   508,   509,   509,   510,   510,   510,   511,   511,   512,
     513,   513,   514,   514,   514,   515,   515,   515,   516,   516,
     517,   517,   518,   518,   519,   519,   520,   520,   521,   521,
     522,   522,   523,   523,   524,   525,   525,   525,   526,   526,
     527,   527,   528,   528,   528,   529,   529,   530,   530,   531,
     531,   532,   532,   532,   533,   533,   533,   533,   534,   534,
     534,   534,   534,   534,   534,   534,   534,   534,   534,   534,
     534,   534,   535,   535,   536,   536,   536,   537,   537,   537,
     537,   537,   537,   538,   538,   538,   539,   539,   540,   540,
     541,   541,   541,   541,   541,   541,   542,   542,   543,   544,
     544,   544,   544,   544,   545,   545,   545,   545,   546,   546,
     546,   546,   546,   546,   546,   546,   547,   548,   549,   549,
     549,   549,   549,   550,   550,   551,   551,   551,   551,   552,
     553,   553,   554,   554,   555,   555,   555,   555,   555,   555,
     555,   555,   556,   556,   557,   558,   558,   558,   558,   559,
     559,   559,   559,   560,   561,   561,   561,   562,   563,   563,
     563,   563,   563,   563,   564,   565,   565,   566,   566,   567,
     568,   568,   568,   569,   569,   570,   570,   571,   571,   572,
     573,   573,   574,   574,   575,   576,   576,   576,   576,   577,
     577,   578,   578,   578,   579,   579,   579,   579,   579,   579,
     580,   580,   581,   581,   581,   581,   582,   583,   583,   583,
     583,   583,   583,   583,   583,   584,   584,   585,   585,   585,
     585,   585,   585,   586,   586,   586,   586,   586,   586,   586,
     586,   586,   586,   586,   586,   586,   586,   586,   587,   587,
     587,   587,   587,   587,   587,   588,   588,   589,   589,   589,
     590,   590,   590,   591,   592,   592,   593,   593,   594,   595,
     595,   596,   596,   597,   597,   598,   598,   599,   599,   600,
     600,   601,   601,   602,   602,   603,   603,   603,   603,   603,
     604,   605,   605,   606,   606,   607,   607,   608,   608,   608,
     608,   608,   608,   608,   608,   608,   608,   608,   608,   608,
     608,   609,   610,   610,   610,   611,   611,   612,   612,   613,
     613,   614,   614,   614,   614,   614,   614,   614,   614,   615,
     615,   616,   616,   616,   616,   616,   616,   616,   617,   617,
     617,   618,   618,   619,   620,   620,   621,   621,   621,   621,
     621,   621,   621,   621,   621,   622,   622,   623,   623,   623,
     624,   624,   625,   625,   626,   626,   627,   628,   628,   629,
     629,   630,   630,   630,   631,   631,   631,   632,   632,   632,
     632,   633,   633,   634,   634,   634,   634,   635,   635,   636,
     636,   636,   636,   636,   636,   637,   637,   638,   638,   639,
     639,   639,   639,   640,   641,   641,   642,   642,   643,   643,
     644,   645,   645,   645,   646,   646,   647,   647,   648,   648,
     649,   649,   650,   650,   651,   651,   652,   653,   653,   654,
     654,   655,   655,   656,   656,   657,   658,   658,   658,   658,
     659,   659,   660,   660,   660,   661,   661,   662,   662,   663,
     663,   664,   664,   664,   664,   664,   664,   664,   665,   665,
     665,   665,   665,   665,   666,   666,   666,   666,   667,   667,
     668,   668,   668,   668,   668,   669,   669,   669,   669,   670,
     670,   671,   671,   672,   672,   672,   672,   673,   673,   674,
     675,   675,   676,   676,   677,   677,   678,   678,   679,   679,
     680,   681,   681,   682,   682,   683,   684,   684,   684,   684,
     684,   684,   684,   685,   685,   685,   686,   686,   686,   686,
     686,   686,   686,   687,   687,   687,   687,   688,   688,   689,
     689,   690,   690,   690,   690,   690,   690,   690,   690,   690,
     690,   690,   691,   691,   692,   692,   693,   693,   694,   695,
     696,   696,   697,   697,   698,   699,   700,   700,   700,   700,
     700,   700,   701,   701,   702,   702,   702,   702,   703,   704,
     704,   704,   705,   705,   706,   706,   707,   707,   708,   708,
     709,   709,   710,   710,   711,   711,   712,   712,   713,   713,
     713,   713,   713,   713,   713,   713,   713,   713,   713,   713,
     713,   713,   713,   713,   714,   714,   714,   714,   714,   714,
     714,   714,   714,   714,   714,   714,   714,   714,   714,   714,
     714,   714,   714,   714,   714,   714,   714,   714,   714,   714,
     714,   714,   714,   714,   714,   714,   714,   714,   714,   714,
     714,   714,   714,   714,   714,   714,   714,   714,   714,   714,
     714,   714,   714,   714,   714,   714,   714,   714,   714,   714,
     714,   714,   714,   714,   714,   714,   714,   714,   715,   715,
     715,   715,   715,   715,   715,   715,   715,   715,   715,   715,
     715,   715,   715,   715,   715,   715,   715,   715,   715,   715,
     715,   716,   716,   716,   716,   716,   716,   716,   716,   716,
     716,   717,   717,   717,   717,   717,   717,   717,   718,   718,
     719,   719,   720,   720,   720,   720,   720,   720,   720,   720,
     720,   720,   720,   720,   720,   720,   720,   720,   720,   720,
     720,   720,   720,   720,   720,   720,   720,   720,   720,   720,
     721,   721,   722,   722,   723,   723,   724,   724,   725,   726,
     726,   726,   727,   728,   728,   729,   729,   730,   730,   730,
     731,   731,   732,   732,   732,   732,   732,   733,   733,   733,
     734,   734,   734,   735,   735,   736,   736,   736,   736,   736,
     736,   736,   736,   736,   736,   736,   736,   737,   737,   738,
     738,   739,   739,   739,   739,   739,   739,   739,   739,   740,
     740,   741,   741,   742,   742,   743,   743,   743,   744,   744,
     745,   745,   746,   746,   746,   746,   746,   746,   746,   746,
     746,   746,   747,   747,   748,   749,   749,   750,   750,   750,
     750,   750,   750,   751,   752,   753,   753,   753,   754,   754,
     755,   756,   756,   757,   758,   758,   759,   759,   760,   760,
     761,   761,   761,   761,   762,   762,   763,   763,   764,   764,
     765,   765,   766,   766,   767,   767,   768,   768,   768,   768,
     769,   769,   770,   770,   771,   771,   772,   773,   774,   774,
     775,   775,   775,   775,   775,   775,   775,   775,   775,   775,
     775,   775,   775,   775,   776,   777,   778,   778,   778,   779,
     779,   780,   780,   780,   781,   781,   782,   782,   783,   783,
     784,   785,   785,   785,   785,   785,   786,   786,   787,   788,
     788,   789,   789,   789,   789,   790,   790,   791,   791,   792,
     792,   792,   792,   793,   793,   794,   795,   795,   796,   796,
     797,   797,   798,   798,   799,   799,   800,   800,   800,   800,
     800,   800,   801,   802,   803,   804,   804,   804,   804,   805,
     805,   806,   806,   806,   807,   807,   807,   807,   807,   808,
     808,   808,   808,   809,   809,   810,   810,   811,   811,   812,
     812,   812,   812,   813,   814,   814,   815,   815,   815,   816,
     816,   816,   816,   817,   817,   817,   817,   818,   818,   819,
     819,   819,   819,   819,   819,   819,   820,   820,   821,   822,
     823,   823,   823,   823,   823,   824,   824,   824,   824,   824,
     825,   825,   826,   826,   827,   827,   828,   829,   829,   829,
     830,   830,   831,   831,   832,   832,   833,   834,   834,   835,
     835,   835,   836,   836,   836,   836,   836,   837,   837,   838,
     838,   839,   840,   840,   840,   840,   841,   841,   841,   841,
     842,   842,   843,   843,   843,   844,   845,   845,   845,   845,
     845,   845,   845,   845,   845,   845,   845,   845,   845,   845,
     845,   845,   845,   845,   845,   845,   845,   845,   845,   845,
     845,   845,   845,   845,   845,   845,   845,   845,   845,   845,
     845,   845,   845,   845,   845,   845,   845,   845,   845,   845,
     845,   845,   845,   845,   845,   845,   845,   845,   845,   845,
     845,   845,   845,   845,   845,   845,   845,   845,   845,   845,
     845,   845,   845,   845,   845,   845,   845,   845,   845,   845,
     845,   845,   845,   845,   845,   845,   845,   845,   845,   845,
     845,   845,   845,   845,   845,   845,   845,   845,   845,   845,
     845,   845,   845,   845,   845,   845,   845,   845,   845,   845,
     845,   845,   845,   845,   845,   845,   845,   845,   845,   845,
     845,   845,   845,   845,   845,   845,   845,   845,   845,   845,
     845,   845,   845,   845,   845,   845,   845,   845,   845,   845,
     845,   845,   845,   845,   845,   845,   845,   845,   845,   845,
     845,   845,   845,   845,   845,   845,   845,   845,   845,   845,
     845,   845,   845,   845,   845,   845,   845,   845,   845,   845,
     845,   845,   845,   845,   845,   845,   845,   845,   845,   845,
     845,   845,   845,   845,   845,   845,   845,   845,   845,   845,
     845,   845,   845,   845,   845,   845,   845,   845,   845,   845,
     845,   845,   845,   845,   845,   845,   845,   845,   845,   845,
     845,   845,   845,   845,   845,   845,   845,   845,   845,   845,
     845,   845,   845,   845,   845,   845,   845,   845,   845,   845,
     845,   845,   845,   845,   845,   845,   845,   845,   845,   845,
     845,   845,   845,   845,   845,   845,   845,   845,   845,   845,
     845,   845,   845,   845,   845,   845,   845,   845,   845,   845,
     845,   845,   845,   845,   845,   845,   845,   845,   845,   845,
     845,   845,   845,   845,   845,   845,   845,   845,   845,   845,
     845,   845,   845,   845,   845,   845,   845,   845,   845,   845,
     845,   845,   845,   845,   845,   845,   845,   845,   845,   845,
     845,   845,   845,   845,   845,   846,   846,   846,   846,   846,
     846,   846,   846,   846,   846,   846,   846,   846,   846,   846,
     846,   846,   846,   846,   846,   846,   846,   846,   846,   846,
     846,   846,   846,   846,   846,   846,   846,   846,   846,   846,
     846,   846,   846,   846,   846,   846,   846,   846,   846,   846,
     846,   846,   846,   847,   847,   847,   847,   847,   847,   847,
     847,   847,   847,   847,   847,   847,   847,   847,   847,   847,
     847,   847,   847,   847,   847,   847,   847,   848,   848,   848,
     848,   848,   848,   848,   848,   848,   848,   848,   848,   848,
     848,   848,   848,   848,   848,   848,   848,   848,   848,   848,
     848,   848,   848,   848,   848,   848,   848,   848,   848,   848,
     848,   848,   848,   848,   848,   848,   848,   848,   848,   848,
     848,   848,   848,   848,   848,   848,   848,   848,   848,   848,
     848,   848,   848,   848,   848,   848,   848,   848,   848,   848,
     848,   848,   848,   848,   848,   848,   848,   848,   848,   848,
     848,   848,   848,   848
};

/* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     0,     4,
       6,     4,     6,     4,     6,     4,     6,     1,     2,     3,
       2,     1,     3,     2,     3,     1,     3,     2,     5,     3,
       6,     4,     6,     6,     6,     5,     5,     6,     9,     4,
       5,     7,     6,     4,     8,     4,     2,     4,     3,     6,
       4,     2,     2,     2,     2,     1,     2,     0,     1,     2,
       2,     2,     1,     3,     4,     2,     0,     2,     3,     2,
       3,     6,     6,     8,     6,     8,     6,     8,     6,     8,
       8,    10,     8,    10,     1,     0,     7,     1,     4,     4,
       7,     2,     1,     3,     4,     3,     0,     1,     0,     2,
       3,     5,     8,     5,     0,     5,     5,     7,     2,     0,
       1,     1,     1,     3,     2,     0,     1,     0,     1,     3,
       1,     3,     1,     3,     2,     2,     4,     5,     5,     8,
       1,     0,     3,     9,    12,     3,     0,     4,     6,     1,
       2,     1,     1,     0,     1,     2,     2,     1,     2,     2,
       1,     2,     3,     2,     2,     2,     2,     3,     3,     3,
       1,     3,     1,     0,     1,     2,     2,     2,     2,     2,
       2,     2,     2,     1,     1,     0,     9,    12,     0,     2,
       1,     1,     1,     1,     1,     1,     3,     0,     1,     2,
       1,     1,     2,     2,     3,     1,     1,     2,     2,     1,
       2,     3,     5,     2,     5,     5,     2,     3,     1,     1,
       2,     2,     0,     4,     0,     3,     4,     4,     0,     3,
       2,     0,     3,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     3,     3,     1,     2,     2,     2,     2,
       2,     2,     0,     3,     3,     3,     0,     1,     2,     1,
       2,     2,     2,     2,     4,     1,     3,     1,     3,     1,
       1,     1,     1,     3,     1,     2,     0,     1,     0,     1,
       3,     0,     2,     0,     3,     3,     1,     5,     3,     1,
       3,     1,     4,     5,     5,     6,     3,     7,     4,    11,
       1,     3,     2,     2,     2,     0,     3,     1,     1,     2,
       2,     2,     2,     1,     0,     1,     2,     6,     4,     6,
       4,     6,     8,     1,     1,     1,     1,     1,     2,     1,
       2,     1,     1,     1,     3,     3,     3,     3,     2,     2,
       1,     3,     1,     1,     1,     1,     3,     1,     1,     0,
       1,     1,     1,     6,     1,     1,     2,     3,     8,    11,
       9,     1,     1,     3,     0,     1,     3,     1,     0,     1,
       0,     1,     0,     1,     3,     1,     1,     1,     3,     0,
       2,     2,     0,     2,     0,     1,     0,     1,     1,     1,
       3,     3,     1,     1,     3,     3,     3,     3,     4,     3,
       2,     1,     1,     1,     1,     1,     3,     1,     1,     3,
       3,     1,     2,     4,     4,     2,     3,     5,     5,     1,
       1,    10,    10,     1,     2,     4,     4,     4,     2,     2,
       3,     1,     3,     6,     2,     0,     3,     3,     4,     4,
       4,     4,     3,     2,     1,     1,     0,     1,     1,     0,
       1,     5,     1,     0,     1,     0,     3,     1,     3,     4,
       3,     1,     1,     0,     2,     2,     0,     2,     2,     1,
       1,     1,     0,     2,     4,     5,     4,     2,     3,     2,
       2,     2,     2,     1,     2,     3,     0,     1,     0,     5,
       1,     4,     6,     2,     1,     0,     4,     0,     1,     1,
       1,     1,     2,     2,     1,     1,     1,     1,     1,     1,
       3,     0,     1,     3,     1,     1,     2,     2,     0,     1,
       3,     1,     0,     1,     2,     3,     2,     4,     2,     3,
       2,     0,     1,     2,     0,     4,     5,     2,     0,     1,
       3,     3,     3,     3,     3,     3,     1,     4,     3,     4,
       5,     4,     5,     4,     5,     2,     4,     1,     1,     0,
       1,     4,     5,     4,     0,     2,     2,     2,     1,     1,
       0,     4,     2,     1,     2,     2,     4,     2,     6,     2,
       1,     3,     4,     0,     2,     0,     2,     0,     1,     3,
       3,     2,     0,     2,     4,     1,     2,     3,     5,     6,
       2,     3,     4,     3,     4,     0,     1,     1,     1,     1,
       1,     2,     4,     1,     1,     1,     1,     2,     3,     3,
       0,     1,     1,     1,     1,     1,     2,     2,     2,     2,
       2,     1,     3,     0,     1,     1,     1,     1,     5,     2,
       1,     1,     1,     1,     4,     1,     2,     2,     1,     3,
       3,     2,     1,     0,     5,     2,     5,     2,     1,     3,
       3,     0,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     3,     3,     3,     3,
       3,     3,     3,     0,     1,     3,     3,     5,     2,     2,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     2,     2,     3,     3,     2,     2,     3,
       3,     5,     4,     6,     3,     5,     4,     6,     4,     6,
       5,     7,     3,     2,     4,     3,     2,     3,     1,     3,
       4,     3,     4,     3,     4,     5,     6,     6,     7,     6,
       7,     6,     7,     3,     4,     4,     6,     1,     1,     3,
       2,     2,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     2,     2,     5,     6,     6,
       7,     1,     1,     2,     2,     4,     1,     1,     1,     2,
       2,     3,     5,     6,     8,     6,     6,     4,     4,     1,
       1,     1,     5,     1,     1,     4,     1,     4,     1,     4,
       1,     4,     1,     1,     1,     1,     1,     1,     6,     4,
       4,     4,     4,     6,     5,     5,     5,     4,     6,     4,
       5,     0,     5,     0,     2,     0,     1,     3,     3,     2,
       2,     0,     6,     1,     0,     3,     0,     2,     2,     0,
       1,     4,     2,     2,     2,     2,     2,     4,     3,     5,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     4,     1,
       4,     1,     4,     1,     2,     1,     2,     1,     2,     1,
       3,     1,     3,     1,     3,     1,     3,     3,     1,     3,
       3,     0,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     4,     3,     2,     3,     0,     3,     3,     2,
       2,     1,     0,     2,     2,     3,     2,     1,     1,     3,
       5,     1,     2,     4,     2,     0,     1,     0,     1,     2,
       2,     2,     3,     5,     1,     0,     1,     2,     0,     2,
       1,     0,     1,     0,     1,     3,     3,     2,     1,     1,
       1,     3,     1,     2,     1,     3,     1,     1,     1,     2,
       1,     1,     1,     1,     1,     2,     6,     2,     5,     3,
       3,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     2,     2,     3,     3,     0,
       1,     1,     1,     1,     1,     1,     1,     1,     5,     3,
       0,     1,     1,     1,     1,     4,     7,     2,     0,     1,
       1,     1,     1,    13,    16,     1,     2,     0,     1,     0,
       1,     0,     2,     0,     1,     0,     6,     8,     6,     8,
       6,     8,     1,     4,     3,     2,     4,     3,     5,     1,
       0,     1,     1,     0,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     3,     1,     1,     1,
       1,     1,     1,     2,     1,     1,     2,     3,     3,     1,
       3,     3,     2,     3,     3,     3,     3,     1,     1,     1,
       1,     3,     5,     1,     1,     1,     1,     3,     2,     1,
       4,     5,     5,     4,     6,     1,     1,     1,     1,     1,
       1,     0,     1,     3,     1,     0,     7,     1,     2,     3,
       2,     0,     2,     0,     2,     4,     2,     1,     1,     1,
       2,     3,     2,     2,     3,     4,     2,     1,     1,     1,
       3,     2,     9,    11,    12,    14,     3,     4,     4,     0,
       7,    10,     2,     3,     0,     4,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1
};

/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
   means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
     128,   205,     0,  1088,  1087,   205,     0,  1062,   205,   406,
     334,     0,  1158,     0,   205,     0,   128,     0,     0,     0,
       0,     0,     0,   205,   473,     0,  1157,   205,     0,  1131,
       0,     0,     0,     0,     0,     2,     4,     7,    17,    29,
      25,     0,    27,    15,    20,     6,    31,    16,    19,    13,
      32,    11,    30,   440,   427,   475,   439,   127,   443,    28,
      14,    24,     5,    10,    22,    23,    21,  1070,    35,    26,
      33,    18,     8,    34,    36,     0,     9,    37,    12,   204,
     203,   197,     0,     0,     0,     0,     0,   198,  1006,  1176,
    1177,  1178,  1179,  1180,  1181,  1182,  1183,  1184,  1185,  1186,
    1187,  1188,  1189,  1190,  1191,  1523,  1192,  1193,  1194,  1475,
    1476,  1524,  1477,  1478,  1195,  1196,  1197,  1198,  1199,  1200,
    1201,  1202,  1479,  1480,  1203,  1204,  1205,  1206,  1207,  1481,
    1525,  1208,  1209,  1210,  1211,  1212,  1526,  1213,  1214,  1215,
    1216,  1217,  1218,  1219,  1220,  1221,  1527,  1222,  1223,  1224,
    1528,  1225,  1226,  1227,  1228,  1229,  1230,  1231,  1482,  1483,
    1232,  1233,  1234,  1235,  1236,  1237,  1238,  1239,  1240,  1241,
    1242,  1243,  1244,  1245,  1246,  1247,  1248,  1249,  1250,  1251,
    1252,  1253,  1254,  1255,  1256,  1257,  1258,  1259,  1484,  1260,
    1261,  1262,  1263,  1485,  1264,  1265,  1266,  1486,  1267,  1268,
    1269,  1529,  1530,  1270,  1271,  1272,  1531,  1273,  1274,  1487,
    1275,  1276,  1277,  1278,  1279,  1280,  1281,  1532,  1282,  1283,
    1284,  1285,  1286,  1287,  1288,  1289,  1290,  1291,  1292,  1533,
    1488,  1293,  1294,  1295,  1296,  1489,  1490,  1491,  1297,  1534,
    1535,  1298,  1536,  1299,  1300,  1301,  1302,  1303,  1304,  1537,
    1305,  1538,  1306,  1307,  1308,  1309,  1310,  1311,  1312,  1313,
    1314,  1315,  1316,  1317,  1318,  1319,  1320,  1321,  1322,  1323,
    1324,  1325,  1326,  1327,  1328,  1329,  1330,  1331,  1492,  1539,
    1493,  1332,  1333,  1334,  1494,  1335,  1336,  1540,  1337,  1495,
    1338,  1496,  1339,  1340,  1341,  1342,  1343,  1344,  1345,  1346,
    1347,  1497,  1541,  1348,  1542,  1498,  1349,  1350,  1351,  1352,
    1353,  1354,  1355,  1356,  1357,  1358,  1359,  1360,  1499,  1361,
    1362,  1500,  1363,  1364,  1365,  1366,  1367,  1368,  1369,  1370,
    1371,  1372,  1373,  1374,  1501,  1375,  1376,  1377,  1378,  1379,
    1380,  1381,  1382,  1383,  1384,  1385,  1386,  1387,  1388,  1389,
    1390,  1391,  1392,  1543,  1393,  1394,  1395,  1502,  1396,  1397,
    1398,  1399,  1400,  1401,  1402,  1403,  1404,  1405,  1406,  1407,
    1408,  1409,  1410,  1411,  1412,  1503,  1413,  1414,  1415,  1544,
    1416,  1417,  1504,  1418,  1419,  1420,  1421,  1422,  1423,  1424,
    1425,  1426,  1427,  1428,  1429,  1430,  1505,  1431,  1432,  1433,
    1545,  1434,  1435,  1436,  1437,  1438,  1506,  1507,  1439,  1440,
    1508,  1441,  1509,  1442,  1443,  1444,  1445,  1446,  1447,  1448,
    1449,  1450,  1451,  1452,  1453,  1454,  1455,  1456,  1457,  1458,
    1510,  1511,  1459,  1546,  1460,  1461,  1462,  1463,  1464,  1465,
    1466,  1467,  1468,  1469,  1470,  1512,  1513,  1514,  1515,  1516,
    1517,  1518,  1519,  1520,  1521,  1522,  1471,  1472,  1473,  1474,
    1161,     0,     0,   988,  1007,  1008,  1013,   200,   405,   128,
       0,   374,     0,     0,   375,     0,     0,   328,   327,  1054,
     333,     0,     0,     0,  1006,    99,  1363,    97,   986,  1007,
       0,   351,   352,     0,   360,     0,   345,   349,   346,     0,
     370,   362,   371,   363,   344,   364,   353,   343,     0,   372,
     347,     0,     0,     0,   201,   166,   334,   128,     0,  1075,
    1076,  1074,  1065,  1070,  1077,  1078,     0,     0,  1005,  1119,
    1118,   155,  1030,  1148,  1506,  1439,  1159,  1149,  1146,  1147,
     202,   472,   470,     0,   973,  1308,  1400,  1411,  1506,  1096,
    1099,     0,   199,     0,   444,   593,   982,  1130,     0,  1135,
       0,  1377,   448,   451,  1019,   449,   440,     0,     0,     1,
     128,     0,     0,     0,   469,   469,     0,   469,     0,   432,
     440,   435,   439,     0,  1069,  1144,  1156,  1506,  1439,  1510,
    1152,  1153,  1281,     0,     0,  1281,     0,  1281,     0,  1281,
       0,     0,   965,     0,   966,   989,  1032,  1033,  1031,     0,
    1034,   301,   332,   331,   330,   329,   334,  1281,  1038,     0,
       0,     0,     0,     0,  1049,   100,    98,   358,   359,     0,
     350,   348,     0,  1281,   369,  1014,   365,  1281,   369,   984,
    1281,     0,     0,   162,     0,  1067,  1079,  1094,     0,  1095,
    1085,  1073,  1080,  1081,  1082,   128,   404,  1064,     0,     0,
       0,     0,  1150,     0,     0,     0,   991,   993,   994,   897,
    1004,   968,  1476,  1477,  1478,   957,     0,  1479,  1480,  1481,
    1525,   836,   823,   832,   837,   824,   826,   833,  1482,  1483,
     777,  1247,  1484,  1485,  1002,  1486,  1489,  1490,  1491,   828,
     830,  1492,  1493,     0,  1003,  1495,  1496,  1344,  1498,  1499,
    1501,  1502,   834,  1504,  1505,  1506,  1507,  1508,  1509,  1001,
     835,  1511,     0,     0,     0,   979,     0,   968,   808,     0,
     633,   634,   656,   657,   635,   662,   663,   665,   636,     0,
     978,   714,   851,   807,   819,   758,     0,   806,   801,   455,
     974,     0,   802,   990,   992,   958,   455,   972,  1097,  1102,
    1098,     0,     0,     0,     0,     0,   595,   594,   983,  1129,
    1127,  1128,  1126,  1125,  1132,     0,  1134,  1070,   911,     0,
     450,     0,     0,     0,   430,   429,     3,     0,     0,  1137,
       0,   467,   468,     0,     0,     0,     0,     0,     0,     0,
       0,   542,   489,   490,   492,   539,   543,   551,     0,   436,
       0,  1019,  1154,     0,     0,     0,   115,   115,     0,     0,
       0,     0,     0,    92,    41,    85,     0,     0,     0,     0,
     180,   193,     0,     0,     0,     0,     0,   190,     0,     0,
     173,    43,   167,   169,     0,   115,     0,    39,     0,     0,
       0,    45,     0,     0,     0,     0,   811,   915,   475,   913,
     988,     0,   964,     0,  1021,  1547,  1548,  1549,  1550,  1551,
    1552,  1553,  1554,  1555,  1556,  1557,  1558,  1559,  1560,  1561,
    1562,  1563,  1564,  1565,  1566,  1567,  1568,  1569,  1570,  1571,
    1572,  1573,  1574,  1575,  1576,  1577,  1578,  1579,  1580,  1581,
    1582,  1583,  1584,  1585,  1586,  1587,  1588,  1589,  1590,  1591,
    1592,  1593,  1594,  1595,  1596,  1597,  1598,  1599,  1600,  1601,
    1602,  1603,  1604,  1605,  1606,  1607,  1608,  1609,  1610,  1611,
    1612,  1613,  1614,  1615,  1616,  1617,  1618,  1619,  1620,  1621,
    1622,  1623,   961,   960,   987,  1022,  1023,  1024,  1025,   967,
       0,     0,   402,     0,     0,  1035,     0,  1281,   161,  1281,
     301,     0,   301,     0,     0,  1048,  1051,   361,   357,   355,
     354,   356,     0,   367,   368,     0,   338,     0,  1015,     0,
       0,   340,     0,     0,     0,     0,   128,     0,   174,  1090,
    1091,  1089,     0,     0,  1072,   177,   194,  1084,  1093,  1083,
    1092,  1071,  1066,     0,  1063,   393,  1108,  1107,  1116,   156,
       0,  1011,   644,   673,   651,   673,   673,   640,   640,   653,
     641,   642,   678,     0,   673,   640,   645,   615,     0,   643,
     681,   681,   668,     0,   918,   625,   626,   627,   628,   654,
     655,   629,   660,   661,   630,   713,     0,   640,  1012,   128,
    1151,  1160,     0,   804,   672,   659,   956,     0,     0,   667,
     666,     0,     0,     0,     0,     0,   649,   648,   647,   810,
     921,     0,   646,     0,     0,   673,   673,   671,   737,     0,
     650,     0,     0,   936,     0,   942,     0,     0,     0,   677,
       0,   675,     0,     0,   738,   718,   719,   808,   911,     0,
     803,   809,   997,     0,     0,   713,   713,   977,   897,     0,
     894,   895,   896,     0,     0,     0,   971,     0,   905,   907,
       0,     0,   753,   903,     0,   756,     0,     0,     0,     0,
     891,   892,   893,   885,   886,   887,   888,   889,   890,   901,
     884,   734,     0,     0,   853,     0,   733,     0,     0,   558,
       0,   995,   959,   558,  1110,  1114,  1115,  1113,     0,  1109,
    1101,  1100,  1105,  1103,  1106,  1104,     0,  1123,     0,  1120,
     555,     0,   452,     0,     0,  1143,     0,   122,     0,  1138,
       0,   447,   446,   476,   477,   483,   445,   528,   529,     0,
       0,     0,     0,   548,   546,   519,   493,   518,     0,     0,
     497,     0,   520,   714,   541,   434,   487,   488,   491,   433,
       0,   544,     0,   554,   542,   492,     0,  1145,  1155,     0,
       0,     0,     0,     0,  1281,     0,     0,    76,    57,   253,
       0,   114,     0,     0,     0,     0,     0,     0,     0,    84,
      81,    82,    83,     0,     0,     0,     0,   178,   179,   192,
       0,   183,   184,   181,   185,   186,     0,     0,   171,   172,
       0,     0,     0,     0,   170,     0,     0,     0,     0,     0,
       0,     0,     0,   475,   475,   475,   817,     0,     0,   474,
       0,     0,   962,   965,   392,   309,     0,   299,     0,     0,
       0,     0,     0,   334,  1041,  1039,  1037,  1040,  1042,     0,
       0,   158,   160,     0,   298,   272,     0,  1053,   376,     0,
       0,  1281,  1050,   289,     0,   369,   366,  1016,     0,   369,
     985,     0,   369,   165,  1281,   301,     0,  1068,  1086,   175,
     195,   176,   196,   425,     0,   399,   407,   412,   390,     0,
     390,     0,   409,   413,   390,   408,   390,   403,     0,   157,
       0,   625,     0,   620,   616,   686,   687,   688,   689,   696,
     697,   694,   695,   690,   691,   684,   685,   692,   693,   682,
     683,     0,   698,   699,   700,   701,   702,   703,   704,   705,
     631,  1029,     0,   637,   640,  1028,     0,   969,     0,     0,
     955,   951,     0,     0,     0,     0,     0,     0,   922,   923,
     924,   925,   926,   927,   928,   929,   930,     0,     0,   931,
       0,     0,     0,   670,   669,     0,   883,   894,   895,   896,
     891,   892,   893,   885,   886,   887,   888,   889,   890,   909,
       0,     0,     0,     0,     0,     0,     0,     0,   778,     0,
       0,   878,     0,   911,   941,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   911,   947,     0,   968,     0,
       0,     0,   999,  1000,   715,   729,   730,   731,   735,  1027,
    1026,   976,     0,   970,     0,     0,   716,   739,   744,     0,
     948,   773,     0,   761,     0,   752,     0,   759,   763,   740,
     755,     0,   736,     0,   971,   906,   908,     0,   904,     0,
     726,   727,   728,   720,   721,   722,   723,   724,   725,   732,
     882,   880,   881,     0,     0,     0,   861,     0,     0,   757,
    1273,  1308,     0,   466,   466,   466,   454,   464,   975,     0,
     607,   475,   607,     0,   713,   596,  1019,  1133,  1121,  1122,
     912,  1018,   128,     0,  1141,     0,     0,     0,   134,   117,
       0,  1139,     0,   150,   558,     0,   968,     0,   481,   482,
       0,   486,  1502,  1396,     0,     0,     0,     0,   521,   549,
       0,   540,     0,   991,   522,   990,   523,   526,   527,   498,
     550,   980,   552,     0,   545,   438,   437,   556,     0,    42,
       0,  1281,    59,     0,     0,     0,     0,     0,     0,   208,
     244,   208,    96,  1281,   369,  1281,   369,  1180,  1248,  1412,
       0,    55,    88,     0,   277,   108,     0,   262,   306,    78,
      93,   101,     0,     0,    44,   168,   182,   187,   104,   191,
     188,  1058,   189,   115,     0,    40,     0,   102,     0,  1056,
       0,     0,    46,   106,  1060,     0,     0,     0,     0,   914,
     812,   916,   917,   964,     0,   391,     0,   300,     0,   401,
     381,   382,   392,     0,   301,  1038,     0,     0,     0,     0,
       0,   292,   290,   320,     0,   297,   291,   299,     0,     0,
     248,     0,  1174,     0,     0,   377,   373,     0,     0,   337,
    1017,   339,     0,   341,     0,     0,   394,     0,   397,     0,
     396,   400,   395,   389,     0,   420,     0,     0,     0,     0,
       0,     0,  1117,   621,   617,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   919,   638,   471,     0,     0,     0,
     952,     0,     0,   849,     0,   825,   827,   639,   839,     0,
     652,   829,   831,     0,   898,     0,     0,     0,   840,   780,
     781,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   796,   795,
     841,   877,     0,     0,   939,   940,   842,   680,   679,   681,
     681,     0,     0,   946,     0,     0,     0,   847,   805,   912,
     664,   713,     0,     0,     0,     0,     0,     0,     0,   762,
     754,     0,   760,   764,     0,     0,     0,   748,     0,     0,
     746,   774,   742,     0,     0,   775,     0,     0,     0,   818,
     466,   466,   466,   466,   463,   465,     0,     0,     0,     0,
    1396,     0,   579,   557,   559,   566,   579,   584,   820,   605,
     821,   982,     0,   531,     0,   531,     0,  1111,  1124,     0,
    1142,     0,   139,   121,   141,   140,     0,   148,     0,   968,
       0,   139,   123,     0,   142,     0,  1141,     0,   154,   478,
       0,   899,   486,     0,   480,   525,   524,     0,   496,   547,
     494,     0,   553,     0,     0,     0,   252,     0,     0,     0,
     208,     0,     0,   316,     0,   303,    77,     0,     0,     0,
      51,     0,    69,    61,    47,    75,     0,     0,    80,     0,
      73,    90,    91,    89,    94,     0,   236,   218,   249,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   815,   816,   813,   475,   963,   423,   424,   173,
     422,   310,     0,     0,  1053,  1036,     0,     0,   161,   301,
       0,   276,   272,     0,   270,   269,   271,     0,  1175,   166,
       0,  1170,  1052,     0,     0,  1047,   369,     0,   426,     0,
     385,   421,   410,   415,     0,   419,   417,   416,   411,   414,
       0,   622,     0,   613,     0,   623,     0,   632,   706,   707,
     708,   709,   710,   711,   712,   658,     0,   954,   950,     0,
     822,   920,     0,   910,   934,   933,   779,   791,   792,   793,
     935,     0,     0,     0,   788,   789,   790,   782,   783,   784,
     785,   786,   787,   794,   944,   943,   937,   938,   676,   674,
       0,   844,   845,   846,   945,   879,   998,   717,     0,     0,
     745,   949,   765,     0,     0,     0,   741,   898,     0,     0,
       0,     0,     0,   750,     0,     0,     0,   864,   859,   860,
       0,     0,     0,     0,   457,   456,   462,   579,   584,     0,
     440,     0,   566,     0,   578,   515,   577,     0,     0,   590,
     588,     0,   590,     0,   590,     0,   515,     0,   580,   515,
     577,     0,   597,   983,   606,     0,   538,   812,   538,     0,
     453,  1140,     0,  1136,     0,     0,     0,   129,   126,   116,
       0,     0,   151,   139,   130,     0,   479,   484,   485,   495,
     981,   109,   208,     0,     0,    58,     0,   318,   264,   296,
     279,     0,     0,     0,   209,     0,   284,     0,    50,    70,
       0,    66,     0,    95,     0,     0,     0,     0,     0,    53,
      65,     0,    48,     0,   369,   369,    56,   263,   215,  1344,
       0,   885,   886,   213,   305,   210,   311,   212,   214,   640,
     211,   308,   105,  1059,     0,   103,     0,  1057,   112,   110,
     107,  1061,     0,   404,   384,     0,     0,  1281,     0,  1053,
     159,   298,     0,   326,   248,   321,     0,  1174,  1172,     0,
    1169,     0,     0,     0,   342,     0,   398,     0,   418,     0,
       0,   618,   624,   953,   838,   848,   932,     0,     0,     0,
       0,   843,   771,   769,   766,     0,   767,   749,     0,     0,
     747,   743,     0,   776,   850,     0,   866,   863,   461,   460,
     459,   458,   565,   563,     0,   568,  1010,  1009,   575,   508,
     514,   564,     0,   560,     0,   589,   585,     0,   586,     0,
       0,   587,     0,   561,     0,  1009,   562,     0,   604,     0,
       0,   855,   996,   855,  1112,   138,   118,     0,   119,   149,
       0,     0,     0,     0,   143,   378,     0,   314,    60,     0,
     296,     0,   208,   281,   280,   283,   278,   282,   285,     0,
       0,     0,     0,     0,   265,     0,     0,     0,   229,     0,
       0,   296,   302,   225,   226,   335,     0,     0,     0,    62,
      52,    49,    54,    63,     0,     0,    64,    67,   612,    79,
      72,   640,   640,     0,     0,     0,   814,   380,   387,   173,
       0,     0,     0,     0,   298,     0,     0,     0,  1174,     0,
       0,   206,     0,   245,     0,   163,  1173,     0,  1162,     0,
    1045,  1046,     0,     0,   386,   619,   614,   797,     0,     0,
       0,   768,   772,   770,   751,   852,     0,   475,   600,     0,
     603,   567,     0,     0,   503,   510,     0,   513,   507,     0,
     569,     0,     0,   571,   573,     0,     0,     0,   608,     0,
       0,     0,   986,     0,   530,   532,   535,   534,   537,     0,
     506,   506,     0,     0,     0,   152,     0,   145,   145,     0,
     131,   900,     0,   208,     0,   295,   315,   243,     0,     0,
     227,     0,   233,     0,   267,   268,   266,   228,   296,   301,
     230,   336,     0,    71,     0,    87,   640,     0,   307,   113,
     111,   404,     0,  1053,  1169,     0,     0,   272,   166,  1171,
     261,   254,   255,   256,   257,   258,   259,   260,   275,   274,
     246,   247,     0,     0,     0,  1047,     0,   798,     0,   799,
       0,   869,   605,     0,     0,   599,     0,   501,   499,   502,
     504,   500,     0,     0,   576,   592,     0,   572,   570,   581,
       0,   612,     0,   583,   536,     0,   854,   856,     0,     0,
     442,   441,     0,   125,     0,   607,     0,     0,   147,   147,
     133,     0,   301,   317,     0,   287,   294,   286,     0,     0,
     224,     0,   231,   325,   217,   611,     0,    74,     0,   312,
     379,   383,     0,  1163,     0,  1169,   248,  1174,     0,  1166,
       0,     0,  1053,   800,   865,     0,     0,     0,   598,   601,
       0,   574,     0,     0,     0,   609,   610,   582,   533,     0,
       0,   508,   120,   145,   124,   153,   144,   483,   146,   483,
       0,   325,   273,     0,     0,   251,   217,     0,   242,     0,
      68,    86,   313,     0,   298,  1164,   207,   164,  1167,  1168,
       0,   607,  1475,  1224,  1446,     0,   867,   870,   868,   862,
       0,   511,     0,   517,   591,   857,   858,   505,   147,   486,
     486,   607,   242,   288,   293,     0,   232,   234,   322,   323,
     324,     0,   238,   235,   239,     0,  1169,     0,  1043,     0,
     874,   873,   872,   876,   875,   602,     0,     0,   509,   483,
     136,   135,   132,   208,   250,     0,     0,     0,   240,     0,
     241,   216,  1165,  1053,     0,   512,     0,   486,   319,   221,
       0,   220,     0,   304,   237,   607,   871,     0,   137,   219,
     223,   222,  1044,   516
};

/* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    34,    35,    36,    37,  1902,  1903,  1904,  1610,   823,
    2537,  1611,   824,   825,  1906,    38,    39,  1233,   519,  1548,
    1176,  2282,    41,  1857,  1553,  1861,  2415,  2103,  1856,  1863,
    2518,  2577,  1858,  1554,  2416,  1555,    42,    43,  1301,    44,
     643,    45,  1302,  1260,  1006,   843,  1250,   995,    46,    81,
      47,  1893,  2164,  2590,  1916,  2673,  2312,  2313,  1612,  2632,
    2633,  1895,  1958,  1242,  2626,  1671,  2468,  1616,  1599,  2314,
    1680,  2425,  2193,  1613,  2134,  1672,  2299,  2524,  1312,  1673,
    2525,  2292,  1674,  1285,  1305,  2136,  2634,  1617,  1286,  2165,
    1229,  1675,  2588,  1676,   481,  2317,    48,   511,   512,   634,
     976,   513,    49,   482,   964,   520,    51,  1662,  2339,  1969,
    2340,  1704,  1656,  1004,  1701,  1333,  1289,  1005,   470,  1347,
    1970,  1939,  1334,   521,   728,    54,    55,    56,   568,   562,
     563,  1149,  1526,  1826,   793,   543,   544,   578,  1279,  1183,
    1184,  1561,  1874,  1208,  1209,   802,   803,  2385,  2510,  2386,
    2387,  2250,  2251,  2648,  1196,  1200,  1201,  1574,  1567,  1189,
    2096,  2404,  2405,  2406,  2271,  1204,  1205,   805,   806,   807,
    1213,  1584,    58,  1530,  1833,  1834,  1835,  2074,  2075,  2089,
    2085,  2256,  2393,  1836,  1837,  2378,  2379,  2485,  2092,  1843,
    2397,  2398,  2445,  1715,  1033,  1034,  1354,  1035,   729,  1036,
    1383,   730,  1072,  1038,   731,   732,   733,  1041,   734,   735,
     736,   737,  1055,   738,   739,  1089,  1372,  1373,  1374,  1375,
    1376,  1377,  1378,  1379,  1380,   778,  1437,   741,   742,   743,
    1839,   744,  1144,  1516,  2410,  2506,  2507,  1819,  2058,  2236,
    2377,  2557,  2606,  2607,   745,  1513,  1139,  1140,   746,  2167,
    1142,  1430,  1456,   858,   859,  1046,  1407,  1408,  1433,  1747,
    1440,  1445,  1774,  1775,  1457,  1481,   747,  1390,  1391,  1731,
    1057,   748,   604,   863,   605,  1053,  1475,   756,   749,   750,
    1580,   555,  2389,   639,   943,   751,   752,   753,   754,   755,
    2248,   463,  2578,   978,   783,   861,  1614,  1471,    59,   661,
     609,    60,   955,  1296,    61,  2361,  2203,   966,  1314,  1684,
     483,    62,    63,    64,    65,    66,   585,   998,   522,   999,
    1000,   648,    67,  1007,   650,   651,    68,   549,   550,  1008,
    1160,  1009,    69,   530,    70,   774,   559,   775,   777,   524,
     790,  1852,  1544,    72,    73,   537,   538,    74,    75,   551,
      76,    77,  2358,   525,  1961,   961,   489,   465,   466,   948
};

/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
   STATE-NUM.  */
#define YYPACT_NINF -2346
static const int yypact[] =
{
    4593,  -136,   447, -2346, -2346,  -136, 30539, -2346,  -136,    39,
    2951, 32854, -2346,  4237,  -136, 37021,   800,   189,   220,   270,
   37021, 37021, 33317,  -136,   228, 37484, -2346,  -136, 33780,   -28,
    -106, 37947, 37021,   339,   458,    10, -2346, -2346, -2346, -2346,
   -2346,    27, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346,
   -2346, -2346, -2346,   134, -2346,   198,   185,  -119,    13, -2346,
   -2346, -2346, -2346, -2346, -2346, -2346, -2346,    83, -2346, -2346,
   -2346, -2346, -2346, -2346, -2346, 19284, -2346, -2346, -2346, -2346,
   -2346, -2346, 38410, 37021, 38873, 34243, 39336, -2346,    77, -2346,
   -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346,
   -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346,
   -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346,
   -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346,
   -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346,
   -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346,
   -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346,
   -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346,
   -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346,
   -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346,
   -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346,
   -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346,
   -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346,
   -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346,
   -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346,
   -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346,
   -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346,
   -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346,
   -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346,
   -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346,
   -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346,
   -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346,
   -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346,
   -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346,
   -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346,
   -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346,
   -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346,
   -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346,
   -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346,
   -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346,
   -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346,
   -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346,
   -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346,
   -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346,
   -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346,
   -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346,
   -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346,
   -2346,   151,   455, -2346,    81, -2346, -2346, -2346, -2346,   339,
   37021, -2346,   129,   252, -2346,   291, 39799, -2346, -2346, -2346,
   -2346,  -100, 37021,   448, -2346, -2346, 34706, -2346, -2346, -2346,
     425, -2346, -2346,   294, -2346,    55, -2346, -2346, -2346,   289,
   -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346,   382, -2346,
   -2346, 40262, 40725, 41188, -2346,   264,     7,   567, 18818, -2346,
   -2346, -2346, -2346,    83, -2346, -2346,   270,   270, -2346, -2346,
   -2346,  -216,   283, -2346,   331,   654, -2346, -2346, -2346,   410,
   -2346, -2346,   649,  7805,  7805, 41651,   270, 41651,   467, -2346,
   -2346,   307, -2346, 20681, -2346,   463,   455, -2346,    97,   783,
   10715, 37021,   491, -2346,   501,   491,   511,   517,  -119, -2346,
    4593,   871,   844, 33780,   535,   535,  1004,   535,    61,    95,
   -2346,    60, -2346,   607, -2346, 37021, -2346,   606,   920,  -106,
   -2346,   410,   947,   639,   807,  1002,  4750,  1011,   882,  1019,
     908,  5865, 10715, 24134, -2346,   455, -2346, -2346, -2346,   698,
   -2346,   706, -2346, -2346, -2346, -2346,     7,   936, -2346,   770,
   42114, 42577, 37021,   730,  1148, -2346, -2346, -2346, -2346,   788,
   -2346, -2346,   336,  1085,    24,   756, -2346,  1109,    28, -2346,
    1115,  1023, 10715, -2346,   910, -2346, -2346, -2346,   293, -2346,
   -2346, 25986, -2346, -2346, -2346,   567,   829, -2346, 25986, 10715,
   46281,  1279, -2346,  1094, 37021,   841, -2346, -2346, -2346, -2346,
   -2346, -2346,  1323,   102,  1334, 10715,   864,   102,   102,   870,
    1197, -2346, -2346, -2346,    91,   883,   892, -2346,   105,   105,
   -2346,  1078,   909,   911, -2346,   108,  1380,  1390,   106,   915,
     930,   620,   102, 10715, -2346,   941,   105,   942,   950,   955,
    1396,   956, -2346,  1437,   961,    84,   109,   967,   969, -2346,
   -2346,   118, 10715, 10715, 10715, -2346,  6835, -2346,   455,   270,
   -2346, -2346, -2346, -2346, -2346, -2346, -2346,   983, -2346,   107,
    5089, -2346,  1021, -2346, -2346,  1188, 10715, -2346, -2346,   -43,
   -2346,   121, -2346, -2346, -2346,   455,  1277,  1005, -2346, -2346,
   -2346,   201,  1393, 25060, 25523, 37021, -2346, -2346,   455, -2346,
   -2346, -2346, -2346, -2346, -2346,   466, -2346,    83, 27080,   505,
     491, 37021, 37021,  1458, -2346, -2346, -2346, 33780, 37021, 43040,
    1130, -2346, -2346,  -119,  -119, 10715,  -119,    88,   832,  8290,
   11200,  1336,  1225,   113,   589,  1342, -2346,  1233,    61,    95,
   10715,   501, -2346,  1282, 37021, 31002,   778,   787,  1025,  1106,
    1029,    71,  1429, -2346,  1028, -2346,  1114, 37021, 47192,   169,
   -2346,  1464,   169,   169,   572,  1466,  1122,   148,  1272,   345,
     373,  1028,  1638, -2346, 33780,    58,   568,  1028, 37021,  1124,
     640,  1028, 10715, 10715, 10715,  1044, -2346, 27080,   -92, -2346,
     860,   867, 23670,  1041, -2346, -2346, -2346, -2346, -2346, -2346,
   -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346,
   -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346,
   -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346,
   -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346,
   -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346,
   -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346,
   -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346,
   -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346,
    1128, 37021,  1087,   -91,  1385,  1445, 37021,  1280,  1638,  1287,
    1059,  1515,   706,  8775,  1518, -2346, 43503, -2346, -2346, -2346,
   -2346, -2346, 37021, -2346, -2346, 37021, -2346, 28224,  1073, 37021,
   37021, -2346, 37021, 37021,   526, 43966,   567, 30076, -2346, -2346,
   -2346, -2346,   828,   851, -2346, -2346, -2346, -2346, -2346, -2346,
   -2346, -2346, -2346, 28224, -2346,  2230, -2346, -2346, -2346,  1075,
     542, -2346, -2346,  1125, -2346,  1125,  1125,  1082,  1082,  1089,
   -2346, -2346, -2346,   620,  1125,  1082, -2346, -2346, 47192, -2346,
     465,   473, -2346,  1093, -2346,  1533, -2346, -2346, -2346, -2346,
   -2346, -2346, -2346, -2346, -2346,  5191,   556,   352, -2346,   339,
   -2346, -2346, 10715,   455, -2346,  1098, 27080,  1141, 10715, -2346,
   -2346, 10715,  1100,  1576,  1576, 10715, -2346, -2346, -2346, -2346,
    1712,  1576, -2346,  1576,  1576,  1125,  1125, -2346, 23542, 10715,
   -2346, 22543, 10715, 13625,  9260, 10715,  1187,  1189,  1576, -2346,
    1576, -2346, 10715,  7320, 23542,  1577,  1577,  2590,  5318,  1105,
     455,   455, -2346,  1576, 10715,  2294,  2294, -2346,   132, 46281,
   10715, 10715, 10715, 10715, 27761,  1192,    79, 37021, 10715, 10715,
    1112,   912, -2346, 10715,  1329, -2346,  1116, 10715,  1198,   831,
   10715, 10715, 10715, 10715, 10715, 10715, 10715, 10715, 10715, -2346,
   -2346, 15554,   141,  1430,  1447,  -125,   412, 35169,  7805,  1440,
    5865, -2346,    78,  1440, -2346, -2346, -2346, -2346,   130, -2346,
   -2346, -2346, -2346,  1075, -2346,  1075,  1126, 37021,    97, 31928,
   -2346, 10715, -2346,   628,  1129,  1182,   779,  1575, 37021, -2346,
   21146,  1409, -2346,  1131, -2346, 26446,  1409, -2346, -2346, 14099,
    1261,  1415,  1353, -2346, -2346, -2346,  1149, 27080, 11685, 11685,
   -2346,   555, 27080,   619, -2346, -2346, -2346, -2346, -2346, -2346,
     -25, -2346, 37021,   -38,  1336,   589,   683, -2346, -2346,  1016,
    1154, 44429, 37021,  1424,  1378,  1426,  -142, -2346, -2346, -2346,
   46281, -2346, 37021, 37021, 44892, 45355, 28687, 37021, 28224, -2346,
   -2346, -2346, -2346, 37021,   155, 37021,  4895, -2346, -2346, -2346,
     169, -2346, -2346, -2346, -2346, -2346, 37021, 37021, -2346, -2346,
     169, 37021, 37021,   169, -2346,  1302, 37021, 37021, 37021, 37021,
    1368, 37021, 37021,   -57,   -57,  1364, -2346,  9745,  1167, -2346,
   10715, 10715, -2346, 10715,  1338, -2346,   704, -2346,  1381,    42,
    1220, 37021, 37021,   750, -2346, -2346, -2346, -2346, -2346,  1176,
    1511, -2346,  1638,  1512, 31465,   532,   859,  1217, -2346,   719,
   10715,  1400, -2346, -2346,  1386,    24, -2346, -2346, 28224,    28,
   -2346,  1387,    98, -2346,  1408,   706,  1637, -2346, -2346, -2346,
   -2346, -2346, -2346, -2346,   723, 18353, -2346, -2346,  1639,   270,
    1639,   592, -2346, -2346,  1639, -2346,  1639, -2346, 25986, -2346,
   10715,  1642, 37021,  1209,  1214, -2346, -2346, -2346, -2346, -2346,
   -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346,
   -2346,  1576,  1276, -2346,  1288,  1293,  1298, -2346, -2346, -2346,
   -2346, -2346, 46281, -2346,   549, -2346,   728, -2346, 10715, 10715,
      15, -2346, 26530,   736, 10715,  1219,  1221,   784, -2346, -2346,
   -2346, -2346, -2346, -2346, -2346, -2346, -2346,  1229,  1547, -2346,
    1231,  1235,  1236, -2346, -2346,  5010, -2346, -2346, -2346, -2346,
   -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346,
    1237,  1232, 26574,  1238, 13625, 13625,  6835,   929, -2346, 13625,
    1239, -2346,   793, 26464,  1241,  1242,  1259,  1263,  1248,  1251,
   26803, 10230, 10715, 10230, 10230, 26939,  1241,  1252, -2346, 10715,
    1253, 23014, -2346, -2346, -2346,  3024,  3024,  3024, 23542, -2346,
   -2346, -2346,  1264, -2346, 13625, 13625, -2346,  1968,  1981,  6835,
   -2346, -2346,  1572, -2346,   645, -2346,  1269, -2346, -2346,  2535,
   -2346, 22543, 27158, 10715,    92, -2346, 10715,  1112, 10715,  1341,
    3024,  3024,  3024,    68,    68,   142,   142,   142,   702,   412,
   -2346, -2346, -2346,  1270,  1281,  1283,  1477,   956, 10715, -2346,
     763,   785, 37021,  2795,  3969,  4529, -2346, -2346, -2346, 16958,
    1304,   -92,  1304,  1576,  2294, -2346,   501, -2346, -2346, -2346,
   27080, -2346,   339, 16958,  1327,  1339,  -120, 19750,  1494, -2346,
   37021, -2346, 37021, -2346,   -33,  1301, -2346, 10715, -2346, -2346,
    3281,  1306,  1496,  1498,   899,   899,   555,  1499, -2346, -2346,
    1355, -2346, 10715,   662, -2346,   903, -2346, -2346, -2346, -2346,
    1295, -2346, -2346,  1545, -2346, -2346, -2346, -2346,  1382,  1028,
   10715,  1520, -2346,    80,  1303,  1640,   343,  1597, 37021, -2346,
    1519, -2346,   167,  1653,    98,  1657,    98, 28224, 28224, 28224,
     806, -2346, -2346,   270, -2346, -2346,   816, -2346,   358, -2346,
   -2346, -2346,  1404,   680,  1028,  1638, -2346, -2346, -2346, -2346,
   -2346, -2346, -2346,    64,   733,  1028,  1410, -2346,  1412, -2346,
    1413,   752,  1028, -2346, -2346,  1328,  1335,  1343, 10715, -2346,
   -2346, 27080, 27080, 27080,  1340, -2346,   115, -2346, 37021, -2346,
   -2346, -2346,  1338, 37021,   706, -2346,   608, 37021, 37021, 37021,
   37021, -2346, -2346, -2346,  1344,  1324, -2346, 46281,   -68,  1542,
    1551, 37021,  1388,  1029,  1787, -2346, 27080,  1676, 37021, -2346,
   -2346, -2346, 37021, -2346,  1681,   339, -2346, 28224, -2346, 29613,
   -2346, -2346, -2346, -2346,   270, -2346,   270,  1564, 37021, 24597,
     270,   270, -2346,  1357,  1214,   822, 46281,  1576,    69,  1350,
     703,  1102,   433,   821, -2346, -2346, -2346,   830, 27022, 10715,
   -2346,  1700, 46281, -2346, 23032, -2346, -2346, -2346, -2346, 10715,
   -2346, -2346, -2346, 10715, -2346, 22543, 10715,  1675, -2346,  1835,
    1835,  5318, 46281, 13625, 13625, 13625, 13625,   528,   942, 13625,
   13625, 13625, 13625, 13625, 13625, 13625, 13625, 13625, 14584,   286,
   -2346, -2346, 10715, 10715,  1687,  1675, -2346, -2346, -2346,   204,
     204, 46281,  1366,  1241,  1371,  1372, 10715, -2346,   455, 23060,
   -2346,  2294, 10715,  1210,  2047, 10715,   834, 10715,  1691, -2346,
   -2346,  1384, -2346, -2346, 46281, 10715,  1379,  2552, 13625, 13625,
    2614, -2346,  2778, 10715,  6835, -2346,  1364,  1422, 21611, -2346,
    1478,  1478,  1478,  1478, -2346, -2346, 37021, 37021, 37021, 17423,
    1704, 16492, 35632,  1389,   610, -2346, 35632, 36095, -2346,  1403,
   -2346,   455, 10715,  1699,  1397,  1699,  1399, -2346, -2346,  1406,
    1389, 10715,  1538, -2346, -2346, -2346,  1449, -2346,   839, -2346,
    1801,  1538, -2346,   874, -2346, 21146,  1327, 10715,   455, -2346,
    1418, -2346,  1306,    90, -2346, -2346, -2346,  1612, -2346, -2346,
   -2346, 37021, -2346, 37021, 23098,  1744, -2346, 37021, 37021, 37021,
   -2346, 37021,   876,   699,  1421, -2346,   699,  1725,   494,  1029,
     148,  4041,   -51, -2346, -2346, -2346,  1485, 37021, -2346, 37021,
   -2346, -2346, -2346, -2346, -2346, 28687, -2346, -2346, -2346, 28224,
   22079, 28224, 37021, 37021, 37021, 37021, 37021, 37021, 37021, 37021,
   37021, 37021, -2346, -2346, -2346,  1364, -2346, -2346, -2346,   373,
   -2346, -2346,   115,  1423,  1217,  1445, 45818,   880,  1638,  1425,
    1869, -2346,   532, 31465, -2346, -2346, -2346,  1830, -2346,   264,
     158, -2346, -2346,   339, 37021,  1486,    98, 37021, -2346,   885,
   -2346, -2346, -2346, -2346, 37021,  1431, -2346,  1431, -2346, -2346,
    1576, -2346, 37021, -2346,  1435, -2346,  1438, -2346, -2346, -2346,
   -2346, -2346, -2346, -2346, -2346, -2346, 10715, 27080, -2346,  1427,
   -2346, 27080, 23142, -2346, 27080,  1687, -2346,  2680,  2680,  2680,
    1836,  1746,   117,  1439,  2680,  2680,  2680,   213,   213,   133,
     133,   133,  1835,   286, 27080, 27080, -2346, -2346, -2346, -2346,
    1441, -2346, -2346, -2346,  1241, -2346, -2346,   714, 10715, 10715,
    1968, -2346, 27299, 10715, 46281,   886,  1968,   161, 10715,  2630,
    2949, 10715, 10715,  4039, 23180,  1450, 10715, 46729, -2346, -2346,
   37021, 37021, 37021, 37021, -2346, -2346, -2346, 35632, 36095,  1452,
   16026,   610,  1453, 36558, -2346,  1529,  1456, 16958,  1709,  1654,
   -2346, 16958,  1654,   104,  1654,  1727,  1529, 20216, -2346,  1529,
    1457,  1658, -2346,   657, 27080,  1890,  1766,   270,  1766,   270,
   -2346, 27080,  7805, -2346,   339,  1164, 37021,   455,   -44, -2346,
    1474, 37021, -2346,  1538, 27080, 22543, -2346, -2346, -2346, -2346,
   -2346, -2346, -2346, 37021,   887, -2346,   895,   699, -2346,  1502,
   -2346,   137,  1752,    22, -2346, 28224,  1815,   797, -2346,  1764,
    1682, -2346,   169, -2346, 10715,   797,  1683,   153, 37021, -2346,
   -2346,  1994, -2346, 46281,    98,    98, -2346, -2346, -2346,  1418,
   47192,   828,   851, -2346, -2346, -2346, -2346, -2346, -2346,   352,
   -2346,  1480, -2346, -2346,  1559, -2346,  1562, -2346, -2346, -2346,
   -2346, -2346,  1470,   829,    34, 37021,  1930,  1706,  1484,  1217,
   -2346, 31465,   996,   537,  1551, -2346,   101,  1388, -2346,  1864,
    1527,  1695, 37021,  1491, -2346,  1942, -2346, 29613,  1431,  1500,
   46281, -2346, -2346, 27080, -2346, -2346, -2346, 13625,  1814,  1501,
   46281, -2346,  1968,  1968, 27299,   906, -2346,  1968, 10715, 10715,
    1968,  1968, 10715, -2346, -2346, 23508,  1686, -2346, -2346, -2346,
   -2346, -2346, -2346, -2346, 29150, 35632, -2346,  1504, -2346, 32391,
   -2346, -2346, 37021,   610, 16958, -2346, -2346,  1227, -2346, 16958,
    1770, -2346, 16958, -2346, 37021,  1506, -2346, 37021, -2346, 12170,
   10715,  1548, -2346,  1548, -2346,  1005, -2346,  -120, -2346, -2346,
    1911, 17888,  1871, 10715, -2346, -2346,  1521,   699, -2346,  1673,
    1502,  1523, -2346, -2346, -2346, -2346, -2346, -2346, -2346,   927,
    1524, 37021, 37021, 13625, -2346,   797,   145,   190, -2346,  1786,
   37021,  1502, -2346, -2346, -2346, -2346,  1896,  1976,  1855, -2346,
   -2346, 27080, -2346, -2346,  1576,  1576, -2346, -2346,  1941, -2346,
   -2346,   352,   485, 22079, 37021, 37021, -2346, -2346, -2346,   373,
    1894,   928,   339,  1874, 31465,  1982,  1536, 37021,  1388,    99,
      99, -2346,  1677, -2346,  1678, -2346, -2346,   183, -2346, 37021,
   -2346, -2346, 17888,   339, -2346, -2346, -2346,  3564, 13625, 46281,
     932, -2346,  1968,  1968,  1968, -2346,  1972,  1364, -2346,   933,
    1991, -2346, 37021,   -84,   -62,  1549,  1557, -2346, -2346,   934,
   -2346, 10715,  1561, -2346, -2346, 16958,  1227,   939, -2346, 46281,
   37021,   948, 46281,  6350,  1541, -2346, -2346, 27080, 27080, 37021,
    1605,  1605,  1611, 37021, 10715, -2346,   953,  1977,    45,   -36,
   27080, -2346, 37021, -2346, 28224, -2346,   699, -2346, 28224, 10715,
   -2346,   146,  1836,  2009, -2346, -2346, -2346, -2346,  1502,   706,
   -2346, -2346,  1868, -2346, 37021,  1627,   552,  1644, -2346, -2346,
   -2346,   829,   270,  1217,  1527, 37021,   339,   532,   264, -2346,
   -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346, -2346,
   -2346, -2346,  1993,  1777,  1995,  1486,   975,  3564,   976, -2346,
   10715,   -16,  1403, 29150,  1578, -2346,   977, -2346, -2346, -2346,
   -2346, -2346, 37021,   919, -2346, 27080, 37021, -2346, -2346, -2346,
   37021,  1941,   984, -2346, -2346, 12170,  1579, -2346,  2034,  1722,
   -2346, -2346,   339, -2346, 23589,  1304, 17888, 37021, 37021, 37021,
   -2346,  1708,   706,   699,   988, -2346,  1602, -2346, 23627,  1807,
   -2346,  1897, -2346,  1845,  1604, -2346, 10715, -2346,  1672, -2346,
   -2346, -2346,  2052, -2346,  1607,  1527,  1551,  1388,  1810, -2346,
    1811,  1613,  1217, -2346,  1241, 12655, 12655,  1614, -2346, -2346,
   37021, -2346,   989,  1617,   994, -2346, -2346, -2346, -2346, 37021,
    1619, 32391, -2346,  1977, -2346, -2346, -2346,   206, -2346,   206,
   21146,  1845, -2346, 28224, 22079,  1834,  1604,   446,  1826,  1638,
   -2346, 27080, -2346,   339, 31465, -2346, -2346, -2346, -2346, -2346,
   17888,  1304, 15069,  1759,   164, 26492, -2346, -2346, -2346, -2346,
     998, -2346,  2098,  1776, -2346, -2346, -2346, -2346, 37021,  1306,
    1306,  -197,  1826, -2346, -2346,  1915, -2346, -2346, -2346, -2346,
   -2346,    41,  1837, -2346,  1839,   665,  1527,   999, -2346,  2080,
   -2346, -2346, -2346, -2346, -2346, -2346,  1635,  1641, -2346,   206,
   -2346, -2346, -2346, -2346, -2346,   309,   309,  2002, -2346,  1698,
   -2346, -2346, -2346,  1217, 13140, -2346,  2115,  1306,   699, -2346,
    2105, -2346,    86, -2346, -2346,  1304, -2346,  1645, -2346, -2346,
   -2346, -2346, -2346, -2346
};

/* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -2346, -2346, -2346,  1560, -2346, -2346, -2346,   225, -2346,   888,
   -2346,   216,  -534,   531, -2346, -2346, -2346,  -777,    16, -2346,
   -2346, -2346, -2346,    37,   272, -2346,  -372, -1681,  -135, -2346,
   -2126, -2280, -2346,  -435, -2194, -1479, -2346,  -935,   202, -2346,
   -1890, -2346,  -595,  -830,  -632,  -819, -2346,    -1, -2346,  1246,
    -927, -1565, -2177,  -431, -2346,  -505, -2346,  -275, -1559,  -477,
    -463, -2346, -2058,  -781, -2346,  1345,  -189, -2346,   569, -2346,
   -1876, -2346, -2346,   559, -2346,  -797, -2346, -2346, -1644,   219,
    -414, -1619, -2089,   519,  -604, -2346,  -454,   261, -1537, -2346,
     588, -2346,  -399, -2346,  -475, -1914, -2346, -2346, -2346,  1211,
    -611, -2346, -2346, -2346, -2346,    32, -2346, -2346, -2346, -2346,
   -2346,  -995,   523, -2020, -2346,   490, -2346, -2346, -2346, -2346,
     -18,   249, -2346,    44,   359,   -27,   -12,    17,    31,    43,
    1411,  1442, -2346,  -626,   681, -2346, -2346,  -568,   -47, -2346,
     637, -2327, -1818,  -409,   980,  1394,  1398,  -290,  -206, -2346,
    -364, -2346, -1014, -2346, -2346,   638,  1020, -1090, -1077, -2346,
     367, -2346,  -292, -2346,   119,  -383,  1001, -2346,  1416, -2346,
   -2346, -2346, -2346, -1032,   673, -1680,   388, -1736, -1672,   152,
     147,  -804,  -172,    21,   396,  -254, -2346, -2346,  -251, -1511,
   -2120,  -265,  -264, -2346, -2346, -1038,   898,  -817, -2346, -2346,
    -663,  1190, -2346, -2346, -2346,  1789,  2015, -2346, -2346,  2149,
    2162, -2346,   162,  2312,  -658,  -683,  1169, -1010,  1180,  -998,
    -983,  -971,  1181,  1196, -1047,  2524, -1382,  -141,    11, -2346,
   -2083,  -284, -2346, -2346,   -21, -2346,  -323, -2346,  -313, -2346,
   -2346, -2346,  -297, -2345,  1123, -2346, -1052, -2346,  3403,   707,
   -2346, -1428,  -545,  -575,  -803, -1734, -2346, -2346, -2346, -2346,
   -2346, -2346,  -924, -1586,  -250,   772, -2346, -2346,   881, -2346,
   -2346, -2346,  -559,   991,  -526,  -703,   782, -2346,  -539,  1133,
   -2346,  1414,  -509,  1507,  -855,    36, -2346,  -465,   221,  1623,
   -2346,  2134,  -507, -1035,  -756, -2346,  -581, -2346, -2346, -2346,
    -972, -2346,   613, -2346,  -921, -2346,  -203, -2346, -2346, -1888,
   -2346, -2346, -2346, -2346, -2346, -2346,  -374, -2346,  -437,  -420,
   -2346, -2346,    -7,  -637,  1296, -2346, -2346,   790, -2346,   938,
   -2346,   543, -2346, -2346, -2346,  1121, -2346, -2346, -2346,    35,
    1495,   418, -2346,  1127, -2346, -2346, -2346, -2346, -2346,   285,
   -2346,  -918, -1792,    67, -2054,  -947,    -6,  -343,  -322, -1855
};

/* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
   positive, shift that token.  If negative, reduce the rule which
   number is the opposite.  If zero, do what YYDEFACT says.
   If YYTABLE_NINF, syntax error.  */
#define YYTABLE_NINF -1529
static const yytype_int16 yytable[] =
{
     464,   842,  1045,   638,   636,   757,   567,   952,   579,   523,
    1263,  1247,  1384,   808,  1001,   779,    40,   460,  1228,   994,
    1294,  1845,   944,  1264,  1100,  1066,  1067,   981,  1295,  1429,
     768,    57,    50,  1091,  1297,    71,  1896,  1298,  1326,  1239,
    1235,   644,   461,  1080,    52,   581,   949,    57,  1911,   554,
    1913,  1275,  1749,  1750,  2116,  1217,  2186,  1769,  1462,  1463,
    1400,  1892,   841,  1806,   847,  2170,   851,    78,  1268,  2197,
    2045,  1464,  1402,  1864,   582,   565,  2194,  1385,   670,  1109,
     645,   973, -1011,  -989,  1010,   973, -1012,  1403,   468,  -681,
   -1011, -1011,  1793,  1794, -1012, -1012, -1528,   984,   647,  1404,
     769,  2088,  2346,  1158, -1528, -1528,   598,  -673,  1115,  1576,
    -640,  -678,   528,  -653,  -681,  -678,   670,  2517,  1473,   590,
     528,  1532,  1317,  -668,  1579,  2460,   528,     3,     4,  1157,
    1947,  1473,  1231,  1529,  -428,   528,  2351,  2296,  1231,   557,
    1117,   953,  1266,  2355,  1752,   571,  1220,  2401,  1924,   655,
    1729,  2071,  -173,  1109,  -388,   973,  2448,  -173,  -883,  2655,
     629,  2380,   670,  2337,  2086,  -883,  1147,  1510,  2476,   801,
    1045,  1975,  1977,   988,  1511,   653,  2461,   815,   670,   472,
    2109,  1099,  1115,   816,  2462,  -431,   996,  -902,  2026,  1897,
    1190,   576,  1600,   996,  -902,   804,   654,  1248,  2417,  2680,
    1251,  1252,  1101,   574,  1154,   988,   528,  1954,  1660,   949,
     670,  1351,  2300,  2463,  1117,  2487,  -475,   797,  1002,  2352,
    1517,  -475,   798,   619,  1752,  -428,   576,  2520,  1582,  1152,
     572,  2322,  1290,  2280,  2353,  1191,   473,  2489,    24,  2579,
     529,  2472,  1558,  1223,  1842,  2218,  1187,  2128,  2117,  2473,
    2619,  -474,  2620,  2293,   541,   658,  -474,  2639,   620,  2303,
     946,  2434,   770,  2198,   771,  1216,   659,   575,    79,   797,
    1854,  2079,    28,  1173,  1105,   528,  -431,  1273,  1274,  2417,
    2502,   947,  2464,  1597,  2490,  1900,  -475,   799,   817,  1865,
    1278,   621,  2519,  2465,  2459,   526,   996,  1752,   996,   996,
    1898,  2345,  2555,  2080,  1855,  2436,  1240,   539,   653,  2118,
    2225,    80,    30,  2151,  1155,   653,  2305,  2003,  2259,  2676,
    2201,  -474,  2667,  2294,  2641,  2127,   527,  2082,  1559,   654,
    2556,  2435,  2088,  1583,  -475,   800,   654,   622,  2649,   799,
    1598,   574,  1193,   576,  1724,  1706,  1291,  1188,  1091,  1710,
    2124,  1711,  2126,  2681,  1066,  1067,   542,  1518,  1307,    53,
     591,   974,  1080,    33,   996,   974,  2669,   996,   996,  -474,
    1045,  2007,  2008,  2009,  2010,    53,   560,  2014,  2015,  2016,
    2017,  2018,  2019,  2020,  2021,  2022,  2023,  2521,  1309,  2219,
    1225,  2433,   566,  2488,  1277,  2242,   944,  2253,  1194,  1214,
    2380,  2257,   477,  1169,   478,   575,  2637,  2624,  2529,  1022,
    2354,  -428,  2474,  2308,  1238,  2491,   580,   968,  2199,  2216,
     653,   653,  1335,  1109,  1592,  1215,  2049,  2050,   480,  1350,
    1156,  2540,  2285,  2417,    53,   974,   818,  2208,  2281,  1429,
    2610,   654,   654,  1148,  1661,  2084,   630,  2618,   818,  2297,
     573,  1045,  1115,  1865,   558,  1389,  2309,  2437,   569,  2338,
    1267,   969,  -431,  1690,  2656,   636,  1925,  1474,  1316,  2642,
    1319,  2310,  -428,   762,  1649,  1576,  1322,   577,  2170,  2466,
    1808,   576,  2467,  1264,  1117,   606,  2370,  1847,  2596,  1877,
     820,   567,  1241,  2597,  1387,   570,  1937,  1938,  1226,   583,
      57,   607,  1899,  1900,   610,  2346,  -883,  1386,  1871,  2381,
     975,   649,   652,   608,   980,  1512,  1393,  2417,   584,   821,
    1397,   469,  1866,  -431,   612,   602,   613,  1330,  1332,   603,
    1086,  1901,   772,  1470,   809,  -902,  1054,   464,   464,  1442,
    1444,  1387,   949,  1135,  1136,  1137,  1138,  1649,    57,  1327,
    1985,   773,  1087,  1238,   464,  1086,   581,  2287,   602, -1011,
    -989,   791,   603, -1012,  2311,  2542,  1088,   647,  2547,  2670,
    1849,  1101,  1045, -1528,  2390,  1531,  2298,  1087,  -428,  2394,
    1240,  2546,  2396,   822,  -673,   582,    40,  1065,  -678,  1104,
    1071,  1090,  1258,   949,   789,   464,   464,   945,  1395,  1396,
    -668,    57,    50,  1150,   780,    71,  1410,  2138,  1411,  1412,
    1476,  1767,  1533,  2628,    52,   577,  1259,  -428,  1626,  -428,
    1138,  -173,  -173,  1448,   616,  1449,  2324,  2325,  1629,  -431,
     970,  1632,  2284,   601,   946,  2478,   464,    78,  1460,  1600,
      82,   624,   992,   993,   653,   652,  2671,   614,  2341,   615,
    1086,  1625,   652,   464,  1048,   947,  2011,  1618,   516,  1203,
     946,   815,  2543,   792,  2601,   654,   627,   816,  -431,   464,
    -431,  2423,  1087,  2672,   992,   993,  1253,  2139,  1983,  1363,
    1364,   947,  2349,  1075,  1076,  1589,    57,  2286,  1764,  1765,
    1766,  1767,  2440,  1429,  1999,  1262,    24,   464,  1702,   567,
     828,   628,  2078,  1700,  1689,  1645,  1646,  1647,  1691,   763,
    1988,  1693,  1624,  1109,  2006,  2497,   464,   464,   464,   829,
     464,  1725,  1950,  1989,  1045,  1109,   631,  2426,  2350,  2170,
      28,  1635,   971,  1575,  1575,   632,  1642,   944,  1990,  1992,
     464,  2629,  1115,  2030,  2036,   797,   642,   656,   657,  1627,
    1991,  1993,  1994,  2595,  1630,  1788,  2140,   652,   652,  1762,
    1763,  1764,  1765,  1766,  1767,   660,  1241,   759,  1597,   830,
      30,   946,   817,  1798,  1117,  2675,   986,  2079,   764,   987,
    1848,  1181,  1182,    31,  1186,   996,  1117,  1367,  1368,   464,
    2012,   664,   947,   464,   464,   996,   662,    83,   996,  1799,
    2013,  2650,  2651,  1240,   464,    84,  1264,    32,   789,  2080,
     582,   582,  1254,   582,  2130,   799,  2630,  1258,  1666,  2532,
    1255,    33,  1048,  2005,  2081,  1889,  2315,  1238,    53,  1920,
       3,     4,  1329,  2082,  1065,  2367,   977,   670,    85,  1059,
    1060,  1259,  1921,  1727,  2662,  1935,   464,   464,   464,  2678,
    2316,  2027,  1231,  1868,  1707,  1331,  1926,   831,  2523,  1708,
     670,  1231,  1232,   800,  1077,  1265,  2083,   663,  1871,  2527,
     996,  1234,   997, -1020, -1020,  1240,    53,   566,  1494,   997,
    1280,  1281,  2166,   996,    86,  1133,  1134,  1135,  1136,  1137,
    1138,   516,  1545,   946,   664,   946,  2131,  1955,  1827,  1828,
    1577,  1578,  1962,  1875,   815,   832,  1719,  1783,   670,  1709,
     816,  1086,  1800,   833,   947,  1240,   947,  1801,  1269,  1086,
     818,  2432,   472,  2383,    24,   834,   665,   580,  2384,    53,
     815,   619,   761,  1087,  1796,   602,   816,   669,   767,   603,
    1752,  1087,  1438, -1055,  1753,  1754,  1755,  1088,   776,  1167,
    1102,  2084,  1168,  1365,  1366,  1090,   835,   464,    28,  2132,
    1106,  2133,  2447,  1844,  -521,  -521,   620,  1065,  1240,  1318,
     819,   945,  1151,  1099,   820,   946,  1678,   781,  1679,   473,
     649,   652,  1159,   782,   997,   997,  2477,  1240,  1170,  1241,
    1272,  1171,   653,  1908,   784,  1910,   947,   945,    30,  1946,
     785,   837,  1495,   821,  2574,   653,  1681,  -525,  -525,  1323,
    1294,    31,  1171,   654,    53,   817,  1496,    57,  1295,  1045,
    2205,  1497,  1048,   838,  1297,  1349,   654,  1298,  1350,  2538,
    1923,  1065,   475,  1318,  1065,    32,  1318,   787,   815,  1381,
    1482,   817,  1382,   840,   816,   622,   464,  1190,  1568,    33,
    1238,  1069,   464,   788,  1802,   464,  1498,   795,  1045,   464,
    1944,  1241,  1971,  1429,  1803,   606,  1483,   822,  1846,  1546,
    2142,   812,  2263,   464,  1045,  2266,   464,   464,   464,   464,
      57,   607,  2149,  1927,   610,  1097,   464,   464,  2668,   810,
    2638,  2125,  1191,   608,  1045,   814,  2028,  2029,   464,  1876,
    1876,  1241,  1931,  1048,   464,   464,   464,   464,   945,  2183,
    2652,  1541,   464,   464,   980,  2328,  1335,   464,  2141,  1756,
    2150,   464,  1238,  1045,   464,   464,   464,   464,   464,   464,
     464,   464,   464,   813,  2332,   464,    24,   602,   826,  -989,
    1757,   603,   464,  2347,   464,   477,  1045,   478,  2661,   817,
     827,  1192,   580,   580,  1241,   580,  2107,    24,  1820,   844,
    1821,   773,  1238,   818,  2682,   464,  1587,   848,   479,  1171,
      28,   480,  2366,  1241,  1484,  1367,  1368,  1059,  1060,  1485,
    1822,   950,  1823,   464,  1486,  1966,  1077,  1657,   951,   818,
    1658,    28,   464,   464,  2060,  2061,  2062,  2063,   954,  1193,
    1499,  1782,  1685,  1784,  1785,  1350,  1696,   956,  1758,  1697,
      30,  1726,   963,   845,  1171,  1238,    24,   820,   669,  1733,
    1549,  1752,  1171,    31,  1048,  1753,  1754,  1755,   965,  1387,
     945,    30,   945,   972,  1238,   517,   967,  1413,  1414,   849,
     977,  2034,  2038,   820,    31,  1840,   846,    32,  -524,  -524,
      28,    87,  1984,  1986,   467,  1194,   794,   979,   796,  1840,
     514,  1547,  1045,   982,   946,   946,   946,  1737,    32,   540,
    1171,   464,   850,   552,   464,   464,  1771,   464,  2258,  1171,
    2261,  1871,   518,  1357,  1358,   947,   947,   947,  2163,  1914,
      30,  1409,  1915,  1438,  1438,  2166,  2446,   818,  1438,  1918,
     983,   985,  1919,    31,   464,  1981,  1163,  1165,  1982,  1387,
     822,  1003,   945,  1995,  1049,  2093,  1171,  2041,  1050,  2078,
    1171,  1487,  2105,  1052,   815,  2106,  2288,    32,  -644,   652,
     816,  1488,  2149,  1438,  1438,   758,   822,   760,  1618,  -651,
    2171,    33,   652,  1351,   464,    53,  1058,  1588,  1363,  1364,
    1682,   820,  1061,    24,   946,  2204,   653,  2110,  1062,  2129,
    2111,  2501,  1658,  2189,  2501,  1063,  1658,  2182,  2206,  2226,
    2289,  2207,  1382,  1658,  1064,   947,  1048,   654,  2290,  1534,
     821,  1658,   464,   464,  1068,  -641,  1045,    28,   464,  2371,
     815,    33,  1382,  1070,  2079,  -642,   816,  1073,  1759,  1760,
    1761,  -645,  1762,  1763,  1764,  1765,  1766,  1767,    53,   567,
    2427,  2453,  1074,  2428,  1658,  2479,  2482,  2494,  1382,  2483,
     980,  1757,  2499,  1079,  1081,  2500,  2080,    30,   464,   464,
     464,  2503,  1082,   464,  2500,   817,  2515,  1083,  1084,  2516,
      31,  2081,  -643,  1085,   822,   464,   464,   464,   464,  1092,
    2082,  1093,   567,   464,  2277,   996,  1367,  1368,  2552,  2553,
    2561,  2516,  1382,   980,    32,  1103,  1143,  2567,   464,   464,
    2500,  2582,  2611,   464,  2583,  2612,  1145,  2614,    33,  1480,
     980,  2645,  2663,  2083,  2500,  2516,  1147,   464,  1161,  1758,
     464,  1148,   464,  1174,  1180,  1045,   593,   798,   596,   800,
     600,   817,  1045,  1210,  2391,  1212,  1218,  1236,  1237,  2451,
    2320,  1238,   464,  1243,  1244,  2209,  1245,  1249,   487,  1256,
     567,    24,   515,   464,  1257,  1261,  1271,  1276,   532,  1283,
    1284,  1288,  1871,  1292,   949,    53,  1293,   464,   564,   564,
    1838,  1304,  1300,  2329,  2330,  1840,  2166,  1840,  1387,  1303,
    1306,   464,  1045,  1310,  1838,    28,   997,  1318,   606,  1054,
    1705,  1348,  1045,  2275,  1065,   461,   464,  1353,  2084,   997,
    1971,  1071,   946,    57,   607,  1352,   946,   610,   946,   461,
    1388,  1389,  1394,   818,   464,   670,   608,  1446,  1109,  1447,
     594,  1459,  1472,   947,  1479,    30,  1490,   947,  1491,   947,
    1493,   945,   945,   945,  1515,  1514,  1529,  1543,    31,  1535,
    1550,  1542,  1438,  1438,  1438,  1438,   575,  1557,  1438,  1438,
    1438,  1438,  1438,  1438,  1438,  1438,  1438,  1438,  1569,   462,
    1570,  1571,    32,  1633,   488,  1572,  1590,   820,   488,  1594,
    1595,  1596,   464,   531,   488,   536,    33,   576,   536,   818,
    1650,   556,  2392,  1655,   488,   488,  1659,  1663,  1667,  1668,
    1669,  1683,  1687,  1688,  1692,    53,  1634,  1438,  1438,  1725,
    1694,  1048,  1695,   828,  1703,  1045,  1713,   996,  1720,  1759,
    1760,  1761,   996,  1762,  1763,  1764,  1765,  1766,  1767,  1717,
    1721,   945,   829,   652,  1718,  1722,  1330,  1332,   536,  1640,
    1723,  2163,  1735,   820,  1736,   556,   488,   556,   556,   556,
    1048,  1045,  1738,  1739,  1740,  1398,  1745,   528,  1741,  1742,
    1744,  1748,  1770,   464,  1777,  1776,  1048,  1171,  1778,  1792,
     822,  1779,  1641,   464,  1780,  1787,  1790,   464,  1797,  1682,
     464,  1045,   830,  1813,  1045,  1842,  1048,   464,   464,   464,
     464,  1804,  1814,   464,   464,   464,   464,   464,   464,   464,
     464,   464,   464,  1816,  1818,  1817,   464,   464,  1851,  2055,
    1853,  1860,  1867,  1873,  -526,  1048,  -527,  1878,  1879,  1882,
     464,  1881,  1885,  1725,  1883,  1887,   464,   567,  1888,   464,
    1891,   464,   946,  1840,  2430,  1097,   822,  1840,  1048,   464,
    1894,  1907,   464,   464,   567,  1909,  1922,   464,   464,  2481,
    1953,  1932,  1928,   947,  1929,  1930,  1264,  1956,  1933,  1355,
    1356,  1936,  1963,   464,  1964,   464,  1934,  1952,  1957,  1967,
     831,  1974,  1960,  1987,  1917,  2533,   464,  1980,  1097,  1998,
    1838,  1773,  1838,  2526,   669,   464,  1752,  1752,  1772,  2031,
    1037,  1753,  1754,  1755,  2032,  2033,  1480,  2043,  1099,  1330,
    1332,   464,  2047,  2056,   653,   461,  2044,   461,   996,  1825,
    2069,  2091,  1815,  2486,  2095,  2077,  2102,  1940,   832,  2104,
    2097,  2300,  2099,  2108,   611,   654,   833,  2301,  1832,  2100,
    2119,  2486,  2123,  1357,  1358,  2137,   623,  2153,   834,  2302,
    2115,    53,  1832,  2135,  2192,  2185,   566,  2191,  2196,   945,
    2214,  2202,  2217,   945,  1048,   945,  2211,  1658,  2581,  2212,
     997,  2220,  2249,  2254,  2221,  1972,  1045,  1973,  2303,   835,
    2304,  1978,  1979,  2234,  2244,  2554,  2245,  2535,  2252,  2267,
    2255,  2262,  2268,  2269,  2270,  2283,  2291,  2295,  2318,  2319,
    2323,  2333,  2163,  2336,  1359,  1360,  1361,  1362,  1363,  1364,
    1840,  2334,  1365,  1366,  2335,  2342,  2344,   766,  2343,  2356,
    1840,  2357,  2359,  2362,   837,  1840,  1108,  2363,  1840,  1109,
    2368,  2365,  2376,  2369,  2395,  2305,  2382,  2564,  2400,  1108,
     464,  2409,  1109,   626,  2635,  2413,   838,  1840,  2422,   811,
    2419,  2438,  2526,  2443,  2421,  2424,  2429,  2200,  1115,  2441,
    2576,  2442,  2306,  2444,  2452, -1529,   840,  2456,  1037,  2457,
     641,  1115,  2455,  2470,  2471,  2480,  2484,  2505, -1529,   828,
    2509,  2492,   464,   464,   958,   960,   962,   464,  1048,  2493,
    1117,  2512,   464,  2496,  2531,   464,   464,  1757,   829,  2517,
     464,  2534,  2536,  1117,    53,   669,  2539,  2549,  1752,  2548,
    2560,  2550,  1753,  1754,  1755,  2569,  1367,  1368,   564,  2570,
    2571,   464,  2580,  2584,  2437,   464,  1438,  2307,  1840,  2039,
    2586,   946,  2308,  2587,  2592,   946,  2589,  2593,  1838,  2594,
    2598,  2599,  1838,   556,  2625,  2600,   464,  2609,   830,   618,
    2613,  2057,   947,  2631,  2640,   556,   947,  2646,  2647,   488,
    2654,  1840,  2664,   461,  2657,  1758,  2659,   461,  2665,   996,
    2655,  2656,  1795,  2666,  2677,  2309,  2679,  2152,  2683,   945,
     786,  2156,  1620,  1905,   635,   488,   488,  2112,   464, -1529,
    2310,  2168,  2412,  2279,  2575,  2621,  2326,  1048,  2276,  2278,
    2190,  2674, -1529, -1529,  1048,  2627,  2530,  2660, -1529,  2653,
    1227,  2469,  1438,  1940,  2145,  1890, -1529,  1912,   536,  2623,
     536, -1529,  2195,  1097,  1369,  1370,   556,  1941,  2658,  1166,
    2157,  1886,  2622,  1315,   488,  1942,   831,  1968,  2067,  2364,
    2070,  2184,  1172, -1529,  1869,  1586,   556,  1207,  1153,  1840,
    1206,   652,  1177,  2563,  1048,  2511, -1529,  2617,   556,  1566,
    1880,   464,  2098,  2568,  1048,  1585,  1850,  2273,  1037,  2072,
    2243,  1211,   464,   464,  2498,  2068,   464,  1438,  1219,  2559,
    2260,  2558,  1840,  2311,   832,  2565,  2348,  2566,   464,  1399,
     946,  1246,   833,   556,   556,   556,  2615,  1126,   464,  1714,
    1401,  1405,  2411,   464,   834,  1838,   464,  2616,  1757,  2608,
    1126,   947,  1270,   464,   464,  1838,  1406,  1872,  1519,  1811,
    1838,  1730,  2551,  1838,  1654,   464,  1809,   464,  1945,  1336,
     461,  1528,  1175,  1328,  2113,   835,  1712,  1051,   564,  1537,
     461,     0,  1838,     0,     0,   461,  1539,   464,   461,  1037,
       0,     0,     0,     0,     0,  1759,  1760,  1761,     0,  1762,
    1763,  1764,  1765,  1766,  1767,     0,  1840,   461,  2272,     0,
    2274,     0,    53,  1337,     0,     0,  1758,  1048,     0,     0,
     837,     0,     0,     0,     0,     0,     0, -1529,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1338,
   -1529,     0,   838,     0,     0,     0,   464,     0,     0,     0,
       0,     0,   464,  1048,     0,     0,     0,  1339,     0,     0,
    1299,  1340,   840,  1838,     0,     0,   567,     0,     0,     0,
       0,     0,     0,     0,     0,   464,  2454,     0,   556,   464,
       0,     0,  1341,  1048,     0,  1342,  1048,   464,   461,  1325,
       0,  1355,  1356,     0,   488,   488,  1838,  2348,   464,  1343,
     556,   556,  1179,     0,     0,     0,     0,     0,   945,     0,
    1037,     0,   945,   464,     0,     0,     0,     0,   997,     0,
       0,   461,     0,     0, -1529,     0,  1832,   556,  1230,     0,
    1832,  1133,  1134,  1135,  1136,  1137,  1138, -1529,     0,  1039,
     556,     0,     0,     0,  1133,  1134,  1135,  1136,  1137,  1138,
       0,     0,     0,    53,    53,     0,     0,   556,     0,     0,
       0,   556,     0,     0,   464,  1357,  1358,   464,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1320,     0,  1321,
       0,     0,     0,     0,  1838,     0,     0,  1344,     0,   464,
    2545,     0,     0,     0,     0,  1345,     0,     0,     0,     0,
     464,     0,     0,     0,     0,     0,  1759,  1760,  1761,   461,
    1762,  1763,  1764,  1765,  1766,  1767,     0,  1838,     0,     0,
     464,     0,     0,     0,     0,     0,  1359,  1360,  1361,  1362,
    1363,  1364,     0,  1108,  1365,  1366,  1109,  1346,     0,   464,
     464,    53,   461,     0,  2168,     0,  2572,     0,     0,     0,
    1108,  1527,     0,  1109,     0,     0,     0,     0,     0,     0,
       0,     0,  1037,     0,  1287,  1115,     0,   945,  1048,   556,
       0,  1536, -1529,  1538,     0,     0,     0,     0,     0,  1313,
       0,     0,  1115,     0,   464,   635,   464,     0,   635, -1529,
       0,     0,   488,   488,     0,   488,   635,  1117,   556,     0,
       0,  1838,     0,  1832,     0,     0,     0,  1039,  1832,     0,
       0,  1832,  1108,     0,  1117,  1109,  1581,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   461,  2636,   669,     0,
       0,  1752,     0,     0,     0,  1753,  1754,  1755,  1367,  1368,
       0,     0,     0,     0,  1115,     0,     0,     0,   464,     0,
       0, -1529,  2228,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2541,     0,  1040,  1805,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1117,     0,   669,     0,
       0,  1752,     0,  2048,     0, -1529, -1529, -1529,     0,     0,
       0,    53,     0,     0,  1431,  1664, -1529,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   -1529,     0,    53, -1529,     0, -1529,     0,     0,     0,  1593,
       0,     0,     0,  -440,     0,   860,     0, -1529,     0,  1601,
     635,  1604, -1529,     0,  1615,     0,  -440,     0,     0,     0,
    1619,  -440,  1621,     0,  1832,  2051,  1369,  1370,     0,     0,
   -1529,     0,  1097,     0,  1628,     0,     0,     0,     0,  1631,
     556,     0,     0,  1636,  1637,  1638,  1639, -1529,  1643,  1644,
       0,     0,     0,     0,     0, -1529,  1108,     0,     0,  1109,
     556,     0,   556,   860,  1047, -1435,     0,  -440,     0, -1529,
       0,  1551,     0,  1556, -1529,  2168,     0,     0,     0,  1042,
       0,     0,     0,     0,  1126,    53,  -440,  1039,  1115,     0,
       0,     0,  1043,     0,     0, -1529,     0,     0,     0,     0,
       0,  1126,     0,     0,     0,   556,     0,     0,     0, -1529,
       0,  1757,     0,  1040,  1230,   488,     0,     0,     0,     0,
    1117,     0,     0,     0,     0,   488,  1602,   488,  1606,     0,
     488,     0,     0,     0,  -440,     0,   488,  1037,   488,     0,
       0,    53,     0,  -440,     0,     0,     0,     0,     0,   635,
     488,     0,     0,     0,   635,   488, -1435,     0,     0,   488,
     488,   488,   488,  1126,   488,   488,     0,     0,  1039,     0,
       0,     0,     0,     0, -1529,     0,  1037,     0,     0,  1758,
       0,     0,     0,     0,   556,  1665,     0,     0,     0,  2052,
       0, -1529,  1037,     0,     0,     0,     0,  1677,     0,     0,
       0,     0,     0,     0,     0,     0,  1824,     0, -1435,     0,
       0,     0,  1037,     0,     0,     0,     0,     0,     0, -1529,
       0, -1435,    53,     0,     0,     0, -1435,   669,     0,  1758,
    1752, -1435,  1047, -1529,  1753,  1754,  1755,     0, -1529,     0,
   -1435,  1037,  1044, -1435,     0,  1716,     0,  1042,     0,     0,
       0,  2229,     0, -1529,     0,     0,   860,   860,   860,     0,
    1043,     0,     0,     0,  1037,     0,     0,     0,     0,     0,
       0, -1529, -1435, -1529,     0,     0,     0,  -440,  1133,  1134,
    1135,  1136,  1137,  1138,     0,     0,     0,     0, -1529,  1039,
       0, -1435,     0,     0,     0,  1133,  1134,  1135,  1136,  1137,
    1138,     0,  1108,     0,     0,  1109,     0,     0,     0, -1529,
   -1529, -1529,     0,  1040,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1126,     0,     0,
       0,     0,     0,     0,  1115,     0,     0,   740,   740, -1435,
     602,  1116, -1435,   784,   603,     0,     0,  1943, -1435,     0,
   -1529,     0,  1948,  1949,  1951,     0,     0,  1133,  1134,  1135,
    1136,  1137,  1138,     0,     0,     0,  1117,   860,     0,  1759,
    1760,  1761,  1965,  1762,  1763,  1764,  1765,  1766,  1767,     0,
    1037,     0,     0,     0,  1431,     0,     0,     0,     0,   471,
       0,     0,     0,   472,  1040,   857,   862,     0,     0,     0,
       0,     0,     0, -1435,     0,     0,     0,     0,     0,     0,
    1044,     0,     0,     0, -1055,   556,     0, -1529,     0, -1529,
   -1529, -1529,  1841,  1762,  1763,  1764,  1765,  1766,  1767,     0,
    1757,     0,  1047,     0,     0,     0,  1841,     0,     0,     0,
    1859,  1039,     0,  1862,     0,  1556,     0,  1042,     0,     0,
     473,     0,     0,   857,     0,     0,  1825,   474,  1959,     0,
    1043,     0,     0,     0,     0,  1118,     0,     0,     0,  1056,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1119,
       0,     0, -1435,     0,  1120,     0,     0,     0,     0,     0,
   -1435,  1287,     0,     0,     0,     0,     0,  1078,  1758,     0,
       0,     0,     0,   475,  1037,     0, -1435,     0, -1435, -1435,
    2064,  2065,  2066,  1047, -1529,  1040,  1094,  1095,  1096,  1123,
    1098,  1133,  1134,  1135,  1136,  1137,  1138,     0,  1042,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1146,  1043,     0,     0,     0, -1435,     0,     0, -1435, -1435,
   -1435,  1287,     0,     0,   860,     0,   556,     0,     0,  1416,
    1287,   556,   556,   556,     0,  2120,  1417,  1418,  1419,     0,
       0,   476,     0,  1126,   488,     0,     0,     0,     0,     0,
       0,   556,     0,     0,     0,   635,     0,     0,     0,  1185,
       0,     0,     0,  1197,  1202,     0,     0,     0,     0,     0,
       0,  1287,  1287,     0,     0,     0,     0,     0,     0,     0,
    1044,     0,     0,  1037,     0,     0,   477,     0,   478,     0,
    1037,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2188,     0,     0,     0,  1047,     0,     0,     0,  1431,   479,
       0,     0,   480,     0,     0,     0,   857,   857,   857,  1042,
       0,  1325,     0,     0,     0,     0,     0,     0,     0,     0,
    2121,     0,  1043,  1128,     0,     0,     0,  1040,     0,     0,
    1037,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1037,   860,     0,     0,  2154,     0,     0,     0,  1759,  1760,
    1761,  1044,  1762,  1763,  1764,  1765,  1766,  1767,     0,  2172,
    2173,  2174,  2175,  2176,  2177,  2178,  2179,  2180,  2181,     0,
       0,  2059,     0,     0,     0,     0,     0,     0,     0,   556,
     556,   556,   462,     0,  1841,  2076,     0,     0,     0,  2076,
    2090,     0,     0,     0,     0,     0,  1039,     0,     0,     0,
       0,     0,     0,     0,  2238,  2239,  2240,  2241,     0,     0,
       0,     0,     0,     0,   860,     0,     0,   857,  1556,     0,
    1129,     0,     0, -1529, -1529, -1529,     0,  1133,  1134,  1135,
    1136,  1137,  1138,     0,   556,  1039,   488,     0,     0,     0,
    1287,  1230,  1287,     0,  1313,     0,  1047,     0,     0,     0,
       0,  1039,     0,  1037,     0,     0,     0,     0,     0,     0,
     488,  1042,  2155,     0,     0,     0,     0,     0,     0,     0,
       0,  1039,  1044,     0,  1043,   488,   488,   488,   488,   488,
     488,   488,   488,   488,   488,     0,     0,     0,     0,  1037,
    1870,     0,     0,     0,     0,     0,     0,     0,     0,   556,
    1039,     0,   669,     0,     0,  1752,  1230,     0,     0,  1753,
    1754,  1755,  1392,     0,     0,     0,     0,  1313,     0,  1037,
     556,     0,  1037,  1039,     0,     0,     0,  1287,     0,     0,
       0,     0,     0,  1415,     0,  2210,  1432,     0,     0,  1443,
       0,     0,     0,     0,     0,     0,  1450,  1455,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1461,     0,
       0,     0,     0,     0,  1465,  1466,  1467,  1468,     0,     0,
       0,     0,  1477,  1478,     0,     0,     0,  1489,     0,     0,
       0,  1492,     0,     0,  1500,  1501,  1502,  1503,  1504,  1505,
    1506,  1507,  1508,     0,     0,  1509,     0,     0,     0,     0,
       0,     0,   740,     0,   857,     0,     0,     0,     0,     0,
    2237,     0,     0,   556,   556,   556,   556,     0,     0,     0,
    2076,  2090,  1040,  2076,  1044,  1540,  2247,     0,     0,     0,
    1841,     0,     0,     0,  1841,     0,     0,     0,     0,  1039,
    2265,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1095,  1096,  2439,     0,     0,     0,     0,  1859,
       0,  1040,     0,     0,  1556,     0,     0,     0,  1431,     0,
       0,     0,     0,     0,     0,     0,  1230,  1040,     0,     0,
    1420,  1421,  1422,     0,  1423,  1424,  1425,  1426,  1427,  1428,
       0,     0,     0,     0,     0,     0,     0,  1040,     0,     0,
       0,  2327,     0,  2475,  1037, -1529,     0,     0,     0,     0,
       0,     0,   860,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1040,     0,     0,     0,
       0,   857,     0,     0,  1651,  1652,     0,  1653,  1287,  2431,
       0,  1047,     0,     0,  1677,     0,     0,     0,     0,  1040,
       0,     0,     0,     0,     0,  2360,  1042,     0,     0,     0,
       0,     0,     0,  1039,  1686,     0,  2522,     0,     0,  1043,
       0,  2449,  2450,  1758,     0,     0,     0,     0,     0,     0,
    1047,     0,     0,     0,  2458,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1042,  1047,   462,  2076,  2544,
       0,     0,  2388,     0,   857,   488,     0,  1841,  1043,     0,
       0,  1042,  1841,     0,     0,  1841,  1047,  2399,     0,     0,
    2402,     0,     0,     0,  1043,     0,     0,     0,     0,     0,
       0,  1042,     0,     0,  2418,     0,     0,     0,     0,     0,
       0,     0,     0,  1728,  1043,  1047,     0,     0,  1734,     0,
    2513,     0,     0,     0,   635,   488,     0,     0,     0,     0,
    1042,     0,     0,   556,     0,  1040,     0,     0,  1047,     0,
       0,     0,  1039,  1043,     0,     0,     0,     0,     0,  1039,
       0,     0,     0,  1042,     0,     0,     0,   488,   488,     0,
    1751,     0,     0,     0,     0,     0,  1043,  1230,     0, -1437,
     488,     0,     0,     0,     0,  1455,     0,  1455,  1455,     0,
       0,     0,   556,  1789,     0,  2418,     0,     0,     0,  1044,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1039,
       0,     0,     0,     0,     0,   488,     0,     0,     0,  1039,
       0,     0,     0,     0,     0,     0,     0,  1807,  1841,     0,
    1810,     0,  1812,  2402,     0,     0,     0,     0,  1044,     0,
       0,     0,  2508,  1759,  1760,  1761,   488,  1762,  1763,  1764,
    1765,  1766,  1767,     0,  1044,   556,     0,  1108,     0,     0,
    1109,     0,     0,     0,  2169,     0,     0,     0,     0,  1040,
   -1437,     0,     0,     0,  1044,     0,     0,   635,     0,  1042,
       0,     0,     0,     0,     0,     0,   828,     0,   556,  1115,
       0,  1185,  1043,     0,     0,     0, -1529,     0,     0,     0,
       0,     0,     0,  1044,     0,   829,  1202,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   462,     0,     0,     0,
       0,  1117, -1437,     0,  1884,  2562,  1044,     0,     0,   488,
       0,     0,  1039,  2399,     0, -1437,     0,     0,     0,     0,
   -1437,     0,     0,     0,     0, -1437,     0,     0,     0,  2418,
     635,   635,   635,  1141, -1437,   830,  2143, -1437,     0,     0,
       0,     0,     0,     0,  2144,     0,     0,     0,  1039,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1040,     0,
       0,     0,   857,     0,     0,  1040, -1437,     0,  1047,     0,
    2232,  1141,     0,  2399,     0,     0,     0,     0,  1039,     0,
       0,  1039,  2508,  1042,  2388, -1437,     0,     0,     0,     0,
       0,     0,     0,  1556,     0,     0,  1043,     0,     0,     0,
   -1529,  2145,     0,     0,     0,     0,     0,  1230,     0,     0,
       0,     0,     0,  2418, -1529,  1040,     0,     0,     0, -1529,
       0,     0,  1044,   831,     0,  1040,     0,     0,     0,     0,
       0,   635,     0, -1437,     0,     0, -1437,     0,     0,     0,
       0,     0, -1437,  1997,     0,     0,     0,   490,     0,     0,
    1141,     0,     0,  2001, -1529,  1141,     0,  2002,     0,     0,
    2004,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   832,     0,     0,     0,     0,     0,  1047,     0,   833,
       0,     0,     0,     0,  2331,     0,  2024,  2025,     0,     0,
       0,   834,  1042,  2146,     0,     0,     0, -1437,     0,  1042,
     491,     0,     0,     0,     0,  1043,  2037,     0,  1126,  2040,
       0,  2042,  1043,     0,     0,   492,     0,     0,     0,  2046,
       0,     0,   835,     0,     0,     0,     0,  2053,  2054,     0,
       0,     0,     0,     0,  1047,     0,     0,     0,  1040,     0,
       0,     0,     0,     0,  1047,     0,  1044,     0,     0,  1042,
    1825,     0,     0,     0,     0,     0,  2094,     0,     0,  1042,
       0,     0,  1043,  1039,     0,  2101,     0,   837,     0,   493,
       0,     0,  1043,     0,  1040,     0, -1437,     0,   494,     0,
       0,  2114,     0,     0, -1437,     0,     0,     0,     0,   838,
     495,     0,     0,     0,     0,   496,     0,     0, -1529,     0,
   -1437,     0, -1437, -1437,  1040,     0,     0,  1040,     0,   840,
       0,  2147,     0,     0,  2148,     0,     0,     0,     0,     0,
     497,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0, -1437,
       0,     0, -1437, -1437, -1437,     0,     0,     0,     0,  1141,
       0,     0,     0,     0,     0,  1044,     0,  2169,     0,     0,
       0,     0,  1044,   498,     0,     0,   499,     0,     0,     0,
       0,  1141,  1042,     0,     0,     0,  1439,     0,     0,     0,
       0,     0,     0,     0,     0,  1043,     0,  1141,  1141,  1141,
       0,  1141,     0,  1047,     0, -1529,     0,     0,     0,     0,
       0,     0,  1133,  1134,  1135,  1136,  1137,  1138,  1042,     0,
    2213,     0,  1044,  1238,     0,     0,     0,     0,     0, -1451,
       0,  1043,  1044,  1047,     0,     0,  1047,     0,     0,   500,
       0,     0,     0,     0,     0,     0,     0,     0,  1042,  1141,
       0,  1042,     0,   501,     0,     0,     0,     0,     0,     0,
       0,  1043,  2222,  2223,  1043,     0,     0,  2224,     0,     0,
       0,     0,  2227,     0,     0,  2230,  2231,     0,     0,     0,
    2235,     0,     0,     0,   502,     0,     0,   503,  1141,     0,
       0,     0,     0,   -38,     0,   504,     0,     0,   505,  1040,
    1141,     0,     0,     0,     0,  1141,     0,     0,     0,     0,
       0,     1,     0,     0,     0,     0,     0,   506,     0,     0,
   -1451,     2,     0,     3,     4,     0,   740,     0,   507,     0,
       0,     0,     0,     0,     0,   508,     0,     0,     0,     5,
       0,     0,     0,     0,   509,  1044,     0,     0,     6,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       7,     0,     0,     0,     0,     0,     0,     0,  2321,     0,
       0,     8, -1451,     0,   510,     0,     0,     0,     0,     0,
       0,  1044,     9,     0,    10, -1451,     0,     0,     0,     0,
   -1451,     0,     0,     0,     0, -1451,     0,     0,     0,     0,
       0,     0,    11,     0, -1451,     0,     0, -1451,     0,     0,
       0,  1044,     0,     0,  1044,     0,    12,     0,  2169,     0,
       0,     0,     0,     0,     0,     0,    13,     0,     0,     0,
       0,     0,    14,  1042,     0,     0, -1451,     0,     0,     0,
      15,     0,    16,    17,     0,     0,  1043,     0,     0,     0,
       0,     0,  2372,  2373,     0, -1451,  2374,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   815,     0,     0,     0,     0,     0,   816,     0,
       0,     0,    18,     0,     0,   828,     0,     0,     0,     0,
       0,     0,     0,  2407,  2408,  1141,     0,     0,     0,     0,
       0,     0,     0, -1451,   829,     0, -1451,  2420,     0,     0,
       0,     0, -1451,     0,     0,     0,     0,     0,  1141,     0,
       0,    19,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1141,     0,  1439,  1439,     0,
    1768,     0,  1439,     0,     0,     0,  1141,     0,     0,     0,
       0,     0,     0,  1141,   830,     0,     0,     0,  1141,     0,
       0,     0,     0,     0,  1141,     0,     0, -1451,  1141,  1141,
    1141,  1141,     0,     0,     0,     0,     0,  1439,  1439,     0,
    1141,  1141,     0,   817,     0,     0,     0,     0,     0,     0,
       0,     0,  1141,     0,     0,  1141,  1044,    20,     0,     0,
      21,     0,     0,  1141,  1141,  1141,  1141,  1141,  1141,  1141,
    1141,  1141,  1141,     0,     0,  2495,     0,   815,     0,     0,
    1825,     0,     0,   816,     0,     0,     0,  1098,    22,     0,
     828,     0,     0,     0,     0,     0,    23,     0,  2514,     0,
       0,     0,   831,  1141,     0,     0, -1451,     0,     0,   829,
      24,     0,     0,  2528, -1451,     0,     0,    25,     0,     0,
       0,    26,     0,     0,     0,     0,     0,     0,     0,     0,
   -1451,    27, -1451, -1451,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    28,     0,     0,     0,     0,     0,
     832,     0,     0,     0,     0,     0,     0,     0,   833,   830,
       0,     0,     0,     0,     0,     0,     0,     0,     0, -1451,
     834,     0, -1451, -1451, -1451,     0,     0,     0,  1108,    29,
       0,  1109,     0,     0,    30,  1110,  1111,  1112,   817,  2407,
       0,   818,     0,     0,     0,     0,     0,    31,     0,     0,
       0,   835,  1113,     0,     0,     0,     0,     0,     0,     0,
    1115,     0,     0,     0,  1141,  1141,  1141,  1116,     0,     0,
    2591,    32,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    33,     0,     0,   -38,  2605,
    2605,   836,  1117,     0,     0,   820,   837,   831,     0,  1141,
       0,     0,  1107,     0,     0,     0,     0,  1108,     0,     0,
    1109,     0,     0,     0,  1110,  1111,  1112,     0,   838,     0,
       0,     0,     0,     0,   839,     0,     0,     0,     0,     0,
       0,  1113,     0,     0,  1114,     0,  2605,     0,   840,  1115,
       0,  1141,     0,     0,     0,   832,  1116,  1141,     0,     0,
       0,     0,     0,   833,     0,     0,     0,     0,     0,     0,
       0,     0,  1768,  1768,  1141,   834,  1439,  1439,  1439,  1439,
       0,  1117,  1439,  1439,  1439,  1439,  1439,  1439,  1439,  1439,
    1439,  1439,  1768,     0,     0,     0,   818,     0,   822,     0,
       0,  1118,     0,     0,     0,     0,   835,     0,  2605,     0,
       0,     0,  1141,     0,     0,  1119,  1768,  1768,     0,     0,
    1120,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1141,  1439,  1439,  1141,     0,  1141,     0,     0,     0,     0,
       0,  1121,  1122,     0,     0,     0,  1622,     0,     0,     0,
     820,   837,     0,     0,     0,  1123,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   838,     0,     0,     0,     0,     0,  1623,
    1118,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1124,   840,  1119,  1125,     0,     0,     0,  1120,
       0,     0,     0,     0,     0,     0,     0,  1141,     0,  1126,
       0,     0,  1127,     0,     0,     0,     0,     0,  1355,  1356,
    1121,  1122,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1123,     0,     0,     0,     0,     0,
       0,     0,     0,   822,     0,     0,  1108,     0,     0,  1109,
       0,     0,     0,  1110,  1111,  1112,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1113,  1124,     0,     0,  1125,     0,     0,     0,  1115,     0,
       0,     0,     0,     0,     0,  1116,     0,     0,  1126,     0,
       0,  1127,  1357,  1358,     0,     0,     0,     0,     0,  1128,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1117,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1141,     0,     0,     0,  1141,  1141,     0,  1141,     0,     0,
    1768,  1768,  1768,  1768,     0,     0,     0,  1768,  1768,  1768,
    1768,  1768,  1768,  1768,  1768,  1768,  1768,  1141,  1141,     0,
       0,     0,     0,  1359,  1360,  1361,  1362,  1363,  1364,     0,
    1141,  1365,  1366,  1141,     0,  1141,     0,     0,     0,  1141,
       0,     0,  1768,  1768,     0,     0,  1141,  1141,  1128,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1129,     0,     0,  1130,
    1131,  1132,     0,  1133,  1134,  1135,  1136,  1137,  1138,  1118,
       0,     0,     0,     0,     0,     0,  1743,  1141,     0,     0,
       0,     0,     0,  1119,  1141,     0,     0,     0,  1120,     0,
       0,     0,     0,     0,     0,     0,     0,  1141,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1121,
    1122,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1123,     0,  1367,  1368,     0,     0,     0,
       0,     0,     0,     0,     0,  1129,     0,     0,  1130,  1131,
    1132,     0,  1133,  1134,  1135,  1136,  1137,  1138,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1124,     0,     0,  1125,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1126,     0,     0,
    1127,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1141,     0,     0,     0,
    1439,     0,     0,     0,     0,  1141,  1141,  1141,     0,     0,
    1141,     0,     0,  1141,  1141,     0,     0,     0,  1141,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1369,  1370,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1371,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1128,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1439,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1141,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1768,  1439,     0,     0,     0,  1141,  1141,  1141,     0,     0,
       0,     0,     0,     0,  1129,     0,     0,  1130,  1131,  1132,
       0,  1133,  1134,  1135,  1136,  1137,  1138,     0,     0,     0,
       0,  1458,     0,     0,     0,     0,     0,     0,     0,     0,
    1141,  1141,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1141,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1768,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    88,   666,
     528,   667,   668,   669,   670,   671,     0,     0,     0,     0,
    1768,     0,     0,    89,    90,    91,    92,    93,    94,    95,
      96,   852,    97,    98,    99,     0,     0,     0,  1141,     0,
       0,     0,   100,   101,     0,   102,   103,   104,   105,   106,
     107,   108,   109,   672,   111,   673,   674,  1141,   114,   115,
     116,   117,   118,   119,   675,   676,   120,   121,   677,   678,
     124,  1141,   125,   126,   127,   128,   679,     0,   680,     0,
     131,   132,   133,   134,   135,   136,   137,   138,   139,     0,
     140,   141,   142,   143,   144,   145,     0,   146,   147,   148,
     149,   681,   682,   683,   684,   685,   686,   687,   151,   152,
     153,   154,   155,   156,   157,   688,   689,   160,   690,   161,
       0,   162,   163,   164,   165,   166,   167,     0,   168,   169,
     170,   171,   172,   853,  1141,   173,   174,   691,   176,   177,
       0,   178,   179,   180,     0,   181,   182,   183,  1141,   184,
     185,   186,   187,   692,   189,   190,   191,   192,   693,   694,
     194,     0,   195,   196,   695,   198,     0,   199,     0,   200,
     201,     0,   202,   203,   204,   205,   206,   207,     0,   208,
       0,   209,   210,     0,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,     0,   222,   223,   224,   225,
     226,   227,     0,   228,   229,   230,   231,   232,   233,   234,
     696,   697,     0,   698,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,     0,     0,   248,   249,   250,
     251,     0,   252,   253,   254,   699,   700,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     701,   279,   702,   281,   282,   283,   284,   703,   285,   286,
     287,   288,   704,   705,   290,   706,   292,   293,   294,     0,
     295,   296,     0,     0,   707,   298,   299,     0,     0,   300,
     301,   302,   303,   304,   708,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,     0,   316,   317,   709,   319,
     320,   321,   322,   323,   324,     0,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   710,   335,   336,   337,   338,
       0,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     711,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,     0,   369,   370,   371,   372,   373,   712,   374,
     375,   376,   377,   378,   379,   380,   381,   713,   383,     0,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   714,     0,   397,   398,     0,   399,   400,   401,
     402,   403,   404,   405,     0,   715,   716,     0,     0,   408,
     409,   717,   411,   718,   719,   413,   414,   415,   416,   417,
     418,   419,     0,     0,   420,   421,   422,   423,   424,   720,
       0,   425,   426,   427,   428,   429,   430,   721,   854,   432,
     433,   434,   435,   436,   437,     0,     0,   438,     0,     0,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   722,     0,     0,     0,     0,     0,     0,   723,   724,
     855,     0,     0,     0,     0,     0,     0,   726,   856,     0,
       0,     0,   727,    88,   666,   528,   667,   668,   669,   670,
     671,     0,     0,     0,     0,     0,     0,     0,    89,    90,
      91,    92,    93,    94,    95,    96,     0,    97,    98,    99,
       0,     0,     0,     0,     0,     0,     0,   100,   101,     0,
     102,   103,   104,   105,   106,   107,   108,   109,   672,   111,
     673,   674,     0,   114,   115,   116,   117,   118,   119,   675,
     676,   120,   121,   677,   678,   124,     0,   125,   126,   127,
     128,   679,     0,   680,     0,   131,   132,   133,   134,   135,
     136,   137,   138,   139,     0,   140,   141,   142,   143,   144,
     145,     0,   146,   147,   148,   149,   681,   682,   683,   684,
     685,   686,   687,   151,   152,   153,   154,   155,   156,   157,
     688,   689,   160,   690,   161,     0,   162,   163,   164,   165,
     166,   167,     0,   168,   169,   170,   171,   172,     0,     0,
     173,   174,   691,   176,   177,     0,   178,   179,   180,     0,
     181,   182,   183,     0,   184,   185,   186,   187,   692,   189,
     190,   191,   192,   693,   694,   194,     0,   195,   196,   695,
     198,     0,   199,     0,   200,   201,     0,   202,   203,   204,
     205,   206,   207,     0,   208,     0,   209,   210,     0,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
       0,   222,   223,   224,   225,   226,   227,     0,   228,   229,
     230,   231,   232,   233,   234,   696,   697,     0,   698,     0,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
       0,     0,   248,   249,   250,   251,     0,   252,   253,   254,
     699,   700,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   701,   279,   702,   281,   282,
     283,   284,   703,   285,   286,   287,   288,   704,   705,   290,
     706,   292,   293,   294,     0,   295,   296,     0,     0,   707,
     298,   299,     0,     0,   300,   301,   302,   303,   304,   708,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
       0,   316,   317,   709,   319,   320,   321,   322,   323,   324,
       0,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     710,   335,   336,   337,   338,     0,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,     0,   351,
     352,   353,   354,   355,   356,   711,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,    24,   369,   370,
     371,   372,   373,   712,   374,   375,   376,   377,   378,   379,
     380,   381,   713,   383,     0,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   714,     0,   397,
     398,    28,   399,   400,   401,   402,   403,   404,   405,     0,
     715,   716,     0,     0,   408,   409,   717,   411,   718,   719,
     413,   414,   415,   416,   417,   418,   419,     0,     0,   420,
     421,   422,   423,   424,   720,     0,   425,   426,   427,   428,
     429,   589,   721,     0,   432,   433,   434,   435,   436,   437,
       0,     0,   438,     0,    31,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   722,     0,    32,     0,
       0,     0,     0,   723,   724,     0,     0,     0,     0,     0,
       0,     0,   726,  2504,     0,     0,     0,   727,    88,   666,
     528,   667,   668,   669,   670,   671,     0,     0,     0,     0,
       0,     0,     0,    89,    90,    91,    92,    93,    94,    95,
      96,     0,    97,    98,    99,     0,     0,     0,     0,     0,
       0,     0,   100,   101,     0,   102,   103,   104,   105,   106,
     107,   108,   109,   672,   111,   673,   674,     0,   114,   115,
     116,   117,   118,   119,   675,   676,   120,   121,   677,   678,
     124,     0,   125,   126,   127,   128,   679,     0,   680,     0,
     131,   132,   133,   134,   135,   136,   137,   138,   139,     0,
     140,   141,   142,   143,   144,   145,     0,   146,   147,   148,
     149,   681,   682,   683,   684,   685,   686,   687,   151,   152,
     153,   154,   155,   156,   157,   688,   689,   160,   690,   161,
       0,   162,   163,   164,   165,   166,   167,     0,   168,   169,
     170,   171,   172,     0,     0,   173,   174,   691,   176,   177,
       0,   178,   179,   180,     0,   181,   182,   183,     0,   184,
     185,   186,   187,   692,   189,   190,   191,   192,   693,   694,
     194,     0,   195,   196,   695,   198,     0,   199,     0,   200,
     201,     0,   202,   203,   204,   205,   206,   207,     0,   208,
       0,   209,   210,     0,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,     0,   222,   223,   224,   225,
     226,   227,     0,   228,   229,   230,   231,   232,   233,   234,
     696,   697,     0,   698,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,     0,     0,   248,   249,   250,
     251,     0,   252,   253,   254,   699,   700,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     701,   279,   702,   281,   282,   283,   284,   703,   285,   286,
     287,   288,   704,   705,   290,   706,   292,   293,   294,     0,
     295,   296,     0,     0,   707,   298,   299,     0,     0,   300,
     301,   302,   303,   304,   708,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,     0,   316,   317,   709,   319,
     320,   321,   322,   323,   324,     0,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   710,   335,   336,   337,   338,
       0,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     711,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,    24,   369,   370,   371,   372,   373,   712,   374,
     375,   376,   377,   378,   379,   380,   381,   713,   383,     0,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   714,     0,   397,   398,    28,   399,   400,   401,
     402,   403,   404,   405,     0,   715,   716,     0,     0,   408,
     409,   717,   411,   718,   719,   413,   414,   415,   416,   417,
     418,   419,     0,     0,   420,   421,   422,   423,   424,   720,
       0,   425,   426,   427,   428,   429,   589,   721,     0,   432,
     433,   434,   435,   436,   437,     0,     0,   438,     0,    31,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   722,     0,    32,     0,     0,     0,     0,   723,   724,
       0,     0,     0,     0,     0,     0,     0,   726,     0,     0,
       0,     0,   727,    88,   666,   528,   667,   668,   669,   670,
     671,     0,     0,     0,     0,     0,     0,     0,    89,    90,
      91,    92,    93,    94,    95,    96,     0,    97,    98,    99,
       0,     0,     0,     0,     0,     0,     0,   100,   101,     0,
     102,   103,   104,   105,   106,   107,   108,   109,   672,   111,
     673,   674,  1451,   114,   115,   116,   117,   118,   119,   675,
     676,   120,   121,   677,   678,   124,     0,   125,   126,   127,
     128,   679,     0,   680,     0,   131,   132,   133,   134,   135,
     136,   137,   138,   139,     0,   140,   141,   142,   143,   144,
     145,     0,   146,   147,   148,   149,   681,   682,   683,   684,
     685,   686,   687,   151,   152,   153,   154,   155,   156,   157,
     688,   689,   160,   690,   161,     0,   162,   163,   164,   165,
     166,   167,     0,   168,   169,   170,   171,   172,     0,     0,
     173,   174,   691,   176,   177,     0,   178,   179,   180,     0,
     181,   182,   183,     0,   184,   185,   186,   187,   692,   189,
     190,   191,   192,   693,   694,   194,     0,   195,   196,   695,
     198,     0,   199,     0,   200,   201,  1452,   202,   203,   204,
     205,   206,   207,     0,   208,     0,   209,   210,     0,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
       0,   222,   223,   224,   225,   226,   227,     0,   228,   229,
     230,   231,   232,   233,   234,   696,   697,     0,   698,     0,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
       0,  1453,   248,   249,   250,   251,     0,   252,   253,   254,
     699,   700,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   701,   279,   702,   281,   282,
     283,   284,   703,   285,   286,   287,   288,   704,   705,   290,
     706,   292,   293,   294,     0,   295,   296,     0,     0,   707,
     298,   299,     0,     0,   300,   301,   302,   303,   304,   708,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
       0,   316,   317,   709,   319,   320,   321,   322,   323,   324,
       0,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     710,   335,   336,   337,   338,     0,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,     0,   351,
     352,   353,   354,   355,   356,   711,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,     0,   369,   370,
     371,   372,   373,   712,   374,   375,   376,   377,   378,   379,
     380,   381,   713,   383,     0,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   714,     0,   397,
     398,     0,   399,   400,   401,   402,   403,   404,   405,     0,
     715,   716,     0,  1454,   408,   409,   717,   411,   718,   719,
     413,   414,   415,   416,   417,   418,   419,     0,     0,   420,
     421,   422,   423,   424,   720,     0,   425,   426,   427,   428,
     429,   430,   721,     0,   432,   433,   434,   435,   436,   437,
       0,     0,   438,     0,     0,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   722,     0,     0,     0,
       0,     0,     0,   723,   724,     0,     0,     0,     0,     0,
       0,     0,   726,     0,     0,     0,     0,   727,    88,   666,
     528,   667,   668,   669,   670,   671,     0,     0,     0,     0,
       0,     0,     0,    89,    90,    91,    92,    93,    94,    95,
      96,     0,    97,    98,    99,     0,     0,     0,     0,     0,
       0,     0,   100,   101,     0,   102,   103,   104,   105,   106,
     107,   108,   109,   672,   111,   673,   674,     0,   114,   115,
     116,   117,   118,   119,   675,   676,   120,   121,   677,   678,
     124,     0,   125,   126,   127,   128,   679,     0,   680,     0,
     131,   132,   133,   134,   135,   136,   137,   138,   139,     0,
     140,   141,   142,   143,   144,   145,     0,   146,   147,   148,
     149,   681,   682,   683,   684,   685,   686,   687,   151,   152,
     153,   154,   155,   156,   157,   688,   689,   160,   690,   161,
       0,   162,   163,   164,   165,   166,   167,     0,   168,   169,
     170,   171,   172,     0,     0,   173,   174,   691,   176,   177,
       0,   178,   179,   180,     0,   181,   182,   183,     0,   184,
     185,   186,   187,   692,   189,   190,   191,   192,   693,   694,
     194,     0,   195,   196,   695,   198,     0,   199,     0,   200,
     201,     0,   202,   203,   204,   205,   206,   207,     0,   208,
       0,   209,   210,     0,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,     0,   222,   223,   224,   225,
     226,   227,     0,   228,   229,   230,   231,   232,   233,   234,
     696,   697,     0,   698,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,     0,     0,   248,   249,   250,
     251,     0,   252,   253,   254,   699,   700,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     701,   279,   702,   281,   282,   283,   284,   703,   285,   286,
     287,   288,   704,   705,   290,   706,   292,   293,   294,     0,
     295,   296,     0,     0,   707,   298,   299,     0,     0,   300,
     301,   302,   303,   304,   708,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,     0,   316,   317,   709,   319,
     320,   321,   322,   323,   324,     0,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   710,   335,   336,   337,   338,
       0,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     711,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,     0,   369,   370,   371,   372,   373,   712,   374,
     375,   376,   377,   378,   379,   380,   381,   713,   383,     0,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   714,     0,   397,   398,     0,   399,   400,   401,
     402,   403,   404,   405,     0,   715,   716,     0,     0,   408,
     409,   717,   411,   718,   719,   413,   414,   415,   416,   417,
     418,   419,     0,     0,   420,   421,   422,   423,   424,   720,
       0,   425,   426,   427,   428,   429,   430,   721,     0,   432,
     433,   434,   435,   436,   437,     0,     0,   438,     0,     0,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   722,     0,     0,     0,     0,     0,     0,   723,   724,
     725,     0,     0,     0,     0,     0,     0,   726,     0,     0,
       0,     0,   727,    88,   666,   528,   667,   668,   669,   670,
     671,     0,     0,     0,     0,     0,     0,     0,    89,    90,
      91,    92,    93,    94,    95,    96,  1195,    97,    98,    99,
       0,     0,     0,     0,     0,     0,     0,   100,   101,     0,
     102,   103,   104,   105,   106,   107,   108,   109,   672,   111,
     673,   674,     0,   114,   115,   116,   117,   118,   119,   675,
     676,   120,   121,   677,   678,   124,     0,   125,   126,   127,
     128,   679,     0,   680,     0,   131,   132,   133,   134,   135,
     136,   137,   138,   139,     0,   140,   141,   142,   143,   144,
     145,     0,   146,   147,   148,   149,   681,   682,   683,   684,
     685,   686,   687,   151,   152,   153,   154,   155,   156,   157,
     688,   689,   160,   690,   161,     0,   162,   163,   164,   165,
     166,   167,     0,   168,   169,   170,   171,   172,     0,     0,
     173,   174,   691,   176,   177,     0,   178,   179,   180,     0,
     181,   182,   183,     0,   184,   185,   186,   187,   692,   189,
     190,   191,   192,   693,   694,   194,     0,   195,   196,   695,
     198,     0,   199,     0,   200,   201,     0,   202,   203,   204,
     205,   206,   207,     0,   208,     0,   209,   210,     0,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
       0,   222,   223,   224,   225,   226,   227,     0,   228,   229,
     230,   231,   232,   233,   234,   696,   697,     0,   698,     0,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
       0,     0,   248,   249,   250,   251,     0,   252,   253,   254,
     699,   700,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   701,   279,   702,   281,   282,
     283,   284,   703,   285,   286,   287,   288,   704,   705,   290,
     706,   292,   293,   294,     0,   295,   296,     0,     0,   707,
     298,   299,     0,     0,   300,   301,   302,   303,   304,   708,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
       0,   316,   317,   709,   319,   320,   321,   322,   323,   324,
       0,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     710,   335,   336,   337,   338,     0,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,     0,   351,
     352,   353,   354,   355,   356,   711,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,     0,   369,   370,
     371,   372,   373,   712,   374,   375,   376,   377,   378,   379,
     380,   381,   713,   383,     0,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   714,     0,   397,
     398,     0,   399,   400,   401,   402,   403,   404,   405,     0,
     715,   716,     0,     0,   408,   409,   717,   411,   718,   719,
     413,   414,   415,   416,   417,   418,   419,     0,     0,   420,
     421,   422,   423,   424,   720,     0,   425,   426,   427,   428,
     429,   430,   721,     0,   432,   433,   434,   435,   436,   437,
       0,     0,   438,     0,     0,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   722,     0,     0,     0,
       0,     0,     0,   723,   724,     0,     0,     0,     0,     0,
       0,     0,   726,     0,     0,     0,     0,   727,    88,   666,
     528,   667,   668,   669,   670,   671,     0,     0,     0,     0,
       0,     0,     0,    89,    90,    91,    92,    93,    94,    95,
      96,     0,    97,    98,    99,     0,     0,     0,     0,     0,
       0,     0,   100,   101,     0,   102,   103,   104,   105,   106,
     107,   108,   109,   672,   111,   673,   674,     0,   114,   115,
     116,   117,   118,   119,   675,   676,   120,   121,   677,   678,
     124,     0,   125,   126,   127,   128,   679,     0,   680,     0,
     131,   132,   133,   134,   135,   136,   137,   138,   139,     0,
     140,   141,   142,   143,   144,   145,     0,   146,   147,   148,
     149,   681,   682,   683,   684,   685,   686,   687,   151,   152,
     153,   154,   155,   156,   157,   688,   689,   160,   690,   161,
       0,   162,   163,   164,   165,   166,   167,     0,   168,   169,
     170,   171,   172,     0,     0,   173,   174,   691,   176,   177,
       0,   178,   179,   180,     0,   181,   182,   183,     0,   184,
     185,   186,   187,   692,   189,   190,   191,   192,   693,   694,
     194,     0,   195,   196,   695,   198,     0,   199,     0,   200,
     201,     0,   202,   203,   204,   205,   206,   207,     0,   208,
       0,   209,   210,     0,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,     0,   222,   223,   224,   225,
     226,   227,     0,   228,   229,   230,   231,   232,   233,   234,
     696,   697,     0,   698,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,     0,     0,   248,   249,   250,
     251,     0,   252,   253,   254,   699,   700,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     701,   279,   702,   281,   282,   283,   284,   703,   285,   286,
     287,   288,   704,   705,   290,   706,   292,   293,   294,     0,
     295,   296,     0,     0,   707,   298,   299,     0,     0,   300,
     301,   302,   303,   304,   708,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,     0,   316,   317,   709,   319,
     320,   321,   322,   323,   324,     0,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   710,   335,   336,   337,   338,
       0,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     711,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,     0,   369,   370,   371,   372,   373,   712,   374,
     375,   376,   377,   378,   379,   380,   381,   713,   383,     0,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   714,     0,   397,   398,     0,   399,   400,   401,
     402,   403,   404,   405,     0,   715,   716,     0,     0,   408,
     409,   717,   411,   718,   719,   413,   414,   415,   416,   417,
     418,   419,     0,     0,   420,   421,   422,   423,   424,   720,
       0,   425,   426,   427,   428,   429,   430,   721,     0,   432,
     433,   434,   435,   436,   437,     0,     0,   438,     0,     0,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   722,     0,     0,     0,     0,     0,     0,   723,   724,
       0,     0,     0,     0,     0,     0,     0,   726,  1308,     0,
       0,     0,   727,    88,   666,   528,   667,   668,   669,   670,
     671,     0,     0,     0,     0,     0,     0,     0,    89,    90,
      91,    92,    93,    94,    95,    96,     0,    97,    98,    99,
       0,     0,     0,     0,     0,     0,     0,   100,   101,     0,
     102,   103,   104,   105,   106,   107,   108,   109,   672,   111,
     673,   674,     0,   114,   115,   116,   117,   118,   119,   675,
     676,   120,   121,   677,   678,   124,     0,   125,   126,   127,
     128,   679,     0,   680,     0,   131,   132,   133,   134,   135,
     136,   137,   138,   139,     0,   140,   141,   142,   143,   144,
     145,     0,   146,   147,   148,   149,   681,   682,   683,   684,
     685,   686,   687,   151,   152,   153,   154,   155,   156,   157,
     688,   689,   160,   690,   161,     0,   162,   163,   164,   165,
     166,   167,     0,   168,   169,   170,   171,   172,     0,     0,
     173,   174,   691,   176,   177,     0,   178,   179,   180,     0,
     181,   182,   183,     0,   184,   185,   186,   187,   692,   189,
     190,   191,   192,   693,   694,   194,     0,   195,   196,   695,
     198,     0,   199,     0,   200,   201,     0,   202,   203,   204,
     205,   206,   207,     0,   208,     0,   209,   210,     0,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
       0,   222,   223,   224,   225,   226,   227,     0,   228,   229,
     230,   231,   232,   233,   234,   696,   697,     0,   698,     0,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
       0,     0,   248,   249,   250,   251,     0,   252,   253,   254,
     699,   700,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   701,   279,   702,   281,   282,
     283,   284,   703,   285,   286,   287,   288,   704,   705,   290,
     706,   292,   293,   294,     0,   295,   296,     0,     0,   707,
     298,   299,     0,     0,   300,   301,   302,   303,   304,   708,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
       0,   316,   317,   709,   319,   320,   321,   322,   323,   324,
       0,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     710,   335,   336,   337,   338,     0,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,     0,   351,
     352,   353,   354,   355,   356,   711,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,     0,   369,   370,
     371,   372,   373,   712,   374,   375,   376,   377,   378,   379,
     380,   381,   713,   383,     0,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   714,     0,   397,
     398,     0,   399,   400,   401,   402,   403,   404,   405,     0,
     715,   716,     0,     0,   408,   409,   717,   411,   718,   719,
     413,   414,   415,   416,   417,   418,   419,     0,     0,   420,
     421,   422,   423,   424,   720,     0,   425,   426,   427,   428,
     429,   430,   721,     0,   432,   433,   434,   435,   436,   437,
       0,     0,   438,     0,     0,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   722,     0,     0,     0,
       0,     0,     0,   723,   724,     0,     0,     0,     0,     0,
       0,     0,   726,  1441,     0,     0,     0,   727,    88,   666,
     528,   667,   668,   669,   670,   671,     0,     0,     0,     0,
       0,     0,     0,    89,    90,    91,    92,    93,    94,    95,
      96,     0,    97,    98,    99,     0,     0,     0,     0,     0,
       0,     0,   100,   101,     0,   102,   103,   104,   105,   106,
     107,   108,   109,   672,   111,   673,   674,     0,   114,   115,
     116,   117,   118,   119,   675,   676,   120,   121,   677,   678,
     124,     0,   125,   126,   127,   128,   679,     0,   680,     0,
     131,   132,   133,   134,   135,   136,   137,   138,   139,     0,
     140,   141,   142,   143,   144,   145,     0,   146,   147,   148,
     149,   681,   682,   683,   684,   685,   686,   687,   151,   152,
     153,   154,   155,   156,   157,   688,   689,   160,   690,   161,
       0,   162,   163,   164,   165,   166,   167,     0,   168,   169,
     170,   171,   172,     0,     0,   173,   174,   691,   176,   177,
       0,   178,   179,   180,     0,   181,   182,   183,     0,   184,
     185,   186,   187,   692,   189,   190,   191,   192,   693,   694,
     194,     0,   195,   196,   695,   198,     0,   199,     0,   200,
     201,     0,   202,   203,   204,   205,   206,   207,     0,   208,
       0,   209,   210,     0,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,     0,   222,   223,   224,   225,
     226,   227,     0,   228,   229,   230,   231,   232,   233,   234,
     696,   697,     0,   698,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,     0,     0,   248,   249,   250,
     251,     0,   252,   253,   254,   699,   700,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     701,   279,   702,   281,   282,   283,   284,   703,   285,   286,
     287,   288,   704,   705,   290,   706,   292,   293,   294,     0,
     295,   296,     0,     0,   707,   298,   299,     0,     0,   300,
     301,   302,   303,   304,   708,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,     0,   316,   317,   709,   319,
     320,   321,   322,   323,   324,     0,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   710,   335,   336,   337,   338,
       0,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     711,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,     0,   369,   370,   371,   372,   373,   712,   374,
     375,   376,   377,   378,   379,   380,   381,   713,   383,     0,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   714,     0,   397,   398,     0,   399,   400,   401,
     402,   403,   404,   405,     0,   715,   716,     0,     0,   408,
     409,   717,   411,   718,   719,   413,   414,   415,   416,   417,
     418,   419,     0,     0,   420,   421,   422,   423,   424,   720,
       0,   425,   426,   427,   428,   429,   430,   721,  1648,   432,
     433,   434,   435,   436,   437,     0,     0,   438,     0,     0,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   722,     0,     0,     0,     0,     0,     0,   723,   724,
       0,     0,     0,     0,     0,     0,     0,   726,     0,     0,
       0,     0,   727,    88,   666,   528,   667,   668,   669,   670,
     671,     0,     0,     0,     0,     0,     0,     0,    89,    90,
      91,    92,    93,    94,    95,    96,     0,    97,    98,    99,
       0,     0,     0,     0,     0,     0,     0,   100,   101,     0,
     102,   103,   104,   105,   106,   107,   108,   109,   672,   111,
     673,   674,     0,   114,   115,   116,   117,   118,   119,   675,
     676,   120,   121,   677,   678,   124,     0,   125,   126,   127,
     128,   679,     0,   680,     0,   131,   132,   133,   134,   135,
     136,   137,   138,   139,     0,   140,   141,   142,   143,   144,
     145,     0,   146,   147,   148,   149,   681,   682,   683,   684,
     685,   686,   687,   151,   152,   153,   154,   155,   156,   157,
     688,   689,   160,   690,   161,     0,   162,   163,   164,   165,
     166,   167,     0,   168,   169,   170,   171,   172,     0,     0,
     173,   174,   691,   176,   177,     0,   178,   179,   180,     0,
     181,   182,   183,     0,   184,   185,   186,   187,   692,   189,
     190,   191,   192,   693,   694,   194,     0,   195,   196,   695,
     198,     0,   199,     0,   200,   201,  1452,   202,   203,   204,
     205,   206,   207,     0,   208,     0,   209,   210,     0,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
       0,   222,   223,   224,   225,   226,   227,     0,   228,   229,
     230,   231,   232,   233,   234,   696,   697,     0,   698,     0,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
       0,     0,   248,   249,   250,   251,     0,   252,   253,   254,
     699,   700,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   701,   279,   702,   281,   282,
     283,   284,   703,   285,   286,   287,   288,   704,   705,   290,
     706,   292,   293,   294,     0,   295,   296,     0,     0,   707,
     298,   299,     0,     0,   300,   301,   302,   303,   304,   708,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
       0,   316,   317,   709,   319,   320,   321,   322,   323,   324,
       0,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     710,   335,   336,   337,   338,     0,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,     0,   351,
     352,   353,   354,   355,   356,   711,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,     0,   369,   370,
     371,   372,   373,   712,   374,   375,   376,   377,   378,   379,
     380,   381,   713,   383,     0,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   714,     0,   397,
     398,     0,   399,   400,   401,   402,   403,   404,   405,     0,
     715,   716,     0,     0,   408,   409,   717,   411,   718,   719,
     413,   414,   415,   416,   417,   418,   419,     0,     0,   420,
     421,   422,   423,   424,   720,     0,   425,   426,   427,   428,
     429,   430,   721,     0,   432,   433,   434,   435,   436,   437,
       0,     0,   438,     0,     0,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   722,     0,     0,     0,
       0,     0,     0,   723,   724,     0,     0,     0,     0,     0,
       0,     0,   726,     0,     0,     0,     0,   727,    88,   666,
     528,   667,   668,   669,   670,   671,     0,     0,     0,     0,
       0,     0,     0,    89,    90,    91,    92,    93,    94,    95,
      96,     0,    97,    98,    99,     0,     0,     0,     0,     0,
       0,     0,   100,   101,     0,   102,   103,   104,   105,   106,
     107,   108,   109,   672,   111,   673,   674,     0,   114,   115,
     116,   117,   118,   119,   675,   676,   120,   121,   677,   678,
     124,     0,   125,   126,   127,   128,   679,     0,   680,     0,
     131,   132,   133,   134,   135,   136,   137,   138,   139,     0,
     140,   141,   142,   143,   144,   145,     0,   146,   147,   148,
     149,   681,   682,   683,   684,   685,   686,   687,   151,   152,
     153,   154,   155,   156,   157,   688,   689,   160,   690,   161,
       0,   162,   163,   164,   165,   166,   167,     0,   168,   169,
     170,   171,   172,     0,     0,   173,   174,   691,   176,   177,
       0,   178,   179,   180,     0,   181,   182,   183,     0,   184,
     185,   186,   187,   692,   189,   190,   191,   192,   693,   694,
     194,     0,   195,   196,   695,   198,     0,   199,     0,   200,
     201,     0,   202,   203,   204,   205,   206,   207,     0,   208,
       0,   209,   210,     0,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,     0,   222,   223,   224,   225,
     226,   227,     0,   228,   229,   230,   231,   232,   233,   234,
     696,   697,     0,   698,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,     0,     0,   248,   249,   250,
     251,     0,   252,   253,   254,   699,   700,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     701,   279,   702,   281,   282,   283,   284,   703,   285,   286,
     287,   288,   704,   705,   290,   706,   292,   293,   294,     0,
     295,   296,     0,     0,   707,   298,   299,     0,     0,   300,
     301,   302,   303,   304,   708,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,     0,   316,   317,   709,   319,
     320,   321,   322,   323,   324,     0,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   710,   335,   336,   337,   338,
       0,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     711,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,     0,   369,   370,   371,   372,   373,   712,   374,
     375,   376,   377,   378,   379,   380,   381,   713,   383,     0,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   714,     0,   397,   398,     0,   399,   400,   401,
     402,   403,   404,   405,     0,   715,   716,     0,     0,   408,
     409,   717,   411,   718,   719,   413,   414,   415,   416,   417,
     418,   419,     0,     0,   420,   421,   422,   423,   424,   720,
       0,   425,   426,   427,   428,   429,   430,   721,     0,   432,
     433,   434,   435,   436,   437,     0,     0,   438,     0,     0,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   722,     0,     0,     0,     0,     0,     0,   723,   724,
       0,     0,     0,     0,     0,     0,     0,   726,     0,     0,
       0,     0,   727,    88,   666,   528,   667,   668,   669,   670,
     671,     0,     0,     0,     0,     0,     0,     0,    89,    90,
      91,    92,    93,    94,    95,    96,     0,    97,    98,    99,
       0,     0,     0,     0,     0,     0,     0,   100,   101,     0,
     102,   103,   104,   105,   106,   107,   108,   109,   672,   111,
     673,   674,     0,   114,   115,   116,   117,   118,   119,   675,
     676,   120,   121,   677,   678,   124,     0,   125,   126,   127,
     128,   679,     0,   680,     0,   131,   132,   133,   134,   135,
     136,   137,   138,   139,     0,   140,   141,   142,   143,   144,
     145,     0,   146,   147,   148,   149,   681,   682,   683,   684,
     685,   686,   687,   151,   152,   153,   154,   155,   156,   157,
     688,   689,   160,   690,   161,     0,   162,   163,   164,   165,
     166,   167,     0,   168,   169,   170,   171,   172,     0,     0,
     173,   174,   691,   176,   177,     0,   178,   179,   180,     0,
     181,   182,   183,     0,   184,   185,   186,   187,   692,   189,
     190,   191,   192,   693,   694,   194,     0,   195,   196,   695,
     198,     0,   199,     0,   200,   201,     0,   202,   203,   204,
     205,   206,   207,     0,   208,     0,   209,   210,     0,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
       0,   222,   223,   224,   225,   226,   227,     0,   228,   229,
     230,   231,   232,   233,   234,   696,   697,     0,   698,     0,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
       0,     0,   248,   249,   250,   251,     0,   252,   253,   254,
     699,   700,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   701,   279,   702,   281,   282,
     283,   284,   703,   285,   286,   287,   288,   704,   705,   290,
     706,   292,   293,   294,     0,   295,   296,     0,     0,   707,
     298,   299,     0,     0,   300,   301,   302,   303,   304,   708,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
       0,   316,   317,   709,   319,   320,   321,   322,   323,   324,
       0,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     710,   335,   336,   337,   338,     0,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,     0,   351,
     352,   353,   354,   355,   356,   711,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,     0,   369,   370,
     371,   372,   373,   712,   374,   375,   376,   377,   378,   379,
     380,   381,   713,   383,     0,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   714,     0,   397,
     398,     0,   399,   400,   401,   402,   403,   404,   405,     0,
     715,   716,     0,     0,   408,   409,   717,   411,   718,   719,
     413,   414,   415,   416,   417,   418,   419,     0,     0,   420,
     421,   422,   423,   424,   720,     0,   425,   426,   427,   428,
     429,   430,   721,     0,   432,   433,   434,   435,   436,   437,
       0,     0,   438,     0,     0,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   722,     0,     0,     0,
       0,     0,     0,  1198,  1199,     0,     0,     0,     0,     0,
       0,     0,   726,     0,     0,     0,     0,   727,    88,  1573,
     528,   667,   668,   669,   670,   671,     0,     0,     0,     0,
       0,     0,     0,    89,    90,    91,    92,    93,    94,    95,
      96,     0,    97,    98,    99,     0,     0,     0,     0,     0,
       0,     0,   100,   101,     0,   102,   103,   104,   105,   106,
     107,   108,   109,   672,   111,   673,   674,     0,   114,   115,
     116,   117,   118,   119,   675,   676,   120,   121,   677,   678,
     124,     0,   125,   126,   127,   128,   679,     0,   680,     0,
     131,   132,   133,   134,   135,   136,   137,   138,   139,     0,
     140,   141,   142,   143,   144,   145,     0,   146,   147,   148,
     149,   681,   682,   683,   684,   685,   686,   687,   151,   152,
     153,   154,   155,   156,   157,   688,   689,   160,   690,   161,
       0,   162,   163,   164,   165,   166,   167,     0,   168,   169,
     170,   171,   172,     0,     0,   173,   174,   691,   176,   177,
       0,   178,   179,   180,     0,   181,   182,   183,     0,   184,
     185,   186,   187,   692,   189,   190,   191,   192,   693,   694,
     194,     0,   195,   196,   695,   198,     0,   199,     0,   200,
     201,     0,   202,   203,   204,   205,   206,   207,     0,   208,
       0,   209,   210,     0,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,     0,   222,   223,   224,   225,
     226,   227,     0,   228,   229,   230,   231,   232,   233,   234,
     696,   697,     0,   698,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,     0,     0,   248,   249,   250,
     251,     0,   252,   253,   254,   699,   700,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     701,   279,   702,   281,   282,   283,   284,   703,   285,   286,
     287,   288,   704,   705,   290,   706,   292,   293,   294,     0,
     295,   296,     0,     0,   707,   298,   299,     0,     0,   300,
     301,   302,   303,   304,   708,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,     0,   316,   317,   709,   319,
     320,   321,   322,   323,   324,     0,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   710,   335,   336,   337,   338,
       0,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     711,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,     0,   369,   370,   371,   372,   373,   712,   374,
     375,   376,   377,   378,   379,   380,   381,   713,   383,     0,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   714,     0,   397,   398,     0,   399,   400,   401,
     402,   403,   404,   405,     0,   715,   716,     0,     0,   408,
     409,   717,   411,   718,   719,   413,   414,   415,   416,   417,
     418,   419,     0,     0,   420,   421,   422,   423,   424,   720,
       0,   425,   426,   427,   428,   429,   430,   721,     0,   432,
     433,   434,   435,   436,   437,     0,     0,   438,     0,     0,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   722,     0,     0,     0,     0,     0,     0,   723,   724,
       0,     0,     0,     0,     0,     0,     0,   726,     0,     0,
       0,     0,   727,    88,   666,   528,   667,   668,   669,   670,
     671,     0,     0,     0,     0,     0,     0,     0,    89,    90,
      91,    92,    93,    94,    95,    96,     0,    97,    98,    99,
       0,     0,     0,     0,     0,     0,     0,   100,   101,     0,
     102,   103,   104,   105,   106,   107,   108,   109,   672,   111,
     673,   674,     0,   114,   115,   116,   117,   118,   119,   675,
     676,   120,   121,   677,   678,   124,     0,   125,   126,   127,
     128,   679,     0,   680,     0,   131,   132,   133,   134,   135,
     136,   137,   138,   139,     0,   140,   141,   142,   143,   144,
     145,     0,   146,   147,   148,   149,   681,   682,   683,   684,
     685,   686,   687,   151,   152,   153,   154,   155,   156,   157,
     688,   689,   160,   690,   161,     0,   162,   163,   164,   165,
     166,   167,     0,   168,   169,   170,   171,   172,     0,     0,
     173,   174,   691,   176,   177,     0,   178,   179,   180,     0,
     181,   182,   183,     0,   184,   185,   186,   187,   692,   189,
     190,   191,   192,   693,   694,   194,     0,   195,   196,   695,
     198,     0,   199,     0,   200,   201,     0,   202,   203,   204,
     205,   206,   207,     0,   208,     0,   209,   210,     0,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
       0,   222,   223,   224,   225,   226,   227,     0,   228,   229,
     230,   231,   232,   233,   234,   696,   697,     0,   698,     0,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
       0,     0,   248,   249,   250,   251,     0,   252,   253,   254,
     699,   700,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   701,   279,   702,   281,   282,
     283,   284,   703,   285,   286,   287,   288,   704,   705,   290,
     706,   292,   293,   294,     0,   295,   296,     0,     0,   707,
     298,   299,     0,     0,   300,   301,   302,   303,   304,   708,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
       0,   316,   317,   709,   319,   320,   321,   322,   323,   324,
       0,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     710,   335,   336,   337,   338,     0,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,     0,   351,
     352,   353,   354,   355,   356,   711,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,     0,   369,   370,
     371,   372,   373,   712,   374,   375,   376,   377,   378,   379,
     380,   381,   713,   383,     0,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   714,     0,   397,
     398,     0,   399,   400,   401,   402,   403,   404,   405,     0,
     715,   716,     0,     0,   408,   409,   717,   411,   718,   719,
     413,   414,   415,   416,   417,   418,   419,     0,     0,   420,
     421,   422,   423,   424,   720,     0,   425,   426,   427,   428,
     429,   430,   721,     0,   432,   433,   434,   435,   436,   437,
       0,     0,   438,     0,     0,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   722,     0,     0,     0,
       0,     0,     0,   723,   724,     0,     0,     0,     0,     0,
       0,     0,  2403,     0,     0,     0,     0,   727,    88,   666,
     528,   667,   668,   669,   670,   671,     0,     0,     0,     0,
       0,     0,     0,    89,    90,    91,    92,    93,    94,    95,
      96,     0,    97,    98,    99,     0,     0,     0,     0,     0,
       0,     0,   100,   101,     0,   102,   103,   104,   105,   106,
     107,   108,  2602,   672,   111,   673,   674,     0,   114,   115,
     116,   117,   118,   119,   675,   676,   120,   121,   677,   678,
     124,     0,   125,   126,   127,   128,   679,     0,   680,     0,
     131,   132,   133,   134,   135,   136,   137,   138,   139,     0,
     140,   141,   142,   143,   144,   145,     0,   146,   147,   148,
    2603,   681,   682,   683,   684,   685,   686,   687,   151,   152,
     153,   154,   155,   156,   157,   688,   689,   160,   690,   161,
       0,   162,   163,   164,   165,   166,   167,     0,   168,   169,
     170,   171,   172,     0,     0,   173,   174,   691,   176,   177,
       0,   178,   179,   180,     0,   181,   182,   183,     0,   184,
     185,   186,   187,   692,   189,   190,   191,   192,   693,   694,
     194,     0,   195,   196,   695,   198,     0,   199,     0,   200,
     201,     0,   202,   203,   204,   205,   206,   207,     0,   208,
       0,   209,   210,     0,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,     0,   222,   223,   224,   225,
     226,   227,     0,   228,   229,   230,   231,   232,   233,   234,
     696,   697,     0,   698,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,     0,     0,   248,   249,   250,
     251,     0,   252,   253,   254,   699,   700,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     701,   279,   702,   281,   282,   283,   284,   703,   285,   286,
     287,   288,   704,   705,   290,   706,   292,   293,   294,     0,
     295,   296,     0,     0,   707,   298,   299,     0,     0,   300,
     301,   302,   303,   304,   708,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,     0,   316,   317,   709,   319,
     320,   321,   322,   323,   324,     0,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   710,   335,   336,   337,   338,
       0,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     711,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,     0,   369,   370,   371,   372,   373,   712,   374,
     375,   376,   377,   378,   379,   380,   381,   713,   383,     0,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   714,     0,   397,   398,     0,   399,   400,   401,
     402,   403,   404,   405,     0,   715,   716,     0,     0,   408,
     409,   717,   411,   718,   719,   413,   414,   415,   416,  2604,
     418,   419,     0,     0,   420,   421,   422,   423,   424,   720,
       0,   425,   426,   427,   428,   429,   430,   721,     0,   432,
     433,   434,   435,   436,   437,     0,     0,   438,     0,     0,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   722,     0,     0,     0,     0,     0,     0,   723,   724,
       0,     0,     0,     0,     0,     0,     0,   726,     0,     0,
       0,     0,   727,    88,   666,   528,   667,   668,   669,   670,
     671,     0,     0,     0,     0,     0,     0,     0,    89,    90,
      91,    92,    93,    94,    95,    96,     0,    97,    98,    99,
       0,     0,     0,     0,     0,     0,     0,   100,   101,     0,
     102,   103,   104,   105,   106,   107,   108,   109,   672,   111,
     673,   674,     0,   114,   115,   116,   117,   118,   119,   675,
     676,   120,   121,   677,   678,   124,     0,   125,   126,   127,
     128,   679,     0,   680,     0,   131,   132,   133,   134,   135,
     136,   137,   138,   139,     0,   140,   141,   142,   143,   144,
     145,     0,   146,   147,   148,  2603,   681,   682,   683,   684,
     685,   686,   687,   151,   152,   153,   154,   155,   156,   157,
     688,   689,   160,   690,   161,     0,   162,   163,   164,   165,
     166,   167,     0,   168,   169,   170,   171,   172,     0,     0,
     173,   174,   691,   176,   177,     0,   178,   179,   180,     0,
     181,   182,   183,     0,   184,   185,   186,   187,   692,   189,
     190,   191,   192,   693,   694,   194,     0,   195,   196,   695,
     198,     0,   199,     0,   200,   201,     0,   202,   203,   204,
     205,   206,   207,     0,   208,     0,   209,   210,     0,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
       0,   222,   223,   224,   225,   226,   227,     0,   228,   229,
     230,   231,   232,   233,   234,   696,   697,     0,   698,     0,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
       0,     0,   248,   249,   250,   251,     0,   252,   253,   254,
     699,   700,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   701,   279,   702,   281,   282,
     283,   284,   703,   285,   286,   287,   288,   704,   705,   290,
     706,   292,   293,   294,     0,   295,   296,     0,     0,   707,
     298,   299,     0,     0,   300,   301,   302,   303,   304,   708,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
       0,   316,   317,   709,   319,   320,   321,   322,   323,   324,
       0,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     710,   335,   336,   337,   338,     0,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,     0,   351,
     352,   353,   354,   355,   356,   711,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,     0,   369,   370,
     371,   372,   373,   712,   374,   375,   376,   377,   378,   379,
     380,   381,   713,   383,     0,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   714,     0,   397,
     398,     0,   399,   400,   401,   402,   403,   404,   405,     0,
     715,   716,     0,     0,   408,   409,   717,   411,   718,   719,
     413,   414,   415,   416,  2604,   418,   419,     0,     0,   420,
     421,   422,   423,   424,   720,     0,   425,   426,   427,   428,
     429,   430,   721,     0,   432,   433,   434,   435,   436,   437,
       0,     0,   438,     0,     0,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   722,     0,     0,     0,
       0,     0,     0,   723,   724,     0,     0,     0,     0,     0,
       0,     0,   726,     0,     0,     0,     0,   727,    88,   666,
     528,   667,   668,   669,   670,   671,     0,     0,     0,     0,
       0,     0,     0,    89,    90,    91,    92,    93,    94,    95,
      96,     0,    97,    98,    99,     0,     0,     0,     0,     0,
       0,     0,   100,   101,     0,   102,   103,   104,   105,   106,
     107,   108,   109,   672,   111,   673,   674,     0,   114,   115,
     116,   117,   118,   119,   675,   676,   120,   121,   677,   678,
     124,     0,   125,   126,   127,   128,   679,     0,   680,     0,
     131,   132,   133,   134,   135,   136,   137,   138,   139,     0,
     140,   141,   142,   143,   144,   145,     0,   146,   147,   148,
     149,   681,   682,   683,   684,   685,   686,   687,   151,   152,
     153,   154,   155,   156,   157,   688,   689,   160,     0,   161,
       0,   162,   163,   164,   165,   166,   167,     0,   168,   169,
     170,   171,   172,     0,     0,   173,   174,   691,   176,   177,
       0,   178,   179,   180,     0,   181,   182,   183,     0,   184,
     185,   186,   187,   692,   189,   190,   191,   192,   693,   694,
     194,     0,   195,   196,   695,   198,     0,   199,     0,   200,
     201,     0,   202,   203,   204,   205,   206,   207,     0,   208,
       0,   209,   210,     0,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,     0,   222,   223,   224,   225,
     226,   227,     0,   228,   229,   230,   231,   232,   233,   234,
     696,   697,     0,   698,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,     0,     0,   248,   249,   250,
     251,     0,   252,   253,   254,   699,   700,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     701,   279,   702,   281,   282,   283,   284,     0,   285,   286,
     287,   288,   704,   705,   290,   706,   292,   293,   294,     0,
     295,   296,     0,     0,   707,   298,   299,     0,     0,   300,
     301,   302,   303,   304,   708,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,     0,   316,   317,   709,   319,
     320,   321,   322,   323,   324,     0,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   710,   335,   336,   337,   338,
       0,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,     0,   369,   370,   371,   372,   373,   712,   374,
     375,   376,   377,   378,   379,   380,   381,   713,   383,     0,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   714,     0,   397,   398,     0,   399,   400,   401,
     402,   403,   404,   405,     0,   715,   716,     0,     0,   408,
     409,   717,   411,   718,   719,   413,   414,   415,   416,   417,
     418,   419,     0,     0,   420,   421,   422,   423,   424,   720,
       0,   425,   426,   427,   428,   429,   430,   721,     0,   432,
     433,   434,   435,   436,   437,     0,     0,   438,     0,     0,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,     0,     0,     0,     0,     0,     0,     0,  1434,  1435,
       0,     0,    88,   666,   528,   667,   668,  1436,   670,   671,
       0,     0,   727,     0,     0,     0,     0,    89,    90,    91,
      92,    93,    94,    95,    96,     0,    97,    98,    99,     0,
       0,     0,     0,     0,     0,     0,   100,   101,     0,   102,
     103,   104,   105,   106,   107,   108,   109,   672,   111,   673,
     674,     0,   114,   115,   116,   117,   118,   119,   675,   676,
     120,   121,   677,   678,   124,     0,   125,   126,   127,   128,
     679,     0,   680,     0,   131,   132,   133,   134,   135,   136,
     137,   138,   139,     0,   140,   141,   142,   143,   144,   145,
       0,   146,   147,   148,   149,   681,   682,   683,   684,   685,
     686,   687,   151,   152,   153,   154,   155,   156,   157,   688,
     689,   160,     0,   161,     0,   162,   163,   164,   165,   166,
     167,     0,   168,   169,   170,   171,   172,     0,     0,   173,
     174,   691,   176,   177,     0,   178,   179,   180,     0,   181,
     182,   183,     0,   184,   185,   186,   187,   692,   189,   190,
     191,   192,   693,   694,   194,     0,   195,   196,   695,   198,
       0,   199,     0,   200,   201,     0,   202,   203,   204,   205,
     206,   207,     0,   208,     0,   209,   210,     0,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,     0,
     222,   223,   224,   225,   226,   227,     0,   228,   229,   230,
     231,   232,   233,   234,   696,   697,     0,   698,     0,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,     0,
       0,   248,   249,   250,   251,     0,   252,   253,   254,   699,
     700,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   701,   279,   702,   281,   282,   283,
     284,     0,   285,   286,   287,   288,   704,   705,   290,   706,
     292,   293,   294,     0,   295,   296,     0,     0,   297,   298,
     299,     0,     0,   300,   301,   302,   303,   304,   708,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,     0,
     316,   317,   709,   319,   320,   321,   322,   323,   324,     0,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   710,
     335,   336,   337,   338,     0,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,     0,   351,   352,
     353,   354,   355,   356,  1562,  1563,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,     0,   369,   370,   371,
     372,   373,   712,   374,   375,   376,   377,   378,   379,   380,
     381,   713,   383,     0,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   714,     0,   397,   398,
       0,   399,   400,   401,   402,   403,   404,   405,     0,   715,
     716,     0,     0,   408,   409,   717,   411,   718,   719,   413,
     414,   415,   416,   417,   418,   419,     0,     0,   420,   421,
     422,   423,   424,   720,     0,   425,   426,   427,   428,   429,
     430,   721,     0,   432,   433,   434,   435,   436,   437,     0,
       0,   438,     0,     0,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,     0,     0,     0,     0,     0,
       0,     0,  1564,  1565,     0,     0,     0,     0,     0,     0,
       0,  1436,     0,     0,     0,     0,   727,    88,   666,   528,
     667,   668,   669,   670,   671,     0,     0,     0,     0,     0,
       0,     0,    89,    90,    91,    92,    93,    94,    95,    96,
       0,    97,    98,    99,     0,     0,     0,     0,     0,     0,
       0,   100,   101,     0,   102,   103,   104,   105,   106,   107,
     108,   109,   672,   111,   673,   674,     0,   114,   115,   116,
     117,   118,   119,   675,   676,   120,   121,   677,   678,   124,
       0,   125,   126,   127,   128,   679,     0,   680,     0,   131,
     132,   133,   134,   135,   136,   137,   138,   139,     0,   140,
     141,   142,   143,   144,   145,     0,   146,   147,   148,   149,
     681,   682,   683,   684,   685,   686,   687,   151,   152,   153,
     154,   155,   156,   157,   688,   689,   160,     0,   161,     0,
     162,   163,   164,   165,   166,   167,     0,   168,   169,   170,
     171,   172,     0,     0,   173,   174,   691,   176,   177,     0,
     178,   179,   180,     0,   181,   182,   183,     0,   184,   185,
     186,   187,   692,   189,   190,   191,   192,   693,   694,   194,
       0,   195,   196,   695,   198,     0,   199,     0,   200,   201,
       0,   202,   203,   204,   205,   206,   207,     0,   208,     0,
     209,   210,     0,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,     0,   222,   223,   224,   225,   226,
     227,     0,   228,   229,   230,   231,   232,   233,   234,   696,
     697,     0,   698,     0,   238,     0,   240,   241,   242,   243,
     244,   245,   246,   247,     0,     0,   248,   249,   250,   251,
       0,   252,   253,   254,   699,   700,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   701,
     279,   702,   281,   282,   283,   284,     0,   285,   286,   287,
     288,   704,   705,   290,   706,   292,   293,   294,     0,   295,
     296,     0,     0,   707,   298,   299,     0,     0,   300,   301,
     302,   303,   304,   708,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,     0,   316,   317,   709,   319,   320,
     321,   322,   323,   324,     0,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   710,   335,   336,   337,   338,     0,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,     0,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,     0,   369,   370,   371,   372,   373,   712,   374,   375,
     376,   377,   378,   379,   380,   381,   713,   383,     0,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   714,     0,   397,   398,     0,   399,   400,   401,   402,
     403,   404,   405,     0,   715,   716,     0,     0,   408,   409,
     717,   411,   718,   719,   413,   414,   415,   416,   417,   418,
     419,     0,     0,   420,   421,   422,   423,   424,   720,     0,
     425,   426,   427,   428,   429,   430,   721,     0,   432,   433,
     434,   435,   436,   437,     0,     0,   438,     0,     0,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
       0,     0,     0,     0,     0,     0,     0,  1434,  1435,     0,
       0,     0,     0,     0,     0,     0,  1436,     0,     0,     0,
       0,   727,    88,   666,   528,   667,   668,   669,   670,   671,
       0,     0,     0,     0,     0,     0,     0,    89,    90,    91,
      92,    93,    94,    95,    96,     0,    97,    98,    99,     0,
       0,     0,     0,     0,     0,     0,   100,   101,     0,   102,
     103,   104,   105,   106,   107,   108, -1529,   672,   111,   673,
     674,     0,   114,   115,   116,   117,   118,   119,   675,   676,
     120,   121,   677,   678,   124,     0,   125,   126,   127,   128,
     679,     0,   680,     0,   131,   132,   133,   134,   135,   136,
     137,   138,   139,     0,   140,   141,   142,   143,   144,   145,
       0,   146,   147,   148,  2603,   681,   682,   683,   684,   685,
     686,   687,   151,   152,   153,   154,   155,   156,   157,   688,
     689,   160,   690,   161,     0,   162,   163,   164,   165,   166,
     167,     0,   168,   169,   170,   171,   172,     0,     0,   173,
     174,   691,   176,   177,     0,   178,   179,   180,     0,   181,
     182,   183,     0,   184,   185,   186,   187,   692,   189,   190,
     191,   192,   693,   694,   194,     0,   195,   196,   695,   198,
       0,   199,     0,   200,   201,     0,   202,   203,   204,   205,
   -1529,   207,     0,   208,     0,   209,   210,     0,   211,   212,
     213,   214,   215,   216, -1529,   218,   219,   220,   221,     0,
     222,   223,   224,   225,   226,   227,     0,   228,   229,   230,
     231,   232,   233,   234,   696,   697,     0,   698,     0,   238,
       0,     0,   241,   242,   243,   244,   245,   246,   247,     0,
       0,   248,   249,   250, -1529,     0,   252,   253,   254,   699,
     700,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   701,   279,   702,   281,   282,   283,
     284,     0,   285,   286,     0,   288,   704,   705,   290,   706,
     292,   293,   294,     0,   295,   296,     0,     0,   707,   298,
     299,     0,     0,   300,   301,   302,   303,   304,   708,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,     0,
     316,   317,   709,   319,   320,   321,   322,   323,   324,     0,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   710,
     335,   336,   337,   338,     0,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,     0,   351,   352,
     353,   354,   355,   356,   711,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,     0,   369,   370,   371,
     372,   373,   712,   374,   375,   376,   377,   378, -1529,   380,
     381,   713,   383,     0,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   714,     0,   397,   398,
       0,   399,   400,   401,   402,   403,   404,   405,     0,   715,
     716,     0,     0,   408,   409,   717,   411,   718,   719,   413,
     414,   415,   416,  2604,   418,   419,     0,     0,   420,   421,
     422,   423,   424,   720,     0,   425,   426,   427,   428,   429,
     430,   721,     0,   432,   433,   434,   435,   436,   437,     0,
       0,   438,     0,     0,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459, -1529,     0,     0,     0,     0,
       0,     0,   723,   724,     0,     0,     0,     0,     0,     0,
       0,   726,     0,     0,     0,     0,   727,    88,   666,   528,
     667,   668,   669,   670,   671,     0,     0,     0,     0,     0,
       0,     0,    89,    90,    91,    92,    93,    94,    95,    96,
       0,    97,    98,    99,     0,     0,     0,     0,     0,     0,
       0,   100,   101,     0,   102,   103,   104,   105,   106,   107,
     108,     0,   672,   111,   673,   674,     0,   114,   115,   116,
     117,   118,   119,   675,   676,   120,   121,   677,   678,   124,
       0,   125,   126,   127,   128,   679,     0,   680,     0,   131,
     132,   133,   134,   135,   136,   137,   138,   139,     0,   140,
     141,   142,   143,   144,   145,     0,   146,   147,   148,   149,
     681,   682,   683,   684,   685,   686,   687,   151,   152,   153,
     154,   155,   156,   157,   688,   689,   160,   690,   161,     0,
     162,   163,   164,   165,   166,   167,     0,   168,   169,   170,
     171,   172,     0,     0,   173,   174,   691,   176,   177,     0,
     178,   179,   180,     0,   181,     0,   183,     0,   184,   185,
     186,   187,   692,   189,   190,   191,   192,   693,   694,   194,
       0,   195,   196,   695,   198,     0,   199,     0,   200,   201,
       0,   202,   203,   204,   205,     0,   207,     0,   208,     0,
     209,   210,     0,   211,   212,   213,   214,   215,   216,     0,
     218,   219,   220,   221,     0,   222,   223,   224,   225,   226,
     227,     0,   228,   229,   230,   231,   232,   233,   234,   696,
     697,     0,   698,     0,   238,     0,     0,   241,   242,   243,
     244,   245,   246,   247,     0,     0,   248,   249,   250,     0,
       0,   252,   253,   254,   699,   700,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   701,
     279,   702,   281,   282,   283,   284,     0,   285,   286,     0,
     288,   704,   705,   290,   706,   292,   293,   294,     0,   295,
     296,     0,     0,   707,   298,   299,     0,     0,   300,   301,
     302,   303,   304,   708,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,     0,   316,   317,   709,   319,   320,
     321,   322,   323,   324,     0,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   710,   335,   336,   337,   338,     0,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,     0,   351,   352,   353,   354,   355,   356,   711,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,     0,   369,   370,   371,   372,   373,   712,   374,   375,
     376,   377,   378,     0,   380,   381,   713,   383,     0,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   714,     0,   397,   398,     0,   399,   400,   401,   402,
     403,   404,   405,     0,   715,   716,     0,     0,   408,   409,
     717,   411,   718,   719,   413,   414,   415,   416,   417,   418,
     419,     0,     0,   420,   421,   422,   423,   424,   720,     0,
     425,   426,   427,   428,   429,   430,   721,     0,   432,   433,
     434,   435,   436,   437,     0,     0,   438,     0,     0,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
       0,     0,     0,     0,     0,     0,     0,   723,   724,   484,
       0,     0,     0,     0,     0,     0,   726,     0,     0,     0,
       0,   727,     0,     0,    89,    90,    91,    92,    93,    94,
      95,    96,     0,    97,    98,    99,     0,     0,     0,     0,
       0,  2073,     0,   100,   101,     0,   102,   103,   104,     0,
     106,   107,   108,   109,   110,     0,   112,   113,     0,   114,
     115,   116,   117,   118,   119,     0,     0,   120,   121,   122,
     123,   124,     0,   125,   126,   127,   128,   129,     0,     0,
       0,   131,   132,   133,   134,   135,     0,   137,   138,   139,
       0,   140,   141,   142,   143,   144,   145,     0,  -579,   147,
     148,   149,     0,     0,     0,     0,     0,     0,     0,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,     0,
     161,     0,   162,   163,   164,   165,   166,   167,     0,   168,
     169,   170,   171,   172,     0,     0,   173,   174,   175,   176,
     177,     0,   178,   179,   180,     0,   181,   182,   183,     0,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
       0,   194,     0,   195,   196,   197,   198,     0,   199,     0,
     200,     0,     0,  -579,   203,   204,   205,     0,   207,     0,
     208,     0,   209,   210,     0,   211,   212,   213,   214,   215,
     216,     0,   218,   219,   220,   221,     0,   222,   223,   224,
     225,   226,   227,     0,   228,  -579,   230,   231,   232,   233,
     234,   235,   236,     0,   237,     0,   238,     0,     0,   241,
    -579,   243,   244,   245,   246,   247,     0,     0,   248,  -579,
     250,     0,     0,   252,   253,   254,     0,     0,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,  -579,   280,   281,   282,   283,   284,     0,   285,
     286,     0,   288,     0,   289,   290,   291,   292,   293,   294,
       0,   295,   296,     0,     0,   297,   298,   299,     0,     0,
     300,   301,     0,   303,     0,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,     0,   316,   317,   318,
     319,   320,   321,   322,   323,   324,     0,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,     0,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,     0,   351,   352,  -579,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,     0,   369,   370,   371,   372,   373,     0,
     374,   375,   376,   377,   378,     0,   380,   381,   382,   383,
       0,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,     0,   397,   398,     0,   399,  -579,
     401,   402,   403,   404,   405,     0,   406,   407,     0,     0,
     408,   409,   410,   411,   412,     0,   413,   414,   415,   416,
     417,   418,   419,     0,     0,   420,   421,   422,   423,   424,
       0,     0,   425,   426,   427,   428,   429,   430,   431,     0,
     432,     0,   434,   435,   436,   437,     0,     0,   438,     0,
       0,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,     0,     0,     0,    88,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   784,
      89,    90,    91,    92,    93,    94,    95,    96,     0,    97,
      98,    99,     0,     0,     0,     0,     0,     0,     0,   100,
     101,     0,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,     0,   114,   115,   116,   117,   118,
     119,     0,   676,   120,   121,   122,   123,   124,     0,   125,
     126,   127,   128,   679,     0,   680,     0,   131,   132,   133,
     134,   135,   136,   137,   138,   139,     0,   140,   141,   142,
     143,   144,   145,     0,   146,   147,   148,   149,   681,   682,
     683,   684,   685,   686,   687,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,     0,   161,     0,   162,   163,
     164,   165,   166,   167,     0,   168,   169,   170,   171,   172,
       0,     0,   173,   174,   175,   176,   177,     0,   178,   179,
     180,     0,   181,   182,   183,     0,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   693,     0,   194,     0,   195,
     196,   197,   198,     0,   199,     0,   200,   201,     0,   202,
     203,   204,   205,   206,   207,     0,   208,     0,   209,   210,
       0,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,   221,     0,   222,   223,   224,   225,   226,   227,     0,
     228,   229,   230,   231,   232,   233,   234,   235,   236,     0,
     237,     0,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,  1829,     0,   248,   249,   250,   251,     0,   252,
     253,   254,   699,   700,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,     0,   285,   286,   287,   288,     0,
     705,   290,   291,   292,   293,   294,     0,   295,   296,     0,
     553,   297,   298,   299,     0,     0,   300,   301,   302,   303,
     304,   708,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,     0,   316,   317,   709,   319,   320,   321,   322,
     323,   324,     0,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,     0,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
       0,   351,   352,   353,   354,   355,   356,   357,  1830,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,    24,
     369,   370,   371,   372,   373,   712,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,     0,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   714,
       0,   397,   398,    28,   399,   400,   401,   402,   403,   404,
     405,     0,   406,   407,     0,     0,   408,   409,   717,   411,
     718,     0,   413,   414,   415,   416,   417,   418,   419,     0,
       0,   420,   421,   422,   423,   424,   720,     0,   425,   426,
     427,   428,   429,   589,   431,     0,   432,   433,   434,   435,
     436,   437,     0,     0,   438,     0,    31,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,     0,     0,
      32,    88,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1831,     0,    89,    90,    91,    92,
      93,    94,    95,    96,     0,    97,    98,    99,     0,     0,
       0,     0,     0,     0,     0,   100,   101,     0,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
       0,   114,   115,   116,   117,   118,   119,     0,   676,   120,
     121,   122,   123,   124,     0,   125,   126,   127,   128,   679,
       0,   680,     0,   131,   132,   133,   134,   135,   136,   137,
     138,   139,     0,   140,   141,   142,   143,   144,   145,     0,
     146,   147,   148,   149,   681,   682,   683,   684,   685,   686,
     687,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,     0,   161,     0,   162,   163,   164,   165,   166,   167,
       0,   168,   169,   170,   171,   172,     0,     0,   173,   174,
     175,   176,   177,     0,   178,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   693,     0,   194,     0,   195,   196,   197,   198,     0,
     199,     0,   200,   201,     0,   202,   203,   204,   205,   206,
     207,     0,   208,     0,   209,   210,     0,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,     0,   222,
     223,   224,   225,   226,   227,     0,   228,   229,   230,   231,
     232,   233,   234,   235,   236,     0,   237,     0,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,  1829,     0,
     248,   249,   250,   251,     0,   252,   253,   254,   699,   700,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
       0,   285,   286,   287,   288,     0,   705,   290,   291,   292,
     293,   294,     0,   295,   296,     0,   553,   297,   298,   299,
       0,     0,   300,   301,   302,   303,   304,   708,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,     0,   316,
     317,   709,   319,   320,   321,   322,   323,   324,     0,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,     0,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,     0,   351,   352,   353,
     354,   355,   356,   357,  1830,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,     0,   369,   370,   371,   372,
     373,   712,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,     0,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   714,     0,   397,   398,     0,
     399,   400,   401,   402,   403,   404,   405,     0,   406,   407,
       0,     0,   408,   409,   717,   411,   718,     0,   413,   414,
     415,   416,   417,   418,   419,     0,     0,   420,   421,   422,
     423,   424,   720,     0,   425,   426,   427,   428,   429,   430,
     431,     0,   432,   433,   434,   435,   436,   437,     0,     0,
     438,     0,     0,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,     0,     0,    88,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1831,    89,    90,    91,    92,    93,    94,    95,    96,     0,
      97,    98,    99,     0,     0,     0,     0,     0,     0,     0,
     100,   101,     0,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,     0,   114,   115,   116,   117,
     118,   119,     0,   676,   120,   121,   122,   123,   124,     0,
     125,   126,   127,   128,   679,     0,   680,     0,   131,   132,
     133,   134,   135,   136,   137,   138,   139,     0,   140,   141,
     142,   143,   144,   145,     0,   146,   147,   148,   149,   681,
     682,   683,   684,   685,   686,   687,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,     0,   161,     0,   162,
     163,   164,   165,   166,   167,     0,   168,   169,   170,   171,
     172,     0,     0,   173,   174,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,     0,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   693,     0,   194,     0,
     195,   196,   197,   198,     0,   199,     0,   200,   201,     0,
     202,   203,   204,   205,   206,   207,     0,   208,     0,   209,
     210,     0,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,     0,   222,   223,   224,   225,   226,   227,
       0,   228,   229,   230,   231,   232,   233,   234,   235,   236,
       0,   237,     0,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,     0,     0,   248,   249,   250,   251,     0,
     252,   253,   254,   699,   700,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,     0,   285,   286,   287,   288,
       0,   705,   290,   291,   292,   293,   294,     0,   295,   296,
       0,     0,   297,   298,   299,     0,     0,   300,   301,   302,
     303,   304,   708,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,     0,   316,   317,   709,   319,   320,   321,
     322,   323,   324,     0,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,     0,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,     0,   351,   352,   353,   354,   355,   356,   357,  1830,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,   372,   373,   712,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,     0,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     714,     0,   397,   398,     0,   399,   400,   401,   402,   403,
     404,   405,     0,   406,   407,     0,     0,   408,   409,   717,
     411,   718,     0,   413,   414,   415,   416,   417,   418,   419,
       0,     0,   420,   421,   422,   423,   424,   720,     0,   425,
     426,   427,   428,   429,   430,   431,     0,   432,   433,   434,
     435,   436,   437,     0,     0,   438,     0,     0,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,     0,
       0,    88,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    33,    89,    90,    91,    92,
      93,    94,    95,    96,     0,    97,    98,    99,     0,     0,
       0,     0,     0,     0,     0,   100,   101,     0,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
       0,   114,   115,   116,   117,   118,   119,     0,   676,   120,
     121,   122,   123,   124,     0,   125,   126,   127,   128,   679,
       0,   680,     0,   131,   132,   133,   134,   135,   136,   137,
     138,   139,     0,   140,   141,   142,   143,   144,   145,     0,
     146,   147,   148,   149,   681,   682,   683,   684,   685,   686,
     687,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,     0,   161,     0,   162,   163,   164,   165,   166,   167,
       0,   168,   169,   170,   171,   172,     0,     0,   173,   174,
     175,   176,   177,     0,   178,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   693,     0,   194,     0,   195,   196,   197,   198,     0,
     199,     0,   200,   201,     0,   202,   203,   204,   205,   206,
     207,     0,   208,     0,   209,   210,     0,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,     0,   222,
     223,   224,   225,   226,   227,     0,   228,   229,   230,   231,
     232,   233,   234,   235,   236,     0,   237,     0,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,     0,     0,
     248,   249,   250,   251,     0,   252,   253,   254,   699,   700,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
       0,   285,   286,   287,   288,     0,   705,   290,   291,   292,
     293,   294,     0,   295,   296,     0,     0,   297,   298,   299,
       0,     0,   300,   301,   302,   303,   304,   708,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,     0,   316,
     317,   709,   319,   320,   321,   322,   323,   324,     0,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,     0,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,     0,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,     0,   369,   370,   371,   372,
     373,   712,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,     0,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   714,     0,   397,   398,     0,
     399,   400,   401,   402,   403,   404,   405,     0,   406,   407,
       0,     0,   408,   409,   717,   411,   718,     0,   413,   414,
     415,   416,   417,   418,   419,     0,     0,   420,   421,   422,
     423,   424,   720,     0,   425,   426,   427,   428,   429,   430,
     431,     0,   432,   433,   434,   435,   436,   437,     0,     0,
     438,     0,     0,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,     0,     0,   646,   988,   528,     0,
       0,     0,   670,     0,     0,     0,     0,     0,     0,     0,
    2414,    89,    90,    91,    92,    93,    94,    95,    96,     0,
      97,    98,    99,     0,     0,     0,     0,     0,     0,     0,
     100,   101,     0,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,     0,   114,   115,   116,   117,
     118,   119,     0,     0,   120,   121,   122,   123,   124,     0,
     125,   126,   127,   128,   129,     0,   130,     0,   131,   132,
     133,   134,   135,   136,   137,   138,   139,     0,   140,   141,
     142,   143,   144,   145,     0,   146,   147,   148,   149,     0,
       0,     0,   150,     0,     0,     0,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,     0,   161,     0,   162,
     163,   164,   165,   166,   167,     0,   168,   169,   170,   171,
     172,     0,     0,   173,   174,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,     0,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   989,   194,     0,
     195,   196,   197,   198,     0,   199,     0,   200,   201,     0,
     202,   203,   204,   205,   206,   207,     0,   208,     0,   209,
     210,     0,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,     0,   222,   223,   224,   225,   226,   227,
       0,   228,   229,   230,   231,   232,   233,   234,   235,   236,
       0,   237,     0,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,     0,     0,   248,   249,   250,   251,     0,
     252,   253,   254,     0,     0,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,     0,   285,   286,   287,   288,
       0,   289,   290,   291,   292,   293,   294,     0,   295,   296,
     990,     0,   297,   298,   299,     0,     0,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,     0,   316,   317,   318,   319,   320,   321,
     322,   323,   324,     0,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,     0,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,   372,   373,     0,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,     0,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,     0,   397,   398,     0,   399,   400,   401,   402,   403,
     404,   405,     0,   406,   407,     0,     0,   408,   409,   410,
     411,   412,   991,   413,   414,   415,   416,   417,   418,   419,
       0,     0,   420,   421,   422,   423,   424,     0,     0,   425,
     426,   427,   428,   429,   430,   431,     0,   432,   433,   434,
     435,   436,   437,     0,     0,   438,     0,     0,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,     0,
       0,   646,     0,     0,     0,     0,   992,   993,  1698,     0,
       0,     0,     0,     0,     0,  1699,    89,    90,    91,    92,
      93,    94,    95,    96,     0,    97,    98,    99,     3,     4,
       0,     0,     0,     0,     0,   100,   101,     0,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
       0,   114,   115,   116,   117,   118,   119,     0,     0,   120,
     121,   122,   123,   124,     0,   125,   126,   127,   128,   129,
       0,   130,     0,   131,   132,   133,   134,   135,   136,   137,
     138,   139,     0,   140,   141,   142,   143,   144,   145,     0,
     146,   147,   148,   149,     0,     0,     0,   150,     0,     0,
       0,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,     0,   161,     0,   162,   163,   164,   165,   166,   167,
       0,   168,   169,   170,   171,   172,     0,     0,   173,   174,
     175,   176,   177,     0,   178,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,     0,   194,     0,   195,   196,   197,   198,     0,
     199,     0,   200,   201,     0,   202,   203,   204,   205,   206,
     207,     0,   208,     0,   209,   210,     0,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,     0,   222,
     223,   224,   225,   226,   227,     0,   228,   229,   230,   231,
     232,   233,   234,   235,   236,     0,   237,     0,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,     0,     0,
     248,   249,   250,   251,     0,   252,   253,   254,     0,     0,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
       0,   285,   286,   287,   288,     0,   289,   290,   291,   292,
     293,   294,     0,   295,   296,     0,     0,   297,   298,   299,
       0,     0,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,     0,   316,
     317,   318,   319,   320,   321,   322,   323,   324,     0,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,     0,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,     0,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,    24,   369,   370,   371,   372,
     373,     0,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,     0,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,     0,   397,   398,    28,
     399,   400,   401,   402,   403,   404,   405,     0,   406,   407,
       0,     0,   408,   409,   410,   411,   412,     0,   413,   414,
     415,   416,   417,   418,   419,     0,     0,   420,   421,   422,
     423,   424,     0,     0,   425,   426,   427,   428,   429,   589,
     431,     0,   432,   433,   434,   435,   436,   437,     0,     0,
     438,     0,    31,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,     0,     0,    32,   484,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      33,     0,    89,    90,    91,    92,    93,    94,    95,    96,
     586,    97,    98,    99,     0,     0,     0,     0,     0,     0,
       0,   100,   101,     0,   102,   103,   104,     0,   106,   107,
     108,   109,   110,     0,   112,   113,     0,   114,   115,   116,
     117,   118,   119,     0,     0,   120,   121,   122,   123,   124,
       0,   125,   126,   127,   128,   129,     0,     0,     0,   131,
     132,   133,   134,   135,     0,   137,   138,   139,     0,   140,
     141,   142,   143,   144,   145,     0,     0,   147,   148,   149,
       0,     0,     0,     0,     0,     0,     0,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,     0,   161,     0,
     162,   163,   164,   165,   166,   167,     0,   168,   169,   170,
     171,   172,     0,     0,   173,   174,   175,   176,   177,     0,
     178,   179,   180,     0,   181,   182,   183,     0,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,     0,   194,
       0,   195,   196,   197,   198,     0,   199,     0,   200,     0,
       0,     0,   203,   204,   205,     0,   207,     0,   208,     0,
     209,   210,     0,   211,   212,   213,   214,   215,   216,     0,
     218,   219,   220,   221,     0,   222,   223,   224,   225,   226,
     227,     0,   228,     0,   230,   231,   232,   233,   234,   235,
     236,     0,   237,     0,   238,     0,     0,   241,     0,   243,
     244,   245,   246,   247,     0,     0,   248,     0,   250,     0,
       0,   252,   253,   254,     0,     0,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
       0,   280,   281,   282,   283,   284,     0,   285,   286,     0,
     288,     0,   289,   290,   291,   292,   293,   294,     0,   295,
     296,     0,     0,   297,   298,   299,     0,     0,   300,   301,
       0,   303,     0,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,     0,   316,   317,   318,   319,   320,
     321,   322,   323,   324,     0,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,     0,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,     0,   351,   352,     0,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,    24,   369,   370,   371,   372,   373,     0,   374,   375,
     376,   377,   378,     0,   380,   381,   382,   383,     0,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,     0,   397,   398,    28,   399,     0,   401,   402,
     403,   404,   405,     0,   587,   407,     0,     0,   588,   409,
     410,   411,   412,     0,   413,   414,   415,   416,   417,   418,
     419,     0,     0,   420,   421,   422,   423,   424,     0,     0,
     425,   426,   427,   428,   429,   589,   431,     0,   432,     0,
     434,   435,   436,   437,     0,     0,   438,     0,    31,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
       0,     0,    32,   484,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    33,     0,    89,    90,
      91,    92,    93,    94,    95,    96,     0,    97,    98,    99,
       0,     0,     0,     0,     0,     0,     0,   100,   101,     0,
     102,   103,   104,     0,   106,   107,   108,   109,   110,     0,
     112,   113,     0,   114,   115,   116,   117,   118,   119,     0,
       0,   120,   121,   122,   123,   124,     0,   125,   126,   127,
     128,   129,     0,     0,     0,   131,   132,   133,   134,   135,
       0,   137,   138,   139,     0,   140,   141,   142,   143,   144,
     145,     0,     0,   147,   148,   149,     0,     0,     0,     0,
       0,     0,     0,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,     0,   161,     0,   162,   163,   164,   165,
     166,   167,     0,   168,   169,   170,   171,   172,     0,     0,
     173,   174,   175,   176,   177,     0,   178,   179,   180,     0,
     181,   182,   183,     0,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,     0,   194,     0,   195,   196,   197,
     198,     0,   199,     0,   200,     0,     0,     0,   203,   204,
     205,     0,   207,     0,   208,     0,   209,   210,     0,   211,
     212,   213,   214,   215,   216,     0,   218,   219,   220,   221,
       0,   222,   223,   224,   225,   226,   227,     0,   228,     0,
     230,   231,   232,   233,   234,   235,   236,     0,   237,     0,
     238,     0,     0,   241,     0,   243,   244,   245,   246,   247,
       0,     0,   248,     0,   250,     0,     0,   252,   253,   254,
       0,     0,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,     0,   280,   281,   282,
     283,   284,     0,   285,   286,     0,   288,     0,   289,   290,
     291,   292,   293,   294,     0,   295,   296,     0,     0,   297,
     298,   299,     0,     0,   300,   301,     0,   303,     0,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
       0,   316,   317,   318,   319,   320,   321,   322,   323,   324,
       0,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,     0,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,     0,   351,
     352,     0,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,    24,   369,   370,
     371,   372,   373,     0,   374,   375,   376,   377,   378,     0,
     380,   381,   382,   383,     0,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,     0,   397,
     398,    28,   399,     0,   401,   402,   403,   404,   405,     0,
     406,   407,     0,     0,   408,   409,   410,   411,   412,     0,
     413,   414,   415,   416,   417,   418,   419,     0,     0,   420,
     421,   422,   423,   424,     0,     0,   425,   426,   427,   428,
     429,   589,   431,     0,   432,     0,   434,   435,   436,   437,
       0,     0,   438,     0,    31,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,     0,     0,    32,   484,
       0,  2246,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    33,     0,    89,    90,    91,    92,    93,    94,
      95,    96,     0,    97,    98,    99,     0,     0,     0,     0,
       0,     0,     0,   100,   101,     0,   102,   103,   104,     0,
     106,   107,   108,   109,   110,     0,   112,   113,     0,   114,
     115,   116,   117,   118,   119,     0,     0,   120,   121,   122,
     123,   124,     0,   125,   126,   127,   128,   129,     0,     0,
       0,   131,   132,   133,   134,   135,     0,   137,   138,   139,
       0,   140,   141,   142,   143,   144,   145,     0,     0,   147,
     148,   149,     0,     0,     0,     0,     0,     0,     0,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,     0,
     161,     0,   162,   163,   164,   165,   166,   167,     0,   168,
     169,   170,   171,   172,     0,     0,   173,   174,   175,   176,
     177,     0,   178,   179,   180,     0,   181,   182,   183,     0,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
       0,   194,     0,   195,   196,   197,   198,     0,   199,     0,
     200,     0,     0,     0,   203,   204,   205,     0,   207,     0,
     208,     0,   209,   210,     0,   211,   212,   213,   214,   215,
     216,     0,   218,   219,   220,   221,     0,   222,   223,   224,
     225,   226,   227,     0,   228,     0,   230,   231,   232,   233,
     234,   235,   236,     0,   237,     0,   238,     0,     0,   241,
       0,   243,   244,   245,   246,   247,     0,     0,   248,     0,
     250,     0,     0,   252,   253,   254,     0,     0,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,     0,   280,   281,   282,   283,   284,     0,   285,
     286,     0,   288,     0,   289,   290,   291,   292,   293,   294,
       0,   295,   296,     0,     0,   297,   298,   299,     0,     0,
     300,   301,     0,   303,     0,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,     0,   316,   317,   318,
     319,   320,   321,   322,   323,   324,     0,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,     0,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,     0,   351,   352,     0,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,     0,   369,   370,   371,   372,   373,     0,
     374,   375,   376,   377,   378,     0,   380,   381,   382,   383,
       0,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,     0,   397,   398,     0,   399,     0,
     401,   402,   403,   404,   405,     0,   406,   407,     0,     0,
     408,   409,   410,   411,   412,     0,   413,   414,   415,   416,
     417,   418,   419,     0,     0,   420,   421,   422,   423,   424,
       0,     0,   425,   426,   427,   428,   429,   430,   431,     0,
     432,     0,   434,   435,   436,   437,     0,     0,   438,     0,
       0,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,     0,     0,   484,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2264,    89,
      90,    91,    92,    93,    94,    95,    96,     0,    97,    98,
      99,     0,     0,     0,     0,     0,     0,     0,   100,   101,
       0,   102,   103,   104,     0,   106,   107,   108,   109,   110,
       0,   112,   113,     0,   114,   115,   116,   117,   118,   119,
       0,     0,   120,   121,   122,   123,   124,     0,   125,   126,
     127,   128,   129,     0,     0,     0,   131,   132,   133,   134,
     135,     0,   137,   138,   139,     0,   140,   141,   142,   143,
     144,   145,     0,     0,   147,   148,   149,     0,     0,     0,
       0,     0,     0,     0,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,     0,   161,     0,   162,   163,   164,
     165,   166,   167,     0,   168,   169,   170,   171,   172,     0,
       0,   173,   174,   175,   176,   177,     0,   178,   179,   180,
       0,   181,   182,   183,     0,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,     0,   194,     0,   195,   196,
     197,   198,     0,   199,     0,   200,     0,     0,     0,   203,
     204,   205,     0,   207,     0,   208,     0,   209,   210,     0,
     211,   212,   213,   214,   215,   216,     0,   218,   219,   220,
     221,     0,   222,   223,   224,   225,   226,   227,     0,   228,
       0,   230,   231,   232,   233,   234,   235,   236,     0,   237,
       0,   238,     0,     0,   241,     0,   243,   244,   245,   246,
     247,     0,     0,   248,     0,   250,     0,     0,   252,   253,
     254,     0,     0,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,     0,   280,   281,
     282,   283,   284,     0,   285,   286,     0,   288,     0,   289,
     290,   291,   292,   293,   294,     0,   295,   296,     0,     0,
     297,   298,   299,     0,     0,   300,   301,     0,   303,     0,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,     0,   316,   317,   318,   319,   320,   321,   322,   323,
     324,     0,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,     0,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,     0,
     351,   352,     0,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,     0,   369,
     370,   371,   372,   373,     0,   374,   375,   376,   377,   378,
       0,   380,   381,   382,   383,     0,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,     0,
     397,   398,     0,   399,     0,   401,   402,   403,   404,   405,
       0,   406,   407,     0,     0,   408,   409,   410,   411,   412,
       0,   413,   414,   415,   416,   417,   418,   419,     0,     0,
     420,   421,   422,   423,   424,     0,     0,   425,   426,   427,
     428,   429,   430,   431,     0,   432,     0,   434,   435,   436,
     437,     0,     0,   438,     0,     0,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,     0,     0,   484,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   765,    89,    90,    91,    92,    93,    94,
      95,    96,     0,    97,    98,    99,     0,     0,     0,     0,
       0,     0,     0,   100,   101,     0,   102,   103,   104,     0,
     106,   107,   108,   109,   110,     0,   112,   113,     0,   114,
     115,   116,   117,   118,   119,     0,     0,   120,   121,   122,
     123,   124,     0,   125,   126,   127,   128,   129,     0,     0,
       0,   131,   132,   133,   134,   135,     0,   137,   138,   139,
       0,   140,   141,   142,   143,   144,   145,     0,     0,   147,
     148,   149,     0,     0,     0,     0,     0,     0,     0,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,     0,
     161,     0,   162,   163,   164,   165,   166,   167,     0,   168,
     169,   170,   171,   172,     0,     0,   173,   174,   175,   176,
     177,     0,   178,   179,   180,     0,   181,   182,   183,     0,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
       0,   194,     0,   195,   196,   197,   198,     0,   199,     0,
     200,     0,     0,     0,   203,   204,   205,     0,   207,     0,
     208,     0,   209,   210,     0,   211,   212,   213,   214,   215,
     216,     0,   218,   219,   220,   221,     0,   222,   223,   224,
     225,   226,   227,     0,   228,     0,   230,   231,   232,   233,
     234,   235,   236,     0,   237,     0,   238,     0,     0,   241,
       0,   243,   244,   245,   246,   247,     0,     0,   248,     0,
     250,     0,     0,   252,   253,   254,     0,     0,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,     0,   280,   281,   282,   283,   284,     0,   285,
     286,     0,   288,     0,   289,   290,   291,   292,   293,   294,
       0,   295,   296,     0,     0,   297,   298,   299,     0,     0,
     300,   301,     0,   303,     0,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,     0,   316,   317,   318,
     319,   320,   321,   322,   323,   324,     0,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,     0,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,     0,   351,   352,     0,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,     0,   369,   370,   371,   372,   373,     0,
     374,   375,   376,   377,   378,     0,   380,   381,   382,   383,
       0,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,     0,   397,   398,     0,   399,     0,
     401,   402,   403,   404,   405,     0,   406,   407,     0,     0,
     408,   409,   410,   411,   412,     0,   413,   414,   415,   416,
     417,   418,   419,     0,     0,   420,   421,   422,   423,   424,
       0,     0,   425,   426,   427,   428,   429,   430,   431,     0,
     432,     0,   434,   435,   436,   437,     0,     0,   438,     0,
       0,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,     0,     0,   484,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1552,    89,
      90,    91,    92,    93,    94,    95,    96,     0,    97,    98,
      99,     0,     0,     0,     0,     0,     0,     0,   100,   101,
       0,   102,   103,   104,     0,   106,   107,   108,   109,   110,
       0,   112,   113,     0,   114,   115,   116,   117,   118,   119,
       0,     0,   120,   121,   122,   123,   124,     0,   125,   126,
     127,   128,   129,     0,     0,     0,   131,   132,   133,   134,
     135,     0,   137,   138,   139,     0,   140,   141,   142,   143,
     144,   145,     0,     0,   147,   148,   149,     0,     0,     0,
       0,     0,     0,     0,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,     0,   161,     0,   162,   163,   164,
     165,   166,   167,     0,   168,   169,   170,   171,   172,     0,
       0,   173,   174,   175,   176,   177,     0,   178,   179,   180,
       0,   181,   182,   183,     0,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,     0,   194,     0,   195,   196,
     197,   198,     0,   199,     0,   200,     0,     0,     0,   203,
     204,   205,     0,   207,     0,   208,     0,   209,   210,     0,
     211,   212,   213,   214,   215,   216,     0,   218,   219,   220,
     221,     0,   222,   223,   224,   225,   226,   227,     0,   228,
       0,   230,   231,   232,   233,   234,   235,   236,     0,   237,
       0,   238,     0,     0,   241,     0,   243,   244,   245,   246,
     247,     0,     0,   248,     0,   250,     0,     0,   252,   253,
     254,     0,     0,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,     0,   280,   281,
     282,   283,   284,     0,   285,   286,     0,   288,     0,   289,
     290,   291,   292,   293,   294,     0,   295,   296,     0,     0,
     297,   298,   299,     0,     0,   300,   301,     0,   303,     0,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,     0,   316,   317,   318,   319,   320,   321,   322,   323,
     324,     0,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,     0,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,     0,
     351,   352,     0,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,     0,   369,
     370,   371,   372,   373,     0,   374,   375,   376,   377,   378,
       0,   380,   381,   382,   383,     0,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,     0,
     397,   398,     0,   399,     0,   401,   402,   403,   404,   405,
       0,   406,   407,     0,     0,   408,   409,   410,   411,   412,
       0,   413,   414,   415,   416,   417,   418,   419,     0,     0,
     420,   421,   422,   423,   424,     0,     0,   425,   426,   427,
     428,   429,   430,   431,     0,   432,     0,   434,   435,   436,
     437,     0,     0,   438,     0,     0,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,     0,     0,     0,
       0,     0,  1011,   988,   528,     0,     0,  1416,   670,     0,
       0,     0,     0,  2057,  1417,  1418,  1419,    89,    90,    91,
      92,    93,    94,    95,    96,   865,    97,    98,    99,   866,
     867,   868,   869,   870,   871,   872,   100,   101,   873,   102,
     103,   104,   105,   106,   107,   108,     0,  1012,   111,  1013,
    1014,   874,   114,   115,   116,   117,   118,   119,   875,   876,
     120,   121,  1015,  1016,   124,   877,   125,   126,   127,   128,
       0,   878,   130,   879,   131,   132,   133,   134,   135,   136,
     137,   138,   139,   880,   140,   141,   142,   143,   144,   145,
     881,   146,   147,   148,   149,   882,   883,   884,   150,   885,
     886,   887,   151,   152,   153,   154,   155,   156,   157,  1017,
    1018,   160,   888,   161,   889,   162,   163,   164,   165,   166,
     167,   890,   168,   169,   170,   171,   172,   891,   892,   173,
     174,   691,   176,   177,   893,   178,   179,   180,   894,   181,
     182,   183,   895,   184,   185,   186,   187,     0,   189,   190,
     191,   192,     0,   896,   194,   897,   195,   196,  1019,   198,
     898,   199,   899,   200,   201,   900,   202,   203,   204,   205,
     206,   207,   901,   208,   902,     0,   210,   903,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   904,
     222,   223,   224,   225,   226,   227,   905,   228,   229,     0,
     231,   232,   233,   234,  1020,  1021,   906,  1022,   907,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   908,
     909,   248,   249,   250,   251,   910,   252,   253,   254,   911,
     912,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,  1023,   279,  1024,   281,   282,   283,
    2158,   913,   285,   286,   287,   288,   914,     0,   290,  1025,
     292,   293,   294,   915,   295,   296,   916,   917,  2159,   298,
     299,   918,   919,   300,     0,   302,   303,   304,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   920,
     316,   317,     0,   319,   320,     0,   322,   323,   324,   921,
     325,   326,   327,   328,   329,   330,   331,   332,   333,  1026,
     335,   336,   337,   338,   922,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   923,   351,   352,
     353,   354,   355,   356,  1027,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   924,   369,   370,   371,
     372,   373,   925,   374,  2160,   376,   377,   378,   379,   380,
     381,  1029,   383,   926,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,     0,   927,   397,   398,
     928,   399,   400,   401,   402,   403,   404,   405,   929,  1030,
    1031,   930,   931,   408,   409,     0,   411,     0,   932,   413,
     414,   415,   416,   417,   418,   419,   933,   934,   420,   421,
     422,   423,   424,   935,   936,   425,   426,   427,   428,   429,
       0,  1032,   937,   432,   433,   434,   435,   436,   437,   938,
     939,   438,   940,   941,   439,   440,   441,   442,   443,   444,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   456,   457,   458,   459,     0,   484,     0,  1420,  1421,
    1422,  1416,  2161,  2162,  1425,  1426,  1427,  1428,  1417,  1418,
    1419,    89,    90,    91,    92,    93,    94,    95,    96,     0,
      97,    98,    99,     0,     0,     0,     0,     0,     0,     0,
     100,   101,     0,   102,   103,   104,     0,   106,   107,   108,
     109,   110,     0,   112,   113,     0,   114,   115,   116,   117,
     118,   119,     0,     0,   120,   121,   122,   123,   124,     0,
     125,   126,   127,   128,   129,     0,     0,     0,   131,   132,
     133,   134,   135,     0,   137,   138,   139,     0,   140,   141,
     142,   143,   144,   145,     0,     0,   147,   148,   149,     0,
       0,     0,     0,     0,     0,     0,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,     0,   161,     0,   162,
     163,   164,   165,   166,   167,     0,   168,   169,   170,   171,
     172,     0,     0,   173,   174,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,     0,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,     0,   194,     0,
     195,   196,   197,   198,     0,   199,     0,   200,     0,     0,
       0,   203,   204,   205,     0,   207,     0,   208,     0,   209,
     210,     0,   211,   212,   213,   214,   215,   216,     0,   218,
     219,   220,   221,     0,   222,   223,   224,   225,   226,   227,
       0,   228,     0,   230,   231,   232,   233,   234,   235,   236,
       0,   237,     0,   238,     0,     0,   241,     0,   243,   244,
     245,   246,   247,     0,     0,   248,     0,   250,     0,     0,
     252,   253,   254,     0,     0,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,     0,
     280,   281,   282,   283,   284,     0,   285,   286,     0,   288,
       0,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,     0,   297,   298,   299,     0,     0,   300,   301,     0,
     303,     0,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,     0,   316,   317,   318,   319,   320,   321,
     322,   323,   324,     0,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,     0,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,     0,   351,   352,     0,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,   372,   373,     0,   374,   375,   376,
     377,   378,     0,   380,   381,   382,   383,     0,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,     0,   397,   398,     0,   399,     0,   401,   402,   403,
     404,   405,     0,   406,   407,     0,     0,   408,   409,   410,
     411,   412,     0,   413,   414,   415,   416,   417,   418,   419,
       0,     0,   420,   421,   422,   423,   424,     0,     0,   425,
     426,   427,   428,   429,   430,   431,     0,   432,     0,   434,
     435,   436,   437,     0,     0,   438,     0,     0,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,     0,
       0,     0,  1420,  1421,  1422,     0,  1423,  1424,  1425,  1426,
    1427,  1428,  1108,     0,     0,  1109,     0,     0,     0,  1110,
    1111,  1112,     0,     0,     0,     0,     0,     0,     0,     0,
    1108,     0,     0,  1109,     0,     0,  1113,  1110,  1111,  1112,
       0,     0,     0,     0,  1115,     0,     0,     0,     0,     0,
       0,  1116,     0,     0,  1113,     0,     0,     0,  1108,     0,
       0,  1109,  1115,     0,     0,  1110,  1111,  1112,     0,  1116,
       0,     0,     0,     0,     0,     0,  1117,     0,     0,     0,
       0,     0,  1113,     0,     0,     0,     0,     0,     0,     0,
    1115,     0,     0,     0,  1117,     0,  1108,  1116,     0,  1109,
       0,     0,     0,  1110,  1111,  1112,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1113,     0,  1117,     0,     0,     0,     0,     0,  1115,     0,
       0,     0,     0,     0,     0,  1116,     0,     0,     0,     0,
    1108,     0,     0,  1109,     0,     0,     0,  1110,  1111,  1112,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1117,     0,     0,     0,  1113,     0,     0,     0,     0,     0,
       0,     0,  1115,     0,     0,  1118,     0,     0,  1108,  1116,
       0,  1109,     0,     0,     0,  1110,  1111,  1112,     0,  1119,
       0,     0,     0,  1118,  1120,     0,     0,     0,     0,     0,
       0,     0,  1113,     0,  1117,     0,     0,  1119,     0,     0,
    1115,     0,  1120,     0,     0,  1121,  1122,  1116,     0,     0,
       0,  1118,     0,     0,     0,     0,     0,     0,     0,  1123,
       0,     0,     0,  1121,  1122,  1119,     0,     0,     0,     0,
    1120,     0,  1117,     0,     0,     0,     0,  1123,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1118,
       0,  1121,  1122,     0,     0,     0,  1124,     0,     0,  1125,
       0,     0,     0,  1119,     0,  1123,     0,     0,  1120,     0,
       0,     0,     0,  1126,  1124,     0,  1127,  1125,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1121,
    1122,  1126,     0,  1118,  1127,     0,     0,     0,     0,     0,
       0,     0,  1124,  1123,     0,  1125,     0,  1119,     0,     0,
       0,     0,  1120,     0,     0,     0,     0,     0,     0,  1126,
       0,     0,  1127,     0,     0,     0,     0,     0,     0,     0,
       0,  1118,     0,  1121,  1122,     0,     0,     0,     0,     0,
    1124,     0,     0,  1125,     0,  1119,     0,  1123,     0,     0,
    1120,     0,     0,     0,     0,     0,     0,  1126,     0,     0,
    1127,     0,     0,  1128,     0,     0,     0,     0,     0,     0,
       0,  1121,  1122,     0,     0,     0,     0,     0,     0,     0,
       0,  1128,     0,     0,  1124,  1123,     0,  1125,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1126,     0,     0,  1127,     0,     0,     0,     0,  1128,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1124,     0,     0,  1125,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1126,
       0,     0,  1127,     0,     0,     0,     0,  1128,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1129,     0,     0,  1130,  1131,  1132,     0,  1133,  1134,  1135,
    1136,  1137,  1138,     0,     0,     0,     0,  1791,  1129,     0,
       0,  1130,  1131,  1132,     0,  1133,  1134,  1135,  1136,  1137,
    1138,  1128,     0,     0,     0,  2000,  1108,     0,     0,  1109,
       0,     0,     0,  1110,  1111,  1112,  1129,     0,     0,  1130,
    1131,  1132,     0,  1133,  1134,  1135,  1136,  1137,  1138,     0,
    1113,     0,     0,  2035,     0,     0,     0,     0,  1115,  1128,
    1108,     0,     0,  1109,     0,  1116,     0,  1110,  1111,  1112,
       0,     0,     0,     0,  1129,     0,     0,  1130,  1131,  1132,
       0,  1133,  1134,  1135,  1136,  1137,  1138,     0,     0,     0,
    1117,  2122,  1115,     0,     0,     0,     0,     0,     0,  1116,
       0,     0,     0,     0,     0,     0,     0,  1108,     0,     0,
    1109,     0,     0,     0,  1110,  1111,  1112,     0,  1129,     0,
       0,  1130,  1131,  1132,  1117,  1133,  1134,  1135,  1136,  1137,
    1138,  1113,     0,     0,     0,  2215,     0,     0,     0,  1115,
       0,     0,     0,     0,     0,  1108,  1116,     0,  1109,     0,
       0,     0,  1110,  1111,  1112,     0,  1129,     0,     0,  1130,
    1131,  1132,     0,  1133,  1134,  1135,  1136,  1137,  1138,  1113,
       0,  1117,     0,  2233,     0,     0,     0,  1115,     0,     0,
       0,     0,     0,     0,  1116,     0,     0,     0,  1108,  1118,
       0,  1109,     0,     0,     0,  1110,  1111,  1112,     0,     0,
       0,     0,     0,  1119,     0,     0,     0,     0,  1120,  1117,
       0,     0,  1113,     0,     0,     0,     0,     0,     0,     0,
    1115,     0,     0,  1118,     0,     0,     0,  1116,     0,  1121,
    1122,     0,     0,     0,     0,     0,     0,  1119,     0,     0,
       0,     0,  1120,  1123,     0,     0,     0,     0,     0,     0,
       0,     0,  1117,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1121,  1122,     0,     0,     0,     0,     0,
    1118,     0,     0,     0,     0,     0,     0,  1123,     0,     0,
    1124,     0,     0,  1125,  1119,     0,     0,     0,     0,  1120,
       0,     0,     0,     0,     0,     0,     0,  1126,     0,     0,
    1127,     0,     0,     0,     0,     0,     0,     0,  1118,     0,
    1121,  1122,     0,     0,  1124,     0,     0,  1125,     0,     0,
       0,     0,  1119,     0,  1123,     0,     0,  1120,     0,     0,
       0,  1126,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1121,  1122,
       0,  1118,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1124,  1123,     0,  1125,  1119,     0,     0,     0,     0,
    1120,     0,     0,     0,     0,     0,     0,     0,  1126,     0,
       0,  1127,     0,     0,     0,     0,     0,  1128,     0,     0,
       0,  1121,  1122,     0,     0,     0,     0,     0,     0,  1124,
       0,     0,  1125,     0,     0,  1123,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1126,     0,     0,  1127,
       0,  1128,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1124,     0,     0,  1125,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1126,
       0,     0,  1127,     0,     0,     0,     0,     0,  1128,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1129,     0,     0,  1130,  1131,  1132,
       0,  1133,  1134,  1135,  1136,  1137,  1138,     0,     0,     0,
       0,  2375,     0,     0,     0,     0,  1128,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1129,     0,
       0,  1130,  1131,  1132,     0,  1133,  1134,  1135,  1136,  1137,
    1138,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1128,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1129,     0,     0,  1130,  1131,
    1132,     0,  1133,  1134,  1135,  1136,  1137,  1138,     0,     0,
       0,     0,  2573,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1129,     0,     0,  1130,  1131,  1132,     0,
    1133,  1134,  1135,  1136,  1137,  1138,     0,     0,     0,     0,
    2585,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1129,   864,     0,  1130,
    1131,  1132,     0,  1133,  1134,  1135,  1136,  1137,  1138,     0,
       0,  1282,    89,    90,    91,    92,    93,    94,    95,    96,
     865,    97,    98,    99,   866,   867,   868,   869,   870,   871,
     872,   100,   101,   873,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   874,   114,   115,   116,
     117,   118,   119,   875,   876,   120,   121,   122,   123,   124,
     877,   125,   126,   127,   128,   129,   878,   130,   879,   131,
     132,   133,   134,   135,   136,   137,   138,   139,   880,   140,
     141,   142,   143,   144,   145,   881,   146,   147,   148,   149,
     882,   883,   884,   150,   885,   886,   887,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   888,   161,   889,
     162,   163,   164,   165,   166,   167,   890,   168,   169,   170,
     171,   172,   891,   892,   173,   174,   175,   176,   177,   893,
     178,   179,   180,   894,   181,   182,   183,   895,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   896,   194,
     897,   195,   196,   197,   198,   898,   199,   899,   200,   201,
     900,   202,   203,   204,   205,   206,   207,   901,   208,   902,
     209,   210,   903,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   904,   222,   223,   224,   225,   226,
     227,   905,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   906,   237,   907,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   908,   909,   248,   249,   250,   251,
     910,   252,   253,   254,   911,   912,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   913,   285,   286,   287,
     288,   914,   289,   290,   291,   292,   293,   294,   915,   295,
     296,   916,   917,   297,   298,   299,   918,   919,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   920,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   921,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   922,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   923,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   924,   369,   370,   371,   372,   373,   925,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   926,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   927,   397,   398,   928,   399,   400,   401,   402,
     403,   404,   405,   929,   406,   407,   930,   931,   408,   409,
     410,   411,   412,   932,   413,   414,   415,   416,   417,   418,
     419,   933,   934,   420,   421,   422,   423,   424,   935,   936,
     425,   426,   427,   428,   429,   430,   431,   937,   432,   433,
     434,   435,   436,   437,   938,   939,   438,   940,   941,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     484,     0,     0,     0,     0,     0,     0,     0,     0,   942,
       0,     0,     0,     0,     0,    89,    90,    91,    92,    93,
      94,    95,    96,     0,    97,    98,    99,     0,     0,     0,
       0,     0,     0,     0,   100,   101,     0,   102,   103,   104,
       0,   106,   107,   108,   109,   110,     0,   112,   113,     0,
     114,   115,   116,   117,   118,   119,     0,     0,   120,   121,
     122,   123,   124,     0,   125,   126,   127,   128,   129,     0,
       0,     0,   131,   132,   133,   134,   135,     0,   137,   138,
     139,     0,   140,   141,   142,   143,   144,   145,     0,     0,
     147,   148,   149,     0,     0,     0,     0,     0,     0,     0,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
       0,   161,     0,   162,   163,   164,   165,   166,   167,     0,
     168,   169,   170,   171,   172,     0,     0,   173,   174,   175,
     176,   177,     0,   178,   179,   180,     0,   181,   182,   183,
       0,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,     0,   194,     0,   195,   196,   197,   198,     0,   199,
       0,   200,     0,     0,     0,   203,   204,   205,     0,   207,
       0,   208,     0,   209,   210,     0,   211,   212,   213,   214,
     215,   216,     0,   218,   219,   220,   221,     0,   222,   223,
     224,   225,   226,   227,     0,   228,     0,   230,   231,   232,
     233,   234,   235,   236,     0,   237,     0,   238,     0,     0,
     241,     0,   243,   244,   245,   246,   247,     0,     0,   248,
       0,   250,     0,     0,   252,   253,   254,     0,     0,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,     0,   280,   281,   282,   283,   284,     0,
     285,   286,     0,   288,     0,   289,   290,   291,   292,   293,
     294,     0,   295,   296,     0,     0,   297,   298,   299,     0,
       0,   300,   301,     0,   303,     0,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,     0,   316,   317,
     318,   319,   320,   321,   322,   323,   324,     0,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,     0,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,     0,   351,   352,     0,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,     0,   369,   370,   371,   372,   373,
       0,   374,   375,   376,   377,   378,     0,   380,   381,   382,
     383,     0,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,     0,   397,   398,     0,   399,
       0,   401,   402,   403,   404,   405,     0,   406,   407,     0,
       0,   408,   409,   410,   411,   412,     0,   413,   414,   415,
     416,   417,   418,   419,     0,     0,   420,   421,   422,   423,
     424,     0,     0,   425,   426,   427,   428,   429,   430,   431,
       0,   432,     0,   434,   435,   436,   437,     0,     0,   438,
       0,     0,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   646,   988,   528,     0,     0,     0,   670,
       0,     0,  1976,     0,     0,     0,     0,     0,    89,    90,
      91,    92,    93,    94,    95,    96,     0,    97,    98,    99,
       0,     0,     0,     0,     0,     0,     0,   100,   101,     0,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,     0,   114,   115,   116,   117,   118,   119,     0,
       0,   120,   121,   122,   123,   124,     0,   125,   126,   127,
     128,   129,     0,   130,     0,   131,   132,   133,   134,   135,
     136,   137,   138,   139,     0,   140,   141,   142,   143,   144,
     145,     0,   146,   147,   148,   149,     0,     0,     0,   150,
       0,     0,     0,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,  1162,   161,     0,   162,   163,   164,   165,
     166,   167,     0,   168,   169,   170,   171,   172,     0,     0,
     173,   174,   175,   176,   177,     0,   178,   179,   180,     0,
     181,   182,   183,     0,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   989,   194,     0,   195,   196,   197,
     198,     0,   199,     0,   200,   201,     0,   202,   203,   204,
     205,   206,   207,     0,   208,     0,   209,   210,     0,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
       0,   222,   223,   224,   225,   226,   227,     0,   228,   229,
     230,   231,   232,   233,   234,   235,   236,     0,   237,     0,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
       0,     0,   248,   249,   250,   251,     0,   252,   253,   254,
       0,     0,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,     0,   285,   286,   287,   288,     0,   289,   290,
     291,   292,   293,   294,     0,   295,   296,   990,     0,   297,
     298,   299,     0,     0,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
       0,   316,   317,   318,   319,   320,   321,   322,   323,   324,
       0,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,     0,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,     0,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,     0,   369,   370,
     371,   372,   373,     0,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,     0,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,     0,   397,
     398,     0,   399,   400,   401,   402,   403,   404,   405,     0,
     406,   407,     0,     0,   408,   409,   410,   411,   412,   991,
     413,   414,   415,   416,   417,   418,   419,     0,     0,   420,
     421,   422,   423,   424,     0,     0,   425,   426,   427,   428,
     429,   430,   431,     0,   432,   433,   434,   435,   436,   437,
       0,     0,   438,     0,     0,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   646,   988,   528,     0,
       0,     0,   670,   992,   993,     0,     0,     0,     0,     0,
       0,    89,    90,    91,    92,    93,    94,    95,    96,     0,
      97,    98,    99,     0,     0,     0,     0,     0,     0,     0,
     100,   101,     0,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,     0,   114,   115,   116,   117,
     118,   119,     0,     0,   120,   121,   122,   123,   124,     0,
     125,   126,   127,   128,   129,     0,   130,     0,   131,   132,
     133,   134,   135,   136,   137,   138,   139,     0,   140,   141,
     142,   143,   144,   145,     0,   146,   147,   148,   149,     0,
       0,     0,   150,     0,     0,     0,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,  1164,   161,     0,   162,
     163,   164,   165,   166,   167,     0,   168,   169,   170,   171,
     172,     0,     0,   173,   174,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,     0,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   989,   194,     0,
     195,   196,   197,   198,     0,   199,     0,   200,   201,     0,
     202,   203,   204,   205,   206,   207,     0,   208,     0,   209,
     210,     0,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,     0,   222,   223,   224,   225,   226,   227,
       0,   228,   229,   230,   231,   232,   233,   234,   235,   236,
       0,   237,     0,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,     0,     0,   248,   249,   250,   251,     0,
     252,   253,   254,     0,     0,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,     0,   285,   286,   287,   288,
       0,   289,   290,   291,   292,   293,   294,     0,   295,   296,
     990,     0,   297,   298,   299,     0,     0,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,     0,   316,   317,   318,   319,   320,   321,
     322,   323,   324,     0,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,     0,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,   372,   373,     0,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,     0,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,     0,   397,   398,     0,   399,   400,   401,   402,   403,
     404,   405,     0,   406,   407,     0,     0,   408,   409,   410,
     411,   412,   991,   413,   414,   415,   416,   417,   418,   419,
       0,     0,   420,   421,   422,   423,   424,     0,     0,   425,
     426,   427,   428,   429,   430,   431,     0,   432,   433,   434,
     435,   436,   437,     0,     0,   438,     0,     0,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   646,
     988,   528,     0,     0,     0,   670,   992,   993,     0,     0,
       0,     0,     0,     0,    89,    90,    91,    92,    93,    94,
      95,    96,     0,    97,    98,    99,     0,     0,     0,     0,
       0,     0,     0,   100,   101,     0,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,     0,   114,
     115,   116,   117,   118,   119,     0,     0,   120,   121,   122,
     123,   124,     0,   125,   126,   127,   128,   129,     0,   130,
       0,   131,   132,   133,   134,   135,   136,   137,   138,   139,
       0,   140,   141,   142,   143,   144,   145,     0,   146,   147,
     148,   149,     0,     0,     0,   150,     0,     0,     0,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,     0,
     161,     0,   162,   163,   164,   165,   166,   167,     0,   168,
     169,   170,   171,   172,     0,     0,   173,   174,   175,   176,
     177,     0,   178,   179,   180,     0,   181,   182,   183,     0,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     989,   194,     0,   195,   196,   197,   198,     0,   199,     0,
     200,   201,     0,   202,   203,   204,   205,   206,   207,     0,
     208,     0,   209,   210,     0,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,     0,   222,   223,   224,
     225,   226,   227,     0,   228,   229,   230,   231,   232,   233,
     234,   235,   236,     0,   237,     0,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,     0,     0,   248,   249,
     250,   251,     0,   252,   253,   254,     0,     0,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,     0,   285,
     286,   287,   288,     0,   289,   290,   291,   292,   293,   294,
       0,   295,   296,   990,     0,   297,   298,   299,     0,     0,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,     0,   316,   317,   318,
     319,   320,   321,   322,   323,   324,     0,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,     0,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,     0,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,     0,   369,   370,   371,   372,   373,     0,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
       0,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,     0,   397,   398,     0,   399,   400,
     401,   402,   403,   404,   405,     0,   406,   407,     0,     0,
     408,   409,   410,   411,   412,   991,   413,   414,   415,   416,
     417,   418,   419,     0,     0,   420,   421,   422,   423,   424,
       0,     0,   425,   426,   427,   428,   429,   430,   431,     0,
     432,   433,   434,   435,   436,   437,     0,     0,   438,     0,
       0,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,     0,     0,  1108,     0,     0,  1109,     0,   992,
     993,  1110,  1111,  1112,     0,     0,     0,     0,     0,     0,
       0,     0,  1108,     0,     0,  1109,     0,     0,  1113,  1110,
    1111,  1112,  1558,     0,     0,     0,  1115,     0,     0,     0,
       0,     0,     0,  1116,     0,     0,  1113,     0,     0,     0,
    1108,     0,     0,  1109,  1115,     0,     0,  1110,  1111,  1112,
       0,  1116,     0,     0,     0,     0,     0,     0,  1117,     0,
       0,     0,     0,     0,  1113,     0,     0,     0,     0,     0,
       0,     0,  1115,     0,     0,     0,  1117,     0,  1108,  1116,
       0,  1109,     0,     0,     0,  1110,  1111,  1112,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1113,     0,  1117,  1732,     0,     0,  1559,     0,
    1115,     0,     0,     0,     0,     0,     0,  1116,     0,     0,
       0,     0,  1108,     0,     0,  1109,     0,     0,     0,  1110,
    1111,  1112,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1117,     0,     0,     0,  1113,     0,     0,     0,
       0,     0,     0,     0,  1115,     0,     0,  1118,     0,     0,
       0,  1116,     0,     0,     0,  1772,     0,     0,     0,     0,
    1773,  1119,     0,     0,     0,  1118,  1120,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1117,     0,     0,  1119,
       0,     0,  2643,     0,  1120,     0,     0,  1121,  1122,     0,
       0,     0,     0,  1118,     0,     0,     0,     0,     0,     0,
       0,  1123,     0,     0,     0,  1121,  1122,  1119,     0,     0,
       0,     0,  1120,     0,     0,     0,     0,     0,     0,  1123,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1118,     0,  1121,  1122,     0,     0,     0,  1124,     0,
       0,  1125,     0,     0,     0,  1119,     0,  1123,     0,     0,
    1120,     0,     0,     0,     0,  1126,  1124,     0,  1127,  1125,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1121,  1122,  1126,     0,  1118,  1127,     0,     0,     0,
       0,     0,     0,     0,  1124,  1123,     0,  1125,     0,  1119,
       0,     0,     0,     0,  1120,     0,     0,     0,     0,     0,
       0,  1126,     0,     0,  1127,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1121,  1122,     0,     0,     0,
       0,     0,  1124,     0,     0,  1125,     0,  2644,     0,  1123,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1126,
       0,  1108,  1127,     0,  1109,  1128,     0,     0,  1110,  1111,
    1112,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1128,     0,  1113,  1124,     0,  1781,  1125,
       0,     0,     0,  1115,     0,     0,     0,     0,     0,     0,
    1116,     0,     0,  1126,     0,     0,  1127,     0,     0,     0,
       0,  1128,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1560,     0,     0,  1746,  1117,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1128,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1129,     0,     0,  1130,  1131,  1132,     0,  1133,
    1134,  1135,  1136,  1137,  1138,     0,     0,     0,     0,     0,
    1129,     0,     0,  1130,  1131,  1132,     0,  1133,  1134,  1135,
    1136,  1137,  1138,  1128,     0,     0,     0,  1108,     0,     0,
    1109,     0,     0,     0,  1110,  1111,  1112,     0,  1129,     0,
       0,  1130,  1131,  1132,     0,  1133,  1134,  1135,  1136,  1137,
    1138,  1113,     0,     0,  1118,     0,     0,     0,     0,  1115,
       0,     0,     0,     0,     0,     0,  1116,     0,  1119,     0,
       0,     0,     0,  1120,     0,     0,  1129,     0,     0,  1130,
    1131,  1132,     0,  1133,  1134,  1135,  1136,  1137,  1138,     0,
       0,  1117,     0,     0,  1121,  1122,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1123,     0,
    1108,     0,     0,  1109,     0,     0,     0,  1110,  1111,  1112,
    1129,     0,     0,  1130,  1131,  1132,     0,  1133,  1134,  1135,
    1136,  1137,  1138,     0,  1113,     0,     0,     0,     0,     0,
       0,     0,  1115,     0,     0,  1124,     0,     0,  1125,  1116,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1126,     0,     0,  1127,     0,     0,  1108,     0,
       0,  1109,     0,     0,  1117,  1110,  1111,  1112,     0,     0,
       0,     0,     0,     0,     0,  1786,     0,     0,     0,     0,
    1118,     0,  1113,     0,     0,     0,     0,     0,     0,     0,
    1115,     0,     0,     0,  1119,     0,     0,  1116,     0,  1120,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1121,  1122,  1117,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1123,     0,  1108,     0,     0,  1109,
       0,     0,  1128,  1110,  1111,  1112,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1113,     0,     0,  1118,     0,     0,     0,     0,  1115,     0,
       0,  1124,     0,     0,  1125,  1116,     0,  1119,     0,     0,
       0,     0,  1120,     0,     0,     0,     0,     0,  1126,     0,
       0,  1127,     0,     0,     0,     0,     0,     0,     0,     0,
    1117,     0,     0,  1121,  1122,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1123,     0,     0,
       0,  1118,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1119,     0,     0,     0,  1129,
    1120,     0,  1130,  1131,  1132,     0,  1133,  1134,  1135,  1136,
    1137,  1138,     0,     0,  1124,     0,     0,  1125,     0,     0,
       0,  1121,  1122,     0,     0,     0,     0,     0,     0,     0,
       0,  1126,     0,     0,  1127,  1123,     0,  1108,  1128,     0,
    1109,     0,     0,     0,  1110,  1111,  1112,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1118,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1115,
       0,     0,  1124,  1119,     0,  1125,  1116,     0,  1120,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1126,
       0,     0,  1127,     0,     0,     0,     0,     0,     0,  1121,
    1122,  1117,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1123,     0,     0,     0,     0,     0,     0,
       0,  1128,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1129,     0,     0,  1130,  1131,
    1132,     0,  1133,  1134,  1135,  1136,  1137,  1138,     0,     0,
    1124,  1996,     0,  1125,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1126,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1128,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1118,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1119,     0,     0,     0,  1129,  1120,
       0,  1130,  1131,  1132,     0,  1133,  1134,  1135,  1136,  1137,
    1138,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   -1529, -1529,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1123,     0,     0,  1128,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1129,     0,     0,  1130,
    1131,  1132,     0,  1133,  1134,  1135,  1136,  1137,  1138,     0,
       0,     0,     0,     0, -1529,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1126,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1129,     0,     0,  1130,  1131,  1132,
       0,  1133,  1134,  1135,  1136,  1137,  1138,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1128,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   864,  1129,  1469,     0,  1130,  1131,
    1132,     0,  1133,  1134,  1135,  1136,  1137,  1138,     0,    89,
      90,    91,    92,    93,    94,    95,    96,   865,    97,    98,
      99,   866,   867,   868,   869,   870,   871,   872,   100,   101,
     873,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   874,   114,   115,   116,   117,   118,   119,
     875,   876,   120,   121,   122,   123,   124,   877,   125,   126,
     127,   128,   129,   878,   130,   879,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   880,   140,   141,   142,   143,
     144,   145,   881,   146,   147,   148,   149,   882,   883,   884,
     150,   885,   886,   887,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   888,   161,   889,   162,   163,   164,
     165,   166,   167,   890,   168,   169,   170,   171,   172,   891,
     892,   173,   174,   175,   176,   177,   893,   178,   179,   180,
     894,   181,   182,   183,   895,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   896,   194,   897,   195,   196,
     197,   198,   898,   199,   899,   200,   201,   900,   202,   203,
     204,   205,   206,   207,   901,   208,   902,   209,   210,   903,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   904,   222,   223,   224,   225,   226,   227,   905,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   906,   237,
     907,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   908,   909,   248,   249,   250,   251,   910,   252,   253,
     254,   911,   912,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   913,   285,   286,   287,   288,   914,   289,
     290,   291,   292,   293,   294,   915,   295,   296,   916,   917,
     297,   298,   299,   918,   919,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   920,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   921,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   922,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   923,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   924,   369,
     370,   371,   372,   373,   925,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   926,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   927,
     397,   398,   928,   399,   400,   401,   402,   403,   404,   405,
     929,   406,   407,   930,   931,   408,   409,   410,   411,   412,
     932,   413,   414,   415,   416,   417,   418,   419,   933,   934,
     420,   421,   422,   423,   424,   935,   936,   425,   426,   427,
     428,   429,   430,   431,   937,   432,   433,   434,   435,   436,
     437,   938,   939,   438,   940,   941,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   864,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    89,    90,    91,    92,    93,    94,    95,    96,
     865,    97,    98,    99,   866,   867,   868,   869,   870,   871,
     872,   100,   101,   873,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   874,   114,   115,   116,
     117,   118,   119,   875,   876,   120,   121,   122,   123,   124,
     877,   125,   126,   127,   128,   129,   878,   130,   879,   131,
     132,   133,   134,   135,   136,   137,   138,   139,   880,   140,
     141,   142,   143,   144,   145,   881,   146,   147,   148,   149,
     882,   883,   884,   150,   885,   886,   887,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   888,   161,   889,
     162,   163,   164,   165,   166,   167,   890,   168,   169,   170,
     171,   172,   891,   892,   173,   174,   175,   176,   177,   893,
     178,   179,   180,   894,   181,   182,   183,   895,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   896,   194,
     897,   195,   196,   197,   198,   898,   199,   899,   200,   201,
     900,   202,   203,   204,   205,   206,   207,   901,   208,   902,
     209,   210,   903,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   904,   222,   223,   224,   225,   226,
     227,   905,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   906,   237,   907,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   908,   909,   248,   249,   250,   251,
     910,   252,   253,   254,   911,   912,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   913,   285,   286,   287,
     288,   914,   289,   290,   291,   292,   293,   294,   915,   295,
     296,   916,   917,   297,   298,   299,   918,   919,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   920,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   921,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   922,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   923,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   924,   369,   370,   371,   372,   373,   925,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   926,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   927,   397,   398,   928,   399,   400,   401,   402,
     403,   404,   405,   929,   406,   407,   930,   931,   408,   409,
     410,   411,   412,   932,   413,   414,   415,   416,   417,   418,
     419,   933,   934,   420,   421,   422,   423,   424,   935,   936,
     425,   426,   427,   428,   429,   430,   431,   937,   432,   433,
     434,   435,   436,   437,   938,   939,   438,   940,   941,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     864,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    89,    90,    91,    92,  1607,
      94,    95,    96,   865,    97,    98,    99,   866,   867,   868,
     869,   870,   871,   872,   100,   101,   873,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   874,
     114,   115,   116,   117,   118,   119,   875,   876,   120,   121,
     122,   123,   124,   877,   125,   126,   127,   128,   129,   878,
     130,   879,   131,   132,   133,   134,   135,   136,   137,   138,
     139,   880,   140,   141,   142,   143,   144,   145,   881,   146,
     147,   148,   149,   882,   883,   884,   150,   885,   886,   887,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     888,   161,   889,   162,   163,   164,   165,   166,   167,   890,
     168,   169,   170,   171,   172,   891,   892,   173,   174,   175,
    1608,   177,   893,   178,   179,   180,   894,   181,   182,   183,
     895,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   896,   194,   897,   195,   196,   197,   198,   898,   199,
     899,   200,   201,   900,   202,   203,   204,   205,   206,   207,
     901,   208,   902,   209,   210,   903,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   904,   222,   223,
     224,   225,   226,   227,   905,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   906,   237,   907,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   908,   909,   248,
     249,   250,   251,   910,   252,   253,   254,   911,   912,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   913,
     285,   286,   287,   288,   914,   289,   290,   291,   292,   293,
     294,   915,   295,   296,   916,   917,   297,   298,   299,   918,
     919,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   920,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   921,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   922,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   923,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   924,   369,   370,   371,   372,   373,
     925,  1609,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   926,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   927,   397,   398,   928,   399,
     400,   401,   402,   403,   404,   405,   929,   406,   407,   930,
     931,   408,   409,   410,   411,   412,   932,   413,   414,   415,
     416,   417,   418,   419,   933,   934,   420,   421,   422,   423,
     424,   935,   936,   425,   426,   427,   428,   429,   430,   431,
     937,   432,   433,   434,   435,   436,   437,   938,   939,   438,
     940,   941,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,    88,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    89,    90,
      91,    92,    93,    94,    95,    96,     0,    97,    98,    99,
       0,     0,     0,     0,     0,     0,     0,   100,   101,     0,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,     0,   114,   115,   116,   117,   118,   119,     0,
     676,   120,   121,   122,   123,   124,     0,   125,   126,   127,
     128,   679,     0,   680,     0,   131,   132,   133,   134,   135,
     136,   137,   138,   139,     0,   140,   141,   142,   143,   144,
     145,     0,   146,   147,   148,   149,   681,   682,   683,   684,
     685,   686,   687,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,     0,   161,     0,   162,   163,   164,   165,
     166,   167,     0,   168,   169,   170,   171,   172,     0,     0,
     173,   174,   175,   176,   177,     0,   178,   179,   180,     0,
     181,   182,   183,     0,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   693,     0,   194,     0,   195,   196,   197,
     198,     0,   199,     0,   200,   201,     0,   202,   203,   204,
     205,   206,   207,     0,   208,     0,   209,   210,     0,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
       0,   222,   223,   224,   225,   226,   227,     0,   228,   229,
     230,   231,   232,   233,   234,   235,   236,     0,   237,     0,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
       0,     0,   248,   249,   250,   251,     0,   252,   253,   254,
     699,   700,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,     0,   285,   286,   287,   288,     0,   705,   290,
     291,   292,   293,   294,     0,   295,   296,     0,     0,   297,
     298,   299,     0,     0,   300,   301,   302,   303,   304,   708,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
       0,   316,   317,   709,   319,   320,   321,   322,   323,   324,
       0,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,     0,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,     0,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,     0,   369,   370,
     371,   372,   373,   712,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,     0,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   714,     0,   397,
     398,     0,   399,   400,   401,   402,   403,   404,   405,     0,
     406,   407,     0,     0,   408,   409,   717,   411,   718,     0,
     413,   414,   415,   416,   417,   418,   419,     0,     0,   420,
     421,   422,   423,   424,   720,     0,   425,   426,   427,   428,
     429,   430,   431,     0,   432,   433,   434,   435,   436,   437,
       0,     0,   438,     0,     0,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   646,     0,   528,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    89,    90,    91,    92,    93,    94,    95,    96,     0,
      97,    98,    99,     0,     0,     0,     0,     0,     0,     0,
     100,   101,     0,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,     0,   114,   115,   116,   117,
     118,   119,     0,     0,   120,   121,   122,   123,   124,     0,
     125,   126,   127,   128,   129,     0,   130,     0,   131,   132,
     133,   134,   135,   136,   137,   138,   139,     0,   140,   141,
     142,   143,   144,   145,     0,   146,   147,   148,   149,     0,
       0,     0,   150,     0,     0,     0,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,     0,   161,     0,   162,
     163,   164,   165,   166,   167,     0,   168,   169,   170,   171,
     172,     0,     0,   173,   174,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,     0,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   989,   194,     0,
     195,   196,   197,   198,     0,   199,     0,   200,   201,     0,
     202,   203,   204,   205,   206,   207,     0,   208,     0,   209,
     210,     0,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,     0,   222,   223,   224,   225,   226,   227,
       0,   228,   229,   230,   231,   232,   233,   234,   235,   236,
       0,   237,     0,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,     0,     0,   248,   249,   250,   251,     0,
     252,   253,   254,     0,     0,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,     0,   285,   286,   287,   288,
       0,   289,   290,   291,   292,   293,   294,     0,   295,   296,
     990,     0,   297,   298,   299,     0,     0,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,     0,   316,   317,   318,   319,   320,   321,
     322,   323,   324,     0,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,     0,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,     0,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,   372,   373,     0,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,     0,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,     0,   397,   398,     0,   399,   400,   401,   402,   403,
     404,   405,     0,   406,   407,     0,     0,   408,   409,   410,
     411,   412,   991,   413,   414,   415,   416,   417,   418,   419,
       0,     0,   420,   421,   422,   423,   424,     0,     0,   425,
     426,   427,   428,   429,   430,   431,     0,   432,   433,   434,
     435,   436,   437,     0,     0,   438,     0,     0,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   646,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    89,    90,    91,    92,    93,    94,
      95,    96,     0,    97,    98,    99,     3,     4,     0,     0,
       0,     0,     0,   100,   101,     0,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,     0,   114,
     115,   116,   117,   118,   119,     0,     0,   120,   121,   122,
     123,   124,     0,   125,   126,   127,   128,   129,     0,   130,
       0,   131,   132,   133,   134,   135,   136,   137,   138,   139,
       0,   140,   141,   142,   143,   144,   145,     0,   146,   147,
     148,   149,     0,     0,     0,   150,     0,     0,     0,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,     0,
     161,     0,   162,   163,   164,   165,   166,   167,     0,   168,
     169,   170,   171,   172,     0,     0,   173,   174,   175,   176,
     177,     0,   178,   179,   180,     0,   181,   182,   183,     0,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
       0,   194,     0,   195,   196,   197,   198,     0,   199,     0,
     200,   201,     0,   202,   203,   204,   205,   206,   207,     0,
     208,     0,   209,   210,     0,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,     0,   222,   223,   224,
     225,   226,   227,     0,   228,   229,   230,   231,   232,   233,
     234,   235,   236,     0,   237,     0,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,     0,     0,   248,   249,
     250,   251,     0,   252,   253,   254,     0,     0,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,     0,   285,
     286,   287,   288,     0,   289,   290,   291,   292,   293,   294,
       0,   295,   296,     0,     0,   297,   298,   299,     0,     0,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,     0,   316,   317,   318,
     319,   320,   321,   322,   323,   324,     0,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,     0,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,     0,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,     0,   369,   370,   371,   372,   373,     0,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
       0,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,     0,   397,   398,     0,   399,   400,
     401,   402,   403,   404,   405,     0,   406,   407,     0,     0,
     408,   409,   410,   411,   412,     0,   413,   414,   415,   416,
     417,   418,   419,     0,     0,   420,   421,   422,   423,   424,
       0,     0,   425,   426,   427,   428,   429,   430,   431,     0,
     432,   433,   434,   435,   436,   437,     0,     0,   438,     0,
       0,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,    88,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    89,    90,    91,
      92,    93,    94,    95,    96,     0,    97,    98,    99,     0,
       0,     0,     0,     0,     0,     0,   100,   101,     0,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,     0,   114,   115,   116,   117,   118,   119,     0,     0,
     120,   121,   122,   123,   124,     0,   125,   126,   127,   128,
     129,     0,   130,     0,   131,   132,   133,   134,   135,   136,
     137,   138,   139,     0,   140,   141,   142,   143,   144,   145,
       0,   146,   147,   148,   149,     0,     0,     0,   150,     0,
       0,     0,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,     0,   161,     0,   162,   163,   164,   165,   166,
     167,     0,   168,   169,   170,   171,   172,     0,     0,   173,
     174,   175,   176,   177,     0,   178,   179,   180,     0,   181,
     182,   183,     0,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,     0,   194,     0,   195,   196,   197,   198,
       0,   199,     0,   200,   201,     0,   202,   203,   204,   205,
     206,   207,     0,   208,     0,   209,   210,     0,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,     0,
     222,   223,   224,   225,   226,   227,     0,   228,   229,   230,
     231,   232,   233,   234,   235,   236,     0,   237,     0,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,     0,
       0,   248,   249,   250,   251,     0,   252,   253,   254,     0,
       0,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,     0,   285,   286,   287,   288,     0,   289,   290,   291,
     292,   293,   294,     0,   295,   296,     0,     0,   297,   298,
     299,     0,     0,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,     0,
     316,   317,   318,   319,   320,   321,   322,   323,   324,     0,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,     0,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,     0,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,     0,   369,   370,   371,
     372,   373,     0,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,     0,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,     0,   397,   398,
       0,   399,   400,   401,   402,   403,   404,   405,     0,   406,
     407,     0,     0,   408,   409,   410,   411,   412,     0,   413,
     414,   415,   416,   417,   418,   419,     0,     0,   420,   421,
     422,   423,   424,     0,     0,   425,   426,   427,   428,   429,
     430,   431,     0,   432,   433,   434,   435,   436,   437,     0,
       0,   438,     0,     0,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   484,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      89,    90,    91,    92,    93,    94,    95,    96,     0,    97,
      98,    99,     0,     0,     0,     0,     0,     0,     0,   100,
     101,     0,   102,   103,   104,     0,   106,   107,   108,   109,
     110,     0,   112,   113,     0,   114,   115,   116,   117,   118,
     119,     0,     0,   120,   121,   122,   123,   124,  1220,   125,
     126,   127,   128,   129,     0,     0,  1221,   131,   132,   133,
     134,   135,     0,   137,   138,   139,  1222,   140,   141,   142,
     143,   144,   145,     0,     0,   147,   148,   149,     0,     0,
       0,     0,     0,     0,     0,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,     0,   161,     0,   162,   163,
     164,   165,   166,   167,     0,   168,   169,   170,   171,   172,
       0,     0,   173,   174,   175,   176,   177,     0,   178,   179,
     180,     0,   181,   182,   183,     0,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,     0,   194,     0,   195,
     196,   197,   198,     0,   199,  1223,   200,     0,     0,     0,
     203,   204,   205,     0,   207,     0,   208,     0,   209,   210,
       0,   211,   212,   213,   214,   215,  1224,     0,   218,   219,
     220,   221,     0,   222,   223,   224,   225,   226,   227,     0,
     228,     0,   230,   231,   232,   233,   234,   235,   236,     0,
     237,     0,   238,     0,     0,   241,     0,   243,   244,   245,
     246,   247,     0,     0,   248,     0,   250,     0,     0,   252,
     253,   254,     0,     0,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,     0,   280,
     281,   282,   283,   284,     0,   285,   286,     0,   288,     0,
     289,   290,   291,   292,   293,   294,     0,   295,   296,     0,
       0,   297,   298,   299,     0,     0,   300,   301,     0,   303,
       0,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,     0,   316,   317,   318,   319,   320,   321,   322,
     323,   324,  1225,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,     0,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
       0,   351,   352,     0,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,     0,
     369,   370,   371,   372,   373,     0,   374,   375,   376,   377,
     378,     0,   380,   381,   382,   383,     0,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
       0,   397,   398,     0,   399,     0,   401,   402,   403,   404,
     405,     0,   406,   407,     0,     0,   408,   409,   410,   411,
     412,     0,   413,   414,   415,   416,   417,   418,   419,     0,
    1226,   420,   421,   422,   423,   424,     0,     0,   425,   426,
     427,   428,   429,   430,   431,     0,   432,     0,   434,   435,
     436,   437,     0,     0,   438,     0,     0,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   484,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    89,    90,    91,    92,    93,    94,    95,
      96,     0,    97,    98,    99,     0,     0,     0,     0,     0,
       0,     0,   100,   101,     0,   102,   103,   104,     0,   106,
     107,   108,   109,   110,     0,   112,   113,     0,   114,   115,
     116,   117,   118,   119,     0,     0,   120,   121,   122,   123,
     124,  1220,   125,   126,   127,   128,   129,     0,     0,     0,
     131,   132,   133,   134,   135,     0,   137,   138,   139,  1222,
     140,   141,   142,   143,   144,   145,     0,     0,   147,   148,
     149,     0,     0,     0,     0,     0,     0,     0,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,     0,   161,
       0,   162,   163,   164,   165,   166,   167,     0,   168,   169,
     170,   171,   172,     0,     0,   173,   174,   175,   176,   177,
       0,   178,   179,   180,     0,   181,   182,   183,     0,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,     0,
     194,     0,   195,   196,   197,   198,     0,   199,  1223,   200,
       0,     0,     0,   203,   204,   205,     0,   207,     0,   208,
       0,   209,   210,     0,   211,   212,   213,   214,   215,   216,
       0,   218,   219,   220,   221,     0,   222,   223,   224,   225,
     226,   227,     0,   228,     0,   230,   231,   232,   233,   234,
     235,   236,     0,   237,     0,   238,     0,     0,   241,     0,
     243,   244,   245,   246,   247,     0,     0,   248,     0,   250,
    1670,     0,   252,   253,   254,     0,     0,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,     0,   280,   281,   282,   283,   284,     0,   285,   286,
       0,   288,     0,   289,   290,   291,   292,   293,   294,     0,
     295,   296,     0,     0,   297,   298,   299,     0,     0,   300,
     301,     0,   303,     0,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,     0,   316,   317,   318,   319,
     320,   321,   322,   323,   324,  1225,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
       0,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,     0,   351,   352,     0,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,     0,   369,   370,   371,   372,   373,     0,   374,
     375,   376,   377,   378,     0,   380,   381,   382,   383,     0,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,     0,   397,   398,     0,   399,     0,   401,
     402,   403,   404,   405,     0,   406,   407,     0,     0,   408,
     409,   410,   411,   412,     0,   413,   414,   415,   416,   417,
     418,   419,     0,  1226,   420,   421,   422,   423,   424,     0,
       0,   425,   426,   427,   428,   429,   430,   431,     0,   432,
       0,   434,   435,   436,   437,     0,     0,   438,     0,     0,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   484,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    89,    90,    91,    92,
      93,    94,    95,    96,     0,    97,    98,    99,     3,     4,
       0,     0,     0,     0,     0,   100,   101,     0,   102,   103,
     104,     0,   106,   107,   108,   109,   110,     0,   112,   113,
       0,   114,   115,   116,   117,   118,   119,     0,     0,   120,
     121,   122,   123,   124,     0,   125,   126,   127,   128,   129,
       0,     0,     0,   131,   132,   133,   134,   135,     0,   137,
     138,   139,     0,   140,   141,   142,   143,   144,   145,     0,
       0,   147,   148,   149,     0,     0,     0,     0,     0,     0,
       0,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,     0,   161,     0,   162,   163,   164,   165,   166,   167,
       0,   168,   169,   170,   171,   172,     0,     0,   173,   174,
     175,   176,   177,     0,   178,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,     0,   194,     0,   195,   196,   197,   198,     0,
     199,     0,   200,     0,     0,     0,   203,   204,   205,     0,
     207,     0,   208,     0,   209,   210,     0,   211,   212,   213,
     214,   215,   216,     0,   218,   219,   220,   221,     0,   222,
     223,   224,   225,   226,   227,     0,   228,     0,   230,   231,
     232,   233,   234,   235,   236,     0,   237,     0,   238,     0,
       0,   241,     0,   243,   244,   245,   246,   247,     0,     0,
     248,     0,   250,     0,     0,   252,   253,   254,     0,     0,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,     0,   280,   281,   282,   283,   284,
       0,   285,   286,     0,   288,     0,   289,   290,   291,   292,
     293,   294,     0,   295,   296,     0,     0,   297,   298,   299,
       0,     0,   300,   301,     0,   303,     0,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,     0,   316,
     317,   318,   319,   320,   321,   322,   323,   324,     0,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,     0,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,     0,   351,   352,     0,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,     0,   369,   370,   371,   372,
     373,     0,   374,   375,   376,   377,   378,     0,   380,   381,
     382,   383,     0,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,     0,   397,   398,     0,
     399,     0,   401,   402,   403,   404,   405,     0,   406,   407,
       0,     0,   408,   409,   410,   411,   412,     0,   413,   414,
     415,   416,   417,   418,   419,     0,     0,   420,   421,   422,
     423,   424,     0,     0,   425,   426,   427,   428,   429,   430,
     431,     0,   432,     0,   434,   435,   436,   437,     0,     0,
     438,     0,     0,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   484,  2383,     0,     0,     0,     0,
    2384,     0,     0,     0,     0,     0,     0,     0,     0,    89,
      90,    91,    92,    93,    94,    95,    96,     0,    97,    98,
      99,     0,     0,     0,     0,     0,     0,     0,   100,   101,
       0,   102,   103,   104,     0,   106,   107,   108,   109,   110,
       0,   112,   113,     0,   114,   115,   116,   117,   118,   119,
       0,     0,   120,   121,   122,   123,   124,     0,   125,   126,
     127,   128,   129,     0,     0,     0,   131,   132,   133,   134,
     135,     0,   137,   138,   139,     0,   140,   141,   142,   143,
     144,   145,     0,     0,   147,   148,   149,     0,     0,     0,
       0,     0,     0,     0,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,     0,   161,     0,   162,   163,   164,
     165,   166,   167,     0,   168,   169,   170,   171,   172,     0,
       0,   173,   174,   175,   176,   177,     0,   178,   179,   180,
       0,   181,   182,   183,     0,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,     0,   194,     0,   195,   196,
     197,   198,     0,   199,     0,   200,     0,     0,     0,   203,
     204,   205,     0,   207,     0,   208,     0,   209,   210,     0,
     211,   212,   213,   214,   215,   216,     0,   218,   219,   220,
     221,     0,   222,   223,   224,   225,   226,   227,     0,   228,
       0,   230,   231,   232,   233,   234,   235,   236,     0,   237,
       0,   238,     0,     0,   241,     0,   243,   244,   245,   246,
     247,     0,     0,   248,     0,   250,     0,     0,   252,   253,
     254,     0,     0,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,     0,   280,   281,
     282,   283,   284,     0,   285,   286,     0,   288,     0,   289,
     290,   291,   292,   293,   294,     0,   295,   296,     0,     0,
     297,   298,   299,     0,     0,   300,   301,     0,   303,     0,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,     0,   316,   317,   318,   319,   320,   321,   322,   323,
     324,     0,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,     0,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,     0,
     351,   352,     0,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,     0,   369,
     370,   371,   372,   373,     0,   374,   375,   376,   377,   378,
       0,   380,   381,   382,   383,     0,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,     0,
     397,   398,     0,   399,     0,   401,   402,   403,   404,   405,
       0,   406,   407,     0,     0,   408,   409,   410,   411,   412,
       0,   413,   414,   415,   416,   417,   418,   419,     0,     0,
     420,   421,   422,   423,   424,     0,     0,   425,   426,   427,
     428,   429,   430,   431,     0,   432,     0,   434,   435,   436,
     437,     0,     0,   438,     0,     0,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   484,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    89,    90,    91,    92,    93,    94,    95,    96,
     485,    97,    98,    99,     0,     0,     0,     0,     0,     0,
       0,   100,   101,     0,   102,   103,   104,     0,   106,   107,
     108,   109,   110,     0,   112,   113,     0,   114,   115,   116,
     117,   118,   119,     0,     0,   120,   121,   122,   123,   124,
       0,   125,   126,   127,   128,   129,     0,     0,     0,   131,
     132,   133,   134,   135,     0,   137,   138,   139,     0,   140,
     141,   142,   143,   144,   145,     0,     0,   147,   148,   149,
       0,     0,     0,     0,     0,     0,     0,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,     0,   161,     0,
     162,   163,   164,   165,   166,   167,     0,   168,   169,   170,
     171,   172,     0,     0,   173,   174,   175,   176,   177,     0,
     178,   179,   180,     0,   181,   182,   183,     0,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,     0,   194,
       0,   195,   196,   197,   198,     0,   199,     0,   200,     0,
       0,     0,   203,   204,   205,     0,   207,     0,   208,     0,
     209,   210,     0,   211,   212,   213,   214,   215,   216,     0,
     218,   219,   220,   221,     0,   222,   223,   224,   225,   226,
     227,     0,   228,     0,   230,   231,   232,   233,   234,   235,
     236,     0,   237,     0,   238,     0,     0,   241,     0,   243,
     244,   245,   246,   247,     0,     0,   248,     0,   250,     0,
       0,   252,   253,   254,     0,     0,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
       0,   280,   281,   282,   283,   284,     0,   285,   286,     0,
     288,     0,   289,   290,   291,   292,   293,   294,     0,   295,
     296,     0,     0,   297,   298,   299,     0,     0,   300,   301,
       0,   303,     0,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,     0,   316,   317,   318,   319,   320,
     321,   486,   323,   324,     0,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,     0,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,     0,   351,   352,     0,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,     0,   369,   370,   371,   372,   373,     0,   374,   375,
     376,   377,   378,     0,   380,   381,   382,   383,     0,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,     0,   397,   398,     0,   399,     0,   401,   402,
     403,   404,   405,     0,   406,   407,     0,     0,   408,   409,
     410,   411,   412,     0,   413,   414,   415,   416,   417,   418,
     419,     0,     0,   420,   421,   422,   423,   424,     0,     0,
     425,   426,   427,   428,   429,   430,   431,     0,   432,     0,
     434,   435,   436,   437,     0,     0,   438,     0,     0,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     484,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    89,    90,    91,    92,    93,
      94,    95,    96,   533,    97,    98,    99,     0,     0,     0,
       0,     0,     0,     0,   100,   101,     0,   102,   103,   104,
       0,   106,   107,   108,   109,   110,     0,   112,   113,     0,
     114,   115,   116,   117,   118,   119,     0,     0,   120,   121,
     122,   123,   124,     0,   125,   126,   127,   128,   129,     0,
       0,     0,   131,   132,   133,   134,   135,     0,   137,   138,
     139,     0,   140,   141,   142,   143,   144,   145,     0,     0,
     147,   148,   149,     0,     0,     0,     0,     0,     0,     0,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
       0,   161,     0,   162,   163,   164,   165,   166,   167,     0,
     168,   169,   170,   171,   172,     0,     0,   173,   174,   175,
     176,   177,     0,   178,   179,   180,     0,   181,   182,   183,
       0,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,     0,   194,     0,   195,   196,   197,   198,     0,   199,
       0,   200,     0,     0,     0,   203,   204,   205,     0,   207,
       0,   208,     0,   209,   210,     0,   211,   212,   213,   214,
     215,   216,     0,   218,   219,   220,   221,     0,   222,   223,
     224,   225,   226,   227,     0,   228,     0,   230,   231,   232,
     233,   234,   235,   236,     0,   237,     0,   238,     0,     0,
     241,     0,   243,   244,   245,   246,   247,     0,     0,   248,
       0,   250,     0,     0,   252,   253,   254,     0,     0,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,     0,   280,   281,   282,   283,   284,     0,
     285,   286,     0,   288,     0,   289,   290,   291,   292,   293,
     294,     0,   295,   296,     0,     0,   297,   298,   299,     0,
       0,   300,   301,     0,   303,     0,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,     0,   316,   317,
     318,   319,   320,   321,   322,   323,   324,     0,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,     0,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,     0,   351,   352,     0,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,     0,   369,   370,   371,   372,   373,
       0,   374,   375,   376,   377,   378,     0,   380,   381,   382,
     383,     0,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,     0,   397,   398,     0,   399,
       0,   401,   402,   403,   404,   405,     0,   534,   407,     0,
       0,   535,   409,   410,   411,   412,     0,   413,   414,   415,
     416,   417,   418,   419,     0,     0,   420,   421,   422,   423,
     424,     0,     0,   425,   426,   427,   428,   429,   430,   431,
       0,   432,     0,   434,   435,   436,   437,     0,     0,   438,
       0,     0,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   484,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    89,    90,
      91,    92,    93,    94,    95,    96,     0,    97,    98,    99,
       0,     0,     0,     0,     0,     0,     0,   100,   101,     0,
     102,   103,   104,     0,   106,   107,   108,   109,   110,     0,
     112,   113,     0,   114,   115,   116,   117,   118,   119,     0,
       0,   120,   121,   122,   123,   124,     0,   125,   126,   127,
     128,   129,     0,     0,     0,   131,   132,   133,   134,   135,
       0,   137,   138,   139,     0,   140,   141,   142,   143,   144,
     145,     0,     0,   147,   148,   149,     0,     0,     0,     0,
       0,     0,     0,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,     0,   161,     0,   162,   163,   164,   165,
     166,   167,     0,   168,   169,   170,   171,   172,     0,     0,
     173,   174,   175,   176,   177,     0,   178,   179,   180,     0,
     181,   182,   183,     0,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,     0,   194,     0,   195,   196,   197,
     198,     0,   199,     0,   200,     0,     0,     0,   203,   204,
     205,     0,   207,     0,   208,     0,   209,   210,     0,   211,
     212,   213,   214,   215,   216,     0,   218,   219,   220,   221,
       0,   222,   223,   224,   225,   226,   227,     0,   228,     0,
     230,   231,   232,   233,   234,   235,   236,     0,   237,     0,
     238,     0,     0,   241,     0,   243,   244,   245,   246,   247,
       0,     0,   248,     0,   250,     0,     0,   252,   253,   254,
       0,     0,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,     0,   280,   281,   282,
     283,   284,     0,   285,   286,     0,   288,     0,   289,   290,
     291,   292,   293,   294,     0,   295,   296,     0,   553,   297,
     298,   299,     0,     0,   300,   301,     0,   303,     0,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
       0,   316,   317,   318,   319,   320,   321,   322,   323,   324,
       0,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,     0,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,     0,   351,
     352,     0,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,     0,   369,   370,
     371,   372,   373,     0,   374,   375,   376,   377,   378,     0,
     380,   381,   382,   383,     0,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,     0,   397,
     398,     0,   399,     0,   401,   402,   403,   404,   405,     0,
     406,   407,     0,     0,   408,   409,   410,   411,   412,     0,
     413,   414,   415,   416,   417,   418,   419,     0,     0,   420,
     421,   422,   423,   424,     0,     0,   425,   426,   427,   428,
     429,   430,   431,     0,   432,     0,   434,   435,   436,   437,
       0,     0,   438,     0,     0,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   484,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    89,    90,    91,    92,    93,    94,    95,    96,     0,
      97,    98,    99,     0,     0,     0,     0,     0,     0,     0,
     100,   101,     0,   102,   103,   104,     0,   106,   107,   108,
     109,   110,     0,   112,   113,     0,   114,   115,   116,   117,
     118,   119,     0,     0,   120,   121,   122,   123,   124,     0,
     125,   126,   127,   128,   129,     0,     0,     0,   131,   132,
     133,   134,   135,     0,   137,   138,   139,     0,   140,   141,
     142,   143,   144,   145,     0,     0,   147,   148,   149,     0,
       0,     0,     0,     0,     0,     0,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,     0,   161,     0,   162,
     163,   164,   165,   166,   167,     0,   168,   169,   170,   171,
     172,     0,     0,   173,   174,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,     0,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,     0,   194,     0,
     195,   196,   197,   198,     0,   199,     0,   200,     0,     0,
       0,   203,   204,   205,     0,   207,     0,   208,     0,   209,
     210,     0,   211,   212,   213,   214,   215,   597,     0,   218,
     219,   220,   221,     0,   222,   223,   224,   225,   226,   227,
       0,   228,     0,   230,   231,   232,   233,   234,   235,   236,
       0,   237,     0,   238,     0,     0,   241,     0,   243,   244,
     245,   246,   247,     0,     0,   248,     0,   250,     0,     0,
     252,   253,   254,     0,     0,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,     0,
     280,   281,   282,   283,   284,     0,   285,   286,     0,   288,
       0,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,   553,   297,   298,   299,     0,     0,   300,   301,     0,
     303,     0,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,     0,   316,   317,   318,   319,   320,   321,
     322,   323,   324,     0,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,     0,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,     0,   351,   352,     0,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,   372,   373,     0,   374,   375,   376,
     377,   378,     0,   380,   381,   382,   383,     0,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,     0,   397,   398,     0,   399,     0,   401,   402,   403,
     404,   405,     0,   406,   407,     0,     0,   408,   409,   410,
     411,   412,     0,   413,   414,   415,   416,   417,   418,   419,
       0,     0,   420,   421,   422,   423,   424,     0,     0,   425,
     426,   427,   428,   429,   430,   431,     0,   432,     0,   434,
     435,   436,   437,     0,     0,   438,     0,     0,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   484,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    89,    90,    91,    92,    93,    94,
      95,    96,   625,    97,    98,    99,     0,     0,     0,     0,
       0,     0,     0,   100,   101,     0,   102,   103,   104,     0,
     106,   107,   108,   109,   110,     0,   112,   113,     0,   114,
     115,   116,   117,   118,   119,     0,     0,   120,   121,   122,
     123,   124,     0,   125,   126,   127,   128,   129,     0,     0,
       0,   131,   132,   133,   134,   135,     0,   137,   138,   139,
       0,   140,   141,   142,   143,   144,   145,     0,     0,   147,
     148,   149,     0,     0,     0,     0,     0,     0,     0,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,     0,
     161,     0,   162,   163,   164,   165,   166,   167,     0,   168,
     169,   170,   171,   172,     0,     0,   173,   174,   175,   176,
     177,     0,   178,   179,   180,     0,   181,   182,   183,     0,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
       0,   194,     0,   195,   196,   197,   198,     0,   199,     0,
     200,     0,     0,     0,   203,   204,   205,     0,   207,     0,
     208,     0,   209,   210,     0,   211,   212,   213,   214,   215,
     216,     0,   218,   219,   220,   221,     0,   222,   223,   224,
     225,   226,   227,     0,   228,     0,   230,   231,   232,   233,
     234,   235,   236,     0,   237,     0,   238,     0,     0,   241,
       0,   243,   244,   245,   246,   247,     0,     0,   248,     0,
     250,     0,     0,   252,   253,   254,     0,     0,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,     0,   280,   281,   282,   283,   284,     0,   285,
     286,     0,   288,     0,   289,   290,   291,   292,   293,   294,
       0,   295,   296,     0,     0,   297,   298,   299,     0,     0,
     300,   301,     0,   303,     0,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,     0,   316,   317,   318,
     319,   320,   321,   322,   323,   324,     0,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,     0,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,     0,   351,   352,     0,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,     0,   369,   370,   371,   372,   373,     0,
     374,   375,   376,   377,   378,     0,   380,   381,   382,   383,
       0,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,     0,   397,   398,     0,   399,     0,
     401,   402,   403,   404,   405,     0,   406,   407,     0,     0,
     408,   409,   410,   411,   412,     0,   413,   414,   415,   416,
     417,   418,   419,     0,     0,   420,   421,   422,   423,   424,
       0,     0,   425,   426,   427,   428,   429,   430,   431,     0,
     432,     0,   434,   435,   436,   437,     0,     0,   438,     0,
       0,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   484,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    89,    90,    91,
      92,    93,    94,    95,    96,     0,    97,    98,    99,     0,
       0,     0,     0,     0,     0,     0,   100,   101,     0,   102,
     103,   104,     0,   106,   107,   108,   109,   110,     0,   112,
     113,     0,   114,   115,   116,   117,   118,   119,     0,     0,
     120,   121,   122,   123,   124,     0,   125,   126,   127,   128,
     129,     0,     0,     0,   131,   132,   133,   134,   135,     0,
     137,   138,   139,     0,   140,   141,   142,   143,   144,   145,
       0,     0,   147,   148,   149,     0,     0,     0,     0,     0,
       0,     0,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,     0,   161,     0,   162,   163,   164,   165,   166,
     167,     0,   168,   169,   170,   171,   172,     0,     0,   173,
     174,   175,   176,   177,     0,   178,   179,   180,     0,   181,
     182,   183,     0,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,     0,   194,     0,   195,   196,   197,   198,
       0,   199,     0,   200,     0,     0,     0,   203,   204,   205,
       0,  1520,     0,   208,     0,   209,   210,     0,   211,   212,
     213,   214,   215,   216,     0,   218,   219,   220,   221,     0,
     222,   223,   224,   225,   226,   227,     0,   228,     0,   230,
     231,   232,   233,   234,   235,   236,     0,   237,     0,   238,
       0,     0,   241,     0,   243,   244,   245,   246,   247,     0,
       0,   248,     0,   250,     0,     0,   252,   253,  1521,     0,
       0,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,     0,   280,   281,   282,   283,
     284,     0,   285,   286,     0,   288,     0,   289,   290,   291,
     292,   293,   294,     0,   295,   296,     0,     0,   297,   298,
     299,     0,     0,   300,   301,     0,   303,     0,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,     0,
     316,   317,   318,   319,   320,   321,   322,   323,   324,     0,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,     0,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,     0,   351,   352,
       0,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,     0,   369,   370,   371,
     372,   373,     0,   374,   375,   376,   377,   378,     0,   380,
     381,   382,   383,     0,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,     0,   397,   398,
    1522,   399,     0,   401,  1523,   403,  1524,   405,     0,   406,
     407,     0,     0,   408,   409,   410,   411,   412,     0,   413,
     414,   415,   416,   417,   418,   419,     0,     0,   420,   421,
    1525,   423,   424,     0,     0,   425,   426,   427,   428,   429,
     430,   431,     0,   432,     0,   434,   435,   436,   437,     0,
       0,   438,     0,     0,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   484,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      89,    90,    91,    92,    93,    94,    95,    96,     0,    97,
      98,    99,     0,     0,     0,     0,     0,  2073,     0,   100,
     101,     0,   102,   103,   104,     0,   106,   107,   108,   109,
     110,     0,   112,   113,     0,   114,   115,   116,   117,   118,
     119,     0,     0,   120,   121,   122,   123,   124,     0,   125,
     126,   127,   128,   129,     0,     0,     0,   131,   132,   133,
     134,   135,     0,   137,   138,   139,     0,   140,   141,   142,
     143,   144,   145,     0,     0,   147,   148,   149,     0,     0,
       0,     0,     0,     0,     0,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,     0,   161,     0,   162,   163,
     164,   165,   166,   167,     0,   168,   169,   170,   171,   172,
       0,     0,   173,   174,   175,   176,   177,     0,   178,   179,
     180,     0,   181,   182,   183,     0,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,     0,   194,     0,   195,
     196,   197,   198,     0,   199,     0,   200,     0,     0,     0,
     203,   204,   205,     0,   207,     0,   208,     0,   209,   210,
       0,   211,   212,   213,   214,   215,   216,     0,   218,   219,
     220,   221,     0,   222,   223,   224,   225,   226,   227,     0,
     228,     0,   230,   231,   232,   233,   234,   235,   236,     0,
     237,     0,   238,     0,     0,   241,     0,   243,   244,   245,
     246,   247,     0,     0,   248,     0,   250,     0,     0,   252,
     253,   254,     0,     0,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,     0,   280,
     281,   282,   283,   284,     0,   285,   286,     0,   288,     0,
     289,   290,   291,   292,   293,   294,     0,   295,   296,     0,
       0,   297,   298,   299,     0,     0,   300,   301,     0,   303,
       0,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,     0,   316,   317,   318,   319,   320,   321,   322,
     323,   324,     0,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,     0,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
       0,   351,   352,     0,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,     0,
     369,   370,   371,   372,   373,     0,   374,   375,   376,   377,
     378,     0,   380,   381,   382,   383,     0,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
       0,   397,   398,     0,   399,     0,   401,   402,   403,   404,
     405,     0,   406,   407,     0,     0,   408,   409,   410,   411,
     412,     0,   413,   414,   415,   416,   417,   418,   419,     0,
       0,   420,   421,   422,   423,   424,     0,     0,   425,   426,
     427,   428,   429,   430,   431,     0,   432,     0,   434,   435,
     436,   437,     0,     0,   438,     0,     0,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   484,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    89,    90,    91,    92,    93,    94,    95,
      96,     0,    97,    98,    99,     0,     0,     0,     0,     0,
    2087,     0,   100,   101,     0,   102,   103,   104,     0,   106,
     107,   108,   109,   110,     0,   112,   113,     0,   114,   115,
     116,   117,   118,   119,     0,     0,   120,   121,   122,   123,
     124,     0,   125,   126,   127,   128,   129,     0,     0,     0,
     131,   132,   133,   134,   135,     0,   137,   138,   139,     0,
     140,   141,   142,   143,   144,   145,     0,     0,   147,   148,
     149,     0,     0,     0,     0,     0,     0,     0,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,     0,   161,
       0,   162,   163,   164,   165,   166,   167,     0,   168,   169,
     170,   171,   172,     0,     0,   173,   174,   175,   176,   177,
       0,   178,   179,   180,     0,   181,   182,   183,     0,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,     0,
     194,     0,   195,   196,   197,   198,     0,   199,     0,   200,
       0,     0,     0,   203,   204,   205,     0,   207,     0,   208,
       0,   209,   210,     0,   211,   212,   213,   214,   215,   216,
       0,   218,   219,   220,   221,     0,   222,   223,   224,   225,
     226,   227,     0,   228,     0,   230,   231,   232,   233,   234,
     235,   236,     0,   237,     0,   238,     0,     0,   241,     0,
     243,   244,   245,   246,   247,     0,     0,   248,     0,   250,
       0,     0,   252,   253,   254,     0,     0,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,     0,   280,   281,   282,   283,   284,     0,   285,   286,
       0,   288,     0,   289,   290,   291,   292,   293,   294,     0,
     295,   296,     0,     0,   297,   298,   299,     0,     0,   300,
     301,     0,   303,     0,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,     0,   316,   317,   318,   319,
     320,   321,   322,   323,   324,     0,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
       0,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,     0,   351,   352,     0,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,     0,   369,   370,   371,   372,   373,     0,   374,
     375,   376,   377,   378,     0,   380,   381,   382,   383,     0,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,     0,   397,   398,     0,   399,     0,   401,
     402,   403,   404,   405,     0,   406,   407,     0,     0,   408,
     409,   410,   411,   412,     0,   413,   414,   415,   416,   417,
     418,   419,     0,     0,   420,   421,   422,   423,   424,     0,
       0,   425,   426,   427,   428,   429,   430,   431,     0,   432,
       0,   434,   435,   436,   437,     0,     0,   438,     0,     0,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   484,     0,  2246,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    89,    90,    91,    92,
      93,    94,    95,    96,     0,    97,    98,    99,     0,     0,
       0,     0,     0,     0,     0,   100,   101,     0,   102,   103,
     104,     0,   106,   107,   108,   109,   110,     0,   112,   113,
       0,   114,   115,   116,   117,   118,   119,     0,     0,   120,
     121,   122,   123,   124,     0,   125,   126,   127,   128,   129,
       0,     0,     0,   131,   132,   133,   134,   135,     0,   137,
     138,   139,     0,   140,   141,   142,   143,   144,   145,     0,
       0,   147,   148,   149,     0,     0,     0,     0,     0,     0,
       0,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,     0,   161,     0,   162,   163,   164,   165,   166,   167,
       0,   168,   169,   170,   171,   172,     0,     0,   173,   174,
     175,   176,   177,     0,   178,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,     0,   194,     0,   195,   196,   197,   198,     0,
     199,     0,   200,     0,     0,     0,   203,   204,   205,     0,
     207,     0,   208,     0,   209,   210,     0,   211,   212,   213,
     214,   215,   216,     0,   218,   219,   220,   221,     0,   222,
     223,   224,   225,   226,   227,     0,   228,     0,   230,   231,
     232,   233,   234,   235,   236,     0,   237,     0,   238,     0,
       0,   241,     0,   243,   244,   245,   246,   247,     0,     0,
     248,     0,   250,     0,     0,   252,   253,   254,     0,     0,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,     0,   280,   281,   282,   283,   284,
       0,   285,   286,     0,   288,     0,   289,   290,   291,   292,
     293,   294,     0,   295,   296,     0,     0,   297,   298,   299,
       0,     0,   300,   301,     0,   303,     0,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,     0,   316,
     317,   318,   319,   320,   321,   322,   323,   324,     0,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,     0,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,     0,   351,   352,     0,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,     0,   369,   370,   371,   372,
     373,     0,   374,   375,   376,   377,   378,     0,   380,   381,
     382,   383,     0,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,     0,   397,   398,     0,
     399,     0,   401,   402,   403,   404,   405,     0,   406,   407,
       0,     0,   408,   409,   410,   411,   412,     0,   413,   414,
     415,   416,   417,   418,   419,     0,     0,   420,   421,   422,
     423,   424,     0,     0,   425,   426,   427,   428,   429,   430,
     431,     0,   432,     0,   434,   435,   436,   437,     0,     0,
     438,     0,     0,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   484,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    89,
      90,    91,    92,    93,    94,    95,    96,     0,    97,    98,
      99,     0,     0,     0,     0,     0,     0,     0,   100,   101,
       0,   102,   103,   104,     0,   106,   107,   108,   109,   110,
       0,   112,   113,     0,   114,   115,   116,   117,   118,   119,
       0,     0,   120,   121,   122,   123,   124,     0,   125,   126,
     127,   128,   129,     0,     0,     0,   131,   132,   133,   134,
     135,     0,   137,   138,   139,     0,   140,   141,   142,   143,
     144,   145,     0,     0,   147,   148,   149,     0,     0,     0,
       0,     0,     0,     0,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,     0,   161,     0,   162,   163,   164,
     165,   166,   167,     0,   168,   169,   170,   171,   172,     0,
       0,   173,   174,   175,   176,   177,     0,   178,   179,   180,
       0,   181,   182,   183,     0,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,     0,   194,     0,   195,   196,
     197,   198,     0,   199,     0,   200,     0,     0,     0,   203,
     204,   205,     0,   207,     0,   208,     0,   209,   210,     0,
     211,   212,   213,   214,   215,   216,     0,   218,   219,   220,
     221,     0,   222,   223,   224,   225,   226,   227,     0,   228,
       0,   230,   231,   232,   233,   234,   235,   236,     0,   237,
       0,   238,     0,     0,   241,     0,   243,   244,   245,   246,
     247,     0,     0,   248,     0,   250,     0,     0,   252,   253,
     254,     0,     0,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,     0,   280,   281,
     282,   283,   284,     0,   285,   286,     0,   288,     0,   289,
     290,   291,   292,   293,   294,     0,   295,   296,     0,     0,
     297,   298,   299,     0,     0,   300,   301,     0,   303,     0,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,     0,   316,   317,   318,   319,   320,   321,   322,   323,
     324,     0,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,     0,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,     0,
     351,   352,     0,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,     0,   369,
     370,   371,   372,   373,     0,   374,   375,   376,   377,   378,
       0,   380,   381,   382,   383,     0,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,     0,
     397,   398,     0,   399,     0,   401,   402,   403,   404,   405,
       0,   406,   407,     0,     0,   408,   409,   410,   411,   412,
       0,   413,   414,   415,   416,   417,   418,   419,     0,     0,
     420,   421,   422,   423,   424,     0,     0,   425,   426,   427,
     428,   429,   430,   431,     0,   432,     0,   434,   435,   436,
     437,     0,     0,   438,     0,     0,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   484,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    89,    90,    91,    92,    93,    94,    95,    96,
       0,    97,    98,    99,     0,     0,     0,     0,     0,     0,
       0,   100,   101,     0,   102,   103,   104,     0,   106,   107,
     108,   109,   110,     0,   112,   113,     0,   114,   115,   116,
     117,   118,   119,     0,     0,   120,   121,   122,   123,   124,
       0,   125,   126,   127,   128,   129,     0,     0,     0,   131,
     132,   133,   134,   135,     0,   137,   138,   139,     0,   140,
     141,   142,   143,   144,   145,     0,     0,   147,   148,   149,
       0,     0,     0,     0,     0,     0,     0,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,     0,   161,     0,
     162,   163,   164,   165,   166,   167,     0,   168,   169,   170,
     171,   172,     0,     0,   173,   174,   175,   176,   177,     0,
     178,   179,   180,     0,   181,   182,   183,     0,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,     0,   194,
       0,   195,   196,   197,   198,     0,   199,     0,   200,     0,
       0,     0,   203,   204,   205,     0,   207,     0,   208,     0,
     209,   210,     0,   211,   212,   213,   214,   215,   216,     0,
     218,   219,   220,   221,     0,   222,   223,   224,   225,   226,
     227,     0,   228,     0,   230,   231,   232,   233,   234,   235,
     236,     0,   237,     0,   238,     0,     0,   241,     0,   243,
     244,   245,   246,   247,     0,     0,   248,     0,   250,     0,
       0,   252,   253,   545,     0,     0,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
       0,   280,   281,   282,   283,   284,     0,   285,   286,     0,
     288,     0,   289,   290,   291,   292,   293,   294,     0,   295,
     296,     0,     0,   297,   298,   299,     0,     0,   300,   301,
       0,   303,     0,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,     0,   316,   317,   318,   319,   320,
     321,   322,   323,   324,     0,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,     0,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,     0,   351,   352,     0,   354,   355,   356,   357,
     358,   359,   360,   361,   546,   363,   364,   365,   366,   367,
     368,     0,   369,   370,   371,   372,   547,     0,   374,   375,
     376,   377,   378,     0,   380,   381,   382,   383,     0,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,     0,   397,   398,     0,   399,     0,   401,   402,
     403,   404,   405,     0,   548,   407,     0,     0,   408,   409,
     410,   411,   412,     0,   413,   414,   415,   416,   417,   418,
     419,     0,     0,   420,   421,   422,   423,   424,     0,     0,
     425,   426,   427,   428,   429,   430,   431,     0,   432,     0,
     434,   435,   436,   437,     0,     0,   438,     0,     0,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     484,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    89,    90,    91,    92,    93,
      94,    95,    96,     0,    97,    98,    99,     0,     0,     0,
       0,     0,     0,     0,   100,   101,     0,   102,   103,   104,
       0,   106,   107,   108,   109,   110,     0,   112,   113,     0,
     114,   115,   116,   117,   118,   119,     0,     0,   120,   121,
     122,   123,   124,     0,   125,   126,   127,   128,   129,     0,
       0,     0,   131,   132,   133,   134,   135,     0,   137,   138,
     139,     0,   140,   141,   142,   143,   144,   145,     0,     0,
     147,   148,   149,     0,     0,     0,     0,     0,     0,     0,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
       0,   161,     0,   162,   163,   164,   165,   166,   167,     0,
     168,   169,   170,   171,   172,     0,     0,   173,   174,   175,
     176,   177,     0,   178,   179,   180,     0,   181,   182,   183,
       0,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,     0,   194,     0,   195,   196,   197,   198,     0,   199,
       0,   200,     0,     0,     0,   203,   204,   205,     0,   207,
       0,   208,     0,   209,   210,     0,   211,   212,   213,   214,
     215,   216,     0,   218,   219,   220,   221,     0,   222,   223,
     224,   225,   226,   227,     0,   228,     0,   230,   231,   232,
     233,   234,   235,   236,     0,   237,     0,   238,     0,     0,
     241,     0,   243,   244,   245,   246,   247,     0,     0,   248,
       0,   250,     0,     0,   252,   253,   254,     0,     0,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,     0,   280,   281,   282,   283,   284,     0,
     285,   286,     0,   288,     0,   289,   290,   291,   292,   293,
     294,     0,   295,   296,     0,     0,   297,   298,   299,     0,
       0,   300,   301,     0,   303,     0,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,     0,   316,   317,
     318,   319,   320,   321,   322,   323,   324,     0,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     561,   338,     0,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,     0,   351,   352,     0,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,     0,   369,   370,   371,   372,   373,
       0,   374,   375,   376,   377,   378,     0,   380,   381,   382,
     383,     0,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,     0,   397,   398,     0,   399,
       0,   401,   402,   403,   404,   405,     0,   406,   407,     0,
       0,   408,   409,   410,   411,   412,     0,   413,   414,   415,
     416,   417,   418,   419,     0,     0,   420,   421,   422,   423,
     424,     0,     0,   425,   426,   427,   428,   429,   430,   431,
       0,   432,     0,   434,   435,   436,   437,     0,     0,   438,
       0,     0,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   484,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    89,    90,
      91,    92,    93,    94,    95,    96,     0,    97,    98,    99,
       0,     0,     0,     0,     0,     0,     0,   100,   101,     0,
     102,   103,   104,     0,   106,   107,   108,   109,   110,     0,
     112,   113,     0,   114,   115,   116,   117,   118,   119,     0,
       0,   120,   121,   122,   123,   124,     0,   125,   126,   127,
     128,   129,     0,     0,     0,   131,   132,   133,   134,   135,
       0,   137,   138,   139,     0,   140,   141,   142,   143,   144,
     145,     0,     0,   147,   148,   149,     0,     0,     0,     0,
       0,     0,     0,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,     0,   161,     0,   162,   163,   164,   165,
     166,   167,     0,   168,   169,   170,   171,   172,     0,     0,
     173,   174,   175,   176,   177,     0,   178,   179,   180,     0,
     181,   182,   183,     0,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,     0,   194,     0,   195,   196,   197,
     198,     0,   199,     0,   200,     0,     0,     0,   203,   204,
     205,     0,   207,     0,   208,     0,   209,   210,     0,   211,
     212,   213,   214,   215,   592,     0,   218,   219,   220,   221,
       0,   222,   223,   224,   225,   226,   227,     0,   228,     0,
     230,   231,   232,   233,   234,   235,   236,     0,   237,     0,
     238,     0,     0,   241,     0,   243,   244,   245,   246,   247,
       0,     0,   248,     0,   250,     0,     0,   252,   253,   254,
       0,     0,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,     0,   280,   281,   282,
     283,   284,     0,   285,   286,     0,   288,     0,   289,   290,
     291,   292,   293,   294,     0,   295,   296,     0,     0,   297,
     298,   299,     0,     0,   300,   301,     0,   303,     0,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
       0,   316,   317,   318,   319,   320,   321,   322,   323,   324,
       0,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,     0,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,     0,   351,
     352,     0,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,     0,   369,   370,
     371,   372,   373,     0,   374,   375,   376,   377,   378,     0,
     380,   381,   382,   383,     0,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,     0,   397,
     398,     0,   399,     0,   401,   402,   403,   404,   405,     0,
     406,   407,     0,     0,   408,   409,   410,   411,   412,     0,
     413,   414,   415,   416,   417,   418,   419,     0,     0,   420,
     421,   422,   423,   424,     0,     0,   425,   426,   427,   428,
     429,   430,   431,     0,   432,     0,   434,   435,   436,   437,
       0,     0,   438,     0,     0,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   484,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    89,    90,    91,    92,    93,    94,    95,    96,     0,
      97,    98,    99,     0,     0,     0,     0,     0,     0,     0,
     100,   101,     0,   102,   103,   104,     0,   106,   107,   108,
     109,   110,     0,   112,   113,     0,   114,   115,   116,   117,
     118,   119,     0,     0,   120,   121,   122,   123,   124,     0,
     125,   126,   127,   128,   129,     0,     0,     0,   131,   132,
     133,   134,   135,     0,   137,   138,   139,     0,   140,   141,
     142,   143,   144,   145,     0,     0,   147,   148,   149,     0,
       0,     0,     0,     0,     0,     0,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,     0,   161,     0,   162,
     163,   164,   165,   166,   167,     0,   168,   169,   170,   171,
     172,     0,     0,   173,   174,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,     0,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,     0,   194,     0,
     195,   196,   197,   198,     0,   199,     0,   200,     0,     0,
       0,   203,   204,   205,     0,   207,     0,   208,     0,   209,
     210,     0,   211,   212,   213,   214,   215,   595,     0,   218,
     219,   220,   221,     0,   222,   223,   224,   225,   226,   227,
       0,   228,     0,   230,   231,   232,   233,   234,   235,   236,
       0,   237,     0,   238,     0,     0,   241,     0,   243,   244,
     245,   246,   247,     0,     0,   248,     0,   250,     0,     0,
     252,   253,   254,     0,     0,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,     0,
     280,   281,   282,   283,   284,     0,   285,   286,     0,   288,
       0,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,     0,   297,   298,   299,     0,     0,   300,   301,     0,
     303,     0,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,     0,   316,   317,   318,   319,   320,   321,
     322,   323,   324,     0,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,     0,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,     0,   351,   352,     0,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,   372,   373,     0,   374,   375,   376,
     377,   378,     0,   380,   381,   382,   383,     0,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,     0,   397,   398,     0,   399,     0,   401,   402,   403,
     404,   405,     0,   406,   407,     0,     0,   408,   409,   410,
     411,   412,     0,   413,   414,   415,   416,   417,   418,   419,
       0,     0,   420,   421,   422,   423,   424,     0,     0,   425,
     426,   427,   428,   429,   430,   431,     0,   432,     0,   434,
     435,   436,   437,     0,     0,   438,     0,     0,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   484,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    89,    90,    91,    92,    93,    94,
      95,    96,     0,    97,    98,    99,     0,     0,     0,     0,
       0,     0,     0,   100,   101,     0,   102,   103,   104,     0,
     106,   107,   108,   109,   110,     0,   112,   113,     0,   114,
     115,   116,   117,   118,   119,     0,     0,   120,   121,   122,
     123,   124,     0,   125,   126,   127,   128,   129,     0,     0,
       0,   131,   132,   133,   134,   135,     0,   137,   138,   139,
       0,   140,   141,   142,   143,   144,   145,     0,     0,   147,
     148,   149,     0,     0,     0,     0,     0,     0,     0,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,     0,
     161,     0,   162,   163,   164,   165,   166,   167,     0,   168,
     169,   170,   171,   172,     0,     0,   173,   174,   175,   176,
     177,     0,   178,   179,   180,     0,   181,   182,   183,     0,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
       0,   194,     0,   195,   196,   197,   198,     0,   199,     0,
     200,     0,     0,     0,   203,   204,   205,     0,   207,     0,
     208,     0,   209,   210,     0,   211,   212,   213,   214,   215,
     599,     0,   218,   219,   220,   221,     0,   222,   223,   224,
     225,   226,   227,     0,   228,     0,   230,   231,   232,   233,
     234,   235,   236,     0,   237,     0,   238,     0,     0,   241,
       0,   243,   244,   245,   246,   247,     0,     0,   248,     0,
     250,     0,     0,   252,   253,   254,     0,     0,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,     0,   280,   281,   282,   283,   284,     0,   285,
     286,     0,   288,     0,   289,   290,   291,   292,   293,   294,
       0,   295,   296,     0,     0,   297,   298,   299,     0,     0,
     300,   301,     0,   303,     0,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,     0,   316,   317,   318,
     319,   320,   321,   322,   323,   324,     0,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,     0,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,     0,   351,   352,     0,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,     0,   369,   370,   371,   372,   373,     0,
     374,   375,   376,   377,   378,     0,   380,   381,   382,   383,
       0,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,     0,   397,   398,     0,   399,     0,
     401,   402,   403,   404,   405,     0,   406,   407,     0,     0,
     408,   409,   410,   411,   412,     0,   413,   414,   415,   416,
     417,   418,   419,     0,     0,   420,   421,   422,   423,   424,
       0,     0,   425,   426,   427,   428,   429,   430,   431,     0,
     432,     0,   434,   435,   436,   437,     0,     0,   438,     0,
       0,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   484,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    89,    90,    91,
      92,    93,    94,    95,    96,     0,    97,    98,    99,     0,
       0,     0,     0,     0,     0,     0,   100,   101,     0,   102,
     103,   104,     0,   106,   107,   108,   109,   110,     0,   112,
     113,     0,   114,   115,   116,   117,   118,   119,     0,     0,
     120,   121,   122,   123,   124,     0,   125,   126,   127,   128,
     129,     0,     0,     0,   131,   132,   133,   134,   135,     0,
     137,   138,   139,     0,   140,   141,   142,   143,   144,   145,
       0,     0,   147,   148,   149,     0,     0,     0,     0,     0,
       0,     0,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,     0,   161,     0,   162,   163,   164,   165,   166,
     167,     0,   168,   169,   170,   171,   172,     0,     0,   173,
     174,   175,   176,   177,     0,   178,   179,   180,     0,   181,
     182,   183,     0,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,     0,   194,     0,   195,   196,   197,   198,
       0,   199,     0,   200,     0,     0,     0,   203,   204,   205,
       0,   207,     0,   208,     0,   209,   210,     0,   211,   212,
     213,   214,   215,   617,     0,   218,   219,   220,   221,     0,
     222,   223,   224,   225,   226,   227,     0,   228,     0,   230,
     231,   232,   233,   234,   235,   236,     0,   237,     0,   238,
       0,     0,   241,     0,   243,   244,   245,   246,   247,     0,
       0,   248,     0,   250,     0,     0,   252,   253,   254,     0,
       0,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,     0,   280,   281,   282,   283,
     284,     0,   285,   286,     0,   288,     0,   289,   290,   291,
     292,   293,   294,     0,   295,   296,     0,     0,   297,   298,
     299,     0,     0,   300,   301,     0,   303,     0,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,     0,
     316,   317,   318,   319,   320,   321,   322,   323,   324,     0,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,     0,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,     0,   351,   352,
       0,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,     0,   369,   370,   371,
     372,   373,     0,   374,   375,   376,   377,   378,     0,   380,
     381,   382,   383,     0,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,     0,   397,   398,
       0,   399,     0,   401,   402,   403,   404,   405,     0,   406,
     407,     0,     0,   408,   409,   410,   411,   412,     0,   413,
     414,   415,   416,   417,   418,   419,     0,     0,   420,   421,
     422,   423,   424,     0,     0,   425,   426,   427,   428,   429,
     430,   431,     0,   432,     0,   434,   435,   436,   437,     0,
       0,   438,     0,     0,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   484,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      89,    90,    91,    92,    93,    94,    95,    96,     0,    97,
      98,    99,     0,     0,     0,     0,     0,     0,     0,   100,
     101,     0,   102,   103,   104,     0,   106,   107,   108,   109,
     110,     0,   112,   113,     0,   114,   115,   116,   117,   118,
     119,     0,     0,   120,   121,   122,   123,   124,     0,   125,
     126,   127,   128,   129,     0,     0,     0,   131,   132,   133,
     134,   135,     0,   137,   138,   139,     0,   140,   141,   142,
     143,   144,   145,     0,     0,   147,   148,   149,     0,     0,
       0,     0,     0,     0,     0,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,     0,   161,     0,   162,   163,
     164,   165,   166,   167,     0,   168,   169,   170,   171,   172,
       0,     0,   173,   174,   175,   176,   177,     0,   178,   179,
     180,     0,   181,   182,   183,     0,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,     0,   194,     0,   195,
     196,   197,   198,     0,   199,     0,   200,     0,     0,     0,
     203,   204,   205,     0,   207,     0,   208,     0,   209,   210,
       0,   211,   212,   213,   214,   215,   633,     0,   218,   219,
     220,   221,     0,   222,   223,   224,   225,   226,   227,     0,
     228,     0,   230,   231,   232,   233,   234,   235,   236,     0,
     237,     0,   238,     0,     0,   241,     0,   243,   244,   245,
     246,   247,     0,     0,   248,     0,   250,     0,     0,   252,
     253,   254,     0,     0,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,     0,   280,
     281,   282,   283,   284,     0,   285,   286,     0,   288,     0,
     289,   290,   291,   292,   293,   294,     0,   295,   296,     0,
       0,   297,   298,   299,     0,     0,   300,   301,     0,   303,
       0,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,     0,   316,   317,   318,   319,   320,   321,   322,
     323,   324,     0,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,     0,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
       0,   351,   352,     0,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,     0,
     369,   370,   371,   372,   373,     0,   374,   375,   376,   377,
     378,     0,   380,   381,   382,   383,     0,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
       0,   397,   398,     0,   399,     0,   401,   402,   403,   404,
     405,     0,   406,   407,     0,     0,   408,   409,   410,   411,
     412,     0,   413,   414,   415,   416,   417,   418,   419,     0,
       0,   420,   421,   422,   423,   424,     0,     0,   425,   426,
     427,   428,   429,   430,   431,     0,   432,     0,   434,   435,
     436,   437,     0,     0,   438,     0,     0,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   484,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    89,    90,    91,    92,    93,    94,    95,
      96,     0,    97,    98,    99,     0,     0,     0,     0,     0,
       0,     0,   100,   101,     0,   102,   103,   104,     0,   106,
     107,   108,   109,   110,     0,   112,   113,     0,   114,   115,
     116,   117,   118,   119,     0,     0,   120,   121,   122,   123,
     124,     0,   125,   126,   127,   128,   129,     0,     0,     0,
     131,   132,   133,   134,   135,     0,   137,   138,   139,     0,
     140,   141,   142,   143,   144,   145,     0,     0,   147,   148,
     149,     0,     0,     0,     0,     0,     0,     0,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,     0,   161,
       0,   162,   163,   164,   165,   166,   167,     0,   168,   169,
     170,   171,   172,     0,     0,   173,   174,   175,   176,   177,
       0,   178,   179,   180,     0,   181,   182,   183,     0,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,     0,
     194,     0,   195,   196,   197,   198,     0,   199,     0,   200,
       0,     0,     0,   203,   204,   205,     0,   207,     0,   208,
       0,   209,   210,     0,   211,   212,   213,   214,   215,   637,
       0,   218,   219,   220,   221,     0,   222,   223,   224,   225,
     226,   227,     0,   228,     0,   230,   231,   232,   233,   234,
     235,   236,     0,   237,     0,   238,     0,     0,   241,     0,
     243,   244,   245,   246,   247,     0,     0,   248,     0,   250,
       0,     0,   252,   253,   254,     0,     0,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,     0,   280,   281,   282,   283,   284,     0,   285,   286,
       0,   288,     0,   289,   290,   291,   292,   293,   294,     0,
     295,   296,     0,     0,   297,   298,   299,     0,     0,   300,
     301,     0,   303,     0,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,     0,   316,   317,   318,   319,
     320,   321,   322,   323,   324,     0,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
       0,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,     0,   351,   352,     0,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,     0,   369,   370,   371,   372,   373,     0,   374,
     375,   376,   377,   378,     0,   380,   381,   382,   383,     0,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,     0,   397,   398,     0,   399,     0,   401,
     402,   403,   404,   405,     0,   406,   407,     0,     0,   408,
     409,   410,   411,   412,     0,   413,   414,   415,   416,   417,
     418,   419,     0,     0,   420,   421,   422,   423,   424,     0,
       0,   425,   426,   427,   428,   429,   430,   431,     0,   432,
       0,   434,   435,   436,   437,     0,     0,   438,     0,     0,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   484,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    89,    90,    91,    92,
      93,    94,    95,    96,     0,    97,    98,    99,     0,     0,
       0,     0,     0,     0,     0,   100,   101,     0,   102,   103,
     104,     0,   106,   107,   108,   109,   110,     0,   112,   113,
       0,   114,   115,   116,   117,   118,   119,     0,     0,   120,
     121,   122,   123,   124,     0,   125,   126,   127,   128,   129,
       0,     0,     0,   131,   132,   133,   134,   135,     0,   137,
     138,   139,     0,   140,   141,   142,   143,   144,   145,     0,
       0,   147,   148,   149,     0,     0,     0,     0,     0,     0,
       0,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,     0,   161,     0,   162,   163,   164,   165,   166,   167,
       0,   168,   169,   170,   171,   172,     0,     0,   173,   174,
     175,   176,   177,     0,   178,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,     0,   194,     0,   195,   196,   197,   198,     0,
     199,     0,   200,     0,     0,     0,   203,   204,   205,     0,
     207,     0,   208,     0,   209,   210,     0,   211,   212,   213,
     214,   215,   640,     0,   218,   219,   220,   221,     0,   222,
     223,   224,   225,   226,   227,     0,   228,     0,   230,   231,
     232,   233,   234,   235,   236,     0,   237,     0,   238,     0,
       0,   241,     0,   243,   244,   245,   246,   247,     0,     0,
     248,     0,   250,     0,     0,   252,   253,   254,     0,     0,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,     0,   280,   281,   282,   283,   284,
       0,   285,   286,     0,   288,     0,   289,   290,   291,   292,
     293,   294,     0,   295,   296,     0,     0,   297,   298,   299,
       0,     0,   300,   301,     0,   303,     0,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,     0,   316,
     317,   318,   319,   320,   321,   322,   323,   324,     0,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,     0,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,     0,   351,   352,     0,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,     0,   369,   370,   371,   372,
     373,     0,   374,   375,   376,   377,   378,     0,   380,   381,
     382,   383,     0,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,     0,   397,   398,     0,
     399,     0,   401,   402,   403,   404,   405,     0,   406,   407,
       0,     0,   408,   409,   410,   411,   412,     0,   413,   414,
     415,   416,   417,   418,   419,     0,     0,   420,   421,   422,
     423,   424,     0,     0,   425,   426,   427,   428,   429,   430,
     431,     0,   432,     0,   434,   435,   436,   437,     0,     0,
     438,     0,     0,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   484,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    89,
      90,    91,    92,    93,    94,    95,    96,     0,    97,    98,
      99,     0,     0,     0,     0,     0,     0,     0,   100,   101,
       0,   102,   103,   104,     0,   106,   107,   108,   109,   110,
       0,   112,   113,     0,   114,   115,   116,   117,   118,   119,
       0,     0,   120,   121,   122,   123,   124,     0,   125,   126,
     127,   128,   129,     0,     0,     0,   131,   132,   133,   134,
     135,     0,   137,   138,   139,     0,   140,   141,   142,   143,
     144,   145,     0,     0,   147,   148,   149,     0,     0,     0,
       0,     0,     0,     0,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,     0,   161,     0,   162,   163,   164,
     165,   166,   167,     0,   168,   169,   170,   171,   172,     0,
       0,   173,   174,   175,   176,   177,     0,   178,   179,   180,
       0,   181,   182,   183,     0,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,     0,   194,     0,   195,   196,
     197,   198,     0,   199,     0,   200,     0,     0,     0,   203,
     204,   205,     0,   207,     0,   208,     0,   209,   210,     0,
     211,   212,   213,   214,   215,   216,     0,   218,   219,   220,
     221,     0,   222,   223,   224,   225,   226,   227,     0,   228,
       0,   230,   231,   232,   233,   234,   235,   236,     0,   237,
       0,   238,     0,     0,   241,     0,   243,   244,   245,   246,
     247,     0,     0,   248,     0,   250,     0,     0,   252,   253,
     254,     0,     0,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,     0,   280,   281,
     282,   283,   284,     0,   285,   286,     0,   288,     0,   289,
     290,   291,   292,   293,   294,     0,   295,   296,     0,     0,
     297,   298,   299,     0,     0,   300,   301,     0,   303,     0,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,     0,   316,   317,   318,   319,   320,   321,   322,   323,
     324,     0,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,     0,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,     0,
     351,   352,     0,   354,   355,   356,   357,   358,   359,   360,
     361,   546,   363,   364,   365,   366,   367,   368,     0,   369,
     370,   371,   372,   373,     0,   374,   375,   376,   377,   378,
       0,   380,   381,   382,   383,     0,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,     0,
     397,   398,     0,   399,     0,   401,   402,   403,   404,   405,
       0,   548,   407,     0,     0,   408,   409,   410,   411,   412,
       0,   413,   414,   415,   416,   417,   418,   419,     0,     0,
     420,   421,   422,   423,   424,     0,     0,   425,   426,   427,
     428,   429,   430,   431,     0,   432,     0,   434,   435,   436,
     437,     0,     0,   438,     0,     0,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   484,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    89,    90,    91,    92,    93,    94,    95,    96,
       0,    97,    98,    99,     0,     0,     0,     0,     0,     0,
       0,   100,   101,     0,   102,   103,   104,     0,   106,   107,
     108,   109,   110,     0,   112,   113,     0,   114,   115,   116,
     117,   118,   119,     0,     0,   120,   121,   122,   123,   124,
       0,   125,   126,   127,   128,   129,     0,     0,     0,   131,
     132,   133,   134,   135,     0,   137,   138,   139,     0,   140,
     141,   142,   143,   144,   145,     0,     0,   147,   148,   149,
       0,     0,     0,     0,     0,     0,     0,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,     0,   161,     0,
     162,   163,   164,   165,   166,   167,     0,   168,   169,   170,
     171,   172,     0,     0,   173,   174,   175,   176,   177,     0,
     178,   179,   180,     0,   181,   182,   183,     0,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,     0,   194,
       0,   195,   196,   197,   198,     0,   199,     0,   200,     0,
       0,     0,   203,   204,   205,     0,   207,     0,   208,     0,
     209,   210,     0,   211,   212,   213,   214,   215,   957,     0,
     218,   219,   220,   221,     0,   222,   223,   224,   225,   226,
     227,     0,   228,     0,   230,   231,   232,   233,   234,   235,
     236,     0,   237,     0,   238,     0,     0,   241,     0,   243,
     244,   245,   246,   247,     0,     0,   248,     0,   250,     0,
       0,   252,   253,   254,     0,     0,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
       0,   280,   281,   282,   283,   284,     0,   285,   286,     0,
     288,     0,   289,   290,   291,   292,   293,   294,     0,   295,
     296,     0,     0,   297,   298,   299,     0,     0,   300,   301,
       0,   303,     0,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,     0,   316,   317,   318,   319,   320,
     321,   322,   323,   324,     0,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,     0,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,     0,   351,   352,     0,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,     0,   369,   370,   371,   372,   373,     0,   374,   375,
     376,   377,   378,     0,   380,   381,   382,   383,     0,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,     0,   397,   398,     0,   399,     0,   401,   402,
     403,   404,   405,     0,   406,   407,     0,     0,   408,   409,
     410,   411,   412,     0,   413,   414,   415,   416,   417,   418,
     419,     0,     0,   420,   421,   422,   423,   424,     0,     0,
     425,   426,   427,   428,   429,   430,   431,     0,   432,     0,
     434,   435,   436,   437,     0,     0,   438,     0,     0,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     484,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    89,    90,    91,    92,    93,
      94,    95,    96,     0,    97,    98,    99,     0,     0,     0,
       0,     0,     0,     0,   100,   101,     0,   102,   103,   104,
       0,   106,   107,   108,   109,   110,     0,   112,   113,     0,
     114,   115,   116,   117,   118,   119,     0,     0,   120,   121,
     122,   123,   124,     0,   125,   126,   127,   128,   129,     0,
       0,     0,   131,   132,   133,   134,   135,     0,   137,   138,
     139,     0,   140,   141,   142,   143,   144,   145,     0,     0,
     147,   148,   149,     0,     0,     0,     0,     0,     0,     0,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
       0,   161,     0,   162,   163,   164,   165,   166,   167,     0,
     168,   169,   170,   171,   172,     0,     0,   173,   174,   175,
     176,   177,     0,   178,   179,   180,     0,   181,   182,   183,
       0,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,     0,   194,     0,   195,   196,   197,   198,     0,   199,
       0,   200,     0,     0,     0,   203,   204,   205,     0,   207,
       0,   208,     0,   209,   210,     0,   211,   212,   213,   214,
     215,   959,     0,   218,   219,   220,   221,     0,   222,   223,
     224,   225,   226,   227,     0,   228,     0,   230,   231,   232,
     233,   234,   235,   236,     0,   237,     0,   238,     0,     0,
     241,     0,   243,   244,   245,   246,   247,     0,     0,   248,
       0,   250,     0,     0,   252,   253,   254,     0,     0,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,     0,   280,   281,   282,   283,   284,     0,
     285,   286,     0,   288,     0,   289,   290,   291,   292,   293,
     294,     0,   295,   296,     0,     0,   297,   298,   299,     0,
       0,   300,   301,     0,   303,     0,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,     0,   316,   317,
     318,   319,   320,   321,   322,   323,   324,     0,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,     0,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,     0,   351,   352,     0,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,     0,   369,   370,   371,   372,   373,
       0,   374,   375,   376,   377,   378,     0,   380,   381,   382,
     383,     0,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,     0,   397,   398,     0,   399,
       0,   401,   402,   403,   404,   405,     0,   406,   407,     0,
       0,   408,   409,   410,   411,   412,     0,   413,   414,   415,
     416,   417,   418,   419,     0,     0,   420,   421,   422,   423,
     424,     0,     0,   425,   426,   427,   428,   429,   430,   431,
       0,   432,     0,   434,   435,   436,   437,     0,     0,   438,
       0,     0,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   484,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    89,    90,
      91,    92,    93,    94,    95,    96,     0,    97,    98,    99,
       0,     0,     0,     0,     0,  1178,     0,   100,   101,     0,
     102,   103,   104,     0,   106,   107,   108,   109,   110,     0,
     112,   113,     0,   114,   115,   116,   117,   118,   119,     0,
       0,   120,   121,   122,   123,   124,     0,   125,   126,   127,
     128,   129,     0,     0,     0,   131,   132,   133,   134,   135,
       0,   137,   138,   139,     0,   140,   141,   142,   143,   144,
     145,     0,     0,   147,   148,   149,     0,     0,     0,     0,
       0,     0,     0,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,     0,   161,     0,   162,   163,   164,   165,
     166,   167,     0,   168,   169,   170,   171,   172,     0,     0,
     173,   174,   175,   176,   177,     0,   178,   179,   180,     0,
     181,   182,   183,     0,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,     0,   194,     0,   195,   196,   197,
     198,     0,   199,     0,   200,     0,     0,     0,   203,   204,
     205,     0,   207,     0,   208,     0,   209,   210,     0,   211,
     212,   213,   214,   215,   216,     0,   218,   219,   220,   221,
       0,   222,   223,   224,   225,   226,   227,     0,   228,     0,
     230,   231,   232,   233,   234,   235,   236,     0,   237,     0,
     238,     0,     0,   241,     0,   243,   244,   245,   246,   247,
       0,     0,   248,     0,   250,     0,     0,   252,   253,   254,
       0,     0,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,     0,   280,   281,   282,
     283,   284,     0,   285,   286,     0,   288,     0,   289,   290,
     291,   292,   293,   294,     0,   295,   296,     0,     0,   297,
     298,   299,     0,     0,   300,   301,     0,   303,     0,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
       0,   316,   317,   318,   319,   320,   321,   322,   323,   324,
       0,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,     0,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,     0,   351,
     352,     0,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,     0,   369,   370,
     371,   372,   373,     0,     0,   375,   376,   377,   378,     0,
     380,   381,   382,   383,     0,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,     0,   397,
     398,     0,   399,     0,   401,   402,   403,   404,   405,     0,
     406,   407,     0,     0,   408,   409,   410,   411,   412,     0,
     413,   414,   415,   416,   417,   418,   419,     0,     0,   420,
     421,   422,   423,   424,     0,     0,   425,   426,   427,   428,
     429,   430,   431,     0,   432,     0,   434,   435,   436,   437,
       0,     0,   438,     0,     0,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   484,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    89,    90,    91,    92,    93,    94,    95,    96,     0,
      97,    98,    99,     0,     0,     0,     0,     0,     0,     0,
     100,   101,     0,   102,   103,   104,     0,   106,   107,   108,
     109,   110,     0,   112,   113,     0,   114,   115,   116,   117,
     118,   119,     0,     0,   120,   121,   122,   123,   124,     0,
     125,   126,   127,   128,   129,     0,     0,     0,   131,   132,
     133,   134,   135,     0,   137,   138,   139,     0,   140,   141,
     142,   143,   144,   145,     0,     0,   147,   148,   149,     0,
       0,     0,     0,     0,     0,     0,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,     0,   161,     0,   162,
     163,   164,   165,   166,   167,     0,   168,   169,   170,   171,
     172,     0,     0,   173,   174,   175,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,     0,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,     0,   194,     0,
     195,   196,   197,   198,     0,   199,     0,   200,     0,     0,
       0,   203,   204,   205,     0,   207,     0,   208,     0,   209,
     210,     0,   211,   212,   213,   214,   215,  1311,     0,   218,
     219,   220,   221,     0,   222,   223,   224,   225,   226,   227,
       0,   228,     0,   230,   231,   232,   233,   234,   235,   236,
       0,   237,     0,   238,     0,     0,   241,     0,   243,   244,
     245,   246,   247,     0,     0,   248,     0,   250,     0,     0,
     252,   253,   254,     0,     0,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,     0,
     280,   281,   282,   283,   284,     0,   285,   286,     0,   288,
       0,   289,   290,   291,   292,   293,   294,     0,   295,   296,
       0,     0,   297,   298,   299,     0,     0,   300,   301,     0,
     303,     0,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,     0,   316,   317,   318,   319,   320,   321,
     322,   323,   324,     0,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,     0,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,     0,   351,   352,     0,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,   372,   373,     0,   374,   375,   376,
     377,   378,     0,   380,   381,   382,   383,     0,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,     0,   397,   398,     0,   399,     0,   401,   402,   403,
     404,   405,     0,   406,   407,     0,     0,   408,   409,   410,
     411,   412,     0,   413,   414,   415,   416,   417,   418,   419,
       0,     0,   420,   421,   422,   423,   424,     0,     0,   425,
     426,   427,   428,   429,   430,   431,     0,   432,     0,   434,
     435,   436,   437,     0,     0,   438,     0,     0,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   484,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    89,    90,    91,    92,    93,    94,
      95,    96,     0,    97,    98,    99,     0,     0,     0,     0,
       0,     0,     0,   100,   101,     0,   102,   103,   104,     0,
     106,   107,   108,   109,   110,     0,   112,   113,     0,   114,
     115,   116,   117,   118,   119,     0,     0,   120,   121,   122,
     123,   124,     0,   125,   126,   127,   128,   129,     0,     0,
       0,   131,   132,   133,   134,   135,     0,   137,   138,   139,
       0,   140,   141,   142,   143,   144,   145,     0,     0,   147,
     148,   149,     0,     0,     0,     0,     0,     0,     0,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,     0,
     161,     0,   162,   163,   164,   165,   166,   167,     0,   168,
     169,   170,   171,   172,     0,     0,   173,   174,   175,   176,
     177,     0,   178,   179,   180,     0,   181,   182,   183,     0,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
       0,   194,     0,   195,   196,   197,   198,     0,   199,     0,
     200,     0,     0,     0,   203,   204,   205,     0,   207,     0,
     208,     0,   209,   210,     0,   211,   212,   213,   214,   215,
    1324,     0,   218,   219,   220,   221,     0,   222,   223,   224,
     225,   226,   227,     0,   228,     0,   230,   231,   232,   233,
     234,   235,   236,     0,   237,     0,   238,     0,     0,   241,
       0,   243,   244,   245,   246,   247,     0,     0,   248,     0,
     250,     0,     0,   252,   253,   254,     0,     0,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,     0,   280,   281,   282,   283,   284,     0,   285,
     286,     0,   288,     0,   289,   290,   291,   292,   293,   294,
       0,   295,   296,     0,     0,   297,   298,   299,     0,     0,
     300,   301,     0,   303,     0,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,     0,   316,   317,   318,
     319,   320,   321,   322,   323,   324,     0,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,     0,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,     0,   351,   352,     0,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,     0,   369,   370,   371,   372,   373,     0,
     374,   375,   376,   377,   378,     0,   380,   381,   382,   383,
       0,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,     0,   397,   398,     0,   399,     0,
     401,   402,   403,   404,   405,     0,   406,   407,     0,     0,
     408,   409,   410,   411,   412,     0,   413,   414,   415,   416,
     417,   418,   419,     0,     0,   420,   421,   422,   423,   424,
       0,     0,   425,   426,   427,   428,   429,   430,   431,     0,
     432,     0,   434,   435,   436,   437,     0,     0,   438,     0,
       0,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   484,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    89,    90,    91,
      92,    93,    94,    95,    96,     0,    97,    98,    99,     0,
       0,     0,     0,     0,     0,     0,   100,   101,     0,   102,
     103,   104,     0,   106,   107,   108,   109,   110,     0,   112,
     113,     0,   114,   115,   116,   117,   118,   119,     0,     0,
     120,   121,   122,   123,   124,     0,   125,   126,   127,   128,
     129,     0,     0,     0,   131,   132,   133,   134,   135,     0,
     137,   138,   139,     0,   140,   141,   142,   143,   144,   145,
       0,     0,   147,   148,   149,     0,     0,     0,     0,     0,
       0,     0,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,     0,   161,     0,   162,   163,   164,   165,   166,
     167,     0,   168,   169,   170,   171,   172,     0,     0,   173,
     174,   175,   176,   177,     0,   178,   179,   180,     0,   181,
     182,   183,     0,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,     0,   194,     0,   195,   196,   197,   198,
       0,   199,     0,   200,     0,     0,     0,   203,   204,   205,
       0,   207,     0,   208,     0,   209,   210,     0,   211,   212,
     213,   214,   215,  1591,     0,   218,   219,   220,   221,     0,
     222,   223,   224,   225,   226,   227,     0,   228,     0,   230,
     231,   232,   233,   234,   235,   236,     0,   237,     0,   238,
       0,     0,   241,     0,   243,   244,   245,   246,   247,     0,
       0,   248,     0,   250,     0,     0,   252,   253,   254,     0,
       0,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,     0,   280,   281,   282,   283,
     284,     0,   285,   286,     0,   288,     0,   289,   290,   291,
     292,   293,   294,     0,   295,   296,     0,     0,   297,   298,
     299,     0,     0,   300,   301,     0,   303,     0,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,     0,
     316,   317,   318,   319,   320,   321,   322,   323,   324,     0,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,     0,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,     0,   351,   352,
       0,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,     0,   369,   370,   371,
     372,   373,     0,   374,   375,   376,   377,   378,     0,   380,
     381,   382,   383,     0,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,     0,   397,   398,
       0,   399,     0,   401,   402,   403,   404,   405,     0,   406,
     407,     0,     0,   408,   409,   410,   411,   412,     0,   413,
     414,   415,   416,   417,   418,   419,     0,     0,   420,   421,
     422,   423,   424,     0,     0,   425,   426,   427,   428,   429,
     430,   431,     0,   432,     0,   434,   435,   436,   437,     0,
       0,   438,     0,     0,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   484,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      89,    90,    91,    92,    93,    94,    95,    96,     0,    97,
      98,    99,     0,     0,     0,     0,     0,     0,     0,   100,
     101,     0,   102,   103,   104,     0,   106,   107,   108,   109,
     110,     0,   112,   113,     0,   114,   115,   116,   117,   118,
     119,     0,     0,   120,   121,   122,   123,   124,     0,   125,
     126,   127,   128,   129,     0,     0,     0,   131,   132,   133,
     134,   135,     0,   137,   138,   139,     0,   140,   141,   142,
     143,   144,   145,     0,     0,   147,   148,   149,     0,     0,
       0,     0,     0,     0,     0,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,     0,   161,     0,   162,   163,
     164,   165,   166,   167,     0,   168,   169,   170,   171,   172,
       0,     0,   173,   174,   175,   176,   177,     0,   178,   179,
     180,     0,   181,   182,   183,     0,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,     0,   194,     0,   195,
     196,   197,   198,     0,   199,     0,   200,     0,     0,     0,
     203,   204,   205,     0,   207,     0,   208,     0,   209,   210,
       0,   211,   212,   213,   214,   215,  1603,     0,   218,   219,
     220,   221,     0,   222,   223,   224,   225,   226,   227,     0,
     228,     0,   230,   231,   232,   233,   234,   235,   236,     0,
     237,     0,   238,     0,     0,   241,     0,   243,   244,   245,
     246,   247,     0,     0,   248,     0,   250,     0,     0,   252,
     253,   254,     0,     0,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,     0,   280,
     281,   282,   283,   284,     0,   285,   286,     0,   288,     0,
     289,   290,   291,   292,   293,   294,     0,   295,   296,     0,
       0,   297,   298,   299,     0,     0,   300,   301,     0,   303,
       0,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,     0,   316,   317,   318,   319,   320,   321,   322,
     323,   324,     0,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,     0,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
       0,   351,   352,     0,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,     0,
     369,   370,   371,   372,   373,     0,   374,   375,   376,   377,
     378,     0,   380,   381,   382,   383,     0,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
       0,   397,   398,     0,   399,     0,   401,   402,   403,   404,
     405,     0,   406,   407,     0,     0,   408,   409,   410,   411,
     412,     0,   413,   414,   415,   416,   417,   418,   419,     0,
       0,   420,   421,   422,   423,   424,     0,     0,   425,   426,
     427,   428,   429,   430,   431,     0,   432,     0,   434,   435,
     436,   437,     0,     0,   438,     0,     0,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   484,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    89,    90,    91,    92,    93,    94,    95,
      96,     0,    97,    98,    99,     0,     0,     0,     0,     0,
       0,     0,   100,   101,     0,   102,   103,   104,     0,   106,
     107,   108,   109,   110,     0,   112,   113,     0,   114,   115,
     116,   117,   118,   119,     0,     0,   120,   121,   122,   123,
     124,     0,   125,   126,   127,   128,   129,     0,     0,     0,
     131,   132,   133,   134,   135,     0,   137,   138,   139,     0,
     140,   141,   142,   143,   144,   145,     0,     0,   147,   148,
     149,     0,     0,     0,     0,     0,     0,     0,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,     0,   161,
       0,   162,   163,   164,   165,   166,   167,     0,   168,   169,
     170,   171,   172,     0,     0,   173,   174,   175,   176,   177,
       0,   178,   179,   180,     0,   181,   182,   183,     0,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,     0,
     194,     0,   195,   196,   197,   198,     0,   199,     0,   200,
       0,     0,     0,   203,   204,   205,     0,   207,     0,   208,
       0,   209,   210,     0,   211,   212,   213,   214,   215,  1605,
       0,   218,   219,   220,   221,     0,   222,   223,   224,   225,
     226,   227,     0,   228,     0,   230,   231,   232,   233,   234,
     235,   236,     0,   237,     0,   238,     0,     0,   241,     0,
     243,   244,   245,   246,   247,     0,     0,   248,     0,   250,
       0,     0,   252,   253,   254,     0,     0,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,     0,   280,   281,   282,   283,   284,     0,   285,   286,
       0,   288,     0,   289,   290,   291,   292,   293,   294,     0,
     295,   296,     0,     0,   297,   298,   299,     0,     0,   300,
     301,     0,   303,     0,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,     0,   316,   317,   318,   319,
     320,   321,   322,   323,   324,     0,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
       0,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,     0,   351,   352,     0,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,     0,   369,   370,   371,   372,   373,     0,   374,
     375,   376,   377,   378,     0,   380,   381,   382,   383,     0,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,     0,   397,   398,     0,   399,     0,   401,
     402,   403,   404,   405,     0,   406,   407,     0,     0,   408,
     409,   410,   411,   412,     0,   413,   414,   415,   416,   417,
     418,   419,     0,     0,   420,   421,   422,   423,   424,     0,
       0,   425,   426,   427,   428,   429,   430,   431,     0,   432,
       0,   434,   435,   436,   437,     0,     0,   438,     0,     0,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   484,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    89,    90,    91,    92,
      93,    94,    95,    96,     0,    97,    98,    99,     0,     0,
       0,     0,     0,     0,     0,   100,   101,     0,   102,   103,
     104,     0,   106,   107,   108,   109,   110,     0,   112,   113,
       0,   114,   115,   116,   117,   118,   119,     0,     0,   120,
     121,   122,   123,   124,     0,   125,   126,   127,   128,   129,
       0,     0,     0,   131,   132,   133,   134,   135,     0,   137,
     138,   139,     0,   140,   141,   142,   143,   144,   145,     0,
       0,   147,   148,   149,     0,     0,     0,     0,     0,     0,
       0,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,     0,   161,     0,   162,   163,   164,   165,   166,   167,
       0,   168,   169,   170,   171,   172,     0,     0,   173,   174,
     175,   176,   177,     0,   178,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,     0,   194,     0,   195,   196,   197,   198,     0,
     199,     0,   200,     0,     0,     0,   203,   204,   205,     0,
     207,     0,   208,     0,   209,   210,     0,   211,   212,   213,
     214,   215,  2187,     0,   218,   219,   220,   221,     0,   222,
     223,   224,   225,   226,   227,     0,   228,     0,   230,   231,
     232,   233,   234,   235,   236,     0,   237,     0,   238,     0,
       0,   241,     0,   243,   244,   245,   246,   247,     0,     0,
     248,     0,   250,     0,     0,   252,   253,   254,     0,     0,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,     0,   280,   281,   282,   283,   284,
       0,   285,   286,     0,   288,     0,   289,   290,   291,   292,
     293,   294,     0,   295,   296,     0,     0,   297,   298,   299,
       0,     0,   300,   301,     0,   303,     0,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,     0,   316,
     317,   318,   319,   320,   321,   322,   323,   324,     0,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,     0,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,     0,   351,   352,     0,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,     0,   369,   370,   371,   372,
     373,     0,   374,   375,   376,   377,   378,     0,   380,   381,
     382,   383,     0,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,     0,   397,   398,     0,
     399,     0,   401,   402,   403,   404,   405,     0,   406,   407,
       0,     0,   408,   409,   410,   411,   412,     0,   413,   414,
     415,   416,   417,   418,   419,     0,     0,   420,   421,   422,
     423,   424,     0,     0,   425,   426,   427,   428,   429,   430,
     431,     0,   432,     0,   434,   435,   436,   437,     0,     0,
     438,     0,     0,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,  1011,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    89,
      90,    91,    92,    93,    94,    95,    96,     0,    97,    98,
      99,     0,     0,     0,     0,     0,     0,     0,   100,   101,
       0,   102,   103,   104,   105,   106,   107,   108,     0,  1012,
     111,  1013,  1014,     0,   114,   115,   116,   117,   118,   119,
       0,     0,   120,   121,  1015,  1016,   124,     0,   125,   126,
     127,   128,     0,     0,   130,     0,   131,   132,   133,   134,
     135,   136,   137,   138,   139,     0,   140,   141,   142,   143,
     144,   145,     0,   146,   147,   148,   149,     0,     0,     0,
     150,     0,     0,     0,   151,   152,   153,   154,   155,   156,
     157,  1017,  1018,   160,     0,   161,     0,   162,   163,   164,
     165,   166,   167,     0,   168,   169,   170,   171,   172,     0,
       0,   173,   174,   691,   176,   177,     0,   178,   179,   180,
       0,   181,   182,   183,     0,   184,   185,   186,   187,     0,
     189,   190,   191,   192,     0,     0,   194,     0,   195,   196,
    1019,   198,     0,   199,     0,   200,   201,     0,   202,   203,
     204,   205,   206,   207,     0,   208,     0,     0,   210,     0,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,     0,   222,   223,   224,   225,   226,   227,     0,   228,
     229,     0,   231,   232,   233,   234,  1020,  1021,     0,  1022,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,     0,     0,   248,   249,   250,   251,     0,   252,   253,
     254,     0,     0,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,  1023,   279,  1024,   281,
     282,   283,     0,     0,   285,   286,   287,   288,     0,     0,
     290,  1025,   292,   293,   294,     0,   295,   296,     0,     0,
     297,   298,   299,     0,     0,   300,     0,   302,   303,   304,
       0,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,     0,   316,   317,     0,   319,   320,     0,   322,   323,
     324,     0,   325,   326,   327,   328,   329,   330,   331,   332,
     333,  1026,   335,   336,   337,   338,     0,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,     0,
     351,   352,   353,   354,   355,   356,  1027,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,     0,   369,
     370,   371,   372,   373,     0,   374,  1028,   376,   377,   378,
     379,   380,   381,  1029,   383,     0,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,     0,     0,
     397,   398,     0,   399,   400,   401,   402,   403,   404,   405,
       0,  1030,  1031,     0,     0,   408,   409,     0,   411,     0,
       0,   413,   414,   415,   416,   417,   418,   419,     0,     0,
     420,   421,   422,   423,   424,     0,     0,   425,   426,   427,
     428,   429,     0,  1032,     0,   432,   433,   434,   435,   436,
     437,     0,     0,   438,     0,     0,   439,   440,   441,   442,
     443,   444,   484,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   456,   457,   458,   459,    89,    90,    91,
      92,    93,    94,    95,    96,     0,    97,    98,    99,     0,
       0,     0,     0,     0,     0,     0,   100,   101,     0,   102,
     103,   104,     0,   106,   107,   108,   109,   110,     0,   112,
     113,     0,   114,   115,   116,   117,   118,   119,     0,     0,
     120,   121,   122,   123,   124,     0,   125,   126,   127,   128,
     129,     0,     0,     0,   131,   132,   133,   134,   135,     0,
     137,   138,   139,     0,   140,   141,   142,   143,   144,   145,
       0,     0,   147,   148,   149,     0,     0,     0,     0,     0,
       0,     0,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,     0,   161,     0,   162,   163,   164,   165,   166,
     167,     0,   168,   169,   170,   171,   172,     0,     0,   173,
     174,   175,   176,   177,     0,   178,   179,   180,     0,   181,
     182,   183,     0,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,     0,   194,     0,   195,   196,   197,   198,
       0,   199,     0,   200,     0,     0,     0,   203,   204,   205,
       0,   207,     0,   208,     0,   209,   210,     0,   211,   212,
     213,   214,   215,   216,     0,   218,   219,   220,   221,     0,
     222,   223,   224,   225,   226,   227,     0,   228,     0,   230,
     231,   232,   233,   234,   235,   236,     0,   237,     0,   238,
       0,     0,   241,     0,   243,   244,   245,   246,   247,     0,
       0,   248,     0,   250,     0,     0,   252,   253,   254,     0,
       0,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,     0,   280,   281,   282,   283,
     284,     0,   285,   286,     0,   288,     0,   289,   290,   291,
     292,   293,   294,     0,   295,   296,     0,     0,   297,   298,
     299,     0,     0,   300,   301,     0,   303,     0,   305,   306,
     307,   308,   309,   310,   311,     0,   313,   314,   315,     0,
     316,   317,   318,   319,   320,   321,   322,   323,   324,     0,
     325,   326,   327,   328,   329,   330,   331,     0,   333,   334,
     335,   336,   337,   338,     0,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,     0,   351,   352,
       0,   354,   355,   356,   357,     0,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,     0,   369,   370,   371,
     372,   373,     0,   374,   375,   376,   377,   378,     0,   380,
     381,   382,   383,     0,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,     0,   397,   398,
       0,   399,     0,   401,   402,   403,   404,   405,     0,   406,
     407,     0,     0,   408,   409,   410,   411,   412,     0,   413,
     414,   415,   416,   417,   418,   419,     0,     0,   420,   421,
     422,   423,   424,     0,     0,   425,   426,   427,   428,   429,
     430,   431,     0,   432,     0,   434,   435,   436,   437,     0,
       0,   438,     0,     0,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,  1011,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      89,    90,    91,    92,    93,    94,    95,    96,     0,    97,
      98,    99,     0,     0,     0,     0,     0,     0,     0,   100,
     101,     0,   102,   103,   104,   105,   106,   107,   108,     0,
    1012,   111,  1013,  1014,     0,   114,   115,   116,   117,   118,
     119,     0,     0,   120,   121,  1015,  1016,   124,     0,   125,
     126,   127,   128,     0,     0,   130,     0,   131,   132,   133,
     134,   135,   136,   137,   138,   139,     0,   140,   141,   142,
     143,   144,   145,     0,   146,   147,   148,   149,     0,     0,
       0,   150,     0,     0,     0,   151,   152,   153,   154,   155,
     156,   157,  1017,  1018,   160,     0,   161,     0,   162,   163,
     164,   165,   166,   167,     0,   168,   169,   170,   171,   172,
       0,     0,   173,   174,   691,   176,   177,     0,   178,   179,
     180,     0,   181,   182,   183,     0,   184,   185,   186,   187,
       0,   189,   190,   191,   192,     0,     0,   194,     0,   195,
     196,  1019,   198,     0,   199,     0,   200,   201,     0,   202,
     203,   204,   205,   206,   207,     0,   208,     0,     0,   210,
       0,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,   221,     0,   222,   223,   224,   225,   226,   227,     0,
     228,   229,     0,   231,   232,   233,   234,  1020,  1021,     0,
    1022,     0,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,     0,     0,   248,   249,   250,   251,     0,   252,
     253,   254,     0,     0,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,  1023,   279,  1024,
     281,   282,   283,     0,     0,   285,   286,   287,   288,     0,
       0,   290,  1025,   292,   293,   294,     0,   295,   296,     0,
       0,   297,   298,   299,     0,     0,   300,     0,   302,   303,
     304,     0,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,     0,   316,   317,     0,   319,   320,     0,   322,
     323,   324,     0,   325,   326,   327,   328,   329,   330,   331,
     332,   333,  1026,   335,   336,   337,   338,     0,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
       0,   351,   352,   353,   354,   355,   356,     0,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,     0,
     369,   370,   371,   372,   373,     0,   374,     0,   376,   377,
     378,   379,   380,   381,  1029,   383,     0,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,     0,
       0,   397,   398,     0,   399,   400,   401,   402,   403,   404,
     405,     0,  1030,  1031,     0,     0,   408,   409,     0,   411,
       0,     0,   413,   414,   415,   416,   417,   418,   419,     0,
       0,   420,   421,   422,   423,   424,     0,     0,   425,   426,
     427,   428,   429,     0,  1032,     0,   432,   433,   434,   435,
     436,   437,     0,     0,   438,     0,     0,   439,   440,   441,
     442,   443,   444,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   456,   457,   458,   459
};

static const yytype_int16 yycheck[] =
{
       6,   596,   660,   512,   511,   544,    33,   611,    55,    16,
     840,   828,  1047,   581,   651,   560,     0,     6,   815,   651,
     955,  1532,   603,   842,   727,   688,   689,   638,   955,  1081,
     556,     0,     0,   716,   955,     0,  1601,   955,   985,   820,
     817,   516,     6,   706,     0,    57,   605,    16,  1607,    28,
    1609,   854,  1434,  1435,  1872,   811,  1944,  1439,  1105,  1106,
    1070,  1598,   596,  1491,   598,  1920,   600,     0,   845,  1959,
    1804,  1109,  1070,  1552,    57,    32,  1952,  1049,     9,    11,
     517,    57,     5,     5,   659,    57,     5,  1070,    49,     5,
      13,    14,  1474,  1475,    13,    14,     5,   642,   518,  1070,
       3,  1837,  2191,   761,    13,    14,    85,     5,    40,  1199,
       5,     5,     5,     5,     5,     9,     9,    72,    39,    75,
       5,  1153,   977,     5,  1201,    26,     5,    30,    31,   761,
    1667,    39,    74,   166,     0,     5,  2194,   115,    74,   167,
      72,   616,    84,  2197,    11,   118,    66,  2267,    84,   523,
     135,  1831,     4,    11,   120,    57,  2333,     9,    26,   118,
     105,  2244,     9,  2183,  1836,    33,   209,    26,  2362,   578,
     828,  1708,  1709,     4,    33,   518,    77,    22,     9,   172,
    1861,   726,    40,    28,    85,     0,   651,    26,  1774,    22,
     215,   283,  1230,   658,    33,   578,   518,   829,  2281,   113,
     832,   833,   728,   143,     3,     4,     5,   275,   166,   768,
       9,  1028,    66,   114,    72,   299,   156,   156,   655,   118,
     345,   161,   161,   323,    11,    91,   283,   263,   266,   755,
     203,  2145,   323,   277,   133,   260,   229,   299,   357,  2519,
      19,    58,    36,   163,   441,   128,   158,  1891,   158,    66,
    2577,   156,  2579,   116,    26,   471,   161,  2602,   358,   113,
     603,   116,   165,   105,   167,   810,   482,   207,   404,   156,
     390,   167,   391,   782,   739,     5,    91,   852,   853,  2362,
    2400,   603,   183,   425,   346,   336,   226,   226,   133,   486,
     858,   391,  2418,   194,  2348,   106,   761,    11,   763,   764,
     133,  2189,   318,   199,   424,   115,   235,    22,   651,   219,
    2044,   447,   431,   364,   113,   658,   170,  1745,   214,  2664,
    1964,   226,  2649,   186,   160,  1890,   106,   223,   122,   651,
     346,   186,  2068,   371,   274,   274,   658,   437,  2618,   226,
     482,   143,   367,   283,  1382,  1340,   437,   259,  1031,  1344,
    1887,  1346,  1889,   267,  1017,  1018,   128,   482,   962,     0,
      75,   337,  1025,   482,   829,   337,    57,   832,   833,   274,
    1028,  1753,  1754,  1755,  1756,    16,   482,  1759,  1760,  1761,
    1762,  1763,  1764,  1765,  1766,  1767,  1768,   423,   963,   272,
     310,  2305,    33,   477,   486,  2067,   977,  2077,   423,   808,
    2483,  2081,   395,   777,   397,   207,  2600,  2584,   262,   208,
     309,   277,   229,   267,   482,   477,    57,    81,   260,  2005,
     763,   764,  1003,    11,  1221,   808,  1808,  1809,   421,   486,
     229,  2451,  2113,  2516,    75,   337,   281,  1974,   482,  1491,
    2560,   763,   764,   486,   402,   341,   391,  2573,   281,   427,
     423,  1109,    40,   486,   482,   440,   310,   267,     0,   425,
     402,   125,   277,  1318,   423,   972,   402,   388,   975,   305,
     979,   325,   338,   166,  1277,  1565,   983,   417,  2333,   380,
     388,   283,   383,  1302,    72,   469,  2220,  1534,  2546,  1566,
     335,   518,   421,  2547,  1053,   485,   381,   382,   418,   486,
     469,   469,   335,   336,   469,  2594,   374,  1052,  1560,  2245,
     486,   518,   518,   469,   486,   374,  1061,  2600,   435,   364,
    1065,   482,  1554,   338,   395,   480,   397,   992,   993,   484,
     446,   364,   435,  1114,   581,   374,   434,   543,   544,  1084,
    1085,  1100,  1101,   475,   476,   477,   478,  1350,   517,   986,
     481,   558,   468,   482,   560,   446,   568,  2122,   480,   482,
     482,    26,   484,   482,   418,  2453,   482,   987,  2458,   260,
    1542,  1097,  1230,   482,  2254,  1150,  2135,   468,   444,  2259,
     235,  2457,  2262,   428,   482,   568,   570,   482,   482,   482,
     482,   482,   444,  1152,   573,   601,   602,   603,  1063,  1064,
     482,   570,   570,   482,   561,   570,  1071,   113,  1073,  1074,
    1117,   478,   482,   167,   570,   417,   468,   483,  1250,   485,
     478,   473,   474,  1088,   333,  1090,   473,   474,  1260,   444,
     294,  1263,  2111,   482,   977,  2369,   642,   570,  1103,  1677,
     193,   193,   473,   474,   987,   651,   337,   395,  2185,   397,
     446,  1246,   658,   659,   660,   977,   128,  1238,    91,   800,
    1003,    22,  2454,   128,  2552,   987,   241,    28,   483,   675,
     485,  2290,   468,   364,   473,   474,   104,   183,  1716,   246,
     247,  1003,   145,    63,    64,  1219,   655,  2115,   475,   476,
     477,   478,  2311,  1745,  1732,   350,   357,   703,  1335,   726,
      35,   407,    92,  1335,  1315,  1273,  1274,  1275,  1319,   402,
    1720,  1322,  1246,    11,  1752,  2395,   722,   723,   724,    54,
     726,  1384,  1669,  1721,  1382,    11,   437,  2292,   191,  2584,
     391,  1265,   396,  1198,  1199,   353,  1270,  1318,  1721,  1722,
     746,   295,    40,  1781,  1791,   156,   482,   526,   527,  1256,
    1721,  1722,  1723,  2545,  1261,  1458,   262,   763,   764,   473,
     474,   475,   476,   477,   478,   482,   421,   546,   425,   104,
     431,  1114,   133,   128,    72,  2663,   483,   167,   471,   486,
    1536,   793,   794,   444,   796,  1250,    72,   354,   355,   795,
     262,   484,  1114,   799,   800,  1260,   465,   350,  1263,   154,
     272,  2619,  2620,   235,   810,   358,  1625,   468,   787,   199,
     793,   794,   240,   796,   115,   226,   370,   444,  1293,  2438,
     248,   482,   828,  1747,   214,   482,    29,   482,   469,   471,
      30,    31,     4,   223,   482,  2217,   484,     9,   391,   677,
     678,   468,   484,  1388,  2636,  1648,   852,   853,   854,  2667,
      53,  1775,    74,  1556,   262,     4,  1633,   192,  2423,   267,
       9,    74,    84,   274,   702,   844,   256,   213,  1920,  2428,
    1335,    84,   651,    13,    14,   235,   517,   518,    47,   658,
      13,    14,  1920,  1348,   437,   473,   474,   475,   476,   477,
     478,    91,   113,  1236,   484,  1238,   197,  1678,  1524,  1525,
     345,   346,  1683,     4,    22,   240,  1371,  1452,     9,   317,
      28,   446,   267,   248,  1236,   235,  1238,   272,   350,   446,
     281,  2303,   172,     4,   357,   260,   277,   568,     9,   570,
      22,   323,   465,   468,  1479,   480,    28,     8,   475,   484,
      11,   468,  1083,   193,    15,    16,    17,   482,   165,   483,
     729,   341,   486,   250,   251,   482,   291,   963,   391,   260,
     739,   262,   477,  1531,   345,   346,   358,   482,   235,   484,
     331,   977,   751,  1518,   335,  1318,   444,   486,   446,   229,
     987,   987,   761,   482,   763,   764,  2368,   235,   483,   421,
     350,   486,  1335,  1604,   483,  1606,  1318,  1003,   431,   391,
     483,   336,   171,   364,  2515,  1348,   147,   345,   346,   483,
    1945,   444,   486,  1335,   655,   133,   185,   986,  1945,  1677,
    1967,   190,  1028,   358,  1945,   483,  1348,  1945,   486,   477,
     350,   482,   282,   484,   482,   468,   484,   166,    22,   483,
     128,   133,   486,   378,    28,   437,  1052,   215,  1189,   482,
     482,   692,  1058,   209,   409,  1061,   225,    53,  1716,  1065,
    1664,   421,  1699,  2115,   419,  1049,   154,   428,  1533,   290,
    1900,   465,  2086,  1079,  1732,  2089,  1082,  1083,  1084,  1085,
    1049,  1049,  1901,   350,  1049,   726,  1092,  1093,  2653,   482,
    2601,  1888,   260,  1049,  1752,   148,  1779,  1780,  1104,  1564,
    1565,   421,   350,  1109,  1110,  1111,  1112,  1113,  1114,  1939,
    2621,   483,  1118,  1119,   486,  2153,  1697,  1123,  1899,   190,
    1901,  1127,   482,  1781,  1130,  1131,  1132,  1133,  1134,  1135,
    1136,  1137,  1138,   213,  2169,  1141,   357,   480,   331,   482,
     211,   484,  1148,   147,  1150,   395,  1804,   397,   483,   133,
     148,   319,   793,   794,   421,   796,  1859,   357,   395,   148,
     397,  1168,   482,   281,  2675,  1171,   483,   148,   418,   486,
     391,   421,  2210,   421,   262,   354,   355,  1015,  1016,   267,
     395,   483,   397,  1189,   272,  1692,  1024,   483,   482,   281,
     486,   391,  1198,  1199,  1820,  1821,  1822,  1823,   262,   367,
     369,  1451,   483,  1453,  1454,   486,   483,   437,   279,   486,
     431,   483,   482,   331,   486,   482,   357,   335,     8,   483,
    1176,    11,   486,   444,  1230,    15,    16,    17,    80,  1788,
    1236,   431,  1238,   148,   482,   435,   448,  1075,  1076,   331,
     484,  1786,    32,   335,   444,  1529,   364,   468,   345,   346,
     391,     5,  1717,  1718,     8,   423,   575,   148,   577,  1543,
      14,   482,  1920,   148,  1607,  1608,  1609,   483,   468,    23,
     486,  1277,   364,    27,  1280,  1281,   483,  1283,  2082,   486,
    2084,  2333,   482,   181,   182,  1607,  1608,  1609,  1920,   483,
     431,  1070,   486,  1434,  1435,  2333,  2331,   281,  1439,   483,
     277,   391,   486,   444,  1310,   483,   763,   764,   486,  1868,
     428,   482,  1318,   483,    35,  1841,   486,   483,   224,    92,
     486,   409,   483,   482,    22,   486,  2123,   468,     5,  1335,
      28,   419,  2151,  1474,  1475,   545,   428,   547,  1919,     5,
    1921,   482,  1348,  2160,  1350,   986,   482,   331,   246,   247,
    1306,   335,   482,   357,  1697,  1966,  1699,   483,   161,   483,
     486,  2399,   486,   483,  2402,   482,   486,  1935,   483,   483,
     483,   486,   486,   486,   482,  1697,  1382,  1699,   483,  1158,
     364,   486,  1388,  1389,   306,     5,  2044,   391,  1394,   483,
      22,   482,   486,   482,   167,     5,    28,   482,   469,   470,
     471,     5,   473,   474,   475,   476,   477,   478,  1049,  1436,
     483,   483,   482,   486,   486,   483,   483,   483,   486,   486,
     486,   211,   483,   482,   482,   486,   199,   431,  1434,  1435,
    1436,   483,   482,  1439,   486,   133,   483,   482,   482,   486,
     444,   214,     5,   482,   428,  1451,  1452,  1453,  1454,   482,
     223,   482,  1479,  1459,   290,  1920,   354,   355,   483,   483,
     483,   486,   486,   486,   468,   482,   445,   483,  1474,  1475,
     486,   483,   483,  1479,   486,   486,   288,   483,   482,  1120,
     486,   483,   483,   256,   486,   486,   209,  1493,    95,   279,
    1496,   486,  1498,    35,   364,  2153,    82,   161,    84,   274,
      86,   133,  2160,   161,   277,   272,   224,   482,   402,  2339,
    2142,   482,  1518,    84,   486,  1980,   402,    53,    11,    53,
    1547,   357,    15,  1529,   402,   253,   402,   483,    21,   488,
     402,   444,  2584,   148,  2093,  1176,    91,  1543,    31,    32,
    1529,   482,   262,  2154,  2155,  1829,  2584,  1831,  2107,   262,
      35,  1557,  2210,    35,  1543,   391,  1335,   484,  1542,   434,
    1339,   486,  2220,  2102,   482,  1529,  1572,    34,   341,  1348,
    2207,   482,  1915,  1542,  1542,   482,  1919,  1542,  1921,  1543,
     482,   440,   482,   281,  1590,     9,  1542,   400,    11,   400,
      83,   486,   400,  1915,   482,   431,   267,  1919,   482,  1921,
     402,  1607,  1608,  1609,   157,   175,   166,   425,   444,   483,
      35,   482,  1753,  1754,  1755,  1756,   207,   486,  1759,  1760,
    1761,  1762,  1763,  1764,  1765,  1766,  1767,  1768,   367,     6,
     215,   278,   468,   331,    11,   486,   482,   335,    15,   215,
     262,   215,  1648,    20,    21,    22,   482,   283,    25,   281,
     483,    28,   425,   315,    31,    32,   275,   437,   482,   148,
     148,   444,   262,   277,   277,  1306,   364,  1808,  1809,  2332,
     262,  1677,    35,    35,    35,  2333,    34,  2142,   402,   469,
     470,   471,  2147,   473,   474,   475,   476,   477,   478,   480,
     402,  1697,    54,  1699,   480,   402,  2161,  2162,    75,   331,
     402,  2333,   483,   335,   483,    82,    83,    84,    85,    86,
    1716,  2369,   483,   166,   483,     3,   484,     5,   483,   483,
     483,   483,   483,  1729,   465,   483,  1732,   486,   465,   465,
     428,   483,   364,  1739,   483,   483,   483,  1743,   166,  1695,
    1746,  2399,   104,   402,  2402,   441,  1752,  1753,  1754,  1755,
    1756,   482,   482,  1759,  1760,  1761,  1762,  1763,  1764,  1765,
    1766,  1767,  1768,   482,   287,   482,  1772,  1773,   441,  1816,
     431,   277,   471,   467,   278,  1781,   278,   278,   423,   234,
    1786,   486,   262,  2446,   402,   482,  1792,  1814,   148,  1795,
     193,  1797,  2135,  2077,  2301,  1436,   428,  2081,  1804,  1805,
     281,   148,  1808,  1809,  1831,   148,   402,  1813,  1814,  2377,
     486,   483,   402,  2135,   402,   402,  2635,   275,   483,   107,
     108,   481,    35,  1829,   148,  1831,   483,   483,   277,   148,
     192,   267,   444,   483,  1613,  2439,  1842,   480,  1479,   139,
    1829,   166,  1831,  2424,     8,  1851,    11,    11,   161,   483,
     660,    15,    16,    17,   483,   483,  1497,   166,  2403,  2324,
    2325,  1867,   483,   441,  2207,  1829,   482,  1831,  2333,   391,
     166,   468,  1513,  2382,   175,   486,   338,  1656,   240,   430,
     483,    66,   483,    82,   470,  2207,   248,    72,  1529,   483,
     278,  2400,   148,   181,   182,   170,   482,   412,   260,    84,
     482,  1542,  1543,   482,    35,   482,  1547,   482,    78,  1915,
     483,   425,   166,  1919,  1920,  1921,   481,   486,  2522,   481,
    1699,   482,   393,   214,   483,  1704,  2584,  1706,   113,   291,
     115,  1710,  1711,   483,   482,  2480,   483,  2444,   482,   482,
     286,   214,   284,    53,   178,   471,   444,   195,   184,   267,
     267,   471,  2584,   483,   242,   243,   244,   245,   246,   247,
    2244,   402,   250,   251,   402,    35,   482,   553,   262,   105,
    2254,   444,   277,   482,   336,  2259,     8,    35,  2262,    11,
     166,   481,   296,   482,   214,   170,   482,  2496,   482,     8,
    1996,   443,    11,   486,  2589,    84,   358,  2281,   325,   585,
     129,   215,  2583,   148,   483,   482,   482,  1963,    40,   113,
    2517,    35,   197,    72,   120,    47,   378,    35,   828,   483,
     513,    40,   148,   346,   346,    53,    35,   486,    47,    35,
     425,   482,  2038,  2039,   620,   621,   622,  2043,  2044,   482,
      72,   430,  2048,   482,    35,  2051,  2052,   211,    54,    72,
    2056,   183,   425,    72,  1695,     8,   412,   280,    11,    66,
     482,    66,    15,    16,    17,   486,   354,   355,   561,    35,
     348,  2077,   364,   471,   267,  2081,  2217,   262,  2362,    32,
     183,  2424,   267,   238,   412,  2428,   482,    35,  2077,   482,
     280,   280,  2081,   470,   260,   482,  2102,   483,   104,   476,
     483,   482,  2424,   277,   345,   482,  2428,     9,   332,   486,
     195,  2395,    32,  2077,   277,   279,   277,  2081,   483,  2584,
     118,   423,   141,   482,     9,   310,    21,  1902,   483,  2135,
     570,  1915,  1244,  1602,   511,   512,   513,  1865,  2144,   171,
     325,  1920,  2277,  2106,  2516,  2580,  2147,  2153,  2104,  2105,
    1948,  2656,   171,   185,  2160,  2586,  2431,  2634,   190,  2622,
     815,  2350,  2303,  1942,   170,  1596,   185,  1608,   545,  2583,
     547,   190,  1953,  1814,   462,   463,   553,  1658,  2632,   765,
    1919,  1593,  2581,   972,   561,  1662,   192,  1697,  1829,  2207,
    1831,  1942,   781,   225,  1557,  1215,   573,   803,   756,  2483,
     802,  2207,   788,  2493,  2210,  2411,   225,  2571,   585,  1189,
    1572,  2217,  1845,  2505,  2220,  1214,  1543,  2098,  1028,  1831,
    2068,   805,  2228,  2229,  2396,  1829,  2232,  2368,   814,  2483,
    2083,  2482,  2516,   418,   240,  2500,  2192,  2501,  2244,  1070,
    2583,   827,   248,   620,   621,   622,  2569,   279,  2254,  1351,
    1070,  1070,  2273,  2259,   260,  2244,  2262,  2570,   211,  2556,
     279,  2583,   848,  2269,  2270,  2254,  1070,  1560,  1145,  1497,
    2259,  1390,  2475,  2262,  1283,  2281,  1494,  2283,  1665,    49,
    2244,  1148,   787,   987,  1866,   291,  1348,   664,   781,  1168,
    2254,    -1,  2281,    -1,    -1,  2259,  1169,  2303,  2262,  1109,
      -1,    -1,    -1,    -1,    -1,   469,   470,   471,    -1,   473,
     474,   475,   476,   477,   478,    -1,  2600,  2281,  2097,    -1,
    2099,    -1,  1963,    93,    -1,    -1,   279,  2333,    -1,    -1,
     336,    -1,    -1,    -1,    -1,    -1,    -1,   369,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   119,
     369,    -1,   358,    -1,    -1,    -1,  2362,    -1,    -1,    -1,
      -1,    -1,  2368,  2369,    -1,    -1,    -1,   137,    -1,    -1,
     956,   141,   378,  2362,    -1,    -1,  2403,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2391,  2342,    -1,   765,  2395,
      -1,    -1,   162,  2399,    -1,   165,  2402,  2403,  2362,   985,
      -1,   107,   108,    -1,   781,   782,  2395,  2363,  2414,   179,
     787,   788,   789,    -1,    -1,    -1,    -1,    -1,  2424,    -1,
    1230,    -1,  2428,  2429,    -1,    -1,    -1,    -1,  2207,    -1,
      -1,  2395,    -1,    -1,   466,    -1,  2077,   814,   815,    -1,
    2081,   473,   474,   475,   476,   477,   478,   466,    -1,   660,
     827,    -1,    -1,    -1,   473,   474,   475,   476,   477,   478,
      -1,    -1,    -1,  2104,  2105,    -1,    -1,   844,    -1,    -1,
      -1,   848,    -1,    -1,  2480,   181,   182,  2483,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   980,    -1,   982,
      -1,    -1,    -1,    -1,  2483,    -1,    -1,   267,    -1,  2505,
    2456,    -1,    -1,    -1,    -1,   275,    -1,    -1,    -1,    -1,
    2516,    -1,    -1,    -1,    -1,    -1,   469,   470,   471,  2483,
     473,   474,   475,   476,   477,   478,    -1,  2516,    -1,    -1,
    2536,    -1,    -1,    -1,    -1,    -1,   242,   243,   244,   245,
     246,   247,    -1,     8,   250,   251,    11,   317,    -1,  2555,
    2556,  2192,  2516,    -1,  2333,    -1,  2512,    -1,    -1,    -1,
       8,  1147,    -1,    11,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1382,    -1,   951,    40,    -1,  2583,  2584,   956,
      -1,  1167,    47,  1169,    -1,    -1,    -1,    -1,    -1,   966,
      -1,    -1,    40,    -1,  2600,   972,  2602,    -1,   975,    47,
      -1,    -1,   979,   980,    -1,   982,   983,    72,   985,    -1,
      -1,  2600,    -1,  2254,    -1,    -1,    -1,   828,  2259,    -1,
      -1,  2262,     8,    -1,    72,    11,  1212,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2600,  2593,     8,    -1,
      -1,    11,    -1,    -1,    -1,    15,    16,    17,   354,   355,
      -1,    -1,    -1,    -1,    40,    -1,    -1,    -1,  2664,    -1,
      -1,    47,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2452,    -1,   660,   141,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    72,    -1,     8,    -1,
      -1,    11,    -1,   141,    -1,    15,    16,    17,    -1,    -1,
      -1,  2342,    -1,    -1,  1081,  1291,   171,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     185,    -1,  2363,   171,    -1,   190,    -1,    -1,    -1,  1222,
      -1,    -1,    -1,   143,    -1,   601,    -1,   185,    -1,  1232,
    1117,  1234,   190,    -1,  1237,    -1,   156,    -1,    -1,    -1,
    1243,   161,  1245,    -1,  2395,   141,   462,   463,    -1,    -1,
     225,    -1,  2403,    -1,  1257,    -1,    -1,    -1,    -1,  1262,
    1147,    -1,    -1,  1266,  1267,  1268,  1269,   225,  1271,  1272,
      -1,    -1,    -1,    -1,    -1,   171,     8,    -1,    -1,    11,
    1167,    -1,  1169,   659,   660,     0,    -1,   207,    -1,   185,
      -1,  1178,    -1,  1180,   190,  2584,    -1,    -1,    -1,   660,
      -1,    -1,    -1,    -1,   279,  2456,   226,  1028,    40,    -1,
      -1,    -1,   660,    -1,    -1,    47,    -1,    -1,    -1,    -1,
      -1,   279,    -1,    -1,    -1,  1212,    -1,    -1,    -1,   225,
      -1,   211,    -1,   828,  1221,  1222,    -1,    -1,    -1,    -1,
      72,    -1,    -1,    -1,    -1,  1232,  1233,  1234,  1235,    -1,
    1237,    -1,    -1,    -1,   274,    -1,  1243,  1677,  1245,    -1,
      -1,  2512,    -1,   283,    -1,    -1,    -1,    -1,    -1,  1256,
    1257,    -1,    -1,    -1,  1261,  1262,    91,    -1,    -1,  1266,
    1267,  1268,  1269,   279,  1271,  1272,    -1,    -1,  1109,    -1,
      -1,    -1,    -1,    -1,   369,    -1,  1716,    -1,    -1,   279,
      -1,    -1,    -1,    -1,  1291,  1292,    -1,    -1,    -1,   141,
      -1,   369,  1732,    -1,    -1,    -1,    -1,  1304,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1522,    -1,   143,    -1,
      -1,    -1,  1752,    -1,    -1,    -1,    -1,    -1,    -1,   171,
      -1,   156,  2593,    -1,    -1,    -1,   161,     8,    -1,   279,
      11,   166,   828,   185,    15,    16,    17,    -1,   190,    -1,
     175,  1781,   660,   178,    -1,  1352,    -1,   828,    -1,    -1,
      -1,    32,    -1,   369,    -1,    -1,   852,   853,   854,    -1,
     828,    -1,    -1,    -1,  1804,    -1,    -1,    -1,    -1,    -1,
      -1,   466,   207,   225,    -1,    -1,    -1,   417,   473,   474,
     475,   476,   477,   478,    -1,    -1,    -1,    -1,   466,  1230,
      -1,   226,    -1,    -1,    -1,   473,   474,   475,   476,   477,
     478,    -1,     8,    -1,    -1,    11,    -1,    -1,    -1,    15,
      16,    17,    -1,  1028,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   279,    -1,    -1,
      -1,    -1,    -1,    -1,    40,    -1,    -1,   543,   544,   274,
     480,    47,   277,   483,   484,    -1,    -1,  1663,   283,    -1,
     466,    -1,  1668,  1669,  1670,    -1,    -1,   473,   474,   475,
     476,   477,   478,    -1,    -1,    -1,    72,   963,    -1,   469,
     470,   471,  1688,   473,   474,   475,   476,   477,   478,    -1,
    1920,    -1,    -1,    -1,  1491,    -1,    -1,    -1,    -1,   168,
      -1,    -1,    -1,   172,  1109,   601,   602,    -1,    -1,    -1,
      -1,    -1,    -1,   338,    -1,    -1,    -1,    -1,    -1,    -1,
     828,    -1,    -1,    -1,   193,  1522,    -1,   369,    -1,   469,
     470,   471,  1529,   473,   474,   475,   476,   477,   478,    -1,
     211,    -1,  1028,    -1,    -1,    -1,  1543,    -1,    -1,    -1,
    1547,  1382,    -1,  1550,    -1,  1552,    -1,  1028,    -1,    -1,
     229,    -1,    -1,   659,    -1,    -1,   391,   236,  1681,    -1,
    1028,    -1,    -1,    -1,    -1,   171,    -1,    -1,    -1,   675,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   185,
      -1,    -1,   417,    -1,   190,    -1,    -1,    -1,    -1,    -1,
     425,  1598,    -1,    -1,    -1,    -1,    -1,   703,   279,    -1,
      -1,    -1,    -1,   282,  2044,    -1,   441,    -1,   443,   444,
    1826,  1827,  1828,  1109,   466,  1230,   722,   723,   724,   225,
     726,   473,   474,   475,   476,   477,   478,    -1,  1109,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     746,  1109,    -1,    -1,    -1,   480,    -1,    -1,   483,   484,
     485,  1658,    -1,    -1,  1150,    -1,  1663,    -1,    -1,     8,
    1667,  1668,  1669,  1670,    -1,  1881,    15,    16,    17,    -1,
      -1,   350,    -1,   279,  1681,    -1,    -1,    -1,    -1,    -1,
      -1,  1688,    -1,    -1,    -1,  1692,    -1,    -1,    -1,   795,
      -1,    -1,    -1,   799,   800,    -1,    -1,    -1,    -1,    -1,
      -1,  1708,  1709,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1028,    -1,    -1,  2153,    -1,    -1,   395,    -1,   397,    -1,
    2160,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1946,    -1,    -1,    -1,  1230,    -1,    -1,    -1,  1745,   418,
      -1,    -1,   421,    -1,    -1,    -1,   852,   853,   854,  1230,
      -1,  1967,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1883,    -1,  1230,   369,    -1,    -1,    -1,  1382,    -1,    -1,
    2210,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2220,  1277,    -1,    -1,  1907,    -1,    -1,    -1,   469,   470,
     471,  1109,   473,   474,   475,   476,   477,   478,    -1,  1922,
    1923,  1924,  1925,  1926,  1927,  1928,  1929,  1930,  1931,    -1,
      -1,  1818,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1826,
    1827,  1828,  1829,    -1,  1831,  1832,    -1,    -1,    -1,  1836,
    1837,    -1,    -1,    -1,    -1,    -1,  1677,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2060,  2061,  2062,  2063,    -1,    -1,
      -1,    -1,    -1,    -1,  1350,    -1,    -1,   963,  1865,    -1,
     466,    -1,    -1,   469,   470,   471,    -1,   473,   474,   475,
     476,   477,   478,    -1,  1881,  1716,  1883,    -1,    -1,    -1,
    1887,  1888,  1889,    -1,  1891,    -1,  1382,    -1,    -1,    -1,
      -1,  1732,    -1,  2333,    -1,    -1,    -1,    -1,    -1,    -1,
    1907,  1382,  1909,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1752,  1230,    -1,  1382,  1922,  1923,  1924,  1925,  1926,
    1927,  1928,  1929,  1930,  1931,    -1,    -1,    -1,    -1,  2369,
     279,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1946,
    1781,    -1,     8,    -1,    -1,    11,  1953,    -1,    -1,    15,
      16,    17,  1058,    -1,    -1,    -1,    -1,  1964,    -1,  2399,
    1967,    -1,  2402,  1804,    -1,    -1,    -1,  1974,    -1,    -1,
      -1,    -1,    -1,  1079,    -1,  1982,  1082,    -1,    -1,  1085,
      -1,    -1,    -1,    -1,    -1,    -1,  1092,  1093,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1104,    -1,
      -1,    -1,    -1,    -1,  1110,  1111,  1112,  1113,    -1,    -1,
      -1,    -1,  1118,  1119,    -1,    -1,    -1,  1123,    -1,    -1,
      -1,  1127,    -1,    -1,  1130,  1131,  1132,  1133,  1134,  1135,
    1136,  1137,  1138,    -1,    -1,  1141,    -1,    -1,    -1,    -1,
      -1,    -1,  1148,    -1,  1150,    -1,    -1,    -1,    -1,    -1,
    2057,    -1,    -1,  2060,  2061,  2062,  2063,    -1,    -1,    -1,
    2067,  2068,  1677,  2070,  1382,  1171,  2073,    -1,    -1,    -1,
    2077,    -1,    -1,    -1,  2081,    -1,    -1,    -1,    -1,  1920,
    2087,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1198,  1199,  2310,    -1,    -1,    -1,    -1,  2106,
      -1,  1716,    -1,    -1,  2111,    -1,    -1,    -1,  2115,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2123,  1732,    -1,    -1,
     469,   470,   471,    -1,   473,   474,   475,   476,   477,   478,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1752,    -1,    -1,
      -1,  2148,    -1,  2359,  2584,   211,    -1,    -1,    -1,    -1,
      -1,    -1,  1648,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1781,    -1,    -1,    -1,
      -1,  1277,    -1,    -1,  1280,  1281,    -1,  1283,  2185,  2302,
      -1,  1677,    -1,    -1,  2191,    -1,    -1,    -1,    -1,  1804,
      -1,    -1,    -1,    -1,    -1,  2202,  1677,    -1,    -1,    -1,
      -1,    -1,    -1,  2044,  1310,    -1,  2422,    -1,    -1,  1677,
      -1,  2334,  2335,   279,    -1,    -1,    -1,    -1,    -1,    -1,
    1716,    -1,    -1,    -1,  2347,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1716,  1732,  2244,  2245,  2455,
      -1,    -1,  2249,    -1,  1350,  2252,    -1,  2254,  1716,    -1,
      -1,  1732,  2259,    -1,    -1,  2262,  1752,  2264,    -1,    -1,
    2267,    -1,    -1,    -1,  1732,    -1,    -1,    -1,    -1,    -1,
      -1,  1752,    -1,    -1,  2281,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1389,  1752,  1781,    -1,    -1,  1394,    -1,
    2413,    -1,    -1,    -1,  2301,  2302,    -1,    -1,    -1,    -1,
    1781,    -1,    -1,  2310,    -1,  1920,    -1,    -1,  1804,    -1,
      -1,    -1,  2153,  1781,    -1,    -1,    -1,    -1,    -1,  2160,
      -1,    -1,    -1,  1804,    -1,    -1,    -1,  2334,  2335,    -1,
    1436,    -1,    -1,    -1,    -1,    -1,  1804,  2344,    -1,     0,
    2347,    -1,    -1,    -1,    -1,  1451,    -1,  1453,  1454,    -1,
      -1,    -1,  2359,  1459,    -1,  2362,    -1,    -1,    -1,  1677,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2210,
      -1,    -1,    -1,    -1,    -1,  2382,    -1,    -1,    -1,  2220,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1493,  2395,    -1,
    1496,    -1,  1498,  2400,    -1,    -1,    -1,    -1,  1716,    -1,
      -1,    -1,  2409,   469,   470,   471,  2413,   473,   474,   475,
     476,   477,   478,    -1,  1732,  2422,    -1,     8,    -1,    -1,
      11,    -1,    -1,    -1,  1920,    -1,    -1,    -1,    -1,  2044,
      91,    -1,    -1,    -1,  1752,    -1,    -1,  2444,    -1,  1920,
      -1,    -1,    -1,    -1,    -1,    -1,    35,    -1,  2455,    40,
      -1,  1557,  1920,    -1,    -1,    -1,    47,    -1,    -1,    -1,
      -1,    -1,    -1,  1781,    -1,    54,  1572,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2483,    -1,    -1,    -1,
      -1,    72,   143,    -1,  1590,  2492,  1804,    -1,    -1,  2496,
      -1,    -1,  2333,  2500,    -1,   156,    -1,    -1,    -1,    -1,
     161,    -1,    -1,    -1,    -1,   166,    -1,    -1,    -1,  2516,
    2517,  2518,  2519,   740,   175,   104,   105,   178,    -1,    -1,
      -1,    -1,    -1,    -1,   113,    -1,    -1,    -1,  2369,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2153,    -1,
      -1,    -1,  1648,    -1,    -1,  2160,   207,    -1,  2044,    -1,
     141,   778,    -1,  2560,    -1,    -1,    -1,    -1,  2399,    -1,
      -1,  2402,  2569,  2044,  2571,   226,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2580,    -1,    -1,  2044,    -1,    -1,    -1,
     171,   170,    -1,    -1,    -1,    -1,    -1,  2594,    -1,    -1,
      -1,    -1,    -1,  2600,   185,  2210,    -1,    -1,    -1,   190,
      -1,    -1,  1920,   192,    -1,  2220,    -1,    -1,    -1,    -1,
      -1,  2618,    -1,   274,    -1,    -1,   277,    -1,    -1,    -1,
      -1,    -1,   283,  1729,    -1,    -1,    -1,    20,    -1,    -1,
     857,    -1,    -1,  1739,   225,   862,    -1,  1743,    -1,    -1,
    1746,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   240,    -1,    -1,    -1,    -1,    -1,  2153,    -1,   248,
      -1,    -1,    -1,    -1,  2160,    -1,  1772,  1773,    -1,    -1,
      -1,   260,  2153,   262,    -1,    -1,    -1,   338,    -1,  2160,
      73,    -1,    -1,    -1,    -1,  2153,  1792,    -1,   279,  1795,
      -1,  1797,  2160,    -1,    -1,    88,    -1,    -1,    -1,  1805,
      -1,    -1,   291,    -1,    -1,    -1,    -1,  1813,  1814,    -1,
      -1,    -1,    -1,    -1,  2210,    -1,    -1,    -1,  2333,    -1,
      -1,    -1,    -1,    -1,  2220,    -1,  2044,    -1,    -1,  2210,
     391,    -1,    -1,    -1,    -1,    -1,  1842,    -1,    -1,  2220,
      -1,    -1,  2210,  2584,    -1,  1851,    -1,   336,    -1,   142,
      -1,    -1,  2220,    -1,  2369,    -1,   417,    -1,   151,    -1,
      -1,  1867,    -1,    -1,   425,    -1,    -1,    -1,    -1,   358,
     163,    -1,    -1,    -1,    -1,   168,    -1,    -1,   369,    -1,
     441,    -1,   443,   444,  2399,    -1,    -1,  2402,    -1,   378,
      -1,   380,    -1,    -1,   383,    -1,    -1,    -1,    -1,    -1,
     193,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   480,
      -1,    -1,   483,   484,   485,    -1,    -1,    -1,    -1,  1056,
      -1,    -1,    -1,    -1,    -1,  2153,    -1,  2333,    -1,    -1,
      -1,    -1,  2160,   236,    -1,    -1,   239,    -1,    -1,    -1,
      -1,  1078,  2333,    -1,    -1,    -1,  1083,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2333,    -1,  1094,  1095,  1096,
      -1,  1098,    -1,  2369,    -1,   466,    -1,    -1,    -1,    -1,
      -1,    -1,   473,   474,   475,   476,   477,   478,  2369,    -1,
    1996,    -1,  2210,   482,    -1,    -1,    -1,    -1,    -1,     0,
      -1,  2369,  2220,  2399,    -1,    -1,  2402,    -1,    -1,   302,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2399,  1146,
      -1,  2402,    -1,   316,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2399,  2038,  2039,  2402,    -1,    -1,  2043,    -1,    -1,
      -1,    -1,  2048,    -1,    -1,  2051,  2052,    -1,    -1,    -1,
    2056,    -1,    -1,    -1,   347,    -1,    -1,   350,  1185,    -1,
      -1,    -1,    -1,     0,    -1,   358,    -1,    -1,   361,  2584,
    1197,    -1,    -1,    -1,    -1,  1202,    -1,    -1,    -1,    -1,
      -1,    18,    -1,    -1,    -1,    -1,    -1,   380,    -1,    -1,
      91,    28,    -1,    30,    31,    -1,  2102,    -1,   391,    -1,
      -1,    -1,    -1,    -1,    -1,   398,    -1,    -1,    -1,    46,
      -1,    -1,    -1,    -1,   407,  2333,    -1,    -1,    55,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      67,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2144,    -1,
      -1,    78,   143,    -1,   437,    -1,    -1,    -1,    -1,    -1,
      -1,  2369,    89,    -1,    91,   156,    -1,    -1,    -1,    -1,
     161,    -1,    -1,    -1,    -1,   166,    -1,    -1,    -1,    -1,
      -1,    -1,   109,    -1,   175,    -1,    -1,   178,    -1,    -1,
      -1,  2399,    -1,    -1,  2402,    -1,   123,    -1,  2584,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   133,    -1,    -1,    -1,
      -1,    -1,   139,  2584,    -1,    -1,   207,    -1,    -1,    -1,
     147,    -1,   149,   150,    -1,    -1,  2584,    -1,    -1,    -1,
      -1,    -1,  2228,  2229,    -1,   226,  2232,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    22,    -1,    -1,    -1,    -1,    -1,    28,    -1,
      -1,    -1,   189,    -1,    -1,    35,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2269,  2270,  1392,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   274,    54,    -1,   277,  2283,    -1,    -1,
      -1,    -1,   283,    -1,    -1,    -1,    -1,    -1,  1415,    -1,
      -1,   228,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1432,    -1,  1434,  1435,    -1,
    1437,    -1,  1439,    -1,    -1,    -1,  1443,    -1,    -1,    -1,
      -1,    -1,    -1,  1450,   104,    -1,    -1,    -1,  1455,    -1,
      -1,    -1,    -1,    -1,  1461,    -1,    -1,   338,  1465,  1466,
    1467,  1468,    -1,    -1,    -1,    -1,    -1,  1474,  1475,    -1,
    1477,  1478,    -1,   133,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1489,    -1,    -1,  1492,  2584,   304,    -1,    -1,
     307,    -1,    -1,  1500,  1501,  1502,  1503,  1504,  1505,  1506,
    1507,  1508,  1509,    -1,    -1,  2391,    -1,    22,    -1,    -1,
     391,    -1,    -1,    28,    -1,    -1,    -1,  2403,   335,    -1,
      35,    -1,    -1,    -1,    -1,    -1,   343,    -1,  2414,    -1,
      -1,    -1,   192,  1540,    -1,    -1,   417,    -1,    -1,    54,
     357,    -1,    -1,  2429,   425,    -1,    -1,   364,    -1,    -1,
      -1,   368,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     441,   378,   443,   444,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   391,    -1,    -1,    -1,    -1,    -1,
     240,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   248,   104,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   480,
     260,    -1,   483,   484,   485,    -1,    -1,    -1,     8,   426,
      -1,    11,    -1,    -1,   431,    15,    16,    17,   133,  2505,
      -1,   281,    -1,    -1,    -1,    -1,    -1,   444,    -1,    -1,
      -1,   291,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      40,    -1,    -1,    -1,  1651,  1652,  1653,    47,    -1,    -1,
    2536,   468,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   482,    -1,    -1,   485,  2555,
    2556,   331,    72,    -1,    -1,   335,   336,   192,    -1,  1686,
      -1,    -1,     3,    -1,    -1,    -1,    -1,     8,    -1,    -1,
      11,    -1,    -1,    -1,    15,    16,    17,    -1,   358,    -1,
      -1,    -1,    -1,    -1,   364,    -1,    -1,    -1,    -1,    -1,
      -1,    32,    -1,    -1,    35,    -1,  2602,    -1,   378,    40,
      -1,  1728,    -1,    -1,    -1,   240,    47,  1734,    -1,    -1,
      -1,    -1,    -1,   248,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1749,  1750,  1751,   260,  1753,  1754,  1755,  1756,
      -1,    72,  1759,  1760,  1761,  1762,  1763,  1764,  1765,  1766,
    1767,  1768,  1769,    -1,    -1,    -1,   281,    -1,   428,    -1,
      -1,   171,    -1,    -1,    -1,    -1,   291,    -1,  2664,    -1,
      -1,    -1,  1789,    -1,    -1,   185,  1793,  1794,    -1,    -1,
     190,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1807,  1808,  1809,  1810,    -1,  1812,    -1,    -1,    -1,    -1,
      -1,   211,   212,    -1,    -1,    -1,   331,    -1,    -1,    -1,
     335,   336,    -1,    -1,    -1,   225,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   358,    -1,    -1,    -1,    -1,    -1,   364,
     171,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   262,   378,   185,   265,    -1,    -1,    -1,   190,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1884,    -1,   279,
      -1,    -1,   282,    -1,    -1,    -1,    -1,    -1,   107,   108,
     211,   212,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   225,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   428,    -1,    -1,     8,    -1,    -1,    11,
      -1,    -1,    -1,    15,    16,    17,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      32,   262,    -1,    -1,   265,    -1,    -1,    -1,    40,    -1,
      -1,    -1,    -1,    -1,    -1,    47,    -1,    -1,   279,    -1,
      -1,   282,   181,   182,    -1,    -1,    -1,    -1,    -1,   369,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      72,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1997,    -1,    -1,    -1,  2001,  2002,    -1,  2004,    -1,    -1,
    2007,  2008,  2009,  2010,    -1,    -1,    -1,  2014,  2015,  2016,
    2017,  2018,  2019,  2020,  2021,  2022,  2023,  2024,  2025,    -1,
      -1,    -1,    -1,   242,   243,   244,   245,   246,   247,    -1,
    2037,   250,   251,  2040,    -1,  2042,    -1,    -1,    -1,  2046,
      -1,    -1,  2049,  2050,    -1,    -1,  2053,  2054,   369,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   466,    -1,    -1,   469,
     470,   471,    -1,   473,   474,   475,   476,   477,   478,   171,
      -1,    -1,    -1,    -1,    -1,    -1,   486,  2094,    -1,    -1,
      -1,    -1,    -1,   185,  2101,    -1,    -1,    -1,   190,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2114,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   211,
     212,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   225,    -1,   354,   355,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   466,    -1,    -1,   469,   470,
     471,    -1,   473,   474,   475,   476,   477,   478,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     262,    -1,    -1,   265,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   279,    -1,    -1,
     282,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2213,    -1,    -1,    -1,
    2217,    -1,    -1,    -1,    -1,  2222,  2223,  2224,    -1,    -1,
    2227,    -1,    -1,  2230,  2231,    -1,    -1,    -1,  2235,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   462,   463,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   482,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   369,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2303,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2321,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2367,  2368,    -1,    -1,    -1,  2372,  2373,  2374,    -1,    -1,
      -1,    -1,    -1,    -1,   466,    -1,    -1,   469,   470,   471,
      -1,   473,   474,   475,   476,   477,   478,    -1,    -1,    -1,
      -1,   483,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2407,  2408,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2420,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2432,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
    2477,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    -1,    -1,    -1,  2495,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,  2514,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,  2528,    67,    68,    69,    70,    71,    -1,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    -1,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
      -1,   116,   117,   118,   119,   120,   121,    -1,   123,   124,
     125,   126,   127,   128,  2591,   130,   131,   132,   133,   134,
      -1,   136,   137,   138,    -1,   140,   141,   142,  2605,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,    -1,   157,   158,   159,   160,    -1,   162,    -1,   164,
     165,    -1,   167,   168,   169,   170,   171,   172,    -1,   174,
      -1,   176,   177,    -1,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,    -1,   191,   192,   193,   194,
     195,   196,    -1,   198,   199,   200,   201,   202,   203,   204,
     205,   206,    -1,   208,    -1,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,    -1,    -1,   222,   223,   224,
     225,    -1,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,    -1,
     275,   276,    -1,    -1,   279,   280,   281,    -1,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,    -1,   301,   302,   303,   304,
     305,   306,   307,   308,   309,    -1,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,    -1,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,    -1,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,    -1,   389,   390,    -1,   392,   393,   394,
     395,   396,   397,   398,    -1,   400,   401,    -1,    -1,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,    -1,    -1,   419,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,    -1,    -1,   442,    -1,    -1,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,    -1,    -1,    -1,    -1,    -1,    -1,   473,   474,
     475,    -1,    -1,    -1,    -1,    -1,    -1,   482,   483,    -1,
      -1,    -1,   487,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    -1,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    -1,    67,    68,    69,
      70,    71,    -1,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    -1,    85,    86,    87,    88,    89,
      90,    -1,    92,    93,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,   117,   118,   119,
     120,   121,    -1,   123,   124,   125,   126,   127,    -1,    -1,
     130,   131,   132,   133,   134,    -1,   136,   137,   138,    -1,
     140,   141,   142,    -1,   144,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,    -1,   157,   158,   159,
     160,    -1,   162,    -1,   164,   165,    -1,   167,   168,   169,
     170,   171,   172,    -1,   174,    -1,   176,   177,    -1,   179,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
      -1,   191,   192,   193,   194,   195,   196,    -1,   198,   199,
     200,   201,   202,   203,   204,   205,   206,    -1,   208,    -1,
     210,   211,   212,   213,   214,   215,   216,   217,   218,   219,
      -1,    -1,   222,   223,   224,   225,    -1,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,    -1,   275,   276,    -1,    -1,   279,
     280,   281,    -1,    -1,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
      -1,   301,   302,   303,   304,   305,   306,   307,   308,   309,
      -1,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,    -1,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,    -1,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,    -1,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,    -1,
     400,   401,    -1,    -1,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,    -1,    -1,   419,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,   429,
     430,   431,   432,    -1,   434,   435,   436,   437,   438,   439,
      -1,    -1,   442,    -1,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,    -1,   468,    -1,
      -1,    -1,    -1,   473,   474,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   482,   483,    -1,    -1,    -1,   487,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    -1,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
      -1,   116,   117,   118,   119,   120,   121,    -1,   123,   124,
     125,   126,   127,    -1,    -1,   130,   131,   132,   133,   134,
      -1,   136,   137,   138,    -1,   140,   141,   142,    -1,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,    -1,   157,   158,   159,   160,    -1,   162,    -1,   164,
     165,    -1,   167,   168,   169,   170,   171,   172,    -1,   174,
      -1,   176,   177,    -1,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,    -1,   191,   192,   193,   194,
     195,   196,    -1,   198,   199,   200,   201,   202,   203,   204,
     205,   206,    -1,   208,    -1,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,    -1,    -1,   222,   223,   224,
     225,    -1,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,    -1,
     275,   276,    -1,    -1,   279,   280,   281,    -1,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,    -1,   301,   302,   303,   304,
     305,   306,   307,   308,   309,    -1,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,    -1,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,    -1,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,    -1,   400,   401,    -1,    -1,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,    -1,    -1,   419,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,   429,   430,   431,   432,    -1,   434,
     435,   436,   437,   438,   439,    -1,    -1,   442,    -1,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,    -1,   468,    -1,    -1,    -1,    -1,   473,   474,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   482,    -1,    -1,
      -1,    -1,   487,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    -1,    67,    68,    69,
      70,    71,    -1,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    -1,    85,    86,    87,    88,    89,
      90,    -1,    92,    93,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,   117,   118,   119,
     120,   121,    -1,   123,   124,   125,   126,   127,    -1,    -1,
     130,   131,   132,   133,   134,    -1,   136,   137,   138,    -1,
     140,   141,   142,    -1,   144,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,    -1,   157,   158,   159,
     160,    -1,   162,    -1,   164,   165,   166,   167,   168,   169,
     170,   171,   172,    -1,   174,    -1,   176,   177,    -1,   179,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
      -1,   191,   192,   193,   194,   195,   196,    -1,   198,   199,
     200,   201,   202,   203,   204,   205,   206,    -1,   208,    -1,
     210,   211,   212,   213,   214,   215,   216,   217,   218,   219,
      -1,   221,   222,   223,   224,   225,    -1,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,    -1,   275,   276,    -1,    -1,   279,
     280,   281,    -1,    -1,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
      -1,   301,   302,   303,   304,   305,   306,   307,   308,   309,
      -1,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,    -1,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,    -1,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,    -1,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,    -1,   389,
     390,    -1,   392,   393,   394,   395,   396,   397,   398,    -1,
     400,   401,    -1,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,    -1,    -1,   419,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,   429,
     430,   431,   432,    -1,   434,   435,   436,   437,   438,   439,
      -1,    -1,   442,    -1,    -1,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,    -1,    -1,    -1,
      -1,    -1,    -1,   473,   474,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   482,    -1,    -1,    -1,    -1,   487,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    -1,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
      -1,   116,   117,   118,   119,   120,   121,    -1,   123,   124,
     125,   126,   127,    -1,    -1,   130,   131,   132,   133,   134,
      -1,   136,   137,   138,    -1,   140,   141,   142,    -1,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,    -1,   157,   158,   159,   160,    -1,   162,    -1,   164,
     165,    -1,   167,   168,   169,   170,   171,   172,    -1,   174,
      -1,   176,   177,    -1,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,    -1,   191,   192,   193,   194,
     195,   196,    -1,   198,   199,   200,   201,   202,   203,   204,
     205,   206,    -1,   208,    -1,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,    -1,    -1,   222,   223,   224,
     225,    -1,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,    -1,
     275,   276,    -1,    -1,   279,   280,   281,    -1,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,    -1,   301,   302,   303,   304,
     305,   306,   307,   308,   309,    -1,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,    -1,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,    -1,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,    -1,   389,   390,    -1,   392,   393,   394,
     395,   396,   397,   398,    -1,   400,   401,    -1,    -1,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,    -1,    -1,   419,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,   429,   430,   431,   432,    -1,   434,
     435,   436,   437,   438,   439,    -1,    -1,   442,    -1,    -1,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,    -1,    -1,    -1,    -1,    -1,    -1,   473,   474,
     475,    -1,    -1,    -1,    -1,    -1,    -1,   482,    -1,    -1,
      -1,    -1,   487,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    26,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    -1,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    -1,    67,    68,    69,
      70,    71,    -1,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    -1,    85,    86,    87,    88,    89,
      90,    -1,    92,    93,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,   117,   118,   119,
     120,   121,    -1,   123,   124,   125,   126,   127,    -1,    -1,
     130,   131,   132,   133,   134,    -1,   136,   137,   138,    -1,
     140,   141,   142,    -1,   144,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,    -1,   157,   158,   159,
     160,    -1,   162,    -1,   164,   165,    -1,   167,   168,   169,
     170,   171,   172,    -1,   174,    -1,   176,   177,    -1,   179,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
      -1,   191,   192,   193,   194,   195,   196,    -1,   198,   199,
     200,   201,   202,   203,   204,   205,   206,    -1,   208,    -1,
     210,   211,   212,   213,   214,   215,   216,   217,   218,   219,
      -1,    -1,   222,   223,   224,   225,    -1,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,    -1,   275,   276,    -1,    -1,   279,
     280,   281,    -1,    -1,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
      -1,   301,   302,   303,   304,   305,   306,   307,   308,   309,
      -1,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,    -1,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,    -1,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,    -1,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,    -1,   389,
     390,    -1,   392,   393,   394,   395,   396,   397,   398,    -1,
     400,   401,    -1,    -1,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,    -1,    -1,   419,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,   429,
     430,   431,   432,    -1,   434,   435,   436,   437,   438,   439,
      -1,    -1,   442,    -1,    -1,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,    -1,    -1,    -1,
      -1,    -1,    -1,   473,   474,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   482,    -1,    -1,    -1,    -1,   487,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    -1,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
      -1,   116,   117,   118,   119,   120,   121,    -1,   123,   124,
     125,   126,   127,    -1,    -1,   130,   131,   132,   133,   134,
      -1,   136,   137,   138,    -1,   140,   141,   142,    -1,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,    -1,   157,   158,   159,   160,    -1,   162,    -1,   164,
     165,    -1,   167,   168,   169,   170,   171,   172,    -1,   174,
      -1,   176,   177,    -1,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,    -1,   191,   192,   193,   194,
     195,   196,    -1,   198,   199,   200,   201,   202,   203,   204,
     205,   206,    -1,   208,    -1,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,    -1,    -1,   222,   223,   224,
     225,    -1,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,    -1,
     275,   276,    -1,    -1,   279,   280,   281,    -1,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,    -1,   301,   302,   303,   304,
     305,   306,   307,   308,   309,    -1,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,    -1,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,    -1,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,    -1,   389,   390,    -1,   392,   393,   394,
     395,   396,   397,   398,    -1,   400,   401,    -1,    -1,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,    -1,    -1,   419,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,   429,   430,   431,   432,    -1,   434,
     435,   436,   437,   438,   439,    -1,    -1,   442,    -1,    -1,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,    -1,    -1,    -1,    -1,    -1,    -1,   473,   474,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   482,   483,    -1,
      -1,    -1,   487,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    -1,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    -1,    67,    68,    69,
      70,    71,    -1,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    -1,    85,    86,    87,    88,    89,
      90,    -1,    92,    93,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,   117,   118,   119,
     120,   121,    -1,   123,   124,   125,   126,   127,    -1,    -1,
     130,   131,   132,   133,   134,    -1,   136,   137,   138,    -1,
     140,   141,   142,    -1,   144,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,    -1,   157,   158,   159,
     160,    -1,   162,    -1,   164,   165,    -1,   167,   168,   169,
     170,   171,   172,    -1,   174,    -1,   176,   177,    -1,   179,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
      -1,   191,   192,   193,   194,   195,   196,    -1,   198,   199,
     200,   201,   202,   203,   204,   205,   206,    -1,   208,    -1,
     210,   211,   212,   213,   214,   215,   216,   217,   218,   219,
      -1,    -1,   222,   223,   224,   225,    -1,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,    -1,   275,   276,    -1,    -1,   279,
     280,   281,    -1,    -1,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
      -1,   301,   302,   303,   304,   305,   306,   307,   308,   309,
      -1,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,    -1,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,    -1,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,    -1,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,    -1,   389,
     390,    -1,   392,   393,   394,   395,   396,   397,   398,    -1,
     400,   401,    -1,    -1,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,    -1,    -1,   419,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,   429,
     430,   431,   432,    -1,   434,   435,   436,   437,   438,   439,
      -1,    -1,   442,    -1,    -1,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,    -1,    -1,    -1,
      -1,    -1,    -1,   473,   474,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   482,   483,    -1,    -1,    -1,   487,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    -1,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
      -1,   116,   117,   118,   119,   120,   121,    -1,   123,   124,
     125,   126,   127,    -1,    -1,   130,   131,   132,   133,   134,
      -1,   136,   137,   138,    -1,   140,   141,   142,    -1,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,    -1,   157,   158,   159,   160,    -1,   162,    -1,   164,
     165,    -1,   167,   168,   169,   170,   171,   172,    -1,   174,
      -1,   176,   177,    -1,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,    -1,   191,   192,   193,   194,
     195,   196,    -1,   198,   199,   200,   201,   202,   203,   204,
     205,   206,    -1,   208,    -1,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,    -1,    -1,   222,   223,   224,
     225,    -1,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,    -1,
     275,   276,    -1,    -1,   279,   280,   281,    -1,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,    -1,   301,   302,   303,   304,
     305,   306,   307,   308,   309,    -1,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,    -1,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,    -1,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,    -1,   389,   390,    -1,   392,   393,   394,
     395,   396,   397,   398,    -1,   400,   401,    -1,    -1,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,    -1,    -1,   419,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,    -1,    -1,   442,    -1,    -1,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,    -1,    -1,    -1,    -1,    -1,    -1,   473,   474,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   482,    -1,    -1,
      -1,    -1,   487,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    -1,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    -1,    67,    68,    69,
      70,    71,    -1,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    -1,    85,    86,    87,    88,    89,
      90,    -1,    92,    93,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,   117,   118,   119,
     120,   121,    -1,   123,   124,   125,   126,   127,    -1,    -1,
     130,   131,   132,   133,   134,    -1,   136,   137,   138,    -1,
     140,   141,   142,    -1,   144,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,    -1,   157,   158,   159,
     160,    -1,   162,    -1,   164,   165,   166,   167,   168,   169,
     170,   171,   172,    -1,   174,    -1,   176,   177,    -1,   179,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
      -1,   191,   192,   193,   194,   195,   196,    -1,   198,   199,
     200,   201,   202,   203,   204,   205,   206,    -1,   208,    -1,
     210,   211,   212,   213,   214,   215,   216,   217,   218,   219,
      -1,    -1,   222,   223,   224,   225,    -1,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,    -1,   275,   276,    -1,    -1,   279,
     280,   281,    -1,    -1,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
      -1,   301,   302,   303,   304,   305,   306,   307,   308,   309,
      -1,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,    -1,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,    -1,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,    -1,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,    -1,   389,
     390,    -1,   392,   393,   394,   395,   396,   397,   398,    -1,
     400,   401,    -1,    -1,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,    -1,    -1,   419,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,   429,
     430,   431,   432,    -1,   434,   435,   436,   437,   438,   439,
      -1,    -1,   442,    -1,    -1,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,    -1,    -1,    -1,
      -1,    -1,    -1,   473,   474,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   482,    -1,    -1,    -1,    -1,   487,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    -1,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
      -1,   116,   117,   118,   119,   120,   121,    -1,   123,   124,
     125,   126,   127,    -1,    -1,   130,   131,   132,   133,   134,
      -1,   136,   137,   138,    -1,   140,   141,   142,    -1,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,    -1,   157,   158,   159,   160,    -1,   162,    -1,   164,
     165,    -1,   167,   168,   169,   170,   171,   172,    -1,   174,
      -1,   176,   177,    -1,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,    -1,   191,   192,   193,   194,
     195,   196,    -1,   198,   199,   200,   201,   202,   203,   204,
     205,   206,    -1,   208,    -1,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,    -1,    -1,   222,   223,   224,
     225,    -1,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,    -1,
     275,   276,    -1,    -1,   279,   280,   281,    -1,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,    -1,   301,   302,   303,   304,
     305,   306,   307,   308,   309,    -1,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,    -1,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,    -1,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,    -1,   389,   390,    -1,   392,   393,   394,
     395,   396,   397,   398,    -1,   400,   401,    -1,    -1,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,    -1,    -1,   419,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,   429,   430,   431,   432,    -1,   434,
     435,   436,   437,   438,   439,    -1,    -1,   442,    -1,    -1,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,    -1,    -1,    -1,    -1,    -1,    -1,   473,   474,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   482,    -1,    -1,
      -1,    -1,   487,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    -1,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    -1,    67,    68,    69,
      70,    71,    -1,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    -1,    85,    86,    87,    88,    89,
      90,    -1,    92,    93,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,   117,   118,   119,
     120,   121,    -1,   123,   124,   125,   126,   127,    -1,    -1,
     130,   131,   132,   133,   134,    -1,   136,   137,   138,    -1,
     140,   141,   142,    -1,   144,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,    -1,   157,   158,   159,
     160,    -1,   162,    -1,   164,   165,    -1,   167,   168,   169,
     170,   171,   172,    -1,   174,    -1,   176,   177,    -1,   179,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
      -1,   191,   192,   193,   194,   195,   196,    -1,   198,   199,
     200,   201,   202,   203,   204,   205,   206,    -1,   208,    -1,
     210,   211,   212,   213,   214,   215,   216,   217,   218,   219,
      -1,    -1,   222,   223,   224,   225,    -1,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,    -1,   275,   276,    -1,    -1,   279,
     280,   281,    -1,    -1,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
      -1,   301,   302,   303,   304,   305,   306,   307,   308,   309,
      -1,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,    -1,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,    -1,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,    -1,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,    -1,   389,
     390,    -1,   392,   393,   394,   395,   396,   397,   398,    -1,
     400,   401,    -1,    -1,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,    -1,    -1,   419,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,   429,
     430,   431,   432,    -1,   434,   435,   436,   437,   438,   439,
      -1,    -1,   442,    -1,    -1,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,    -1,    -1,    -1,
      -1,    -1,    -1,   473,   474,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   482,    -1,    -1,    -1,    -1,   487,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    -1,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
      -1,   116,   117,   118,   119,   120,   121,    -1,   123,   124,
     125,   126,   127,    -1,    -1,   130,   131,   132,   133,   134,
      -1,   136,   137,   138,    -1,   140,   141,   142,    -1,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,    -1,   157,   158,   159,   160,    -1,   162,    -1,   164,
     165,    -1,   167,   168,   169,   170,   171,   172,    -1,   174,
      -1,   176,   177,    -1,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,    -1,   191,   192,   193,   194,
     195,   196,    -1,   198,   199,   200,   201,   202,   203,   204,
     205,   206,    -1,   208,    -1,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,    -1,    -1,   222,   223,   224,
     225,    -1,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,    -1,
     275,   276,    -1,    -1,   279,   280,   281,    -1,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,    -1,   301,   302,   303,   304,
     305,   306,   307,   308,   309,    -1,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,    -1,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,    -1,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,    -1,   389,   390,    -1,   392,   393,   394,
     395,   396,   397,   398,    -1,   400,   401,    -1,    -1,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,    -1,    -1,   419,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,   429,   430,   431,   432,    -1,   434,
     435,   436,   437,   438,   439,    -1,    -1,   442,    -1,    -1,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,    -1,    -1,    -1,    -1,    -1,    -1,   473,   474,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   482,    -1,    -1,
      -1,    -1,   487,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    -1,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    -1,    67,    68,    69,
      70,    71,    -1,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    -1,    85,    86,    87,    88,    89,
      90,    -1,    92,    93,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,   117,   118,   119,
     120,   121,    -1,   123,   124,   125,   126,   127,    -1,    -1,
     130,   131,   132,   133,   134,    -1,   136,   137,   138,    -1,
     140,   141,   142,    -1,   144,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,    -1,   157,   158,   159,
     160,    -1,   162,    -1,   164,   165,    -1,   167,   168,   169,
     170,   171,   172,    -1,   174,    -1,   176,   177,    -1,   179,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
      -1,   191,   192,   193,   194,   195,   196,    -1,   198,   199,
     200,   201,   202,   203,   204,   205,   206,    -1,   208,    -1,
     210,   211,   212,   213,   214,   215,   216,   217,   218,   219,
      -1,    -1,   222,   223,   224,   225,    -1,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,    -1,   275,   276,    -1,    -1,   279,
     280,   281,    -1,    -1,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
      -1,   301,   302,   303,   304,   305,   306,   307,   308,   309,
      -1,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,    -1,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,    -1,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,    -1,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,    -1,   389,
     390,    -1,   392,   393,   394,   395,   396,   397,   398,    -1,
     400,   401,    -1,    -1,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,    -1,    -1,   419,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,   429,
     430,   431,   432,    -1,   434,   435,   436,   437,   438,   439,
      -1,    -1,   442,    -1,    -1,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,    -1,    -1,    -1,
      -1,    -1,    -1,   473,   474,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   482,    -1,    -1,    -1,    -1,   487,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    -1,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
      -1,   116,   117,   118,   119,   120,   121,    -1,   123,   124,
     125,   126,   127,    -1,    -1,   130,   131,   132,   133,   134,
      -1,   136,   137,   138,    -1,   140,   141,   142,    -1,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,    -1,   157,   158,   159,   160,    -1,   162,    -1,   164,
     165,    -1,   167,   168,   169,   170,   171,   172,    -1,   174,
      -1,   176,   177,    -1,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,    -1,   191,   192,   193,   194,
     195,   196,    -1,   198,   199,   200,   201,   202,   203,   204,
     205,   206,    -1,   208,    -1,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,    -1,    -1,   222,   223,   224,
     225,    -1,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,    -1,
     275,   276,    -1,    -1,   279,   280,   281,    -1,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,    -1,   301,   302,   303,   304,
     305,   306,   307,   308,   309,    -1,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,    -1,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,    -1,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,    -1,   389,   390,    -1,   392,   393,   394,
     395,   396,   397,   398,    -1,   400,   401,    -1,    -1,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,    -1,    -1,   419,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,   429,   430,   431,   432,    -1,   434,
     435,   436,   437,   438,   439,    -1,    -1,   442,    -1,    -1,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,    -1,    -1,    -1,    -1,    -1,    -1,   473,   474,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   482,    -1,    -1,
      -1,    -1,   487,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    -1,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    -1,    67,    68,    69,
      70,    71,    -1,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    -1,    85,    86,    87,    88,    89,
      90,    -1,    92,    93,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,   117,   118,   119,
     120,   121,    -1,   123,   124,   125,   126,   127,    -1,    -1,
     130,   131,   132,   133,   134,    -1,   136,   137,   138,    -1,
     140,   141,   142,    -1,   144,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,    -1,   157,   158,   159,
     160,    -1,   162,    -1,   164,   165,    -1,   167,   168,   169,
     170,   171,   172,    -1,   174,    -1,   176,   177,    -1,   179,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
      -1,   191,   192,   193,   194,   195,   196,    -1,   198,   199,
     200,   201,   202,   203,   204,   205,   206,    -1,   208,    -1,
     210,   211,   212,   213,   214,   215,   216,   217,   218,   219,
      -1,    -1,   222,   223,   224,   225,    -1,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,    -1,   275,   276,    -1,    -1,   279,
     280,   281,    -1,    -1,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
      -1,   301,   302,   303,   304,   305,   306,   307,   308,   309,
      -1,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,    -1,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,    -1,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,    -1,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,    -1,   389,
     390,    -1,   392,   393,   394,   395,   396,   397,   398,    -1,
     400,   401,    -1,    -1,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,    -1,    -1,   419,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,   429,
     430,   431,   432,    -1,   434,   435,   436,   437,   438,   439,
      -1,    -1,   442,    -1,    -1,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,    -1,    -1,    -1,
      -1,    -1,    -1,   473,   474,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   482,    -1,    -1,    -1,    -1,   487,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    -1,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,    -1,   114,
      -1,   116,   117,   118,   119,   120,   121,    -1,   123,   124,
     125,   126,   127,    -1,    -1,   130,   131,   132,   133,   134,
      -1,   136,   137,   138,    -1,   140,   141,   142,    -1,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,    -1,   157,   158,   159,   160,    -1,   162,    -1,   164,
     165,    -1,   167,   168,   169,   170,   171,   172,    -1,   174,
      -1,   176,   177,    -1,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,    -1,   191,   192,   193,   194,
     195,   196,    -1,   198,   199,   200,   201,   202,   203,   204,
     205,   206,    -1,   208,    -1,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,    -1,    -1,   222,   223,   224,
     225,    -1,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,    -1,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,    -1,
     275,   276,    -1,    -1,   279,   280,   281,    -1,    -1,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,    -1,   301,   302,   303,   304,
     305,   306,   307,   308,   309,    -1,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,    -1,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,    -1,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,    -1,   389,   390,    -1,   392,   393,   394,
     395,   396,   397,   398,    -1,   400,   401,    -1,    -1,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,    -1,    -1,   419,   420,   421,   422,   423,   424,
      -1,   426,   427,   428,   429,   430,   431,   432,    -1,   434,
     435,   436,   437,   438,   439,    -1,    -1,   442,    -1,    -1,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   473,   474,
      -1,    -1,     3,     4,     5,     6,     7,   482,     9,    10,
      -1,    -1,   487,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    92,    93,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,    -1,   114,    -1,   116,   117,   118,   119,   120,
     121,    -1,   123,   124,   125,   126,   127,    -1,    -1,   130,
     131,   132,   133,   134,    -1,   136,   137,   138,    -1,   140,
     141,   142,    -1,   144,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,   158,   159,   160,
      -1,   162,    -1,   164,   165,    -1,   167,   168,   169,   170,
     171,   172,    -1,   174,    -1,   176,   177,    -1,   179,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   189,    -1,
     191,   192,   193,   194,   195,   196,    -1,   198,   199,   200,
     201,   202,   203,   204,   205,   206,    -1,   208,    -1,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   219,    -1,
      -1,   222,   223,   224,   225,    -1,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,    -1,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,    -1,   275,   276,    -1,    -1,   279,   280,
     281,    -1,    -1,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,    -1,
     301,   302,   303,   304,   305,   306,   307,   308,   309,    -1,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,    -1,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,    -1,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,    -1,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,    -1,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,    -1,   389,   390,
      -1,   392,   393,   394,   395,   396,   397,   398,    -1,   400,
     401,    -1,    -1,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,    -1,    -1,   419,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,   429,   430,
     431,   432,    -1,   434,   435,   436,   437,   438,   439,    -1,
      -1,   442,    -1,    -1,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   473,   474,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   482,    -1,    -1,    -1,    -1,   487,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    -1,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      -1,    67,    68,    69,    70,    71,    -1,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    -1,    85,
      86,    87,    88,    89,    90,    -1,    92,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,    -1,   114,    -1,
     116,   117,   118,   119,   120,   121,    -1,   123,   124,   125,
     126,   127,    -1,    -1,   130,   131,   132,   133,   134,    -1,
     136,   137,   138,    -1,   140,   141,   142,    -1,   144,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
      -1,   157,   158,   159,   160,    -1,   162,    -1,   164,   165,
      -1,   167,   168,   169,   170,   171,   172,    -1,   174,    -1,
     176,   177,    -1,   179,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,    -1,   191,   192,   193,   194,   195,
     196,    -1,   198,   199,   200,   201,   202,   203,   204,   205,
     206,    -1,   208,    -1,   210,    -1,   212,   213,   214,   215,
     216,   217,   218,   219,    -1,    -1,   222,   223,   224,   225,
      -1,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,    -1,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,    -1,   275,
     276,    -1,    -1,   279,   280,   281,    -1,    -1,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,    -1,   301,   302,   303,   304,   305,
     306,   307,   308,   309,    -1,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,    -1,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,    -1,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,    -1,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,    -1,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,    -1,   389,   390,    -1,   392,   393,   394,   395,
     396,   397,   398,    -1,   400,   401,    -1,    -1,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,    -1,    -1,   419,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,   429,   430,   431,   432,    -1,   434,   435,
     436,   437,   438,   439,    -1,    -1,   442,    -1,    -1,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   473,   474,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   482,    -1,    -1,    -1,
      -1,   487,     3,     4,     5,     6,     7,     8,     9,    10,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    92,    93,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,   117,   118,   119,   120,
     121,    -1,   123,   124,   125,   126,   127,    -1,    -1,   130,
     131,   132,   133,   134,    -1,   136,   137,   138,    -1,   140,
     141,   142,    -1,   144,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,    -1,   157,   158,   159,   160,
      -1,   162,    -1,   164,   165,    -1,   167,   168,   169,   170,
     171,   172,    -1,   174,    -1,   176,   177,    -1,   179,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   189,    -1,
     191,   192,   193,   194,   195,   196,    -1,   198,   199,   200,
     201,   202,   203,   204,   205,   206,    -1,   208,    -1,   210,
      -1,    -1,   213,   214,   215,   216,   217,   218,   219,    -1,
      -1,   222,   223,   224,   225,    -1,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,    -1,   263,   264,    -1,   266,   267,   268,   269,   270,
     271,   272,   273,    -1,   275,   276,    -1,    -1,   279,   280,
     281,    -1,    -1,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,    -1,
     301,   302,   303,   304,   305,   306,   307,   308,   309,    -1,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,    -1,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,    -1,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,    -1,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,    -1,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,    -1,   389,   390,
      -1,   392,   393,   394,   395,   396,   397,   398,    -1,   400,
     401,    -1,    -1,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,    -1,    -1,   419,   420,
     421,   422,   423,   424,    -1,   426,   427,   428,   429,   430,
     431,   432,    -1,   434,   435,   436,   437,   438,   439,    -1,
      -1,   442,    -1,    -1,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,    -1,    -1,    -1,    -1,
      -1,    -1,   473,   474,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   482,    -1,    -1,    -1,    -1,   487,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    43,    44,    45,
      46,    -1,    48,    49,    50,    51,    -1,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      -1,    67,    68,    69,    70,    71,    -1,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    -1,    85,
      86,    87,    88,    89,    90,    -1,    92,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,   117,   118,   119,   120,   121,    -1,   123,   124,   125,
     126,   127,    -1,    -1,   130,   131,   132,   133,   134,    -1,
     136,   137,   138,    -1,   140,    -1,   142,    -1,   144,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
      -1,   157,   158,   159,   160,    -1,   162,    -1,   164,   165,
      -1,   167,   168,   169,   170,    -1,   172,    -1,   174,    -1,
     176,   177,    -1,   179,   180,   181,   182,   183,   184,    -1,
     186,   187,   188,   189,    -1,   191,   192,   193,   194,   195,
     196,    -1,   198,   199,   200,   201,   202,   203,   204,   205,
     206,    -1,   208,    -1,   210,    -1,    -1,   213,   214,   215,
     216,   217,   218,   219,    -1,    -1,   222,   223,   224,    -1,
      -1,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,    -1,   263,   264,    -1,
     266,   267,   268,   269,   270,   271,   272,   273,    -1,   275,
     276,    -1,    -1,   279,   280,   281,    -1,    -1,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,    -1,   301,   302,   303,   304,   305,
     306,   307,   308,   309,    -1,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,    -1,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,    -1,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,    -1,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,    -1,   370,   371,   372,   373,    -1,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,    -1,   389,   390,    -1,   392,   393,   394,   395,
     396,   397,   398,    -1,   400,   401,    -1,    -1,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,    -1,    -1,   419,   420,   421,   422,   423,   424,    -1,
     426,   427,   428,   429,   430,   431,   432,    -1,   434,   435,
     436,   437,   438,   439,    -1,    -1,   442,    -1,    -1,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   473,   474,     3,
      -1,    -1,    -1,    -1,    -1,    -1,   482,    -1,    -1,    -1,
      -1,   487,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    35,    -1,    37,    38,    -1,    40,    41,    42,    -1,
      44,    45,    46,    47,    48,    -1,    50,    51,    -1,    53,
      54,    55,    56,    57,    58,    -1,    -1,    61,    62,    63,
      64,    65,    -1,    67,    68,    69,    70,    71,    -1,    -1,
      -1,    75,    76,    77,    78,    79,    -1,    81,    82,    83,
      -1,    85,    86,    87,    88,    89,    90,    -1,    92,    93,
      94,    95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,    -1,
     114,    -1,   116,   117,   118,   119,   120,   121,    -1,   123,
     124,   125,   126,   127,    -1,    -1,   130,   131,   132,   133,
     134,    -1,   136,   137,   138,    -1,   140,   141,   142,    -1,
     144,   145,   146,   147,   148,   149,   150,   151,   152,   153,
      -1,   155,    -1,   157,   158,   159,   160,    -1,   162,    -1,
     164,    -1,    -1,   167,   168,   169,   170,    -1,   172,    -1,
     174,    -1,   176,   177,    -1,   179,   180,   181,   182,   183,
     184,    -1,   186,   187,   188,   189,    -1,   191,   192,   193,
     194,   195,   196,    -1,   198,   199,   200,   201,   202,   203,
     204,   205,   206,    -1,   208,    -1,   210,    -1,    -1,   213,
     214,   215,   216,   217,   218,   219,    -1,    -1,   222,   223,
     224,    -1,    -1,   227,   228,   229,    -1,    -1,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,    -1,   263,
     264,    -1,   266,    -1,   268,   269,   270,   271,   272,   273,
      -1,   275,   276,    -1,    -1,   279,   280,   281,    -1,    -1,
     284,   285,    -1,   287,    -1,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,    -1,   301,   302,   303,
     304,   305,   306,   307,   308,   309,    -1,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,    -1,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,    -1,   358,   359,   360,   361,   362,    -1,
     364,   365,   366,   367,   368,    -1,   370,   371,   372,   373,
      -1,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,    -1,   389,   390,    -1,   392,   393,
     394,   395,   396,   397,   398,    -1,   400,   401,    -1,    -1,
     404,   405,   406,   407,   408,    -1,   410,   411,   412,   413,
     414,   415,   416,    -1,    -1,   419,   420,   421,   422,   423,
      -1,    -1,   426,   427,   428,   429,   430,   431,   432,    -1,
     434,    -1,   436,   437,   438,   439,    -1,    -1,   442,    -1,
      -1,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,    -1,    -1,    -1,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   483,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    -1,    53,    54,    55,    56,    57,
      58,    -1,    60,    61,    62,    63,    64,    65,    -1,    67,
      68,    69,    70,    71,    -1,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    -1,    85,    86,    87,
      88,    89,    90,    -1,    92,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,    -1,   114,    -1,   116,   117,
     118,   119,   120,   121,    -1,   123,   124,   125,   126,   127,
      -1,    -1,   130,   131,   132,   133,   134,    -1,   136,   137,
     138,    -1,   140,   141,   142,    -1,   144,   145,   146,   147,
     148,   149,   150,   151,   152,   153,    -1,   155,    -1,   157,
     158,   159,   160,    -1,   162,    -1,   164,   165,    -1,   167,
     168,   169,   170,   171,   172,    -1,   174,    -1,   176,   177,
      -1,   179,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,    -1,   191,   192,   193,   194,   195,   196,    -1,
     198,   199,   200,   201,   202,   203,   204,   205,   206,    -1,
     208,    -1,   210,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,    -1,   222,   223,   224,   225,    -1,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,    -1,   263,   264,   265,   266,    -1,
     268,   269,   270,   271,   272,   273,    -1,   275,   276,    -1,
     278,   279,   280,   281,    -1,    -1,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,    -1,   301,   302,   303,   304,   305,   306,   307,
     308,   309,    -1,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
      -1,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,    -1,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
      -1,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,    -1,   400,   401,    -1,    -1,   404,   405,   406,   407,
     408,    -1,   410,   411,   412,   413,   414,   415,   416,    -1,
      -1,   419,   420,   421,   422,   423,   424,    -1,   426,   427,
     428,   429,   430,   431,   432,    -1,   434,   435,   436,   437,
     438,   439,    -1,    -1,   442,    -1,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,    -1,    -1,
     468,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   482,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      -1,    53,    54,    55,    56,    57,    58,    -1,    60,    61,
      62,    63,    64,    65,    -1,    67,    68,    69,    70,    71,
      -1,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    -1,    85,    86,    87,    88,    89,    90,    -1,
      92,    93,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,    -1,   114,    -1,   116,   117,   118,   119,   120,   121,
      -1,   123,   124,   125,   126,   127,    -1,    -1,   130,   131,
     132,   133,   134,    -1,   136,   137,   138,    -1,   140,   141,
     142,    -1,   144,   145,   146,   147,   148,   149,   150,   151,
     152,   153,    -1,   155,    -1,   157,   158,   159,   160,    -1,
     162,    -1,   164,   165,    -1,   167,   168,   169,   170,   171,
     172,    -1,   174,    -1,   176,   177,    -1,   179,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,    -1,   191,
     192,   193,   194,   195,   196,    -1,   198,   199,   200,   201,
     202,   203,   204,   205,   206,    -1,   208,    -1,   210,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,    -1,
     222,   223,   224,   225,    -1,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
      -1,   263,   264,   265,   266,    -1,   268,   269,   270,   271,
     272,   273,    -1,   275,   276,    -1,   278,   279,   280,   281,
      -1,    -1,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,    -1,   301,
     302,   303,   304,   305,   306,   307,   308,   309,    -1,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,    -1,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,    -1,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,    -1,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,    -1,   389,   390,    -1,
     392,   393,   394,   395,   396,   397,   398,    -1,   400,   401,
      -1,    -1,   404,   405,   406,   407,   408,    -1,   410,   411,
     412,   413,   414,   415,   416,    -1,    -1,   419,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,   429,   430,   431,
     432,    -1,   434,   435,   436,   437,   438,   439,    -1,    -1,
     442,    -1,    -1,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,    -1,    -1,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     482,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    -1,    53,    54,    55,    56,
      57,    58,    -1,    60,    61,    62,    63,    64,    65,    -1,
      67,    68,    69,    70,    71,    -1,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    -1,    85,    86,
      87,    88,    89,    90,    -1,    92,    93,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,    -1,   114,    -1,   116,
     117,   118,   119,   120,   121,    -1,   123,   124,   125,   126,
     127,    -1,    -1,   130,   131,   132,   133,   134,    -1,   136,
     137,   138,    -1,   140,   141,   142,    -1,   144,   145,   146,
     147,   148,   149,   150,   151,   152,   153,    -1,   155,    -1,
     157,   158,   159,   160,    -1,   162,    -1,   164,   165,    -1,
     167,   168,   169,   170,   171,   172,    -1,   174,    -1,   176,
     177,    -1,   179,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   189,    -1,   191,   192,   193,   194,   195,   196,
      -1,   198,   199,   200,   201,   202,   203,   204,   205,   206,
      -1,   208,    -1,   210,   211,   212,   213,   214,   215,   216,
     217,   218,   219,    -1,    -1,   222,   223,   224,   225,    -1,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,    -1,   263,   264,   265,   266,
      -1,   268,   269,   270,   271,   272,   273,    -1,   275,   276,
      -1,    -1,   279,   280,   281,    -1,    -1,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,    -1,   301,   302,   303,   304,   305,   306,
     307,   308,   309,    -1,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,    -1,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,    -1,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
      -1,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,    -1,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,    -1,   389,   390,    -1,   392,   393,   394,   395,   396,
     397,   398,    -1,   400,   401,    -1,    -1,   404,   405,   406,
     407,   408,    -1,   410,   411,   412,   413,   414,   415,   416,
      -1,    -1,   419,   420,   421,   422,   423,   424,    -1,   426,
     427,   428,   429,   430,   431,   432,    -1,   434,   435,   436,
     437,   438,   439,    -1,    -1,   442,    -1,    -1,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,    -1,
      -1,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   482,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      -1,    53,    54,    55,    56,    57,    58,    -1,    60,    61,
      62,    63,    64,    65,    -1,    67,    68,    69,    70,    71,
      -1,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    -1,    85,    86,    87,    88,    89,    90,    -1,
      92,    93,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,    -1,   114,    -1,   116,   117,   118,   119,   120,   121,
      -1,   123,   124,   125,   126,   127,    -1,    -1,   130,   131,
     132,   133,   134,    -1,   136,   137,   138,    -1,   140,   141,
     142,    -1,   144,   145,   146,   147,   148,   149,   150,   151,
     152,   153,    -1,   155,    -1,   157,   158,   159,   160,    -1,
     162,    -1,   164,   165,    -1,   167,   168,   169,   170,   171,
     172,    -1,   174,    -1,   176,   177,    -1,   179,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,    -1,   191,
     192,   193,   194,   195,   196,    -1,   198,   199,   200,   201,
     202,   203,   204,   205,   206,    -1,   208,    -1,   210,   211,
     212,   213,   214,   215,   216,   217,   218,   219,    -1,    -1,
     222,   223,   224,   225,    -1,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
      -1,   263,   264,   265,   266,    -1,   268,   269,   270,   271,
     272,   273,    -1,   275,   276,    -1,    -1,   279,   280,   281,
      -1,    -1,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,    -1,   301,
     302,   303,   304,   305,   306,   307,   308,   309,    -1,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,    -1,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,    -1,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,    -1,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,    -1,   389,   390,    -1,
     392,   393,   394,   395,   396,   397,   398,    -1,   400,   401,
      -1,    -1,   404,   405,   406,   407,   408,    -1,   410,   411,
     412,   413,   414,   415,   416,    -1,    -1,   419,   420,   421,
     422,   423,   424,    -1,   426,   427,   428,   429,   430,   431,
     432,    -1,   434,   435,   436,   437,   438,   439,    -1,    -1,
     442,    -1,    -1,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,    -1,    -1,     3,     4,     5,    -1,
      -1,    -1,     9,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     482,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    -1,    53,    54,    55,    56,
      57,    58,    -1,    -1,    61,    62,    63,    64,    65,    -1,
      67,    68,    69,    70,    71,    -1,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    -1,    85,    86,
      87,    88,    89,    90,    -1,    92,    93,    94,    95,    -1,
      -1,    -1,    99,    -1,    -1,    -1,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,    -1,   114,    -1,   116,
     117,   118,   119,   120,   121,    -1,   123,   124,   125,   126,
     127,    -1,    -1,   130,   131,   132,   133,   134,    -1,   136,
     137,   138,    -1,   140,   141,   142,    -1,   144,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,    -1,
     157,   158,   159,   160,    -1,   162,    -1,   164,   165,    -1,
     167,   168,   169,   170,   171,   172,    -1,   174,    -1,   176,
     177,    -1,   179,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   189,    -1,   191,   192,   193,   194,   195,   196,
      -1,   198,   199,   200,   201,   202,   203,   204,   205,   206,
      -1,   208,    -1,   210,   211,   212,   213,   214,   215,   216,
     217,   218,   219,    -1,    -1,   222,   223,   224,   225,    -1,
     227,   228,   229,    -1,    -1,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,    -1,   263,   264,   265,   266,
      -1,   268,   269,   270,   271,   272,   273,    -1,   275,   276,
     277,    -1,   279,   280,   281,    -1,    -1,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,    -1,   301,   302,   303,   304,   305,   306,
     307,   308,   309,    -1,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,    -1,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,    -1,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
      -1,   358,   359,   360,   361,   362,    -1,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,    -1,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,    -1,   389,   390,    -1,   392,   393,   394,   395,   396,
     397,   398,    -1,   400,   401,    -1,    -1,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
      -1,    -1,   419,   420,   421,   422,   423,    -1,    -1,   426,
     427,   428,   429,   430,   431,   432,    -1,   434,   435,   436,
     437,   438,   439,    -1,    -1,   442,    -1,    -1,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,    -1,
      -1,     3,    -1,    -1,    -1,    -1,   473,   474,   475,    -1,
      -1,    -1,    -1,    -1,    -1,   482,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    30,    31,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      -1,    53,    54,    55,    56,    57,    58,    -1,    -1,    61,
      62,    63,    64,    65,    -1,    67,    68,    69,    70,    71,
      -1,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    -1,    85,    86,    87,    88,    89,    90,    -1,
      92,    93,    94,    95,    -1,    -1,    -1,    99,    -1,    -1,
      -1,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,    -1,   114,    -1,   116,   117,   118,   119,   120,   121,
      -1,   123,   124,   125,   126,   127,    -1,    -1,   130,   131,
     132,   133,   134,    -1,   136,   137,   138,    -1,   140,   141,
     142,    -1,   144,   145,   146,   147,   148,   149,   150,   151,
     152,   153,    -1,   155,    -1,   157,   158,   159,   160,    -1,
     162,    -1,   164,   165,    -1,   167,   168,   169,   170,   171,
     172,    -1,   174,    -1,   176,   177,    -1,   179,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,    -1,   191,
     192,   193,   194,   195,   196,    -1,   198,   199,   200,   201,
     202,   203,   204,   205,   206,    -1,   208,    -1,   210,   211,
     212,   213,   214,   215,   216,   217,   218,   219,    -1,    -1,
     222,   223,   224,   225,    -1,   227,   228,   229,    -1,    -1,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
      -1,   263,   264,   265,   266,    -1,   268,   269,   270,   271,
     272,   273,    -1,   275,   276,    -1,    -1,   279,   280,   281,
      -1,    -1,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,    -1,   301,
     302,   303,   304,   305,   306,   307,   308,   309,    -1,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,    -1,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,    -1,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,    -1,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,    -1,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,    -1,   400,   401,
      -1,    -1,   404,   405,   406,   407,   408,    -1,   410,   411,
     412,   413,   414,   415,   416,    -1,    -1,   419,   420,   421,
     422,   423,    -1,    -1,   426,   427,   428,   429,   430,   431,
     432,    -1,   434,   435,   436,   437,   438,   439,    -1,    -1,
     442,    -1,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,    -1,    -1,   468,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     482,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      26,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    -1,    44,    45,
      46,    47,    48,    -1,    50,    51,    -1,    53,    54,    55,
      56,    57,    58,    -1,    -1,    61,    62,    63,    64,    65,
      -1,    67,    68,    69,    70,    71,    -1,    -1,    -1,    75,
      76,    77,    78,    79,    -1,    81,    82,    83,    -1,    85,
      86,    87,    88,    89,    90,    -1,    -1,    93,    94,    95,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,    -1,   114,    -1,
     116,   117,   118,   119,   120,   121,    -1,   123,   124,   125,
     126,   127,    -1,    -1,   130,   131,   132,   133,   134,    -1,
     136,   137,   138,    -1,   140,   141,   142,    -1,   144,   145,
     146,   147,   148,   149,   150,   151,   152,   153,    -1,   155,
      -1,   157,   158,   159,   160,    -1,   162,    -1,   164,    -1,
      -1,    -1,   168,   169,   170,    -1,   172,    -1,   174,    -1,
     176,   177,    -1,   179,   180,   181,   182,   183,   184,    -1,
     186,   187,   188,   189,    -1,   191,   192,   193,   194,   195,
     196,    -1,   198,    -1,   200,   201,   202,   203,   204,   205,
     206,    -1,   208,    -1,   210,    -1,    -1,   213,    -1,   215,
     216,   217,   218,   219,    -1,    -1,   222,    -1,   224,    -1,
      -1,   227,   228,   229,    -1,    -1,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
      -1,   257,   258,   259,   260,   261,    -1,   263,   264,    -1,
     266,    -1,   268,   269,   270,   271,   272,   273,    -1,   275,
     276,    -1,    -1,   279,   280,   281,    -1,    -1,   284,   285,
      -1,   287,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,    -1,   301,   302,   303,   304,   305,
     306,   307,   308,   309,    -1,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,    -1,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,    -1,   339,   340,    -1,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,    -1,   364,   365,
     366,   367,   368,    -1,   370,   371,   372,   373,    -1,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,    -1,   389,   390,   391,   392,    -1,   394,   395,
     396,   397,   398,    -1,   400,   401,    -1,    -1,   404,   405,
     406,   407,   408,    -1,   410,   411,   412,   413,   414,   415,
     416,    -1,    -1,   419,   420,   421,   422,   423,    -1,    -1,
     426,   427,   428,   429,   430,   431,   432,    -1,   434,    -1,
     436,   437,   438,   439,    -1,    -1,   442,    -1,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
      -1,    -1,   468,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   482,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    -1,    44,    45,    46,    47,    48,    -1,
      50,    51,    -1,    53,    54,    55,    56,    57,    58,    -1,
      -1,    61,    62,    63,    64,    65,    -1,    67,    68,    69,
      70,    71,    -1,    -1,    -1,    75,    76,    77,    78,    79,
      -1,    81,    82,    83,    -1,    85,    86,    87,    88,    89,
      90,    -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,    -1,   114,    -1,   116,   117,   118,   119,
     120,   121,    -1,   123,   124,   125,   126,   127,    -1,    -1,
     130,   131,   132,   133,   134,    -1,   136,   137,   138,    -1,
     140,   141,   142,    -1,   144,   145,   146,   147,   148,   149,
     150,   151,   152,   153,    -1,   155,    -1,   157,   158,   159,
     160,    -1,   162,    -1,   164,    -1,    -1,    -1,   168,   169,
     170,    -1,   172,    -1,   174,    -1,   176,   177,    -1,   179,
     180,   181,   182,   183,   184,    -1,   186,   187,   188,   189,
      -1,   191,   192,   193,   194,   195,   196,    -1,   198,    -1,
     200,   201,   202,   203,   204,   205,   206,    -1,   208,    -1,
     210,    -1,    -1,   213,    -1,   215,   216,   217,   218,   219,
      -1,    -1,   222,    -1,   224,    -1,    -1,   227,   228,   229,
      -1,    -1,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,    -1,   257,   258,   259,
     260,   261,    -1,   263,   264,    -1,   266,    -1,   268,   269,
     270,   271,   272,   273,    -1,   275,   276,    -1,    -1,   279,
     280,   281,    -1,    -1,   284,   285,    -1,   287,    -1,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
      -1,   301,   302,   303,   304,   305,   306,   307,   308,   309,
      -1,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,    -1,   339,
     340,    -1,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,    -1,   364,   365,   366,   367,   368,    -1,
     370,   371,   372,   373,    -1,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,    -1,   389,
     390,   391,   392,    -1,   394,   395,   396,   397,   398,    -1,
     400,   401,    -1,    -1,   404,   405,   406,   407,   408,    -1,
     410,   411,   412,   413,   414,   415,   416,    -1,    -1,   419,
     420,   421,   422,   423,    -1,    -1,   426,   427,   428,   429,
     430,   431,   432,    -1,   434,    -1,   436,   437,   438,   439,
      -1,    -1,   442,    -1,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,    -1,    -1,   468,     3,
      -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   482,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,
      44,    45,    46,    47,    48,    -1,    50,    51,    -1,    53,
      54,    55,    56,    57,    58,    -1,    -1,    61,    62,    63,
      64,    65,    -1,    67,    68,    69,    70,    71,    -1,    -1,
      -1,    75,    76,    77,    78,    79,    -1,    81,    82,    83,
      -1,    85,    86,    87,    88,    89,    90,    -1,    -1,    93,
      94,    95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,    -1,
     114,    -1,   116,   117,   118,   119,   120,   121,    -1,   123,
     124,   125,   126,   127,    -1,    -1,   130,   131,   132,   133,
     134,    -1,   136,   137,   138,    -1,   140,   141,   142,    -1,
     144,   145,   146,   147,   148,   149,   150,   151,   152,   153,
      -1,   155,    -1,   157,   158,   159,   160,    -1,   162,    -1,
     164,    -1,    -1,    -1,   168,   169,   170,    -1,   172,    -1,
     174,    -1,   176,   177,    -1,   179,   180,   181,   182,   183,
     184,    -1,   186,   187,   188,   189,    -1,   191,   192,   193,
     194,   195,   196,    -1,   198,    -1,   200,   201,   202,   203,
     204,   205,   206,    -1,   208,    -1,   210,    -1,    -1,   213,
      -1,   215,   216,   217,   218,   219,    -1,    -1,   222,    -1,
     224,    -1,    -1,   227,   228,   229,    -1,    -1,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,    -1,   257,   258,   259,   260,   261,    -1,   263,
     264,    -1,   266,    -1,   268,   269,   270,   271,   272,   273,
      -1,   275,   276,    -1,    -1,   279,   280,   281,    -1,    -1,
     284,   285,    -1,   287,    -1,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,    -1,   301,   302,   303,
     304,   305,   306,   307,   308,   309,    -1,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,    -1,   339,   340,    -1,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,    -1,   358,   359,   360,   361,   362,    -1,
     364,   365,   366,   367,   368,    -1,   370,   371,   372,   373,
      -1,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,    -1,   389,   390,    -1,   392,    -1,
     394,   395,   396,   397,   398,    -1,   400,   401,    -1,    -1,
     404,   405,   406,   407,   408,    -1,   410,   411,   412,   413,
     414,   415,   416,    -1,    -1,   419,   420,   421,   422,   423,
      -1,    -1,   426,   427,   428,   429,   430,   431,   432,    -1,
     434,    -1,   436,   437,   438,   439,    -1,    -1,   442,    -1,
      -1,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,    -1,    -1,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   482,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    -1,    44,    45,    46,    47,    48,
      -1,    50,    51,    -1,    53,    54,    55,    56,    57,    58,
      -1,    -1,    61,    62,    63,    64,    65,    -1,    67,    68,
      69,    70,    71,    -1,    -1,    -1,    75,    76,    77,    78,
      79,    -1,    81,    82,    83,    -1,    85,    86,    87,    88,
      89,    90,    -1,    -1,    93,    94,    95,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,    -1,   114,    -1,   116,   117,   118,
     119,   120,   121,    -1,   123,   124,   125,   126,   127,    -1,
      -1,   130,   131,   132,   133,   134,    -1,   136,   137,   138,
      -1,   140,   141,   142,    -1,   144,   145,   146,   147,   148,
     149,   150,   151,   152,   153,    -1,   155,    -1,   157,   158,
     159,   160,    -1,   162,    -1,   164,    -1,    -1,    -1,   168,
     169,   170,    -1,   172,    -1,   174,    -1,   176,   177,    -1,
     179,   180,   181,   182,   183,   184,    -1,   186,   187,   188,
     189,    -1,   191,   192,   193,   194,   195,   196,    -1,   198,
      -1,   200,   201,   202,   203,   204,   205,   206,    -1,   208,
      -1,   210,    -1,    -1,   213,    -1,   215,   216,   217,   218,
     219,    -1,    -1,   222,    -1,   224,    -1,    -1,   227,   228,
     229,    -1,    -1,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,    -1,   257,   258,
     259,   260,   261,    -1,   263,   264,    -1,   266,    -1,   268,
     269,   270,   271,   272,   273,    -1,   275,   276,    -1,    -1,
     279,   280,   281,    -1,    -1,   284,   285,    -1,   287,    -1,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,    -1,   301,   302,   303,   304,   305,   306,   307,   308,
     309,    -1,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,    -1,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,    -1,
     339,   340,    -1,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,    -1,   358,
     359,   360,   361,   362,    -1,   364,   365,   366,   367,   368,
      -1,   370,   371,   372,   373,    -1,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,    -1,
     389,   390,    -1,   392,    -1,   394,   395,   396,   397,   398,
      -1,   400,   401,    -1,    -1,   404,   405,   406,   407,   408,
      -1,   410,   411,   412,   413,   414,   415,   416,    -1,    -1,
     419,   420,   421,   422,   423,    -1,    -1,   426,   427,   428,
     429,   430,   431,   432,    -1,   434,    -1,   436,   437,   438,
     439,    -1,    -1,   442,    -1,    -1,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,    -1,    -1,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   482,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,
      44,    45,    46,    47,    48,    -1,    50,    51,    -1,    53,
      54,    55,    56,    57,    58,    -1,    -1,    61,    62,    63,
      64,    65,    -1,    67,    68,    69,    70,    71,    -1,    -1,
      -1,    75,    76,    77,    78,    79,    -1,    81,    82,    83,
      -1,    85,    86,    87,    88,    89,    90,    -1,    -1,    93,
      94,    95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,    -1,
     114,    -1,   116,   117,   118,   119,   120,   121,    -1,   123,
     124,   125,   126,   127,    -1,    -1,   130,   131,   132,   133,
     134,    -1,   136,   137,   138,    -1,   140,   141,   142,    -1,
     144,   145,   146,   147,   148,   149,   150,   151,   152,   153,
      -1,   155,    -1,   157,   158,   159,   160,    -1,   162,    -1,
     164,    -1,    -1,    -1,   168,   169,   170,    -1,   172,    -1,
     174,    -1,   176,   177,    -1,   179,   180,   181,   182,   183,
     184,    -1,   186,   187,   188,   189,    -1,   191,   192,   193,
     194,   195,   196,    -1,   198,    -1,   200,   201,   202,   203,
     204,   205,   206,    -1,   208,    -1,   210,    -1,    -1,   213,
      -1,   215,   216,   217,   218,   219,    -1,    -1,   222,    -1,
     224,    -1,    -1,   227,   228,   229,    -1,    -1,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,    -1,   257,   258,   259,   260,   261,    -1,   263,
     264,    -1,   266,    -1,   268,   269,   270,   271,   272,   273,
      -1,   275,   276,    -1,    -1,   279,   280,   281,    -1,    -1,
     284,   285,    -1,   287,    -1,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,    -1,   301,   302,   303,
     304,   305,   306,   307,   308,   309,    -1,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,    -1,   339,   340,    -1,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,    -1,   358,   359,   360,   361,   362,    -1,
     364,   365,   366,   367,   368,    -1,   370,   371,   372,   373,
      -1,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,    -1,   389,   390,    -1,   392,    -1,
     394,   395,   396,   397,   398,    -1,   400,   401,    -1,    -1,
     404,   405,   406,   407,   408,    -1,   410,   411,   412,   413,
     414,   415,   416,    -1,    -1,   419,   420,   421,   422,   423,
      -1,    -1,   426,   427,   428,   429,   430,   431,   432,    -1,
     434,    -1,   436,   437,   438,   439,    -1,    -1,   442,    -1,
      -1,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,    -1,    -1,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   482,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    -1,    44,    45,    46,    47,    48,
      -1,    50,    51,    -1,    53,    54,    55,    56,    57,    58,
      -1,    -1,    61,    62,    63,    64,    65,    -1,    67,    68,
      69,    70,    71,    -1,    -1,    -1,    75,    76,    77,    78,
      79,    -1,    81,    82,    83,    -1,    85,    86,    87,    88,
      89,    90,    -1,    -1,    93,    94,    95,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,    -1,   114,    -1,   116,   117,   118,
     119,   120,   121,    -1,   123,   124,   125,   126,   127,    -1,
      -1,   130,   131,   132,   133,   134,    -1,   136,   137,   138,
      -1,   140,   141,   142,    -1,   144,   145,   146,   147,   148,
     149,   150,   151,   152,   153,    -1,   155,    -1,   157,   158,
     159,   160,    -1,   162,    -1,   164,    -1,    -1,    -1,   168,
     169,   170,    -1,   172,    -1,   174,    -1,   176,   177,    -1,
     179,   180,   181,   182,   183,   184,    -1,   186,   187,   188,
     189,    -1,   191,   192,   193,   194,   195,   196,    -1,   198,
      -1,   200,   201,   202,   203,   204,   205,   206,    -1,   208,
      -1,   210,    -1,    -1,   213,    -1,   215,   216,   217,   218,
     219,    -1,    -1,   222,    -1,   224,    -1,    -1,   227,   228,
     229,    -1,    -1,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,    -1,   257,   258,
     259,   260,   261,    -1,   263,   264,    -1,   266,    -1,   268,
     269,   270,   271,   272,   273,    -1,   275,   276,    -1,    -1,
     279,   280,   281,    -1,    -1,   284,   285,    -1,   287,    -1,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,    -1,   301,   302,   303,   304,   305,   306,   307,   308,
     309,    -1,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,    -1,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,    -1,
     339,   340,    -1,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,    -1,   358,
     359,   360,   361,   362,    -1,   364,   365,   366,   367,   368,
      -1,   370,   371,   372,   373,    -1,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,    -1,
     389,   390,    -1,   392,    -1,   394,   395,   396,   397,   398,
      -1,   400,   401,    -1,    -1,   404,   405,   406,   407,   408,
      -1,   410,   411,   412,   413,   414,   415,   416,    -1,    -1,
     419,   420,   421,   422,   423,    -1,    -1,   426,   427,   428,
     429,   430,   431,   432,    -1,   434,    -1,   436,   437,   438,
     439,    -1,    -1,   442,    -1,    -1,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,    -1,    -1,    -1,
      -1,    -1,     3,     4,     5,    -1,    -1,     8,     9,    -1,
      -1,    -1,    -1,   482,    15,    16,    17,    18,    19,    20,
      21,    22,    23,    24,    25,    26,    27,    28,    29,    30,
      31,    32,    33,    34,    35,    36,    37,    38,    39,    40,
      41,    42,    43,    44,    45,    46,    -1,    48,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    74,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    86,    87,    88,    89,    90,
      91,    92,    93,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   129,   130,
     131,   132,   133,   134,   135,   136,   137,   138,   139,   140,
     141,   142,   143,   144,   145,   146,   147,    -1,   149,   150,
     151,   152,    -1,   154,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   169,   170,
     171,   172,   173,   174,   175,    -1,   177,   178,   179,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,    -1,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,    -1,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,    -1,   286,   287,   288,    -1,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,    -1,   304,   305,    -1,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,    -1,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,    -1,   407,    -1,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
      -1,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   462,   463,   464,   465,    -1,     3,    -1,   469,   470,
     471,     8,   473,   474,   475,   476,   477,   478,    15,    16,
      17,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    -1,    44,    45,    46,
      47,    48,    -1,    50,    51,    -1,    53,    54,    55,    56,
      57,    58,    -1,    -1,    61,    62,    63,    64,    65,    -1,
      67,    68,    69,    70,    71,    -1,    -1,    -1,    75,    76,
      77,    78,    79,    -1,    81,    82,    83,    -1,    85,    86,
      87,    88,    89,    90,    -1,    -1,    93,    94,    95,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,    -1,   114,    -1,   116,
     117,   118,   119,   120,   121,    -1,   123,   124,   125,   126,
     127,    -1,    -1,   130,   131,   132,   133,   134,    -1,   136,
     137,   138,    -1,   140,   141,   142,    -1,   144,   145,   146,
     147,   148,   149,   150,   151,   152,   153,    -1,   155,    -1,
     157,   158,   159,   160,    -1,   162,    -1,   164,    -1,    -1,
      -1,   168,   169,   170,    -1,   172,    -1,   174,    -1,   176,
     177,    -1,   179,   180,   181,   182,   183,   184,    -1,   186,
     187,   188,   189,    -1,   191,   192,   193,   194,   195,   196,
      -1,   198,    -1,   200,   201,   202,   203,   204,   205,   206,
      -1,   208,    -1,   210,    -1,    -1,   213,    -1,   215,   216,
     217,   218,   219,    -1,    -1,   222,    -1,   224,    -1,    -1,
     227,   228,   229,    -1,    -1,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,    -1,
     257,   258,   259,   260,   261,    -1,   263,   264,    -1,   266,
      -1,   268,   269,   270,   271,   272,   273,    -1,   275,   276,
      -1,    -1,   279,   280,   281,    -1,    -1,   284,   285,    -1,
     287,    -1,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,    -1,   301,   302,   303,   304,   305,   306,
     307,   308,   309,    -1,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,    -1,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,    -1,   339,   340,    -1,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
      -1,   358,   359,   360,   361,   362,    -1,   364,   365,   366,
     367,   368,    -1,   370,   371,   372,   373,    -1,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,    -1,   389,   390,    -1,   392,    -1,   394,   395,   396,
     397,   398,    -1,   400,   401,    -1,    -1,   404,   405,   406,
     407,   408,    -1,   410,   411,   412,   413,   414,   415,   416,
      -1,    -1,   419,   420,   421,   422,   423,    -1,    -1,   426,
     427,   428,   429,   430,   431,   432,    -1,   434,    -1,   436,
     437,   438,   439,    -1,    -1,   442,    -1,    -1,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,    -1,
      -1,    -1,   469,   470,   471,    -1,   473,   474,   475,   476,
     477,   478,     8,    -1,    -1,    11,    -1,    -1,    -1,    15,
      16,    17,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
       8,    -1,    -1,    11,    -1,    -1,    32,    15,    16,    17,
      -1,    -1,    -1,    -1,    40,    -1,    -1,    -1,    -1,    -1,
      -1,    47,    -1,    -1,    32,    -1,    -1,    -1,     8,    -1,
      -1,    11,    40,    -1,    -1,    15,    16,    17,    -1,    47,
      -1,    -1,    -1,    -1,    -1,    -1,    72,    -1,    -1,    -1,
      -1,    -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      40,    -1,    -1,    -1,    72,    -1,     8,    47,    -1,    11,
      -1,    -1,    -1,    15,    16,    17,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      32,    -1,    72,    -1,    -1,    -1,    -1,    -1,    40,    -1,
      -1,    -1,    -1,    -1,    -1,    47,    -1,    -1,    -1,    -1,
       8,    -1,    -1,    11,    -1,    -1,    -1,    15,    16,    17,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      72,    -1,    -1,    -1,    32,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    -1,    -1,   171,    -1,    -1,     8,    47,
      -1,    11,    -1,    -1,    -1,    15,    16,    17,    -1,   185,
      -1,    -1,    -1,   171,   190,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    32,    -1,    72,    -1,    -1,   185,    -1,    -1,
      40,    -1,   190,    -1,    -1,   211,   212,    47,    -1,    -1,
      -1,   171,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   225,
      -1,    -1,    -1,   211,   212,   185,    -1,    -1,    -1,    -1,
     190,    -1,    72,    -1,    -1,    -1,    -1,   225,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   171,
      -1,   211,   212,    -1,    -1,    -1,   262,    -1,    -1,   265,
      -1,    -1,    -1,   185,    -1,   225,    -1,    -1,   190,    -1,
      -1,    -1,    -1,   279,   262,    -1,   282,   265,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   211,
     212,   279,    -1,   171,   282,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   262,   225,    -1,   265,    -1,   185,    -1,    -1,
      -1,    -1,   190,    -1,    -1,    -1,    -1,    -1,    -1,   279,
      -1,    -1,   282,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   171,    -1,   211,   212,    -1,    -1,    -1,    -1,    -1,
     262,    -1,    -1,   265,    -1,   185,    -1,   225,    -1,    -1,
     190,    -1,    -1,    -1,    -1,    -1,    -1,   279,    -1,    -1,
     282,    -1,    -1,   369,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   211,   212,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   369,    -1,    -1,   262,   225,    -1,   265,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   279,    -1,    -1,   282,    -1,    -1,    -1,    -1,   369,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   262,    -1,    -1,   265,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   279,
      -1,    -1,   282,    -1,    -1,    -1,    -1,   369,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     466,    -1,    -1,   469,   470,   471,    -1,   473,   474,   475,
     476,   477,   478,    -1,    -1,    -1,    -1,   483,   466,    -1,
      -1,   469,   470,   471,    -1,   473,   474,   475,   476,   477,
     478,   369,    -1,    -1,    -1,   483,     8,    -1,    -1,    11,
      -1,    -1,    -1,    15,    16,    17,   466,    -1,    -1,   469,
     470,   471,    -1,   473,   474,   475,   476,   477,   478,    -1,
      32,    -1,    -1,   483,    -1,    -1,    -1,    -1,    40,   369,
       8,    -1,    -1,    11,    -1,    47,    -1,    15,    16,    17,
      -1,    -1,    -1,    -1,   466,    -1,    -1,   469,   470,   471,
      -1,   473,   474,   475,   476,   477,   478,    -1,    -1,    -1,
      72,   483,    40,    -1,    -1,    -1,    -1,    -1,    -1,    47,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,     8,    -1,    -1,
      11,    -1,    -1,    -1,    15,    16,    17,    -1,   466,    -1,
      -1,   469,   470,   471,    72,   473,   474,   475,   476,   477,
     478,    32,    -1,    -1,    -1,   483,    -1,    -1,    -1,    40,
      -1,    -1,    -1,    -1,    -1,     8,    47,    -1,    11,    -1,
      -1,    -1,    15,    16,    17,    -1,   466,    -1,    -1,   469,
     470,   471,    -1,   473,   474,   475,   476,   477,   478,    32,
      -1,    72,    -1,   483,    -1,    -1,    -1,    40,    -1,    -1,
      -1,    -1,    -1,    -1,    47,    -1,    -1,    -1,     8,   171,
      -1,    11,    -1,    -1,    -1,    15,    16,    17,    -1,    -1,
      -1,    -1,    -1,   185,    -1,    -1,    -1,    -1,   190,    72,
      -1,    -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      40,    -1,    -1,   171,    -1,    -1,    -1,    47,    -1,   211,
     212,    -1,    -1,    -1,    -1,    -1,    -1,   185,    -1,    -1,
      -1,    -1,   190,   225,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    72,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   211,   212,    -1,    -1,    -1,    -1,    -1,
     171,    -1,    -1,    -1,    -1,    -1,    -1,   225,    -1,    -1,
     262,    -1,    -1,   265,   185,    -1,    -1,    -1,    -1,   190,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   279,    -1,    -1,
     282,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   171,    -1,
     211,   212,    -1,    -1,   262,    -1,    -1,   265,    -1,    -1,
      -1,    -1,   185,    -1,   225,    -1,    -1,   190,    -1,    -1,
      -1,   279,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   211,   212,
      -1,   171,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   262,   225,    -1,   265,   185,    -1,    -1,    -1,    -1,
     190,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   279,    -1,
      -1,   282,    -1,    -1,    -1,    -1,    -1,   369,    -1,    -1,
      -1,   211,   212,    -1,    -1,    -1,    -1,    -1,    -1,   262,
      -1,    -1,   265,    -1,    -1,   225,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   279,    -1,    -1,   282,
      -1,   369,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   262,    -1,    -1,   265,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   279,
      -1,    -1,   282,    -1,    -1,    -1,    -1,    -1,   369,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   466,    -1,    -1,   469,   470,   471,
      -1,   473,   474,   475,   476,   477,   478,    -1,    -1,    -1,
      -1,   483,    -1,    -1,    -1,    -1,   369,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   466,    -1,
      -1,   469,   470,   471,    -1,   473,   474,   475,   476,   477,
     478,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   369,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   466,    -1,    -1,   469,   470,
     471,    -1,   473,   474,   475,   476,   477,   478,    -1,    -1,
      -1,    -1,   483,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   466,    -1,    -1,   469,   470,   471,    -1,
     473,   474,   475,   476,   477,   478,    -1,    -1,    -1,    -1,
     483,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   466,     3,    -1,   469,
     470,   471,    -1,   473,   474,   475,   476,   477,   478,    -1,
      -1,   481,    18,    19,    20,    21,    22,    23,    24,    25,
      26,    27,    28,    29,    30,    31,    32,    33,    34,    35,
      36,    37,    38,    39,    40,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,    74,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      86,    87,    88,    89,    90,    91,    92,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
     136,   137,   138,   139,   140,   141,   142,   143,   144,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   475,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      -1,    44,    45,    46,    47,    48,    -1,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    -1,    -1,    61,    62,
      63,    64,    65,    -1,    67,    68,    69,    70,    71,    -1,
      -1,    -1,    75,    76,    77,    78,    79,    -1,    81,    82,
      83,    -1,    85,    86,    87,    88,    89,    90,    -1,    -1,
      93,    94,    95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
      -1,   114,    -1,   116,   117,   118,   119,   120,   121,    -1,
     123,   124,   125,   126,   127,    -1,    -1,   130,   131,   132,
     133,   134,    -1,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,    -1,   155,    -1,   157,   158,   159,   160,    -1,   162,
      -1,   164,    -1,    -1,    -1,   168,   169,   170,    -1,   172,
      -1,   174,    -1,   176,   177,    -1,   179,   180,   181,   182,
     183,   184,    -1,   186,   187,   188,   189,    -1,   191,   192,
     193,   194,   195,   196,    -1,   198,    -1,   200,   201,   202,
     203,   204,   205,   206,    -1,   208,    -1,   210,    -1,    -1,
     213,    -1,   215,   216,   217,   218,   219,    -1,    -1,   222,
      -1,   224,    -1,    -1,   227,   228,   229,    -1,    -1,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,    -1,   257,   258,   259,   260,   261,    -1,
     263,   264,    -1,   266,    -1,   268,   269,   270,   271,   272,
     273,    -1,   275,   276,    -1,    -1,   279,   280,   281,    -1,
      -1,   284,   285,    -1,   287,    -1,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,    -1,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,    -1,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,    -1,   339,   340,    -1,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,    -1,   358,   359,   360,   361,   362,
      -1,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,    -1,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,    -1,   389,   390,    -1,   392,
      -1,   394,   395,   396,   397,   398,    -1,   400,   401,    -1,
      -1,   404,   405,   406,   407,   408,    -1,   410,   411,   412,
     413,   414,   415,   416,    -1,    -1,   419,   420,   421,   422,
     423,    -1,    -1,   426,   427,   428,   429,   430,   431,   432,
      -1,   434,    -1,   436,   437,   438,   439,    -1,    -1,   442,
      -1,    -1,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,     3,     4,     5,    -1,    -1,    -1,     9,
      -1,    -1,   475,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    -1,    53,    54,    55,    56,    57,    58,    -1,
      -1,    61,    62,    63,    64,    65,    -1,    67,    68,    69,
      70,    71,    -1,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    -1,    85,    86,    87,    88,    89,
      90,    -1,    92,    93,    94,    95,    -1,    -1,    -1,    99,
      -1,    -1,    -1,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,   117,   118,   119,
     120,   121,    -1,   123,   124,   125,   126,   127,    -1,    -1,
     130,   131,   132,   133,   134,    -1,   136,   137,   138,    -1,
     140,   141,   142,    -1,   144,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,    -1,   157,   158,   159,
     160,    -1,   162,    -1,   164,   165,    -1,   167,   168,   169,
     170,   171,   172,    -1,   174,    -1,   176,   177,    -1,   179,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
      -1,   191,   192,   193,   194,   195,   196,    -1,   198,   199,
     200,   201,   202,   203,   204,   205,   206,    -1,   208,    -1,
     210,   211,   212,   213,   214,   215,   216,   217,   218,   219,
      -1,    -1,   222,   223,   224,   225,    -1,   227,   228,   229,
      -1,    -1,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,    -1,   263,   264,   265,   266,    -1,   268,   269,
     270,   271,   272,   273,    -1,   275,   276,   277,    -1,   279,
     280,   281,    -1,    -1,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
      -1,   301,   302,   303,   304,   305,   306,   307,   308,   309,
      -1,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,    -1,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,    -1,   358,   359,
     360,   361,   362,    -1,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,    -1,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,    -1,   389,
     390,    -1,   392,   393,   394,   395,   396,   397,   398,    -1,
     400,   401,    -1,    -1,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,    -1,    -1,   419,
     420,   421,   422,   423,    -1,    -1,   426,   427,   428,   429,
     430,   431,   432,    -1,   434,   435,   436,   437,   438,   439,
      -1,    -1,   442,    -1,    -1,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,     3,     4,     5,    -1,
      -1,    -1,     9,   473,   474,    -1,    -1,    -1,    -1,    -1,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    -1,    53,    54,    55,    56,
      57,    58,    -1,    -1,    61,    62,    63,    64,    65,    -1,
      67,    68,    69,    70,    71,    -1,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    -1,    85,    86,
      87,    88,    89,    90,    -1,    92,    93,    94,    95,    -1,
      -1,    -1,    99,    -1,    -1,    -1,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,    -1,   116,
     117,   118,   119,   120,   121,    -1,   123,   124,   125,   126,
     127,    -1,    -1,   130,   131,   132,   133,   134,    -1,   136,
     137,   138,    -1,   140,   141,   142,    -1,   144,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,    -1,
     157,   158,   159,   160,    -1,   162,    -1,   164,   165,    -1,
     167,   168,   169,   170,   171,   172,    -1,   174,    -1,   176,
     177,    -1,   179,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   189,    -1,   191,   192,   193,   194,   195,   196,
      -1,   198,   199,   200,   201,   202,   203,   204,   205,   206,
      -1,   208,    -1,   210,   211,   212,   213,   214,   215,   216,
     217,   218,   219,    -1,    -1,   222,   223,   224,   225,    -1,
     227,   228,   229,    -1,    -1,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,    -1,   263,   264,   265,   266,
      -1,   268,   269,   270,   271,   272,   273,    -1,   275,   276,
     277,    -1,   279,   280,   281,    -1,    -1,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,    -1,   301,   302,   303,   304,   305,   306,
     307,   308,   309,    -1,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,    -1,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,    -1,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
      -1,   358,   359,   360,   361,   362,    -1,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,    -1,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,    -1,   389,   390,    -1,   392,   393,   394,   395,   396,
     397,   398,    -1,   400,   401,    -1,    -1,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
      -1,    -1,   419,   420,   421,   422,   423,    -1,    -1,   426,
     427,   428,   429,   430,   431,   432,    -1,   434,   435,   436,
     437,   438,   439,    -1,    -1,   442,    -1,    -1,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,     3,
       4,     5,    -1,    -1,    -1,     9,   473,   474,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    -1,    53,
      54,    55,    56,    57,    58,    -1,    -1,    61,    62,    63,
      64,    65,    -1,    67,    68,    69,    70,    71,    -1,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      -1,    85,    86,    87,    88,    89,    90,    -1,    92,    93,
      94,    95,    -1,    -1,    -1,    99,    -1,    -1,    -1,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,    -1,
     114,    -1,   116,   117,   118,   119,   120,   121,    -1,   123,
     124,   125,   126,   127,    -1,    -1,   130,   131,   132,   133,
     134,    -1,   136,   137,   138,    -1,   140,   141,   142,    -1,
     144,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,    -1,   157,   158,   159,   160,    -1,   162,    -1,
     164,   165,    -1,   167,   168,   169,   170,   171,   172,    -1,
     174,    -1,   176,   177,    -1,   179,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,    -1,   191,   192,   193,
     194,   195,   196,    -1,   198,   199,   200,   201,   202,   203,
     204,   205,   206,    -1,   208,    -1,   210,   211,   212,   213,
     214,   215,   216,   217,   218,   219,    -1,    -1,   222,   223,
     224,   225,    -1,   227,   228,   229,    -1,    -1,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,    -1,   263,
     264,   265,   266,    -1,   268,   269,   270,   271,   272,   273,
      -1,   275,   276,   277,    -1,   279,   280,   281,    -1,    -1,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,    -1,   301,   302,   303,
     304,   305,   306,   307,   308,   309,    -1,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,    -1,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,    -1,   358,   359,   360,   361,   362,    -1,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
      -1,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,    -1,   389,   390,    -1,   392,   393,
     394,   395,   396,   397,   398,    -1,   400,   401,    -1,    -1,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,    -1,    -1,   419,   420,   421,   422,   423,
      -1,    -1,   426,   427,   428,   429,   430,   431,   432,    -1,
     434,   435,   436,   437,   438,   439,    -1,    -1,   442,    -1,
      -1,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,    -1,    -1,     8,    -1,    -1,    11,    -1,   473,
     474,    15,    16,    17,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,     8,    -1,    -1,    11,    -1,    -1,    32,    15,
      16,    17,    36,    -1,    -1,    -1,    40,    -1,    -1,    -1,
      -1,    -1,    -1,    47,    -1,    -1,    32,    -1,    -1,    -1,
       8,    -1,    -1,    11,    40,    -1,    -1,    15,    16,    17,
      -1,    47,    -1,    -1,    -1,    -1,    -1,    -1,    72,    -1,
      -1,    -1,    -1,    -1,    32,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    -1,    -1,    -1,    72,    -1,     8,    47,
      -1,    11,    -1,    -1,    -1,    15,    16,    17,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    32,    -1,    72,    35,    -1,    -1,   122,    -1,
      40,    -1,    -1,    -1,    -1,    -1,    -1,    47,    -1,    -1,
      -1,    -1,     8,    -1,    -1,    11,    -1,    -1,    -1,    15,
      16,    17,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    72,    -1,    -1,    -1,    32,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    40,    -1,    -1,   171,    -1,    -1,
      -1,    47,    -1,    -1,    -1,   161,    -1,    -1,    -1,    -1,
     166,   185,    -1,    -1,    -1,   171,   190,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    72,    -1,    -1,   185,
      -1,    -1,   160,    -1,   190,    -1,    -1,   211,   212,    -1,
      -1,    -1,    -1,   171,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   225,    -1,    -1,    -1,   211,   212,   185,    -1,    -1,
      -1,    -1,   190,    -1,    -1,    -1,    -1,    -1,    -1,   225,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   171,    -1,   211,   212,    -1,    -1,    -1,   262,    -1,
      -1,   265,    -1,    -1,    -1,   185,    -1,   225,    -1,    -1,
     190,    -1,    -1,    -1,    -1,   279,   262,    -1,   282,   265,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   211,   212,   279,    -1,   171,   282,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   262,   225,    -1,   265,    -1,   185,
      -1,    -1,    -1,    -1,   190,    -1,    -1,    -1,    -1,    -1,
      -1,   279,    -1,    -1,   282,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   211,   212,    -1,    -1,    -1,
      -1,    -1,   262,    -1,    -1,   265,    -1,   305,    -1,   225,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   279,
      -1,     8,   282,    -1,    11,   369,    -1,    -1,    15,    16,
      17,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   369,    -1,    32,   262,    -1,    35,   265,
      -1,    -1,    -1,    40,    -1,    -1,    -1,    -1,    -1,    -1,
      47,    -1,    -1,   279,    -1,    -1,   282,    -1,    -1,    -1,
      -1,   369,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   425,    -1,    -1,   300,    72,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   369,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   466,    -1,    -1,   469,   470,   471,    -1,   473,
     474,   475,   476,   477,   478,    -1,    -1,    -1,    -1,    -1,
     466,    -1,    -1,   469,   470,   471,    -1,   473,   474,   475,
     476,   477,   478,   369,    -1,    -1,    -1,     8,    -1,    -1,
      11,    -1,    -1,    -1,    15,    16,    17,    -1,   466,    -1,
      -1,   469,   470,   471,    -1,   473,   474,   475,   476,   477,
     478,    32,    -1,    -1,   171,    -1,    -1,    -1,    -1,    40,
      -1,    -1,    -1,    -1,    -1,    -1,    47,    -1,   185,    -1,
      -1,    -1,    -1,   190,    -1,    -1,   466,    -1,    -1,   469,
     470,   471,    -1,   473,   474,   475,   476,   477,   478,    -1,
      -1,    72,    -1,    -1,   211,   212,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   225,    -1,
       8,    -1,    -1,    11,    -1,    -1,    -1,    15,    16,    17,
     466,    -1,    -1,   469,   470,   471,    -1,   473,   474,   475,
     476,   477,   478,    -1,    32,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    -1,    -1,   262,    -1,    -1,   265,    47,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   279,    -1,    -1,   282,    -1,    -1,     8,    -1,
      -1,    11,    -1,    -1,    72,    15,    16,    17,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   166,    -1,    -1,    -1,    -1,
     171,    -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      40,    -1,    -1,    -1,   185,    -1,    -1,    47,    -1,   190,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     211,   212,    72,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   225,    -1,     8,    -1,    -1,    11,
      -1,    -1,   369,    15,    16,    17,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      32,    -1,    -1,   171,    -1,    -1,    -1,    -1,    40,    -1,
      -1,   262,    -1,    -1,   265,    47,    -1,   185,    -1,    -1,
      -1,    -1,   190,    -1,    -1,    -1,    -1,    -1,   279,    -1,
      -1,   282,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      72,    -1,    -1,   211,   212,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   225,    -1,    -1,
      -1,   171,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   185,    -1,    -1,    -1,   466,
     190,    -1,   469,   470,   471,    -1,   473,   474,   475,   476,
     477,   478,    -1,    -1,   262,    -1,    -1,   265,    -1,    -1,
      -1,   211,   212,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   279,    -1,    -1,   282,   225,    -1,     8,   369,    -1,
      11,    -1,    -1,    -1,    15,    16,    17,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   171,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,
      -1,    -1,   262,   185,    -1,   265,    47,    -1,   190,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   279,
      -1,    -1,   282,    -1,    -1,    -1,    -1,    -1,    -1,   211,
     212,    72,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   225,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   369,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   466,    -1,    -1,   469,   470,
     471,    -1,   473,   474,   475,   476,   477,   478,    -1,    -1,
     262,   399,    -1,   265,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   279,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   369,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     171,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   185,    -1,    -1,    -1,   466,   190,
      -1,   469,   470,   471,    -1,   473,   474,   475,   476,   477,
     478,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     211,   212,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   225,    -1,    -1,   369,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   466,    -1,    -1,   469,
     470,   471,    -1,   473,   474,   475,   476,   477,   478,    -1,
      -1,    -1,    -1,    -1,   265,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   279,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   466,    -1,    -1,   469,   470,   471,
      -1,   473,   474,   475,   476,   477,   478,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   369,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,     3,   466,     5,    -1,   469,   470,
     471,    -1,   473,   474,   475,   476,   477,   478,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    26,    27,    28,
      29,    30,    31,    32,    33,    34,    35,    36,    37,    38,
      39,    40,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,    73,    74,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    86,    87,    88,
      89,    90,    91,    92,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     129,   130,   131,   132,   133,   134,   135,   136,   137,   138,
     139,   140,   141,   142,   143,   144,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   173,   174,   175,   176,   177,   178,
     179,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   210,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      26,    27,    28,    29,    30,    31,    32,    33,    34,    35,
      36,    37,    38,    39,    40,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,    74,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      86,    87,    88,    89,    90,    91,    92,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
     136,   137,   138,   139,   140,   141,   142,   143,   144,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    26,    27,    28,    29,    30,    31,    32,
      33,    34,    35,    36,    37,    38,    39,    40,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
      73,    74,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    86,    87,    88,    89,    90,    91,    92,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   129,   130,   131,   132,
     133,   134,   135,   136,   137,   138,   139,   140,   141,   142,
     143,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     173,   174,   175,   176,   177,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    -1,    53,    54,    55,    56,    57,    58,    -1,
      60,    61,    62,    63,    64,    65,    -1,    67,    68,    69,
      70,    71,    -1,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    -1,    85,    86,    87,    88,    89,
      90,    -1,    92,    93,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,    -1,   114,    -1,   116,   117,   118,   119,
     120,   121,    -1,   123,   124,   125,   126,   127,    -1,    -1,
     130,   131,   132,   133,   134,    -1,   136,   137,   138,    -1,
     140,   141,   142,    -1,   144,   145,   146,   147,   148,   149,
     150,   151,   152,   153,    -1,   155,    -1,   157,   158,   159,
     160,    -1,   162,    -1,   164,   165,    -1,   167,   168,   169,
     170,   171,   172,    -1,   174,    -1,   176,   177,    -1,   179,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
      -1,   191,   192,   193,   194,   195,   196,    -1,   198,   199,
     200,   201,   202,   203,   204,   205,   206,    -1,   208,    -1,
     210,   211,   212,   213,   214,   215,   216,   217,   218,   219,
      -1,    -1,   222,   223,   224,   225,    -1,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,    -1,   263,   264,   265,   266,    -1,   268,   269,
     270,   271,   272,   273,    -1,   275,   276,    -1,    -1,   279,
     280,   281,    -1,    -1,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
      -1,   301,   302,   303,   304,   305,   306,   307,   308,   309,
      -1,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,    -1,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,    -1,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,    -1,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,    -1,   389,
     390,    -1,   392,   393,   394,   395,   396,   397,   398,    -1,
     400,   401,    -1,    -1,   404,   405,   406,   407,   408,    -1,
     410,   411,   412,   413,   414,   415,   416,    -1,    -1,   419,
     420,   421,   422,   423,   424,    -1,   426,   427,   428,   429,
     430,   431,   432,    -1,   434,   435,   436,   437,   438,   439,
      -1,    -1,   442,    -1,    -1,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,     3,    -1,     5,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    -1,    53,    54,    55,    56,
      57,    58,    -1,    -1,    61,    62,    63,    64,    65,    -1,
      67,    68,    69,    70,    71,    -1,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    -1,    85,    86,
      87,    88,    89,    90,    -1,    92,    93,    94,    95,    -1,
      -1,    -1,    99,    -1,    -1,    -1,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,    -1,   114,    -1,   116,
     117,   118,   119,   120,   121,    -1,   123,   124,   125,   126,
     127,    -1,    -1,   130,   131,   132,   133,   134,    -1,   136,
     137,   138,    -1,   140,   141,   142,    -1,   144,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,    -1,
     157,   158,   159,   160,    -1,   162,    -1,   164,   165,    -1,
     167,   168,   169,   170,   171,   172,    -1,   174,    -1,   176,
     177,    -1,   179,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   189,    -1,   191,   192,   193,   194,   195,   196,
      -1,   198,   199,   200,   201,   202,   203,   204,   205,   206,
      -1,   208,    -1,   210,   211,   212,   213,   214,   215,   216,
     217,   218,   219,    -1,    -1,   222,   223,   224,   225,    -1,
     227,   228,   229,    -1,    -1,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,    -1,   263,   264,   265,   266,
      -1,   268,   269,   270,   271,   272,   273,    -1,   275,   276,
     277,    -1,   279,   280,   281,    -1,    -1,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,    -1,   301,   302,   303,   304,   305,   306,
     307,   308,   309,    -1,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,    -1,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,    -1,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
      -1,   358,   359,   360,   361,   362,    -1,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,    -1,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,    -1,   389,   390,    -1,   392,   393,   394,   395,   396,
     397,   398,    -1,   400,   401,    -1,    -1,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
      -1,    -1,   419,   420,   421,   422,   423,    -1,    -1,   426,
     427,   428,   429,   430,   431,   432,    -1,   434,   435,   436,
     437,   438,   439,    -1,    -1,   442,    -1,    -1,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    30,    31,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    -1,    53,
      54,    55,    56,    57,    58,    -1,    -1,    61,    62,    63,
      64,    65,    -1,    67,    68,    69,    70,    71,    -1,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      -1,    85,    86,    87,    88,    89,    90,    -1,    92,    93,
      94,    95,    -1,    -1,    -1,    99,    -1,    -1,    -1,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,    -1,
     114,    -1,   116,   117,   118,   119,   120,   121,    -1,   123,
     124,   125,   126,   127,    -1,    -1,   130,   131,   132,   133,
     134,    -1,   136,   137,   138,    -1,   140,   141,   142,    -1,
     144,   145,   146,   147,   148,   149,   150,   151,   152,   153,
      -1,   155,    -1,   157,   158,   159,   160,    -1,   162,    -1,
     164,   165,    -1,   167,   168,   169,   170,   171,   172,    -1,
     174,    -1,   176,   177,    -1,   179,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,    -1,   191,   192,   193,
     194,   195,   196,    -1,   198,   199,   200,   201,   202,   203,
     204,   205,   206,    -1,   208,    -1,   210,   211,   212,   213,
     214,   215,   216,   217,   218,   219,    -1,    -1,   222,   223,
     224,   225,    -1,   227,   228,   229,    -1,    -1,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,    -1,   263,
     264,   265,   266,    -1,   268,   269,   270,   271,   272,   273,
      -1,   275,   276,    -1,    -1,   279,   280,   281,    -1,    -1,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,    -1,   301,   302,   303,
     304,   305,   306,   307,   308,   309,    -1,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,    -1,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,    -1,   358,   359,   360,   361,   362,    -1,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
      -1,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,    -1,   389,   390,    -1,   392,   393,
     394,   395,   396,   397,   398,    -1,   400,   401,    -1,    -1,
     404,   405,   406,   407,   408,    -1,   410,   411,   412,   413,
     414,   415,   416,    -1,    -1,   419,   420,   421,   422,   423,
      -1,    -1,   426,   427,   428,   429,   430,   431,   432,    -1,
     434,   435,   436,   437,   438,   439,    -1,    -1,   442,    -1,
      -1,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    -1,    -1,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    92,    93,    94,    95,    -1,    -1,    -1,    99,    -1,
      -1,    -1,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,    -1,   114,    -1,   116,   117,   118,   119,   120,
     121,    -1,   123,   124,   125,   126,   127,    -1,    -1,   130,
     131,   132,   133,   134,    -1,   136,   137,   138,    -1,   140,
     141,   142,    -1,   144,   145,   146,   147,   148,   149,   150,
     151,   152,   153,    -1,   155,    -1,   157,   158,   159,   160,
      -1,   162,    -1,   164,   165,    -1,   167,   168,   169,   170,
     171,   172,    -1,   174,    -1,   176,   177,    -1,   179,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   189,    -1,
     191,   192,   193,   194,   195,   196,    -1,   198,   199,   200,
     201,   202,   203,   204,   205,   206,    -1,   208,    -1,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   219,    -1,
      -1,   222,   223,   224,   225,    -1,   227,   228,   229,    -1,
      -1,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,    -1,   263,   264,   265,   266,    -1,   268,   269,   270,
     271,   272,   273,    -1,   275,   276,    -1,    -1,   279,   280,
     281,    -1,    -1,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,    -1,
     301,   302,   303,   304,   305,   306,   307,   308,   309,    -1,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,    -1,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,    -1,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,    -1,   358,   359,   360,
     361,   362,    -1,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,    -1,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,    -1,   389,   390,
      -1,   392,   393,   394,   395,   396,   397,   398,    -1,   400,
     401,    -1,    -1,   404,   405,   406,   407,   408,    -1,   410,
     411,   412,   413,   414,   415,   416,    -1,    -1,   419,   420,
     421,   422,   423,    -1,    -1,   426,   427,   428,   429,   430,
     431,   432,    -1,   434,   435,   436,   437,   438,   439,    -1,
      -1,   442,    -1,    -1,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    -1,    44,    45,    46,    47,
      48,    -1,    50,    51,    -1,    53,    54,    55,    56,    57,
      58,    -1,    -1,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,    71,    -1,    -1,    74,    75,    76,    77,
      78,    79,    -1,    81,    82,    83,    84,    85,    86,    87,
      88,    89,    90,    -1,    -1,    93,    94,    95,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,    -1,   114,    -1,   116,   117,
     118,   119,   120,   121,    -1,   123,   124,   125,   126,   127,
      -1,    -1,   130,   131,   132,   133,   134,    -1,   136,   137,
     138,    -1,   140,   141,   142,    -1,   144,   145,   146,   147,
     148,   149,   150,   151,   152,   153,    -1,   155,    -1,   157,
     158,   159,   160,    -1,   162,   163,   164,    -1,    -1,    -1,
     168,   169,   170,    -1,   172,    -1,   174,    -1,   176,   177,
      -1,   179,   180,   181,   182,   183,   184,    -1,   186,   187,
     188,   189,    -1,   191,   192,   193,   194,   195,   196,    -1,
     198,    -1,   200,   201,   202,   203,   204,   205,   206,    -1,
     208,    -1,   210,    -1,    -1,   213,    -1,   215,   216,   217,
     218,   219,    -1,    -1,   222,    -1,   224,    -1,    -1,   227,
     228,   229,    -1,    -1,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,    -1,   257,
     258,   259,   260,   261,    -1,   263,   264,    -1,   266,    -1,
     268,   269,   270,   271,   272,   273,    -1,   275,   276,    -1,
      -1,   279,   280,   281,    -1,    -1,   284,   285,    -1,   287,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,    -1,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
      -1,   339,   340,    -1,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,    -1,
     358,   359,   360,   361,   362,    -1,   364,   365,   366,   367,
     368,    -1,   370,   371,   372,   373,    -1,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
      -1,   389,   390,    -1,   392,    -1,   394,   395,   396,   397,
     398,    -1,   400,   401,    -1,    -1,   404,   405,   406,   407,
     408,    -1,   410,   411,   412,   413,   414,   415,   416,    -1,
     418,   419,   420,   421,   422,   423,    -1,    -1,   426,   427,
     428,   429,   430,   431,   432,    -1,   434,    -1,   436,   437,
     438,   439,    -1,    -1,   442,    -1,    -1,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,    44,
      45,    46,    47,    48,    -1,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    -1,    -1,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    -1,    -1,    -1,
      75,    76,    77,    78,    79,    -1,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    -1,    -1,    93,    94,
      95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,    -1,   114,
      -1,   116,   117,   118,   119,   120,   121,    -1,   123,   124,
     125,   126,   127,    -1,    -1,   130,   131,   132,   133,   134,
      -1,   136,   137,   138,    -1,   140,   141,   142,    -1,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,    -1,
     155,    -1,   157,   158,   159,   160,    -1,   162,   163,   164,
      -1,    -1,    -1,   168,   169,   170,    -1,   172,    -1,   174,
      -1,   176,   177,    -1,   179,   180,   181,   182,   183,   184,
      -1,   186,   187,   188,   189,    -1,   191,   192,   193,   194,
     195,   196,    -1,   198,    -1,   200,   201,   202,   203,   204,
     205,   206,    -1,   208,    -1,   210,    -1,    -1,   213,    -1,
     215,   216,   217,   218,   219,    -1,    -1,   222,    -1,   224,
     225,    -1,   227,   228,   229,    -1,    -1,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,    -1,   257,   258,   259,   260,   261,    -1,   263,   264,
      -1,   266,    -1,   268,   269,   270,   271,   272,   273,    -1,
     275,   276,    -1,    -1,   279,   280,   281,    -1,    -1,   284,
     285,    -1,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,    -1,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,    -1,   339,   340,    -1,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,    -1,   358,   359,   360,   361,   362,    -1,   364,
     365,   366,   367,   368,    -1,   370,   371,   372,   373,    -1,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,    -1,   389,   390,    -1,   392,    -1,   394,
     395,   396,   397,   398,    -1,   400,   401,    -1,    -1,   404,
     405,   406,   407,   408,    -1,   410,   411,   412,   413,   414,
     415,   416,    -1,   418,   419,   420,   421,   422,   423,    -1,
      -1,   426,   427,   428,   429,   430,   431,   432,    -1,   434,
      -1,   436,   437,   438,   439,    -1,    -1,   442,    -1,    -1,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    30,    31,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    -1,    44,    45,    46,    47,    48,    -1,    50,    51,
      -1,    53,    54,    55,    56,    57,    58,    -1,    -1,    61,
      62,    63,    64,    65,    -1,    67,    68,    69,    70,    71,
      -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,    81,
      82,    83,    -1,    85,    86,    87,    88,    89,    90,    -1,
      -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,    -1,   114,    -1,   116,   117,   118,   119,   120,   121,
      -1,   123,   124,   125,   126,   127,    -1,    -1,   130,   131,
     132,   133,   134,    -1,   136,   137,   138,    -1,   140,   141,
     142,    -1,   144,   145,   146,   147,   148,   149,   150,   151,
     152,   153,    -1,   155,    -1,   157,   158,   159,   160,    -1,
     162,    -1,   164,    -1,    -1,    -1,   168,   169,   170,    -1,
     172,    -1,   174,    -1,   176,   177,    -1,   179,   180,   181,
     182,   183,   184,    -1,   186,   187,   188,   189,    -1,   191,
     192,   193,   194,   195,   196,    -1,   198,    -1,   200,   201,
     202,   203,   204,   205,   206,    -1,   208,    -1,   210,    -1,
      -1,   213,    -1,   215,   216,   217,   218,   219,    -1,    -1,
     222,    -1,   224,    -1,    -1,   227,   228,   229,    -1,    -1,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,    -1,   257,   258,   259,   260,   261,
      -1,   263,   264,    -1,   266,    -1,   268,   269,   270,   271,
     272,   273,    -1,   275,   276,    -1,    -1,   279,   280,   281,
      -1,    -1,   284,   285,    -1,   287,    -1,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,    -1,   301,
     302,   303,   304,   305,   306,   307,   308,   309,    -1,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,    -1,   339,   340,    -1,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,    -1,   358,   359,   360,   361,
     362,    -1,   364,   365,   366,   367,   368,    -1,   370,   371,
     372,   373,    -1,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,    -1,   389,   390,    -1,
     392,    -1,   394,   395,   396,   397,   398,    -1,   400,   401,
      -1,    -1,   404,   405,   406,   407,   408,    -1,   410,   411,
     412,   413,   414,   415,   416,    -1,    -1,   419,   420,   421,
     422,   423,    -1,    -1,   426,   427,   428,   429,   430,   431,
     432,    -1,   434,    -1,   436,   437,   438,   439,    -1,    -1,
     442,    -1,    -1,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,     3,     4,    -1,    -1,    -1,    -1,
       9,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    -1,    44,    45,    46,    47,    48,
      -1,    50,    51,    -1,    53,    54,    55,    56,    57,    58,
      -1,    -1,    61,    62,    63,    64,    65,    -1,    67,    68,
      69,    70,    71,    -1,    -1,    -1,    75,    76,    77,    78,
      79,    -1,    81,    82,    83,    -1,    85,    86,    87,    88,
      89,    90,    -1,    -1,    93,    94,    95,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,    -1,   114,    -1,   116,   117,   118,
     119,   120,   121,    -1,   123,   124,   125,   126,   127,    -1,
      -1,   130,   131,   132,   133,   134,    -1,   136,   137,   138,
      -1,   140,   141,   142,    -1,   144,   145,   146,   147,   148,
     149,   150,   151,   152,   153,    -1,   155,    -1,   157,   158,
     159,   160,    -1,   162,    -1,   164,    -1,    -1,    -1,   168,
     169,   170,    -1,   172,    -1,   174,    -1,   176,   177,    -1,
     179,   180,   181,   182,   183,   184,    -1,   186,   187,   188,
     189,    -1,   191,   192,   193,   194,   195,   196,    -1,   198,
      -1,   200,   201,   202,   203,   204,   205,   206,    -1,   208,
      -1,   210,    -1,    -1,   213,    -1,   215,   216,   217,   218,
     219,    -1,    -1,   222,    -1,   224,    -1,    -1,   227,   228,
     229,    -1,    -1,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,    -1,   257,   258,
     259,   260,   261,    -1,   263,   264,    -1,   266,    -1,   268,
     269,   270,   271,   272,   273,    -1,   275,   276,    -1,    -1,
     279,   280,   281,    -1,    -1,   284,   285,    -1,   287,    -1,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,    -1,   301,   302,   303,   304,   305,   306,   307,   308,
     309,    -1,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,    -1,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,    -1,
     339,   340,    -1,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,    -1,   358,
     359,   360,   361,   362,    -1,   364,   365,   366,   367,   368,
      -1,   370,   371,   372,   373,    -1,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,    -1,
     389,   390,    -1,   392,    -1,   394,   395,   396,   397,   398,
      -1,   400,   401,    -1,    -1,   404,   405,   406,   407,   408,
      -1,   410,   411,   412,   413,   414,   415,   416,    -1,    -1,
     419,   420,   421,   422,   423,    -1,    -1,   426,   427,   428,
     429,   430,   431,   432,    -1,   434,    -1,   436,   437,   438,
     439,    -1,    -1,   442,    -1,    -1,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      26,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    -1,    44,    45,
      46,    47,    48,    -1,    50,    51,    -1,    53,    54,    55,
      56,    57,    58,    -1,    -1,    61,    62,    63,    64,    65,
      -1,    67,    68,    69,    70,    71,    -1,    -1,    -1,    75,
      76,    77,    78,    79,    -1,    81,    82,    83,    -1,    85,
      86,    87,    88,    89,    90,    -1,    -1,    93,    94,    95,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,    -1,   114,    -1,
     116,   117,   118,   119,   120,   121,    -1,   123,   124,   125,
     126,   127,    -1,    -1,   130,   131,   132,   133,   134,    -1,
     136,   137,   138,    -1,   140,   141,   142,    -1,   144,   145,
     146,   147,   148,   149,   150,   151,   152,   153,    -1,   155,
      -1,   157,   158,   159,   160,    -1,   162,    -1,   164,    -1,
      -1,    -1,   168,   169,   170,    -1,   172,    -1,   174,    -1,
     176,   177,    -1,   179,   180,   181,   182,   183,   184,    -1,
     186,   187,   188,   189,    -1,   191,   192,   193,   194,   195,
     196,    -1,   198,    -1,   200,   201,   202,   203,   204,   205,
     206,    -1,   208,    -1,   210,    -1,    -1,   213,    -1,   215,
     216,   217,   218,   219,    -1,    -1,   222,    -1,   224,    -1,
      -1,   227,   228,   229,    -1,    -1,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
      -1,   257,   258,   259,   260,   261,    -1,   263,   264,    -1,
     266,    -1,   268,   269,   270,   271,   272,   273,    -1,   275,
     276,    -1,    -1,   279,   280,   281,    -1,    -1,   284,   285,
      -1,   287,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,    -1,   301,   302,   303,   304,   305,
     306,   307,   308,   309,    -1,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,    -1,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,    -1,   339,   340,    -1,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,    -1,   358,   359,   360,   361,   362,    -1,   364,   365,
     366,   367,   368,    -1,   370,   371,   372,   373,    -1,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,    -1,   389,   390,    -1,   392,    -1,   394,   395,
     396,   397,   398,    -1,   400,   401,    -1,    -1,   404,   405,
     406,   407,   408,    -1,   410,   411,   412,   413,   414,   415,
     416,    -1,    -1,   419,   420,   421,   422,   423,    -1,    -1,
     426,   427,   428,   429,   430,   431,   432,    -1,   434,    -1,
     436,   437,   438,   439,    -1,    -1,   442,    -1,    -1,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    26,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      -1,    44,    45,    46,    47,    48,    -1,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    -1,    -1,    61,    62,
      63,    64,    65,    -1,    67,    68,    69,    70,    71,    -1,
      -1,    -1,    75,    76,    77,    78,    79,    -1,    81,    82,
      83,    -1,    85,    86,    87,    88,    89,    90,    -1,    -1,
      93,    94,    95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
      -1,   114,    -1,   116,   117,   118,   119,   120,   121,    -1,
     123,   124,   125,   126,   127,    -1,    -1,   130,   131,   132,
     133,   134,    -1,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,    -1,   155,    -1,   157,   158,   159,   160,    -1,   162,
      -1,   164,    -1,    -1,    -1,   168,   169,   170,    -1,   172,
      -1,   174,    -1,   176,   177,    -1,   179,   180,   181,   182,
     183,   184,    -1,   186,   187,   188,   189,    -1,   191,   192,
     193,   194,   195,   196,    -1,   198,    -1,   200,   201,   202,
     203,   204,   205,   206,    -1,   208,    -1,   210,    -1,    -1,
     213,    -1,   215,   216,   217,   218,   219,    -1,    -1,   222,
      -1,   224,    -1,    -1,   227,   228,   229,    -1,    -1,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,    -1,   257,   258,   259,   260,   261,    -1,
     263,   264,    -1,   266,    -1,   268,   269,   270,   271,   272,
     273,    -1,   275,   276,    -1,    -1,   279,   280,   281,    -1,
      -1,   284,   285,    -1,   287,    -1,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,    -1,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,    -1,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,    -1,   339,   340,    -1,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,    -1,   358,   359,   360,   361,   362,
      -1,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,    -1,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,    -1,   389,   390,    -1,   392,
      -1,   394,   395,   396,   397,   398,    -1,   400,   401,    -1,
      -1,   404,   405,   406,   407,   408,    -1,   410,   411,   412,
     413,   414,   415,   416,    -1,    -1,   419,   420,   421,   422,
     423,    -1,    -1,   426,   427,   428,   429,   430,   431,   432,
      -1,   434,    -1,   436,   437,   438,   439,    -1,    -1,   442,
      -1,    -1,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    -1,    44,    45,    46,    47,    48,    -1,
      50,    51,    -1,    53,    54,    55,    56,    57,    58,    -1,
      -1,    61,    62,    63,    64,    65,    -1,    67,    68,    69,
      70,    71,    -1,    -1,    -1,    75,    76,    77,    78,    79,
      -1,    81,    82,    83,    -1,    85,    86,    87,    88,    89,
      90,    -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,    -1,   114,    -1,   116,   117,   118,   119,
     120,   121,    -1,   123,   124,   125,   126,   127,    -1,    -1,
     130,   131,   132,   133,   134,    -1,   136,   137,   138,    -1,
     140,   141,   142,    -1,   144,   145,   146,   147,   148,   149,
     150,   151,   152,   153,    -1,   155,    -1,   157,   158,   159,
     160,    -1,   162,    -1,   164,    -1,    -1,    -1,   168,   169,
     170,    -1,   172,    -1,   174,    -1,   176,   177,    -1,   179,
     180,   181,   182,   183,   184,    -1,   186,   187,   188,   189,
      -1,   191,   192,   193,   194,   195,   196,    -1,   198,    -1,
     200,   201,   202,   203,   204,   205,   206,    -1,   208,    -1,
     210,    -1,    -1,   213,    -1,   215,   216,   217,   218,   219,
      -1,    -1,   222,    -1,   224,    -1,    -1,   227,   228,   229,
      -1,    -1,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,    -1,   257,   258,   259,
     260,   261,    -1,   263,   264,    -1,   266,    -1,   268,   269,
     270,   271,   272,   273,    -1,   275,   276,    -1,   278,   279,
     280,   281,    -1,    -1,   284,   285,    -1,   287,    -1,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
      -1,   301,   302,   303,   304,   305,   306,   307,   308,   309,
      -1,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,    -1,   339,
     340,    -1,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,    -1,   358,   359,
     360,   361,   362,    -1,   364,   365,   366,   367,   368,    -1,
     370,   371,   372,   373,    -1,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,    -1,   389,
     390,    -1,   392,    -1,   394,   395,   396,   397,   398,    -1,
     400,   401,    -1,    -1,   404,   405,   406,   407,   408,    -1,
     410,   411,   412,   413,   414,   415,   416,    -1,    -1,   419,
     420,   421,   422,   423,    -1,    -1,   426,   427,   428,   429,
     430,   431,   432,    -1,   434,    -1,   436,   437,   438,   439,
      -1,    -1,   442,    -1,    -1,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    -1,    44,    45,    46,
      47,    48,    -1,    50,    51,    -1,    53,    54,    55,    56,
      57,    58,    -1,    -1,    61,    62,    63,    64,    65,    -1,
      67,    68,    69,    70,    71,    -1,    -1,    -1,    75,    76,
      77,    78,    79,    -1,    81,    82,    83,    -1,    85,    86,
      87,    88,    89,    90,    -1,    -1,    93,    94,    95,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,    -1,   114,    -1,   116,
     117,   118,   119,   120,   121,    -1,   123,   124,   125,   126,
     127,    -1,    -1,   130,   131,   132,   133,   134,    -1,   136,
     137,   138,    -1,   140,   141,   142,    -1,   144,   145,   146,
     147,   148,   149,   150,   151,   152,   153,    -1,   155,    -1,
     157,   158,   159,   160,    -1,   162,    -1,   164,    -1,    -1,
      -1,   168,   169,   170,    -1,   172,    -1,   174,    -1,   176,
     177,    -1,   179,   180,   181,   182,   183,   184,    -1,   186,
     187,   188,   189,    -1,   191,   192,   193,   194,   195,   196,
      -1,   198,    -1,   200,   201,   202,   203,   204,   205,   206,
      -1,   208,    -1,   210,    -1,    -1,   213,    -1,   215,   216,
     217,   218,   219,    -1,    -1,   222,    -1,   224,    -1,    -1,
     227,   228,   229,    -1,    -1,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,    -1,
     257,   258,   259,   260,   261,    -1,   263,   264,    -1,   266,
      -1,   268,   269,   270,   271,   272,   273,    -1,   275,   276,
      -1,   278,   279,   280,   281,    -1,    -1,   284,   285,    -1,
     287,    -1,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,    -1,   301,   302,   303,   304,   305,   306,
     307,   308,   309,    -1,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,    -1,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,    -1,   339,   340,    -1,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
      -1,   358,   359,   360,   361,   362,    -1,   364,   365,   366,
     367,   368,    -1,   370,   371,   372,   373,    -1,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,    -1,   389,   390,    -1,   392,    -1,   394,   395,   396,
     397,   398,    -1,   400,   401,    -1,    -1,   404,   405,   406,
     407,   408,    -1,   410,   411,   412,   413,   414,   415,   416,
      -1,    -1,   419,   420,   421,   422,   423,    -1,    -1,   426,
     427,   428,   429,   430,   431,   432,    -1,   434,    -1,   436,
     437,   438,   439,    -1,    -1,   442,    -1,    -1,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    26,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,
      44,    45,    46,    47,    48,    -1,    50,    51,    -1,    53,
      54,    55,    56,    57,    58,    -1,    -1,    61,    62,    63,
      64,    65,    -1,    67,    68,    69,    70,    71,    -1,    -1,
      -1,    75,    76,    77,    78,    79,    -1,    81,    82,    83,
      -1,    85,    86,    87,    88,    89,    90,    -1,    -1,    93,
      94,    95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,    -1,
     114,    -1,   116,   117,   118,   119,   120,   121,    -1,   123,
     124,   125,   126,   127,    -1,    -1,   130,   131,   132,   133,
     134,    -1,   136,   137,   138,    -1,   140,   141,   142,    -1,
     144,   145,   146,   147,   148,   149,   150,   151,   152,   153,
      -1,   155,    -1,   157,   158,   159,   160,    -1,   162,    -1,
     164,    -1,    -1,    -1,   168,   169,   170,    -1,   172,    -1,
     174,    -1,   176,   177,    -1,   179,   180,   181,   182,   183,
     184,    -1,   186,   187,   188,   189,    -1,   191,   192,   193,
     194,   195,   196,    -1,   198,    -1,   200,   201,   202,   203,
     204,   205,   206,    -1,   208,    -1,   210,    -1,    -1,   213,
      -1,   215,   216,   217,   218,   219,    -1,    -1,   222,    -1,
     224,    -1,    -1,   227,   228,   229,    -1,    -1,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,    -1,   257,   258,   259,   260,   261,    -1,   263,
     264,    -1,   266,    -1,   268,   269,   270,   271,   272,   273,
      -1,   275,   276,    -1,    -1,   279,   280,   281,    -1,    -1,
     284,   285,    -1,   287,    -1,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,    -1,   301,   302,   303,
     304,   305,   306,   307,   308,   309,    -1,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,    -1,   339,   340,    -1,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,    -1,   358,   359,   360,   361,   362,    -1,
     364,   365,   366,   367,   368,    -1,   370,   371,   372,   373,
      -1,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,    -1,   389,   390,    -1,   392,    -1,
     394,   395,   396,   397,   398,    -1,   400,   401,    -1,    -1,
     404,   405,   406,   407,   408,    -1,   410,   411,   412,   413,
     414,   415,   416,    -1,    -1,   419,   420,   421,   422,   423,
      -1,    -1,   426,   427,   428,   429,   430,   431,   432,    -1,
     434,    -1,   436,   437,   438,   439,    -1,    -1,   442,    -1,
      -1,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    -1,    -1,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,    -1,   114,    -1,   116,   117,   118,   119,   120,
     121,    -1,   123,   124,   125,   126,   127,    -1,    -1,   130,
     131,   132,   133,   134,    -1,   136,   137,   138,    -1,   140,
     141,   142,    -1,   144,   145,   146,   147,   148,   149,   150,
     151,   152,   153,    -1,   155,    -1,   157,   158,   159,   160,
      -1,   162,    -1,   164,    -1,    -1,    -1,   168,   169,   170,
      -1,   172,    -1,   174,    -1,   176,   177,    -1,   179,   180,
     181,   182,   183,   184,    -1,   186,   187,   188,   189,    -1,
     191,   192,   193,   194,   195,   196,    -1,   198,    -1,   200,
     201,   202,   203,   204,   205,   206,    -1,   208,    -1,   210,
      -1,    -1,   213,    -1,   215,   216,   217,   218,   219,    -1,
      -1,   222,    -1,   224,    -1,    -1,   227,   228,   229,    -1,
      -1,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,    -1,   257,   258,   259,   260,
     261,    -1,   263,   264,    -1,   266,    -1,   268,   269,   270,
     271,   272,   273,    -1,   275,   276,    -1,    -1,   279,   280,
     281,    -1,    -1,   284,   285,    -1,   287,    -1,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,    -1,
     301,   302,   303,   304,   305,   306,   307,   308,   309,    -1,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,    -1,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,    -1,   339,   340,
      -1,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,    -1,   358,   359,   360,
     361,   362,    -1,   364,   365,   366,   367,   368,    -1,   370,
     371,   372,   373,    -1,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,    -1,   389,   390,
     391,   392,    -1,   394,   395,   396,   397,   398,    -1,   400,
     401,    -1,    -1,   404,   405,   406,   407,   408,    -1,   410,
     411,   412,   413,   414,   415,   416,    -1,    -1,   419,   420,
     421,   422,   423,    -1,    -1,   426,   427,   428,   429,   430,
     431,   432,    -1,   434,    -1,   436,   437,   438,   439,    -1,
      -1,   442,    -1,    -1,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    35,    -1,    37,
      38,    -1,    40,    41,    42,    -1,    44,    45,    46,    47,
      48,    -1,    50,    51,    -1,    53,    54,    55,    56,    57,
      58,    -1,    -1,    61,    62,    63,    64,    65,    -1,    67,
      68,    69,    70,    71,    -1,    -1,    -1,    75,    76,    77,
      78,    79,    -1,    81,    82,    83,    -1,    85,    86,    87,
      88,    89,    90,    -1,    -1,    93,    94,    95,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,    -1,   114,    -1,   116,   117,
     118,   119,   120,   121,    -1,   123,   124,   125,   126,   127,
      -1,    -1,   130,   131,   132,   133,   134,    -1,   136,   137,
     138,    -1,   140,   141,   142,    -1,   144,   145,   146,   147,
     148,   149,   150,   151,   152,   153,    -1,   155,    -1,   157,
     158,   159,   160,    -1,   162,    -1,   164,    -1,    -1,    -1,
     168,   169,   170,    -1,   172,    -1,   174,    -1,   176,   177,
      -1,   179,   180,   181,   182,   183,   184,    -1,   186,   187,
     188,   189,    -1,   191,   192,   193,   194,   195,   196,    -1,
     198,    -1,   200,   201,   202,   203,   204,   205,   206,    -1,
     208,    -1,   210,    -1,    -1,   213,    -1,   215,   216,   217,
     218,   219,    -1,    -1,   222,    -1,   224,    -1,    -1,   227,
     228,   229,    -1,    -1,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,    -1,   257,
     258,   259,   260,   261,    -1,   263,   264,    -1,   266,    -1,
     268,   269,   270,   271,   272,   273,    -1,   275,   276,    -1,
      -1,   279,   280,   281,    -1,    -1,   284,   285,    -1,   287,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,    -1,   301,   302,   303,   304,   305,   306,   307,
     308,   309,    -1,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
      -1,   339,   340,    -1,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,    -1,
     358,   359,   360,   361,   362,    -1,   364,   365,   366,   367,
     368,    -1,   370,   371,   372,   373,    -1,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
      -1,   389,   390,    -1,   392,    -1,   394,   395,   396,   397,
     398,    -1,   400,   401,    -1,    -1,   404,   405,   406,   407,
     408,    -1,   410,   411,   412,   413,   414,   415,   416,    -1,
      -1,   419,   420,   421,   422,   423,    -1,    -1,   426,   427,
     428,   429,   430,   431,   432,    -1,   434,    -1,   436,   437,
     438,   439,    -1,    -1,   442,    -1,    -1,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      35,    -1,    37,    38,    -1,    40,    41,    42,    -1,    44,
      45,    46,    47,    48,    -1,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    -1,    -1,    61,    62,    63,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    -1,    -1,
      75,    76,    77,    78,    79,    -1,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    -1,    -1,    93,    94,
      95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,    -1,   114,
      -1,   116,   117,   118,   119,   120,   121,    -1,   123,   124,
     125,   126,   127,    -1,    -1,   130,   131,   132,   133,   134,
      -1,   136,   137,   138,    -1,   140,   141,   142,    -1,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,    -1,
     155,    -1,   157,   158,   159,   160,    -1,   162,    -1,   164,
      -1,    -1,    -1,   168,   169,   170,    -1,   172,    -1,   174,
      -1,   176,   177,    -1,   179,   180,   181,   182,   183,   184,
      -1,   186,   187,   188,   189,    -1,   191,   192,   193,   194,
     195,   196,    -1,   198,    -1,   200,   201,   202,   203,   204,
     205,   206,    -1,   208,    -1,   210,    -1,    -1,   213,    -1,
     215,   216,   217,   218,   219,    -1,    -1,   222,    -1,   224,
      -1,    -1,   227,   228,   229,    -1,    -1,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,    -1,   257,   258,   259,   260,   261,    -1,   263,   264,
      -1,   266,    -1,   268,   269,   270,   271,   272,   273,    -1,
     275,   276,    -1,    -1,   279,   280,   281,    -1,    -1,   284,
     285,    -1,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,    -1,   301,   302,   303,   304,
     305,   306,   307,   308,   309,    -1,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,    -1,   339,   340,    -1,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,    -1,   358,   359,   360,   361,   362,    -1,   364,
     365,   366,   367,   368,    -1,   370,   371,   372,   373,    -1,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,    -1,   389,   390,    -1,   392,    -1,   394,
     395,   396,   397,   398,    -1,   400,   401,    -1,    -1,   404,
     405,   406,   407,   408,    -1,   410,   411,   412,   413,   414,
     415,   416,    -1,    -1,   419,   420,   421,   422,   423,    -1,
      -1,   426,   427,   428,   429,   430,   431,   432,    -1,   434,
      -1,   436,   437,   438,   439,    -1,    -1,   442,    -1,    -1,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    -1,    44,    45,    46,    47,    48,    -1,    50,    51,
      -1,    53,    54,    55,    56,    57,    58,    -1,    -1,    61,
      62,    63,    64,    65,    -1,    67,    68,    69,    70,    71,
      -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,    81,
      82,    83,    -1,    85,    86,    87,    88,    89,    90,    -1,
      -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,    -1,   114,    -1,   116,   117,   118,   119,   120,   121,
      -1,   123,   124,   125,   126,   127,    -1,    -1,   130,   131,
     132,   133,   134,    -1,   136,   137,   138,    -1,   140,   141,
     142,    -1,   144,   145,   146,   147,   148,   149,   150,   151,
     152,   153,    -1,   155,    -1,   157,   158,   159,   160,    -1,
     162,    -1,   164,    -1,    -1,    -1,   168,   169,   170,    -1,
     172,    -1,   174,    -1,   176,   177,    -1,   179,   180,   181,
     182,   183,   184,    -1,   186,   187,   188,   189,    -1,   191,
     192,   193,   194,   195,   196,    -1,   198,    -1,   200,   201,
     202,   203,   204,   205,   206,    -1,   208,    -1,   210,    -1,
      -1,   213,    -1,   215,   216,   217,   218,   219,    -1,    -1,
     222,    -1,   224,    -1,    -1,   227,   228,   229,    -1,    -1,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,    -1,   257,   258,   259,   260,   261,
      -1,   263,   264,    -1,   266,    -1,   268,   269,   270,   271,
     272,   273,    -1,   275,   276,    -1,    -1,   279,   280,   281,
      -1,    -1,   284,   285,    -1,   287,    -1,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,    -1,   301,
     302,   303,   304,   305,   306,   307,   308,   309,    -1,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,    -1,   339,   340,    -1,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,    -1,   358,   359,   360,   361,
     362,    -1,   364,   365,   366,   367,   368,    -1,   370,   371,
     372,   373,    -1,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,    -1,   389,   390,    -1,
     392,    -1,   394,   395,   396,   397,   398,    -1,   400,   401,
      -1,    -1,   404,   405,   406,   407,   408,    -1,   410,   411,
     412,   413,   414,   415,   416,    -1,    -1,   419,   420,   421,
     422,   423,    -1,    -1,   426,   427,   428,   429,   430,   431,
     432,    -1,   434,    -1,   436,   437,   438,   439,    -1,    -1,
     442,    -1,    -1,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    -1,    44,    45,    46,    47,    48,
      -1,    50,    51,    -1,    53,    54,    55,    56,    57,    58,
      -1,    -1,    61,    62,    63,    64,    65,    -1,    67,    68,
      69,    70,    71,    -1,    -1,    -1,    75,    76,    77,    78,
      79,    -1,    81,    82,    83,    -1,    85,    86,    87,    88,
      89,    90,    -1,    -1,    93,    94,    95,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,    -1,   114,    -1,   116,   117,   118,
     119,   120,   121,    -1,   123,   124,   125,   126,   127,    -1,
      -1,   130,   131,   132,   133,   134,    -1,   136,   137,   138,
      -1,   140,   141,   142,    -1,   144,   145,   146,   147,   148,
     149,   150,   151,   152,   153,    -1,   155,    -1,   157,   158,
     159,   160,    -1,   162,    -1,   164,    -1,    -1,    -1,   168,
     169,   170,    -1,   172,    -1,   174,    -1,   176,   177,    -1,
     179,   180,   181,   182,   183,   184,    -1,   186,   187,   188,
     189,    -1,   191,   192,   193,   194,   195,   196,    -1,   198,
      -1,   200,   201,   202,   203,   204,   205,   206,    -1,   208,
      -1,   210,    -1,    -1,   213,    -1,   215,   216,   217,   218,
     219,    -1,    -1,   222,    -1,   224,    -1,    -1,   227,   228,
     229,    -1,    -1,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,    -1,   257,   258,
     259,   260,   261,    -1,   263,   264,    -1,   266,    -1,   268,
     269,   270,   271,   272,   273,    -1,   275,   276,    -1,    -1,
     279,   280,   281,    -1,    -1,   284,   285,    -1,   287,    -1,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,    -1,   301,   302,   303,   304,   305,   306,   307,   308,
     309,    -1,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,    -1,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,    -1,
     339,   340,    -1,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,    -1,   358,
     359,   360,   361,   362,    -1,   364,   365,   366,   367,   368,
      -1,   370,   371,   372,   373,    -1,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,    -1,
     389,   390,    -1,   392,    -1,   394,   395,   396,   397,   398,
      -1,   400,   401,    -1,    -1,   404,   405,   406,   407,   408,
      -1,   410,   411,   412,   413,   414,   415,   416,    -1,    -1,
     419,   420,   421,   422,   423,    -1,    -1,   426,   427,   428,
     429,   430,   431,   432,    -1,   434,    -1,   436,   437,   438,
     439,    -1,    -1,   442,    -1,    -1,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    -1,    44,    45,
      46,    47,    48,    -1,    50,    51,    -1,    53,    54,    55,
      56,    57,    58,    -1,    -1,    61,    62,    63,    64,    65,
      -1,    67,    68,    69,    70,    71,    -1,    -1,    -1,    75,
      76,    77,    78,    79,    -1,    81,    82,    83,    -1,    85,
      86,    87,    88,    89,    90,    -1,    -1,    93,    94,    95,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,    -1,   114,    -1,
     116,   117,   118,   119,   120,   121,    -1,   123,   124,   125,
     126,   127,    -1,    -1,   130,   131,   132,   133,   134,    -1,
     136,   137,   138,    -1,   140,   141,   142,    -1,   144,   145,
     146,   147,   148,   149,   150,   151,   152,   153,    -1,   155,
      -1,   157,   158,   159,   160,    -1,   162,    -1,   164,    -1,
      -1,    -1,   168,   169,   170,    -1,   172,    -1,   174,    -1,
     176,   177,    -1,   179,   180,   181,   182,   183,   184,    -1,
     186,   187,   188,   189,    -1,   191,   192,   193,   194,   195,
     196,    -1,   198,    -1,   200,   201,   202,   203,   204,   205,
     206,    -1,   208,    -1,   210,    -1,    -1,   213,    -1,   215,
     216,   217,   218,   219,    -1,    -1,   222,    -1,   224,    -1,
      -1,   227,   228,   229,    -1,    -1,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
      -1,   257,   258,   259,   260,   261,    -1,   263,   264,    -1,
     266,    -1,   268,   269,   270,   271,   272,   273,    -1,   275,
     276,    -1,    -1,   279,   280,   281,    -1,    -1,   284,   285,
      -1,   287,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,    -1,   301,   302,   303,   304,   305,
     306,   307,   308,   309,    -1,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,    -1,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,    -1,   339,   340,    -1,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,    -1,   358,   359,   360,   361,   362,    -1,   364,   365,
     366,   367,   368,    -1,   370,   371,   372,   373,    -1,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,    -1,   389,   390,    -1,   392,    -1,   394,   395,
     396,   397,   398,    -1,   400,   401,    -1,    -1,   404,   405,
     406,   407,   408,    -1,   410,   411,   412,   413,   414,   415,
     416,    -1,    -1,   419,   420,   421,   422,   423,    -1,    -1,
     426,   427,   428,   429,   430,   431,   432,    -1,   434,    -1,
     436,   437,   438,   439,    -1,    -1,   442,    -1,    -1,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      -1,    44,    45,    46,    47,    48,    -1,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    -1,    -1,    61,    62,
      63,    64,    65,    -1,    67,    68,    69,    70,    71,    -1,
      -1,    -1,    75,    76,    77,    78,    79,    -1,    81,    82,
      83,    -1,    85,    86,    87,    88,    89,    90,    -1,    -1,
      93,    94,    95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
      -1,   114,    -1,   116,   117,   118,   119,   120,   121,    -1,
     123,   124,   125,   126,   127,    -1,    -1,   130,   131,   132,
     133,   134,    -1,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,    -1,   155,    -1,   157,   158,   159,   160,    -1,   162,
      -1,   164,    -1,    -1,    -1,   168,   169,   170,    -1,   172,
      -1,   174,    -1,   176,   177,    -1,   179,   180,   181,   182,
     183,   184,    -1,   186,   187,   188,   189,    -1,   191,   192,
     193,   194,   195,   196,    -1,   198,    -1,   200,   201,   202,
     203,   204,   205,   206,    -1,   208,    -1,   210,    -1,    -1,
     213,    -1,   215,   216,   217,   218,   219,    -1,    -1,   222,
      -1,   224,    -1,    -1,   227,   228,   229,    -1,    -1,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,    -1,   257,   258,   259,   260,   261,    -1,
     263,   264,    -1,   266,    -1,   268,   269,   270,   271,   272,
     273,    -1,   275,   276,    -1,    -1,   279,   280,   281,    -1,
      -1,   284,   285,    -1,   287,    -1,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,    -1,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,    -1,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,    -1,   339,   340,    -1,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,    -1,   358,   359,   360,   361,   362,
      -1,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,    -1,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,    -1,   389,   390,    -1,   392,
      -1,   394,   395,   396,   397,   398,    -1,   400,   401,    -1,
      -1,   404,   405,   406,   407,   408,    -1,   410,   411,   412,
     413,   414,   415,   416,    -1,    -1,   419,   420,   421,   422,
     423,    -1,    -1,   426,   427,   428,   429,   430,   431,   432,
      -1,   434,    -1,   436,   437,   438,   439,    -1,    -1,   442,
      -1,    -1,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    -1,    44,    45,    46,    47,    48,    -1,
      50,    51,    -1,    53,    54,    55,    56,    57,    58,    -1,
      -1,    61,    62,    63,    64,    65,    -1,    67,    68,    69,
      70,    71,    -1,    -1,    -1,    75,    76,    77,    78,    79,
      -1,    81,    82,    83,    -1,    85,    86,    87,    88,    89,
      90,    -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,    -1,   114,    -1,   116,   117,   118,   119,
     120,   121,    -1,   123,   124,   125,   126,   127,    -1,    -1,
     130,   131,   132,   133,   134,    -1,   136,   137,   138,    -1,
     140,   141,   142,    -1,   144,   145,   146,   147,   148,   149,
     150,   151,   152,   153,    -1,   155,    -1,   157,   158,   159,
     160,    -1,   162,    -1,   164,    -1,    -1,    -1,   168,   169,
     170,    -1,   172,    -1,   174,    -1,   176,   177,    -1,   179,
     180,   181,   182,   183,   184,    -1,   186,   187,   188,   189,
      -1,   191,   192,   193,   194,   195,   196,    -1,   198,    -1,
     200,   201,   202,   203,   204,   205,   206,    -1,   208,    -1,
     210,    -1,    -1,   213,    -1,   215,   216,   217,   218,   219,
      -1,    -1,   222,    -1,   224,    -1,    -1,   227,   228,   229,
      -1,    -1,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,    -1,   257,   258,   259,
     260,   261,    -1,   263,   264,    -1,   266,    -1,   268,   269,
     270,   271,   272,   273,    -1,   275,   276,    -1,    -1,   279,
     280,   281,    -1,    -1,   284,   285,    -1,   287,    -1,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
      -1,   301,   302,   303,   304,   305,   306,   307,   308,   309,
      -1,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,    -1,   339,
     340,    -1,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,    -1,   358,   359,
     360,   361,   362,    -1,   364,   365,   366,   367,   368,    -1,
     370,   371,   372,   373,    -1,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,    -1,   389,
     390,    -1,   392,    -1,   394,   395,   396,   397,   398,    -1,
     400,   401,    -1,    -1,   404,   405,   406,   407,   408,    -1,
     410,   411,   412,   413,   414,   415,   416,    -1,    -1,   419,
     420,   421,   422,   423,    -1,    -1,   426,   427,   428,   429,
     430,   431,   432,    -1,   434,    -1,   436,   437,   438,   439,
      -1,    -1,   442,    -1,    -1,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    -1,    44,    45,    46,
      47,    48,    -1,    50,    51,    -1,    53,    54,    55,    56,
      57,    58,    -1,    -1,    61,    62,    63,    64,    65,    -1,
      67,    68,    69,    70,    71,    -1,    -1,    -1,    75,    76,
      77,    78,    79,    -1,    81,    82,    83,    -1,    85,    86,
      87,    88,    89,    90,    -1,    -1,    93,    94,    95,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,    -1,   114,    -1,   116,
     117,   118,   119,   120,   121,    -1,   123,   124,   125,   126,
     127,    -1,    -1,   130,   131,   132,   133,   134,    -1,   136,
     137,   138,    -1,   140,   141,   142,    -1,   144,   145,   146,
     147,   148,   149,   150,   151,   152,   153,    -1,   155,    -1,
     157,   158,   159,   160,    -1,   162,    -1,   164,    -1,    -1,
      -1,   168,   169,   170,    -1,   172,    -1,   174,    -1,   176,
     177,    -1,   179,   180,   181,   182,   183,   184,    -1,   186,
     187,   188,   189,    -1,   191,   192,   193,   194,   195,   196,
      -1,   198,    -1,   200,   201,   202,   203,   204,   205,   206,
      -1,   208,    -1,   210,    -1,    -1,   213,    -1,   215,   216,
     217,   218,   219,    -1,    -1,   222,    -1,   224,    -1,    -1,
     227,   228,   229,    -1,    -1,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,    -1,
     257,   258,   259,   260,   261,    -1,   263,   264,    -1,   266,
      -1,   268,   269,   270,   271,   272,   273,    -1,   275,   276,
      -1,    -1,   279,   280,   281,    -1,    -1,   284,   285,    -1,
     287,    -1,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,    -1,   301,   302,   303,   304,   305,   306,
     307,   308,   309,    -1,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,    -1,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,    -1,   339,   340,    -1,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
      -1,   358,   359,   360,   361,   362,    -1,   364,   365,   366,
     367,   368,    -1,   370,   371,   372,   373,    -1,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,    -1,   389,   390,    -1,   392,    -1,   394,   395,   396,
     397,   398,    -1,   400,   401,    -1,    -1,   404,   405,   406,
     407,   408,    -1,   410,   411,   412,   413,   414,   415,   416,
      -1,    -1,   419,   420,   421,   422,   423,    -1,    -1,   426,
     427,   428,   429,   430,   431,   432,    -1,   434,    -1,   436,
     437,   438,   439,    -1,    -1,   442,    -1,    -1,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,
      44,    45,    46,    47,    48,    -1,    50,    51,    -1,    53,
      54,    55,    56,    57,    58,    -1,    -1,    61,    62,    63,
      64,    65,    -1,    67,    68,    69,    70,    71,    -1,    -1,
      -1,    75,    76,    77,    78,    79,    -1,    81,    82,    83,
      -1,    85,    86,    87,    88,    89,    90,    -1,    -1,    93,
      94,    95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,    -1,
     114,    -1,   116,   117,   118,   119,   120,   121,    -1,   123,
     124,   125,   126,   127,    -1,    -1,   130,   131,   132,   133,
     134,    -1,   136,   137,   138,    -1,   140,   141,   142,    -1,
     144,   145,   146,   147,   148,   149,   150,   151,   152,   153,
      -1,   155,    -1,   157,   158,   159,   160,    -1,   162,    -1,
     164,    -1,    -1,    -1,   168,   169,   170,    -1,   172,    -1,
     174,    -1,   176,   177,    -1,   179,   180,   181,   182,   183,
     184,    -1,   186,   187,   188,   189,    -1,   191,   192,   193,
     194,   195,   196,    -1,   198,    -1,   200,   201,   202,   203,
     204,   205,   206,    -1,   208,    -1,   210,    -1,    -1,   213,
      -1,   215,   216,   217,   218,   219,    -1,    -1,   222,    -1,
     224,    -1,    -1,   227,   228,   229,    -1,    -1,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,    -1,   257,   258,   259,   260,   261,    -1,   263,
     264,    -1,   266,    -1,   268,   269,   270,   271,   272,   273,
      -1,   275,   276,    -1,    -1,   279,   280,   281,    -1,    -1,
     284,   285,    -1,   287,    -1,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,    -1,   301,   302,   303,
     304,   305,   306,   307,   308,   309,    -1,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,    -1,   339,   340,    -1,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,    -1,   358,   359,   360,   361,   362,    -1,
     364,   365,   366,   367,   368,    -1,   370,   371,   372,   373,
      -1,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,    -1,   389,   390,    -1,   392,    -1,
     394,   395,   396,   397,   398,    -1,   400,   401,    -1,    -1,
     404,   405,   406,   407,   408,    -1,   410,   411,   412,   413,
     414,   415,   416,    -1,    -1,   419,   420,   421,   422,   423,
      -1,    -1,   426,   427,   428,   429,   430,   431,   432,    -1,
     434,    -1,   436,   437,   438,   439,    -1,    -1,   442,    -1,
      -1,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    -1,    -1,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,    -1,   114,    -1,   116,   117,   118,   119,   120,
     121,    -1,   123,   124,   125,   126,   127,    -1,    -1,   130,
     131,   132,   133,   134,    -1,   136,   137,   138,    -1,   140,
     141,   142,    -1,   144,   145,   146,   147,   148,   149,   150,
     151,   152,   153,    -1,   155,    -1,   157,   158,   159,   160,
      -1,   162,    -1,   164,    -1,    -1,    -1,   168,   169,   170,
      -1,   172,    -1,   174,    -1,   176,   177,    -1,   179,   180,
     181,   182,   183,   184,    -1,   186,   187,   188,   189,    -1,
     191,   192,   193,   194,   195,   196,    -1,   198,    -1,   200,
     201,   202,   203,   204,   205,   206,    -1,   208,    -1,   210,
      -1,    -1,   213,    -1,   215,   216,   217,   218,   219,    -1,
      -1,   222,    -1,   224,    -1,    -1,   227,   228,   229,    -1,
      -1,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,    -1,   257,   258,   259,   260,
     261,    -1,   263,   264,    -1,   266,    -1,   268,   269,   270,
     271,   272,   273,    -1,   275,   276,    -1,    -1,   279,   280,
     281,    -1,    -1,   284,   285,    -1,   287,    -1,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,    -1,
     301,   302,   303,   304,   305,   306,   307,   308,   309,    -1,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,    -1,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,    -1,   339,   340,
      -1,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,    -1,   358,   359,   360,
     361,   362,    -1,   364,   365,   366,   367,   368,    -1,   370,
     371,   372,   373,    -1,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,    -1,   389,   390,
      -1,   392,    -1,   394,   395,   396,   397,   398,    -1,   400,
     401,    -1,    -1,   404,   405,   406,   407,   408,    -1,   410,
     411,   412,   413,   414,   415,   416,    -1,    -1,   419,   420,
     421,   422,   423,    -1,    -1,   426,   427,   428,   429,   430,
     431,   432,    -1,   434,    -1,   436,   437,   438,   439,    -1,
      -1,   442,    -1,    -1,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    -1,    44,    45,    46,    47,
      48,    -1,    50,    51,    -1,    53,    54,    55,    56,    57,
      58,    -1,    -1,    61,    62,    63,    64,    65,    -1,    67,
      68,    69,    70,    71,    -1,    -1,    -1,    75,    76,    77,
      78,    79,    -1,    81,    82,    83,    -1,    85,    86,    87,
      88,    89,    90,    -1,    -1,    93,    94,    95,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,    -1,   114,    -1,   116,   117,
     118,   119,   120,   121,    -1,   123,   124,   125,   126,   127,
      -1,    -1,   130,   131,   132,   133,   134,    -1,   136,   137,
     138,    -1,   140,   141,   142,    -1,   144,   145,   146,   147,
     148,   149,   150,   151,   152,   153,    -1,   155,    -1,   157,
     158,   159,   160,    -1,   162,    -1,   164,    -1,    -1,    -1,
     168,   169,   170,    -1,   172,    -1,   174,    -1,   176,   177,
      -1,   179,   180,   181,   182,   183,   184,    -1,   186,   187,
     188,   189,    -1,   191,   192,   193,   194,   195,   196,    -1,
     198,    -1,   200,   201,   202,   203,   204,   205,   206,    -1,
     208,    -1,   210,    -1,    -1,   213,    -1,   215,   216,   217,
     218,   219,    -1,    -1,   222,    -1,   224,    -1,    -1,   227,
     228,   229,    -1,    -1,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,    -1,   257,
     258,   259,   260,   261,    -1,   263,   264,    -1,   266,    -1,
     268,   269,   270,   271,   272,   273,    -1,   275,   276,    -1,
      -1,   279,   280,   281,    -1,    -1,   284,   285,    -1,   287,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,    -1,   301,   302,   303,   304,   305,   306,   307,
     308,   309,    -1,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
      -1,   339,   340,    -1,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,    -1,
     358,   359,   360,   361,   362,    -1,   364,   365,   366,   367,
     368,    -1,   370,   371,   372,   373,    -1,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
      -1,   389,   390,    -1,   392,    -1,   394,   395,   396,   397,
     398,    -1,   400,   401,    -1,    -1,   404,   405,   406,   407,
     408,    -1,   410,   411,   412,   413,   414,   415,   416,    -1,
      -1,   419,   420,   421,   422,   423,    -1,    -1,   426,   427,
     428,   429,   430,   431,   432,    -1,   434,    -1,   436,   437,
     438,   439,    -1,    -1,   442,    -1,    -1,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,    44,
      45,    46,    47,    48,    -1,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    -1,    -1,    61,    62,    63,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    -1,    -1,
      75,    76,    77,    78,    79,    -1,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    -1,    -1,    93,    94,
      95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,    -1,   114,
      -1,   116,   117,   118,   119,   120,   121,    -1,   123,   124,
     125,   126,   127,    -1,    -1,   130,   131,   132,   133,   134,
      -1,   136,   137,   138,    -1,   140,   141,   142,    -1,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,    -1,
     155,    -1,   157,   158,   159,   160,    -1,   162,    -1,   164,
      -1,    -1,    -1,   168,   169,   170,    -1,   172,    -1,   174,
      -1,   176,   177,    -1,   179,   180,   181,   182,   183,   184,
      -1,   186,   187,   188,   189,    -1,   191,   192,   193,   194,
     195,   196,    -1,   198,    -1,   200,   201,   202,   203,   204,
     205,   206,    -1,   208,    -1,   210,    -1,    -1,   213,    -1,
     215,   216,   217,   218,   219,    -1,    -1,   222,    -1,   224,
      -1,    -1,   227,   228,   229,    -1,    -1,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,    -1,   257,   258,   259,   260,   261,    -1,   263,   264,
      -1,   266,    -1,   268,   269,   270,   271,   272,   273,    -1,
     275,   276,    -1,    -1,   279,   280,   281,    -1,    -1,   284,
     285,    -1,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,    -1,   301,   302,   303,   304,
     305,   306,   307,   308,   309,    -1,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,    -1,   339,   340,    -1,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,    -1,   358,   359,   360,   361,   362,    -1,   364,
     365,   366,   367,   368,    -1,   370,   371,   372,   373,    -1,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,    -1,   389,   390,    -1,   392,    -1,   394,
     395,   396,   397,   398,    -1,   400,   401,    -1,    -1,   404,
     405,   406,   407,   408,    -1,   410,   411,   412,   413,   414,
     415,   416,    -1,    -1,   419,   420,   421,   422,   423,    -1,
      -1,   426,   427,   428,   429,   430,   431,   432,    -1,   434,
      -1,   436,   437,   438,   439,    -1,    -1,   442,    -1,    -1,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    -1,    44,    45,    46,    47,    48,    -1,    50,    51,
      -1,    53,    54,    55,    56,    57,    58,    -1,    -1,    61,
      62,    63,    64,    65,    -1,    67,    68,    69,    70,    71,
      -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,    81,
      82,    83,    -1,    85,    86,    87,    88,    89,    90,    -1,
      -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,    -1,   114,    -1,   116,   117,   118,   119,   120,   121,
      -1,   123,   124,   125,   126,   127,    -1,    -1,   130,   131,
     132,   133,   134,    -1,   136,   137,   138,    -1,   140,   141,
     142,    -1,   144,   145,   146,   147,   148,   149,   150,   151,
     152,   153,    -1,   155,    -1,   157,   158,   159,   160,    -1,
     162,    -1,   164,    -1,    -1,    -1,   168,   169,   170,    -1,
     172,    -1,   174,    -1,   176,   177,    -1,   179,   180,   181,
     182,   183,   184,    -1,   186,   187,   188,   189,    -1,   191,
     192,   193,   194,   195,   196,    -1,   198,    -1,   200,   201,
     202,   203,   204,   205,   206,    -1,   208,    -1,   210,    -1,
      -1,   213,    -1,   215,   216,   217,   218,   219,    -1,    -1,
     222,    -1,   224,    -1,    -1,   227,   228,   229,    -1,    -1,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,    -1,   257,   258,   259,   260,   261,
      -1,   263,   264,    -1,   266,    -1,   268,   269,   270,   271,
     272,   273,    -1,   275,   276,    -1,    -1,   279,   280,   281,
      -1,    -1,   284,   285,    -1,   287,    -1,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,    -1,   301,
     302,   303,   304,   305,   306,   307,   308,   309,    -1,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,    -1,   339,   340,    -1,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,    -1,   358,   359,   360,   361,
     362,    -1,   364,   365,   366,   367,   368,    -1,   370,   371,
     372,   373,    -1,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,    -1,   389,   390,    -1,
     392,    -1,   394,   395,   396,   397,   398,    -1,   400,   401,
      -1,    -1,   404,   405,   406,   407,   408,    -1,   410,   411,
     412,   413,   414,   415,   416,    -1,    -1,   419,   420,   421,
     422,   423,    -1,    -1,   426,   427,   428,   429,   430,   431,
     432,    -1,   434,    -1,   436,   437,   438,   439,    -1,    -1,
     442,    -1,    -1,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    -1,    44,    45,    46,    47,    48,
      -1,    50,    51,    -1,    53,    54,    55,    56,    57,    58,
      -1,    -1,    61,    62,    63,    64,    65,    -1,    67,    68,
      69,    70,    71,    -1,    -1,    -1,    75,    76,    77,    78,
      79,    -1,    81,    82,    83,    -1,    85,    86,    87,    88,
      89,    90,    -1,    -1,    93,    94,    95,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,    -1,   114,    -1,   116,   117,   118,
     119,   120,   121,    -1,   123,   124,   125,   126,   127,    -1,
      -1,   130,   131,   132,   133,   134,    -1,   136,   137,   138,
      -1,   140,   141,   142,    -1,   144,   145,   146,   147,   148,
     149,   150,   151,   152,   153,    -1,   155,    -1,   157,   158,
     159,   160,    -1,   162,    -1,   164,    -1,    -1,    -1,   168,
     169,   170,    -1,   172,    -1,   174,    -1,   176,   177,    -1,
     179,   180,   181,   182,   183,   184,    -1,   186,   187,   188,
     189,    -1,   191,   192,   193,   194,   195,   196,    -1,   198,
      -1,   200,   201,   202,   203,   204,   205,   206,    -1,   208,
      -1,   210,    -1,    -1,   213,    -1,   215,   216,   217,   218,
     219,    -1,    -1,   222,    -1,   224,    -1,    -1,   227,   228,
     229,    -1,    -1,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,    -1,   257,   258,
     259,   260,   261,    -1,   263,   264,    -1,   266,    -1,   268,
     269,   270,   271,   272,   273,    -1,   275,   276,    -1,    -1,
     279,   280,   281,    -1,    -1,   284,   285,    -1,   287,    -1,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,    -1,   301,   302,   303,   304,   305,   306,   307,   308,
     309,    -1,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,    -1,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,    -1,
     339,   340,    -1,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,    -1,   358,
     359,   360,   361,   362,    -1,   364,   365,   366,   367,   368,
      -1,   370,   371,   372,   373,    -1,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,    -1,
     389,   390,    -1,   392,    -1,   394,   395,   396,   397,   398,
      -1,   400,   401,    -1,    -1,   404,   405,   406,   407,   408,
      -1,   410,   411,   412,   413,   414,   415,   416,    -1,    -1,
     419,   420,   421,   422,   423,    -1,    -1,   426,   427,   428,
     429,   430,   431,   432,    -1,   434,    -1,   436,   437,   438,
     439,    -1,    -1,   442,    -1,    -1,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    -1,    44,    45,
      46,    47,    48,    -1,    50,    51,    -1,    53,    54,    55,
      56,    57,    58,    -1,    -1,    61,    62,    63,    64,    65,
      -1,    67,    68,    69,    70,    71,    -1,    -1,    -1,    75,
      76,    77,    78,    79,    -1,    81,    82,    83,    -1,    85,
      86,    87,    88,    89,    90,    -1,    -1,    93,    94,    95,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,    -1,   114,    -1,
     116,   117,   118,   119,   120,   121,    -1,   123,   124,   125,
     126,   127,    -1,    -1,   130,   131,   132,   133,   134,    -1,
     136,   137,   138,    -1,   140,   141,   142,    -1,   144,   145,
     146,   147,   148,   149,   150,   151,   152,   153,    -1,   155,
      -1,   157,   158,   159,   160,    -1,   162,    -1,   164,    -1,
      -1,    -1,   168,   169,   170,    -1,   172,    -1,   174,    -1,
     176,   177,    -1,   179,   180,   181,   182,   183,   184,    -1,
     186,   187,   188,   189,    -1,   191,   192,   193,   194,   195,
     196,    -1,   198,    -1,   200,   201,   202,   203,   204,   205,
     206,    -1,   208,    -1,   210,    -1,    -1,   213,    -1,   215,
     216,   217,   218,   219,    -1,    -1,   222,    -1,   224,    -1,
      -1,   227,   228,   229,    -1,    -1,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
      -1,   257,   258,   259,   260,   261,    -1,   263,   264,    -1,
     266,    -1,   268,   269,   270,   271,   272,   273,    -1,   275,
     276,    -1,    -1,   279,   280,   281,    -1,    -1,   284,   285,
      -1,   287,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,    -1,   301,   302,   303,   304,   305,
     306,   307,   308,   309,    -1,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,    -1,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,    -1,   339,   340,    -1,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,    -1,   358,   359,   360,   361,   362,    -1,   364,   365,
     366,   367,   368,    -1,   370,   371,   372,   373,    -1,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,    -1,   389,   390,    -1,   392,    -1,   394,   395,
     396,   397,   398,    -1,   400,   401,    -1,    -1,   404,   405,
     406,   407,   408,    -1,   410,   411,   412,   413,   414,   415,
     416,    -1,    -1,   419,   420,   421,   422,   423,    -1,    -1,
     426,   427,   428,   429,   430,   431,   432,    -1,   434,    -1,
     436,   437,   438,   439,    -1,    -1,   442,    -1,    -1,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      -1,    44,    45,    46,    47,    48,    -1,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    -1,    -1,    61,    62,
      63,    64,    65,    -1,    67,    68,    69,    70,    71,    -1,
      -1,    -1,    75,    76,    77,    78,    79,    -1,    81,    82,
      83,    -1,    85,    86,    87,    88,    89,    90,    -1,    -1,
      93,    94,    95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
      -1,   114,    -1,   116,   117,   118,   119,   120,   121,    -1,
     123,   124,   125,   126,   127,    -1,    -1,   130,   131,   132,
     133,   134,    -1,   136,   137,   138,    -1,   140,   141,   142,
      -1,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,    -1,   155,    -1,   157,   158,   159,   160,    -1,   162,
      -1,   164,    -1,    -1,    -1,   168,   169,   170,    -1,   172,
      -1,   174,    -1,   176,   177,    -1,   179,   180,   181,   182,
     183,   184,    -1,   186,   187,   188,   189,    -1,   191,   192,
     193,   194,   195,   196,    -1,   198,    -1,   200,   201,   202,
     203,   204,   205,   206,    -1,   208,    -1,   210,    -1,    -1,
     213,    -1,   215,   216,   217,   218,   219,    -1,    -1,   222,
      -1,   224,    -1,    -1,   227,   228,   229,    -1,    -1,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,    -1,   257,   258,   259,   260,   261,    -1,
     263,   264,    -1,   266,    -1,   268,   269,   270,   271,   272,
     273,    -1,   275,   276,    -1,    -1,   279,   280,   281,    -1,
      -1,   284,   285,    -1,   287,    -1,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,    -1,   301,   302,
     303,   304,   305,   306,   307,   308,   309,    -1,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,    -1,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,    -1,   339,   340,    -1,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,    -1,   358,   359,   360,   361,   362,
      -1,   364,   365,   366,   367,   368,    -1,   370,   371,   372,
     373,    -1,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,    -1,   389,   390,    -1,   392,
      -1,   394,   395,   396,   397,   398,    -1,   400,   401,    -1,
      -1,   404,   405,   406,   407,   408,    -1,   410,   411,   412,
     413,   414,   415,   416,    -1,    -1,   419,   420,   421,   422,
     423,    -1,    -1,   426,   427,   428,   429,   430,   431,   432,
      -1,   434,    -1,   436,   437,   438,   439,    -1,    -1,   442,
      -1,    -1,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    35,    -1,    37,    38,    -1,
      40,    41,    42,    -1,    44,    45,    46,    47,    48,    -1,
      50,    51,    -1,    53,    54,    55,    56,    57,    58,    -1,
      -1,    61,    62,    63,    64,    65,    -1,    67,    68,    69,
      70,    71,    -1,    -1,    -1,    75,    76,    77,    78,    79,
      -1,    81,    82,    83,    -1,    85,    86,    87,    88,    89,
      90,    -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,    -1,   114,    -1,   116,   117,   118,   119,
     120,   121,    -1,   123,   124,   125,   126,   127,    -1,    -1,
     130,   131,   132,   133,   134,    -1,   136,   137,   138,    -1,
     140,   141,   142,    -1,   144,   145,   146,   147,   148,   149,
     150,   151,   152,   153,    -1,   155,    -1,   157,   158,   159,
     160,    -1,   162,    -1,   164,    -1,    -1,    -1,   168,   169,
     170,    -1,   172,    -1,   174,    -1,   176,   177,    -1,   179,
     180,   181,   182,   183,   184,    -1,   186,   187,   188,   189,
      -1,   191,   192,   193,   194,   195,   196,    -1,   198,    -1,
     200,   201,   202,   203,   204,   205,   206,    -1,   208,    -1,
     210,    -1,    -1,   213,    -1,   215,   216,   217,   218,   219,
      -1,    -1,   222,    -1,   224,    -1,    -1,   227,   228,   229,
      -1,    -1,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,    -1,   257,   258,   259,
     260,   261,    -1,   263,   264,    -1,   266,    -1,   268,   269,
     270,   271,   272,   273,    -1,   275,   276,    -1,    -1,   279,
     280,   281,    -1,    -1,   284,   285,    -1,   287,    -1,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
      -1,   301,   302,   303,   304,   305,   306,   307,   308,   309,
      -1,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,    -1,   339,
     340,    -1,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,    -1,   358,   359,
     360,   361,   362,    -1,    -1,   365,   366,   367,   368,    -1,
     370,   371,   372,   373,    -1,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,    -1,   389,
     390,    -1,   392,    -1,   394,   395,   396,   397,   398,    -1,
     400,   401,    -1,    -1,   404,   405,   406,   407,   408,    -1,
     410,   411,   412,   413,   414,   415,   416,    -1,    -1,   419,
     420,   421,   422,   423,    -1,    -1,   426,   427,   428,   429,
     430,   431,   432,    -1,   434,    -1,   436,   437,   438,   439,
      -1,    -1,   442,    -1,    -1,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    -1,    44,    45,    46,
      47,    48,    -1,    50,    51,    -1,    53,    54,    55,    56,
      57,    58,    -1,    -1,    61,    62,    63,    64,    65,    -1,
      67,    68,    69,    70,    71,    -1,    -1,    -1,    75,    76,
      77,    78,    79,    -1,    81,    82,    83,    -1,    85,    86,
      87,    88,    89,    90,    -1,    -1,    93,    94,    95,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,    -1,   114,    -1,   116,
     117,   118,   119,   120,   121,    -1,   123,   124,   125,   126,
     127,    -1,    -1,   130,   131,   132,   133,   134,    -1,   136,
     137,   138,    -1,   140,   141,   142,    -1,   144,   145,   146,
     147,   148,   149,   150,   151,   152,   153,    -1,   155,    -1,
     157,   158,   159,   160,    -1,   162,    -1,   164,    -1,    -1,
      -1,   168,   169,   170,    -1,   172,    -1,   174,    -1,   176,
     177,    -1,   179,   180,   181,   182,   183,   184,    -1,   186,
     187,   188,   189,    -1,   191,   192,   193,   194,   195,   196,
      -1,   198,    -1,   200,   201,   202,   203,   204,   205,   206,
      -1,   208,    -1,   210,    -1,    -1,   213,    -1,   215,   216,
     217,   218,   219,    -1,    -1,   222,    -1,   224,    -1,    -1,
     227,   228,   229,    -1,    -1,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,    -1,
     257,   258,   259,   260,   261,    -1,   263,   264,    -1,   266,
      -1,   268,   269,   270,   271,   272,   273,    -1,   275,   276,
      -1,    -1,   279,   280,   281,    -1,    -1,   284,   285,    -1,
     287,    -1,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,    -1,   301,   302,   303,   304,   305,   306,
     307,   308,   309,    -1,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,    -1,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,    -1,   339,   340,    -1,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
      -1,   358,   359,   360,   361,   362,    -1,   364,   365,   366,
     367,   368,    -1,   370,   371,   372,   373,    -1,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,    -1,   389,   390,    -1,   392,    -1,   394,   395,   396,
     397,   398,    -1,   400,   401,    -1,    -1,   404,   405,   406,
     407,   408,    -1,   410,   411,   412,   413,   414,   415,   416,
      -1,    -1,   419,   420,   421,   422,   423,    -1,    -1,   426,
     427,   428,   429,   430,   431,   432,    -1,   434,    -1,   436,
     437,   438,   439,    -1,    -1,   442,    -1,    -1,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,
      44,    45,    46,    47,    48,    -1,    50,    51,    -1,    53,
      54,    55,    56,    57,    58,    -1,    -1,    61,    62,    63,
      64,    65,    -1,    67,    68,    69,    70,    71,    -1,    -1,
      -1,    75,    76,    77,    78,    79,    -1,    81,    82,    83,
      -1,    85,    86,    87,    88,    89,    90,    -1,    -1,    93,
      94,    95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,    -1,
     114,    -1,   116,   117,   118,   119,   120,   121,    -1,   123,
     124,   125,   126,   127,    -1,    -1,   130,   131,   132,   133,
     134,    -1,   136,   137,   138,    -1,   140,   141,   142,    -1,
     144,   145,   146,   147,   148,   149,   150,   151,   152,   153,
      -1,   155,    -1,   157,   158,   159,   160,    -1,   162,    -1,
     164,    -1,    -1,    -1,   168,   169,   170,    -1,   172,    -1,
     174,    -1,   176,   177,    -1,   179,   180,   181,   182,   183,
     184,    -1,   186,   187,   188,   189,    -1,   191,   192,   193,
     194,   195,   196,    -1,   198,    -1,   200,   201,   202,   203,
     204,   205,   206,    -1,   208,    -1,   210,    -1,    -1,   213,
      -1,   215,   216,   217,   218,   219,    -1,    -1,   222,    -1,
     224,    -1,    -1,   227,   228,   229,    -1,    -1,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,    -1,   257,   258,   259,   260,   261,    -1,   263,
     264,    -1,   266,    -1,   268,   269,   270,   271,   272,   273,
      -1,   275,   276,    -1,    -1,   279,   280,   281,    -1,    -1,
     284,   285,    -1,   287,    -1,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,    -1,   301,   302,   303,
     304,   305,   306,   307,   308,   309,    -1,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,    -1,   339,   340,    -1,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,    -1,   358,   359,   360,   361,   362,    -1,
     364,   365,   366,   367,   368,    -1,   370,   371,   372,   373,
      -1,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,    -1,   389,   390,    -1,   392,    -1,
     394,   395,   396,   397,   398,    -1,   400,   401,    -1,    -1,
     404,   405,   406,   407,   408,    -1,   410,   411,   412,   413,
     414,   415,   416,    -1,    -1,   419,   420,   421,   422,   423,
      -1,    -1,   426,   427,   428,   429,   430,   431,   432,    -1,
     434,    -1,   436,   437,   438,   439,    -1,    -1,   442,    -1,
      -1,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    -1,    -1,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,    -1,   114,    -1,   116,   117,   118,   119,   120,
     121,    -1,   123,   124,   125,   126,   127,    -1,    -1,   130,
     131,   132,   133,   134,    -1,   136,   137,   138,    -1,   140,
     141,   142,    -1,   144,   145,   146,   147,   148,   149,   150,
     151,   152,   153,    -1,   155,    -1,   157,   158,   159,   160,
      -1,   162,    -1,   164,    -1,    -1,    -1,   168,   169,   170,
      -1,   172,    -1,   174,    -1,   176,   177,    -1,   179,   180,
     181,   182,   183,   184,    -1,   186,   187,   188,   189,    -1,
     191,   192,   193,   194,   195,   196,    -1,   198,    -1,   200,
     201,   202,   203,   204,   205,   206,    -1,   208,    -1,   210,
      -1,    -1,   213,    -1,   215,   216,   217,   218,   219,    -1,
      -1,   222,    -1,   224,    -1,    -1,   227,   228,   229,    -1,
      -1,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,    -1,   257,   258,   259,   260,
     261,    -1,   263,   264,    -1,   266,    -1,   268,   269,   270,
     271,   272,   273,    -1,   275,   276,    -1,    -1,   279,   280,
     281,    -1,    -1,   284,   285,    -1,   287,    -1,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,    -1,
     301,   302,   303,   304,   305,   306,   307,   308,   309,    -1,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,    -1,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,    -1,   339,   340,
      -1,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,    -1,   358,   359,   360,
     361,   362,    -1,   364,   365,   366,   367,   368,    -1,   370,
     371,   372,   373,    -1,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,    -1,   389,   390,
      -1,   392,    -1,   394,   395,   396,   397,   398,    -1,   400,
     401,    -1,    -1,   404,   405,   406,   407,   408,    -1,   410,
     411,   412,   413,   414,   415,   416,    -1,    -1,   419,   420,
     421,   422,   423,    -1,    -1,   426,   427,   428,   429,   430,
     431,   432,    -1,   434,    -1,   436,   437,   438,   439,    -1,
      -1,   442,    -1,    -1,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    -1,    44,    45,    46,    47,
      48,    -1,    50,    51,    -1,    53,    54,    55,    56,    57,
      58,    -1,    -1,    61,    62,    63,    64,    65,    -1,    67,
      68,    69,    70,    71,    -1,    -1,    -1,    75,    76,    77,
      78,    79,    -1,    81,    82,    83,    -1,    85,    86,    87,
      88,    89,    90,    -1,    -1,    93,    94,    95,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,    -1,   114,    -1,   116,   117,
     118,   119,   120,   121,    -1,   123,   124,   125,   126,   127,
      -1,    -1,   130,   131,   132,   133,   134,    -1,   136,   137,
     138,    -1,   140,   141,   142,    -1,   144,   145,   146,   147,
     148,   149,   150,   151,   152,   153,    -1,   155,    -1,   157,
     158,   159,   160,    -1,   162,    -1,   164,    -1,    -1,    -1,
     168,   169,   170,    -1,   172,    -1,   174,    -1,   176,   177,
      -1,   179,   180,   181,   182,   183,   184,    -1,   186,   187,
     188,   189,    -1,   191,   192,   193,   194,   195,   196,    -1,
     198,    -1,   200,   201,   202,   203,   204,   205,   206,    -1,
     208,    -1,   210,    -1,    -1,   213,    -1,   215,   216,   217,
     218,   219,    -1,    -1,   222,    -1,   224,    -1,    -1,   227,
     228,   229,    -1,    -1,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,    -1,   257,
     258,   259,   260,   261,    -1,   263,   264,    -1,   266,    -1,
     268,   269,   270,   271,   272,   273,    -1,   275,   276,    -1,
      -1,   279,   280,   281,    -1,    -1,   284,   285,    -1,   287,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,    -1,   301,   302,   303,   304,   305,   306,   307,
     308,   309,    -1,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
      -1,   339,   340,    -1,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,    -1,
     358,   359,   360,   361,   362,    -1,   364,   365,   366,   367,
     368,    -1,   370,   371,   372,   373,    -1,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
      -1,   389,   390,    -1,   392,    -1,   394,   395,   396,   397,
     398,    -1,   400,   401,    -1,    -1,   404,   405,   406,   407,
     408,    -1,   410,   411,   412,   413,   414,   415,   416,    -1,
      -1,   419,   420,   421,   422,   423,    -1,    -1,   426,   427,
     428,   429,   430,   431,   432,    -1,   434,    -1,   436,   437,
     438,   439,    -1,    -1,   442,    -1,    -1,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,    44,
      45,    46,    47,    48,    -1,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    -1,    -1,    61,    62,    63,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    -1,    -1,
      75,    76,    77,    78,    79,    -1,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    -1,    -1,    93,    94,
      95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,    -1,   114,
      -1,   116,   117,   118,   119,   120,   121,    -1,   123,   124,
     125,   126,   127,    -1,    -1,   130,   131,   132,   133,   134,
      -1,   136,   137,   138,    -1,   140,   141,   142,    -1,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,    -1,
     155,    -1,   157,   158,   159,   160,    -1,   162,    -1,   164,
      -1,    -1,    -1,   168,   169,   170,    -1,   172,    -1,   174,
      -1,   176,   177,    -1,   179,   180,   181,   182,   183,   184,
      -1,   186,   187,   188,   189,    -1,   191,   192,   193,   194,
     195,   196,    -1,   198,    -1,   200,   201,   202,   203,   204,
     205,   206,    -1,   208,    -1,   210,    -1,    -1,   213,    -1,
     215,   216,   217,   218,   219,    -1,    -1,   222,    -1,   224,
      -1,    -1,   227,   228,   229,    -1,    -1,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,    -1,   257,   258,   259,   260,   261,    -1,   263,   264,
      -1,   266,    -1,   268,   269,   270,   271,   272,   273,    -1,
     275,   276,    -1,    -1,   279,   280,   281,    -1,    -1,   284,
     285,    -1,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,    -1,   301,   302,   303,   304,
     305,   306,   307,   308,   309,    -1,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,    -1,   339,   340,    -1,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,    -1,   358,   359,   360,   361,   362,    -1,   364,
     365,   366,   367,   368,    -1,   370,   371,   372,   373,    -1,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,    -1,   389,   390,    -1,   392,    -1,   394,
     395,   396,   397,   398,    -1,   400,   401,    -1,    -1,   404,
     405,   406,   407,   408,    -1,   410,   411,   412,   413,   414,
     415,   416,    -1,    -1,   419,   420,   421,   422,   423,    -1,
      -1,   426,   427,   428,   429,   430,   431,   432,    -1,   434,
      -1,   436,   437,   438,   439,    -1,    -1,   442,    -1,    -1,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    -1,    44,    45,    46,    47,    48,    -1,    50,    51,
      -1,    53,    54,    55,    56,    57,    58,    -1,    -1,    61,
      62,    63,    64,    65,    -1,    67,    68,    69,    70,    71,
      -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,    81,
      82,    83,    -1,    85,    86,    87,    88,    89,    90,    -1,
      -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,    -1,   114,    -1,   116,   117,   118,   119,   120,   121,
      -1,   123,   124,   125,   126,   127,    -1,    -1,   130,   131,
     132,   133,   134,    -1,   136,   137,   138,    -1,   140,   141,
     142,    -1,   144,   145,   146,   147,   148,   149,   150,   151,
     152,   153,    -1,   155,    -1,   157,   158,   159,   160,    -1,
     162,    -1,   164,    -1,    -1,    -1,   168,   169,   170,    -1,
     172,    -1,   174,    -1,   176,   177,    -1,   179,   180,   181,
     182,   183,   184,    -1,   186,   187,   188,   189,    -1,   191,
     192,   193,   194,   195,   196,    -1,   198,    -1,   200,   201,
     202,   203,   204,   205,   206,    -1,   208,    -1,   210,    -1,
      -1,   213,    -1,   215,   216,   217,   218,   219,    -1,    -1,
     222,    -1,   224,    -1,    -1,   227,   228,   229,    -1,    -1,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,    -1,   257,   258,   259,   260,   261,
      -1,   263,   264,    -1,   266,    -1,   268,   269,   270,   271,
     272,   273,    -1,   275,   276,    -1,    -1,   279,   280,   281,
      -1,    -1,   284,   285,    -1,   287,    -1,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,    -1,   301,
     302,   303,   304,   305,   306,   307,   308,   309,    -1,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,    -1,   339,   340,    -1,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,    -1,   358,   359,   360,   361,
     362,    -1,   364,   365,   366,   367,   368,    -1,   370,   371,
     372,   373,    -1,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,    -1,   389,   390,    -1,
     392,    -1,   394,   395,   396,   397,   398,    -1,   400,   401,
      -1,    -1,   404,   405,   406,   407,   408,    -1,   410,   411,
     412,   413,   414,   415,   416,    -1,    -1,   419,   420,   421,
     422,   423,    -1,    -1,   426,   427,   428,   429,   430,   431,
     432,    -1,   434,    -1,   436,   437,   438,   439,    -1,    -1,
     442,    -1,    -1,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,
      -1,    40,    41,    42,    43,    44,    45,    46,    -1,    48,
      49,    50,    51,    -1,    53,    54,    55,    56,    57,    58,
      -1,    -1,    61,    62,    63,    64,    65,    -1,    67,    68,
      69,    70,    -1,    -1,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    -1,    85,    86,    87,    88,
      89,    90,    -1,    92,    93,    94,    95,    -1,    -1,    -1,
      99,    -1,    -1,    -1,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,    -1,   114,    -1,   116,   117,   118,
     119,   120,   121,    -1,   123,   124,   125,   126,   127,    -1,
      -1,   130,   131,   132,   133,   134,    -1,   136,   137,   138,
      -1,   140,   141,   142,    -1,   144,   145,   146,   147,    -1,
     149,   150,   151,   152,    -1,    -1,   155,    -1,   157,   158,
     159,   160,    -1,   162,    -1,   164,   165,    -1,   167,   168,
     169,   170,   171,   172,    -1,   174,    -1,    -1,   177,    -1,
     179,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,    -1,   191,   192,   193,   194,   195,   196,    -1,   198,
     199,    -1,   201,   202,   203,   204,   205,   206,    -1,   208,
      -1,   210,   211,   212,   213,   214,   215,   216,   217,   218,
     219,    -1,    -1,   222,   223,   224,   225,    -1,   227,   228,
     229,    -1,    -1,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,    -1,    -1,   263,   264,   265,   266,    -1,    -1,
     269,   270,   271,   272,   273,    -1,   275,   276,    -1,    -1,
     279,   280,   281,    -1,    -1,   284,    -1,   286,   287,   288,
      -1,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,    -1,   301,   302,    -1,   304,   305,    -1,   307,   308,
     309,    -1,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,    -1,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,    -1,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,    -1,   358,
     359,   360,   361,   362,    -1,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,    -1,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,    -1,    -1,
     389,   390,    -1,   392,   393,   394,   395,   396,   397,   398,
      -1,   400,   401,    -1,    -1,   404,   405,    -1,   407,    -1,
      -1,   410,   411,   412,   413,   414,   415,   416,    -1,    -1,
     419,   420,   421,   422,   423,    -1,    -1,   426,   427,   428,
     429,   430,    -1,   432,    -1,   434,   435,   436,   437,   438,
     439,    -1,    -1,   442,    -1,    -1,   445,   446,   447,   448,
     449,   450,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   462,   463,   464,   465,    18,    19,    20,
      21,    22,    23,    24,    25,    -1,    27,    28,    29,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,
      41,    42,    -1,    44,    45,    46,    47,    48,    -1,    50,
      51,    -1,    53,    54,    55,    56,    57,    58,    -1,    -1,
      61,    62,    63,    64,    65,    -1,    67,    68,    69,    70,
      71,    -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,
      81,    82,    83,    -1,    85,    86,    87,    88,    89,    90,
      -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,    -1,   114,    -1,   116,   117,   118,   119,   120,
     121,    -1,   123,   124,   125,   126,   127,    -1,    -1,   130,
     131,   132,   133,   134,    -1,   136,   137,   138,    -1,   140,
     141,   142,    -1,   144,   145,   146,   147,   148,   149,   150,
     151,   152,   153,    -1,   155,    -1,   157,   158,   159,   160,
      -1,   162,    -1,   164,    -1,    -1,    -1,   168,   169,   170,
      -1,   172,    -1,   174,    -1,   176,   177,    -1,   179,   180,
     181,   182,   183,   184,    -1,   186,   187,   188,   189,    -1,
     191,   192,   193,   194,   195,   196,    -1,   198,    -1,   200,
     201,   202,   203,   204,   205,   206,    -1,   208,    -1,   210,
      -1,    -1,   213,    -1,   215,   216,   217,   218,   219,    -1,
      -1,   222,    -1,   224,    -1,    -1,   227,   228,   229,    -1,
      -1,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,    -1,   257,   258,   259,   260,
     261,    -1,   263,   264,    -1,   266,    -1,   268,   269,   270,
     271,   272,   273,    -1,   275,   276,    -1,    -1,   279,   280,
     281,    -1,    -1,   284,   285,    -1,   287,    -1,   289,   290,
     291,   292,   293,   294,   295,    -1,   297,   298,   299,    -1,
     301,   302,   303,   304,   305,   306,   307,   308,   309,    -1,
     311,   312,   313,   314,   315,   316,   317,    -1,   319,   320,
     321,   322,   323,   324,    -1,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,    -1,   339,   340,
      -1,   342,   343,   344,   345,    -1,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,    -1,   358,   359,   360,
     361,   362,    -1,   364,   365,   366,   367,   368,    -1,   370,
     371,   372,   373,    -1,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,    -1,   389,   390,
      -1,   392,    -1,   394,   395,   396,   397,   398,    -1,   400,
     401,    -1,    -1,   404,   405,   406,   407,   408,    -1,   410,
     411,   412,   413,   414,   415,   416,    -1,    -1,   419,   420,
     421,   422,   423,    -1,    -1,   426,   427,   428,   429,   430,
     431,   432,    -1,   434,    -1,   436,   437,   438,   439,    -1,
      -1,   442,    -1,    -1,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    43,    44,    45,    46,    -1,
      48,    49,    50,    51,    -1,    53,    54,    55,    56,    57,
      58,    -1,    -1,    61,    62,    63,    64,    65,    -1,    67,
      68,    69,    70,    -1,    -1,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    -1,    85,    86,    87,
      88,    89,    90,    -1,    92,    93,    94,    95,    -1,    -1,
      -1,    99,    -1,    -1,    -1,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,    -1,   114,    -1,   116,   117,
     118,   119,   120,   121,    -1,   123,   124,   125,   126,   127,
      -1,    -1,   130,   131,   132,   133,   134,    -1,   136,   137,
     138,    -1,   140,   141,   142,    -1,   144,   145,   146,   147,
      -1,   149,   150,   151,   152,    -1,    -1,   155,    -1,   157,
     158,   159,   160,    -1,   162,    -1,   164,   165,    -1,   167,
     168,   169,   170,   171,   172,    -1,   174,    -1,    -1,   177,
      -1,   179,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,    -1,   191,   192,   193,   194,   195,   196,    -1,
     198,   199,    -1,   201,   202,   203,   204,   205,   206,    -1,
     208,    -1,   210,   211,   212,   213,   214,   215,   216,   217,
     218,   219,    -1,    -1,   222,   223,   224,   225,    -1,   227,
     228,   229,    -1,    -1,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,    -1,    -1,   263,   264,   265,   266,    -1,
      -1,   269,   270,   271,   272,   273,    -1,   275,   276,    -1,
      -1,   279,   280,   281,    -1,    -1,   284,    -1,   286,   287,
     288,    -1,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,    -1,   301,   302,    -1,   304,   305,    -1,   307,
     308,   309,    -1,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
      -1,   339,   340,   341,   342,   343,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,    -1,
     358,   359,   360,   361,   362,    -1,   364,    -1,   366,   367,
     368,   369,   370,   371,   372,   373,    -1,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,    -1,
      -1,   389,   390,    -1,   392,   393,   394,   395,   396,   397,
     398,    -1,   400,   401,    -1,    -1,   404,   405,    -1,   407,
      -1,    -1,   410,   411,   412,   413,   414,   415,   416,    -1,
      -1,   419,   420,   421,   422,   423,    -1,    -1,   426,   427,
     428,   429,   430,    -1,   432,    -1,   434,   435,   436,   437,
     438,   439,    -1,    -1,   442,    -1,    -1,   445,   446,   447,
     448,   449,   450,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   462,   463,   464,   465
};

/* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
   symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,    18,    28,    30,    31,    46,    55,    67,    78,    89,
      91,   109,   123,   133,   139,   147,   149,   150,   189,   228,
     304,   307,   335,   343,   357,   364,   368,   378,   391,   426,
     431,   444,   468,   482,   490,   491,   492,   493,   504,   505,
     507,   511,   525,   526,   528,   530,   537,   539,   585,   591,
     594,   595,   612,   613,   614,   615,   616,   617,   661,   787,
     790,   793,   800,   801,   802,   803,   804,   811,   815,   821,
     823,   828,   832,   833,   836,   837,   839,   840,   842,   404,
     447,   538,   193,   350,   358,   391,   437,   538,     3,    18,
      19,    20,    21,    22,    23,    24,    25,    27,    28,    29,
      37,    38,    40,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    53,    54,    55,    56,    57,    58,
      61,    62,    63,    64,    65,    67,    68,    69,    70,    71,
      73,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      85,    86,    87,    88,    89,    90,    92,    93,    94,    95,
      99,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   114,   116,   117,   118,   119,   120,   121,   123,   124,
     125,   126,   127,   130,   131,   132,   133,   134,   136,   137,
     138,   140,   141,   142,   144,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   155,   157,   158,   159,   160,   162,
     164,   165,   167,   168,   169,   170,   171,   172,   174,   176,
     177,   179,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,   191,   192,   193,   194,   195,   196,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   208,   210,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   222,   223,
     224,   225,   227,   228,   229,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   263,   264,   265,   266,   268,
     269,   270,   271,   272,   273,   275,   276,   279,   280,   281,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   358,
     359,   360,   361,   362,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   389,   390,   392,
     393,   394,   395,   396,   397,   398,   400,   401,   404,   405,
     406,   407,   408,   410,   411,   412,   413,   414,   415,   416,
     419,   420,   421,   422,   423,   426,   427,   428,   429,   430,
     431,   432,   434,   435,   436,   437,   438,   439,   442,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     717,   774,   778,   780,   845,   846,   847,   538,    49,   482,
     607,   168,   172,   229,   236,   282,   350,   395,   397,   418,
     421,   583,   592,   799,     3,    26,   307,   772,   778,   845,
      20,    73,    88,   142,   151,   163,   168,   193,   236,   239,
     302,   316,   347,   350,   358,   361,   380,   391,   398,   407,
     437,   586,   587,   590,   538,   772,    91,   435,   482,   507,
     594,   612,   807,   811,   828,   842,   106,   106,     5,   777,
     822,   778,   772,    26,   400,   404,   778,   834,   835,   838,
     538,    26,   128,   624,   625,   229,   350,   362,   400,   816,
     817,   838,   538,   278,   672,   770,   778,   167,   482,   825,
     482,   323,   618,   619,   772,   618,   613,   614,   617,     0,
     485,   118,   203,   423,   143,   207,   283,   417,   626,   627,
     613,   615,   616,   486,   435,   805,    26,   400,   404,   431,
     612,   838,   184,   770,   772,   184,   770,   184,   672,   184,
     770,   482,   480,   484,   761,   763,   507,   594,   612,   789,
     828,   770,   395,   397,   395,   397,   333,   184,   778,   323,
     358,   391,   437,   770,   193,    26,   772,   241,   407,   105,
     391,   437,   353,   184,   588,   778,   781,   184,   771,   772,
     184,   772,   482,   529,   583,   807,     3,   808,   810,   811,
     813,   814,   845,   846,   847,   805,   777,   777,   471,   482,
     482,   788,   465,   213,   484,   277,     4,     6,     7,     8,
       9,    10,    48,    50,    51,    59,    60,    63,    64,    71,
      73,    96,    97,    98,    99,   100,   101,   102,   110,   111,
     113,   132,   148,   153,   154,   159,   205,   206,   208,   230,
     231,   255,   257,   262,   267,   268,   270,   279,   289,   303,
     320,   345,   363,   372,   387,   400,   401,   406,   408,   409,
     424,   432,   466,   473,   474,   475,   482,   487,   613,   687,
     690,   693,   694,   695,   697,   698,   699,   700,   702,   703,
     714,   716,   717,   718,   720,   733,   737,   755,   760,   767,
     768,   774,   775,   776,   777,   778,   766,   767,   816,   777,
     816,   465,   166,   402,   471,   482,   770,   475,   763,     3,
     165,   167,   435,   811,   824,   826,   165,   827,   714,   741,
     618,   486,   482,   783,   483,   483,   492,   166,   209,   672,
     829,    26,   128,   623,   623,    53,   623,   156,   161,   226,
     274,   632,   634,   635,   654,   656,   657,   658,   626,   627,
     482,   770,   465,   213,   148,    22,    28,   133,   281,   331,
     335,   364,   428,   498,   501,   502,   331,   148,    35,    54,
     104,   192,   240,   248,   260,   291,   331,   336,   358,   364,
     378,   501,   531,   534,   148,   331,   364,   501,   148,   331,
     364,   501,    26,   128,   433,   475,   483,   714,   742,   743,
     780,   784,   714,   762,     3,    26,    30,    31,    32,    33,
      34,    35,    36,    39,    52,    59,    60,    66,    72,    74,
      84,    91,    96,    97,    98,   100,   101,   102,   113,   115,
     122,   128,   129,   135,   139,   143,   154,   156,   161,   163,
     166,   173,   175,   178,   190,   197,   207,   209,   220,   221,
     226,   230,   231,   262,   267,   274,   277,   278,   282,   283,
     300,   310,   325,   338,   357,   363,   374,   388,   391,   399,
     402,   403,   409,   417,   418,   424,   425,   433,   440,   441,
     443,   444,   475,   773,   785,   845,   846,   847,   848,   761,
     483,   482,   573,   583,   262,   791,   437,   184,   770,   184,
     770,   844,   770,   482,   593,    80,   796,   448,    81,   125,
     294,   396,   148,    57,   337,   486,   589,   484,   782,   148,
     486,   589,   148,   277,   741,   391,   483,   486,     4,   154,
     277,   409,   473,   474,   533,   536,   776,   777,   806,   808,
     809,   812,   807,   482,   602,   606,   533,   812,   818,   820,
     742,     3,    48,    50,    51,    63,    64,   110,   111,   159,
     205,   206,   208,   255,   257,   270,   320,   345,   365,   372,
     400,   401,   432,   683,   684,   686,   688,   690,   692,   694,
     695,   696,   698,   699,   702,   703,   744,   780,   845,    35,
     224,   778,   482,   764,   434,   701,   714,   759,   482,   701,
     701,   482,   161,   482,   482,   482,   689,   689,   306,   613,
     482,   482,   691,   482,   482,    63,    64,   701,   714,   482,
     689,   482,   482,   482,   482,   482,   446,   468,   482,   704,
     482,   704,   482,   482,   714,   714,   714,   613,   714,   741,
     764,   763,   777,   482,   482,   776,   777,     3,     8,    11,
      15,    16,    17,    32,    35,    40,    47,    72,   171,   185,
     190,   211,   212,   225,   262,   265,   279,   282,   369,   466,
     469,   470,   471,   473,   474,   475,   476,   477,   478,   735,
     736,   737,   739,   445,   721,   288,   714,   209,   486,   620,
     482,   777,   763,   620,     3,   113,   229,   533,   703,   777,
     819,    95,   113,   820,   113,   820,   770,   483,   486,   805,
     483,   486,   619,   771,    35,   829,   509,   770,    35,   778,
     364,   615,   615,   628,   629,   714,   615,   158,   259,   648,
     215,   260,   319,   367,   423,    26,   643,   714,   473,   474,
     644,   645,   714,   716,   654,   655,   635,   634,   632,   633,
     161,   657,   272,   659,   632,   654,   741,   783,   224,   770,
      66,    74,    84,   163,   184,   310,   418,   554,   564,   579,
     778,    74,    84,   506,    84,   506,   482,   402,   482,   552,
     235,   421,   552,    84,   486,   402,   770,   686,   533,    53,
     535,   533,   533,   104,   240,   248,    53,   402,   444,   468,
     532,   253,   350,   532,   534,   672,    84,   402,   506,   350,
     770,   402,   350,   742,   742,   743,   483,   486,   626,   627,
      13,    14,   481,   488,   402,   572,   577,   778,   444,   605,
     323,   437,   148,    91,   526,   539,   792,   793,   840,   770,
     262,   527,   531,   262,   482,   573,    35,   573,   483,   742,
      35,   184,   567,   778,   797,   588,   781,   773,   484,   771,
     772,   772,   781,   483,   184,   770,   844,   807,   813,     4,
     776,     4,   776,   604,   611,   785,    49,    93,   119,   137,
     141,   162,   165,   179,   267,   275,   317,   608,   486,   483,
     486,   686,   482,    34,   685,   107,   108,   181,   182,   242,
     243,   244,   245,   246,   247,   250,   251,   354,   355,   462,
     463,   482,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   483,   486,   689,   782,   789,   741,   761,   482,   440,
     756,   757,   714,   741,   482,   776,   776,   741,     3,   705,
     706,   707,   708,   709,   710,   711,   712,   745,   746,   777,
     776,   776,   776,   701,   701,   714,     8,    15,    16,    17,
     469,   470,   471,   473,   474,   475,   476,   477,   478,   735,
     740,   778,   714,   747,   473,   474,   482,   715,   716,   737,
     749,   483,   741,   714,   741,   750,   400,   400,   776,   776,
     714,    52,   166,   221,   403,   714,   741,   753,   483,   486,
     776,   714,   713,   713,   684,   714,   714,   714,   714,     5,
     785,   786,   400,    39,   388,   765,   781,   714,   714,   482,
     613,   754,   128,   154,   262,   267,   272,   409,   419,   714,
     267,   482,   714,   402,    47,   171,   185,   190,   225,   369,
     714,   714,   714,   714,   714,   714,   714,   714,   714,   714,
      26,    33,   374,   734,   175,   157,   722,   345,   482,   733,
     172,   229,   391,   395,   397,   421,   621,   770,   768,   166,
     662,   742,   662,   482,   777,   483,   770,   824,   770,   832,
     714,   483,   482,   425,   831,   113,   290,   482,   508,   612,
      35,   778,   482,   513,   522,   524,   778,   486,    36,   122,
     425,   630,   345,   346,   473,   474,   645,   647,   716,   367,
     215,   278,   486,     4,   646,   776,   646,   345,   346,   647,
     769,   770,   266,   371,   660,   655,   633,   483,   331,   501,
     482,   184,   564,   772,   215,   262,   215,   425,   482,   557,
     684,   772,   778,   184,   772,   184,   778,    22,   133,   364,
     497,   500,   547,   562,   785,   772,   556,   576,   785,   772,
     498,   772,   331,   364,   501,   531,   533,   781,   772,   533,
     781,   772,   533,   331,   364,   501,   772,   772,   772,   772,
     331,   364,   501,   772,   772,   626,   626,   626,   433,   743,
     483,   714,   714,   714,   762,   315,   601,   483,   486,   275,
     166,   402,   596,   437,   770,   778,   583,   482,   148,   148,
     225,   554,   564,   568,   571,   580,   582,   778,   444,   446,
     559,   147,   612,   444,   798,   483,   714,   262,   277,   589,
     773,   589,   277,   589,   262,    35,   483,   486,   475,   482,
     533,   603,   812,    35,   600,   777,   600,   262,   267,   317,
     600,   600,   818,    34,   685,   682,   778,   480,   480,   776,
     402,   402,   402,   402,   684,   689,   483,   741,   714,   135,
     757,   758,    35,   483,   714,   483,   483,   483,   483,   166,
     483,   483,   483,   486,   483,   484,   300,   748,   483,   715,
     715,   714,    11,    15,    16,    17,   190,   211,   279,   469,
     470,   471,   473,   474,   475,   476,   477,   478,   737,   715,
     483,   483,   161,   166,   751,   752,   483,   465,   465,   483,
     483,    35,   753,   741,   753,   753,   166,   483,   764,   714,
     483,   483,   465,   715,   715,   141,   741,   166,   128,   154,
     267,   272,   409,   419,   482,   141,   740,   714,   388,   765,
     714,   754,   714,   402,   482,   613,   482,   482,   287,   726,
     395,   397,   395,   397,   770,   391,   622,   622,   622,   220,
     346,   482,   613,   663,   664,   665,   672,   673,   717,   719,
     720,   778,   441,   678,   626,   678,   776,   713,   783,   789,
     663,   441,   830,   431,   390,   424,   517,   512,   521,   778,
     277,   514,   778,   518,   524,   486,   662,   471,   764,   629,
     279,   735,   738,   467,   631,     4,   776,   647,   278,   423,
     644,   486,   234,   402,   714,   262,   579,   482,   148,   482,
     557,   193,   577,   540,   281,   550,   540,    22,   133,   335,
     336,   364,   494,   495,   496,   502,   503,   148,   589,   148,
     589,   547,   562,   547,   483,   486,   543,   777,   483,   486,
     471,   484,   402,   350,    84,   402,   506,   350,   402,   402,
     402,   350,   483,   483,   483,   743,   481,   381,   382,   610,
     777,   572,   601,   770,   573,   791,   391,   577,   770,   770,
     844,   770,   483,   486,   275,   552,   275,   277,   551,   772,
     444,   843,   552,    35,   148,   770,   781,   148,   604,   598,
     609,   812,   777,   777,   267,   577,   475,   577,   777,   777,
     480,   483,   486,   684,   776,   481,   776,   483,   706,   708,
     709,   710,   709,   710,   710,   483,   399,   714,   139,   684,
     483,   714,   714,   740,   714,   751,   684,   715,   715,   715,
     715,   128,   262,   272,   715,   715,   715,   715,   715,   715,
     715,   715,   715,   715,   714,   714,   752,   751,   704,   704,
     684,   483,   483,   483,   741,   483,   713,   714,    32,    32,
     714,   483,   714,   166,   482,   744,   714,   483,   141,   715,
     715,   141,   141,   714,   714,   627,   441,   482,   727,   778,
     622,   622,   622,   622,   770,   770,   770,   613,   673,   166,
     613,   664,   665,    35,   666,   667,   778,   486,    92,   167,
     199,   214,   223,   256,   341,   669,   667,    35,   666,   668,
     778,   468,   677,   763,   714,   175,   649,   483,   649,   483,
     483,   714,   338,   516,   430,   483,   486,   764,    82,   516,
     483,   486,   513,   830,   714,   482,   631,   158,   219,   278,
     770,   772,   483,   148,   577,   564,   577,   540,   567,   483,
     115,   197,   260,   262,   563,   482,   574,   170,   113,   183,
     262,   552,   532,   105,   113,   170,   262,   380,   383,   534,
     552,   364,   496,   412,   772,   778,   500,   576,   261,   279,
     365,   473,   474,   533,   541,   578,   684,   738,   777,   780,
     848,   785,   772,   772,   772,   772,   772,   772,   772,   772,
     772,   772,   626,   532,   610,   482,   798,   184,   770,   483,
     527,   482,    35,   561,   559,   568,    78,   529,   105,   260,
     612,   567,   425,   795,   589,   844,   483,   486,   577,   776,
     778,   481,   481,   714,   483,   483,   752,   166,   128,   272,
     482,   483,   714,   714,   714,   744,   483,   714,    32,    32,
     714,   714,   141,   483,   483,   714,   728,   778,   770,   770,
     770,   770,   667,   668,   482,   483,     5,   778,   779,   393,
     640,   641,   482,   664,   214,   286,   670,   664,   670,   214,
     669,   670,   214,   641,   482,   778,   641,   482,   284,    53,
     178,   653,   777,   653,   777,   767,   612,   290,   612,   512,
     277,   482,   510,   471,   524,   516,   740,   540,   564,   483,
     483,   444,   570,   116,   186,   195,   115,   427,   547,   565,
      66,    72,    84,   113,   115,   170,   197,   262,   267,   310,
     325,   418,   545,   546,   558,    29,    53,   584,   184,   267,
     533,   714,   584,   267,   473,   474,   536,   778,   684,   589,
     589,   780,   782,   471,   402,   402,   483,   602,   425,   597,
     599,   577,    35,   262,   482,   798,   571,   147,   612,   145,
     191,   551,   118,   133,   309,   843,   105,   444,   841,   277,
     778,   794,   482,    35,   609,   481,   684,   715,   166,   482,
     744,   483,   714,   714,   714,   483,   296,   729,   674,   675,
     719,   666,   482,     4,     9,   636,   638,   639,   778,   771,
     664,   277,   425,   671,   664,   214,   664,   679,   680,   778,
     482,   679,   778,   482,   650,   651,   652,   714,   714,   443,
     723,   723,   517,    84,   482,   515,   523,   719,   778,   129,
     714,   483,   325,   570,   482,   560,   540,   483,   486,   482,
     781,   772,   715,   584,   116,   186,   115,   267,   215,   770,
     570,   113,    35,   148,    72,   681,   782,   477,   541,   772,
     772,   532,   120,   483,   612,   148,    35,   483,   772,   843,
      26,    77,    85,   114,   183,   194,   380,   383,   555,   555,
     346,   346,    58,    66,   229,   770,   523,   715,   744,   483,
      53,   626,   483,   486,    35,   676,   771,   299,   477,   299,
     346,   477,   482,   482,   483,   714,   482,   664,   671,   483,
     486,   684,   679,   483,   483,   486,   724,   725,   778,   425,
     637,   637,   430,   772,   714,   483,   486,    72,   519,   519,
     263,   423,   770,   540,   566,   569,   785,   547,   714,   262,
     546,    35,   570,   573,   183,   781,   425,   499,   477,   412,
     602,   777,   798,   841,   770,   612,   559,   529,    66,   280,
      66,   795,   483,   483,   741,   318,   346,   730,   677,   674,
     482,   483,   778,   636,   771,   680,   681,   483,   651,   486,
      35,   348,   612,   483,   678,   515,   781,   520,   781,   520,
     364,   573,   483,   486,   471,   483,   183,   238,   581,   482,
     542,   714,   412,    35,   482,   841,   551,   843,   280,   280,
     482,   798,    47,    95,   414,   714,   731,   732,   731,   483,
     679,   483,   486,   483,   483,   725,   727,   639,   519,   630,
     630,   522,   581,   569,   541,   260,   553,   542,   167,   295,
     370,   277,   548,   549,   575,   531,   612,   523,   678,   732,
     345,   160,   305,   160,   305,   483,     9,   332,   642,   520,
     631,   631,   678,   549,   195,   118,   423,   277,   575,   277,
     548,   483,   841,   483,    32,   483,   482,   630,   540,    57,
     260,   337,   364,   544,   544,   798,   732,     9,   631,    21,
     113,   267,   678,   483
};

#define yyerrok		(yyerrstatus = 0)
#define yyclearin	(yychar = YYEMPTY)
#define YYEMPTY		(-2)
#define YYEOF		0

#define YYACCEPT	goto yyacceptlab
#define YYABORT		goto yyabortlab
#define YYERROR		goto yyerrorlab


/* Like YYERROR except do call yyerror.  This remains here temporarily
   to ease the transition to the new meaning of YYERROR, for GCC.
   Once GCC version 2 has supplanted version 1, this can go.  */

#define YYFAIL		goto yyerrlab

#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)					\
do								\
  if (yychar == YYEMPTY && yylen == 1)				\
    {								\
      yychar = (Token);						\
      yylval = (Value);						\
      yytoken = YYTRANSLATE (yychar);				\
      YYPOPSTACK (1);						\
      goto yybackup;						\
    }								\
  else								\
    {								\
      yyerror (&yylloc, yyscanner, YY_("syntax error: cannot back up")); \
      YYERROR;							\
    }								\
while (YYID (0))


#define YYTERROR	1
#define YYERRCODE	256


/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#define YYRHSLOC(Rhs, K) ((Rhs)[K])
#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)				\
    do									\
      if (YYID (N))                                                    \
	{								\
	  (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;	\
	  (Current).first_column = YYRHSLOC (Rhs, 1).first_column;	\
	  (Current).last_line    = YYRHSLOC (Rhs, N).last_line;		\
	  (Current).last_column  = YYRHSLOC (Rhs, N).last_column;	\
	}								\
      else								\
	{								\
	  (Current).first_line   = (Current).last_line   =		\
	    YYRHSLOC (Rhs, 0).last_line;				\
	  (Current).first_column = (Current).last_column =		\
	    YYRHSLOC (Rhs, 0).last_column;				\
	}								\
    while (YYID (0))
#endif


/* YY_LOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

#ifndef YY_LOCATION_PRINT
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
#  define YY_LOCATION_PRINT(File, Loc)			\
     fprintf (File, "%d.%d-%d.%d",			\
	      (Loc).first_line, (Loc).first_column,	\
	      (Loc).last_line,  (Loc).last_column)
# else
#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
# endif
#endif


/* YYLEX -- calling `yylex' with the right arguments.  */

#ifdef YYLEX_PARAM
# define YYLEX yylex (&yylval, &yylloc, YYLEX_PARAM)
#else
# define YYLEX yylex (&yylval, &yylloc, yyscanner)
#endif

/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)			\
do {						\
  if (yydebug)					\
    YYFPRINTF Args;				\
} while (YYID (0))

# define YY_SYMBOL_PRINT(Title, Type, Value, Location)			  \
do {									  \
  if (yydebug)								  \
    {									  \
      YYFPRINTF (stderr, "%s ", Title);					  \
      yy_symbol_print (stderr,						  \
		  Type, Value, Location, yyscanner); \
      YYFPRINTF (stderr, "\n");						  \
    }									  \
} while (YYID (0))


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
#else
static void
yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  if (!yyvaluep)
    return;
  YYUSE (yylocationp);
  YYUSE (yyscanner);
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# else
  YYUSE (yyoutput);
# endif
  switch (yytype)
    {
      default:
	break;
    }
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
#else
static void
yy_symbol_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  if (yytype < YYNTOKENS)
    YYFPRINTF (yyoutput, "token %s (", yytname[yytype]);
  else
    YYFPRINTF (yyoutput, "nterm %s (", yytname[yytype]);

  YY_LOCATION_PRINT (yyoutput, *yylocationp);
  YYFPRINTF (yyoutput, ": ");
  yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_stack_print (yytype_int16 *bottom, yytype_int16 *top)
#else
static void
yy_stack_print (bottom, top)
    yytype_int16 *bottom;
    yytype_int16 *top;
#endif
{
  YYFPRINTF (stderr, "Stack now");
  for (; bottom <= top; ++bottom)
    YYFPRINTF (stderr, " %d", *bottom);
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)				\
do {								\
  if (yydebug)							\
    yy_stack_print ((Bottom), (Top));				\
} while (YYID (0))


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_reduce_print (YYSTYPE *yyvsp, YYLTYPE *yylsp, int yyrule, core_yyscan_t yyscanner)
#else
static void
yy_reduce_print (yyvsp, yylsp, yyrule, yyscanner)
    YYSTYPE *yyvsp;
    YYLTYPE *yylsp;
    int yyrule;
    core_yyscan_t yyscanner;
#endif
{
  int yynrhs = yyr2[yyrule];
  int yyi;
  unsigned long int yylno = yyrline[yyrule];
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
	     yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      fprintf (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
		       &(yyvsp[(yyi + 1) - (yynrhs)])
		       , &(yylsp[(yyi + 1) - (yynrhs)])		       , yyscanner);
      fprintf (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)		\
do {					\
  if (yydebug)				\
    yy_reduce_print (yyvsp, yylsp, Rule, yyscanner); \
} while (YYID (0))

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef	YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif



#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static YYSIZE_T
yystrlen (const char *yystr)
#else
static YYSIZE_T
yystrlen (yystr)
    const char *yystr;
#endif
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static char *
yystpcpy (char *yydest, const char *yysrc)
#else
static char *
yystpcpy (yydest, yysrc)
    char *yydest;
    const char *yysrc;
#endif
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
	switch (*++yyp)
	  {
	  case '\'':
	  case ',':
	    goto do_not_strip_quotes;

	  case '\\':
	    if (*++yyp != '\\')
	      goto do_not_strip_quotes;
	    /* Fall through.  */
	  default:
	    if (yyres)
	      yyres[yyn] = *yyp;
	    yyn++;
	    break;

	  case '"':
	    if (yyres)
	      yyres[yyn] = '\0';
	    return yyn;
	  }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into YYRESULT an error message about the unexpected token
   YYCHAR while in state YYSTATE.  Return the number of bytes copied,
   including the terminating null byte.  If YYRESULT is null, do not
   copy anything; just return the number of bytes that would be
   copied.  As a special case, return 0 if an ordinary "syntax error"
   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
   size calculation.  */
static YYSIZE_T
yysyntax_error (char *yyresult, int yystate, int yychar)
{
  int yyn = yypact[yystate];

  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
    return 0;
  else
    {
      int yytype = YYTRANSLATE (yychar);
      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
      YYSIZE_T yysize = yysize0;
      YYSIZE_T yysize1;
      int yysize_overflow = 0;
      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
      int yyx;

# if 0
      /* This is so xgettext sees the translatable formats that are
	 constructed on the fly.  */
      YY_("syntax error, unexpected %s");
      YY_("syntax error, unexpected %s, expecting %s");
      YY_("syntax error, unexpected %s, expecting %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
# endif
      char *yyfmt;
      char const *yyf;
      static char const yyunexpected[] = "syntax error, unexpected %s";
      static char const yyexpecting[] = ", expecting %s";
      static char const yyor[] = " or %s";
      char yyformat[sizeof yyunexpected
		    + sizeof yyexpecting - 1
		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
		       * (sizeof yyor - 1))];
      char const *yyprefix = yyexpecting;

      /* Start YYX at -YYN if negative to avoid negative indexes in
	 YYCHECK.  */
      int yyxbegin = yyn < 0 ? -yyn : 0;

      /* Stay within bounds of both yycheck and yytname.  */
      int yychecklim = YYLAST - yyn + 1;
      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
      int yycount = 1;

      yyarg[0] = yytname[yytype];
      yyfmt = yystpcpy (yyformat, yyunexpected);

      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
	  {
	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
	      {
		yycount = 1;
		yysize = yysize0;
		yyformat[sizeof yyunexpected - 1] = '\0';
		break;
	      }
	    yyarg[yycount++] = yytname[yyx];
	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
	    yysize_overflow |= (yysize1 < yysize);
	    yysize = yysize1;
	    yyfmt = yystpcpy (yyfmt, yyprefix);
	    yyprefix = yyor;
	  }

      yyf = YY_(yyformat);
      yysize1 = yysize + yystrlen (yyf);
      yysize_overflow |= (yysize1 < yysize);
      yysize = yysize1;

      if (yysize_overflow)
	return YYSIZE_MAXIMUM;

      if (yyresult)
	{
	  /* Avoid sprintf, as that infringes on the user's name space.
	     Don't have undefined behavior even if the translation
	     produced a string with the wrong number of "%s"s.  */
	  char *yyp = yyresult;
	  int yyi = 0;
	  while ((*yyp = *yyf) != '\0')
	    {
	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
		{
		  yyp += yytnamerr (yyp, yyarg[yyi++]);
		  yyf += 2;
		}
	      else
		{
		  yyp++;
		  yyf++;
		}
	    }
	}
      return yysize;
    }
}
#endif /* YYERROR_VERBOSE */


/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, YYLTYPE *yylocationp, core_yyscan_t yyscanner)
#else
static void
yydestruct (yymsg, yytype, yyvaluep, yylocationp, yyscanner)
    const char *yymsg;
    int yytype;
    YYSTYPE *yyvaluep;
    YYLTYPE *yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  YYUSE (yyvaluep);
  YYUSE (yylocationp);
  YYUSE (yyscanner);

  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  switch (yytype)
    {

      default:
	break;
    }
}


/* Prevent warnings from -Wmissing-prototypes.  */

#ifdef YYPARSE_PARAM
#if defined __STDC__ || defined __cplusplus
int yyparse (void *YYPARSE_PARAM);
#else
int yyparse ();
#endif
#else /* ! YYPARSE_PARAM */
#if defined __STDC__ || defined __cplusplus
int yyparse (core_yyscan_t yyscanner);
#else
int yyparse ();
#endif
#endif /* ! YYPARSE_PARAM */






/*----------.
| yyparse.  |
`----------*/

#ifdef YYPARSE_PARAM
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (void *YYPARSE_PARAM)
#else
int
yyparse (YYPARSE_PARAM)
    void *YYPARSE_PARAM;
#endif
#else /* ! YYPARSE_PARAM */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (core_yyscan_t yyscanner)
#else
int
yyparse (yyscanner)
    core_yyscan_t yyscanner;
#endif
#endif
{
  /* The look-ahead symbol.  */
int yychar;

/* The semantic value of the look-ahead symbol.  */
YYSTYPE yylval;

/* Number of syntax errors so far.  */
int yynerrs;
/* Location data for the look-ahead symbol.  */
YYLTYPE yylloc;

  int yystate;
  int yyn;
  int yyresult;
  /* Number of tokens to shift before error messages enabled.  */
  int yyerrstatus;
  /* Look-ahead token as an internal (translated) token number.  */
  int yytoken = 0;
#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

  /* Three stacks and their tools:
     `yyss': related to states,
     `yyvs': related to semantic values,
     `yyls': related to locations.

     Refer to the stacks thru separate pointers, to allow yyoverflow
     to reallocate them elsewhere.  */

  /* The state stack.  */
  yytype_int16 yyssa[YYINITDEPTH];
  yytype_int16 *yyss = yyssa;
  yytype_int16 *yyssp;

  /* The semantic value stack.  */
  YYSTYPE yyvsa[YYINITDEPTH];
  YYSTYPE *yyvs = yyvsa;
  YYSTYPE *yyvsp;

  /* The location stack.  */
  YYLTYPE yylsa[YYINITDEPTH];
  YYLTYPE *yyls = yylsa;
  YYLTYPE *yylsp;
  /* The locations where the error started and ended.  */
  YYLTYPE yyerror_range[2];

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))

  YYSIZE_T yystacksize = YYINITDEPTH;

  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;
  YYLTYPE yyloc;

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY;		/* Cause a token to be read.  */

  /* Initialize stack pointers.
     Waste one element of value and location stack
     so that they stay on the same level as the state stack.
     The wasted elements are never initialized.  */

  yyssp = yyss;
  yyvsp = yyvs;
  yylsp = yyls;
#if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
  /* Initialize the default location before parsing starts.  */
  yylloc.first_line   = yylloc.last_line   = 1;
  yylloc.first_column = yylloc.last_column = 0;
#endif

  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
	/* Give user a chance to reallocate the stack.  Use copies of
	   these so that the &'s don't force the real ones into
	   memory.  */
	YYSTYPE *yyvs1 = yyvs;
	yytype_int16 *yyss1 = yyss;
	YYLTYPE *yyls1 = yyls;

	/* Each stack pointer address is followed by the size of the
	   data in use in that stack, in bytes.  This used to be a
	   conditional around just the two extra args, but that might
	   be undefined if yyoverflow is a macro.  */
	yyoverflow (YY_("memory exhausted"),
		    &yyss1, yysize * sizeof (*yyssp),
		    &yyvs1, yysize * sizeof (*yyvsp),
		    &yyls1, yysize * sizeof (*yylsp),
		    &yystacksize);
	yyls = yyls1;
	yyss = yyss1;
	yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
	goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
	yystacksize = YYMAXDEPTH;

      {
	yytype_int16 *yyss1 = yyss;
	union yyalloc *yyptr =
	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
	if (! yyptr)
	  goto yyexhaustedlab;
	YYSTACK_RELOCATE (yyss);
	YYSTACK_RELOCATE (yyvs);
	YYSTACK_RELOCATE (yyls);
#  undef YYSTACK_RELOCATE
	if (yyss1 != yyssa)
	  YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;
      yylsp = yyls + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
		  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
	YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     look-ahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to look-ahead token.  */
  yyn = yypact[yystate];
  if (yyn == YYPACT_NINF)
    goto yydefault;

  /* Not known => get a look-ahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid look-ahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = YYLEX;
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yyn == 0 || yyn == YYTABLE_NINF)
	goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the look-ahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token unless it is eof.  */
  if (yychar != YYEOF)
    yychar = YYEMPTY;

  yystate = yyn;
  *++yyvsp = yylval;
  *++yylsp = yylloc;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     `$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];

  /* Default location.  */
  YYLLOC_DEFAULT (yyloc, (yylsp - yylen), yylen);
  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 2:
#line 458 "third_party/libpg_query/grammar/grammar.y"
    {
				pg_yyget_extra(yyscanner)->parsetree = (yyvsp[(1) - (1)].list);
			;}
    break;

  case 3:
#line 474 "third_party/libpg_query/grammar/grammar.y"
    {
					if ((yyvsp[(1) - (3)].list) != NIL)
					{
						/* update length of previous stmt */
						updateRawStmtEnd(llast_node(PGRawStmt, (yyvsp[(1) - (3)].list)), (yylsp[(2) - (3)]));
					}
					if ((yyvsp[(3) - (3)].node) != NULL)
						(yyval.list) = lappend((yyvsp[(1) - (3)].list), makeRawStmt((yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]) + 1));
					else
						(yyval.list) = (yyvsp[(1) - (3)].list);
				;}
    break;

  case 4:
#line 486 "third_party/libpg_query/grammar/grammar.y"
    {
					if ((yyvsp[(1) - (1)].node) != NULL)
						(yyval.list) = list_make1(makeRawStmt((yyvsp[(1) - (1)].node), 0));
					else
						(yyval.list) = NIL;
				;}
    break;

  case 38:
#line 528 "third_party/libpg_query/grammar/grammar.y"
    { (yyval.node) = NULL; ;}
    break;

  case 39:
#line 10 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_TABLE;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 40:
#line 19 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_TABLE;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 41:
#line 28 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_INDEX;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 42:
#line 37 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_INDEX;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 43:
#line 46 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_SEQUENCE;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 44:
#line 55 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_SEQUENCE;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 45:
#line 64 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_VIEW;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 46:
#line 73 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_VIEW;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 47:
#line 86 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 48:
#line 88 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 49:
#line 93 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = (yyvsp[(3) - (3)].node); ;}
    break;

  case 50:
#line 94 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = NULL; ;}
    break;

  case 51:
#line 100 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 52:
#line 104 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 53:
#line 108 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					if (strcmp((yyvsp[(2) - (2)].defelt)->defname, "as") == 0 ||
						strcmp((yyvsp[(2) - (2)].defelt)->defname, "restart") == 0 ||
						strcmp((yyvsp[(2) - (2)].defelt)->defname, "owned_by") == 0)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("sequence option \"%s\" not supported here", (yyvsp[(2) - (2)].defelt)->defname),
								 parser_errposition((yylsp[(2) - (2)]))));
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
				;}
    break;

  case 54:
#line 119 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("generated", (PGNode *) makeInteger((yyvsp[(3) - (3)].ival)), (yylsp[(1) - (3)]));
				;}
    break;

  case 55:
#line 127 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 56:
#line 131 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 57:
#line 140 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(2) - (2)].node);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 58:
#line 149 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(5) - (5)].node);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 59:
#line 158 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(3) - (3)].node);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 60:
#line 167 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(6) - (6)].node);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 61:
#line 176 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ColumnDefault;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (yyvsp[(4) - (4)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 62:
#line 185 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropNotNull;
					n->name = (yyvsp[(3) - (6)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 63:
#line 193 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetNotNull;
					n->name = (yyvsp[(3) - (6)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 64:
#line 201 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetStatistics;
					n->name = (yyvsp[(3) - (6)].str);
					n->def = (PGNode *) makeInteger((yyvsp[(6) - (6)].ival));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 65:
#line 210 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetOptions;
					n->name = (yyvsp[(3) - (5)].str);
					n->def = (PGNode *) (yyvsp[(5) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 66:
#line 219 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ResetOptions;
					n->name = (yyvsp[(3) - (5)].str);
					n->def = (PGNode *) (yyvsp[(5) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 67:
#line 228 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetStorage;
					n->name = (yyvsp[(3) - (6)].str);
					n->def = (PGNode *) makeString((yyvsp[(6) - (6)].str));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 68:
#line 237 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGConstraint *c = makeNode(PGConstraint);

					c->contype = PG_CONSTR_IDENTITY;
					c->generated_when = (yyvsp[(6) - (9)].ival);
					c->options = (yyvsp[(9) - (9)].list);
					c->location = (yylsp[(5) - (9)]);

					n->subtype = PG_AT_AddIdentity;
					n->name = (yyvsp[(3) - (9)].str);
					n->def = (PGNode *) c;

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 69:
#line 254 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetIdentity;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (PGNode *) (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 70:
#line 263 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = AT_DropIdentity;
					n->name = (yyvsp[(3) - (5)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 71:
#line 272 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = AT_DropIdentity;
					n->name = (yyvsp[(3) - (7)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 72:
#line 281 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropColumn;
					n->name = (yyvsp[(5) - (6)].str);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 73:
#line 291 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropColumn;
					n->name = (yyvsp[(3) - (4)].str);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 74:
#line 304 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGColumnDef *def = makeNode(PGColumnDef);
					n->subtype = PG_AT_AlterColumnType;
					n->name = (yyvsp[(3) - (8)].str);
					n->def = (PGNode *) def;
					/* We only use these fields of the PGColumnDef node */
					def->typeName = (yyvsp[(6) - (8)].typnam);
					def->collClause = (PGCollateClause *) (yyvsp[(7) - (8)].node);
					def->raw_default = (yyvsp[(8) - (8)].node);
					def->location = (yylsp[(3) - (8)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 75:
#line 319 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AlterColumnGenericOptions;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (PGNode *) (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 76:
#line 328 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddConstraint;
					n->def = (yyvsp[(2) - (2)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 77:
#line 336 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGConstraint *c = makeNode(PGConstraint);
					n->subtype = PG_AT_AlterConstraint;
					n->def = (PGNode *) c;
					c->contype = PG_CONSTR_FOREIGN; /* others not supported, yet */
					c->conname = (yyvsp[(3) - (4)].str);
					processCASbits((yyvsp[(4) - (4)].ival), (yylsp[(4) - (4)]), "ALTER CONSTRAINT statement",
									&c->deferrable,
									&c->initdeferred,
									NULL, NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 78:
#line 351 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ValidateConstraint;
					n->name = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 79:
#line 359 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropConstraint;
					n->name = (yyvsp[(5) - (6)].str);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 80:
#line 369 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropConstraint;
					n->name = (yyvsp[(3) - (4)].str);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 81:
#line 379 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetLogged;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 82:
#line 386 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetUnLogged;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 83:
#line 393 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetRelOptions;
					n->def = (PGNode *)(yyvsp[(2) - (2)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 84:
#line 401 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ResetRelOptions;
					n->def = (PGNode *)(yyvsp[(2) - (2)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 85:
#line 408 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_GenericOptions;
					n->def = (PGNode *)(yyvsp[(1) - (1)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 86:
#line 418 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 87:
#line 419 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = NULL; ;}
    break;

  case 88:
#line 425 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(1) - (1)].defelt);
				;}
    break;

  case 89:
#line 429 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
					(yyval.defelt)->defaction = PG_DEFELEM_SET;
				;}
    break;

  case 90:
#line 434 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
					(yyval.defelt)->defaction = PG_DEFELEM_ADD;
				;}
    break;

  case 91:
#line 439 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElemExtended(NULL, (yyvsp[(2) - (2)].str), NULL, DEFELEM_DROP, (yylsp[(2) - (2)]));
				;}
    break;

  case 92:
#line 446 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 93:
#line 447 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 94:
#line 452 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 95:
#line 456 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 1; ;}
    break;

  case 96:
#line 457 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 0; ;}
    break;

  case 97:
#line 8 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = (yyvsp[(2) - (2)].str);
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 98:
#line 14 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = (yyvsp[(3) - (3)].str);
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 99:
#line 20 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = NULL;
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 100:
#line 26 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = NULL;
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 101:
#line 7 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SCHEMA;
					n->subname = (yyvsp[(3) - (6)].str);
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 102:
#line 16 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 103:
#line 26 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 104:
#line 36 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 105:
#line 46 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 106:
#line 56 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 107:
#line 66 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 108:
#line 76 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_INDEX;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 109:
#line 86 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_INDEX;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 110:
#line 96 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_COLUMN;
					n->relationType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (8)].range);
					n->subname = (yyvsp[(6) - (8)].str);
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 111:
#line 107 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_COLUMN;
					n->relationType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (10)].range);
					n->subname = (yyvsp[(8) - (10)].str);
					n->newname = (yyvsp[(10) - (10)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 112:
#line 118 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABCONSTRAINT;
					n->relation = (yyvsp[(3) - (8)].range);
					n->subname = (yyvsp[(6) - (8)].str);
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 113:
#line 128 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABCONSTRAINT;
					n->relation = (yyvsp[(5) - (10)].range);
					n->subname = (yyvsp[(8) - (10)].str);
					n->newname = (yyvsp[(10) - (10)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 114:
#line 140 "third_party/libpg_query/grammar/statements/rename.y"
    { (yyval.ival) = COLUMN; ;}
    break;

  case 115:
#line 141 "third_party/libpg_query/grammar/statements/rename.y"
    { (yyval.ival) = 0; ;}
    break;

  case 116:
#line 10 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(5) - (7)].istmt)->relation = (yyvsp[(4) - (7)].range);
					(yyvsp[(5) - (7)].istmt)->onConflictClause = (yyvsp[(6) - (7)].onconflict);
					(yyvsp[(5) - (7)].istmt)->returningList = (yyvsp[(7) - (7)].list);
					(yyvsp[(5) - (7)].istmt)->withClause = (yyvsp[(1) - (7)].with);
					(yyval.node) = (PGNode *) (yyvsp[(5) - (7)].istmt);
				;}
    break;

  case 117:
#line 22 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = (yyvsp[(1) - (1)].node);
				;}
    break;

  case 118:
#line 28 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->override = (yyvsp[(2) - (4)].override);
					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
				;}
    break;

  case 119:
#line 35 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = (yyvsp[(2) - (4)].list);
					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
				;}
    break;

  case 120:
#line 41 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = (yyvsp[(2) - (7)].list);
					(yyval.istmt)->override = (yyvsp[(5) - (7)].override);
					(yyval.istmt)->selectStmt = (yyvsp[(7) - (7)].node);
				;}
    break;

  case 121:
#line 48 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = NULL;
				;}
    break;

  case 122:
#line 58 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
				;}
    break;

  case 123:
#line 62 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(1) - (3)].range)->alias = makeAlias((yyvsp[(3) - (3)].str), NIL);
					(yyval.range) = (yyvsp[(1) - (3)].range);
				;}
    break;

  case 124:
#line 71 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = makeNode(PGInferClause);
					(yyval.infer)->indexElems = (yyvsp[(2) - (4)].list);
					(yyval.infer)->whereClause = (yyvsp[(4) - (4)].node);
					(yyval.infer)->conname = NULL;
					(yyval.infer)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 125:
#line 80 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = makeNode(PGInferClause);
					(yyval.infer)->indexElems = NIL;
					(yyval.infer)->whereClause = NULL;
					(yyval.infer)->conname = (yyvsp[(3) - (3)].str);
					(yyval.infer)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 126:
#line 88 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = NULL;
				;}
    break;

  case 127:
#line 95 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.with) = (yyvsp[(1) - (1)].with); ;}
    break;

  case 128:
#line 96 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.with) = NULL; ;}
    break;

  case 129:
#line 102 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(1) - (2)].str);
					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.target)->val = NULL;
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 130:
#line 114 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(1) - (3)].target)->val = (PGNode *) (yyvsp[(3) - (3)].node);
					(yyval.list) = list_make1((yyvsp[(1) - (3)].target));
				;}
    break;

  case 131:
#line 119 "third_party/libpg_query/grammar/statements/insert.y"
    {
					int ncolumns = list_length((yyvsp[(2) - (5)].list));
					int i = 1;
					PGListCell *col_cell;

					/* Create a PGMultiAssignRef source for each target */
					foreach(col_cell, (yyvsp[(2) - (5)].list))
					{
						PGResTarget *res_col = (PGResTarget *) lfirst(col_cell);
						PGMultiAssignRef *r = makeNode(PGMultiAssignRef);

						r->source = (PGNode *) (yyvsp[(5) - (5)].node);
						r->colno = i;
						r->ncolumns = ncolumns;
						res_col->val = (PGNode *) r;
						i++;
					}

					(yyval.list) = (yyvsp[(2) - (5)].list);
				;}
    break;

  case 132:
#line 144 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = makeNode(PGOnConflictClause);
					(yyval.onconflict)->action = PG_ONCONFLICT_UPDATE;
					(yyval.onconflict)->infer = (yyvsp[(3) - (8)].infer);
					(yyval.onconflict)->targetList = (yyvsp[(7) - (8)].list);
					(yyval.onconflict)->whereClause = (yyvsp[(8) - (8)].node);
					(yyval.onconflict)->location = (yylsp[(1) - (8)]);
				;}
    break;

  case 133:
#line 154 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = makeNode(PGOnConflictClause);
					(yyval.onconflict)->action = PG_ONCONFLICT_NOTHING;
					(yyval.onconflict)->infer = (yyvsp[(3) - (5)].infer);
					(yyval.onconflict)->targetList = NIL;
					(yyval.onconflict)->whereClause = NULL;
					(yyval.onconflict)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 134:
#line 163 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = NULL;
				;}
    break;

  case 135:
#line 170 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = (yyvsp[(1) - (5)].str);
					(yyval.ielem)->expr = NULL;
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(2) - (5)].list);
					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].nullorder);
				;}
    break;

  case 136:
#line 181 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[(1) - (5)].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(2) - (5)].list);
					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].nullorder);
				;}
    break;

  case 137:
#line 192 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[(2) - (7)].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(4) - (7)].list);
					(yyval.ielem)->opclass = (yyvsp[(5) - (7)].list);
					(yyval.ielem)->ordering = (yyvsp[(6) - (7)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(7) - (7)].nullorder);
				;}
    break;

  case 138:
#line 206 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 139:
#line 207 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 140:
#line 213 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.override) = PG_OVERRIDING_USER_VALUE; ;}
    break;

  case 141:
#line 214 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.override) = OVERRIDING_SYSTEM_VALUE; ;}
    break;

  case 142:
#line 219 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 143:
#line 220 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].target)); ;}
    break;

  case 144:
#line 226 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 145:
#line 227 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 146:
#line 231 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 147:
#line 232 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 148:
#line 238 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 149:
#line 240 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
    break;

  case 150:
#line 245 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 151:
#line 246 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_concat((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].list)); ;}
    break;

  case 152:
#line 250 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].ielem)); ;}
    break;

  case 153:
#line 251 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].ielem)); ;}
    break;

  case 154:
#line 257 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(1) - (2)].str);
					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.target)->val = NULL;	/* upper production sets this */
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 155:
#line 8 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_NOTHING;
					n->name = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 156:
#line 15 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_ASSIGNMENT;
					n->name = (yyvsp[(2) - (4)].str);
					n->args = (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 157:
#line 23 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_CALL;
					n->name = (yyvsp[(2) - (5)].str);
					n->args = (yyvsp[(4) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 158:
#line 10 "third_party/libpg_query/grammar/statements/create_sequence.y"
    {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[(4) - (5)].range)->relpersistence = (yyvsp[(2) - (5)].ival);
					n->sequence = (yyvsp[(4) - (5)].range);
					n->options = (yyvsp[(5) - (5)].list);
					n->ownerId = InvalidOid;
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 159:
#line 20 "third_party/libpg_query/grammar/statements/create_sequence.y"
    {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[(7) - (8)].range)->relpersistence = (yyvsp[(2) - (8)].ival);
					n->sequence = (yyvsp[(7) - (8)].range);
					n->options = (yyvsp[(8) - (8)].list);
					n->ownerId = InvalidOid;
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 160:
#line 32 "third_party/libpg_query/grammar/statements/create_sequence.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 161:
#line 33 "third_party/libpg_query/grammar/statements/create_sequence.y"
    { (yyval.list) = NIL; ;}
    break;

  case 162:
#line 8 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(2) - (3)].str);
					n->params = (yyvsp[(3) - (3)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 163:
#line 16 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(7) - (9)].str);
					n->params = (yyvsp[(8) - (9)].list);
					ctas->query = (PGNode *) n;
					ctas->into = (yyvsp[(4) - (9)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = false;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(4) - (9)].into)->rel->relpersistence = (yyvsp[(2) - (9)].ival);
					(yyvsp[(4) - (9)].into)->skipData = !((yyvsp[(9) - (9)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 164:
#line 33 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(10) - (12)].str);
					n->params = (yyvsp[(11) - (12)].list);
					ctas->query = (PGNode *) n;
					ctas->into = (yyvsp[(7) - (12)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = true;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(7) - (12)].into)->rel->relpersistence = (yyvsp[(2) - (12)].ival);
					(yyvsp[(7) - (12)].into)->skipData = !((yyvsp[(12) - (12)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 165:
#line 51 "third_party/libpg_query/grammar/statements/execute.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 166:
#line 52 "third_party/libpg_query/grammar/statements/execute.y"
    { (yyval.list) = NIL; ;}
    break;

  case 167:
#line 10 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
					n->sequence = (yyvsp[(3) - (4)].range);
					n->options = (yyvsp[(4) - (4)].list);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 168:
#line 18 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
					n->sequence = (yyvsp[(5) - (6)].range);
					n->options = (yyvsp[(6) - (6)].list);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 169:
#line 29 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 170:
#line 30 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 171:
#line 34 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 172:
#line 35 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 173:
#line 36 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 174:
#line 41 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeFloat((yyvsp[(1) - (1)].str)); ;}
    break;

  case 175:
#line 42 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeFloat((yyvsp[(2) - (2)].str)); ;}
    break;

  case 176:
#line 44 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.value) = makeFloat((yyvsp[(2) - (2)].str));
					doNegateFloat((yyval.value));
				;}
    break;

  case 177:
#line 48 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeInteger((yyvsp[(1) - (1)].ival)); ;}
    break;

  case 178:
#line 53 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("as", (PGNode *)(yyvsp[(2) - (2)].typnam), (yylsp[(1) - (2)]));
				;}
    break;

  case 179:
#line 57 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cache", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 180:
#line 61 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 181:
#line 65 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(false), (yylsp[(1) - (2)]));
				;}
    break;

  case 182:
#line 69 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("increment", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 183:
#line 73 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("maxvalue", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 184:
#line 77 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("minvalue", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 185:
#line 81 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("maxvalue", NULL, (yylsp[(1) - (2)]));
				;}
    break;

  case 186:
#line 85 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("minvalue", NULL, (yylsp[(1) - (2)]));
				;}
    break;

  case 187:
#line 89 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("owned_by", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 188:
#line 93 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					/* not documented, only used by pg_dump */
					(yyval.defelt) = makeDefElem("sequence_name", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 189:
#line 98 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("start", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 190:
#line 102 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 191:
#line 106 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 192:
#line 112 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 193:
#line 113 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 194:
#line 117 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 195:
#line 118 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = + (yyvsp[(2) - (2)].ival); ;}
    break;

  case 196:
#line 119 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = - (yyvsp[(2) - (2)].ival); ;}
    break;

  case 197:
#line 3 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 198:
#line 10 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_BEGIN;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 199:
#line 16 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_START;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 200:
#line 22 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 201:
#line 29 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 202:
#line 36 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 203:
#line 45 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 204:
#line 46 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 205:
#line 47 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 206:
#line 9 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(4) - (9)].range)->relpersistence = (yyvsp[(2) - (9)].ival);
					n->relation = (yyvsp[(4) - (9)].range);
					n->tableElts = (yyvsp[(6) - (9)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(8) - (9)].list);
					n->oncommit = (yyvsp[(9) - (9)].oncommit);
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 207:
#line 24 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(7) - (12)].range)->relpersistence = (yyvsp[(2) - (12)].ival);
					n->relation = (yyvsp[(7) - (12)].range);
					n->tableElts = (yyvsp[(9) - (12)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(11) - (12)].list);
					n->oncommit = (yyvsp[(12) - (12)].oncommit);
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 208:
#line 41 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = 0; ;}
    break;

  case 209:
#line 43 "third_party/libpg_query/grammar/statements/create.y"
    {
					/*
					 * We must complain about conflicting options.
					 * We could, but choose not to, complain about redundant
					 * options (ie, where $2's bit is already set in $1).
					 */
					int		newspec = (yyvsp[(1) - (2)].ival) | (yyvsp[(2) - (2)].ival);

					/* special message for this case */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED)) == (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("constraint declared INITIALLY DEFERRED must be DEFERRABLE"),
								 parser_errposition((yylsp[(2) - (2)]))));
					/* generic message for other conflicts */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE)) == (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE) ||
						(newspec & (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED)) == (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("conflicting constraint properties"),
								 parser_errposition((yylsp[(2) - (2)]))));
					(yyval.ival) = newspec;
				;}
    break;

  case 210:
#line 69 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].typnam); ;}
    break;

  case 211:
#line 70 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
    break;

  case 212:
#line 71 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].list); ;}
    break;

  case 213:
#line 72 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].value); ;}
    break;

  case 214:
#line 73 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 215:
#line 74 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
    break;

  case 216:
#line 78 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 217:
#line 79 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 218:
#line 84 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 219:
#line 89 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_NOACTION; ;}
    break;

  case 220:
#line 90 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_RESTRICT; ;}
    break;

  case 221:
#line 91 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_CASCADE; ;}
    break;

  case 222:
#line 92 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_SETNULL; ;}
    break;

  case 223:
#line 93 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_SETDEFAULT; ;}
    break;

  case 224:
#line 99 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = castNode(PGConstraint, (yyvsp[(3) - (3)].node));
					n->conname = (yyvsp[(2) - (3)].str);
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 225:
#line 105 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 226:
#line 106 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 227:
#line 108 "third_party/libpg_query/grammar/statements/create.y"
    {
					/*
					 * Note: the PGCollateClause is momentarily included in
					 * the list built by ColQualList, but we split it out
					 * again in SplitColQualList.
					 */
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[(2) - (2)].list);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 228:
#line 125 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_NOTNULL;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 229:
#line 132 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_NULL;
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 230:
#line 139 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (2)]);
					n->keys = NULL;
					n->options = (yyvsp[(2) - (2)].list);
					n->indexname = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 231:
#line 149 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (3)]);
					n->keys = NULL;
					n->options = (yyvsp[(3) - (3)].list);
					n->indexname = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 232:
#line 159 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_CHECK;
					n->location = (yylsp[(1) - (5)]);
					n->is_no_inherit = (yyvsp[(5) - (5)].boolean);
					n->raw_expr = (yyvsp[(3) - (5)].node);
					n->cooked_expr = NULL;
					n->skip_validation = false;
					n->initially_valid = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 233:
#line 171 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_DEFAULT;
					n->location = (yylsp[(1) - (2)]);
					n->raw_expr = (yyvsp[(2) - (2)].node);
					n->cooked_expr = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 234:
#line 180 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_IDENTITY;
					n->generated_when = (yyvsp[(2) - (5)].ival);
					n->options = (yyvsp[(5) - (5)].list);
					n->location = (yylsp[(1) - (5)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 235:
#line 189 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_FOREIGN;
					n->location = (yylsp[(1) - (5)]);
					n->pktable			= (yyvsp[(2) - (5)].range);
					n->fk_attrs			= NIL;
					n->pk_attrs			= (yyvsp[(3) - (5)].list);
					n->fk_matchtype		= (yyvsp[(4) - (5)].ival);
					n->fk_upd_action	= (char) ((yyvsp[(5) - (5)].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[(5) - (5)].ival) & 0xFF);
					n->skip_validation  = false;
					n->initially_valid  = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 236:
#line 208 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 237:
#line 214 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
    break;

  case 238:
#line 220 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(1) - (1)].ival) << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); ;}
    break;

  case 239:
#line 222 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | ((yyvsp[(1) - (1)].ival) & 0xFF); ;}
    break;

  case 240:
#line 224 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(1) - (2)].ival) << 8) | ((yyvsp[(2) - (2)].ival) & 0xFF); ;}
    break;

  case 241:
#line 226 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(2) - (2)].ival) << 8) | ((yyvsp[(1) - (2)].ival) & 0xFF); ;}
    break;

  case 242:
#line 228 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); ;}
    break;

  case 243:
#line 233 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 244:
#line 234 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 245:
#line 238 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = ONCOMMIT_DROP; ;}
    break;

  case 246:
#line 239 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_DELETE_ROWS; ;}
    break;

  case 247:
#line 240 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_PRESERVE_ROWS; ;}
    break;

  case 248:
#line 241 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_NOOP; ;}
    break;

  case 249:
#line 246 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 250:
#line 250 "third_party/libpg_query/grammar/statements/create.y"
    {  (yyval.boolean) = true; ;}
    break;

  case 251:
#line 251 "third_party/libpg_query/grammar/statements/create.y"
    {  (yyval.boolean) = false; ;}
    break;

  case 252:
#line 257 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = castNode(PGConstraint, (yyvsp[(3) - (3)].node));
					n->conname = (yyvsp[(2) - (3)].str);
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 253:
#line 263 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 254:
#line 268 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_COMMENTS; ;}
    break;

  case 255:
#line 269 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_CONSTRAINTS; ;}
    break;

  case 256:
#line 270 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_DEFAULTS; ;}
    break;

  case 257:
#line 271 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_IDENTITY; ;}
    break;

  case 258:
#line 272 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_INDEXES; ;}
    break;

  case 259:
#line 273 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_STATISTICS; ;}
    break;

  case 260:
#line 274 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_STORAGE; ;}
    break;

  case 261:
#line 275 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_ALL; ;}
    break;

  case 262:
#line 281 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 263:
#line 282 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
    break;

  case 264:
#line 286 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(3) - (3)].str); ;}
    break;

  case 265:
#line 292 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_DEFERRABLE;
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 266:
#line 299 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_NOT_DEFERRABLE;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 267:
#line 306 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_DEFERRED;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 268:
#line 313 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_IMMEDIATE;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 269:
#line 324 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 270:
#line 325 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(true), (yylsp[(1) - (2)]))); ;}
    break;

  case 271:
#line 326 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(false), (yylsp[(1) - (2)]))); ;}
    break;

  case 272:
#line 327 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 273:
#line 331 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 274:
#line 336 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
    break;

  case 275:
#line 337 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) & ~(yyvsp[(3) - (3)].ival); ;}
    break;

  case 276:
#line 338 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = 0; ;}
    break;

  case 277:
#line 343 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 278:
#line 348 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NOT_DEFERRABLE; ;}
    break;

  case 279:
#line 349 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_DEFERRABLE; ;}
    break;

  case 280:
#line 350 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_INITIALLY_IMMEDIATE; ;}
    break;

  case 281:
#line 351 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_INITIALLY_DEFERRED; ;}
    break;

  case 282:
#line 352 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NOT_VALID; ;}
    break;

  case 283:
#line 353 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NO_INHERIT; ;}
    break;

  case 284:
#line 359 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->colname = (yyvsp[(1) - (4)].str);
					n->typeName = (yyvsp[(2) - (4)].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collOid = InvalidOid;
					n->fdwoptions = (yyvsp[(3) - (4)].list);
					SplitColQualList((yyvsp[(4) - (4)].list), &n->constraints, &n->collClause,
									 yyscanner);
					n->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 285:
#line 382 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 286:
#line 386 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 287:
#line 392 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 288:
#line 393 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
    break;

  case 289:
#line 397 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 290:
#line 401 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 291:
#line 402 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 292:
#line 403 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 293:
#line 408 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (PGNode *) (yyvsp[(3) - (3)].node), (yylsp[(1) - (3)]));
				;}
    break;

  case 294:
#line 412 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 295:
#line 419 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 296:
#line 420 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 297:
#line 425 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 298:
#line 426 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 299:
#line 431 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str));
				;}
    break;

  case 300:
#line 438 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 301:
#line 439 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 302:
#line 444 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 303:
#line 445 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 304:
#line 449 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
    break;

  case 305:
#line 455 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (PGNode *) (yyvsp[(3) - (3)].node), (yylsp[(1) - (3)]));
				;}
    break;

  case 306:
#line 459 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 307:
#line 463 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (5)].str), (yyvsp[(3) - (5)].str), (PGNode *) (yyvsp[(5) - (5)].node),
											 PG_DEFELEM_UNSPEC, (yylsp[(1) - (5)]));
				;}
    break;

  case 308:
#line 468 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str), NULL, PG_DEFELEM_UNSPEC, (yylsp[(1) - (3)]));
				;}
    break;

  case 309:
#line 475 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 310:
#line 476 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 311:
#line 480 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 312:
#line 482 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(1) - (4)].str)), (yyvsp[(2) - (4)].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 313:
#line 488 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(2) - (5)].str)), (yyvsp[(3) - (5)].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->setof = true;
					(yyval.typnam)->location = (yylsp[(2) - (5)]);
				;}
    break;

  case 314:
#line 499 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_CHECK;
					n->location = (yylsp[(1) - (5)]);
					n->raw_expr = (yyvsp[(3) - (5)].node);
					n->cooked_expr = NULL;
					processCASbits((yyvsp[(5) - (5)].ival), (yylsp[(5) - (5)]), "CHECK",
								   NULL, NULL, &n->skip_validation,
								   &n->is_no_inherit, yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 315:
#line 513 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (6)]);
					n->keys = (yyvsp[(3) - (6)].list);
					n->options = (yyvsp[(5) - (6)].list);
					n->indexname = NULL;
					processCASbits((yyvsp[(6) - (6)].ival), (yylsp[(6) - (6)]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 316:
#line 526 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (3)]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[(2) - (3)].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[(3) - (3)].ival), (yylsp[(3) - (3)]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 317:
#line 541 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (7)]);
					n->keys = (yyvsp[(4) - (7)].list);
					n->options = (yyvsp[(6) - (7)].list);
					n->indexname = NULL;
					processCASbits((yyvsp[(7) - (7)].ival), (yylsp[(7) - (7)]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 318:
#line 554 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (4)]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[(3) - (4)].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[(4) - (4)].ival), (yylsp[(4) - (4)]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 319:
#line 569 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_FOREIGN;
					n->location = (yylsp[(1) - (11)]);
					n->pktable			= (yyvsp[(7) - (11)].range);
					n->fk_attrs			= (yyvsp[(4) - (11)].list);
					n->pk_attrs			= (yyvsp[(8) - (11)].list);
					n->fk_matchtype		= (yyvsp[(9) - (11)].ival);
					n->fk_upd_action	= (char) ((yyvsp[(10) - (11)].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[(10) - (11)].ival) & 0xFF);
					processCASbits((yyvsp[(11) - (11)].ival), (yylsp[(11) - (11)]), "FOREIGN KEY",
								   &n->deferrable, &n->initdeferred,
								   &n->skip_validation, NULL,
								   yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 320:
#line 591 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 321:
#line 595 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 322:
#line 602 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_FULL;
			;}
    break;

  case 323:
#line 606 "third_party/libpg_query/grammar/statements/create.y"
    {
				ereport(ERROR,
						(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
						 errmsg("MATCH PARTIAL not yet implemented"),
						 parser_errposition((yylsp[(1) - (2)]))));
				(yyval.ival) = PG_FKCONSTR_MATCH_PARTIAL;
			;}
    break;

  case 324:
#line 614 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
			;}
    break;

  case 325:
#line 618 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
			;}
    break;

  case 326:
#line 626 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGTableLikeClause *n = makeNode(PGTableLikeClause);
					n->relation = (yyvsp[(2) - (3)].range);
					n->options = (yyvsp[(3) - (3)].ival);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 327:
#line 635 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 328:
#line 636 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 329:
#line 637 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 330:
#line 638 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 331:
#line 640 "third_party/libpg_query/grammar/statements/create.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 332:
#line 647 "third_party/libpg_query/grammar/statements/create.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 333:
#line 653 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_UNLOGGED; ;}
    break;

  case 334:
#line 654 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = RELPERSISTENCE_PERMANENT; ;}
    break;

  case 335:
#line 659 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_ATTRIBUTE_IDENTITY_ALWAYS; ;}
    break;

  case 336:
#line 660 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ATTRIBUTE_IDENTITY_BY_DEFAULT; ;}
    break;

  case 337:
#line 10 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 338:
#line 20 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (4)].objtype);
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 339:
#line 30 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 340:
#line 40 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (4)].objtype);
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 341:
#line 50 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->objects = list_make1(lappend((yyvsp[(5) - (6)].list), makeString((yyvsp[(3) - (6)].str))));
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = false;
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 342:
#line 60 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (8)].objtype);
					n->objects = list_make1(lappend((yyvsp[(7) - (8)].list), makeString((yyvsp[(5) - (8)].str))));
					n->behavior = (yyvsp[(8) - (8)].dbehavior);
					n->missing_ok = true;
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 343:
#line 73 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TABLE; ;}
    break;

  case 344:
#line 74 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_SEQUENCE; ;}
    break;

  case 345:
#line 75 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FUNCTION; ;}
    break;

  case 346:
#line 76 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FUNCTION; ;}
    break;

  case 347:
#line 77 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_VIEW; ;}
    break;

  case 348:
#line 78 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_MATVIEW; ;}
    break;

  case 349:
#line 79 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_INDEX; ;}
    break;

  case 350:
#line 80 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FOREIGN_TABLE; ;}
    break;

  case 351:
#line 81 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_COLLATION; ;}
    break;

  case 352:
#line 82 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_CONVERSION; ;}
    break;

  case 353:
#line 83 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_STATISTIC_EXT; ;}
    break;

  case 354:
#line 84 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSPARSER; ;}
    break;

  case 355:
#line 85 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSDICTIONARY; ;}
    break;

  case 356:
#line 86 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSTEMPLATE; ;}
    break;

  case 357:
#line 87 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSCONFIGURATION; ;}
    break;

  case 358:
#line 92 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_ACCESS_METHOD; ;}
    break;

  case 359:
#line 93 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_EVENT_TRIGGER; ;}
    break;

  case 360:
#line 94 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_EXTENSION; ;}
    break;

  case 361:
#line 95 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FDW; ;}
    break;

  case 362:
#line 96 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_PUBLICATION; ;}
    break;

  case 363:
#line 97 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_SCHEMA; ;}
    break;

  case 364:
#line 98 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FOREIGN_SERVER; ;}
    break;

  case 365:
#line 103 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 366:
#line 104 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 367:
#line 109 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_CASCADE; ;}
    break;

  case 368:
#line 110 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_RESTRICT; ;}
    break;

  case 369:
#line 111 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_RESTRICT; /* default */ ;}
    break;

  case 370:
#line 116 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_POLICY; ;}
    break;

  case 371:
#line 117 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_RULE; ;}
    break;

  case 372:
#line 118 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TRIGGER; ;}
    break;

  case 373:
#line 8 "third_party/libpg_query/grammar/statements/create_function.y"
    {
					PGCreateFunctionStmt *n = makeNode(PGCreateFunctionStmt);
					n->name = (yyvsp[(3) - (6)].range);
					n->params = (yyvsp[(4) - (6)].list);
					n->function = (yyvsp[(6) - (6)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 376:
#line 24 "third_party/libpg_query/grammar/statements/create_function.y"
    {
				(yyval.list) = NIL;
			;}
    break;

  case 377:
#line 28 "third_party/libpg_query/grammar/statements/create_function.y"
    {
				(yyval.list) = (yyvsp[(2) - (3)].list);
			;}
    break;

  case 378:
#line 12 "third_party/libpg_query/grammar/statements/update.y"
    {
					PGUpdateStmt *n = makeNode(PGUpdateStmt);
					n->relation = (yyvsp[(3) - (8)].range);
					n->targetList = (yyvsp[(5) - (8)].list);
					n->fromClause = (yyvsp[(6) - (8)].list);
					n->whereClause = (yyvsp[(7) - (8)].node);
					n->returningList = (yyvsp[(8) - (8)].list);
					n->withClause = (yyvsp[(1) - (8)].with);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 379:
#line 3 "third_party/libpg_query/grammar/statements/copy.y"
    {
					PGCopyStmt *n = makeNode(PGCopyStmt);
					n->relation = (yyvsp[(3) - (11)].range);
					n->query = NULL;
					n->attlist = (yyvsp[(4) - (11)].list);
					n->is_from = (yyvsp[(6) - (11)].boolean);
					n->is_program = (yyvsp[(7) - (11)].boolean);
					n->filename = (yyvsp[(8) - (11)].str);

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[(8) - (11)]))));

					n->options = NIL;
					/* Concatenate user-supplied flags */
					if ((yyvsp[(2) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(2) - (11)].defelt));
					if ((yyvsp[(5) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(5) - (11)].defelt));
					if ((yyvsp[(9) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(9) - (11)].defelt));
					if ((yyvsp[(11) - (11)].list))
						n->options = list_concat(n->options, (yyvsp[(11) - (11)].list));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 380:
#line 31 "third_party/libpg_query/grammar/statements/copy.y"
    {
					PGCopyStmt *n = makeNode(PGCopyStmt);
					n->relation = NULL;
					n->query = (yyvsp[(3) - (9)].node);
					n->attlist = NIL;
					n->is_from = false;
					n->is_program = (yyvsp[(6) - (9)].boolean);
					n->filename = (yyvsp[(7) - (9)].str);
					n->options = (yyvsp[(9) - (9)].list);

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[(5) - (9)]))));

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 381:
#line 53 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = true; ;}
    break;

  case 382:
#line 54 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = false; ;}
    break;

  case 383:
#line 60 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(2) - (3)]));
				;}
    break;

  case 384:
#line 63 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 385:
#line 69 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 386:
#line 73 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 387:
#line 80 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 388:
#line 81 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 389:
#line 85 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 390:
#line 86 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 391:
#line 91 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = true; ;}
    break;

  case 392:
#line 92 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = false; ;}
    break;

  case 393:
#line 96 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 394:
#line 97 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 395:
#line 102 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 396:
#line 103 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].value); ;}
    break;

  case 397:
#line 104 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeNode(PGAStar); ;}
    break;

  case 398:
#line 105 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) (yyvsp[(2) - (3)].list); ;}
    break;

  case 399:
#line 106 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = NULL; ;}
    break;

  case 400:
#line 112 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 401:
#line 120 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[(1) - (2)]));
				;}
    break;

  case 402:
#line 123 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 403:
#line 128 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 404:
#line 129 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = NIL; ;}
    break;

  case 405:
#line 135 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[(1) - (1)]));
				;}
    break;

  case 406:
#line 138 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 407:
#line 144 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[(1) - (1)]));
				;}
    break;

  case 408:
#line 148 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 409:
#line 152 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("freeze", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 410:
#line 156 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 411:
#line 160 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("null", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 412:
#line 164 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("csv"), (yylsp[(1) - (1)]));
				;}
    break;

  case 413:
#line 168 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("header", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 414:
#line 172 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("quote", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 415:
#line 176 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("escape", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 416:
#line 180 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 417:
#line 184 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)makeNode(PGAStar), (yylsp[(1) - (3)]));
				;}
    break;

  case 418:
#line 188 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_not_null", (PGNode *)(yyvsp[(4) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 419:
#line 192 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_null", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 420:
#line 196 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("encoding", (PGNode *)makeString((yyvsp[(2) - (2)].str)), (yylsp[(1) - (2)]));
				;}
    break;

  case 421:
#line 203 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 422:
#line 209 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 423:
#line 210 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = NULL; ;}
    break;

  case 424:
#line 211 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = NULL; ;}
    break;

  case 425:
#line 217 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 426:
#line 221 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 429:
#line 52 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 430:
#line 53 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 431:
#line 68 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 432:
#line 70 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list), NIL,
										NULL, NULL, NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (2)].node);
				;}
    break;

  case 433:
#line 77 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(3) - (4)].list),
										(PGNode*) list_nth((yyvsp[(4) - (4)].list), 0), (PGNode*) list_nth((yyvsp[(4) - (4)].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (4)].node);
				;}
    break;

  case 434:
#line 85 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(4) - (4)].list),
										(PGNode*) list_nth((yyvsp[(3) - (4)].list), 0), (PGNode*) list_nth((yyvsp[(3) - (4)].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (4)].node);
				;}
    break;

  case 435:
#line 93 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (2)].node), NULL, NIL,
										NULL, NULL,
										(yyvsp[(1) - (2)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (2)].node);
				;}
    break;

  case 436:
#line 101 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].list), NIL,
										NULL, NULL,
										(yyvsp[(1) - (3)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (3)].node);
				;}
    break;

  case 437:
#line 109 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(4) - (5)].list),
										(PGNode*) list_nth((yyvsp[(5) - (5)].list), 0), (PGNode*) list_nth((yyvsp[(5) - (5)].list), 1),
										(yyvsp[(1) - (5)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (5)].node);
				;}
    break;

  case 438:
#line 117 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(5) - (5)].list),
										(PGNode*) list_nth((yyvsp[(4) - (5)].list), 0), (PGNode*) list_nth((yyvsp[(4) - (5)].list), 1),
										(yyvsp[(1) - (5)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (5)].node);
				;}
    break;

  case 439:
#line 127 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 440:
#line 128 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 441:
#line 158 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->targetList = (yyvsp[(3) - (10)].list);
					n->intoClause = (yyvsp[(4) - (10)].into);
					n->fromClause = (yyvsp[(5) - (10)].list);
					n->whereClause = (yyvsp[(6) - (10)].node);
					n->groupClause = (yyvsp[(7) - (10)].list);
					n->havingClause = (yyvsp[(8) - (10)].node);
					n->windowClause = (yyvsp[(9) - (10)].list);
					n->sampleOptions = (yyvsp[(10) - (10)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 442:
#line 173 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->distinctClause = (yyvsp[(2) - (10)].list);
					n->targetList = (yyvsp[(3) - (10)].list);
					n->intoClause = (yyvsp[(4) - (10)].into);
					n->fromClause = (yyvsp[(5) - (10)].list);
					n->whereClause = (yyvsp[(6) - (10)].node);
					n->groupClause = (yyvsp[(7) - (10)].list);
					n->havingClause = (yyvsp[(8) - (10)].node);
					n->windowClause = (yyvsp[(9) - (10)].list);
					n->sampleOptions = (yyvsp[(10) - (10)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 443:
#line 186 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 444:
#line 188 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* same as SELECT * FROM relation_expr */
					PGColumnRef *cr = makeNode(PGColumnRef);
					PGResTarget *rt = makeNode(PGResTarget);
					PGSelectStmt *n = makeNode(PGSelectStmt);

					cr->fields = list_make1(makeNode(PGAStar));
					cr->location = -1;

					rt->name = NULL;
					rt->indirection = NIL;
					rt->val = (PGNode *)cr;
					rt->location = -1;

					n->targetList = list_make1(rt);
					n->fromClause = list_make1((yyvsp[(2) - (2)].range));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 445:
#line 207 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_UNION, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 446:
#line 211 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_INTERSECT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 447:
#line 215 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_EXCEPT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 448:
#line 232 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[(1) - (2)]);
			;}
    break;

  case 449:
#line 239 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[(1) - (2)]);
			;}
    break;

  case 450:
#line 246 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(3) - (3)].list);
				(yyval.with)->recursive = true;
				(yyval.with)->location = (yylsp[(1) - (3)]);
			;}
    break;

  case 451:
#line 255 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 452:
#line 256 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 453:
#line 260 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGCommonTableExpr *n = makeNode(PGCommonTableExpr);
				n->ctename = (yyvsp[(1) - (6)].str);
				n->aliascolnames = (yyvsp[(2) - (6)].list);
				n->ctequery = (yyvsp[(5) - (6)].node);
				n->location = (yylsp[(1) - (6)]);
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 454:
#line 272 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.into) = makeNode(PGIntoClause);
					(yyval.into)->rel = (yyvsp[(2) - (2)].range);
					(yyval.into)->colNames = NIL;
					(yyval.into)->options = NIL;
					(yyval.into)->onCommit = PG_ONCOMMIT_NOOP;
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;
				;}
    break;

  case 455:
#line 282 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.into) = NULL; ;}
    break;

  case 456:
#line 291 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 457:
#line 296 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 458:
#line 301 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 459:
#line 306 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 460:
#line 311 "third_party/libpg_query/grammar/statements/select.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (4)]))));
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 461:
#line 319 "third_party/libpg_query/grammar/statements/select.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (4)]))));
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 462:
#line 327 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_UNLOGGED;
				;}
    break;

  case 463:
#line 332 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(2) - (2)].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				;}
    break;

  case 464:
#line 337 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				;}
    break;

  case 465:
#line 343 "third_party/libpg_query/grammar/statements/select.y"
    {;}
    break;

  case 466:
#line 344 "third_party/libpg_query/grammar/statements/select.y"
    {;}
    break;

  case 467:
#line 348 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 468:
#line 349 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 469:
#line 350 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 470:
#line 357 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(NIL); ;}
    break;

  case 471:
#line 358 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
    break;

  case 472:
#line 362 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL;;}
    break;

  case 473:
#line 363 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 474:
#line 367 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list);;}
    break;

  case 475:
#line 368 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 476:
#line 372 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 477:
#line 376 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].sortby)); ;}
    break;

  case 478:
#line 377 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].sortby)); ;}
    break;

  case 479:
#line 381 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.sortby) = makeNode(PGSortBy);
					(yyval.sortby)->node = (yyvsp[(1) - (4)].node);
					(yyval.sortby)->sortby_dir = SORTBY_USING;
					(yyval.sortby)->sortby_nulls = (yyvsp[(4) - (4)].nullorder);
					(yyval.sortby)->useOp = (yyvsp[(3) - (4)].list);
					(yyval.sortby)->location = (yylsp[(3) - (4)]);
				;}
    break;

  case 480:
#line 390 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.sortby) = makeNode(PGSortBy);
					(yyval.sortby)->node = (yyvsp[(1) - (3)].node);
					(yyval.sortby)->sortby_dir = (yyvsp[(2) - (3)].sortorder);
					(yyval.sortby)->sortby_nulls = (yyvsp[(3) - (3)].nullorder);
					(yyval.sortby)->useOp = NIL;
					(yyval.sortby)->location = -1;		/* no operator */
				;}
    break;

  case 481:
#line 400 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_ASC; ;}
    break;

  case 482:
#line 401 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_DESC; ;}
    break;

  case 483:
#line 402 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_DEFAULT; ;}
    break;

  case 484:
#line 405 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_FIRST; ;}
    break;

  case 485:
#line 406 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_LAST; ;}
    break;

  case 486:
#line 407 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_DEFAULT; ;}
    break;

  case 487:
#line 411 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(2) - (2)].node), (yyvsp[(1) - (2)].node)); ;}
    break;

  case 488:
#line 412 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 489:
#line 413 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2(NULL, (yyvsp[(1) - (1)].node)); ;}
    break;

  case 490:
#line 414 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (1)].node), NULL); ;}
    break;

  case 491:
#line 418 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 492:
#line 419 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2(NULL,NULL); ;}
    break;

  case 493:
#line 424 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 494:
#line 426 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* Disabled because it was too confusing, bjm 2002-02-18 */
					ereport(ERROR,
							(errcode(PG_ERRCODE_SYNTAX_ERROR),
							 errmsg("LIMIT #,# syntax is not supported"),
							 errhint("Use separate LIMIT and OFFSET clauses."),
							 parser_errposition((yylsp[(1) - (4)]))));
				;}
    break;

  case 495:
#line 442 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(3) - (5)].node); ;}
    break;

  case 496:
#line 444 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeIntConst(1, -1); ;}
    break;

  case 497:
#line 449 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 498:
#line 452 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 499:
#line 460 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeFloat((yyvsp[(1) - (2)].str)), true);
		;}
    break;

  case 500:
#line 464 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), true);
		;}
    break;

  case 501:
#line 468 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeFloat((yyvsp[(1) - (2)].str)), true);
		;}
    break;

  case 502:
#line 472 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), true);
		;}
    break;

  case 503:
#line 476 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (1)].ival)), false);
		;}
    break;

  case 504:
#line 480 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), false);
		;}
    break;

  case 505:
#line 487 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(3) - (3)].node);
				;}
    break;

  case 506:
#line 491 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 507:
#line 498 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 508:
#line 499 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = NULL; ;}
    break;

  case 509:
#line 504 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSampleOptions((yyvsp[(3) - (5)].node), (yyvsp[(1) - (5)].str), (yyvsp[(5) - (5)].ival), (yylsp[(1) - (5)]));
				;}
    break;

  case 510:
#line 508 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (1)].node), NULL, -1, (yylsp[(1) - (1)]));
		;}
    break;

  case 511:
#line 512 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (4)].node), (yyvsp[(3) - (4)].str), -1, (yylsp[(1) - (4)]));
		;}
    break;

  case 512:
#line 516 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (6)].node), (yyvsp[(3) - (6)].str), (yyvsp[(5) - (6)].ival), (yylsp[(1) - (6)]));
		;}
    break;

  case 513:
#line 523 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(2) - (2)].node);
				;}
    break;

  case 514:
#line 529 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 515:
#line 530 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 516:
#line 535 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = (yyvsp[(3) - (4)].ival); ;}
    break;

  case 517:
#line 536 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = -1; ;}
    break;

  case 518:
#line 540 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 519:
#line 542 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* LIMIT ALL is represented as a NULL constant */
					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
				;}
    break;

  case 520:
#line 549 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 521:
#line 569 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 522:
#line 571 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 523:
#line 573 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 524:
#line 577 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival),(yylsp[(1) - (1)])); ;}
    break;

  case 525:
#line 578 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str),(yylsp[(1) - (1)])); ;}
    break;

  case 526:
#line 582 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 527:
#line 583 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 528:
#line 586 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 529:
#line 587 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 530:
#line 612 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 531:
#line 613 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 532:
#line 617 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 533:
#line 618 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].node)); ;}
    break;

  case 534:
#line 622 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 535:
#line 623 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 536:
#line 628 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_EMPTY, NIL, (yylsp[(1) - (2)]));
				;}
    break;

  case 537:
#line 640 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 538:
#line 641 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 539:
#line 645 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 540:
#line 646 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 541:
#line 650 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 542:
#line 651 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 543:
#line 655 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 544:
#line 656 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 545:
#line 661 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGLockingClause *n = makeNode(PGLockingClause);
					n->lockedRels = (yyvsp[(2) - (3)].list);
					n->strength = (yyvsp[(1) - (3)].lockstrength);
					n->waitPolicy = (yyvsp[(3) - (3)].lockwaitpolicy);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 546:
#line 671 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = LCS_FORUPDATE; ;}
    break;

  case 547:
#line 672 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORNOKEYUPDATE; ;}
    break;

  case 548:
#line 673 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORSHARE; ;}
    break;

  case 549:
#line 674 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORKEYSHARE; ;}
    break;

  case 550:
#line 678 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 551:
#line 679 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 552:
#line 684 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = LockWaitError; ;}
    break;

  case 553:
#line 685 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = PGLockWaitSkip; ;}
    break;

  case 554:
#line 686 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = PGLockWaitBlock; ;}
    break;

  case 555:
#line 696 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->valuesLists = list_make1((yyvsp[(3) - (4)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 556:
#line 702 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = (PGSelectStmt *) (yyvsp[(1) - (5)].node);
					n->valuesLists = lappend(n->valuesLists, (yyvsp[(4) - (5)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 557:
#line 719 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 558:
#line 720 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 559:
#line 724 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 560:
#line 725 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 561:
#line 732 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyvsp[(1) - (3)].range)->alias = (yyvsp[(2) - (3)].alias);
					(yyvsp[(1) - (3)].range)->sample = (yyvsp[(3) - (3)].node);
					(yyval.node) = (PGNode *) (yyvsp[(1) - (3)].range);
				;}
    break;

  case 562:
#line 738 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[(1) - (3)].node);
					n->alias = (PGAlias*) linitial((yyvsp[(2) - (3)].list));
					n->coldeflist = (PGList*) lsecond((yyvsp[(2) - (3)].list));
					n->sample = (yyvsp[(3) - (3)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 563:
#line 746 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[(2) - (3)].node);
					n->lateral = true;
					n->alias = (PGAlias*) linitial((yyvsp[(3) - (3)].list));
					n->coldeflist = (PGList*) lsecond((yyvsp[(3) - (3)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 564:
#line 754 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeSubselect *n = makeNode(PGRangeSubselect);
					n->lateral = false;
					n->subquery = (yyvsp[(1) - (3)].node);
					n->alias = (yyvsp[(2) - (3)].alias);
					n->sample = (yyvsp[(3) - (3)].node);
					/*
					 * The SQL spec does not permit a subselect
					 * (<derived_table>) without an alias clause,
					 * so we don't either.  This avoids the problem
					 * of needing to invent a unique refname for it.
					 * That could be surmounted if there's sufficient
					 * popular demand, but for now let's just implement
					 * the spec and see if anyone complains.
					 * However, it does seem like a good idea to emit
					 * an error message that's better than "syntax error".
					 */
					if ((yyvsp[(2) - (3)].alias) == NULL)
					{
						if (IsA((yyvsp[(1) - (3)].node), PGSelectStmt) &&
							((PGSelectStmt *) (yyvsp[(1) - (3)].node))->valuesLists)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("VALUES in FROM must have an alias"),
									 errhint("For example, FROM (VALUES ...) [AS] foo."),
									 parser_errposition((yylsp[(1) - (3)]))));
						else
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("subquery in FROM must have an alias"),
									 errhint("For example, FROM (SELECT ...) [AS] foo."),
									 parser_errposition((yylsp[(1) - (3)]))));
					}
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 565:
#line 790 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeSubselect *n = makeNode(PGRangeSubselect);
					n->lateral = true;
					n->subquery = (yyvsp[(2) - (3)].node);
					n->alias = (yyvsp[(3) - (3)].alias);
					n->sample = NULL;
					/* same comment as above */
					if ((yyvsp[(3) - (3)].alias) == NULL)
					{
						if (IsA((yyvsp[(2) - (3)].node), PGSelectStmt) &&
							((PGSelectStmt *) (yyvsp[(2) - (3)].node))->valuesLists)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("VALUES in FROM must have an alias"),
									 errhint("For example, FROM (VALUES ...) [AS] foo."),
									 parser_errposition((yylsp[(2) - (3)]))));
						else
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("subquery in FROM must have an alias"),
									 errhint("For example, FROM (SELECT ...) [AS] foo."),
									 parser_errposition((yylsp[(2) - (3)]))));
					}
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 566:
#line 816 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) (yyvsp[(1) - (1)].jexpr);
				;}
    break;

  case 567:
#line 820 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyvsp[(2) - (4)].jexpr)->alias = (yyvsp[(4) - (4)].alias);
					(yyval.node) = (PGNode *) (yyvsp[(2) - (4)].jexpr);
				;}
    break;

  case 568:
#line 846 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.jexpr) = (yyvsp[(2) - (3)].jexpr);
				;}
    break;

  case 569:
#line 850 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* CROSS JOIN is same as unqualified inner join */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(4) - (4)].node);
					n->usingClause = NIL;
					n->quals = NULL;
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 570:
#line 863 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[(2) - (5)].jtype);
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (5)].node);
					n->rarg = (yyvsp[(4) - (5)].node);
					if ((yyvsp[(5) - (5)].node) != NULL && IsA((yyvsp[(5) - (5)].node), PGList))
						n->usingClause = (PGList *) (yyvsp[(5) - (5)].node); /* USING clause */
					else
						n->quals = (yyvsp[(5) - (5)].node); /* ON clause */
					n->location = (yylsp[(2) - (5)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 571:
#line 877 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* letting join_type reduce to empty doesn't work */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(3) - (4)].node);
					if ((yyvsp[(4) - (4)].node) != NULL && IsA((yyvsp[(4) - (4)].node), PGList))
						n->usingClause = (PGList *) (yyvsp[(4) - (4)].node); /* USING clause */
					else
						n->quals = (yyvsp[(4) - (4)].node); /* ON clause */
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 572:
#line 892 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[(3) - (5)].jtype);
					n->isNatural = true;
					n->larg = (yyvsp[(1) - (5)].node);
					n->rarg = (yyvsp[(5) - (5)].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					n->location = (yylsp[(2) - (5)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 573:
#line 904 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* letting join_type reduce to empty doesn't work */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = true;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(4) - (4)].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 574:
#line 920 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(2) - (5)].str);
					(yyval.alias)->colnames = (yyvsp[(4) - (5)].list);
				;}
    break;

  case 575:
#line 926 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(2) - (2)].str);
				;}
    break;

  case 576:
#line 931 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(1) - (4)].str);
					(yyval.alias)->colnames = (yyvsp[(3) - (4)].list);
				;}
    break;

  case 577:
#line 937 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(1) - (1)].str);
				;}
    break;

  case 578:
#line 943 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.alias) = (yyvsp[(1) - (1)].alias); ;}
    break;

  case 579:
#line 944 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.alias) = NULL; ;}
    break;

  case 580:
#line 953 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2((yyvsp[(1) - (1)].alias), NIL);
				;}
    break;

  case 581:
#line 957 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(NULL, (yyvsp[(3) - (4)].list));
				;}
    break;

  case 582:
#line 961 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAlias *a = makeNode(PGAlias);
					a->aliasname = (yyvsp[(2) - (5)].str);
					(yyval.list) = list_make2(a, (yyvsp[(4) - (5)].list));
				;}
    break;

  case 583:
#line 967 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAlias *a = makeNode(PGAlias);
					a->aliasname = (yyvsp[(1) - (4)].str);
					(yyval.list) = list_make2(a, (yyvsp[(3) - (4)].list));
				;}
    break;

  case 584:
#line 973 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(NULL, NIL);
				;}
    break;

  case 585:
#line 978 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_FULL; ;}
    break;

  case 586:
#line 979 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_LEFT; ;}
    break;

  case 587:
#line 980 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_RIGHT; ;}
    break;

  case 588:
#line 981 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_INNER; ;}
    break;

  case 589:
#line 985 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 590:
#line 986 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 591:
#line 998 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) (yyvsp[(3) - (4)].list); ;}
    break;

  case 592:
#line 999 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 593:
#line 1005 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* inheritance query, implicitly */
					(yyval.range) = (yyvsp[(1) - (1)].range);
					(yyval.range)->inh = true;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 594:
#line 1012 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* inheritance query, explicitly */
					(yyval.range) = (yyvsp[(1) - (2)].range);
					(yyval.range)->inh = true;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 595:
#line 1019 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* no inheritance */
					(yyval.range) = (yyvsp[(2) - (2)].range);
					(yyval.range)->inh = false;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 596:
#line 1026 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* no inheritance, SQL99-style syntax */
					(yyval.range) = (yyvsp[(3) - (4)].range);
					(yyval.range)->inh = false;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 597:
#line 1058 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = makeNode(PGRangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[(2) - (2)].boolean);
					n->is_rowsfrom = false;
					n->functions = list_make1(list_make2((yyvsp[(1) - (2)].node), NIL));
					n->sample = NULL;
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 598:
#line 1069 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = makeNode(PGRangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[(6) - (6)].boolean);
					n->is_rowsfrom = true;
					n->functions = (yyvsp[(4) - (6)].list);
					n->sample = NULL;
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 599:
#line 1082 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list)); ;}
    break;

  case 600:
#line 1086 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 601:
#line 1087 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 602:
#line 1090 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 603:
#line 1091 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 604:
#line 1094 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 605:
#line 1095 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 606:
#line 1100 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 607:
#line 1101 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 608:
#line 1107 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 609:
#line 1111 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 610:
#line 1117 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->colname = (yyvsp[(1) - (3)].str);
					n->typeName = (yyvsp[(2) - (3)].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collClause = (PGCollateClause *) (yyvsp[(3) - (3)].node);
					n->collOid = InvalidOid;
					n->constraints = NIL;
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 611:
#line 1138 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[(2) - (2)].list);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 612:
#line 1145 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 613:
#line 1158 "third_party/libpg_query/grammar/statements/select.y"
    {
             (yyval.list) = list_make1(list_make2(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].typnam)));
            ;}
    break;

  case 614:
#line 1161 "third_party/libpg_query/grammar/statements/select.y"
    {
             (yyval.list) = lappend((yyvsp[(1) - (4)].list), list_make2(makeString((yyvsp[(3) - (4)].str)), (yyvsp[(4) - (4)].typnam)));
            ;}
    break;

  case 616:
#line 1168 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[(2) - (2)].list);
				;}
    break;

  case 617:
#line 1173 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[(3) - (3)].list);
					(yyval.typnam)->setof = true;
				;}
    break;

  case 618:
#line 1180 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (5)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(4) - (5)].ival)));
				;}
    break;

  case 619:
#line 1185 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (6)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(5) - (6)].ival)));
					(yyval.typnam)->setof = true;
				;}
    break;

  case 620:
#line 1191 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
				;}
    break;

  case 621:
#line 1196 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
					(yyval.typnam)->setof = true;
				;}
    break;

  case 622:
#line 1201 "third_party/libpg_query/grammar/statements/select.y"
    {
               (yyval.typnam) = SystemTypeName("struct");
               (yyval.typnam)->typmods = (yyvsp[(3) - (4)].list);
               (yyval.typnam)->location = (yylsp[(1) - (4)]);
			;}
    break;

  case 623:
#line 1210 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeInteger(-1)); ;}
    break;

  case 624:
#line 1212 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = lappend((yyvsp[(1) - (4)].list), makeInteger((yyvsp[(3) - (4)].ival))); ;}
    break;

  case 625:
#line 1214 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = NIL; ;}
    break;

  case 626:
#line 1218 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 627:
#line 1219 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 628:
#line 1220 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 629:
#line 1221 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 630:
#line 1222 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 631:
#line 1224 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
				;}
    break;

  case 632:
#line 1229 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (4)].typnam);
					(yyval.typnam)->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											 makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
				;}
    break;

  case 633:
#line 1248 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 634:
#line 1249 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 635:
#line 1250 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 636:
#line 1251 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 637:
#line 1263 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = makeTypeName((yyvsp[(1) - (2)].str));
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 638:
#line 1269 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(1) - (3)].str)), (yyvsp[(2) - (3)].list)));
					(yyval.typnam)->typmods = (yyvsp[(3) - (3)].list);
					(yyval.typnam)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 639:
#line 1276 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 640:
#line 1277 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 641:
#line 1284 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 642:
#line 1289 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 643:
#line 1294 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int2");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 644:
#line 1299 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int8");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 645:
#line 1304 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 646:
#line 1309 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (2)].typnam);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 647:
#line 1314 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float8");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 648:
#line 1319 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 649:
#line 1325 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 650:
#line 1331 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 651:
#line 1337 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("bool");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 652:
#line 1344 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Check FLOAT() precision limits assuming IEEE floating
					 * types - thomas 1997-09-18
					 */
					if ((yyvsp[(2) - (3)].ival) < 1)
						ereport(ERROR,
								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be at least 1 bit"),
								 parser_errposition((yylsp[(2) - (3)]))));
					else if ((yyvsp[(2) - (3)].ival) <= 24)
						(yyval.typnam) = SystemTypeName("float4");
					else if ((yyvsp[(2) - (3)].ival) <= 53)
						(yyval.typnam) = SystemTypeName("float8");
					else
						ereport(ERROR,
								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be less than 54 bits"),
								 parser_errposition((yylsp[(2) - (3)]))));
				;}
    break;

  case 653:
#line 1365 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float4");
				;}
    break;

  case 654:
#line 1375 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 655:
#line 1379 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 656:
#line 1387 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 657:
#line 1391 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
					(yyval.typnam)->typmods = NIL;
				;}
    break;

  case 658:
#line 1399 "third_party/libpg_query/grammar/statements/select.y"
    {
					const char *typname;

					typname = (yyvsp[(2) - (5)].boolean) ? "varbit" : "bit";
					(yyval.typnam) = SystemTypeName(typname);
					(yyval.typnam)->typmods = (yyvsp[(4) - (5)].list);
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 659:
#line 1411 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* bit defaults to bit(1), varbit to no limit */
					if ((yyvsp[(2) - (2)].boolean))
					{
						(yyval.typnam) = SystemTypeName("varbit");
					}
					else
					{
						(yyval.typnam) = SystemTypeName("bit");
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					}
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 660:
#line 1432 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 661:
#line 1436 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 662:
#line 1442 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 663:
#line 1446 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* Length was not specified so allow to be unrestricted.
					 * This handles problems with fixed-length (bpchar) strings
					 * which in column definitions must default to a length
					 * of one, but should not be constrained if the length
					 * was not specified.
					 */
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
					(yyval.typnam)->typmods = NIL;
				;}
    break;

  case 664:
#line 1459 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (4)].conststr));
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
					(yyval.typnam)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 665:
#line 1467 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (1)].conststr));
					/* char defaults to char(1), varchar to no limit */
					if (strcmp((yyvsp[(1) - (1)].conststr), "bpchar") == 0)
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 666:
#line 1477 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 667:
#line 1479 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 668:
#line 1481 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "varchar"; ;}
    break;

  case 669:
#line 1483 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 670:
#line 1485 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 671:
#line 1487 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 672:
#line 1491 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 673:
#line 1492 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 674:
#line 1500 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(5) - (5)].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 675:
#line 1509 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 676:
#line 1517 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(5) - (5)].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 677:
#line 1526 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 678:
#line 1537 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("interval");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 679:
#line 1544 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 680:
#line 1545 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 681:
#line 1546 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 698:
#line 1575 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR), (yylsp[(1) - (1)]))); ;}
    break;

  case 699:
#line 1577 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MONTH), (yylsp[(1) - (1)]))); ;}
    break;

  case 700:
#line 1579 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY), (yylsp[(1) - (1)]))); ;}
    break;

  case 701:
#line 1581 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR), (yylsp[(1) - (1)]))); ;}
    break;

  case 702:
#line 1583 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MINUTE), (yylsp[(1) - (1)]))); ;}
    break;

  case 703:
#line 1585 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(SECOND), (yylsp[(1) - (1)]))); ;}
    break;

  case 704:
#line 1587 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MILLISECOND), (yylsp[(1) - (1)]))); ;}
    break;

  case 705:
#line 1589 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MICROSECOND), (yylsp[(1) - (1)]))); ;}
    break;

  case 706:
#line 1591 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR) |
												 INTERVAL_MASK(MONTH), (yylsp[(1) - (3)])));
				;}
    break;

  case 707:
#line 1596 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR), (yylsp[(1) - (3)])));
				;}
    break;

  case 708:
#line 1601 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
				;}
    break;

  case 709:
#line 1607 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
				;}
    break;

  case 710:
#line 1614 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
				;}
    break;

  case 711:
#line 1619 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
				;}
    break;

  case 712:
#line 1625 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
				;}
    break;

  case 713:
#line 1630 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 714:
#line 1661 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 715:
#line 1663 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), (yylsp[(2) - (3)])); ;}
    break;

  case 716:
#line 1665 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = (yyvsp[(1) - (3)].node);
					n->collname = (yyvsp[(3) - (3)].list);
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 717:
#line 1673 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("timezone"),
											   list_make2((yyvsp[(5) - (5)].node), (yyvsp[(1) - (5)].node)),
											   (yylsp[(2) - (5)]));
				;}
    break;

  case 718:
#line 1688 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 719:
#line 1690 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 720:
#line 1692 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 721:
#line 1694 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 722:
#line 1696 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 723:
#line 1698 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 724:
#line 1700 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 725:
#line 1702 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 726:
#line 1704 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 727:
#line 1706 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 728:
#line 1708 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 729:
#line 1710 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 730:
#line 1712 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 731:
#line 1714 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 732:
#line 1717 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 733:
#line 1719 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 734:
#line 1721 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
    break;

  case 735:
#line 1724 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeAndExpr((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 736:
#line 1726 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeOrExpr((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 737:
#line 1728 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeNotExpr((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 738:
#line 1730 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeNotExpr((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 739:
#line 1733 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_GLOB, "~~~",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 740:
#line 1738 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "~~",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 741:
#line 1743 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make3((yyvsp[(1) - (5)].node), (yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 742:
#line 1750 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "!~~",
												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
				;}
    break;

  case 743:
#line 1755 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("not_like_escape"),
											   list_make3((yyvsp[(1) - (6)].node), (yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 744:
#line 1762 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "~~*",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 745:
#line 1767 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make2((yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "~~*",
												   (yyvsp[(1) - (5)].node), (PGNode *) n, (yylsp[(2) - (5)]));
				;}
    break;

  case 746:
#line 1775 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "!~~*",
												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
				;}
    break;

  case 747:
#line 1780 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("not_like_escape"),
											   list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "!~~*",
												   (yyvsp[(1) - (6)].node), (PGNode *) n, (yylsp[(2) - (6)]));
				;}
    break;

  case 748:
#line 1789 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(4) - (4)].node), makeNullAConst(-1)),
											   (yylsp[(2) - (4)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
												   (yyvsp[(1) - (4)].node), (PGNode *) n, (yylsp[(2) - (4)]));
				;}
    break;

  case 749:
#line 1797 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
												   (yyvsp[(1) - (6)].node), (PGNode *) n, (yylsp[(2) - (6)]));
				;}
    break;

  case 750:
#line 1805 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(5) - (5)].node), makeNullAConst(-1)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
												   (yyvsp[(1) - (5)].node), (PGNode *) n, (yylsp[(2) - (5)]));
				;}
    break;

  case 751:
#line 1813 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
											   (yylsp[(2) - (7)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
												   (yyvsp[(1) - (7)].node), (PGNode *) n, (yylsp[(2) - (7)]));
				;}
    break;

  case 752:
#line 1831 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					n->nulltesttype = PG_IS_NULL;
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 753:
#line 1839 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
					n->nulltesttype = PG_IS_NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 754:
#line 1847 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 755:
#line 1855 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 756:
#line 1863 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 757:
#line 1871 "third_party/libpg_query/grammar/statements/select.y"
    {
					if (list_length((yyvsp[(1) - (3)].list)) != 2)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on left side of OVERLAPS expression"),
								 parser_errposition((yylsp[(1) - (3)]))));
					if (list_length((yyvsp[(3) - (3)].list)) != 2)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on right side of OVERLAPS expression"),
								 parser_errposition((yylsp[(3) - (3)]))));
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlaps"),
											   list_concat((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)),
											   (yylsp[(2) - (3)]));
				;}
    break;

  case 758:
#line 1886 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("row"), (yyvsp[(1) - (1)].list), (yylsp[(1) - (1)]));
					(yyval.node) = (PGNode *) n;
		    ;}
    break;

  case 759:
#line 1891 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = PG_IS_TRUE;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 760:
#line 1899 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_TRUE;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 761:
#line 1907 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = IS_FALSE;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 762:
#line 1915 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_FALSE;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 763:
#line 1923 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = IS_UNKNOWN;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 764:
#line 1931 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_UNKNOWN;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 765:
#line 1939 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
				;}
    break;

  case 766:
#line 1943 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 767:
#line 1947 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
				;}
    break;

  case 768:
#line 1951 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
				;}
    break;

  case 769:
#line 1955 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN,
												   "BETWEEN",
												   (yyvsp[(1) - (6)].node),
												   (PGNode *) list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
												   (yylsp[(2) - (6)]));
				;}
    break;

  case 770:
#line 1963 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN,
												   "NOT BETWEEN",
												   (yyvsp[(1) - (7)].node),
												   (PGNode *) list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
												   (yylsp[(2) - (7)]));
				;}
    break;

  case 771:
#line 1971 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN_SYM,
												   "BETWEEN SYMMETRIC",
												   (yyvsp[(1) - (6)].node),
												   (PGNode *) list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
												   (yylsp[(2) - (6)]));
				;}
    break;

  case 772:
#line 1979 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN_SYM,
												   "NOT BETWEEN SYMMETRIC",
												   (yyvsp[(1) - (7)].node),
												   (PGNode *) list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
												   (yylsp[(2) - (7)]));
				;}
    break;

  case 773:
#line 1987 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* in_expr returns a PGSubLink or a list of a_exprs */
					if (IsA((yyvsp[(3) - (3)].node), PGSubLink))
					{
						/* generate foo = ANY (subquery) */
						PGSubLink *n = (PGSubLink *) (yyvsp[(3) - (3)].node);
						n->subLinkType = PG_ANY_SUBLINK;
						n->subLinkId = 0;
						n->testexpr = (yyvsp[(1) - (3)].node);
						n->operName = NIL;		/* show it's IN not = ANY */
						n->location = (yylsp[(2) - (3)]);
						(yyval.node) = (PGNode *)n;
					}
					else
					{
						/* generate scalar IN expression */
						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
					}
				;}
    break;

  case 774:
#line 2007 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* in_expr returns a PGSubLink or a list of a_exprs */
					if (IsA((yyvsp[(4) - (4)].node), PGSubLink))
					{
						/* generate NOT (foo = ANY (subquery)) */
						/* Make an = ANY node */
						PGSubLink *n = (PGSubLink *) (yyvsp[(4) - (4)].node);
						n->subLinkType = PG_ANY_SUBLINK;
						n->subLinkId = 0;
						n->testexpr = (yyvsp[(1) - (4)].node);
						n->operName = NIL;		/* show it's IN not = ANY */
						n->location = (yylsp[(2) - (4)]);
						/* Stick a NOT on top; must have same parse location */
						(yyval.node) = makeNotExpr((PGNode *) n, (yylsp[(2) - (4)]));
					}
					else
					{
						/* generate scalar NOT IN expression */
						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "<>", (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
					}
				;}
    break;

  case 775:
#line 2029 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = (yyvsp[(3) - (4)].subquerytype);
					n->subLinkId = 0;
					n->testexpr = (yyvsp[(1) - (4)].node);
					n->operName = (yyvsp[(2) - (4)].list);
					n->subselect = (yyvsp[(4) - (4)].node);
					n->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 776:
#line 2040 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(3) - (6)].subquerytype) == PG_ANY_SUBLINK)
						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ANY, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
					else
						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ALL, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 777:
#line 2047 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * The SQL spec only allows DEFAULT in "contextually typed
					 * expressions", but for us, it's easier to allow it in
					 * any a_expr and then throw error during parse analysis
					 * if it's in an inappropriate context.  This way also
					 * lets us say something smarter than "syntax error".
					 */
					PGSetToDefault *n = makeNode(PGSetToDefault);
					/* parse analysis will fill in the rest */
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 778:
#line 2072 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 779:
#line 2074 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), (yylsp[(2) - (3)])); ;}
    break;

  case 780:
#line 2076 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 781:
#line 2078 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 782:
#line 2080 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 783:
#line 2082 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 784:
#line 2084 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 785:
#line 2086 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 786:
#line 2088 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 787:
#line 2090 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 788:
#line 2092 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 789:
#line 2094 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 790:
#line 2096 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 791:
#line 2098 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 792:
#line 2100 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 793:
#line 2102 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 794:
#line 2104 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 795:
#line 2106 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 796:
#line 2108 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
    break;

  case 797:
#line 2110 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
				;}
    break;

  case 798:
#line 2114 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 799:
#line 2118 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
				;}
    break;

  case 800:
#line 2122 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
				;}
    break;

  case 801:
#line 2135 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 802:
#line 2136 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 803:
#line 2138 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = makeParamRef(0, (yylsp[(1) - (2)]));
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = makeParamRef(0, (yylsp[(1) - (2)]));
				;}
    break;

  case 804:
#line 2150 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGParamRef *p = makeNode(PGParamRef);
					p->number = (yyvsp[(1) - (2)].ival);
					p->location = (yylsp[(1) - (2)]);
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (PGNode *) p;
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = (PGNode *) p;
				;}
    break;

  case 805:
#line 2165 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(4) - (4)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (yyvsp[(2) - (4)].node);
						n->indirection = check_indirection((yyvsp[(4) - (4)].list), yyscanner);
						(yyval.node) = (PGNode *)n;
					}
					else
						(yyval.node) = (yyvsp[(2) - (4)].node);
				;}
    break;

  case 806:
#line 2177 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 807:
#line 2179 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 808:
#line 2181 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_EXPR_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(1) - (1)].node);
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 809:
#line 2192 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Because the select_with_parens nonterminal is designed
					 * to "eat" as many levels of parens as possible, the
					 * '(' a_expr ')' opt_indirection production above will
					 * fail to match a sub-SELECT with indirection decoration;
					 * the sub-SELECT won't be regarded as an a_expr as long
					 * as there are parens around it.  To support applying
					 * subscripting or field selection to a sub-SELECT result,
					 * we need this redundant-looking production.
					 */
					PGSubLink *n = makeNode(PGSubLink);
					PGAIndirection *a = makeNode(PGAIndirection);
					n->subLinkType = PG_EXPR_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(1) - (2)].node);
					n->location = (yylsp[(1) - (2)]);
					a->arg = (PGNode *)n;
					a->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.node) = (PGNode *)a;
				;}
    break;

  case 810:
#line 2216 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_EXISTS_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(2) - (2)].node);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 811:
#line 2229 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall((yyvsp[(1) - (3)].list), NIL, (yylsp[(1) - (3)]));
				;}
    break;

  case 812:
#line 2233 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (5)].list), (yyvsp[(3) - (5)].list), (yylsp[(1) - (5)]));
					n->agg_order = (yyvsp[(4) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 813:
#line 2239 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), list_make1((yyvsp[(4) - (6)].node)), (yylsp[(1) - (6)]));
					n->func_variadic = true;
					n->agg_order = (yyvsp[(5) - (6)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 814:
#line 2246 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (8)].list), lappend((yyvsp[(3) - (8)].list), (yyvsp[(6) - (8)].node)), (yylsp[(1) - (8)]));
					n->func_variadic = true;
					n->agg_order = (yyvsp[(7) - (8)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 815:
#line 2253 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), (yyvsp[(4) - (6)].list), (yylsp[(1) - (6)]));
					n->agg_order = (yyvsp[(5) - (6)].list);
					/* Ideally we'd mark the PGFuncCall node to indicate
					 * "must be an aggregate", but there's no provision
					 * for that in PGFuncCall at the moment.
					 */
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 816:
#line 2263 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), (yyvsp[(4) - (6)].list), (yylsp[(1) - (6)]));
					n->agg_order = (yyvsp[(5) - (6)].list);
					n->agg_distinct = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 817:
#line 2270 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * We consider AGGREGATE(*) to invoke a parameterless
					 * aggregate.  This does the right thing for COUNT(*),
					 * and there are no other aggregates in SQL that accept
					 * '*' as parameter.
					 *
					 * The PGFuncCall node is also marked agg_star = true,
					 * so that later processing can detect what the argument
					 * really was.
					 */
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (4)].list), NIL, (yylsp[(1) - (4)]));
					n->agg_star = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 818:
#line 2298 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = (PGFuncCall *) (yyvsp[(1) - (4)].node);
					/*
					 * The order clause for WITHIN GROUP and the one for
					 * plain-aggregate ORDER BY share a field, so we have to
					 * check here that at most one is present.  We also check
					 * for DISTINCT and VARIADIC here to give a better error
					 * location.  Other consistency checks are deferred to
					 * parse analysis.
					 */
					if ((yyvsp[(2) - (4)].list) != NIL)
					{
						if (n->agg_order != NIL)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use multiple ORDER BY clauses with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						if (n->agg_distinct)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use DISTINCT with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						if (n->func_variadic)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use VARIADIC with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						n->agg_order = (yyvsp[(2) - (4)].list);
						n->agg_within_group = true;
					}
					n->agg_filter = (yyvsp[(3) - (4)].node);
					n->over = (yyvsp[(4) - (4)].windef);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 819:
#line 2333 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 820:
#line 2343 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 821:
#line 2344 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 822:
#line 2352 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("pg_collation_for"),
											   list_make1((yyvsp[(4) - (5)].node)),
											   (yylsp[(1) - (5)]));
				;}
    break;

  case 823:
#line 2358 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_DATE, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 824:
#line 2362 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIME, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 825:
#line 2366 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIME_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 826:
#line 2370 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIMESTAMP, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 827:
#line 2374 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIMESTAMP_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 828:
#line 2378 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIME, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 829:
#line 2382 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIME_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 830:
#line 2386 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIMESTAMP, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 831:
#line 2390 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIMESTAMP_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 832:
#line 2394 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_ROLE, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 833:
#line 2398 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 834:
#line 2402 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_SESSION_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 835:
#line 2406 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 836:
#line 2410 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_CATALOG, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 837:
#line 2414 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_SCHEMA, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 838:
#line 2418 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].typnam), (yylsp[(1) - (6)])); ;}
    break;

  case 839:
#line 2420 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("date_part"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 840:
#line 2424 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* overlay(A PLACING B FROM C FOR D) is converted to
					 * overlay(A, B, C, D)
					 * overlay(A PLACING B FROM C) is converted to
					 * overlay(A, B, C)
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlay"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 841:
#line 2433 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* position(A in B) is converted to position(B, A) */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("position"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 842:
#line 2438 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* substring(A from B for C) is converted to
					 * substring(A, B, C) - thomas 2000-11-28
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("substring"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 843:
#line 2445 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* TREAT(expr AS target) converts expr of a particular type to target,
					 * which is defined to be a subtype of the original expression.
					 * In SQL99, this is intended for use with structured UDTs,
					 * but let's make this a generally useful form allowing stronger
					 * coercions than are handled by implicit casting.
					 *
					 * Convert SystemTypeName() to SystemFuncName() even though
					 * at the moment they result in the same thing.
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName(((PGValue *)llast((yyvsp[(5) - (6)].typnam)->names))->val.str),
												list_make1((yyvsp[(3) - (6)].node)),
												(yylsp[(1) - (6)]));
				;}
    break;

  case 844:
#line 2460 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* various trim expressions are defined in SQL
					 * - thomas 1997-07-19
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("trim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 845:
#line 2467 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("ltrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 846:
#line 2471 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("rtrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 847:
#line 2475 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("trim"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 848:
#line 2479 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NULLIF, "=", (yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(1) - (6)]));
				;}
    break;

  case 849:
#line 2483 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCoalesceExpr *c = makeNode(PGCoalesceExpr);
					c->args = (yyvsp[(3) - (4)].list);
					c->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)c;
				;}
    break;

  case 850:
#line 2496 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
    break;

  case 851:
#line 2497 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 852:
#line 2501 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(4) - (5)].node); ;}
    break;

  case 853:
#line 2502 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 854:
#line 2510 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 855:
#line 2511 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 856:
#line 2515 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].windef)); ;}
    break;

  case 857:
#line 2517 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].windef)); ;}
    break;

  case 858:
#line 2522 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(3) - (3)].windef);
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.windef) = n;
				;}
    break;

  case 859:
#line 2530 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.windef) = (yyvsp[(2) - (2)].windef); ;}
    break;

  case 860:
#line 2532 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->name = (yyvsp[(2) - (2)].str);
					n->refname = NULL;
					n->partitionClause = NIL;
					n->orderClause = NIL;
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.windef) = n;
				;}
    break;

  case 861:
#line 2545 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.windef) = NULL; ;}
    break;

  case 862:
#line 2550 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->name = NULL;
					n->refname = (yyvsp[(2) - (6)].str);
					n->partitionClause = (yyvsp[(3) - (6)].list);
					n->orderClause = (yyvsp[(4) - (6)].list);
					/* copy relevant fields of opt_frame_clause */
					n->frameOptions = (yyvsp[(5) - (6)].windef)->frameOptions;
					n->startOffset = (yyvsp[(5) - (6)].windef)->startOffset;
					n->endOffset = (yyvsp[(5) - (6)].windef)->endOffset;
					n->location = (yylsp[(1) - (6)]);
					(yyval.windef) = n;
				;}
    break;

  case 863:
#line 2575 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 864:
#line 2576 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = NULL; ;}
    break;

  case 865:
#line 2579 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 866:
#line 2580 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 867:
#line 2592 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(2) - (2)].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_RANGE;
					if (n->frameOptions & (FRAMEOPTION_START_VALUE_PRECEDING |
										   FRAMEOPTION_END_VALUE_PRECEDING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("RANGE PRECEDING is only supported with UNBOUNDED"),
								 parser_errposition((yylsp[(1) - (2)]))));
					if (n->frameOptions & (FRAMEOPTION_START_VALUE_FOLLOWING |
										   FRAMEOPTION_END_VALUE_FOLLOWING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("RANGE FOLLOWING is only supported with UNBOUNDED"),
								 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.windef) = n;
				;}
    break;

  case 868:
#line 2610 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(2) - (2)].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_ROWS;
					(yyval.windef) = n;
				;}
    break;

  case 869:
#line 2616 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 870:
#line 2626 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(1) - (1)].windef);
					/* reject invalid cases */
					if (n->frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[(1) - (1)]))));
					if (n->frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot end with current row"),
								 parser_errposition((yylsp[(1) - (1)]))));
					n->frameOptions |= FRAMEOPTION_END_CURRENT_ROW;
					(yyval.windef) = n;
				;}
    break;

  case 871:
#line 2643 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n1 = (yyvsp[(2) - (4)].windef);
					PGWindowDef *n2 = (yyvsp[(4) - (4)].windef);
					/* form merged options */
					int		frameOptions = n1->frameOptions;
					/* shift converts START_ options to END_ options */
					frameOptions |= n2->frameOptions << 1;
					frameOptions |= FRAMEOPTION_BETWEEN;
					/* reject invalid cases */
					if (frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[(2) - (4)]))));
					if (frameOptions & FRAMEOPTION_END_UNBOUNDED_PRECEDING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame end cannot be UNBOUNDED PRECEDING"),
								 parser_errposition((yylsp[(4) - (4)]))));
					if ((frameOptions & FRAMEOPTION_START_CURRENT_ROW) &&
						(frameOptions & FRAMEOPTION_END_VALUE_PRECEDING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from current row cannot have preceding rows"),
								 parser_errposition((yylsp[(4) - (4)]))));
					if ((frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING) &&
						(frameOptions & (FRAMEOPTION_END_VALUE_PRECEDING |
										 FRAMEOPTION_END_CURRENT_ROW)))
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot have preceding rows"),
								 parser_errposition((yylsp[(4) - (4)]))));
					n1->frameOptions = frameOptions;
					n1->endOffset = n2->startOffset;
					(yyval.windef) = n1;
				;}
    break;

  case 872:
#line 2688 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_PRECEDING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 873:
#line 2696 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_FOLLOWING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 874:
#line 2704 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_CURRENT_ROW;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 875:
#line 2712 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_PRECEDING;
					n->startOffset = (yyvsp[(1) - (2)].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 876:
#line 2720 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_FOLLOWING;
					n->startOffset = (yyvsp[(1) - (2)].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 877:
#line 2740 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 878:
#line 2741 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 879:
#line 2742 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(2) - (5)].list), (yyvsp[(4) - (5)].node)); ;}
    break;

  case 880:
#line 2745 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
    break;

  case 881:
#line 2746 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
    break;

  case 882:
#line 2747 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ALL_SUBLINK; ;}
    break;

  case 883:
#line 2750 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 884:
#line 2751 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) (yyvsp[(1) - (1)].conststr); ;}
    break;

  case 885:
#line 2754 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "+"; ;}
    break;

  case 886:
#line 2755 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "-"; ;}
    break;

  case 887:
#line 2756 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "*"; ;}
    break;

  case 888:
#line 2757 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "/"; ;}
    break;

  case 889:
#line 2758 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "%"; ;}
    break;

  case 890:
#line 2759 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "^"; ;}
    break;

  case 891:
#line 2760 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<"; ;}
    break;

  case 892:
#line 2761 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = ">"; ;}
    break;

  case 893:
#line 2762 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "="; ;}
    break;

  case 894:
#line 2763 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<="; ;}
    break;

  case 895:
#line 2764 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = ">="; ;}
    break;

  case 896:
#line 2765 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<>"; ;}
    break;

  case 897:
#line 2769 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 898:
#line 2771 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 899:
#line 2776 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 900:
#line 2778 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 901:
#line 2783 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 902:
#line 2785 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 903:
#line 2787 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~")); ;}
    break;

  case 904:
#line 2789 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~")); ;}
    break;

  case 905:
#line 2791 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~~")); ;}
    break;

  case 906:
#line 2793 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~~")); ;}
    break;

  case 907:
#line 2795 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~*")); ;}
    break;

  case 908:
#line 2797 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~*")); ;}
    break;

  case 909:
#line 2811 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 910:
#line 2813 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lcons(makeString((yyvsp[(1) - (3)].str)), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 911:
#line 2817 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 912:
#line 2821 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 913:
#line 2828 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 914:
#line 2832 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 915:
#line 2838 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(1) - (1)].node);
				;}
    break;

  case 916:
#line 2842 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[(1) - (3)].str);
					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) na;
				;}
    break;

  case 917:
#line 2851 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[(1) - (3)].str);
					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) na;
				;}
    break;

  case 918:
#line 2861 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].typnam)); ;}
    break;

  case 919:
#line 2862 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].typnam)); ;}
    break;

  case 920:
#line 2867 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(makeStringConst((yyvsp[(1) - (3)].str), (yylsp[(1) - (3)])), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 921:
#line 2870 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 922:
#line 2877 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 923:
#line 2878 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "year"; ;}
    break;

  case 924:
#line 2879 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "month"; ;}
    break;

  case 925:
#line 2880 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "day"; ;}
    break;

  case 926:
#line 2881 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "hour"; ;}
    break;

  case 927:
#line 2882 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "minute"; ;}
    break;

  case 928:
#line 2883 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "second"; ;}
    break;

  case 929:
#line 2884 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "millisecond"; ;}
    break;

  case 930:
#line 2885 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "microsecond"; ;}
    break;

  case 931:
#line 2886 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 932:
#line 2897 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make4((yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].node), (yyvsp[(3) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 933:
#line 2901 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 934:
#line 2908 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 935:
#line 2914 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(3) - (3)].node), (yyvsp[(1) - (3)].node)); ;}
    break;

  case 936:
#line 2915 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 937:
#line 2932 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 938:
#line 2936 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* not legal per SQL99, but might as well allow it */
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yyvsp[(2) - (3)].node));
				;}
    break;

  case 939:
#line 2941 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node));
				;}
    break;

  case 940:
#line 2945 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Since there are no cases where this syntax allows
					 * a textual FOR value, we forcibly cast the argument
					 * to int4.  The possible matches in pg_proc are
					 * substring(text,int4) and substring(text,text),
					 * and we don't want the parser to choose the latter,
					 * which it is likely to do if the second argument
					 * is unknown or doesn't have an implicit cast to int4.
					 */
					(yyval.list) = list_make3((yyvsp[(1) - (2)].node), makeIntConst(1, -1),
									makeTypeCast((yyvsp[(2) - (2)].node),
												 SystemTypeName("int4"), -1));
				;}
    break;

  case 941:
#line 2960 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(1) - (1)].list);
				;}
    break;

  case 942:
#line 2964 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 943:
#line 2968 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 944:
#line 2971 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 945:
#line 2974 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(3) - (3)].list), (yyvsp[(1) - (3)].node)); ;}
    break;

  case 946:
#line 2975 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 947:
#line 2976 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 948:
#line 2980 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subselect = (yyvsp[(1) - (1)].node);
					/* other fields will be filled later */
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 949:
#line 2986 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *)(yyvsp[(2) - (3)].list); ;}
    break;

  case 950:
#line 2997 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCaseExpr *c = makeNode(PGCaseExpr);
					c->casetype = InvalidOid; /* not analyzed yet */
					c->arg = (PGExpr *) (yyvsp[(2) - (5)].node);
					c->args = (yyvsp[(3) - (5)].list);
					c->defresult = (PGExpr *) (yyvsp[(4) - (5)].node);
					c->location = (yylsp[(1) - (5)]);
					(yyval.node) = (PGNode *)c;
				;}
    break;

  case 951:
#line 3010 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 952:
#line 3011 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 953:
#line 3016 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCaseWhen *w = makeNode(PGCaseWhen);
					w->expr = (PGExpr *) (yyvsp[(2) - (4)].node);
					w->result = (PGExpr *) (yyvsp[(4) - (4)].node);
					w->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)w;
				;}
    break;

  case 954:
#line 3026 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 955:
#line 3027 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 956:
#line 3030 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 957:
#line 3031 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 958:
#line 3035 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeColumnRef((yyvsp[(1) - (1)].str), NIL, (yylsp[(1) - (1)]), yyscanner);
				;}
    break;

  case 959:
#line 3039 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeColumnRef((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].list), (yylsp[(1) - (2)]), yyscanner);
				;}
    break;

  case 960:
#line 3046 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeString((yyvsp[(2) - (2)].str));
				;}
    break;

  case 961:
#line 3050 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeNode(PGAStar);
				;}
    break;

  case 962:
#line 3054 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = false;
					ai->lidx = NULL;
					ai->uidx = (yyvsp[(2) - (3)].node);
					(yyval.node) = (PGNode *) ai;
				;}
    break;

  case 963:
#line 3062 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = true;
					ai->lidx = (yyvsp[(2) - (5)].node);
					ai->uidx = (yyvsp[(4) - (5)].node);
					(yyval.node) = (PGNode *) ai;
				;}
    break;

  case 964:
#line 3072 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 965:
#line 3073 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 966:
#line 3077 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 967:
#line 3078 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 968:
#line 3082 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 969:
#line 3083 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 972:
#line 3097 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 973:
#line 3098 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 974:
#line 3102 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 975:
#line 3103 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
    break;

  case 976:
#line 3107 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(3) - (3)].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (3)].node);
					(yyval.target)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 977:
#line 3123 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(2) - (2)].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (2)].node);
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 978:
#line 3131 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (1)].node);
					(yyval.target)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 979:
#line 3139 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnRef *n = makeNode(PGColumnRef);
					n->fields = list_make1(makeNode(PGAStar));
					n->location = (yylsp[(1) - (1)]);

					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)n;
					(yyval.target)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 980:
#line 3160 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].range)); ;}
    break;

  case 981:
#line 3161 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].range)); ;}
    break;

  case 982:
#line 3173 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = makeRangeVar(NULL, (yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 983:
#line 3177 "third_party/libpg_query/grammar/statements/select.y"
    {
					check_qualified_name((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.range) = makeRangeVar(NULL, NULL, (yylsp[(1) - (2)]));
					switch (list_length((yyvsp[(2) - (2)].list)))
					{
						case 1:
							(yyval.range)->catalogname = NULL;
							(yyval.range)->schemaname = (yyvsp[(1) - (2)].str);
							(yyval.range)->relname = strVal(linitial((yyvsp[(2) - (2)].list)));
							break;
						case 2:
							(yyval.range)->catalogname = (yyvsp[(1) - (2)].str);
							(yyval.range)->schemaname = strVal(linitial((yyvsp[(2) - (2)].list)));
							(yyval.range)->relname = strVal(lsecond((yyvsp[(2) - (2)].list)));
							break;
						default:
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("improper qualified name (too many dotted names): %s",
											NameListToString(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)))),
									 parser_errposition((yylsp[(1) - (2)]))));
							break;
					}
				;}
    break;

  case 984:
#line 3204 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 985:
#line 3206 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 986:
#line 3210 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 987:
#line 3212 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 988:
#line 3223 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 989:
#line 3225 "third_party/libpg_query/grammar/statements/select.y"
    {
						(yyval.list) = check_func_name(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)),
											 yyscanner);
					;}
    break;

  case 990:
#line 3236 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival), (yylsp[(1) - (1)]));
				;}
    break;

  case 991:
#line 3240 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 992:
#line 3244 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 993:
#line 3248 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 994:
#line 3252 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* This is a bit constant per SQL99:
					 * Without Feature F511, "BIT data type",
					 * a <general literal> shall not be a
					 * <bit string literal> or a <hex string literal>.
					 */
					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 995:
#line 3261 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* generic type 'literal' syntax */
					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (2)].list));
					t->location = (yylsp[(1) - (2)]);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), t);
				;}
    break;

  case 996:
#line 3268 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* generic syntax with a type modifier */
					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (6)].list));
					PGListCell *lc;

					/*
					 * We must use func_arg_list and opt_sort_clause in the
					 * production to avoid reduce/reduce conflicts, but we
					 * don't actually wish to allow PGNamedArgExpr in this
					 * context, nor ORDER BY.
					 */
					foreach(lc, (yyvsp[(3) - (6)].list))
					{
						PGNamedArgExpr *arg = (PGNamedArgExpr *) lfirst(lc);

						if (IsA(arg, PGNamedArgExpr))
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have parameter name"),
									 parser_errposition(arg->location)));
					}
					if ((yyvsp[(4) - (6)].list) != NIL)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have ORDER BY"),
									 parser_errposition((yylsp[(4) - (6)]))));

					t->typmods = (yyvsp[(3) - (6)].list);
					t->location = (yylsp[(1) - (6)]);
					(yyval.node) = makeStringConstCast((yyvsp[(6) - (6)].str), (yylsp[(6) - (6)]), t);
				;}
    break;

  case 997:
#line 3300 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), (yyvsp[(1) - (2)].typnam));
				;}
    break;

  case 998:
#line 3304 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(3) - (5)].node), (yylsp[(3) - (5)]), (yyvsp[(5) - (5)].list));
				;}
    break;

  case 999:
#line 3308 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(2) - (3)].ival), (yylsp[(2) - (3)]), (yyvsp[(3) - (3)].list));
				;}
    break;

  case 1000:
#line 3312 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), (yyvsp[(3) - (3)].list));
				;}
    break;

  case 1001:
#line 3316 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBoolAConst(true, (yylsp[(1) - (1)]));
				;}
    break;

  case 1002:
#line 3320 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBoolAConst(false, (yylsp[(1) - (1)]));
				;}
    break;

  case 1003:
#line 3324 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
				;}
    break;

  case 1004:
#line 3329 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 1005:
#line 3330 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1006:
#line 3346 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1007:
#line 3347 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1008:
#line 3348 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1009:
#line 3351 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1010:
#line 3352 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1011:
#line 3357 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1012:
#line 3358 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1013:
#line 3359 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1014:
#line 3362 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 1015:
#line 3363 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)); ;}
    break;

  case 1016:
#line 3367 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(2) - (2)].str))); ;}
    break;

  case 1017:
#line 3369 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 1018:
#line 3373 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 1019:
#line 3374 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1021:
#line 3385 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1022:
#line 3386 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1023:
#line 3387 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1024:
#line 3388 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1025:
#line 3389 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1026:
#line 3392 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1027:
#line 3393 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1028:
#line 8 "third_party/libpg_query/grammar/statements/prepare.y"
    {
					PGPrepareStmt *n = makeNode(PGPrepareStmt);
					n->name = (yyvsp[(2) - (5)].str);
					n->argtypes = (yyvsp[(3) - (5)].list);
					n->query = (yyvsp[(5) - (5)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1029:
#line 18 "third_party/libpg_query/grammar/statements/prepare.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 1030:
#line 19 "third_party/libpg_query/grammar/statements/prepare.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1035:
#line 8 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					/* ...but not both */
					n->schemaname = (yyvsp[(3) - (4)].str);
					n->schemaElts = (yyvsp[(4) - (4)].list);
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1036:
#line 17 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					/* ...but not here */
					n->schemaname = (yyvsp[(6) - (7)].str);
					if ((yyvsp[(7) - (7)].list) != NIL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("CREATE SCHEMA IF NOT EXISTS cannot include schema elements"),
								 parser_errposition((yylsp[(7) - (7)]))));
					n->schemaElts = (yyvsp[(7) - (7)].list);
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1037:
#line 35 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					if ((yyloc) < 0)			/* see comments for YYLLOC_DEFAULT */
						(yyloc) = (yylsp[(2) - (2)]);
					(yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node));
				;}
    break;

  case 1038:
#line 41 "third_party/libpg_query/grammar/statements/create_schema.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1043:
#line 11 "third_party/libpg_query/grammar/statements/index.y"
    {
					PGIndexStmt *n = makeNode(PGIndexStmt);
					n->unique = (yyvsp[(2) - (13)].boolean);
					n->concurrent = (yyvsp[(4) - (13)].boolean);
					n->idxname = (yyvsp[(5) - (13)].str);
					n->relation = (yyvsp[(7) - (13)].range);
					n->accessMethod = (yyvsp[(8) - (13)].str);
					n->indexParams = (yyvsp[(10) - (13)].list);
					n->options = (yyvsp[(12) - (13)].list);
					n->whereClause = (yyvsp[(13) - (13)].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;
					n->transformed = false;
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1044:
#line 36 "third_party/libpg_query/grammar/statements/index.y"
    {
					PGIndexStmt *n = makeNode(PGIndexStmt);
					n->unique = (yyvsp[(2) - (16)].boolean);
					n->concurrent = (yyvsp[(4) - (16)].boolean);
					n->idxname = (yyvsp[(8) - (16)].str);
					n->relation = (yyvsp[(10) - (16)].range);
					n->accessMethod = (yyvsp[(11) - (16)].str);
					n->indexParams = (yyvsp[(13) - (16)].list);
					n->options = (yyvsp[(15) - (16)].list);
					n->whereClause = (yyvsp[(16) - (16)].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;
					n->transformed = false;
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1045:
#line 62 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1046:
#line 66 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
    break;

  case 1047:
#line 67 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (char*) DEFAULT_INDEX_TYPE; ;}
    break;

  case 1048:
#line 72 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1049:
#line 73 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1050:
#line 78 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1051:
#line 79 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = NULL; ;}
    break;

  case 1052:
#line 83 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1053:
#line 84 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1054:
#line 89 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1055:
#line 90 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1056:
#line 8 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1057:
#line 17 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1058:
#line 26 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1059:
#line 35 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1060:
#line 44 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1061:
#line 53 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1062:
#line 6 "third_party/libpg_query/grammar/statements/checkpoint.y"
    {
					PGCheckPointStmt *n = makeNode(PGCheckPointStmt);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1063:
#line 8 "third_party/libpg_query/grammar/statements/export.y"
    {
					PGExportStmt *n = makeNode(PGExportStmt);
					n->filename = (yyvsp[(3) - (4)].str);
					n->options = NIL;
					if ((yyvsp[(4) - (4)].list)) {
						n->options = list_concat(n->options, (yyvsp[(4) - (4)].list));
					}
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1064:
#line 21 "third_party/libpg_query/grammar/statements/export.y"
    {
					PGImportStmt *n = makeNode(PGImportStmt);
					n->filename = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1065:
#line 10 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(2) - (2)].node);
					n->options = NIL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1066:
#line 17 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(4) - (4)].node);
					n->options = list_make1(makeDefElem("analyze", NULL, (yylsp[(2) - (4)])));
					if ((yyvsp[(3) - (4)].boolean))
						n->options = lappend(n->options,
											 makeDefElem("verbose", NULL, (yylsp[(3) - (4)])));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1067:
#line 27 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(3) - (3)].node);
					n->options = list_make1(makeDefElem("verbose", NULL, (yylsp[(2) - (3)])));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1068:
#line 34 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(5) - (5)].node);
					n->options = (yyvsp[(3) - (5)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1069:
#line 44 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1070:
#line 45 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1071:
#line 50 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 1072:
#line 51 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].value); ;}
    break;

  case 1073:
#line 52 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1079:
#line 65 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1080:
#line 66 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1081:
#line 67 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1082:
#line 68 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1083:
#line 73 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1084:
#line 74 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1085:
#line 80 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 1086:
#line 84 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 1087:
#line 91 "third_party/libpg_query/grammar/statements/explain.y"
    {;}
    break;

  case 1088:
#line 92 "third_party/libpg_query/grammar/statements/explain.y"
    {;}
    break;

  case 1089:
#line 97 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "true"; ;}
    break;

  case 1090:
#line 98 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "false"; ;}
    break;

  case 1091:
#line 99 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "on"; ;}
    break;

  case 1092:
#line 105 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1093:
#line 111 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 1094:
#line 118 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1095:
#line 119 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "analyze"; ;}
    break;

  case 1096:
#line 11 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(2) - (2)].vsetstmt);
					n->is_local = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1097:
#line 17 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->is_local = true;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1098:
#line 23 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->is_local = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1099:
#line 32 "third_party/libpg_query/grammar/statements/variable_set.y"
    {(yyval.vsetstmt) = (yyvsp[(1) - (1)].vsetstmt);;}
    break;

  case 1100:
#line 34 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_CURRENT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1101:
#line 42 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (char*) "timezone";
					if ((yyvsp[(3) - (3)].node) != NULL)
						n->args = list_make1((yyvsp[(3) - (3)].node));
					else
						n->kind = VAR_SET_DEFAULT;
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1102:
#line 53 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (char*) "search_path";
					n->args = list_make1(makeStringConst((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)])));
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1103:
#line 65 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[(1) - (3)].str);
					n->args = (yyvsp[(3) - (3)].list);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1104:
#line 73 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[(1) - (3)].str);
					n->args = (yyvsp[(3) - (3)].list);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1105:
#line 81 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1106:
#line 88 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1107:
#line 98 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)])); ;}
    break;

  case 1108:
#line 100 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
    break;

  case 1109:
#line 106 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1110:
#line 110 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1111:
#line 114 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGTypeName *t = (yyvsp[(1) - (3)].typnam);
					if ((yyvsp[(3) - (3)].list) != NIL)
					{
						PGAConst *n = (PGAConst *) linitial((yyvsp[(3) - (3)].list));
						if ((n->val.val.ival & ~(INTERVAL_MASK(HOUR) | INTERVAL_MASK(MINUTE))) != 0)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("time zone interval must be HOUR or HOUR TO MINUTE"),
									 parser_errposition((yylsp[(3) - (3)]))));
					}
					t->typmods = (yyvsp[(3) - (3)].list);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), t);
				;}
    break;

  case 1112:
#line 129 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGTypeName *t = (yyvsp[(1) - (5)].typnam);
					t->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.node) = makeStringConstCast((yyvsp[(5) - (5)].str), (yylsp[(5) - (5)]), t);
				;}
    break;

  case 1113:
#line 135 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
    break;

  case 1114:
#line 136 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1115:
#line 137 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1116:
#line 141 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 1117:
#line 142 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 1118:
#line 8 "third_party/libpg_query/grammar/statements/load.y"
    {
					PGLoadStmt *n = makeNode(PGLoadStmt);
					n->filename = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1119:
#line 16 "third_party/libpg_query/grammar/statements/load.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1120:
#line 9 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (4)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (4)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (4)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1121:
#line 23 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (5)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (5)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (5)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = (yyvsp[(5) - (5)].range);
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1122:
#line 37 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = (PGVacuumStmt *) (yyvsp[(5) - (5)].node);
					n->options |= PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (5)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (5)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (5)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1123:
#line 49 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM | (yyvsp[(3) - (4)].ival);
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1124:
#line 57 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM | (yyvsp[(3) - (6)].ival);
					n->relation = (yyvsp[(5) - (6)].range);
					n->va_cols = (yyvsp[(6) - (6)].list);
					if (n->va_cols != NIL)	/* implies analyze */
						n->options |= PG_VACOPT_ANALYZE;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1125:
#line 70 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_ANALYZE; ;}
    break;

  case 1126:
#line 71 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_VERBOSE; ;}
    break;

  case 1127:
#line 72 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_FREEZE; ;}
    break;

  case 1128:
#line 73 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_FULL; ;}
    break;

  case 1129:
#line 75 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					if (strcmp((yyvsp[(1) - (1)].str), "disable_page_skipping") == 0)
						(yyval.ival) = PG_VACOPT_DISABLE_PAGE_SKIPPING;
					else
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
							 errmsg("unrecognized VACUUM option \"%s\"", (yyvsp[(1) - (1)].str)),
									 parser_errposition((yylsp[(1) - (1)]))));
				;}
    break;

  case 1130:
#line 87 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1131:
#line 88 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1132:
#line 93 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 1133:
#line 94 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
    break;

  case 1134:
#line 98 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1135:
#line 99 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1136:
#line 9 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGDeleteStmt *n = makeNode(PGDeleteStmt);
					n->relation = (yyvsp[(4) - (7)].range);
					n->usingClause = (yyvsp[(5) - (7)].list);
					n->whereClause = (yyvsp[(6) - (7)].node);
					n->returningList = (yyvsp[(7) - (7)].list);
					n->withClause = (yyvsp[(1) - (7)].with);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1137:
#line 22 "third_party/libpg_query/grammar/statements/delete.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
				;}
    break;

  case 1138:
#line 26 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGAlias *alias = makeNode(PGAlias);
					alias->aliasname = (yyvsp[(2) - (2)].str);
					(yyvsp[(1) - (2)].range)->alias = alias;
					(yyval.range) = (yyvsp[(1) - (2)].range);
				;}
    break;

  case 1139:
#line 33 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGAlias *alias = makeNode(PGAlias);
					alias->aliasname = (yyvsp[(3) - (3)].str);
					(yyvsp[(1) - (3)].range)->alias = alias;
					(yyval.range) = (yyvsp[(1) - (3)].range);
				;}
    break;

  case 1140:
#line 43 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 1141:
#line 44 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1142:
#line 50 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1143:
#line 51 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1144:
#line 10 "third_party/libpg_query/grammar/statements/analyze.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_ANALYZE;
					if ((yyvsp[(2) - (2)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1145:
#line 20 "third_party/libpg_query/grammar/statements/analyze.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_ANALYZE;
					if ((yyvsp[(2) - (4)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = (yyvsp[(3) - (4)].range);
					n->va_cols = (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1146:
#line 2 "third_party/libpg_query/grammar/statements/variable_reset.y"
    { (yyval.node) = (PGNode *) (yyvsp[(2) - (2)].vsetstmt); ;}
    break;

  case 1147:
#line 8 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (yyvsp[(1) - (1)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1148:
#line 15 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET_ALL;
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1149:
#line 24 "third_party/libpg_query/grammar/statements/variable_reset.y"
    { (yyval.vsetstmt) = (yyvsp[(1) - (1)].vsetstmt); ;}
    break;

  case 1150:
#line 26 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (char*) "timezone";
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1151:
#line 33 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (char*) "transaction_isolation";
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1152:
#line 3 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowSelectStmt *n = makeNode(PGVariableShowSelectStmt);
				n->stmt = (yyvsp[(2) - (2)].node);
				n->name = (char*) "select";
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1153:
#line 11 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1154:
#line 17 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (char*) "timezone";
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1155:
#line 23 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (char*) "transaction_isolation";
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1156:
#line 29 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (char*) "all";
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1159:
#line 39 "third_party/libpg_query/grammar/statements/variable_show.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1160:
#line 41 "third_party/libpg_query/grammar/statements/variable_show.y"
    { (yyval.str) = psprintf("%s.%s", (yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str)); ;}
    break;

  case 1161:
#line 7 "third_party/libpg_query/grammar/statements/call.y"
    {
					PGCallStmt *n = makeNode(PGCallStmt);
					n->func = (yyvsp[(2) - (2)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1162:
#line 10 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(4) - (9)].range);
					n->view->relpersistence = (yyvsp[(2) - (9)].ival);
					n->aliases = (yyvsp[(5) - (9)].list);
					n->query = (yyvsp[(8) - (9)].node);
					n->replace = false;
					n->options = (yyvsp[(6) - (9)].list);
					n->withCheckOption = (yyvsp[(9) - (9)].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1163:
#line 23 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(6) - (11)].range);
					n->view->relpersistence = (yyvsp[(4) - (11)].ival);
					n->aliases = (yyvsp[(7) - (11)].list);
					n->query = (yyvsp[(10) - (11)].node);
					n->replace = true;
					n->options = (yyvsp[(8) - (11)].list);
					n->withCheckOption = (yyvsp[(11) - (11)].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1164:
#line 36 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(5) - (12)].range);
					n->view->relpersistence = (yyvsp[(2) - (12)].ival);
					n->aliases = (yyvsp[(7) - (12)].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[(11) - (12)].node));
					n->replace = false;
					n->options = (yyvsp[(9) - (12)].list);
					n->withCheckOption = (yyvsp[(12) - (12)].viewcheckoption);
					if (n->withCheckOption != PG_NO_CHECK_OPTION)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[(12) - (12)]))));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1165:
#line 54 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(7) - (14)].range);
					n->view->relpersistence = (yyvsp[(4) - (14)].ival);
					n->aliases = (yyvsp[(9) - (14)].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[(13) - (14)].node));
					n->replace = true;
					n->options = (yyvsp[(11) - (14)].list);
					n->withCheckOption = (yyvsp[(14) - (14)].viewcheckoption);
					if (n->withCheckOption != PG_NO_CHECK_OPTION)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[(14) - (14)]))));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1166:
#line 74 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; ;}
    break;

  case 1167:
#line 75 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; ;}
    break;

  case 1168:
#line 76 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = PG_LOCAL_CHECK_OPTION; ;}
    break;

  case 1169:
#line 77 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = PG_NO_CHECK_OPTION; ;}
    break;

  case 1170:
#line 12 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(6) - (7)].node);
					ctas->into = (yyvsp[(4) - (7)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = false;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(4) - (7)].into)->rel->relpersistence = (yyvsp[(2) - (7)].ival);
					(yyvsp[(4) - (7)].into)->skipData = !((yyvsp[(7) - (7)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1171:
#line 25 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(9) - (10)].node);
					ctas->into = (yyvsp[(7) - (10)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = true;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(7) - (10)].into)->rel->relpersistence = (yyvsp[(2) - (10)].ival);
					(yyvsp[(7) - (10)].into)->skipData = !((yyvsp[(10) - (10)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1172:
#line 41 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1173:
#line 42 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1174:
#line 43 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1175:
#line 49 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					(yyval.into) = makeNode(PGIntoClause);
					(yyval.into)->rel = (yyvsp[(1) - (4)].range);
					(yyval.into)->colNames = (yyvsp[(2) - (4)].list);
					(yyval.into)->options = (yyvsp[(3) - (4)].list);
					(yyval.into)->onCommit = (yyvsp[(4) - (4)].oncommit);
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;		/* might get changed later */
				;}
    break;


/* Line 1267 of yacc.c.  */
#line 22865 "third_party/libpg_query/grammar/grammar_out.cpp"
      default: break;
    }
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;
  *++yylsp = yyloc;

  /* Now `shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*------------------------------------.
| yyerrlab -- here on detecting error |
`------------------------------------*/
yyerrlab:
  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (&yylloc, yyscanner, YY_("syntax error"));
#else
      {
	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
	  {
	    YYSIZE_T yyalloc = 2 * yysize;
	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
	    if (yymsg != yymsgbuf)
	      YYSTACK_FREE (yymsg);
	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
	    if (yymsg)
	      yymsg_alloc = yyalloc;
	    else
	      {
		yymsg = yymsgbuf;
		yymsg_alloc = sizeof yymsgbuf;
	      }
	  }

	if (0 < yysize && yysize <= yymsg_alloc)
	  {
	    (void) yysyntax_error (yymsg, yystate, yychar);
	    yyerror (&yylloc, yyscanner, yymsg);
	  }
	else
	  {
	    yyerror (&yylloc, yyscanner, YY_("syntax error"));
	    if (yysize != 0)
	      goto yyexhaustedlab;
	  }
      }
#endif
    }

  yyerror_range[0] = yylloc;

  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse look-ahead token after an
	 error, discard it.  */

      if (yychar <= YYEOF)
	{
	  /* Return failure if at end of input.  */
	  if (yychar == YYEOF)
	    YYABORT;
	}
      else
	{
	  yydestruct ("Error: discarding",
		      yytoken, &yylval, &yylloc, yyscanner);
	  yychar = YYEMPTY;
	}
    }

  /* Else will try to reuse look-ahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  yyerror_range[0] = yylsp[1-yylen];
  /* Do not reclaim the symbols of the rule which action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;	/* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (yyn != YYPACT_NINF)
	{
	  yyn += YYTERROR;
	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
	    {
	      yyn = yytable[yyn];
	      if (0 < yyn)
		break;
	    }
	}

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
	YYABORT;

      yyerror_range[0] = *yylsp;
      yydestruct ("Error: popping",
		  yystos[yystate], yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  *++yyvsp = yylval;

  yyerror_range[1] = yylloc;
  /* Using YYLLOC is tempting, but would change the location of
     the look-ahead.  YYLOC is available though.  */
  YYLLOC_DEFAULT (yyloc, (yyerror_range - 1), 2);
  *++yylsp = yyloc;

  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#ifndef yyoverflow
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (&yylloc, yyscanner, YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEOF && yychar != YYEMPTY)
     yydestruct ("Cleanup: discarding lookahead",
		 yytoken, &yylval, &yylloc, yyscanner);
  /* Do not reclaim the symbols of the rule which action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
		  yystos[*yyssp], yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  /* Make sure YYID is used.  */
  return YYID (yyresult);
}


#line 67 "third_party/libpg_query/grammar/statements/create_as.y"


#line 1 "third_party/libpg_query/grammar/grammar.cpp"
/*
 * The signature of this function is required by bison.  However, we
 * ignore the passed yylloc and instead use the last token position
 * available from the scanner.
 */
static void
base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner, const char *msg)
{
	parser_yyerror(msg);
}

static PGRawStmt *
makeRawStmt(PGNode *stmt, int stmt_location)
{
	PGRawStmt    *rs = makeNode(PGRawStmt);

	rs->stmt = stmt;
	rs->stmt_location = stmt_location;
	rs->stmt_len = 0;			/* might get changed later */
	return rs;
}

/* Adjust a PGRawStmt to reflect that it doesn't run to the end of the string */
static void
updateRawStmtEnd(PGRawStmt *rs, int end_location)
{
	/*
	 * If we already set the length, don't change it.  This is for situations
	 * like "select foo ;; select bar" where the same statement will be last
	 * in the string for more than one semicolon.
	 */
	if (rs->stmt_len > 0)
		return;

	/* OK, update length of PGRawStmt */
	rs->stmt_len = end_location - rs->stmt_location;
}

static PGNode *
makeColumnRef(char *colname, PGList *indirection,
			  int location, core_yyscan_t yyscanner)
{
	/*
	 * Generate a PGColumnRef node, with an PGAIndirection node added if there
	 * is any subscripting in the specified indirection list.  However,
	 * any field selection at the start of the indirection list must be
	 * transposed into the "fields" part of the PGColumnRef node.
	 */
	PGColumnRef  *c = makeNode(PGColumnRef);
	int		nfields = 0;
	PGListCell *l;

	c->location = location;
	foreach(l, indirection)
	{
		if (IsA(lfirst(l), PGAIndices))
		{
			PGAIndirection *i = makeNode(PGAIndirection);

			if (nfields == 0)
			{
				/* easy case - all indirection goes to PGAIndirection */
				c->fields = list_make1(makeString(colname));
				i->indirection = check_indirection(indirection, yyscanner);
			}
			else
			{
				/* got to split the list in two */
				i->indirection = check_indirection(list_copy_tail(indirection,
																  nfields),
												   yyscanner);
				indirection = list_truncate(indirection, nfields);
				c->fields = lcons(makeString(colname), indirection);
			}
			i->arg = (PGNode *) c;
			return (PGNode *) i;
		}
		else if (IsA(lfirst(l), PGAStar))
		{
			/* We only allow '*' at the end of a PGColumnRef */
			if (lnext(l) != NULL)
				parser_yyerror("improper use of \"*\"");
		}
		nfields++;
	}
	/* No subscripting, so all indirection gets added to field list */
	c->fields = lcons(makeString(colname), indirection);
	return (PGNode *) c;
}

static PGNode *
makeTypeCast(PGNode *arg, PGTypeName *tpname, int location)
{
	PGTypeCast *n = makeNode(PGTypeCast);
	n->arg = arg;
	n->typeName = tpname;
	n->location = location;
	return (PGNode *) n;
}

static PGNode *
makeStringConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGString;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeStringConstCast(char *str, int location, PGTypeName *tpname)
{
	PGNode *s = makeStringConst(str, location);

	return makeTypeCast(s, tpname, -1);
}

static PGNode *
makeIntervalNode(char *str, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGString;
	n->sval = str;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;

}

static PGNode *
makeIntervalNode(int val, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGInteger;
	n->ival = val;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;
}

static PGNode *
makeIntervalNode(PGNode *arg, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGAExpr;
	n->eval = arg;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;
}

static PGNode *
makeSampleSize(PGValue *sample_size, bool is_percentage) {
	PGSampleSize *n = makeNode(PGSampleSize);

	n->sample_size = *sample_size;
	n->is_percentage = is_percentage;

	return (PGNode *)n;
}

static PGNode *
makeSampleOptions(PGNode *sample_size, char *method, int seed, int location) {
	PGSampleOptions *n = makeNode(PGSampleOptions);

	n->sample_size = sample_size;
	n->method = method;
	n->seed = seed;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeIntConst(int val, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGInteger;
	n->val.val.ival = val;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeFloatConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGFloat;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeBitStringConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGBitString;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeNullAConst(int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGNull;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeAConst(PGValue *v, int location)
{
	PGNode *n;

	switch (v->type)
	{
		case T_PGFloat:
			n = makeFloatConst(v->val.str, location);
			break;

		case T_PGInteger:
			n = makeIntConst(v->val.ival, location);
			break;

		case T_PGString:
		default:
			n = makeStringConst(v->val.str, location);
			break;
	}

	return n;
}

/* makeBoolAConst()
 * Create an PGAConst string node and put it inside a boolean cast.
 */
static PGNode *
makeBoolAConst(bool state, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGString;
	n->val.val.str = (state ? (char*) "t" : (char*) "f");
	n->location = location;

	return makeTypeCast((PGNode *)n, SystemTypeName("bool"), -1);
}

/* check_qualified_name --- check the result of qualified_name production
 *
 * It's easiest to let the grammar production for qualified_name allow
 * subscripts and '*', which we then must reject here.
 */
static void
check_qualified_name(PGList *names, core_yyscan_t yyscanner)
{
	PGListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), PGString))
			parser_yyerror("syntax error");
	}
}

/* check_func_name --- check the result of func_name production
 *
 * It's easiest to let the grammar production for func_name allow subscripts
 * and '*', which we then must reject here.
 */
static PGList *
check_func_name(PGList *names, core_yyscan_t yyscanner)
{
	PGListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), PGString))
			parser_yyerror("syntax error");
	}
	return names;
}

/* check_indirection --- check the result of indirection production
 *
 * We only allow '*' at the end of the list, but it's hard to enforce that
 * in the grammar, so do it here.
 */
static PGList *
check_indirection(PGList *indirection, core_yyscan_t yyscanner)
{
	PGListCell *l;

	foreach(l, indirection)
	{
		if (IsA(lfirst(l), PGAStar))
		{
			if (lnext(l) != NULL)
				parser_yyerror("improper use of \"*\"");
		}
	}
	return indirection;
}

/* makeParamRef
 * Creates a new PGParamRef node
 */
static PGNode* makeParamRef(int number, int location)
{
	PGParamRef *p = makeNode(PGParamRef);
	p->number = number;
	p->location = location;
	return (PGNode *) p;
}

static PGNode *
makeParamRefCast(int number, int location, PGTypeName *tpname)
{
	PGNode *p = makeParamRef(number, location);
	return makeTypeCast(p, tpname, -1);
}

/* insertSelectOptions()
 * Insert ORDER BY, etc into an already-constructed SelectStmt.
 *
 * This routine is just to avoid duplicating code in PGSelectStmt productions.
 */
static void
insertSelectOptions(PGSelectStmt *stmt,
					PGList *sortClause, PGList *lockingClause,
					PGNode *limitOffset, PGNode *limitCount,
					PGWithClause *withClause,
					core_yyscan_t yyscanner)
{
	Assert(IsA(stmt, PGSelectStmt));

	/*
	 * Tests here are to reject constructs like
	 *	(SELECT foo ORDER BY bar) ORDER BY baz
	 */
	if (sortClause)
	{
		if (stmt->sortClause)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple ORDER BY clauses not allowed"),
					 parser_errposition(exprLocation((PGNode *) sortClause))));
		stmt->sortClause = sortClause;
	}
	/* We can handle multiple locking clauses, though */
	stmt->lockingClause = list_concat(stmt->lockingClause, lockingClause);
	if (limitOffset)
	{
		if (stmt->limitOffset)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple OFFSET clauses not allowed"),
					 parser_errposition(exprLocation(limitOffset))));
		stmt->limitOffset = limitOffset;
	}
	if (limitCount)
	{
		if (stmt->limitCount)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple LIMIT clauses not allowed"),
					 parser_errposition(exprLocation(limitCount))));
		stmt->limitCount = limitCount;
	}
	if (withClause)
	{
		if (stmt->withClause)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple WITH clauses not allowed"),
					 parser_errposition(exprLocation((PGNode *) withClause))));
		stmt->withClause = withClause;
	}
}

static PGNode *
makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg)
{
	PGSelectStmt *n = makeNode(PGSelectStmt);

	n->op = op;
	n->all = all;
	n->larg = (PGSelectStmt *) larg;
	n->rarg = (PGSelectStmt *) rarg;
	return (PGNode *) n;
}

/* SystemFuncName()
 * Build a properly-qualified reference to a built-in function.
 */
PGList *
SystemFuncName(const char *name)
{
	return list_make2(makeString(DEFAULT_SCHEMA), makeString(name));
}

/* SystemTypeName()
 * Build a properly-qualified reference to a built-in type.
 *
 * typmod is defaulted, but may be changed afterwards by caller.
 * Likewise for the location.
 */
PGTypeName *
SystemTypeName(const char *name)
{
	return makeTypeNameFromNameList(list_make2(makeString(DEFAULT_SCHEMA),
											   makeString(name)));
}

/* doNegate()
 * Handle negation of a numeric constant.
 *
 * Formerly, we did this here because the optimizer couldn't cope with
 * indexquals that looked like "var = -4" --- it wants "var = const"
 * and a unary minus operator applied to a constant didn't qualify.
 * As of Postgres 7.0, that problem doesn't exist anymore because there
 * is a constant-subexpression simplifier in the optimizer.  However,
 * there's still a good reason for doing this here, which is that we can
 * postpone committing to a particular internal representation for simple
 * negative constants.	It's better to leave "-123.456" in string form
 * until we know what the desired type is.
 */
static PGNode *
doNegate(PGNode *n, int location)
{
	if (IsA(n, PGAConst))
	{
		PGAConst *con = (PGAConst *)n;

		/* report the constant's location as that of the '-' sign */
		con->location = location;

		if (con->val.type == T_PGInteger)
		{
			con->val.val.ival = -con->val.val.ival;
			return n;
		}
		if (con->val.type == T_PGFloat)
		{
			doNegateFloat(&con->val);
			return n;
		}
	}

	return (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", NULL, n, location);
}

static void
doNegateFloat(PGValue *v)
{
	char   *oldval = v->val.str;

	Assert(IsA(v, PGFloat));
	if (*oldval == '+')
		oldval++;
	if (*oldval == '-')
		v->val.str = oldval+1;	/* just strip the '-' */
	else
		v->val.str = psprintf("-%s", oldval);
}

static PGNode *
makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location)
{
	PGNode	   *lexp = lexpr;

	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
	while (IsA(lexp, PGAExpr) &&
		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
		lexp = ((PGAExpr *) lexp)->lexpr;
	/* Flatten "a AND b AND c ..." to a single PGBoolExpr on sight */
	if (IsA(lexp, PGBoolExpr))
	{
		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;

		if (blexpr->boolop == PG_AND_EXPR)
		{
			blexpr->args = lappend(blexpr->args, rexpr);
			return (PGNode *) blexpr;
		}
	}
	return (PGNode *) makeBoolExpr(PG_AND_EXPR, list_make2(lexpr, rexpr), location);
}

static PGNode *
makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location)
{
	PGNode	   *lexp = lexpr;

	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
	while (IsA(lexp, PGAExpr) &&
		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
		lexp = ((PGAExpr *) lexp)->lexpr;
	/* Flatten "a OR b OR c ..." to a single PGBoolExpr on sight */
	if (IsA(lexp, PGBoolExpr))
	{
		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;

		if (blexpr->boolop == PG_OR_EXPR)
		{
			blexpr->args = lappend(blexpr->args, rexpr);
			return (PGNode *) blexpr;
		}
	}
	return (PGNode *) makeBoolExpr(PG_OR_EXPR, list_make2(lexpr, rexpr), location);
}

static PGNode *
makeNotExpr(PGNode *expr, int location)
{
	return (PGNode *) makeBoolExpr(PG_NOT_EXPR, list_make1(expr), location);
}

static PGNode *
makeSQLValueFunction(PGSQLValueFunctionOp op, int32_t typmod, int location)
{
	PGSQLValueFunction *svf = makeNode(PGSQLValueFunction);

	svf->op = op;
	/* svf->type will be filled during parse analysis */
	svf->typmod = typmod;
	svf->location = location;
	return (PGNode *) svf;
}

/* Separate PGConstraint nodes from COLLATE clauses in a */
static void
SplitColQualList(PGList *qualList,
				 PGList **constraintList, PGCollateClause **collClause,
				 core_yyscan_t yyscanner)
{
	PGListCell   *cell;
	PGListCell   *prev;
	PGListCell   *next;

	*collClause = NULL;
	prev = NULL;
	for (cell = list_head(qualList); cell; cell = next)
	{
		PGNode   *n = (PGNode *) lfirst(cell);

		next = lnext(cell);
		if (IsA(n, PGConstraint))
		{
			/* keep it in list */
			prev = cell;
			continue;
		}
		if (IsA(n, PGCollateClause))
		{
			PGCollateClause *c = (PGCollateClause *) n;

			if (*collClause)
				ereport(ERROR,
						(errcode(PG_ERRCODE_SYNTAX_ERROR),
						 errmsg("multiple COLLATE clauses not allowed"),
						 parser_errposition(c->location)));
			*collClause = c;
		}
		else
			elog(ERROR, "unexpected node type %d", (int) n->type);
		/* remove non-Constraint nodes from qualList */
		qualList = list_delete_cell(qualList, cell, prev);
	}
	*constraintList = qualList;
}

/*
 * Process result of ConstraintAttributeSpec, and set appropriate bool flags
 * in the output command node.  Pass NULL for any flags the particular
 * command doesn't support.
 */
static void
processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner)
{
	/* defaults */
	if (deferrable)
		*deferrable = false;
	if (initdeferred)
		*initdeferred = false;
	if (not_valid)
		*not_valid = false;

	if (cas_bits & (CAS_DEFERRABLE | CAS_INITIALLY_DEFERRED))
	{
		if (deferrable)
			*deferrable = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_INITIALLY_DEFERRED)
	{
		if (initdeferred)
			*initdeferred = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_NOT_VALID)
	{
		if (not_valid)
			*not_valid = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NOT VALID",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_NO_INHERIT)
	{
		if (no_inherit)
			*no_inherit = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NO INHERIT",
							constrType),
					 parser_errposition(location)));
	}
}

/*----------
 * Recursive view transformation
 *
 * Convert
 *
 *     CREATE RECURSIVE VIEW relname (aliases) AS query
 *
 * to
 *
 *     CREATE VIEW relname (aliases) AS
 *         WITH RECURSIVE relname (aliases) AS (query)
 *         SELECT aliases FROM relname
 *
 * Actually, just the WITH ... part, which is then inserted into the original
 * view as the query.
 * ----------
 */
static PGNode *
makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query)
{
	PGSelectStmt *s = makeNode(PGSelectStmt);
	PGWithClause *w = makeNode(PGWithClause);
	PGCommonTableExpr *cte = makeNode(PGCommonTableExpr);
	PGList	   *tl = NIL;
	PGListCell   *lc;

	/* create common table expression */
	cte->ctename = relname;
	cte->aliascolnames = aliases;
	cte->ctequery = query;
	cte->location = -1;

	/* create WITH clause and attach CTE */
	w->recursive = true;
	w->ctes = list_make1(cte);
	w->location = -1;

	/* create target list for the new SELECT from the alias list of the
	 * recursive view specification */
	foreach (lc, aliases)
	{
		PGResTarget *rt = makeNode(PGResTarget);

		rt->name = NULL;
		rt->indirection = NIL;
		rt->val = makeColumnRef(strVal(lfirst(lc)), NIL, -1, 0);
		rt->location = -1;

		tl = lappend(tl, rt);
	}

	/* create new SELECT combining WITH clause, target list, and fake FROM
	 * clause */
	s->withClause = w;
	s->targetList = tl;
	s->fromClause = list_make1(makeRangeVar(NULL, relname, -1));

	return (PGNode *) s;
}

/* parser_init()
 * Initialize to parse one query string
 */
void
parser_init(base_yy_extra_type *yyext)
{
	yyext->parsetree = NIL;		/* in case grammar forgets to set it */
}

#undef yyparse
#undef yylex
#undef yyerror
#undef yylval
#undef yychar
#undef yydebug
#undef yynerrs
#undef yylloc

} // namespace duckdb_libpgquery
