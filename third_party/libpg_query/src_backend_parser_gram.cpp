/* A Bison parser, made by GNU Bison 2.3.  */

/* Skeleton implementation for Bison's Yacc-like parsers in C

   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
   Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street, Fifth Floor,
   Boston, MA 02110-1301, USA.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "2.3"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Using locations.  */
#define YYLSP_NEEDED 1

/* Substitute the variable and function names.  */
#define yyparse base_yyparse
#define yylex   base_yylex
#define yyerror base_yyerror
#define yylval  base_yylval
#define yychar  base_yychar
#define yydebug base_yydebug
#define yynerrs base_yynerrs
#define yylloc base_yylloc

/* Tokens.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
   /* Put the tokens into the symbol table, so that GDB and other debuggers
      know about them.  */
   enum yytokentype {
     IDENT = 258,
     FCONST = 259,
     SCONST = 260,
     BCONST = 261,
     XCONST = 262,
     Op = 263,
     ICONST = 264,
     PARAM = 265,
     TYPECAST = 266,
     DOT_DOT = 267,
     COLON_EQUALS = 268,
     EQUALS_GREATER = 269,
     LAMBDA_ARROW = 270,
     LESS_EQUALS = 271,
     GREATER_EQUALS = 272,
     NOT_EQUALS = 273,
     ABORT_P = 274,
     ABSOLUTE_P = 275,
     ACCESS = 276,
     ACTION = 277,
     ADD_P = 278,
     ADMIN = 279,
     AFTER = 280,
     AGGREGATE = 281,
     ALL = 282,
     ALSO = 283,
     ALTER = 284,
     ALWAYS = 285,
     ANALYSE = 286,
     ANALYZE = 287,
     AND = 288,
     ANY = 289,
     ARRAY = 290,
     AS = 291,
     ASC_P = 292,
     ASSERTION = 293,
     ASSIGNMENT = 294,
     ASYMMETRIC = 295,
     AT = 296,
     ATTACH = 297,
     ATTRIBUTE = 298,
     AUTHORIZATION = 299,
     BACKWARD = 300,
     BEFORE = 301,
     BEGIN_P = 302,
     BETWEEN = 303,
     BIGINT = 304,
     BINARY = 305,
     BIT = 306,
     BOOLEAN_P = 307,
     BOTH = 308,
     BY = 309,
     CACHE = 310,
     CALL_P = 311,
     CALLED = 312,
     CASCADE = 313,
     CASCADED = 314,
     CASE = 315,
     CAST = 316,
     CATALOG_P = 317,
     CHAIN = 318,
     CHAR_P = 319,
     CHARACTER = 320,
     CHARACTERISTICS = 321,
     CHECK_P = 322,
     CHECKPOINT = 323,
     CLASS = 324,
     CLOSE = 325,
     CLUSTER = 326,
     COALESCE = 327,
     COLLATE = 328,
     COLLATION = 329,
     COLUMN = 330,
     COLUMNS = 331,
     COMMENT = 332,
     COMMENTS = 333,
     COMMIT = 334,
     COMMITTED = 335,
     COMPRESSION = 336,
     CONCURRENTLY = 337,
     CONFIGURATION = 338,
     CONFLICT = 339,
     CONNECTION = 340,
     CONSTRAINT = 341,
     CONSTRAINTS = 342,
     CONTENT_P = 343,
     CONTINUE_P = 344,
     CONVERSION_P = 345,
     COPY = 346,
     COST = 347,
     CREATE_P = 348,
     CROSS = 349,
     CSV = 350,
     CUBE = 351,
     CURRENT_P = 352,
     CURRENT_CATALOG = 353,
     CURRENT_DATE = 354,
     CURRENT_ROLE = 355,
     CURRENT_SCHEMA = 356,
     CURRENT_TIME = 357,
     CURRENT_TIMESTAMP = 358,
     CURRENT_USER = 359,
     CURSOR = 360,
     CYCLE = 361,
     DATA_P = 362,
     DATABASE = 363,
     DAY_P = 364,
     DAYS_P = 365,
     DEALLOCATE = 366,
     DEC = 367,
     DECIMAL_P = 368,
     DECLARE = 369,
     DEFAULT = 370,
     DEFAULTS = 371,
     DEFERRABLE = 372,
     DEFERRED = 373,
     DEFINER = 374,
     DELETE_P = 375,
     DELIMITER = 376,
     DELIMITERS = 377,
     DEPENDS = 378,
     DESC_P = 379,
     DESCRIBE = 380,
     DETACH = 381,
     DICTIONARY = 382,
     DISABLE_P = 383,
     DISCARD = 384,
     DISTINCT = 385,
     DO = 386,
     DOCUMENT_P = 387,
     DOMAIN_P = 388,
     DOUBLE_P = 389,
     DROP = 390,
     EACH = 391,
     ELSE = 392,
     ENABLE_P = 393,
     ENCODING = 394,
     ENCRYPTED = 395,
     END_P = 396,
     ENUM_P = 397,
     ESCAPE = 398,
     EVENT = 399,
     EXCEPT = 400,
     EXCLUDE = 401,
     EXCLUDING = 402,
     EXCLUSIVE = 403,
     EXECUTE = 404,
     EXISTS = 405,
     EXPLAIN = 406,
     EXPORT_P = 407,
     EXPORT_STATE = 408,
     EXTENSION = 409,
     EXTERNAL = 410,
     EXTRACT = 411,
     FALSE_P = 412,
     FAMILY = 413,
     FETCH = 414,
     FILTER = 415,
     FIRST_P = 416,
     FLOAT_P = 417,
     FOLLOWING = 418,
     FOR = 419,
     FORCE = 420,
     FOREIGN = 421,
     FORWARD = 422,
     FREEZE = 423,
     FROM = 424,
     FULL = 425,
     FUNCTION = 426,
     FUNCTIONS = 427,
     GENERATED = 428,
     GLOB = 429,
     GLOBAL = 430,
     GRANT = 431,
     GRANTED = 432,
     GROUP_P = 433,
     GROUPING = 434,
     GROUPING_ID = 435,
     HANDLER = 436,
     HAVING = 437,
     HEADER_P = 438,
     HOLD = 439,
     HOUR_P = 440,
     HOURS_P = 441,
     IDENTITY_P = 442,
     IF_P = 443,
     IGNORE_P = 444,
     ILIKE = 445,
     IMMEDIATE = 446,
     IMMUTABLE = 447,
     IMPLICIT_P = 448,
     IMPORT_P = 449,
     IN_P = 450,
     INCLUDING = 451,
     INCREMENT = 452,
     INDEX = 453,
     INDEXES = 454,
     INHERIT = 455,
     INHERITS = 456,
     INITIALLY = 457,
     INLINE_P = 458,
     INNER_P = 459,
     INOUT = 460,
     INPUT_P = 461,
     INSENSITIVE = 462,
     INSERT = 463,
     INSTALL = 464,
     INSTEAD = 465,
     INT_P = 466,
     INTEGER = 467,
     INTERSECT = 468,
     INTERVAL = 469,
     INTO = 470,
     INVOKER = 471,
     IS = 472,
     ISNULL = 473,
     ISOLATION = 474,
     JOIN = 475,
     JSON = 476,
     KEY = 477,
     LABEL = 478,
     LANGUAGE = 479,
     LARGE_P = 480,
     LAST_P = 481,
     LATERAL_P = 482,
     LEADING = 483,
     LEAKPROOF = 484,
     LEFT = 485,
     LEVEL = 486,
     LIKE = 487,
     LIMIT = 488,
     LISTEN = 489,
     LOAD = 490,
     LOCAL = 491,
     LOCALTIME = 492,
     LOCALTIMESTAMP = 493,
     LOCATION = 494,
     LOCK_P = 495,
     LOCKED = 496,
     LOGGED = 497,
     MACRO = 498,
     MAP = 499,
     MAPPING = 500,
     MATCH = 501,
     MATERIALIZED = 502,
     MAXVALUE = 503,
     METHOD = 504,
     MICROSECOND_P = 505,
     MICROSECONDS_P = 506,
     MILLISECOND_P = 507,
     MILLISECONDS_P = 508,
     MINUTE_P = 509,
     MINUTES_P = 510,
     MINVALUE = 511,
     MODE = 512,
     MONTH_P = 513,
     MONTHS_P = 514,
     MOVE = 515,
     NAME_P = 516,
     NAMES = 517,
     NATIONAL = 518,
     NATURAL = 519,
     NCHAR = 520,
     NEW = 521,
     NEXT = 522,
     NO = 523,
     NONE = 524,
     NOT = 525,
     NOTHING = 526,
     NOTIFY = 527,
     NOTNULL = 528,
     NOWAIT = 529,
     NULL_P = 530,
     NULLIF = 531,
     NULLS_P = 532,
     NUMERIC = 533,
     OBJECT_P = 534,
     OF = 535,
     OFF = 536,
     OFFSET = 537,
     OIDS = 538,
     OLD = 539,
     ON = 540,
     ONLY = 541,
     OPERATOR = 542,
     OPTION = 543,
     OPTIONS = 544,
     OR = 545,
     ORDER = 546,
     ORDINALITY = 547,
     OUT_P = 548,
     OUTER_P = 549,
     OVER = 550,
     OVERLAPS = 551,
     OVERLAY = 552,
     OVERRIDING = 553,
     OWNED = 554,
     OWNER = 555,
     PARALLEL = 556,
     PARSER = 557,
     PARTIAL = 558,
     PARTITION = 559,
     PASSING = 560,
     PASSWORD = 561,
     PERCENT = 562,
     PLACING = 563,
     PLANS = 564,
     POLICY = 565,
     POSITION = 566,
     PRAGMA_P = 567,
     PRECEDING = 568,
     PRECISION = 569,
     PREPARE = 570,
     PREPARED = 571,
     PRESERVE = 572,
     PRIMARY = 573,
     PRIOR = 574,
     PRIVILEGES = 575,
     PROCEDURAL = 576,
     PROCEDURE = 577,
     PROGRAM = 578,
     PUBLICATION = 579,
     QUALIFY = 580,
     QUOTE = 581,
     RANGE = 582,
     READ_P = 583,
     REAL = 584,
     REASSIGN = 585,
     RECHECK = 586,
     RECURSIVE = 587,
     REF = 588,
     REFERENCES = 589,
     REFERENCING = 590,
     REFRESH = 591,
     REINDEX = 592,
     RELATIVE_P = 593,
     RELEASE = 594,
     RENAME = 595,
     REPEATABLE = 596,
     REPLACE = 597,
     REPLICA = 598,
     RESET = 599,
     RESPECT_P = 600,
     RESTART = 601,
     RESTRICT = 602,
     RETURNING = 603,
     RETURNS = 604,
     REVOKE = 605,
     RIGHT = 606,
     ROLE = 607,
     ROLLBACK = 608,
     ROLLUP = 609,
     ROW = 610,
     ROWS = 611,
     RULE = 612,
     SAMPLE = 613,
     SAVEPOINT = 614,
     SCHEMA = 615,
     SCHEMAS = 616,
     SCROLL = 617,
     SEARCH = 618,
     SECOND_P = 619,
     SECONDS_P = 620,
     SECURITY = 621,
     SELECT = 622,
     SEQUENCE = 623,
     SEQUENCES = 624,
     SERIALIZABLE = 625,
     SERVER = 626,
     SESSION = 627,
     SESSION_USER = 628,
     SET = 629,
     SETOF = 630,
     SETS = 631,
     SHARE = 632,
     SHOW = 633,
     SIMILAR = 634,
     SIMPLE = 635,
     SKIP = 636,
     SMALLINT = 637,
     SNAPSHOT = 638,
     SOME = 639,
     SQL_P = 640,
     STABLE = 641,
     STANDALONE_P = 642,
     START = 643,
     STATEMENT = 644,
     STATISTICS = 645,
     STDIN = 646,
     STDOUT = 647,
     STORAGE = 648,
     STRICT_P = 649,
     STRIP_P = 650,
     STRUCT = 651,
     SUBSCRIPTION = 652,
     SUBSTRING = 653,
     SUMMARIZE = 654,
     SYMMETRIC = 655,
     SYSID = 656,
     SYSTEM_P = 657,
     TABLE = 658,
     TABLES = 659,
     TABLESAMPLE = 660,
     TABLESPACE = 661,
     TEMP = 662,
     TEMPLATE = 663,
     TEMPORARY = 664,
     TEXT_P = 665,
     THEN = 666,
     TIME = 667,
     TIMESTAMP = 668,
     TO = 669,
     TRAILING = 670,
     TRANSACTION = 671,
     TRANSFORM = 672,
     TREAT = 673,
     TRIGGER = 674,
     TRIM = 675,
     TRUE_P = 676,
     TRUNCATE = 677,
     TRUSTED = 678,
     TRY_CAST = 679,
     TYPE_P = 680,
     TYPES_P = 681,
     UNBOUNDED = 682,
     UNCOMMITTED = 683,
     UNENCRYPTED = 684,
     UNION = 685,
     UNIQUE = 686,
     UNKNOWN = 687,
     UNLISTEN = 688,
     UNLOGGED = 689,
     UNTIL = 690,
     UPDATE = 691,
     USER = 692,
     USING = 693,
     VACUUM = 694,
     VALID = 695,
     VALIDATE = 696,
     VALIDATOR = 697,
     VALUE_P = 698,
     VALUES = 699,
     VARCHAR = 700,
     VARIADIC = 701,
     VARYING = 702,
     VERBOSE = 703,
     VERSION_P = 704,
     VIEW = 705,
     VIEWS = 706,
     VOLATILE = 707,
     WHEN = 708,
     WHERE = 709,
     WHITESPACE_P = 710,
     WINDOW = 711,
     WITH = 712,
     WITHIN = 713,
     WITHOUT = 714,
     WORK = 715,
     WRAPPER = 716,
     WRITE_P = 717,
     XML_P = 718,
     XMLATTRIBUTES = 719,
     XMLCONCAT = 720,
     XMLELEMENT = 721,
     XMLEXISTS = 722,
     XMLFOREST = 723,
     XMLNAMESPACES = 724,
     XMLPARSE = 725,
     XMLPI = 726,
     XMLROOT = 727,
     XMLSERIALIZE = 728,
     XMLTABLE = 729,
     YEAR_P = 730,
     YEARS_P = 731,
     YES_P = 732,
     ZONE = 733,
     NOT_LA = 734,
     NULLS_LA = 735,
     WITH_LA = 736,
     POSTFIXOP = 737,
     UMINUS = 738
   };
#endif
/* Tokens.  */
#define IDENT 258
#define FCONST 259
#define SCONST 260
#define BCONST 261
#define XCONST 262
#define Op 263
#define ICONST 264
#define PARAM 265
#define TYPECAST 266
#define DOT_DOT 267
#define COLON_EQUALS 268
#define EQUALS_GREATER 269
#define LAMBDA_ARROW 270
#define LESS_EQUALS 271
#define GREATER_EQUALS 272
#define NOT_EQUALS 273
#define ABORT_P 274
#define ABSOLUTE_P 275
#define ACCESS 276
#define ACTION 277
#define ADD_P 278
#define ADMIN 279
#define AFTER 280
#define AGGREGATE 281
#define ALL 282
#define ALSO 283
#define ALTER 284
#define ALWAYS 285
#define ANALYSE 286
#define ANALYZE 287
#define AND 288
#define ANY 289
#define ARRAY 290
#define AS 291
#define ASC_P 292
#define ASSERTION 293
#define ASSIGNMENT 294
#define ASYMMETRIC 295
#define AT 296
#define ATTACH 297
#define ATTRIBUTE 298
#define AUTHORIZATION 299
#define BACKWARD 300
#define BEFORE 301
#define BEGIN_P 302
#define BETWEEN 303
#define BIGINT 304
#define BINARY 305
#define BIT 306
#define BOOLEAN_P 307
#define BOTH 308
#define BY 309
#define CACHE 310
#define CALL_P 311
#define CALLED 312
#define CASCADE 313
#define CASCADED 314
#define CASE 315
#define CAST 316
#define CATALOG_P 317
#define CHAIN 318
#define CHAR_P 319
#define CHARACTER 320
#define CHARACTERISTICS 321
#define CHECK_P 322
#define CHECKPOINT 323
#define CLASS 324
#define CLOSE 325
#define CLUSTER 326
#define COALESCE 327
#define COLLATE 328
#define COLLATION 329
#define COLUMN 330
#define COLUMNS 331
#define COMMENT 332
#define COMMENTS 333
#define COMMIT 334
#define COMMITTED 335
#define COMPRESSION 336
#define CONCURRENTLY 337
#define CONFIGURATION 338
#define CONFLICT 339
#define CONNECTION 340
#define CONSTRAINT 341
#define CONSTRAINTS 342
#define CONTENT_P 343
#define CONTINUE_P 344
#define CONVERSION_P 345
#define COPY 346
#define COST 347
#define CREATE_P 348
#define CROSS 349
#define CSV 350
#define CUBE 351
#define CURRENT_P 352
#define CURRENT_CATALOG 353
#define CURRENT_DATE 354
#define CURRENT_ROLE 355
#define CURRENT_SCHEMA 356
#define CURRENT_TIME 357
#define CURRENT_TIMESTAMP 358
#define CURRENT_USER 359
#define CURSOR 360
#define CYCLE 361
#define DATA_P 362
#define DATABASE 363
#define DAY_P 364
#define DAYS_P 365
#define DEALLOCATE 366
#define DEC 367
#define DECIMAL_P 368
#define DECLARE 369
#define DEFAULT 370
#define DEFAULTS 371
#define DEFERRABLE 372
#define DEFERRED 373
#define DEFINER 374
#define DELETE_P 375
#define DELIMITER 376
#define DELIMITERS 377
#define DEPENDS 378
#define DESC_P 379
#define DESCRIBE 380
#define DETACH 381
#define DICTIONARY 382
#define DISABLE_P 383
#define DISCARD 384
#define DISTINCT 385
#define DO 386
#define DOCUMENT_P 387
#define DOMAIN_P 388
#define DOUBLE_P 389
#define DROP 390
#define EACH 391
#define ELSE 392
#define ENABLE_P 393
#define ENCODING 394
#define ENCRYPTED 395
#define END_P 396
#define ENUM_P 397
#define ESCAPE 398
#define EVENT 399
#define EXCEPT 400
#define EXCLUDE 401
#define EXCLUDING 402
#define EXCLUSIVE 403
#define EXECUTE 404
#define EXISTS 405
#define EXPLAIN 406
#define EXPORT_P 407
#define EXPORT_STATE 408
#define EXTENSION 409
#define EXTERNAL 410
#define EXTRACT 411
#define FALSE_P 412
#define FAMILY 413
#define FETCH 414
#define FILTER 415
#define FIRST_P 416
#define FLOAT_P 417
#define FOLLOWING 418
#define FOR 419
#define FORCE 420
#define FOREIGN 421
#define FORWARD 422
#define FREEZE 423
#define FROM 424
#define FULL 425
#define FUNCTION 426
#define FUNCTIONS 427
#define GENERATED 428
#define GLOB 429
#define GLOBAL 430
#define GRANT 431
#define GRANTED 432
#define GROUP_P 433
#define GROUPING 434
#define GROUPING_ID 435
#define HANDLER 436
#define HAVING 437
#define HEADER_P 438
#define HOLD 439
#define HOUR_P 440
#define HOURS_P 441
#define IDENTITY_P 442
#define IF_P 443
#define IGNORE_P 444
#define ILIKE 445
#define IMMEDIATE 446
#define IMMUTABLE 447
#define IMPLICIT_P 448
#define IMPORT_P 449
#define IN_P 450
#define INCLUDING 451
#define INCREMENT 452
#define INDEX 453
#define INDEXES 454
#define INHERIT 455
#define INHERITS 456
#define INITIALLY 457
#define INLINE_P 458
#define INNER_P 459
#define INOUT 460
#define INPUT_P 461
#define INSENSITIVE 462
#define INSERT 463
#define INSTALL 464
#define INSTEAD 465
#define INT_P 466
#define INTEGER 467
#define INTERSECT 468
#define INTERVAL 469
#define INTO 470
#define INVOKER 471
#define IS 472
#define ISNULL 473
#define ISOLATION 474
#define JOIN 475
#define JSON 476
#define KEY 477
#define LABEL 478
#define LANGUAGE 479
#define LARGE_P 480
#define LAST_P 481
#define LATERAL_P 482
#define LEADING 483
#define LEAKPROOF 484
#define LEFT 485
#define LEVEL 486
#define LIKE 487
#define LIMIT 488
#define LISTEN 489
#define LOAD 490
#define LOCAL 491
#define LOCALTIME 492
#define LOCALTIMESTAMP 493
#define LOCATION 494
#define LOCK_P 495
#define LOCKED 496
#define LOGGED 497
#define MACRO 498
#define MAP 499
#define MAPPING 500
#define MATCH 501
#define MATERIALIZED 502
#define MAXVALUE 503
#define METHOD 504
#define MICROSECOND_P 505
#define MICROSECONDS_P 506
#define MILLISECOND_P 507
#define MILLISECONDS_P 508
#define MINUTE_P 509
#define MINUTES_P 510
#define MINVALUE 511
#define MODE 512
#define MONTH_P 513
#define MONTHS_P 514
#define MOVE 515
#define NAME_P 516
#define NAMES 517
#define NATIONAL 518
#define NATURAL 519
#define NCHAR 520
#define NEW 521
#define NEXT 522
#define NO 523
#define NONE 524
#define NOT 525
#define NOTHING 526
#define NOTIFY 527
#define NOTNULL 528
#define NOWAIT 529
#define NULL_P 530
#define NULLIF 531
#define NULLS_P 532
#define NUMERIC 533
#define OBJECT_P 534
#define OF 535
#define OFF 536
#define OFFSET 537
#define OIDS 538
#define OLD 539
#define ON 540
#define ONLY 541
#define OPERATOR 542
#define OPTION 543
#define OPTIONS 544
#define OR 545
#define ORDER 546
#define ORDINALITY 547
#define OUT_P 548
#define OUTER_P 549
#define OVER 550
#define OVERLAPS 551
#define OVERLAY 552
#define OVERRIDING 553
#define OWNED 554
#define OWNER 555
#define PARALLEL 556
#define PARSER 557
#define PARTIAL 558
#define PARTITION 559
#define PASSING 560
#define PASSWORD 561
#define PERCENT 562
#define PLACING 563
#define PLANS 564
#define POLICY 565
#define POSITION 566
#define PRAGMA_P 567
#define PRECEDING 568
#define PRECISION 569
#define PREPARE 570
#define PREPARED 571
#define PRESERVE 572
#define PRIMARY 573
#define PRIOR 574
#define PRIVILEGES 575
#define PROCEDURAL 576
#define PROCEDURE 577
#define PROGRAM 578
#define PUBLICATION 579
#define QUALIFY 580
#define QUOTE 581
#define RANGE 582
#define READ_P 583
#define REAL 584
#define REASSIGN 585
#define RECHECK 586
#define RECURSIVE 587
#define REF 588
#define REFERENCES 589
#define REFERENCING 590
#define REFRESH 591
#define REINDEX 592
#define RELATIVE_P 593
#define RELEASE 594
#define RENAME 595
#define REPEATABLE 596
#define REPLACE 597
#define REPLICA 598
#define RESET 599
#define RESPECT_P 600
#define RESTART 601
#define RESTRICT 602
#define RETURNING 603
#define RETURNS 604
#define REVOKE 605
#define RIGHT 606
#define ROLE 607
#define ROLLBACK 608
#define ROLLUP 609
#define ROW 610
#define ROWS 611
#define RULE 612
#define SAMPLE 613
#define SAVEPOINT 614
#define SCHEMA 615
#define SCHEMAS 616
#define SCROLL 617
#define SEARCH 618
#define SECOND_P 619
#define SECONDS_P 620
#define SECURITY 621
#define SELECT 622
#define SEQUENCE 623
#define SEQUENCES 624
#define SERIALIZABLE 625
#define SERVER 626
#define SESSION 627
#define SESSION_USER 628
#define SET 629
#define SETOF 630
#define SETS 631
#define SHARE 632
#define SHOW 633
#define SIMILAR 634
#define SIMPLE 635
#define SKIP 636
#define SMALLINT 637
#define SNAPSHOT 638
#define SOME 639
#define SQL_P 640
#define STABLE 641
#define STANDALONE_P 642
#define START 643
#define STATEMENT 644
#define STATISTICS 645
#define STDIN 646
#define STDOUT 647
#define STORAGE 648
#define STRICT_P 649
#define STRIP_P 650
#define STRUCT 651
#define SUBSCRIPTION 652
#define SUBSTRING 653
#define SUMMARIZE 654
#define SYMMETRIC 655
#define SYSID 656
#define SYSTEM_P 657
#define TABLE 658
#define TABLES 659
#define TABLESAMPLE 660
#define TABLESPACE 661
#define TEMP 662
#define TEMPLATE 663
#define TEMPORARY 664
#define TEXT_P 665
#define THEN 666
#define TIME 667
#define TIMESTAMP 668
#define TO 669
#define TRAILING 670
#define TRANSACTION 671
#define TRANSFORM 672
#define TREAT 673
#define TRIGGER 674
#define TRIM 675
#define TRUE_P 676
#define TRUNCATE 677
#define TRUSTED 678
#define TRY_CAST 679
#define TYPE_P 680
#define TYPES_P 681
#define UNBOUNDED 682
#define UNCOMMITTED 683
#define UNENCRYPTED 684
#define UNION 685
#define UNIQUE 686
#define UNKNOWN 687
#define UNLISTEN 688
#define UNLOGGED 689
#define UNTIL 690
#define UPDATE 691
#define USER 692
#define USING 693
#define VACUUM 694
#define VALID 695
#define VALIDATE 696
#define VALIDATOR 697
#define VALUE_P 698
#define VALUES 699
#define VARCHAR 700
#define VARIADIC 701
#define VARYING 702
#define VERBOSE 703
#define VERSION_P 704
#define VIEW 705
#define VIEWS 706
#define VOLATILE 707
#define WHEN 708
#define WHERE 709
#define WHITESPACE_P 710
#define WINDOW 711
#define WITH 712
#define WITHIN 713
#define WITHOUT 714
#define WORK 715
#define WRAPPER 716
#define WRITE_P 717
#define XML_P 718
#define XMLATTRIBUTES 719
#define XMLCONCAT 720
#define XMLELEMENT 721
#define XMLEXISTS 722
#define XMLFOREST 723
#define XMLNAMESPACES 724
#define XMLPARSE 725
#define XMLPI 726
#define XMLROOT 727
#define XMLSERIALIZE 728
#define XMLTABLE 729
#define YEAR_P 730
#define YEARS_P 731
#define YES_P 732
#define ZONE 733
#define NOT_LA 734
#define NULLS_LA 735
#define WITH_LA 736
#define POSTFIXOP 737
#define UMINUS 738




/* Copy the first part of user declarations.  */
#line 1 "third_party/libpg_query/grammar/grammar.y.tmp"

#line 1 "third_party/libpg_query/grammar/grammar.hpp"
/*#define YYDEBUG 1*/
/*-------------------------------------------------------------------------
 *
 * gram.y
 *	  POSTGRESQL BISON rules/actions
 *
 * Portions Copyright (c) 1996-2017, PostgreSQL Global Development PGGroup
 * Portions Copyright (c) 1994, Regents of the University of California
 *
 *
 * IDENTIFICATION
 *	  src/backend/parser/gram.y
 *
 * HISTORY
 *	  AUTHOR			DATE			MAJOR EVENT
 *	  Andrew Yu			Sept, 1994		POSTQUEL to SQL conversion
 *	  Andrew Yu			Oct, 1994		lispy code conversion
 *
 * NOTES
 *	  CAPITALS are used to represent terminal symbols.
 *	  non-capitals are used to represent non-terminals.
 *
 *	  In general, nothing in this file should initiate database accesses
 *	  nor depend on changeable state (such as SET variables).  If you do
 *	  database accesses, your code will fail when we have aborted the
 *	  current transaction and are just parsing commands to find the next
 *	  ROLLBACK or COMMIT.  If you make use of SET variables, then you
 *	  will do the wrong thing in multi-query strings like this:
 *			SET constraint_exclusion TO off; SELECT * FROM foo;
 *	  because the entire string is parsed by gram.y before the SET gets
 *	  executed.  Anything that depends on the database or changeable state
 *	  should be handled during parse analysis so that it happens at the
 *	  right time not the wrong time.
 *
 * WARNINGS
 *	  If you use a list, make sure the datum is a node so that the printing
 *	  routines work.
 *
 *	  Sometimes we assign constants to makeStrings. Make sure we don't free
 *	  those.
 *
 *-------------------------------------------------------------------------
 */
#include "pg_functions.hpp"
#include <string.h>

#include <ctype.h>
#include <limits.h>

#include "nodes/makefuncs.hpp"
#include "nodes/nodeFuncs.hpp"
#include "parser/gramparse.hpp"
#include "parser/parser.hpp"
#include "utils/datetime.hpp"

namespace duckdb_libpgquery {
#define DEFAULT_SCHEMA "main"

/*
 * Location tracking support --- simpler than bison's default, since we only
 * want to track the start position not the end position of each nonterminal.
 */
#define YYLLOC_DEFAULT(Current, Rhs, N) \
	do { \
		if ((N) > 0) \
			(Current) = (Rhs)[1]; \
		else \
			(Current) = (-1); \
	} while (0)

/*
 * The above macro assigns -1 (unknown) as the parse location of any
 * nonterminal that was reduced from an empty rule, or whose leftmost
 * component was reduced from an empty rule.  This is problematic
 * for nonterminals defined like
 *		OptFooList: / * EMPTY * / { ... } | OptFooList Foo { ... } ;
 * because we'll set -1 as the location during the first reduction and then
 * copy it during each subsequent reduction, leaving us with -1 for the
 * location even when the list is not empty.  To fix that, do this in the
 * action for the nonempty rule(s):
 *		if (@$ < 0) @$ = @2;
 * (Although we have many nonterminals that follow this pattern, we only
 * bother with fixing @$ like this when the nonterminal's parse location
 * is actually referenced in some rule.)
 *
 * A cleaner answer would be to make YYLLOC_DEFAULT scan all the Rhs
 * locations until it's found one that's not -1.  Then we'd get a correct
 * location for any nonterminal that isn't entirely empty.  But this way
 * would add overhead to every rule reduction, and so far there's not been
 * a compelling reason to pay that overhead.
 */

/*
 * Bison doesn't allocate anything that needs to live across parser calls,
 * so we can easily have it use palloc instead of malloc.  This prevents
 * memory leaks if we error out during parsing.  Note this only works with
 * bison >= 2.0.  However, in bison 1.875 the default is to use alloca()
 * if possible, so there's not really much problem anyhow, at least if
 * you're building with gcc.
 */
#define YYMALLOC palloc
#define YYFREE   pfree
#define YYINITDEPTH 1000

/* yields an integer bitmask of these flags: */
#define CAS_NOT_DEFERRABLE			0x01
#define CAS_DEFERRABLE				0x02
#define CAS_INITIALLY_IMMEDIATE		0x04
#define CAS_INITIALLY_DEFERRED		0x08
#define CAS_NOT_VALID				0x10
#define CAS_NO_INHERIT				0x20


#define parser_yyerror(msg)  scanner_yyerror(msg, yyscanner)
#define parser_errposition(pos)  scanner_errposition(pos, yyscanner)

static void base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner,
						 const char *msg);
static PGRawStmt *makeRawStmt(PGNode *stmt, int stmt_location);
static void updateRawStmtEnd(PGRawStmt *rs, int end_location);
static PGNode *makeColumnRef(char *colname, PGList *indirection,
						   int location, core_yyscan_t yyscanner);
static PGNode *makeTypeCast(PGNode *arg, PGTypeName *tpname, int trycast, int location);
static PGNode *makeStringConst(char *str, int location);
static PGNode *makeStringConstCast(char *str, int location, PGTypeName *tpname);
static PGNode *makeIntervalNode(char *str, int location, PGList *typmods);
static PGNode *makeIntervalNode(int val, int location, PGList *typmods);
static PGNode *makeIntervalNode(PGNode *arg, int location, PGList *typmods);
static PGNode *makeSampleSize(PGValue *sample_size, bool is_percentage);
static PGNode *makeSampleOptions(PGNode *sample_size, char *method, int seed, int location);
static PGNode *makeIntConst(int val, int location);
static PGNode *makeFloatConst(char *str, int location);
static PGNode *makeBitStringConst(char *str, int location);
static PGNode *makeNullAConst(int location);
static PGNode *makeAConst(PGValue *v, int location);
static PGNode *makeBoolAConst(bool state, int location);
static PGNode *makeParamRef(int number, int location);
static void check_qualified_name(PGList *names, core_yyscan_t yyscanner);
static PGList *check_func_name(PGList *names, core_yyscan_t yyscanner);
static PGList *check_indirection(PGList *indirection, core_yyscan_t yyscanner);
static void insertSelectOptions(PGSelectStmt *stmt,
								PGList *sortClause, PGList *lockingClause,
								PGNode *limitOffset, PGNode *limitCount,
								PGWithClause *withClause,
								core_yyscan_t yyscanner);
static PGNode *makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg);
static PGNode *doNegate(PGNode *n, int location);
static void doNegateFloat(PGValue *v);
static PGNode *makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location);
static PGNode *makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location);
static PGNode *makeNotExpr(PGNode *expr, int location);
static PGNode *makeSQLValueFunction(PGSQLValueFunctionOp op, int32_t typmod,
								  int location);
static void SplitColQualList(PGList *qualList,
							 PGList **constraintList, PGCollateClause **collClause,
							 core_yyscan_t yyscanner);
static void processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner);
static PGNode *makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query);
static PGNode *makeLimitPercent(PGNode *limit_percent);



/* Enabling traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* Enabling the token table.  */
#ifndef YYTOKEN_TABLE
# define YYTOKEN_TABLE 0
#endif

#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
typedef union YYSTYPE
#line 14 "third_party/libpg_query/grammar/grammar.y"
{
	core_YYSTYPE		core_yystype;
	/* these fields must match core_YYSTYPE: */
	int					ival;
	char				*str;
	const char			*keyword;
	const char          *conststr;

	char				chr;
	bool				boolean;
	PGJoinType			jtype;
	PGDropBehavior		dbehavior;
	PGOnCommitAction		oncommit;
	PGOnCreateConflict		oncreateconflict;
	PGList				*list;
	PGNode				*node;
	PGValue				*value;
	PGObjectType			objtype;
	PGTypeName			*typnam;
	PGObjectWithArgs		*objwithargs;
	PGDefElem				*defelt;
	PGSortBy				*sortby;
	PGWindowDef			*windef;
	PGJoinExpr			*jexpr;
	PGIndexElem			*ielem;
	PGAlias				*alias;
	PGRangeVar			*range;
	PGIntoClause			*into;
	PGWithClause			*with;
	PGInferClause			*infer;
	PGOnConflictClause	*onconflict;
	PGAIndices			*aind;
	PGResTarget			*target;
	PGInsertStmt			*istmt;
	PGVariableSetStmt		*vsetstmt;
	PGOverridingKind       override;
	PGSortByDir            sortorder;
	PGSortByNulls          nullorder;
	PGLockClauseStrength lockstrength;
	PGLockWaitPolicy lockwaitpolicy;
	PGSubLinkType subquerytype;
	PGViewCheckOption viewcheckoption;
}
/* Line 193 of yacc.c.  */
#line 1280 "third_party/libpg_query/grammar/grammar_out.cpp"
	YYSTYPE;
# define yystype YYSTYPE /* obsolescent; will be withdrawn */
# define YYSTYPE_IS_DECLARED 1
# define YYSTYPE_IS_TRIVIAL 1
#endif

#if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
typedef struct YYLTYPE
{
  int first_line;
  int first_column;
  int last_line;
  int last_column;
} YYLTYPE;
# define yyltype YYLTYPE /* obsolescent; will be withdrawn */
# define YYLTYPE_IS_DECLARED 1
# define YYLTYPE_IS_TRIVIAL 1
#endif


/* Copy the second part of user declarations.  */


/* Line 216 of yacc.c.  */
#line 1305 "third_party/libpg_query/grammar/grammar_out.cpp"

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#elif (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
typedef signed char yytype_int8;
#else
typedef short int yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(msgid) dgettext ("bison-runtime", msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(msgid) msgid
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(e) ((void) (e))
#else
# define YYUSE(e) /* empty */
#endif

/* Identity function, used to suppress warnings about constant conditions.  */
#ifndef lint
# define YYID(n) (n)
#else
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static int
YYID (int i)
#else
static int
YYID (i)
    int i;
#endif
{
  return i;
}
#endif

#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#     ifndef _STDLIB_H
#      define _STDLIB_H 1
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's `empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (YYID (0))
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined _STDLIB_H \
       && ! ((defined YYMALLOC || defined malloc) \
	     && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef _STDLIB_H
#    define _STDLIB_H 1
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
	 || (defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL \
	     && defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss;
  YYSTYPE yyvs;
    YYLTYPE yyls;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
      + 2 * YYSTACK_GAP_MAXIMUM)

/* Copy COUNT objects from FROM to TO.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(To, From, Count) \
      __builtin_memcpy (To, From, (Count) * sizeof (*(From)))
#  else
#   define YYCOPY(To, From, Count)		\
      do					\
	{					\
	  YYSIZE_T yyi;				\
	  for (yyi = 0; yyi < (Count); yyi++)	\
	    (To)[yyi] = (From)[yyi];		\
	}					\
      while (YYID (0))
#  endif
# endif

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack)					\
    do									\
      {									\
	YYSIZE_T yynewbytes;						\
	YYCOPY (&yyptr->Stack, Stack, yysize);				\
	Stack = &yyptr->Stack;						\
	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
	yyptr += yynewbytes / sizeof (*yyptr);				\
      }									\
    while (YYID (0))

#endif

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  598
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   53521

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  505
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  385
/* YYNRULES -- Number of rules.  */
#define YYNRULES  1812
/* YYNRULES -- Number of states.  */
#define YYNSTATES  3006

/* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   738

#define YYTRANSLATE(YYX)						\
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[YYLEX] -- Bison symbol number corresponding to YYLEX.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,   502,     2,   490,     2,     2,
     495,   496,   488,   486,   499,   487,   497,   489,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   504,   498,
     482,   484,   483,   503,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,   493,     2,   494,   491,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   500,     2,   501,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   485,   492
};

#if YYDEBUG
/* YYPRHS[YYN] -- Index of the first RHS symbol of rule number YYN in
   YYRHS.  */
static const yytype_uint16 yyprhs[] =
{
       0,     0,     3,     5,     9,    11,    13,    15,    17,    19,
      21,    23,    25,    27,    29,    31,    33,    35,    37,    39,
      41,    43,    45,    47,    49,    51,    53,    55,    57,    59,
      61,    63,    65,    67,    69,    71,    73,    75,    77,    79,
      80,    85,    92,    97,   104,   109,   116,   121,   128,   130,
     133,   137,   140,   142,   146,   149,   153,   155,   159,   162,
     168,   172,   179,   184,   191,   198,   205,   211,   217,   224,
     234,   239,   245,   253,   260,   265,   274,   279,   282,   287,
     291,   298,   303,   306,   309,   312,   315,   317,   320,   321,
     323,   326,   329,   332,   334,   338,   343,   346,   348,   349,
     352,   356,   359,   363,   372,   374,   375,   377,   381,   388,
     395,   404,   411,   420,   427,   436,   443,   452,   461,   472,
     481,   492,   494,   495,   503,   505,   510,   515,   523,   526,
     528,   532,   537,   541,   542,   544,   545,   548,   552,   558,
     567,   573,   574,   580,   586,   594,   597,   598,   600,   602,
     604,   608,   611,   612,   614,   615,   617,   621,   623,   627,
     629,   633,   636,   639,   644,   650,   656,   665,   667,   668,
     672,   682,   695,   699,   700,   705,   712,   714,   717,   719,
     721,   722,   724,   727,   730,   732,   735,   738,   740,   743,
     747,   750,   753,   756,   759,   763,   767,   771,   773,   777,
     779,   780,   782,   785,   788,   791,   794,   797,   800,   803,
     806,   808,   810,   811,   821,   834,   846,   847,   850,   852,
     854,   856,   858,   860,   862,   866,   867,   869,   872,   874,
     876,   879,   882,   886,   888,   890,   893,   896,   898,   901,
     905,   911,   915,   918,   924,   930,   933,   937,   939,   941,
     944,   947,   948,   953,   954,   958,   963,   968,   969,   973,
     976,   977,   981,   983,   985,   987,   989,   991,   993,   995,
     997,   999,  1001,  1005,  1009,  1011,  1014,  1017,  1020,  1023,
    1026,  1029,  1030,  1034,  1038,  1042,  1043,  1045,  1048,  1050,
    1053,  1056,  1059,  1062,  1067,  1069,  1073,  1075,  1079,  1081,
    1083,  1085,  1087,  1091,  1093,  1096,  1097,  1099,  1100,  1102,
    1106,  1107,  1110,  1111,  1115,  1119,  1121,  1127,  1131,  1133,
    1137,  1139,  1144,  1150,  1156,  1163,  1167,  1175,  1180,  1192,
    1194,  1198,  1201,  1204,  1207,  1208,  1212,  1214,  1216,  1219,
    1222,  1225,  1228,  1230,  1231,  1233,  1236,  1243,  1248,  1255,
    1260,  1267,  1276,  1281,  1288,  1290,  1292,  1294,  1296,  1298,
    1301,  1303,  1306,  1308,  1310,  1312,  1316,  1320,  1324,  1328,
    1331,  1334,  1336,  1340,  1342,  1344,  1346,  1348,  1352,  1354,
    1356,  1357,  1359,  1361,  1363,  1365,  1369,  1376,  1378,  1380,
    1383,  1387,  1396,  1408,  1418,  1420,  1422,  1426,  1427,  1429,
    1433,  1435,  1436,  1438,  1439,  1441,  1442,  1444,  1448,  1450,
    1452,  1454,  1458,  1459,  1462,  1465,  1466,  1469,  1470,  1472,
    1473,  1475,  1477,  1479,  1483,  1487,  1489,  1491,  1495,  1499,
    1503,  1507,  1512,  1516,  1519,  1521,  1523,  1525,  1527,  1529,
    1533,  1535,  1537,  1541,  1545,  1547,  1550,  1555,  1560,  1563,
    1567,  1573,  1579,  1581,  1583,  1595,  1607,  1609,  1612,  1617,
    1622,  1627,  1630,  1633,  1637,  1639,  1643,  1650,  1653,  1654,
    1658,  1662,  1667,  1672,  1677,  1682,  1686,  1689,  1691,  1693,
    1694,  1696,  1698,  1699,  1701,  1707,  1709,  1710,  1713,  1716,
    1717,  1719,  1720,  1724,  1730,  1736,  1738,  1742,  1747,  1751,
    1753,  1755,  1756,  1759,  1762,  1763,  1766,  1769,  1771,  1773,
    1775,  1776,  1779,  1784,  1790,  1795,  1798,  1802,  1805,  1808,
    1811,  1814,  1816,  1819,  1823,  1824,  1826,  1827,  1833,  1835,
    1840,  1847,  1850,  1852,  1853,  1858,  1859,  1861,  1863,  1866,
    1869,  1872,  1874,  1876,  1879,  1882,  1884,  1886,  1888,  1890,
    1892,  1894,  1898,  1902,  1906,  1907,  1909,  1913,  1915,  1917,
    1919,  1921,  1923,  1926,  1931,  1936,  1942,  1944,  1946,  1949,
    1950,  1953,  1954,  1956,  1960,  1962,  1963,  1965,  1968,  1972,
    1975,  1980,  1983,  1987,  1990,  1991,  1993,  1996,  1997,  2002,
    2008,  2011,  2012,  2014,  2018,  2022,  2026,  2030,  2034,  2038,
    2040,  2045,  2049,  2054,  2060,  2065,  2071,  2076,  2082,  2085,
    2090,  2092,  2094,  2095,  2097,  2102,  2108,  2113,  2114,  2117,
    2120,  2123,  2125,  2127,  2128,  2133,  2136,  2138,  2141,  2144,
    2149,  2152,  2159,  2162,  2164,  2168,  2173,  2174,  2177,  2178,
    2181,  2182,  2184,  2188,  2192,  2195,  2196,  2199,  2204,  2206,
    2208,  2211,  2215,  2221,  2228,  2231,  2235,  2241,  2247,  2251,
    2256,  2257,  2259,  2261,  2263,  2265,  2267,  2270,  2275,  2277,
    2279,  2281,  2283,  2286,  2290,  2291,  2293,  2295,  2297,  2299,
    2301,  2304,  2307,  2310,  2313,  2316,  2318,  2322,  2323,  2325,
    2327,  2329,  2331,  2337,  2340,  2342,  2344,  2346,  2348,  2353,
    2355,  2358,  2361,  2363,  2367,  2371,  2374,  2376,  2377,  2383,
    2386,  2392,  2395,  2397,  2401,  2405,  2406,  2408,  2410,  2412,
    2414,  2416,  2418,  2420,  2422,  2424,  2426,  2428,  2430,  2432,
    2434,  2436,  2438,  2440,  2442,  2444,  2446,  2448,  2450,  2452,
    2454,  2458,  2462,  2466,  2470,  2474,  2478,  2482,  2483,  2485,
    2489,  2493,  2499,  2502,  2505,  2509,  2513,  2517,  2521,  2525,
    2529,  2533,  2537,  2541,  2545,  2549,  2553,  2557,  2560,  2563,
    2567,  2571,  2574,  2577,  2581,  2585,  2591,  2596,  2603,  2607,
    2613,  2618,  2625,  2630,  2637,  2643,  2651,  2655,  2658,  2663,
    2667,  2670,  2672,  2676,  2680,  2684,  2688,  2692,  2697,  2701,
    2706,  2710,  2715,  2721,  2728,  2735,  2743,  2750,  2758,  2765,
    2773,  2777,  2782,  2787,  2794,  2796,  2801,  2803,  2807,  2810,
    2813,  2817,  2821,  2825,  2829,  2833,  2837,  2841,  2845,  2849,
    2853,  2857,  2861,  2865,  2868,  2871,  2877,  2884,  2891,  2899,
    2901,  2903,  2906,  2909,  2912,  2917,  2919,  2922,  2924,  2927,
    2930,  2935,  2939,  2946,  2954,  2964,  2972,  2980,  2985,  2991,
    2993,  2995,  2997,  3003,  3005,  3007,  3012,  3014,  3019,  3021,
    3026,  3028,  3033,  3035,  3037,  3039,  3041,  3043,  3045,  3052,
    3059,  3064,  3069,  3074,  3079,  3086,  3092,  3098,  3104,  3109,
    3116,  3121,  3127,  3128,  3134,  3135,  3137,  3138,  3141,  3142,
    3144,  3148,  3152,  3155,  3158,  3159,  3166,  3168,  3169,  3173,
    3174,  3177,  3180,  3181,  3183,  3188,  3191,  3194,  3197,  3200,
    3203,  3208,  3212,  3214,  3220,  3224,  3226,  3230,  3232,  3234,
    3236,  3238,  3240,  3242,  3244,  3246,  3248,  3250,  3252,  3254,
    3256,  3258,  3260,  3262,  3264,  3266,  3271,  3273,  3278,  3280,
    3285,  3287,  3290,  3292,  3295,  3297,  3300,  3302,  3306,  3308,
    3312,  3314,  3315,  3317,  3321,  3323,  3327,  3331,  3333,  3337,
    3341,  3342,  3344,  3346,  3348,  3350,  3352,  3354,  3356,  3358,
    3360,  3362,  3367,  3371,  3374,  3378,  3379,  3383,  3387,  3390,
    3393,  3395,  3396,  3399,  3402,  3406,  3409,  3411,  3413,  3417,
    3423,  3425,  3428,  3433,  3436,  3437,  3439,  3440,  3442,  3445,
    3448,  3452,  3458,  3460,  3461,  3463,  3466,  3467,  3470,  3472,
    3473,  3475,  3476,  3478,  3482,  3486,  3489,  3491,  3495,  3501,
    3506,  3509,  3511,  3512,  3516,  3518,  3522,  3527,  3530,  3531,
    3533,  3537,  3539,  3542,  3544,  3548,  3550,  3552,  3554,  3557,
    3559,  3561,  3564,  3566,  3568,  3571,  3579,  3582,  3588,  3592,
    3596,  3598,  3600,  3602,  3604,  3606,  3608,  3610,  3612,  3614,
    3616,  3618,  3620,  3622,  3624,  3626,  3628,  3630,  3632,  3634,
    3636,  3639,  3642,  3646,  3650,  3651,  3653,  3655,  3657,  3659,
    3661,  3663,  3665,  3671,  3675,  3676,  3678,  3680,  3682,  3684,
    3689,  3697,  3700,  3701,  3703,  3705,  3707,  3709,  3723,  3740,
    3742,  3745,  3746,  3748,  3749,  3751,  3752,  3755,  3756,  3758,
    3759,  3766,  3775,  3782,  3791,  3798,  3807,  3810,  3812,  3817,
    3821,  3824,  3829,  3833,  3839,  3841,  3842,  3844,  3846,  3847,
    3849,  3851,  3853,  3855,  3857,  3859,  3861,  3863,  3865,  3867,
    3869,  3873,  3875,  3877,  3879,  3881,  3883,  3885,  3888,  3890,
    3892,  3895,  3899,  3903,  3907,  3909,  3913,  3917,  3920,  3924,
    3928,  3932,  3936,  3938,  3940,  3942,  3944,  3948,  3954,  3956,
    3958,  3960,  3962,  3966,  3969,  3972,  3976,  3978,  3980,  3985,
    3991,  3997,  4002,  4009,  4011,  4013,  4015,  4017,  4019,  4021,
    4022,  4024,  4028,  4030,  4031,  4039,  4041,  4044,  4048,  4051,
    4052,  4055,  4056,  4059,  4064,  4067,  4069,  4071,  4073,  4076,
    4080,  4083,  4086,  4089,  4092,  4096,  4101,  4104,  4106,  4108,
    4110,  4114,  4117,  4127,  4139,  4152,  4167,  4171,  4176,  4181,
    4182,  4190,  4201,  4211,  4214,  4218,  4219,  4224,  4226,  4228,
    4230,  4232,  4234,  4236,  4238,  4240,  4242,  4244,  4246,  4248,
    4250,  4252,  4254,  4256,  4258,  4260,  4262,  4264,  4266,  4268,
    4270,  4272,  4274,  4276,  4278,  4280,  4282,  4284,  4286,  4288,
    4290,  4292,  4294,  4296,  4298,  4300,  4302,  4304,  4306,  4308,
    4310,  4312,  4314,  4316,  4318,  4320,  4322,  4324,  4326,  4328,
    4330,  4332,  4334,  4336,  4338,  4340,  4342,  4344,  4346,  4348,
    4350,  4352,  4354,  4356,  4358,  4360,  4362,  4364,  4366,  4368,
    4370,  4372,  4374,  4376,  4378,  4380,  4382,  4384,  4386,  4388,
    4390,  4392,  4394,  4396,  4398,  4400,  4402,  4404,  4406,  4408,
    4410,  4412,  4414,  4416,  4418,  4420,  4422,  4424,  4426,  4428,
    4430,  4432,  4434,  4436,  4438,  4440,  4442,  4444,  4446,  4448,
    4450,  4452,  4454,  4456,  4458,  4460,  4462,  4464,  4466,  4468,
    4470,  4472,  4474,  4476,  4478,  4480,  4482,  4484,  4486,  4488,
    4490,  4492,  4494,  4496,  4498,  4500,  4502,  4504,  4506,  4508,
    4510,  4512,  4514,  4516,  4518,  4520,  4522,  4524,  4526,  4528,
    4530,  4532,  4534,  4536,  4538,  4540,  4542,  4544,  4546,  4548,
    4550,  4552,  4554,  4556,  4558,  4560,  4562,  4564,  4566,  4568,
    4570,  4572,  4574,  4576,  4578,  4580,  4582,  4584,  4586,  4588,
    4590,  4592,  4594,  4596,  4598,  4600,  4602,  4604,  4606,  4608,
    4610,  4612,  4614,  4616,  4618,  4620,  4622,  4624,  4626,  4628,
    4630,  4632,  4634,  4636,  4638,  4640,  4642,  4644,  4646,  4648,
    4650,  4652,  4654,  4656,  4658,  4660,  4662,  4664,  4666,  4668,
    4670,  4672,  4674,  4676,  4678,  4680,  4682,  4684,  4686,  4688,
    4690,  4692,  4694,  4696,  4698,  4700,  4702,  4704,  4706,  4708,
    4710,  4712,  4714,  4716,  4718,  4720,  4722,  4724,  4726,  4728,
    4730,  4732,  4734,  4736,  4738,  4740,  4742,  4744,  4746,  4748,
    4750,  4752,  4754,  4756,  4758,  4760,  4762,  4764,  4766,  4768,
    4770,  4772,  4774,  4776,  4778,  4780,  4782,  4784,  4786,  4788,
    4790,  4792,  4794,  4796,  4798,  4800,  4802,  4804,  4806,  4808,
    4810,  4812,  4814,  4816,  4818,  4820,  4822,  4824,  4826,  4828,
    4830,  4832,  4834,  4836,  4838,  4840,  4842,  4844,  4846,  4848,
    4850,  4852,  4854,  4856,  4858,  4860,  4862,  4864,  4866,  4868,
    4870,  4872,  4874,  4876,  4878,  4880,  4882,  4884,  4886,  4888,
    4890,  4892,  4894,  4896,  4898,  4900,  4902,  4904,  4906,  4908,
    4910,  4912,  4914,  4916,  4918,  4920,  4922,  4924,  4926,  4928,
    4930,  4932,  4934,  4936,  4938,  4940,  4942,  4944,  4946,  4948,
    4950,  4952,  4954,  4956,  4958,  4960,  4962,  4964,  4966,  4968,
    4970,  4972,  4974,  4976,  4978,  4980,  4982,  4984,  4986,  4988,
    4990,  4992,  4994,  4996,  4998,  5000,  5002,  5004,  5006,  5008,
    5010,  5012,  5014,  5016,  5018,  5020,  5022,  5024,  5026,  5028,
    5030,  5032,  5034,  5036,  5038,  5040,  5042,  5044,  5046,  5048,
    5050,  5052,  5054,  5056,  5058,  5060,  5062,  5064,  5066,  5068,
    5070,  5072,  5074,  5076,  5078,  5080,  5082,  5084,  5086,  5088,
    5090,  5092,  5094,  5096,  5098,  5100,  5102,  5104,  5106,  5108,
    5110,  5112,  5114,  5116,  5118,  5120,  5122,  5124,  5126,  5128,
    5130,  5132,  5134,  5136,  5138,  5140,  5142,  5144,  5146,  5148,
    5150,  5152,  5154,  5156,  5158,  5160,  5162,  5164,  5166,  5168,
    5170,  5172,  5174,  5176,  5178,  5180,  5182,  5184,  5186,  5188,
    5190,  5192,  5194,  5196,  5198,  5200,  5202,  5204,  5206,  5208,
    5210,  5212,  5214,  5216,  5218,  5220,  5222,  5224,  5226,  5228,
    5230,  5232,  5234,  5236,  5238,  5240,  5242,  5244,  5246,  5248,
    5250,  5252,  5254,  5256,  5258,  5260,  5262,  5264,  5266,  5268,
    5270,  5272,  5274,  5276,  5278,  5280,  5282,  5284,  5286,  5288,
    5290,  5292,  5294,  5296,  5298,  5300,  5302,  5304,  5306,  5308,
    5310,  5312,  5314,  5316,  5318,  5320,  5322,  5324,  5326,  5328,
    5330,  5332,  5334,  5336,  5338,  5340,  5342,  5344,  5346,  5348,
    5350,  5352,  5354
};

/* YYRHS -- A `-1'-separated list of the rules' RHS.  */
static const yytype_int16 yyrhs[] =
{
     506,     0,    -1,   507,    -1,   507,   498,   508,    -1,   508,
      -1,   838,    -1,   549,    -1,   509,    -1,   870,    -1,   877,
      -1,   839,    -1,   615,    -1,   880,    -1,   521,    -1,   611,
      -1,   828,    -1,   545,    -1,   558,    -1,   520,    -1,   866,
      -1,   604,    -1,   547,    -1,   842,    -1,   840,    -1,   841,
      -1,   831,    -1,   526,    -1,   859,    -1,   544,    -1,   825,
      -1,   524,    -1,   632,    -1,   556,    -1,   614,    -1,   861,
      -1,   871,    -1,   853,    -1,   874,    -1,   878,    -1,    -1,
      29,   403,   698,   517,    -1,    29,   403,   188,   150,   698,
     517,    -1,    29,   198,   806,   517,    -1,    29,   198,   188,
     150,   806,   517,    -1,    29,   368,   806,   517,    -1,    29,
     368,   188,   150,   806,   517,    -1,    29,   450,   806,   517,
      -1,    29,   450,   188,   150,   806,   517,    -1,   512,    -1,
     510,   512,    -1,   374,   115,   740,    -1,   135,   115,    -1,
     346,    -1,   346,   551,   552,    -1,   374,   553,    -1,   374,
     173,   603,    -1,   516,    -1,   513,   499,   516,    -1,    23,
     583,    -1,    23,   188,   270,   150,   583,    -1,    23,    75,
     583,    -1,    23,    75,   188,   270,   150,   583,    -1,    29,
     525,   814,   511,    -1,    29,   525,   814,   135,   270,   275,
      -1,    29,   525,   814,   374,   270,   275,    -1,    29,   525,
     814,   374,   390,   555,    -1,    29,   525,   814,   374,   571,
      -1,    29,   525,   814,   344,   571,    -1,    29,   525,   814,
     374,   393,   814,    -1,    29,   525,   814,    23,   173,   603,
      36,   187,   561,    -1,    29,   525,   814,   510,    -1,    29,
     525,   814,   135,   187,    -1,    29,   525,   814,   135,   187,
     188,   150,    -1,   135,   525,   188,   150,   814,   608,    -1,
     135,   525,   814,   608,    -1,    29,   525,   814,   519,   425,
     710,   707,   515,    -1,    29,   525,   814,   518,    -1,    23,
     573,    -1,    29,    86,   808,   559,    -1,   441,    86,   808,
      -1,   135,    86,   188,   150,   808,   608,    -1,   135,    86,
     808,   608,    -1,   374,   242,    -1,   374,   434,    -1,   374,
     571,    -1,   344,   571,    -1,   518,    -1,   438,   740,    -1,
      -1,   566,    -1,   374,   566,    -1,    23,   566,    -1,   135,
     581,    -1,   514,    -1,   517,   499,   514,    -1,   289,   495,
     513,   496,    -1,   374,   107,    -1,   374,    -1,    -1,   111,
     808,    -1,   111,   315,   808,    -1,   111,    27,    -1,   111,
     315,    27,    -1,    93,   425,   819,    36,   142,   495,   522,
     496,    -1,   523,    -1,    -1,   813,    -1,   523,   499,   813,
      -1,    29,   360,   808,   340,   414,   808,    -1,    29,   403,
     698,   340,   414,   808,    -1,    29,   403,   188,   150,   698,
     340,   414,   808,    -1,    29,   368,   806,   340,   414,   808,
      -1,    29,   368,   188,   150,   806,   340,   414,   808,    -1,
      29,   450,   806,   340,   414,   808,    -1,    29,   450,   188,
     150,   806,   340,   414,   808,    -1,    29,   198,   806,   340,
     414,   808,    -1,    29,   198,   188,   150,   806,   340,   414,
     808,    -1,    29,   403,   698,   340,   525,   808,   414,   808,
      -1,    29,   403,   188,   150,   698,   340,   525,   808,   414,
     808,    -1,    29,   403,   698,   340,    86,   808,   414,   808,
      -1,    29,   403,   188,   150,   698,   340,    86,   808,   414,
     808,    -1,    75,    -1,    -1,   530,   208,   215,   528,   527,
     533,   535,    -1,   632,    -1,   298,   536,   443,   632,    -1,
     495,   540,   496,   632,    -1,   495,   540,   496,   298,   536,
     443,   632,    -1,   115,   444,    -1,   806,    -1,   806,    36,
     814,    -1,   495,   542,   496,   704,    -1,   285,    86,   808,
      -1,    -1,   637,    -1,    -1,   814,   795,    -1,   543,   484,
     740,    -1,   495,   537,   496,   484,   740,    -1,   285,    84,
     529,   131,   436,   374,   541,   704,    -1,   285,    84,   529,
     131,   271,    -1,    -1,   814,   538,   539,   651,   652,    -1,
     745,   538,   539,   651,   652,    -1,   495,   740,   496,   538,
     539,   651,   652,    -1,   348,   798,    -1,    -1,   437,    -1,
     402,    -1,   543,    -1,   537,   499,   543,    -1,    73,   819,
      -1,    -1,   819,    -1,    -1,   531,    -1,   540,   499,   531,
      -1,   532,    -1,   541,   499,   532,    -1,   534,    -1,   542,
     499,   534,    -1,   814,   795,    -1,   312,   814,    -1,   312,
     814,   484,   858,    -1,   312,   814,   495,   773,   496,    -1,
      93,   602,   368,   806,   546,    -1,    93,   602,   368,   188,
     270,   150,   806,   546,    -1,   550,    -1,    -1,   149,   808,
     548,    -1,    93,   602,   403,   882,    36,   149,   808,   548,
     881,    -1,    93,   602,   403,   188,   270,   150,   882,    36,
     149,   808,   548,   881,    -1,   495,   771,   496,    -1,    -1,
      29,   368,   806,   550,    -1,    29,   368,   188,   150,   806,
     550,    -1,   553,    -1,   550,   553,    -1,   457,    -1,   481,
      -1,    -1,     4,    -1,   486,     4,    -1,   487,     4,    -1,
     555,    -1,    36,   712,    -1,    55,   552,    -1,   106,    -1,
     268,   106,    -1,   197,   554,   552,    -1,   248,   552,    -1,
     256,   552,    -1,   268,   248,    -1,   268,   256,    -1,   299,
      54,   819,    -1,   368,   261,   819,    -1,   388,   551,   552,
      -1,   346,    -1,   346,   551,   552,    -1,    54,    -1,    -1,
     812,    -1,   486,   812,    -1,   487,   812,    -1,    19,   557,
      -1,    47,   557,    -1,   388,   557,    -1,    79,   557,    -1,
     141,   557,    -1,   353,   557,    -1,   460,    -1,   416,    -1,
      -1,    93,   602,   403,   806,   495,   590,   496,   578,   570,
      -1,    93,   602,   403,   188,   270,   150,   806,   495,   590,
     496,   578,   570,    -1,    93,   290,   342,   602,   403,   806,
     495,   590,   496,   578,   570,    -1,    -1,   559,   582,    -1,
     597,    -1,   889,    -1,   768,    -1,   552,    -1,   813,    -1,
     269,    -1,   495,   550,   496,    -1,    -1,   813,    -1,   268,
      22,    -1,   347,    -1,    58,    -1,   374,   275,    -1,   374,
     115,    -1,    86,   808,   565,    -1,   565,    -1,   577,    -1,
      73,   819,    -1,   270,   275,    -1,   275,    -1,   431,   589,
      -1,   318,   222,   589,    -1,    67,   495,   740,   496,   572,
      -1,   438,    81,   808,    -1,   115,   741,    -1,   173,   603,
      36,   187,   561,    -1,   334,   806,   592,   600,   568,    -1,
     581,   562,    -1,   285,   436,   563,    -1,   567,    -1,   594,
      -1,   567,   594,    -1,   594,   567,    -1,    -1,   289,   495,
     584,   496,    -1,    -1,   285,    79,   135,    -1,   285,    79,
     120,   356,    -1,   285,    79,   317,   356,    -1,    -1,   495,
     575,   496,    -1,   268,   200,    -1,    -1,    86,   808,   598,
      -1,   598,    -1,    78,    -1,    87,    -1,   116,    -1,   187,
      -1,   199,    -1,   390,    -1,   393,    -1,    27,    -1,   595,
      -1,   575,   499,   595,    -1,   438,   198,   586,    -1,   117,
      -1,   270,   117,    -1,   202,   118,    -1,   202,   191,    -1,
     457,   571,    -1,   457,   283,    -1,   459,   283,    -1,    -1,
     495,   585,   496,    -1,   580,   196,   574,    -1,   580,   147,
     574,    -1,    -1,   823,    -1,   270,   117,    -1,   117,    -1,
     202,   191,    -1,   202,   118,    -1,   270,   440,    -1,   268,
     200,    -1,   814,   710,   569,   593,    -1,   566,    -1,   584,
     499,   566,    -1,   588,    -1,   585,   499,   588,    -1,   814,
      -1,   583,    -1,   601,    -1,   573,    -1,   823,   484,   560,
      -1,   823,    -1,   457,   579,    -1,    -1,   599,    -1,    -1,
     814,    -1,   495,   596,   496,    -1,    -1,   593,   564,    -1,
      -1,   285,   120,   563,    -1,   823,   484,   560,    -1,   823,
      -1,   823,   497,   823,   484,   560,    -1,   823,   497,   823,
      -1,   591,    -1,   596,   499,   591,    -1,   710,    -1,   816,
     820,   490,   425,    -1,   375,   816,   820,   490,   425,    -1,
      67,   495,   740,   496,   559,    -1,   431,   495,   596,   496,
     589,   559,    -1,   431,   576,   559,    -1,   318,   222,   495,
     596,   496,   589,   559,    -1,   318,   222,   576,   559,    -1,
     166,   222,   495,   596,   496,   334,   806,   592,   600,   568,
     559,    -1,   587,    -1,   599,   499,   587,    -1,   246,   170,
      -1,   246,   303,    -1,   246,   380,    -1,    -1,   232,   806,
     580,    -1,   409,    -1,   407,    -1,   236,   409,    -1,   236,
     407,    -1,   175,   409,    -1,   175,   407,    -1,   434,    -1,
      -1,    30,    -1,    54,   115,    -1,   135,   605,   188,   150,
     607,   608,    -1,   135,   605,   607,   608,    -1,   135,   606,
     188,   150,   807,   608,    -1,   135,   606,   807,   608,    -1,
     135,   609,   808,   285,   819,   608,    -1,   135,   609,   188,
     150,   808,   285,   819,   608,    -1,   135,   425,   610,   608,
      -1,   135,   425,   188,   150,   610,   608,    -1,   403,    -1,
     368,    -1,   171,    -1,   243,    -1,   450,    -1,   247,   450,
      -1,   198,    -1,   166,   403,    -1,    74,    -1,    90,    -1,
     390,    -1,   410,   363,   302,    -1,   410,   363,   127,    -1,
     410,   363,   408,    -1,   410,   363,    83,    -1,    21,   249,
      -1,   144,   419,    -1,   154,    -1,   166,   107,   461,    -1,
     324,    -1,   360,    -1,   371,    -1,   819,    -1,   607,   499,
     819,    -1,    58,    -1,   347,    -1,    -1,   310,    -1,   357,
      -1,   419,    -1,   710,    -1,   610,   499,   710,    -1,    93,
     612,   806,   613,    36,   740,    -1,   171,    -1,   243,    -1,
     495,   496,    -1,   495,   773,   496,    -1,   530,   436,   867,
     374,   541,   688,   868,   535,    -1,    91,   627,   806,   592,
     625,   616,   621,   630,   617,   551,   622,    -1,    91,   495,
     827,   496,   414,   621,   630,   551,   622,    -1,   169,    -1,
     414,    -1,   619,   122,   813,    -1,    -1,   629,    -1,   618,
     499,   629,    -1,   438,    -1,    -1,    36,    -1,    -1,   323,
      -1,    -1,   626,    -1,   495,   631,   496,    -1,   850,    -1,
     552,    -1,   488,    -1,   495,   618,   496,    -1,    -1,   823,
     623,    -1,   457,   283,    -1,    -1,   626,   628,    -1,    -1,
      50,    -1,    -1,    50,    -1,   283,    -1,   168,    -1,   121,
     620,   813,    -1,   275,   620,   813,    -1,    95,    -1,   183,
      -1,   326,   620,   813,    -1,   143,   620,   813,    -1,   165,
     326,   596,    -1,   165,   326,   488,    -1,   165,   270,   275,
     596,    -1,   165,   275,   596,    -1,   139,   813,    -1,   850,
      -1,   813,    -1,   391,    -1,   392,    -1,   624,    -1,   631,
     499,   624,    -1,   634,    -1,   633,    -1,   495,   634,   496,
      -1,   495,   633,   496,    -1,   636,    -1,   635,   648,    -1,
     635,   647,   680,   654,    -1,   635,   647,   653,   681,    -1,
     637,   635,    -1,   637,   635,   648,    -1,   637,   635,   647,
     680,   654,    -1,   637,   635,   647,   653,   681,    -1,   636,
      -1,   633,    -1,   367,   645,   797,   640,   688,   704,   670,
     678,   750,   679,   658,    -1,   367,   644,   798,   640,   688,
     704,   670,   678,   750,   679,   658,    -1,   687,    -1,   403,
     698,    -1,   635,   430,   643,   635,    -1,   635,   213,   643,
     635,    -1,   635,   145,   643,   635,    -1,   457,   638,    -1,
     481,   638,    -1,   457,   332,   638,    -1,   639,    -1,   638,
     499,   639,    -1,   808,   821,    36,   495,   827,   496,    -1,
     215,   641,    -1,    -1,   409,   642,   806,    -1,   407,   642,
     806,    -1,   236,   409,   642,   806,    -1,   236,   407,   642,
     806,    -1,   175,   409,   642,   806,    -1,   175,   407,   642,
     806,    -1,   434,   642,   806,    -1,   403,   806,    -1,   806,
      -1,   403,    -1,    -1,    27,    -1,   130,    -1,    -1,   130,
      -1,   130,   285,   495,   771,   496,    -1,    27,    -1,    -1,
     189,   277,    -1,   345,   277,    -1,    -1,   648,    -1,    -1,
     291,    54,   649,    -1,   291,    54,    27,   651,   652,    -1,
     291,    54,   488,   651,   652,    -1,   650,    -1,   649,   499,
     650,    -1,   740,   438,   768,   652,    -1,   740,   651,   652,
      -1,    37,    -1,   124,    -1,    -1,   480,   161,    -1,   480,
     226,    -1,    -1,   655,   656,    -1,   656,   655,    -1,   655,
      -1,   656,    -1,   653,    -1,    -1,   233,   664,    -1,   233,
     664,   499,   665,    -1,   159,   669,   666,   668,   286,    -1,
     159,   669,   668,   286,    -1,   282,   665,    -1,   282,   666,
     668,    -1,     4,   490,    -1,     9,   490,    -1,     4,   307,
      -1,     9,   307,    -1,     9,    -1,     9,   356,    -1,   438,
     358,   660,    -1,    -1,   814,    -1,    -1,   659,   495,   657,
     496,   663,    -1,   657,    -1,   657,   495,   814,   496,    -1,
     657,   495,   814,   499,     9,   496,    -1,   405,   660,    -1,
     661,    -1,    -1,   341,   495,     9,   496,    -1,    -1,   740,
      -1,    27,    -1,   740,   490,    -1,     4,   307,    -1,     9,
     307,    -1,   740,    -1,   742,    -1,   486,   667,    -1,   487,
     667,    -1,   812,    -1,     4,    -1,   355,    -1,   356,    -1,
     161,    -1,   267,    -1,   178,    54,   671,    -1,   178,    54,
      27,    -1,   178,    54,   488,    -1,    -1,   672,    -1,   671,
     499,   672,    -1,   740,    -1,   673,    -1,   675,    -1,   674,
      -1,   676,    -1,   495,   496,    -1,   354,   495,   771,   496,
      -1,    96,   495,   771,   496,    -1,   179,   376,   495,   671,
     496,    -1,   179,    -1,   180,    -1,   182,   740,    -1,    -1,
     325,   740,    -1,    -1,   682,    -1,   164,   328,   286,    -1,
     680,    -1,    -1,   683,    -1,   682,   683,    -1,   684,   685,
     686,    -1,   164,   436,    -1,   164,   268,   222,   436,    -1,
     164,   377,    -1,   164,   222,   377,    -1,   280,   805,    -1,
      -1,   274,    -1,   381,   241,    -1,    -1,   444,   495,   771,
     496,    -1,   687,   499,   495,   771,   496,    -1,   169,   689,
      -1,    -1,   690,    -1,   689,   499,   690,    -1,   698,   693,
     662,    -1,   699,   694,   662,    -1,   227,   699,   694,    -1,
     633,   693,   662,    -1,   227,   633,   693,    -1,   691,    -1,
     495,   691,   496,   692,    -1,   495,   691,   496,    -1,   690,
      94,   220,   690,    -1,   690,   695,   220,   690,   697,    -1,
     690,   220,   690,   697,    -1,   690,   264,   695,   220,   690,
      -1,   690,   264,   220,   690,    -1,    36,   814,   495,   807,
     496,    -1,    36,   815,    -1,   814,   495,   807,   496,    -1,
     814,    -1,   692,    -1,    -1,   692,    -1,    36,   495,   705,
     496,    -1,    36,   814,   495,   705,   496,    -1,   814,   495,
     705,   496,    -1,    -1,   170,   696,    -1,   230,   696,    -1,
     351,   696,    -1,   204,    -1,   294,    -1,    -1,   438,   495,
     807,   496,    -1,   285,   740,    -1,   806,    -1,   806,   488,
      -1,   286,   806,    -1,   286,   495,   806,   496,    -1,   745,
     703,    -1,   356,   169,   495,   701,   496,   703,    -1,   745,
     702,    -1,   700,    -1,   701,   499,   700,    -1,    36,   495,
     705,   496,    -1,    -1,   481,   292,    -1,    -1,   454,   740,
      -1,    -1,   706,    -1,   705,   499,   706,    -1,   814,   710,
     707,    -1,    73,   819,    -1,    -1,   814,   710,    -1,   708,
     499,   814,   710,    -1,   355,    -1,   396,    -1,   712,   711,
      -1,   375,   712,   711,    -1,   712,    35,   493,   812,   494,
      -1,   375,   712,    35,   493,   812,   494,    -1,   712,    35,
      -1,   375,   712,    35,    -1,   709,   495,   708,   496,   711,
      -1,   244,   495,   775,   496,   711,    -1,   711,   493,   494,
      -1,   711,   493,   812,   494,    -1,    -1,   714,    -1,   716,
      -1,   718,    -1,   722,    -1,   728,    -1,   729,   739,    -1,
     729,   495,   812,   496,    -1,   716,    -1,   719,    -1,   723,
      -1,   728,    -1,   818,   715,    -1,   495,   771,   496,    -1,
      -1,   211,    -1,   212,    -1,   382,    -1,    49,    -1,   329,
      -1,   162,   717,    -1,   134,   314,    -1,   113,   715,    -1,
     112,   715,    -1,   278,   715,    -1,    52,    -1,   495,   812,
     496,    -1,    -1,   720,    -1,   721,    -1,   720,    -1,   721,
      -1,    51,   727,   495,   771,   496,    -1,    51,   727,    -1,
     724,    -1,   725,    -1,   724,    -1,   725,    -1,   726,   495,
     812,   496,    -1,   726,    -1,    65,   727,    -1,    64,   727,
      -1,   445,    -1,   263,    65,   727,    -1,   263,    64,   727,
      -1,   265,   727,    -1,   447,    -1,    -1,   413,   495,   812,
     496,   730,    -1,   413,   730,    -1,   412,   495,   812,   496,
     730,    -1,   412,   730,    -1,   214,    -1,   481,   412,   478,
      -1,   459,   412,   478,    -1,    -1,   475,    -1,   476,    -1,
     258,    -1,   259,    -1,   109,    -1,   110,    -1,   185,    -1,
     186,    -1,   254,    -1,   255,    -1,   364,    -1,   365,    -1,
     252,    -1,   253,    -1,   250,    -1,   251,    -1,   731,    -1,
     732,    -1,   733,    -1,   734,    -1,   735,    -1,   736,    -1,
     737,    -1,   738,    -1,   731,   414,   732,    -1,   733,   414,
     734,    -1,   733,   414,   735,    -1,   733,   414,   736,    -1,
     734,   414,   735,    -1,   734,   414,   736,    -1,   735,   414,
     736,    -1,    -1,   742,    -1,   740,    11,   710,    -1,   740,
      73,   819,    -1,   740,    41,   412,   478,   740,    -1,   486,
     740,    -1,   487,   740,    -1,   740,   486,   740,    -1,   740,
     487,   740,    -1,   740,   488,   740,    -1,   740,   489,   740,
      -1,   740,   490,   740,    -1,   740,   491,   740,    -1,   740,
     482,   740,    -1,   740,   483,   740,    -1,   740,   484,   740,
      -1,   740,    16,   740,    -1,   740,    17,   740,    -1,   740,
      18,   740,    -1,   740,   767,   740,    -1,   767,   740,    -1,
     740,   767,    -1,   740,    33,   740,    -1,   740,   290,   740,
      -1,   270,   740,    -1,   479,   740,    -1,   740,   174,   740,
      -1,   740,   232,   740,    -1,   740,   232,   740,   143,   740,
      -1,   740,   479,   232,   740,    -1,   740,   479,   232,   740,
     143,   740,    -1,   740,   190,   740,    -1,   740,   190,   740,
     143,   740,    -1,   740,   479,   190,   740,    -1,   740,   479,
     190,   740,   143,   740,    -1,   740,   379,   414,   740,    -1,
     740,   379,   414,   740,   143,   740,    -1,   740,   479,   379,
     414,   740,    -1,   740,   479,   379,   414,   740,   143,   740,
      -1,   740,   217,   275,    -1,   740,   218,    -1,   740,   217,
     270,   275,    -1,   740,   270,   275,    -1,   740,   273,    -1,
     761,    -1,   500,   763,   501,    -1,   493,   772,   494,    -1,
     740,    15,   740,    -1,   761,   296,   761,    -1,   740,   217,
     421,    -1,   740,   217,   270,   421,    -1,   740,   217,   157,
      -1,   740,   217,   270,   157,    -1,   740,   217,   432,    -1,
     740,   217,   270,   432,    -1,   740,   217,   130,   169,   740,
      -1,   740,   217,   270,   130,   169,   740,    -1,   740,   217,
     280,   495,   775,   496,    -1,   740,   217,   270,   280,   495,
     775,   496,    -1,   740,    48,   796,   741,    33,   740,    -1,
     740,   479,    48,   796,   741,    33,   740,    -1,   740,    48,
     400,   741,    33,   740,    -1,   740,   479,    48,   400,   741,
      33,   740,    -1,   740,   195,   785,    -1,   740,   479,   195,
     785,    -1,   740,   769,   764,   633,    -1,   740,   769,   764,
     495,   740,   496,    -1,   115,    -1,    35,   493,   772,   494,
      -1,   742,    -1,   741,    11,   710,    -1,   486,   741,    -1,
     487,   741,    -1,   741,   486,   741,    -1,   741,   487,   741,
      -1,   741,   488,   741,    -1,   741,   489,   741,    -1,   741,
     490,   741,    -1,   741,   491,   741,    -1,   741,   482,   741,
      -1,   741,   483,   741,    -1,   741,   484,   741,    -1,   741,
      16,   741,    -1,   741,    17,   741,    -1,   741,    18,   741,
      -1,   741,   767,   741,    -1,   767,   741,    -1,   741,   767,
      -1,   741,   217,   130,   169,   741,    -1,   741,   217,   270,
     130,   169,   741,    -1,   741,   217,   280,   495,   775,   496,
      -1,   741,   217,   270,   280,   495,   775,   496,    -1,   791,
      -1,   811,    -1,   502,     9,    -1,   503,   795,    -1,    10,
     795,    -1,   495,   740,   496,   795,    -1,   786,    -1,   744,
     795,    -1,   633,    -1,   633,   794,    -1,   150,   633,    -1,
     677,   495,   771,   496,    -1,   810,   495,   496,    -1,   810,
     495,   773,   647,   646,   496,    -1,   810,   495,   446,   774,
     647,   646,   496,    -1,   810,   495,   773,   499,   446,   774,
     647,   646,   496,    -1,   810,   495,    27,   773,   647,   646,
     496,    -1,   810,   495,   130,   773,   647,   646,   496,    -1,
     810,   495,   488,   496,    -1,   743,   747,   748,   749,   753,
      -1,   746,    -1,   743,    -1,   746,    -1,    74,   164,   495,
     740,   496,    -1,    99,    -1,   102,    -1,   102,   495,   812,
     496,    -1,   103,    -1,   103,   495,   812,   496,    -1,   237,
      -1,   237,   495,   812,   496,    -1,   238,    -1,   238,   495,
     812,   496,    -1,   100,    -1,   104,    -1,   373,    -1,   437,
      -1,    98,    -1,   101,    -1,    61,   495,   740,    36,   710,
     496,    -1,   424,   495,   740,    36,   710,   496,    -1,   156,
     495,   776,   496,    -1,   297,   495,   778,   496,    -1,   311,
     495,   780,   496,    -1,   398,   495,   781,   496,    -1,   418,
     495,   740,    36,   710,   496,    -1,   420,   495,    53,   784,
     496,    -1,   420,   495,   228,   784,   496,    -1,   420,   495,
     415,   784,   496,    -1,   420,   495,   784,   496,    -1,   276,
     495,   740,   499,   740,   496,    -1,    72,   495,   771,   496,
      -1,   458,   178,   495,   648,   496,    -1,    -1,   160,   495,
     454,   740,   496,    -1,    -1,   153,    -1,    -1,   456,   751,
      -1,    -1,   752,    -1,   751,   499,   752,    -1,   814,    36,
     754,    -1,   295,   754,    -1,   295,   814,    -1,    -1,   495,
     755,   756,   647,   757,   496,    -1,   814,    -1,    -1,   304,
      54,   771,    -1,    -1,   327,   758,    -1,   356,   758,    -1,
      -1,   759,    -1,    48,   759,    33,   759,    -1,   427,   313,
      -1,   427,   163,    -1,    97,   355,    -1,   740,   313,    -1,
     740,   163,    -1,   355,   495,   771,   496,    -1,   355,   495,
     496,    -1,   760,    -1,   495,   771,   499,   740,   496,    -1,
     815,   504,   740,    -1,   762,    -1,   763,   499,   762,    -1,
      34,    -1,   384,    -1,    27,    -1,     8,    -1,   766,    -1,
     486,    -1,   487,    -1,   488,    -1,   489,    -1,   490,    -1,
     491,    -1,   482,    -1,   483,    -1,   484,    -1,    16,    -1,
      17,    -1,    18,    -1,     8,    -1,   287,   495,   770,   496,
      -1,   765,    -1,   287,   495,   770,   496,    -1,   765,    -1,
     287,   495,   770,   496,    -1,   232,    -1,   479,   232,    -1,
     174,    -1,   479,   174,    -1,   190,    -1,   479,   190,    -1,
     765,    -1,   814,   497,   770,    -1,   740,    -1,   771,   499,
     740,    -1,   771,    -1,    -1,   774,    -1,   773,   499,   774,
      -1,   740,    -1,   822,    13,   740,    -1,   822,    14,   740,
      -1,   710,    -1,   775,   499,   710,    -1,   777,   169,   740,
      -1,    -1,     3,    -1,   731,    -1,   732,    -1,   733,    -1,
     734,    -1,   735,    -1,   736,    -1,   737,    -1,   738,    -1,
     813,    -1,   740,   779,   782,   783,    -1,   740,   779,   782,
      -1,   308,   740,    -1,   741,   195,   741,    -1,    -1,   740,
     782,   783,    -1,   740,   783,   782,    -1,   740,   782,    -1,
     740,   783,    -1,   771,    -1,    -1,   169,   740,    -1,   164,
     740,    -1,   740,   169,   771,    -1,   169,   771,    -1,   771,
      -1,   633,    -1,   495,   771,   496,    -1,    60,   790,   787,
     789,   141,    -1,   788,    -1,   787,   788,    -1,   453,   740,
     411,   740,    -1,   137,   740,    -1,    -1,   740,    -1,    -1,
     814,    -1,   814,   794,    -1,   497,   809,    -1,   493,   740,
     494,    -1,   493,   793,   504,   793,   494,    -1,   740,    -1,
      -1,   792,    -1,   794,   792,    -1,    -1,   795,   792,    -1,
      40,    -1,    -1,   798,    -1,    -1,   799,    -1,   798,   499,
     799,    -1,   740,    36,   824,    -1,   740,     3,    -1,   740,
      -1,   488,   801,   804,    -1,   814,   497,   488,   801,   804,
      -1,   146,   495,   807,   496,    -1,   146,   814,    -1,   800,
      -1,    -1,   740,    36,   814,    -1,   802,    -1,   803,   499,
     802,    -1,   342,   495,   803,   496,    -1,   342,   802,    -1,
      -1,   806,    -1,   805,   499,   806,    -1,   815,    -1,   814,
     794,    -1,   808,    -1,   807,   499,   808,    -1,   814,    -1,
     823,    -1,   817,    -1,   814,   794,    -1,   812,    -1,     4,
      -1,   813,   795,    -1,     6,    -1,     7,    -1,   810,   813,
      -1,   810,   495,   773,   647,   646,   496,   813,    -1,   713,
     813,    -1,   729,   495,   740,   496,   739,    -1,   729,   812,
     739,    -1,   729,   813,   739,    -1,   421,    -1,   157,    -1,
     275,    -1,     9,    -1,     5,    -1,     3,    -1,   883,    -1,
     884,    -1,   814,    -1,     5,    -1,     3,    -1,   883,    -1,
     888,    -1,     3,    -1,   883,    -1,   885,    -1,     3,    -1,
     883,    -1,   886,    -1,   814,    -1,   814,   820,    -1,   497,
     809,    -1,   820,   497,   809,    -1,   495,   807,   496,    -1,
      -1,   816,    -1,     3,    -1,   887,    -1,   883,    -1,   889,
      -1,   823,    -1,     5,    -1,   315,   808,   826,    36,   827,
      -1,   495,   775,   496,    -1,    -1,   632,    -1,   526,    -1,
     614,    -1,   866,    -1,    93,   360,   814,   829,    -1,    93,
     360,   188,   270,   150,   814,   829,    -1,   829,   830,    -1,
      -1,   558,    -1,   831,    -1,   545,    -1,   878,    -1,    93,
     837,   198,   834,   835,   285,   806,   833,   495,   542,   496,
     836,   704,    -1,    93,   837,   198,   834,   188,   270,   150,
     586,   285,   806,   833,   495,   542,   496,   836,   704,    -1,
     814,    -1,   438,   832,    -1,    -1,    82,    -1,    -1,   586,
      -1,    -1,   457,   571,    -1,    -1,   431,    -1,    -1,    29,
     403,   698,   374,   360,   808,    -1,    29,   403,   188,   150,
     698,   374,   360,   808,    -1,    29,   368,   806,   374,   360,
     808,    -1,    29,   368,   188,   150,   806,   374,   360,   808,
      -1,    29,   450,   806,   374,   360,   808,    -1,    29,   450,
     188,   150,   806,   374,   360,   808,    -1,   165,    68,    -1,
      68,    -1,   152,   108,   813,   622,    -1,   194,   108,   813,
      -1,   151,   845,    -1,   151,   849,   843,   845,    -1,   151,
     448,   845,    -1,   151,   495,   848,   496,   845,    -1,   448,
      -1,    -1,   850,    -1,   552,    -1,    -1,   632,    -1,   526,
      -1,   614,    -1,   866,    -1,   880,    -1,     3,    -1,   883,
      -1,   887,    -1,   846,    -1,   813,    -1,   851,    -1,   848,
     499,   851,    -1,    32,    -1,    31,    -1,   421,    -1,   157,
      -1,   285,    -1,   847,    -1,   852,   844,    -1,   846,    -1,
     849,    -1,   374,   854,    -1,   374,   236,   854,    -1,   374,
     372,   854,    -1,   374,   175,   854,    -1,   855,    -1,   876,
     169,    97,    -1,   412,   478,   857,    -1,   360,   813,    -1,
     876,   414,   858,    -1,   876,   484,   858,    -1,   876,   414,
     115,    -1,   876,   484,   115,    -1,   850,    -1,   552,    -1,
     813,    -1,     3,    -1,   729,   813,   739,    -1,   729,   495,
     812,   496,   813,    -1,   552,    -1,   115,    -1,   236,    -1,
     856,    -1,   858,   499,   856,    -1,   235,   860,    -1,   209,
     860,    -1,   165,   209,   860,    -1,   813,    -1,   814,    -1,
     439,   863,   865,   843,    -1,   439,   863,   865,   843,   806,
      -1,   439,   863,   865,   843,   870,    -1,   439,   495,   864,
     496,    -1,   439,   495,   864,   496,   806,   821,    -1,   849,
      -1,   448,    -1,   168,    -1,   170,    -1,     3,    -1,   170,
      -1,    -1,   862,    -1,   864,   499,   862,    -1,   168,    -1,
      -1,   530,   120,   169,   867,   869,   868,   535,    -1,   698,
      -1,   698,   814,    -1,   698,    36,   814,    -1,   454,   740,
      -1,    -1,   438,   689,    -1,    -1,   849,   843,    -1,   849,
     843,   806,   821,    -1,   344,   873,    -1,   876,    -1,    27,
      -1,   872,    -1,   412,   478,    -1,   416,   219,   231,    -1,
     875,   632,    -1,   399,   632,    -1,   399,   876,    -1,   875,
     876,    -1,   875,   412,   478,    -1,   875,   416,   219,   231,
      -1,   875,    27,    -1,   378,    -1,   125,    -1,   814,    -1,
     876,   497,   814,    -1,    56,   743,    -1,    93,   602,   450,
     806,   592,   836,    36,   632,   879,    -1,    93,   290,   342,
     602,   450,   806,   592,   836,    36,   632,   879,    -1,    93,
     602,   332,   450,   806,   495,   596,   496,   836,    36,   632,
     879,    -1,    93,   290,   342,   602,   332,   450,   806,   495,
     596,   496,   836,    36,   632,   879,    -1,   457,    67,   288,
      -1,   457,    59,    67,   288,    -1,   457,   236,    67,   288,
      -1,    -1,    93,   602,   403,   882,    36,   632,   881,    -1,
      93,   602,   403,   188,   270,   150,   882,    36,   632,   881,
      -1,    93,   290,   342,   602,   403,   882,    36,   632,   881,
      -1,   457,   107,    -1,   457,   268,   107,    -1,    -1,   806,
     592,   578,   570,    -1,    19,    -1,    20,    -1,    21,    -1,
      22,    -1,    23,    -1,    24,    -1,    25,    -1,    26,    -1,
      28,    -1,    29,    -1,    30,    -1,    38,    -1,    39,    -1,
      41,    -1,    42,    -1,    43,    -1,    45,    -1,    46,    -1,
      47,    -1,    54,    -1,    55,    -1,    56,    -1,    57,    -1,
      58,    -1,    59,    -1,    62,    -1,    63,    -1,    66,    -1,
      68,    -1,    69,    -1,    70,    -1,    71,    -1,    76,    -1,
      77,    -1,    78,    -1,    79,    -1,    80,    -1,    81,    -1,
      83,    -1,    84,    -1,    85,    -1,    87,    -1,    88,    -1,
      89,    -1,    90,    -1,    91,    -1,    92,    -1,    95,    -1,
      96,    -1,    97,    -1,   105,    -1,   106,    -1,   107,    -1,
     108,    -1,   109,    -1,   110,    -1,   111,    -1,   114,    -1,
     116,    -1,   118,    -1,   119,    -1,   120,    -1,   121,    -1,
     122,    -1,   123,    -1,   125,    -1,   126,    -1,   127,    -1,
     128,    -1,   129,    -1,   132,    -1,   133,    -1,   134,    -1,
     135,    -1,   136,    -1,   138,    -1,   139,    -1,   140,    -1,
     142,    -1,   143,    -1,   144,    -1,   146,    -1,   147,    -1,
     148,    -1,   149,    -1,   151,    -1,   152,    -1,   153,    -1,
     154,    -1,   155,    -1,   158,    -1,   160,    -1,   161,    -1,
     163,    -1,   165,    -1,   167,    -1,   171,    -1,   172,    -1,
     173,    -1,   175,    -1,   177,    -1,   181,    -1,   183,    -1,
     184,    -1,   185,    -1,   186,    -1,   187,    -1,   188,    -1,
     189,    -1,   191,    -1,   192,    -1,   193,    -1,   194,    -1,
     196,    -1,   197,    -1,   198,    -1,   199,    -1,   200,    -1,
     201,    -1,   203,    -1,   206,    -1,   207,    -1,   208,    -1,
     209,    -1,   210,    -1,   216,    -1,   219,    -1,   221,    -1,
     222,    -1,   223,    -1,   224,    -1,   225,    -1,   226,    -1,
     229,    -1,   231,    -1,   234,    -1,   235,    -1,   236,    -1,
     239,    -1,   240,    -1,   241,    -1,   242,    -1,   243,    -1,
     245,    -1,   246,    -1,   247,    -1,   248,    -1,   249,    -1,
     250,    -1,   251,    -1,   252,    -1,   253,    -1,   254,    -1,
     255,    -1,   256,    -1,   257,    -1,   258,    -1,   259,    -1,
     260,    -1,   261,    -1,   262,    -1,   266,    -1,   267,    -1,
     268,    -1,   271,    -1,   272,    -1,   274,    -1,   277,    -1,
     279,    -1,   280,    -1,   281,    -1,   283,    -1,   284,    -1,
     287,    -1,   288,    -1,   289,    -1,   292,    -1,   295,    -1,
     298,    -1,   299,    -1,   300,    -1,   301,    -1,   302,    -1,
     303,    -1,   304,    -1,   305,    -1,   306,    -1,   307,    -1,
     309,    -1,   310,    -1,   312,    -1,   313,    -1,   315,    -1,
     316,    -1,   317,    -1,   319,    -1,   320,    -1,   321,    -1,
     322,    -1,   323,    -1,   324,    -1,   326,    -1,   327,    -1,
     328,    -1,   330,    -1,   331,    -1,   332,    -1,   333,    -1,
     335,    -1,   336,    -1,   337,    -1,   338,    -1,   339,    -1,
     340,    -1,   341,    -1,   342,    -1,   343,    -1,   344,    -1,
     345,    -1,   346,    -1,   347,    -1,   349,    -1,   350,    -1,
     352,    -1,   353,    -1,   354,    -1,   356,    -1,   357,    -1,
     358,    -1,   359,    -1,   360,    -1,   361,    -1,   362,    -1,
     363,    -1,   364,    -1,   365,    -1,   366,    -1,   368,    -1,
     369,    -1,   370,    -1,   371,    -1,   372,    -1,   374,    -1,
     376,    -1,   377,    -1,   378,    -1,   380,    -1,   381,    -1,
     383,    -1,   385,    -1,   386,    -1,   387,    -1,   388,    -1,
     389,    -1,   390,    -1,   391,    -1,   392,    -1,   393,    -1,
     394,    -1,   395,    -1,   397,    -1,   399,    -1,   401,    -1,
     402,    -1,   404,    -1,   406,    -1,   407,    -1,   408,    -1,
     409,    -1,   410,    -1,   416,    -1,   417,    -1,   419,    -1,
     422,    -1,   423,    -1,   425,    -1,   426,    -1,   427,    -1,
     428,    -1,   429,    -1,   432,    -1,   433,    -1,   434,    -1,
     435,    -1,   436,    -1,   439,    -1,   440,    -1,   441,    -1,
     442,    -1,   443,    -1,   447,    -1,   449,    -1,   450,    -1,
     451,    -1,   452,    -1,   455,    -1,   458,    -1,   459,    -1,
     460,    -1,   461,    -1,   462,    -1,   463,    -1,   475,    -1,
     476,    -1,   477,    -1,   478,    -1,    48,    -1,    49,    -1,
      51,    -1,    52,    -1,    64,    -1,    65,    -1,    72,    -1,
     112,    -1,   113,    -1,   150,    -1,   156,    -1,   162,    -1,
     179,    -1,   180,    -1,   205,    -1,   211,    -1,   212,    -1,
     214,    -1,   244,    -1,   263,    -1,   265,    -1,   269,    -1,
     276,    -1,   278,    -1,   293,    -1,   297,    -1,   311,    -1,
     314,    -1,   329,    -1,   355,    -1,   375,    -1,   382,    -1,
     396,    -1,   398,    -1,   412,    -1,   413,    -1,   418,    -1,
     420,    -1,   424,    -1,   444,    -1,   445,    -1,   464,    -1,
     465,    -1,   466,    -1,   467,    -1,   468,    -1,   469,    -1,
     470,    -1,   471,    -1,   472,    -1,   473,    -1,   474,    -1,
      44,    -1,    50,    -1,    74,    -1,    82,    -1,    94,    -1,
     101,    -1,   168,    -1,   170,    -1,   174,    -1,   190,    -1,
     204,    -1,   217,    -1,   218,    -1,   220,    -1,   230,    -1,
     232,    -1,   244,    -1,   264,    -1,   273,    -1,   294,    -1,
     296,    -1,   351,    -1,   379,    -1,   396,    -1,   405,    -1,
     448,    -1,    44,    -1,    50,    -1,    74,    -1,    82,    -1,
      94,    -1,   101,    -1,   168,    -1,   170,    -1,   174,    -1,
     190,    -1,   204,    -1,   217,    -1,   218,    -1,   220,    -1,
     230,    -1,   232,    -1,   264,    -1,   273,    -1,   294,    -1,
     296,    -1,   351,    -1,   379,    -1,   405,    -1,   424,    -1,
     448,    -1,    48,    -1,    49,    -1,    51,    -1,    52,    -1,
      65,    -1,    64,    -1,    72,    -1,   112,    -1,   113,    -1,
     150,    -1,   156,    -1,   162,    -1,   179,    -1,   180,    -1,
     205,    -1,   212,    -1,   214,    -1,   211,    -1,   244,    -1,
     263,    -1,   265,    -1,   269,    -1,   276,    -1,   278,    -1,
     293,    -1,   297,    -1,   311,    -1,   314,    -1,   329,    -1,
     355,    -1,   375,    -1,   382,    -1,   396,    -1,   398,    -1,
     412,    -1,   413,    -1,   418,    -1,   420,    -1,   424,    -1,
     444,    -1,   445,    -1,   464,    -1,   465,    -1,   466,    -1,
     467,    -1,   468,    -1,   469,    -1,   470,    -1,   471,    -1,
     472,    -1,   473,    -1,   474,    -1,    44,    -1,    50,    -1,
      74,    -1,    82,    -1,    94,    -1,   101,    -1,   168,    -1,
     170,    -1,   174,    -1,   190,    -1,   204,    -1,   217,    -1,
     218,    -1,   220,    -1,   230,    -1,   232,    -1,   244,    -1,
     264,    -1,   273,    -1,   294,    -1,   296,    -1,   351,    -1,
     379,    -1,   396,    -1,   405,    -1,   424,    -1,   448,    -1,
      27,    -1,    31,    -1,    32,    -1,    33,    -1,    34,    -1,
      35,    -1,    36,    -1,    37,    -1,    40,    -1,    53,    -1,
      60,    -1,    61,    -1,    67,    -1,    73,    -1,    75,    -1,
      86,    -1,    93,    -1,    98,    -1,    99,    -1,   100,    -1,
     102,    -1,   103,    -1,   104,    -1,   115,    -1,   117,    -1,
     124,    -1,   130,    -1,   131,    -1,   137,    -1,   141,    -1,
     145,    -1,   157,    -1,   159,    -1,   164,    -1,   166,    -1,
     169,    -1,   176,    -1,   178,    -1,   182,    -1,   195,    -1,
     202,    -1,   213,    -1,   215,    -1,   227,    -1,   228,    -1,
     233,    -1,   237,    -1,   238,    -1,   270,    -1,   275,    -1,
     282,    -1,   285,    -1,   286,    -1,   290,    -1,   291,    -1,
     308,    -1,   318,    -1,   325,    -1,   334,    -1,   348,    -1,
     367,    -1,   373,    -1,   384,    -1,   400,    -1,   403,    -1,
     411,    -1,   414,    -1,   415,    -1,   421,    -1,   430,    -1,
     431,    -1,   437,    -1,   438,    -1,   446,    -1,   453,    -1,
     454,    -1,   456,    -1,   457,    -1
};

/* YYRLINE[YYN] -- source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,   467,   467,   483,   495,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   539,
       9,    18,    27,    36,    45,    54,    63,    72,    85,    87,
      93,    94,    99,   103,   107,   118,   126,   130,   139,   148,
     157,   166,   175,   184,   192,   200,   209,   218,   227,   236,
     253,   262,   271,   280,   290,   303,   318,   327,   335,   350,
     358,   368,   378,   385,   392,   400,   407,   418,   419,   424,
     428,   433,   438,   446,   447,   452,   456,   457,   458,     7,
      13,    19,    25,     7,    17,    18,    21,    23,     6,    15,
      25,    35,    45,    55,    65,    75,    85,    95,   106,   117,
     127,   140,   141,     8,    21,    27,    34,    40,    47,    57,
      61,    70,    79,    88,    95,    96,   101,   113,   118,   143,
     153,   163,   169,   180,   191,   206,   207,   213,   214,   219,
     220,   226,   227,   231,   232,   237,   239,   245,   246,   250,
     251,   256,     7,    14,    22,     9,    19,    32,    33,     7,
      14,    31,    51,    52,     9,    17,    29,    30,    34,    35,
      36,    41,    42,    43,    48,    52,    56,    60,    64,    68,
      72,    76,    80,    84,    88,    92,    97,   101,   105,   112,
     113,   117,   118,   119,     2,     9,    15,    21,    28,    35,
      45,    46,    47,     7,    21,    36,    56,    57,    84,    85,
      86,    87,    88,    89,    93,    94,    99,   104,   105,   106,
     107,   108,   113,   120,   121,   122,   139,   146,   153,   163,
     173,   185,   193,   202,   211,   230,   237,   242,   244,   246,
     248,   251,   256,   257,   261,   262,   263,   264,   269,   273,
     274,   279,   286,   291,   292,   293,   294,   295,   296,   297,
     298,   304,   305,   309,   314,   321,   328,   335,   347,   348,
     349,   350,   354,   359,   360,   361,   366,   371,   372,   373,
     374,   375,   376,   381,   404,   408,   415,   416,   420,   424,
     425,   426,   430,   434,   442,   443,   448,   449,   453,   461,
     462,   467,   468,   472,   477,   481,   485,   490,   498,   499,
     503,   504,   510,   521,   534,   548,   562,   576,   590,   613,
     617,   624,   628,   636,   641,   648,   658,   659,   660,   661,
     662,   669,   676,   677,   682,   683,     9,    19,    29,    39,
      49,    59,    69,    79,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   112,
     113,   114,   115,   116,   117,   118,   123,   124,   129,   130,
     131,   136,   137,   138,   141,   142,     7,    18,    19,    23,
      27,     7,     1,    30,    53,    54,    59,    63,    68,    72,
      80,    81,    85,    86,    91,    92,    96,    97,   102,   103,
     104,   105,   106,   111,   119,   123,   128,   129,   134,   138,
     143,   147,   151,   155,   159,   163,   167,   171,   175,   179,
     183,   187,   191,   195,   203,   209,   210,   211,   216,   220,
      47,    48,    52,    53,    68,    69,    76,    84,    92,   100,
     108,   116,   127,   128,   155,   171,   188,   189,   208,   212,
     216,   233,   240,   247,   257,   258,   261,   273,   284,   292,
     297,   302,   307,   312,   320,   328,   333,   338,   345,   346,
     350,   351,   352,   359,   360,   364,   365,   369,   370,   371,
     375,   376,   380,   381,   391,   404,   405,   408,   417,   428,
     429,   430,   433,   434,   435,   439,   440,   441,   442,   446,
     447,   451,   453,   469,   471,   476,   479,   487,   491,   495,
     499,   503,   507,   514,   519,   526,   527,   531,   535,   539,
     543,   550,   557,   558,   563,   564,   568,   569,   574,   576,
     578,   583,   603,   604,   606,   611,   612,   616,   617,   620,
     621,   646,   647,   652,   657,   661,   662,   666,   667,   668,
     669,   670,   674,   687,   694,   701,   708,   709,   713,   714,
     718,   719,   723,   724,   728,   729,   733,   734,   738,   749,
     750,   751,   752,   756,   757,   762,   763,   764,   773,   779,
     797,   798,   802,   803,   809,   815,   823,   831,   840,   849,
     853,   879,   883,   896,   910,   925,   937,   953,   959,   964,
     970,   977,   978,   986,   990,   994,  1000,  1007,  1012,  1013,
    1014,  1015,  1019,  1020,  1032,  1033,  1038,  1045,  1052,  1059,
    1091,  1102,  1115,  1120,  1121,  1124,  1125,  1128,  1129,  1134,
    1135,  1140,  1144,  1150,  1171,  1179,  1192,  1195,  1199,  1199,
    1201,  1206,  1213,  1218,  1224,  1229,  1235,  1241,  1250,  1252,
    1255,  1259,  1260,  1261,  1262,  1263,  1264,  1269,  1289,  1290,
    1291,  1292,  1303,  1317,  1318,  1324,  1329,  1334,  1339,  1344,
    1349,  1354,  1359,  1365,  1371,  1377,  1384,  1406,  1415,  1419,
    1427,  1431,  1439,  1451,  1472,  1476,  1482,  1486,  1499,  1507,
    1517,  1519,  1521,  1523,  1525,  1527,  1532,  1533,  1540,  1549,
    1557,  1566,  1577,  1585,  1586,  1587,  1591,  1591,  1594,  1594,
    1597,  1597,  1600,  1600,  1603,  1603,  1606,  1606,  1609,  1609,
    1612,  1612,  1615,  1617,  1619,  1621,  1623,  1625,  1627,  1629,
    1631,  1636,  1641,  1647,  1654,  1659,  1665,  1671,  1702,  1704,
    1706,  1714,  1729,  1731,  1733,  1735,  1737,  1739,  1741,  1743,
    1745,  1747,  1749,  1751,  1753,  1755,  1758,  1760,  1762,  1765,
    1767,  1769,  1771,  1774,  1779,  1784,  1791,  1796,  1803,  1808,
    1815,  1820,  1828,  1836,  1844,  1852,  1870,  1878,  1886,  1894,
    1902,  1910,  1914,  1918,  1922,  1930,  1946,  1954,  1962,  1970,
    1978,  1986,  1994,  1998,  2002,  2006,  2010,  2018,  2026,  2034,
    2042,  2062,  2084,  2095,  2102,  2116,  2132,  2134,  2136,  2138,
    2140,  2142,  2144,  2146,  2148,  2150,  2152,  2154,  2156,  2158,
    2160,  2162,  2164,  2166,  2168,  2170,  2174,  2178,  2182,  2196,
    2197,  2198,  2205,  2217,  2232,  2244,  2246,  2258,  2269,  2293,
    2304,  2313,  2317,  2324,  2332,  2340,  2351,  2359,  2387,  2423,
    2434,  2435,  2442,  2448,  2452,  2456,  2460,  2464,  2468,  2472,
    2476,  2480,  2484,  2488,  2492,  2496,  2500,  2504,  2508,  2510,
    2512,  2516,  2525,  2530,  2537,  2552,  2559,  2563,  2567,  2571,
    2575,  2589,  2590,  2594,  2595,  2599,  2600,  2607,  2608,  2612,
    2613,  2618,  2626,  2628,  2642,  2645,  2672,  2673,  2676,  2677,
    2688,  2694,  2701,  2710,  2727,  2772,  2780,  2788,  2796,  2804,
    2825,  2826,  2829,  2830,  2834,  2844,  2845,  2847,  2848,  2849,
    2852,  2853,  2856,  2857,  2858,  2859,  2860,  2861,  2862,  2863,
    2864,  2865,  2866,  2867,  2870,  2872,  2877,  2879,  2884,  2886,
    2888,  2890,  2892,  2894,  2896,  2898,  2912,  2914,  2918,  2922,
    2929,  2934,  2941,  2945,  2951,  2955,  2964,  2975,  2976,  2980,
    2984,  2991,  2992,  2993,  2994,  2995,  2996,  2997,  2998,  2999,
    3000,  3010,  3014,  3021,  3028,  3029,  3045,  3049,  3054,  3058,
    3073,  3078,  3082,  3085,  3088,  3089,  3090,  3093,  3100,  3110,
    3124,  3125,  3129,  3140,  3141,  3144,  3145,  3148,  3152,  3159,
    3163,  3171,  3182,  3183,  3187,  3188,  3192,  3193,  3196,  3197,
    3207,  3208,  3212,  3213,  3216,  3232,  3240,  3248,  3263,  3281,
    3282,  3285,  3286,  3289,  3293,  3294,  3297,  3298,  3299,  3309,
    3310,  3321,  3325,  3352,  3354,  3359,  3361,  3371,  3374,  3385,
    3389,  3393,  3405,  3409,  3418,  3425,  3463,  3467,  3471,  3475,
    3479,  3483,  3487,  3493,  3494,  3510,  3511,  3512,  3515,  3516,
    3522,  3523,  3524,  3527,  3528,  3529,  3532,  3533,  3534,  3537,
    3538,  3541,  3543,  3548,  3549,  3552,  3560,  3561,  3562,  3563,
    3566,  3567,     7,    18,    19,    23,    24,    25,    26,     7,
      16,    34,    41,    46,    47,    48,    49,     8,    33,    62,
      66,    67,    72,    73,    78,    79,    83,    84,    89,    90,
       7,    16,    25,    34,    43,    52,     5,    11,     7,    20,
       9,    16,    26,    33,    44,    45,    50,    51,    52,    57,
      58,    59,    60,    61,    65,    66,    67,    72,    73,    78,
      82,    90,    91,    96,    97,    98,   104,   109,   117,   118,
      10,    16,    22,    28,    38,    39,    47,    58,    70,    78,
      86,    93,   103,   105,   111,   115,   119,   134,   141,   142,
     143,   147,   148,     7,    14,    20,    28,    29,     8,    22,
      36,    48,    56,    70,    71,    72,    73,    74,    87,    88,
      93,    94,    98,    99,     7,    21,    25,    32,    43,    44,
      50,    51,     9,    19,     2,     7,    14,    24,    25,    32,
       3,    10,    17,    24,    31,    38,    45,    55,    55,    57,
      58,     6,     8,    21,    34,    52,    74,    75,    76,    77,
      11,    24,    37,    54,    55,    56,    61,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    75,    75,    75,    75,    75,    75,    75,
      75,    75,    75,    75,    75,    75,    75,    75,    75,    75,
      75,    75,    75,    75,    75,    75,    75,    75,    75,    75,
      75,    75,    75,    75,    75,    75,    75,    75,    75,    75,
      75,    75,    75,    75,    75,    75,    75,    75,    75,    75,
      75,    75,    75,    75,    75,    76,    76,    76,    76,    76,
      76,    76,    76,    76,    76,    76,    76,    76,    76,    76,
      76,    76,    76,    76,    76,    76,    76,    76,    76,    76,
      76,    77,    77,    77,    77,    77,    77,    77,    77,    77,
      77,    77,    77,    77,    77,    77,    77,    77,    77,    77,
      77,    77,    77,    77,    77,    77,    78,    78,    78,    78,
      78,    78,    78,    78,    78,    78,    78,    78,    78,    78,
      78,    78,    78,    78,    78,    78,    78,    78,    78,    78,
      78,    78,    78,    78,    78,    78,    78,    78,    78,    78,
      78,    78,    78,    78,    78,    78,    78,    78,    78,    78,
      78,    78,    78,    78,    78,    78,    78,    78,    79,    79,
      79,    79,    79,    79,    79,    79,    79,    79,    79,    79,
      79,    79,    79,    79,    79,    79,    79,    79,    79,    79,
      79,    79,    79,    79,    79,    80,    80,    80,    80,    80,
      80,    80,    80,    80,    80,    80,    80,    80,    80,    80,
      80,    80,    80,    80,    80,    80,    80,    80,    80,    80,
      80,    80,    80,    80,    80,    80,    80,    80,    80,    80,
      80,    80,    80,    80,    80,    80,    80,    80,    80,    80,
      80,    80,    80,    80,    80,    80,    80,    80,    80,    80,
      80,    80,    80,    80,    80,    80,    80,    80,    80,    80,
      80,    80,    80,    80,    80,    80,    80,    80,    80,    80,
      80,    80,    80
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || YYTOKEN_TABLE
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "IDENT", "FCONST", "SCONST", "BCONST",
  "XCONST", "Op", "ICONST", "PARAM", "TYPECAST", "DOT_DOT", "COLON_EQUALS",
  "EQUALS_GREATER", "LAMBDA_ARROW", "LESS_EQUALS", "GREATER_EQUALS",
  "NOT_EQUALS", "ABORT_P", "ABSOLUTE_P", "ACCESS", "ACTION", "ADD_P",
  "ADMIN", "AFTER", "AGGREGATE", "ALL", "ALSO", "ALTER", "ALWAYS",
  "ANALYSE", "ANALYZE", "AND", "ANY", "ARRAY", "AS", "ASC_P", "ASSERTION",
  "ASSIGNMENT", "ASYMMETRIC", "AT", "ATTACH", "ATTRIBUTE", "AUTHORIZATION",
  "BACKWARD", "BEFORE", "BEGIN_P", "BETWEEN", "BIGINT", "BINARY", "BIT",
  "BOOLEAN_P", "BOTH", "BY", "CACHE", "CALL_P", "CALLED", "CASCADE",
  "CASCADED", "CASE", "CAST", "CATALOG_P", "CHAIN", "CHAR_P", "CHARACTER",
  "CHARACTERISTICS", "CHECK_P", "CHECKPOINT", "CLASS", "CLOSE", "CLUSTER",
  "COALESCE", "COLLATE", "COLLATION", "COLUMN", "COLUMNS", "COMMENT",
  "COMMENTS", "COMMIT", "COMMITTED", "COMPRESSION", "CONCURRENTLY",
  "CONFIGURATION", "CONFLICT", "CONNECTION", "CONSTRAINT", "CONSTRAINTS",
  "CONTENT_P", "CONTINUE_P", "CONVERSION_P", "COPY", "COST", "CREATE_P",
  "CROSS", "CSV", "CUBE", "CURRENT_P", "CURRENT_CATALOG", "CURRENT_DATE",
  "CURRENT_ROLE", "CURRENT_SCHEMA", "CURRENT_TIME", "CURRENT_TIMESTAMP",
  "CURRENT_USER", "CURSOR", "CYCLE", "DATA_P", "DATABASE", "DAY_P",
  "DAYS_P", "DEALLOCATE", "DEC", "DECIMAL_P", "DECLARE", "DEFAULT",
  "DEFAULTS", "DEFERRABLE", "DEFERRED", "DEFINER", "DELETE_P", "DELIMITER",
  "DELIMITERS", "DEPENDS", "DESC_P", "DESCRIBE", "DETACH", "DICTIONARY",
  "DISABLE_P", "DISCARD", "DISTINCT", "DO", "DOCUMENT_P", "DOMAIN_P",
  "DOUBLE_P", "DROP", "EACH", "ELSE", "ENABLE_P", "ENCODING", "ENCRYPTED",
  "END_P", "ENUM_P", "ESCAPE", "EVENT", "EXCEPT", "EXCLUDE", "EXCLUDING",
  "EXCLUSIVE", "EXECUTE", "EXISTS", "EXPLAIN", "EXPORT_P", "EXPORT_STATE",
  "EXTENSION", "EXTERNAL", "EXTRACT", "FALSE_P", "FAMILY", "FETCH",
  "FILTER", "FIRST_P", "FLOAT_P", "FOLLOWING", "FOR", "FORCE", "FOREIGN",
  "FORWARD", "FREEZE", "FROM", "FULL", "FUNCTION", "FUNCTIONS",
  "GENERATED", "GLOB", "GLOBAL", "GRANT", "GRANTED", "GROUP_P", "GROUPING",
  "GROUPING_ID", "HANDLER", "HAVING", "HEADER_P", "HOLD", "HOUR_P",
  "HOURS_P", "IDENTITY_P", "IF_P", "IGNORE_P", "ILIKE", "IMMEDIATE",
  "IMMUTABLE", "IMPLICIT_P", "IMPORT_P", "IN_P", "INCLUDING", "INCREMENT",
  "INDEX", "INDEXES", "INHERIT", "INHERITS", "INITIALLY", "INLINE_P",
  "INNER_P", "INOUT", "INPUT_P", "INSENSITIVE", "INSERT", "INSTALL",
  "INSTEAD", "INT_P", "INTEGER", "INTERSECT", "INTERVAL", "INTO",
  "INVOKER", "IS", "ISNULL", "ISOLATION", "JOIN", "JSON", "KEY", "LABEL",
  "LANGUAGE", "LARGE_P", "LAST_P", "LATERAL_P", "LEADING", "LEAKPROOF",
  "LEFT", "LEVEL", "LIKE", "LIMIT", "LISTEN", "LOAD", "LOCAL", "LOCALTIME",
  "LOCALTIMESTAMP", "LOCATION", "LOCK_P", "LOCKED", "LOGGED", "MACRO",
  "MAP", "MAPPING", "MATCH", "MATERIALIZED", "MAXVALUE", "METHOD",
  "MICROSECOND_P", "MICROSECONDS_P", "MILLISECOND_P", "MILLISECONDS_P",
  "MINUTE_P", "MINUTES_P", "MINVALUE", "MODE", "MONTH_P", "MONTHS_P",
  "MOVE", "NAME_P", "NAMES", "NATIONAL", "NATURAL", "NCHAR", "NEW", "NEXT",
  "NO", "NONE", "NOT", "NOTHING", "NOTIFY", "NOTNULL", "NOWAIT", "NULL_P",
  "NULLIF", "NULLS_P", "NUMERIC", "OBJECT_P", "OF", "OFF", "OFFSET",
  "OIDS", "OLD", "ON", "ONLY", "OPERATOR", "OPTION", "OPTIONS", "OR",
  "ORDER", "ORDINALITY", "OUT_P", "OUTER_P", "OVER", "OVERLAPS", "OVERLAY",
  "OVERRIDING", "OWNED", "OWNER", "PARALLEL", "PARSER", "PARTIAL",
  "PARTITION", "PASSING", "PASSWORD", "PERCENT", "PLACING", "PLANS",
  "POLICY", "POSITION", "PRAGMA_P", "PRECEDING", "PRECISION", "PREPARE",
  "PREPARED", "PRESERVE", "PRIMARY", "PRIOR", "PRIVILEGES", "PROCEDURAL",
  "PROCEDURE", "PROGRAM", "PUBLICATION", "QUALIFY", "QUOTE", "RANGE",
  "READ_P", "REAL", "REASSIGN", "RECHECK", "RECURSIVE", "REF",
  "REFERENCES", "REFERENCING", "REFRESH", "REINDEX", "RELATIVE_P",
  "RELEASE", "RENAME", "REPEATABLE", "REPLACE", "REPLICA", "RESET",
  "RESPECT_P", "RESTART", "RESTRICT", "RETURNING", "RETURNS", "REVOKE",
  "RIGHT", "ROLE", "ROLLBACK", "ROLLUP", "ROW", "ROWS", "RULE", "SAMPLE",
  "SAVEPOINT", "SCHEMA", "SCHEMAS", "SCROLL", "SEARCH", "SECOND_P",
  "SECONDS_P", "SECURITY", "SELECT", "SEQUENCE", "SEQUENCES",
  "SERIALIZABLE", "SERVER", "SESSION", "SESSION_USER", "SET", "SETOF",
  "SETS", "SHARE", "SHOW", "SIMILAR", "SIMPLE", "SKIP", "SMALLINT",
  "SNAPSHOT", "SOME", "SQL_P", "STABLE", "STANDALONE_P", "START",
  "STATEMENT", "STATISTICS", "STDIN", "STDOUT", "STORAGE", "STRICT_P",
  "STRIP_P", "STRUCT", "SUBSCRIPTION", "SUBSTRING", "SUMMARIZE",
  "SYMMETRIC", "SYSID", "SYSTEM_P", "TABLE", "TABLES", "TABLESAMPLE",
  "TABLESPACE", "TEMP", "TEMPLATE", "TEMPORARY", "TEXT_P", "THEN", "TIME",
  "TIMESTAMP", "TO", "TRAILING", "TRANSACTION", "TRANSFORM", "TREAT",
  "TRIGGER", "TRIM", "TRUE_P", "TRUNCATE", "TRUSTED", "TRY_CAST", "TYPE_P",
  "TYPES_P", "UNBOUNDED", "UNCOMMITTED", "UNENCRYPTED", "UNION", "UNIQUE",
  "UNKNOWN", "UNLISTEN", "UNLOGGED", "UNTIL", "UPDATE", "USER", "USING",
  "VACUUM", "VALID", "VALIDATE", "VALIDATOR", "VALUE_P", "VALUES",
  "VARCHAR", "VARIADIC", "VARYING", "VERBOSE", "VERSION_P", "VIEW",
  "VIEWS", "VOLATILE", "WHEN", "WHERE", "WHITESPACE_P", "WINDOW", "WITH",
  "WITHIN", "WITHOUT", "WORK", "WRAPPER", "WRITE_P", "XML_P",
  "XMLATTRIBUTES", "XMLCONCAT", "XMLELEMENT", "XMLEXISTS", "XMLFOREST",
  "XMLNAMESPACES", "XMLPARSE", "XMLPI", "XMLROOT", "XMLSERIALIZE",
  "XMLTABLE", "YEAR_P", "YEARS_P", "YES_P", "ZONE", "NOT_LA", "NULLS_LA",
  "WITH_LA", "'<'", "'>'", "'='", "POSTFIXOP", "'+'", "'-'", "'*'", "'/'",
  "'%'", "'^'", "UMINUS", "'['", "']'", "'('", "')'", "'.'", "';'", "','",
  "'{'", "'}'", "'#'", "'?'", "':'", "$accept", "stmtblock", "stmtmulti",
  "stmt", "AlterTableStmt", "alter_identity_column_option_list",
  "alter_column_default", "alter_identity_column_option",
  "alter_generic_option_list", "alter_table_cmd", "alter_using",
  "alter_generic_option_elem", "alter_table_cmds", "alter_generic_options",
  "opt_set_data", "DeallocateStmt", "CreateEnumStmt", "opt_enum_val_list",
  "enum_val_list", "RenameStmt", "opt_column", "InsertStmt", "insert_rest",
  "insert_target", "opt_conf_expr", "opt_with_clause",
  "insert_column_item", "set_clause", "opt_on_conflict", "index_elem",
  "returning_clause", "override_kind", "set_target_list", "opt_collate",
  "opt_class", "insert_column_list", "set_clause_list", "index_params",
  "set_target", "PragmaStmt", "CreateSeqStmt", "OptSeqOptList",
  "ExecuteStmt", "execute_param_clause", "AlterSeqStmt", "SeqOptList",
  "opt_with", "NumericOnly", "SeqOptElem", "opt_by", "SignedIconst",
  "TransactionStmt", "opt_transaction", "CreateStmt",
  "ConstraintAttributeSpec", "def_arg", "OptParenthesizedSeqOptList",
  "generic_option_arg", "key_action", "ColConstraint", "ColConstraintElem",
  "generic_option_elem", "key_update", "key_actions",
  "create_generic_options", "OnCommitOption", "reloptions",
  "opt_no_inherit", "TableConstraint", "TableLikeOption", "reloption_list",
  "ExistingIndex", "ConstraintAttr", "OptWith", "definition",
  "TableLikeOptionList", "generic_option_name", "ConstraintAttributeElem",
  "columnDef", "generic_option_list", "def_list", "index_name",
  "TableElement", "def_elem", "opt_definition", "OptTableElementList",
  "columnElem", "opt_column_list", "ColQualList", "key_delete",
  "reloption_elem", "columnList", "func_type", "ConstraintElem",
  "TableElementList", "key_match", "TableLikeClause", "OptTemp",
  "generated_when", "DropStmt", "drop_type_any_name", "drop_type_name",
  "any_name_list", "opt_drop_behavior", "drop_type_name_on_any_name",
  "type_name_list", "CreateFunctionStmt", "macro_alias", "param_list",
  "UpdateStmt", "CopyStmt", "copy_from", "copy_delimiter",
  "copy_generic_opt_arg_list", "opt_using", "opt_as", "opt_program",
  "copy_options", "copy_generic_opt_arg", "copy_generic_opt_elem",
  "opt_oids", "copy_opt_list", "opt_binary", "copy_opt_item",
  "copy_generic_opt_arg_list_item", "copy_file_name",
  "copy_generic_opt_list", "SelectStmt", "select_with_parens",
  "select_no_parens", "select_clause", "simple_select", "with_clause",
  "cte_list", "common_table_expr", "into_clause", "OptTempTableName",
  "opt_table", "all_or_distinct", "distinct_clause", "opt_all_clause",
  "opt_ignore_nulls", "opt_sort_clause", "sort_clause", "sortby_list",
  "sortby", "opt_asc_desc", "opt_nulls_order", "select_limit",
  "opt_select_limit", "limit_clause", "offset_clause", "sample_count",
  "sample_clause", "opt_sample_func", "tablesample_entry",
  "tablesample_clause", "opt_tablesample_clause", "opt_repeatable_clause",
  "select_limit_value", "select_offset_value", "select_fetch_first_value",
  "I_or_F_const", "row_or_rows", "first_or_next", "group_clause",
  "group_by_list", "group_by_item", "empty_grouping_set", "rollup_clause",
  "cube_clause", "grouping_sets_clause", "grouping_or_grouping_id",
  "having_clause", "qualify_clause", "for_locking_clause",
  "opt_for_locking_clause", "for_locking_items", "for_locking_item",
  "for_locking_strength", "locked_rels_list", "opt_nowait_or_skip",
  "values_clause", "from_clause", "from_list", "table_ref", "joined_table",
  "alias_clause", "opt_alias_clause", "func_alias_clause", "join_type",
  "join_outer", "join_qual", "relation_expr", "func_table",
  "rowsfrom_item", "rowsfrom_list", "opt_col_def_list", "opt_ordinality",
  "where_clause", "TableFuncElementList", "TableFuncElement",
  "opt_collate_clause", "colid_type_list", "RowOrStruct", "Typename",
  "opt_array_bounds", "SimpleTypename", "ConstTypename", "GenericType",
  "opt_type_modifiers", "Numeric", "opt_float", "Bit", "ConstBit",
  "BitWithLength", "BitWithoutLength", "Character", "ConstCharacter",
  "CharacterWithLength", "CharacterWithoutLength", "character",
  "opt_varying", "ConstDatetime", "ConstInterval", "opt_timezone",
  "year_keyword", "month_keyword", "day_keyword", "hour_keyword",
  "minute_keyword", "second_keyword", "millisecond_keyword",
  "microsecond_keyword", "opt_interval", "a_expr", "b_expr", "c_expr",
  "func_application", "func_expr", "func_expr_windowless",
  "func_expr_common_subexpr", "within_group_clause", "filter_clause",
  "export_clause", "window_clause", "window_definition_list",
  "window_definition", "over_clause", "window_specification",
  "opt_existing_window_name", "opt_partition_clause", "opt_frame_clause",
  "frame_extent", "frame_bound", "qualified_row", "row", "dict_arg",
  "dict_arguments", "sub_type", "all_Op", "MathOp", "qual_Op",
  "qual_all_Op", "subquery_Op", "any_operator", "expr_list",
  "opt_expr_list", "func_arg_list", "func_arg_expr", "type_list",
  "extract_list", "extract_arg", "overlay_list", "overlay_placing",
  "position_list", "substr_list", "substr_from", "substr_for", "trim_list",
  "in_expr", "case_expr", "when_clause_list", "when_clause",
  "case_default", "case_arg", "columnref", "indirection_el",
  "opt_slice_bound", "indirection", "opt_indirection", "opt_asymmetric",
  "opt_target_list", "target_list", "target_el", "except_list",
  "opt_except_list", "replace_list_el", "replace_list", "opt_replace_list",
  "qualified_name_list", "qualified_name", "name_list", "name",
  "attr_name", "func_name", "AexprConst", "Iconst", "Sconst", "ColId",
  "ColIdOrString", "type_function_name", "function_name_token",
  "type_name_token", "any_name", "attrs", "opt_name_list", "param_name",
  "ColLabel", "ColLabelOrString", "PrepareStmt", "prep_type_clause",
  "PreparableStmt", "CreateSchemaStmt", "OptSchemaEltList", "schema_stmt",
  "IndexStmt", "access_method", "access_method_clause", "opt_concurrently",
  "opt_index_name", "opt_reloptions", "opt_unique",
  "AlterObjectSchemaStmt", "CheckPointStmt", "ExportStmt", "ImportStmt",
  "ExplainStmt", "opt_verbose", "explain_option_arg", "ExplainableStmt",
  "NonReservedWord", "NonReservedWord_or_Sconst", "explain_option_list",
  "analyze_keyword", "opt_boolean_or_string", "explain_option_elem",
  "explain_option_name", "VariableSetStmt", "set_rest", "generic_set",
  "var_value", "zone_value", "var_list", "LoadStmt", "file_name",
  "VacuumStmt", "vacuum_option_elem", "opt_full", "vacuum_option_list",
  "opt_freeze", "DeleteStmt", "relation_expr_opt_alias",
  "where_or_current_clause", "using_clause", "AnalyzeStmt",
  "VariableResetStmt", "generic_reset", "reset_rest", "VariableShowStmt",
  "show_or_describe", "var_name", "CallStmt", "ViewStmt",
  "opt_check_option", "CreateAsStmt", "opt_with_data", "create_as_target",
  "unreserved_keyword", "col_name_keyword", "func_name_keyword",
  "type_name_keyword", "other_keyword", "type_func_name_keyword",
  "reserved_keyword", 0
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[YYLEX-NUM] -- Internal token number corresponding to
   token YYLEX-NUM.  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,    60,    62,    61,   737,    43,    45,    42,    47,
      37,    94,   738,    91,    93,    40,    41,    46,    59,    44,
     123,   125,    35,    63,    58
};
# endif

/* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   505,   506,   507,   507,   508,   508,   508,   508,   508,
     508,   508,   508,   508,   508,   508,   508,   508,   508,   508,
     508,   508,   508,   508,   508,   508,   508,   508,   508,   508,
     508,   508,   508,   508,   508,   508,   508,   508,   508,   508,
     509,   509,   509,   509,   509,   509,   509,   509,   510,   510,
     511,   511,   512,   512,   512,   512,   513,   513,   514,   514,
     514,   514,   514,   514,   514,   514,   514,   514,   514,   514,
     514,   514,   514,   514,   514,   514,   514,   514,   514,   514,
     514,   514,   514,   514,   514,   514,   514,   515,   515,   516,
     516,   516,   516,   517,   517,   518,   519,   519,   519,   520,
     520,   520,   520,   521,   522,   522,   523,   523,   524,   524,
     524,   524,   524,   524,   524,   524,   524,   524,   524,   524,
     524,   525,   525,   526,   527,   527,   527,   527,   527,   528,
     528,   529,   529,   529,   530,   530,   531,   532,   532,   533,
     533,   533,   534,   534,   534,   535,   535,   536,   536,   537,
     537,   538,   538,   539,   539,   540,   540,   541,   541,   542,
     542,   543,   544,   544,   544,   545,   545,   546,   546,   547,
     547,   547,   548,   548,   549,   549,   550,   550,   551,   551,
     551,   552,   552,   552,   552,   553,   553,   553,   553,   553,
     553,   553,   553,   553,   553,   553,   553,   553,   553,   554,
     554,   555,   555,   555,   556,   556,   556,   556,   556,   556,
     557,   557,   557,   558,   558,   558,   559,   559,   560,   560,
     560,   560,   560,   560,   561,   561,   562,   563,   563,   563,
     563,   563,   564,   564,   564,   564,   565,   565,   565,   565,
     565,   565,   565,   565,   565,   566,   567,   568,   568,   568,
     568,   568,   569,   569,   570,   570,   570,   570,   571,   572,
     572,   573,   573,   574,   574,   574,   574,   574,   574,   574,
     574,   575,   575,   576,   577,   577,   577,   577,   578,   578,
     578,   578,   579,   580,   580,   580,   581,   582,   582,   582,
     582,   582,   582,   583,   584,   584,   585,   585,   586,   587,
     587,   587,   588,   588,   589,   589,   590,   590,   591,   592,
     592,   593,   593,   594,   595,   595,   595,   595,   596,   596,
     597,   597,   597,   598,   598,   598,   598,   598,   598,   599,
     599,   600,   600,   600,   600,   601,   602,   602,   602,   602,
     602,   602,   602,   602,   603,   603,   604,   604,   604,   604,
     604,   604,   604,   604,   605,   605,   605,   605,   605,   605,
     605,   605,   605,   605,   605,   605,   605,   605,   605,   606,
     606,   606,   606,   606,   606,   606,   607,   607,   608,   608,
     608,   609,   609,   609,   610,   610,   611,   612,   612,   613,
     613,   614,   615,   615,   616,   616,   617,   617,   618,   618,
     619,   619,   620,   620,   621,   621,   622,   622,   623,   623,
     623,   623,   623,   624,   625,   625,   626,   626,   627,   627,
     628,   628,   628,   628,   628,   628,   628,   628,   628,   628,
     628,   628,   628,   628,   629,   630,   630,   630,   631,   631,
     632,   632,   633,   633,   634,   634,   634,   634,   634,   634,
     634,   634,   635,   635,   636,   636,   636,   636,   636,   636,
     636,   637,   637,   637,   638,   638,   639,   640,   640,   641,
     641,   641,   641,   641,   641,   641,   641,   641,   642,   642,
     643,   643,   643,   644,   644,   645,   645,   646,   646,   646,
     647,   647,   648,   648,   648,   649,   649,   650,   650,   651,
     651,   651,   652,   652,   652,   653,   653,   653,   653,   654,
     654,   655,   655,   655,   655,   656,   656,   657,   657,   657,
     657,   657,   657,   658,   658,   659,   659,   660,   660,   660,
     660,   661,   662,   662,   663,   663,   664,   664,   664,   664,
     664,   665,   666,   666,   666,   667,   667,   668,   668,   669,
     669,   670,   670,   670,   670,   671,   671,   672,   672,   672,
     672,   672,   673,   674,   675,   676,   677,   677,   678,   678,
     679,   679,   680,   680,   681,   681,   682,   682,   683,   684,
     684,   684,   684,   685,   685,   686,   686,   686,   687,   687,
     688,   688,   689,   689,   690,   690,   690,   690,   690,   690,
     690,   691,   691,   691,   691,   691,   691,   692,   692,   692,
     692,   693,   693,   694,   694,   694,   694,   694,   695,   695,
     695,   695,   696,   696,   697,   697,   698,   698,   698,   698,
     699,   699,   700,   701,   701,   702,   702,   703,   703,   704,
     704,   705,   705,   706,   707,   707,   708,   708,   709,   709,
     710,   710,   710,   710,   710,   710,   710,   710,   711,   711,
     711,   712,   712,   712,   712,   712,   712,   712,   713,   713,
     713,   713,   714,   715,   715,   716,   716,   716,   716,   716,
     716,   716,   716,   716,   716,   716,   717,   717,   718,   718,
     719,   719,   720,   721,   722,   722,   723,   723,   724,   725,
     726,   726,   726,   726,   726,   726,   727,   727,   728,   728,
     728,   728,   729,   730,   730,   730,   731,   731,   732,   732,
     733,   733,   734,   734,   735,   735,   736,   736,   737,   737,
     738,   738,   739,   739,   739,   739,   739,   739,   739,   739,
     739,   739,   739,   739,   739,   739,   739,   739,   740,   740,
     740,   740,   740,   740,   740,   740,   740,   740,   740,   740,
     740,   740,   740,   740,   740,   740,   740,   740,   740,   740,
     740,   740,   740,   740,   740,   740,   740,   740,   740,   740,
     740,   740,   740,   740,   740,   740,   740,   740,   740,   740,
     740,   740,   740,   740,   740,   740,   740,   740,   740,   740,
     740,   740,   740,   740,   740,   740,   740,   740,   740,   740,
     740,   740,   740,   740,   740,   740,   741,   741,   741,   741,
     741,   741,   741,   741,   741,   741,   741,   741,   741,   741,
     741,   741,   741,   741,   741,   741,   741,   741,   741,   742,
     742,   742,   742,   742,   742,   742,   742,   742,   742,   742,
     742,   743,   743,   743,   743,   743,   743,   743,   744,   744,
     745,   745,   746,   746,   746,   746,   746,   746,   746,   746,
     746,   746,   746,   746,   746,   746,   746,   746,   746,   746,
     746,   746,   746,   746,   746,   746,   746,   746,   746,   746,
     746,   747,   747,   748,   748,   749,   749,   750,   750,   751,
     751,   752,   753,   753,   753,   754,   755,   755,   756,   756,
     757,   757,   757,   758,   758,   759,   759,   759,   759,   759,
     760,   760,   761,   761,   762,   763,   763,   764,   764,   764,
     765,   765,   766,   766,   766,   766,   766,   766,   766,   766,
     766,   766,   766,   766,   767,   767,   768,   768,   769,   769,
     769,   769,   769,   769,   769,   769,   770,   770,   771,   771,
     772,   772,   773,   773,   774,   774,   774,   775,   775,   776,
     776,   777,   777,   777,   777,   777,   777,   777,   777,   777,
     777,   778,   778,   779,   780,   780,   781,   781,   781,   781,
     781,   781,   782,   783,   784,   784,   784,   785,   785,   786,
     787,   787,   788,   789,   789,   790,   790,   791,   791,   792,
     792,   792,   793,   793,   794,   794,   795,   795,   796,   796,
     797,   797,   798,   798,   799,   799,   799,   799,   799,   800,
     800,   801,   801,   802,   803,   803,   804,   804,   804,   805,
     805,   806,   806,   807,   807,   808,   809,   810,   810,   811,
     811,   811,   811,   811,   811,   811,   811,   811,   811,   811,
     811,   811,   811,   812,   813,   814,   814,   814,   815,   815,
     816,   816,   816,   817,   817,   817,   818,   818,   818,   819,
     819,   820,   820,   821,   821,   822,   823,   823,   823,   823,
     824,   824,   825,   826,   826,   827,   827,   827,   827,   828,
     828,   829,   829,   830,   830,   830,   830,   831,   831,   832,
     833,   833,   834,   834,   835,   835,   836,   836,   837,   837,
     838,   838,   838,   838,   838,   838,   839,   839,   840,   841,
     842,   842,   842,   842,   843,   843,   844,   844,   844,   845,
     845,   845,   845,   845,   846,   846,   846,   847,   847,   848,
     848,   849,   849,   850,   850,   850,   850,   851,   852,   852,
     853,   853,   853,   853,   854,   854,   854,   854,   855,   855,
     855,   855,   856,   856,   857,   857,   857,   857,   857,   857,
     857,   858,   858,   859,   859,   859,   860,   860,   861,   861,
     861,   861,   861,   862,   862,   862,   862,   862,   863,   863,
     864,   864,   865,   865,   866,   867,   867,   867,   868,   868,
     869,   869,   870,   870,   871,   872,   872,   873,   873,   873,
     874,   874,   874,   874,   874,   874,   874,   875,   875,   876,
     876,   877,   878,   878,   878,   878,   879,   879,   879,   879,
     880,   880,   880,   881,   881,   881,   882,   883,   883,   883,
     883,   883,   883,   883,   883,   883,   883,   883,   883,   883,
     883,   883,   883,   883,   883,   883,   883,   883,   883,   883,
     883,   883,   883,   883,   883,   883,   883,   883,   883,   883,
     883,   883,   883,   883,   883,   883,   883,   883,   883,   883,
     883,   883,   883,   883,   883,   883,   883,   883,   883,   883,
     883,   883,   883,   883,   883,   883,   883,   883,   883,   883,
     883,   883,   883,   883,   883,   883,   883,   883,   883,   883,
     883,   883,   883,   883,   883,   883,   883,   883,   883,   883,
     883,   883,   883,   883,   883,   883,   883,   883,   883,   883,
     883,   883,   883,   883,   883,   883,   883,   883,   883,   883,
     883,   883,   883,   883,   883,   883,   883,   883,   883,   883,
     883,   883,   883,   883,   883,   883,   883,   883,   883,   883,
     883,   883,   883,   883,   883,   883,   883,   883,   883,   883,
     883,   883,   883,   883,   883,   883,   883,   883,   883,   883,
     883,   883,   883,   883,   883,   883,   883,   883,   883,   883,
     883,   883,   883,   883,   883,   883,   883,   883,   883,   883,
     883,   883,   883,   883,   883,   883,   883,   883,   883,   883,
     883,   883,   883,   883,   883,   883,   883,   883,   883,   883,
     883,   883,   883,   883,   883,   883,   883,   883,   883,   883,
     883,   883,   883,   883,   883,   883,   883,   883,   883,   883,
     883,   883,   883,   883,   883,   883,   883,   883,   883,   883,
     883,   883,   883,   883,   883,   883,   883,   883,   883,   883,
     883,   883,   883,   883,   883,   883,   883,   883,   883,   883,
     883,   883,   883,   883,   883,   883,   883,   883,   883,   883,
     883,   883,   883,   883,   883,   883,   883,   883,   883,   883,
     883,   883,   883,   883,   883,   883,   883,   883,   883,   883,
     883,   883,   883,   883,   883,   883,   883,   883,   883,   883,
     883,   883,   883,   883,   883,   883,   883,   883,   883,   883,
     883,   883,   883,   883,   883,   883,   883,   883,   883,   883,
     883,   883,   883,   883,   883,   883,   883,   883,   883,   883,
     883,   883,   883,   884,   884,   884,   884,   884,   884,   884,
     884,   884,   884,   884,   884,   884,   884,   884,   884,   884,
     884,   884,   884,   884,   884,   884,   884,   884,   884,   884,
     884,   884,   884,   884,   884,   884,   884,   884,   884,   884,
     884,   884,   884,   884,   884,   884,   884,   884,   884,   884,
     884,   884,   884,   884,   884,   885,   885,   885,   885,   885,
     885,   885,   885,   885,   885,   885,   885,   885,   885,   885,
     885,   885,   885,   885,   885,   885,   885,   885,   885,   885,
     885,   886,   886,   886,   886,   886,   886,   886,   886,   886,
     886,   886,   886,   886,   886,   886,   886,   886,   886,   886,
     886,   886,   886,   886,   886,   886,   887,   887,   887,   887,
     887,   887,   887,   887,   887,   887,   887,   887,   887,   887,
     887,   887,   887,   887,   887,   887,   887,   887,   887,   887,
     887,   887,   887,   887,   887,   887,   887,   887,   887,   887,
     887,   887,   887,   887,   887,   887,   887,   887,   887,   887,
     887,   887,   887,   887,   887,   887,   887,   887,   888,   888,
     888,   888,   888,   888,   888,   888,   888,   888,   888,   888,
     888,   888,   888,   888,   888,   888,   888,   888,   888,   888,
     888,   888,   888,   888,   888,   889,   889,   889,   889,   889,
     889,   889,   889,   889,   889,   889,   889,   889,   889,   889,
     889,   889,   889,   889,   889,   889,   889,   889,   889,   889,
     889,   889,   889,   889,   889,   889,   889,   889,   889,   889,
     889,   889,   889,   889,   889,   889,   889,   889,   889,   889,
     889,   889,   889,   889,   889,   889,   889,   889,   889,   889,
     889,   889,   889,   889,   889,   889,   889,   889,   889,   889,
     889,   889,   889,   889,   889,   889,   889,   889,   889,   889,
     889,   889,   889
};

/* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     0,
       4,     6,     4,     6,     4,     6,     4,     6,     1,     2,
       3,     2,     1,     3,     2,     3,     1,     3,     2,     5,
       3,     6,     4,     6,     6,     6,     5,     5,     6,     9,
       4,     5,     7,     6,     4,     8,     4,     2,     4,     3,
       6,     4,     2,     2,     2,     2,     1,     2,     0,     1,
       2,     2,     2,     1,     3,     4,     2,     1,     0,     2,
       3,     2,     3,     8,     1,     0,     1,     3,     6,     6,
       8,     6,     8,     6,     8,     6,     8,     8,    10,     8,
      10,     1,     0,     7,     1,     4,     4,     7,     2,     1,
       3,     4,     3,     0,     1,     0,     2,     3,     5,     8,
       5,     0,     5,     5,     7,     2,     0,     1,     1,     1,
       3,     2,     0,     1,     0,     1,     3,     1,     3,     1,
       3,     2,     2,     4,     5,     5,     8,     1,     0,     3,
       9,    12,     3,     0,     4,     6,     1,     2,     1,     1,
       0,     1,     2,     2,     1,     2,     2,     1,     2,     3,
       2,     2,     2,     2,     3,     3,     3,     1,     3,     1,
       0,     1,     2,     2,     2,     2,     2,     2,     2,     2,
       1,     1,     0,     9,    12,    11,     0,     2,     1,     1,
       1,     1,     1,     1,     3,     0,     1,     2,     1,     1,
       2,     2,     3,     1,     1,     2,     2,     1,     2,     3,
       5,     3,     2,     5,     5,     2,     3,     1,     1,     2,
       2,     0,     4,     0,     3,     4,     4,     0,     3,     2,
       0,     3,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     3,     3,     1,     2,     2,     2,     2,     2,
       2,     0,     3,     3,     3,     0,     1,     2,     1,     2,
       2,     2,     2,     4,     1,     3,     1,     3,     1,     1,
       1,     1,     3,     1,     2,     0,     1,     0,     1,     3,
       0,     2,     0,     3,     3,     1,     5,     3,     1,     3,
       1,     4,     5,     5,     6,     3,     7,     4,    11,     1,
       3,     2,     2,     2,     0,     3,     1,     1,     2,     2,
       2,     2,     1,     0,     1,     2,     6,     4,     6,     4,
       6,     8,     4,     6,     1,     1,     1,     1,     1,     2,
       1,     2,     1,     1,     1,     3,     3,     3,     3,     2,
       2,     1,     3,     1,     1,     1,     1,     3,     1,     1,
       0,     1,     1,     1,     1,     3,     6,     1,     1,     2,
       3,     8,    11,     9,     1,     1,     3,     0,     1,     3,
       1,     0,     1,     0,     1,     0,     1,     3,     1,     1,
       1,     3,     0,     2,     2,     0,     2,     0,     1,     0,
       1,     1,     1,     3,     3,     1,     1,     3,     3,     3,
       3,     4,     3,     2,     1,     1,     1,     1,     1,     3,
       1,     1,     3,     3,     1,     2,     4,     4,     2,     3,
       5,     5,     1,     1,    11,    11,     1,     2,     4,     4,
       4,     2,     2,     3,     1,     3,     6,     2,     0,     3,
       3,     4,     4,     4,     4,     3,     2,     1,     1,     0,
       1,     1,     0,     1,     5,     1,     0,     2,     2,     0,
       1,     0,     3,     5,     5,     1,     3,     4,     3,     1,
       1,     0,     2,     2,     0,     2,     2,     1,     1,     1,
       0,     2,     4,     5,     4,     2,     3,     2,     2,     2,
       2,     1,     2,     3,     0,     1,     0,     5,     1,     4,
       6,     2,     1,     0,     4,     0,     1,     1,     2,     2,
       2,     1,     1,     2,     2,     1,     1,     1,     1,     1,
       1,     3,     3,     3,     0,     1,     3,     1,     1,     1,
       1,     1,     2,     4,     4,     5,     1,     1,     2,     0,
       2,     0,     1,     3,     1,     0,     1,     2,     3,     2,
       4,     2,     3,     2,     0,     1,     2,     0,     4,     5,
       2,     0,     1,     3,     3,     3,     3,     3,     3,     1,
       4,     3,     4,     5,     4,     5,     4,     5,     2,     4,
       1,     1,     0,     1,     4,     5,     4,     0,     2,     2,
       2,     1,     1,     0,     4,     2,     1,     2,     2,     4,
       2,     6,     2,     1,     3,     4,     0,     2,     0,     2,
       0,     1,     3,     3,     2,     0,     2,     4,     1,     1,
       2,     3,     5,     6,     2,     3,     5,     5,     3,     4,
       0,     1,     1,     1,     1,     1,     2,     4,     1,     1,
       1,     1,     2,     3,     0,     1,     1,     1,     1,     1,
       2,     2,     2,     2,     2,     1,     3,     0,     1,     1,
       1,     1,     5,     2,     1,     1,     1,     1,     4,     1,
       2,     2,     1,     3,     3,     2,     1,     0,     5,     2,
       5,     2,     1,     3,     3,     0,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       3,     3,     3,     3,     3,     3,     3,     0,     1,     3,
       3,     5,     2,     2,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     2,     2,     3,
       3,     2,     2,     3,     3,     5,     4,     6,     3,     5,
       4,     6,     4,     6,     5,     7,     3,     2,     4,     3,
       2,     1,     3,     3,     3,     3,     3,     4,     3,     4,
       3,     4,     5,     6,     6,     7,     6,     7,     6,     7,
       3,     4,     4,     6,     1,     4,     1,     3,     2,     2,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     2,     2,     5,     6,     6,     7,     1,
       1,     2,     2,     2,     4,     1,     2,     1,     2,     2,
       4,     3,     6,     7,     9,     7,     7,     4,     5,     1,
       1,     1,     5,     1,     1,     4,     1,     4,     1,     4,
       1,     4,     1,     1,     1,     1,     1,     1,     6,     6,
       4,     4,     4,     4,     6,     5,     5,     5,     4,     6,
       4,     5,     0,     5,     0,     1,     0,     2,     0,     1,
       3,     3,     2,     2,     0,     6,     1,     0,     3,     0,
       2,     2,     0,     1,     4,     2,     2,     2,     2,     2,
       4,     3,     1,     5,     3,     1,     3,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     4,     1,     4,     1,     4,
       1,     2,     1,     2,     1,     2,     1,     3,     1,     3,
       1,     0,     1,     3,     1,     3,     3,     1,     3,     3,
       0,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     4,     3,     2,     3,     0,     3,     3,     2,     2,
       1,     0,     2,     2,     3,     2,     1,     1,     3,     5,
       1,     2,     4,     2,     0,     1,     0,     1,     2,     2,
       3,     5,     1,     0,     1,     2,     0,     2,     1,     0,
       1,     0,     1,     3,     3,     2,     1,     3,     5,     4,
       2,     1,     0,     3,     1,     3,     4,     2,     0,     1,
       3,     1,     2,     1,     3,     1,     1,     1,     2,     1,
       1,     2,     1,     1,     2,     7,     2,     5,     3,     3,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       2,     2,     3,     3,     0,     1,     1,     1,     1,     1,
       1,     1,     5,     3,     0,     1,     1,     1,     1,     4,
       7,     2,     0,     1,     1,     1,     1,    13,    16,     1,
       2,     0,     1,     0,     1,     0,     2,     0,     1,     0,
       6,     8,     6,     8,     6,     8,     2,     1,     4,     3,
       2,     4,     3,     5,     1,     0,     1,     1,     0,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       3,     1,     1,     1,     1,     1,     1,     2,     1,     1,
       2,     3,     3,     3,     1,     3,     3,     2,     3,     3,
       3,     3,     1,     1,     1,     1,     3,     5,     1,     1,
       1,     1,     3,     2,     2,     3,     1,     1,     4,     5,
       5,     4,     6,     1,     1,     1,     1,     1,     1,     0,
       1,     3,     1,     0,     7,     1,     2,     3,     2,     0,
       2,     0,     2,     4,     2,     1,     1,     1,     2,     3,
       2,     2,     2,     2,     3,     4,     2,     1,     1,     1,
       3,     2,     9,    11,    12,    14,     3,     4,     4,     0,
       7,    10,     9,     2,     3,     0,     4,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1
};

/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
   means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
     135,   212,     0,  1152,  1151,   212,     0,  1127,   212,   419,
     343,     0,  1228,     0,   212,     0,   135,     0,     0,     0,
       0,     0,     0,     0,     0,   212,   486,     0,  1227,   212,
       0,     0,  1199,     0,     0,     0,     0,     0,     2,     4,
       7,    18,    13,    30,    26,     0,    28,    16,    21,     6,
      32,    17,    20,    14,    33,    11,    31,   453,   440,   491,
     452,   134,   456,    29,    15,    25,     5,    10,    23,    24,
      22,  1135,    36,    27,    34,    19,     8,    35,    37,     0,
       9,    38,    12,   211,   210,   204,     0,     0,     0,     0,
       0,   205,  1065,  1247,  1248,  1249,  1250,  1251,  1252,  1253,
    1254,  1255,  1256,  1257,  1258,  1259,  1260,  1261,  1262,  1605,
    1263,  1264,  1265,  1553,  1554,  1606,  1555,  1556,  1266,  1267,
    1268,  1269,  1270,  1271,  1272,  1273,  1557,  1558,  1274,  1275,
    1276,  1277,  1278,  1559,  1607,  1279,  1280,  1281,  1282,  1283,
    1284,  1608,  1285,  1286,  1287,  1288,  1289,  1290,  1291,  1292,
    1293,  1609,  1294,  1295,  1296,  1610,  1297,  1298,  1299,  1300,
    1301,  1302,  1303,  1560,  1561,  1304,  1305,  1306,  1307,  1308,
    1309,  1310,  1311,  1312,  1313,  1314,  1315,  1316,  1317,  1318,
    1319,  1320,  1321,  1322,  1323,  1324,  1325,  1326,  1327,  1328,
    1329,  1330,  1331,  1562,  1332,  1333,  1334,  1335,  1336,  1563,
    1337,  1338,  1339,  1564,  1340,  1341,  1342,  1611,  1612,  1343,
    1344,  1345,  1613,  1346,  1347,  1565,  1566,  1348,  1349,  1350,
    1351,  1352,  1353,  1354,  1355,  1614,  1356,  1357,  1358,  1359,
    1360,  1361,  1362,  1363,  1364,  1365,  1366,  1615,  1567,  1367,
    1368,  1369,  1370,  1371,  1568,  1569,  1570,  1372,  1616,  1617,
    1373,  1618,  1374,  1375,  1376,  1377,  1378,  1379,  1380,  1619,
    1381,  1620,  1382,  1383,  1384,  1385,  1386,  1387,  1388,  1389,
    1571,  1390,  1391,  1392,  1393,  1394,  1395,  1396,  1397,  1398,
    1399,  1400,  1401,  1402,  1403,  1404,  1405,  1406,  1407,  1572,
    1622,  1573,  1408,  1409,  1410,  1574,  1411,  1412,  1623,  1413,
    1575,  1414,  1576,  1415,  1416,  1417,  1418,  1419,  1420,  1421,
    1422,  1423,  1577,  1624,  1424,  1625,  1578,  1425,  1426,  1427,
    1428,  1429,  1430,  1431,  1432,  1433,  1434,  1435,  1436,  1579,
    1437,  1438,  1580,  1439,  1440,  1441,  1442,  1443,  1444,  1445,
    1446,  1447,  1448,  1449,  1450,  1581,  1451,  1452,  1453,  1454,
    1455,  1456,  1457,  1458,  1459,  1460,  1461,  1462,  1463,  1464,
    1465,  1466,  1467,  1468,  1469,  1626,  1470,  1471,  1472,  1582,
    1473,  1474,  1475,  1476,  1477,  1478,  1479,  1480,  1481,  1482,
    1483,  1484,  1485,  1486,  1487,  1488,  1489,  1583,  1490,  1491,
    1492,  1627,  1493,  1494,  1584,  1495,  1496,  1497,  1498,  1499,
    1500,  1501,  1502,  1503,  1504,  1505,  1506,  1585,  1507,  1586,
    1508,  1509,  1510,  1511,  1629,  1512,  1513,  1514,  1515,  1516,
    1587,  1588,  1517,  1518,  1589,  1519,  1590,  1520,  1521,  1591,
    1522,  1523,  1524,  1525,  1526,  1527,  1528,  1529,  1530,  1531,
    1532,  1533,  1534,  1535,  1536,  1592,  1593,  1537,  1630,  1538,
    1539,  1540,  1541,  1542,  1543,  1544,  1545,  1546,  1547,  1548,
    1594,  1595,  1596,  1597,  1598,  1599,  1600,  1601,  1602,  1603,
    1604,  1549,  1550,  1551,  1552,  1231,     0,     0,  1047,  1066,
    1067,  1075,   207,   418,   135,     0,   387,     0,     0,   388,
       0,     0,   337,   336,     0,  1118,   342,     0,     0,     0,
    1065,   101,  1571,  1439,  1585,    99,  1045,  1066,     0,   362,
     363,     0,   371,     0,   356,   360,   357,     0,   381,   373,
     382,   374,   355,   375,   364,   354,     0,   383,     0,   358,
       0,     0,     0,   208,   173,   343,   135,     0,  1140,  1141,
    1139,  1130,  1135,  1142,  1143,     0,  1126,     0,     0,  1064,
    1186,  1187,  1184,  1183,   162,  1094,  1216,  1587,  1517,  1229,
    1217,  1214,  1215,   209,   485,   483,     0,  1021,  1346,  1384,
    1477,  1488,  1587,  1160,  1164,     0,   206,  1592,  1221,     0,
    1222,  1069,     0,   457,   626,  1068,  1041,  1198,     0,  1203,
       0,  1453,   461,   464,  1084,   462,   453,     0,     1,   135,
       0,     0,     0,   482,   482,     0,   482,     0,   445,   453,
     448,   452,     0,  1134,  1212,  1226,  1587,  1517,  1220,  1223,
    1354,     0,     0,  1354,     0,  1354,     0,  1354,     0,     0,
    1013,     0,  1014,  1048,  1096,  1097,  1095,     0,  1098,   310,
     341,   340,   339,   338,   343,  1354,  1102,  1079,     0,     0,
       0,     0,     0,     0,  1113,   102,   100,   369,   370,     0,
     361,   359,     0,  1076,  1631,   678,  1632,   707,   685,   707,
     707,  1633,  1634,  1635,  1636,   674,   674,  1319,   687,  1637,
    1638,  1639,  1354,  1640,  1641,   675,   676,   712,  1642,  1643,
    1644,  1645,  1646,     0,     0,  1647,   707,  1648,   674,  1649,
    1650,   679,  1651,   648,     0,  1652,   677,   649,  1653,   715,
     715,  1654,   702,  1655,   380,     0,   384,   660,   661,   662,
     663,   688,   689,   664,   694,   695,   699,   665,   747,   674,
    1077,  1078,  1354,   380,   376,  1354,   380,  1043,  1354,     0,
       0,   169,     0,     0,  1132,  1144,  1656,  1657,  1658,  1659,
    1661,  1660,  1662,  1663,  1664,  1665,  1666,  1667,  1668,  1669,
    1670,  1673,  1671,  1672,  1674,  1675,  1676,  1677,  1678,  1679,
    1680,  1681,  1682,  1683,  1684,  1685,  1686,  1687,  1688,  1689,
    1690,  1691,  1692,  1693,  1694,  1695,  1696,  1697,  1698,  1699,
    1700,  1701,  1702,  1703,  1704,  1705,  1706,  1707,  1158,     0,
    1159,  1149,  1138,  1145,  1146,   135,   417,  1185,  1129,     0,
       0,     0,     0,  1218,     0,     0,     0,  1050,  1052,  1053,
     944,  1063,  1016,     0,  1554,  1555,  1556,  1006,     0,  1557,
    1558,  1559,  1607,   876,   863,   872,   877,   864,   866,   873,
    1560,  1561,   814,  1562,  1563,  1061,  1564,  1565,  1566,  1568,
    1569,  1570,   868,   870,  1572,  1573,     0,  1062,  1575,  1576,
    1420,  1578,  1579,  1581,  1582,   874,  1584,  1586,  1587,  1588,
    1589,  1590,  1060,  1591,   875,  1593,     0,     0,     0,  1032,
     961,     0,     0,     0,  1016,   847,     0,     0,   668,   669,
     690,   691,   670,   696,   697,   671,     0,  1026,   748,   892,
    1016,   859,   922,   791,     0,   845,   839,   468,  1022,     0,
     840,  1049,  1016,  1007,   468,  1020,  1163,  1161,  1167,  1162,
       0,     0,     0,     0,     0,   628,   627,  1042,  1197,  1195,
    1196,  1194,  1193,  1200,     0,  1202,  1135,   958,     0,  1007,
     463,     0,     0,     0,   443,   442,     3,     0,     0,  1205,
       0,   480,   481,     0,     0,     0,     0,     0,     0,     0,
       0,   575,   507,   508,   510,   572,   576,   584,     0,   449,
       0,  1084,  1224,     0,     0,     0,   122,   122,     0,     0,
       0,     0,     0,    93,    42,    86,     0,     0,     0,     0,
     187,   200,     0,     0,     0,     0,     0,   197,     0,     0,
     180,    44,   174,   176,     0,   122,     0,    40,     0,     0,
       0,    46,  1065,     0,  1605,  1606,  1607,  1608,  1609,   877,
       0,  1611,  1612,  1613,  1614,  1615,  1616,  1617,  1618,  1619,
    1620,  1571,  1622,  1623,  1624,  1625,  1626,  1627,  1585,  1629,
    1591,     0,  1630,     0,   851,   964,   491,   962,  1085,     0,
    1066,  1072,  1012,     0,  1086,  1735,  1736,  1737,  1738,  1739,
    1740,  1741,  1742,  1743,  1744,  1745,  1746,  1747,  1748,  1749,
    1750,  1751,  1752,  1753,  1754,  1755,  1756,  1757,  1758,  1759,
    1760,  1761,  1762,  1763,  1764,  1765,  1766,  1767,  1768,  1769,
    1770,  1771,  1772,  1773,  1774,  1775,  1776,  1777,  1778,  1779,
    1780,  1781,  1782,  1783,  1784,  1785,  1786,  1787,  1788,  1789,
    1790,  1791,  1792,  1793,  1794,  1795,  1796,  1797,  1798,  1799,
    1800,  1801,  1802,  1803,  1804,  1805,  1806,  1807,  1695,  1808,
    1809,  1810,  1811,  1812,  1009,  1046,  1088,  1087,  1089,  1015,
       0,     0,   415,     0,     0,  1099,     0,  1080,     0,     0,
    1354,   168,  1354,   310,     0,   310,     0,     0,  1112,  1115,
     372,   368,   366,   365,   367,   706,   693,   701,   700,     0,
     683,   682,   681,     0,   680,     0,     0,   707,   707,   705,
     684,   660,     0,     0,     0,   711,     0,   709,   378,   379,
       0,   352,     0,   654,   650,     0,   720,   721,   722,   723,
     730,   731,   728,   729,   724,   725,   718,   719,   726,   727,
     716,   717,     0,   732,   733,   734,   735,   736,   737,   738,
     739,   666,   672,     0,     0,   347,     0,     0,   349,     0,
       0,     0,   343,     0,   135,     0,   181,  1154,  1155,  1153,
       0,     0,  1137,   184,   201,  1148,  1157,  1147,  1156,  1136,
    1131,     0,  1128,   406,  1173,  1172,  1181,   163,     0,   967,
       0,   135,  1219,  1230,     0,   843,   961,  1005,     0,     0,
       0,     0,     0,     0,   849,   970,     0,     0,   771,     0,
       0,     0,   985,     0,   991,     0,     0,     0,   772,   752,
     753,     0,  1031,  1038,   960,     0,   847,   958,     0,   925,
       0,  1068,     0,   841,   842,   848,     0,  1056,     0,   747,
     747,  1025,   944,     0,     0,   941,   942,   943,     0,     0,
       0,  1019,     0,   952,   954,     0,     0,   787,   950,     0,
     790,     0,     0,     0,     0,   938,   939,   940,   932,   933,
     934,   935,   936,   937,   948,   931,   768,     0,     0,   894,
     846,     0,   767,     0,     0,   591,     0,  1054,  1051,     0,
    1008,   591,  1175,  1179,  1180,  1178,     0,  1174,  1166,  1165,
    1170,  1168,  1171,  1169,     0,  1191,     0,  1188,   588,     0,
     465,     0,     0,  1211,     0,   129,     0,  1206,     0,   460,
     459,   501,   501,   492,   495,   501,   458,   549,   550,     0,
       0,     0,     0,   581,   579,  1050,  1063,   537,   511,   536,
       0,     0,   515,     0,   541,   748,   574,   447,   505,   506,
     509,   446,     0,   577,     0,   587,   575,   510,     0,  1213,
    1225,     0,     0,     0,     0,     0,  1354,     0,     0,    77,
      58,   262,     0,   121,     0,     0,     0,     0,     0,     0,
       0,    85,    82,    83,    84,     0,     0,     0,     0,   185,
     186,   199,     0,   190,   191,   188,   192,   193,     0,     0,
     178,   179,     0,     0,     0,     0,   177,     0,     0,     0,
       0,     0,     0,     0,     0,   491,   491,   491,   857,     0,
     489,   490,     0,     0,  1010,  1013,   405,   318,     0,   308,
       0,     0,     0,     0,     0,     0,   343,  1105,  1103,  1101,
    1104,  1106,  1081,     0,     0,     0,     0,   165,   167,     0,
     307,   281,     0,  1117,   389,     0,     0,  1354,  1114,   298,
       0,     0,     0,     0,   380,     0,   704,   703,   655,   651,
       0,     0,     0,     0,   385,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   380,   377,   380,  1044,     0,
     380,   172,     0,  1354,   310,     0,  1133,  1150,   182,   202,
     183,   203,   438,     0,   412,   420,   425,   403,     0,   403,
       0,   422,   426,   403,   421,   403,   416,     0,   164,     0,
    1093,     0,  1092,     0,  1017,     0,     0,  1004,  1000,     0,
       0,     0,     0,     0,   971,   972,   973,   974,   975,   976,
     977,   978,   979,     0,     0,   980,     0,     0,     0,   930,
     941,   942,   943,   938,   939,   940,   932,   933,   934,   935,
     936,   937,   956,     0,     0,     0,     0,     0,     0,     0,
       0,   816,     0,     0,   921,     0,   958,   990,     0,     0,
       0,     0,     0,     0,   958,   996,     0,     0,     0,  1030,
       0,  1027,   793,  1016,     0,     0,   792,     0,     0,     0,
    1058,  1059,   749,   794,   763,   764,   765,   769,  1091,  1090,
    1024,     0,  1018,     0,     0,   750,   773,   778,     0,   997,
     810,     0,   798,     0,   786,     0,   796,   800,   774,   789,
       0,   770,     0,  1019,   953,   955,     0,   951,     0,   760,
     761,   762,   754,   755,   756,   757,   758,   759,   766,   929,
     927,   928,     0,     0,     0,   896,     0,     0,   795,  1346,
    1384,     0,   479,   479,   479,   467,   477,  1023,     0,   640,
     491,  1032,   640,     0,   747,   629,  1084,  1201,  1189,  1190,
     959,  1083,   135,     0,  1209,     0,     0,     0,   141,   124,
       0,  1207,     0,   157,   591,     0,  1016,   499,   500,   504,
     504,     0,     0,   504,  1582,  1473,     0,     0,     0,     0,
     542,   582,     0,   573,   539,   540,     0,   538,  1050,   543,
    1049,   544,   547,   548,   516,   583,  1039,   585,     0,   578,
     451,   450,   589,     0,    43,     0,  1354,    60,     0,     0,
       0,     0,     0,     0,   216,   253,   216,    98,  1354,   380,
    1354,   380,  1251,  1320,  1489,     0,    56,    89,     0,   286,
     115,     0,   271,   315,    79,    94,   108,     0,     0,    45,
     175,   189,   194,   111,   198,   195,  1122,   196,   122,     0,
      41,     0,   109,     0,  1120,     0,     0,    47,   113,  1124,
     489,   489,   489,     0,   963,     0,     0,     0,   965,   966,
    1012,     0,   404,     0,   309,     0,   414,   394,   395,   405,
       0,   310,     0,   310,  1102,     0,     0,  1082,   105,     0,
       0,     0,     0,   301,   299,   329,     0,   306,   300,   308,
       0,     0,   257,     0,  1245,     0,     0,   390,   386,     0,
       0,     0,   673,   686,   353,   660,     0,   714,   713,   715,
     715,   660,     0,   646,     0,   658,     0,   698,   667,   740,
     741,   742,   743,   744,   745,   746,   346,   348,     0,   350,
       0,     0,     0,   407,     0,   410,     0,   409,   413,   408,
     402,     0,   433,     0,     0,     0,     0,     0,     0,  1182,
     968,   484,   815,     0,     0,  1001,     0,     0,   890,     0,
     865,   867,   880,     0,   869,   871,     0,   945,     0,     0,
       0,   881,   818,   819,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   834,   833,   882,   920,     0,     0,   988,   989,   883,
       0,     0,   995,     0,     0,     0,   888,     0,     0,     0,
       0,  1037,   844,   959,   926,   924,   850,   747,     0,     0,
       0,     0,     0,     0,     0,   799,   788,     0,   797,   801,
       0,     0,     0,   782,     0,     0,   780,   811,   776,     0,
       0,   812,     0,     0,   895,   904,   479,   479,   479,   479,
     476,   478,     0,     0,     0,     0,  1473,     0,   612,   590,
     592,   599,   612,   617,   860,   638,   861,  1068,     0,   554,
     489,  1038,   554,     0,  1176,  1192,     0,  1210,     0,   146,
     128,   148,   147,     0,   155,     0,  1016,     0,   146,   130,
       0,   149,     0,  1209,     0,   161,     0,   493,   494,   496,
       0,   946,   504,   498,   546,   545,     0,   514,   580,   512,
       0,   586,     0,     0,     0,   261,     0,     0,     0,   216,
       0,     0,   325,     0,   312,    78,     0,     0,     0,    52,
      97,    70,    62,    48,    76,     0,     0,    81,     0,    74,
      91,    92,    90,    95,     0,   245,   226,   258,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   491,   487,   488,   852,  1011,   436,
     437,   180,   435,   319,     0,     0,   307,     0,  1117,  1100,
     343,     0,     0,   104,   106,     0,   168,   310,     0,   285,
     281,     0,   279,   278,   280,     0,  1246,   173,     0,  1240,
    1116,     0,     0,  1111,   692,   657,     0,   710,   708,   656,
       0,   652,   659,   380,     0,   439,     0,   398,   434,   423,
     428,     0,   432,   430,   429,   424,   427,     0,  1003,   999,
       0,   862,   969,     0,   957,   983,   982,   817,   829,   830,
     831,   984,     0,     0,     0,   826,   827,   828,   820,   821,
     822,   823,   824,   825,   832,   993,   992,   986,   987,     0,
     885,   886,   887,   994,     0,  1029,   958,  1034,     0,     0,
     923,  1057,   751,     0,     0,   779,   998,   802,     0,     0,
       0,   775,   945,     0,     0,     0,     0,     0,   784,     0,
       0,     0,     0,   858,     0,     0,     0,     0,   470,   469,
     475,   612,   617,     0,   453,     0,   599,     0,   611,   533,
     610,     0,     0,   623,   621,     0,   623,     0,   623,     0,
     533,     0,   613,   533,   610,     0,   630,  1042,   639,     0,
     569,     0,  1028,   569,     0,   466,  1208,     0,  1204,     0,
       0,     0,   136,   133,   123,     0,     0,   158,   146,   137,
     502,   503,     0,   497,   513,  1040,   116,   216,     0,     0,
      59,     0,   327,   273,   305,   288,     0,     0,     0,   217,
       0,   293,     0,    51,    71,     0,    67,     0,    96,     0,
       0,     0,     0,     0,    54,    66,     0,    49,     0,   380,
     380,    57,   272,  1076,  1631,  1632,  1633,  1634,  1635,  1636,
    1637,  1638,  1639,  1640,  1641,  1642,  1643,  1644,  1645,  1646,
    1724,  1647,   223,  1648,  1420,  1649,  1650,  1651,     0,  1652,
     649,  1653,  1654,  1655,   932,   933,   221,   314,   218,   320,
     220,   222,     0,  1077,   219,   317,   112,  1123,     0,   110,
       0,  1121,   119,   117,   114,  1125,   855,   856,   853,   489,
     417,   397,     0,     0,  1245,     0,     0,  1354,     0,   103,
       0,  1117,   166,   307,     0,   335,   257,   330,     0,  1245,
    1243,     0,  1239,     0,     0,     0,   653,   647,   351,     0,
     411,     0,   431,  1002,   878,   889,   981,     0,     0,     0,
       0,   884,   879,  1036,     0,  1033,   808,   806,   803,     0,
     804,   783,     0,     0,   781,   777,     0,   813,   891,     0,
     907,   902,   903,   474,   473,   472,   471,   598,   596,     0,
     601,  1068,   608,   526,   532,   597,     0,   593,     0,   622,
     618,     0,   619,     0,     0,   620,     0,   594,     0,  1068,
     595,     0,   637,     0,     0,   898,   852,   898,  1177,   145,
     125,     0,   126,   156,     0,     0,     0,     0,   150,   391,
       0,   323,    61,     0,   305,     0,   216,   290,   289,   292,
     287,   291,   294,     0,     0,     0,     0,     0,   274,     0,
       0,     0,   237,     0,     0,   305,     0,   311,   233,   234,
     344,     0,     0,     0,    63,    53,    50,    55,    64,     0,
       0,    65,    68,   645,    80,    73,  1724,  1731,     0,     0,
       0,     0,     0,     0,   393,   400,   180,     0,     0,   281,
    1242,     0,     0,     0,   307,   107,     0,     0,     0,  1245,
       0,     0,   213,     0,   254,     0,   170,  1244,     0,  1232,
       0,  1109,  1110,     0,     0,   399,   835,     0,     0,     0,
    1035,   805,   809,   807,   785,   893,   909,   906,   633,     0,
     636,   600,     0,     0,   521,   528,     0,   531,   525,     0,
     602,     0,     0,   604,   606,     0,     0,     0,   641,     0,
       0,     0,  1045,   552,  1295,  1565,  1472,   553,     0,   551,
     555,   558,   560,   559,   561,   557,   568,     0,   571,  1055,
     571,     0,     0,     0,   159,     0,   152,   152,     0,   138,
     947,     0,   216,     0,   304,   324,   252,     0,     0,   235,
       0,   242,     0,   276,   277,   275,   236,   305,   310,   238,
       0,   345,     0,    72,     0,    88,     0,     0,   316,   120,
     118,   854,   417,     0,  1117,   257,  1239,     0,     0,     0,
     281,   173,  1241,   270,   263,   264,   265,   266,   267,   268,
     269,   284,   283,   255,   256,     0,     0,     0,  1111,     0,
     836,     0,   837,     0,   491,   638,     0,     0,   632,     0,
     519,   517,   520,   522,   518,     0,     0,   609,   625,     0,
     605,   603,   614,     0,   645,     0,   616,     0,     0,     0,
     562,     0,   897,   899,     0,     0,   524,   524,     0,   132,
       0,   640,     0,     0,   154,   154,   140,     0,   310,   326,
       0,   296,   303,   295,     0,     0,   232,     0,   239,   334,
     241,   225,   644,     0,    75,     0,   321,   392,   396,     0,
     215,  1233,   307,     0,  1239,   257,  1245,     0,  1236,     0,
       0,  1117,   838,     0,   912,   631,   634,     0,   607,     0,
       0,     0,   642,   643,   615,     0,     0,     0,   556,     0,
       0,   570,     0,   455,   454,   127,   152,   131,   160,   151,
     501,   153,   501,     0,   334,   282,     0,     0,   260,   225,
       0,   251,     0,    69,    87,   322,     0,   307,  1234,   214,
     171,  1237,  1238,     0,   640,   908,     0,     0,     0,     0,
     529,     0,   535,   624,   564,     0,   563,   900,   901,   526,
     154,   504,   504,   640,   251,   297,   302,     0,   240,   243,
     331,   332,   333,     0,   247,   244,   248,     0,  1239,     0,
    1107,  1553,  1296,  1524,     0,   910,   913,   911,   905,   635,
       0,     0,   527,   565,   523,   501,   143,   142,   139,   216,
     259,     0,     0,     0,   249,     0,   250,   224,  1235,  1117,
       0,   917,   916,   915,   919,   918,   530,     0,   504,   328,
     229,     0,   228,     0,   313,   246,   640,     0,     0,   144,
     227,   231,   230,  1108,   914,   534
};

/* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    37,    38,    39,    40,  2141,  2142,  2143,  1825,   983,
    2844,  1826,   984,   985,  2145,    41,    42,  2192,  2193,    43,
    1445,   538,  1758,  1384,  2566,    45,  2094,  1763,  2098,  2714,
    2348,  2093,  2100,  2824,  2890,  2095,  1764,  2715,  1765,    46,
      47,  1517,    48,   741,    49,  1518,  1472,  1254,  1003,  1462,
    1243,    50,    85,    51,  2132,  2437,  2903,  2155,  2994,  2597,
    2598,  1827,  2944,  2945,  2134,  2206,  1454,  2938,  1893,  2771,
    1831,  1814,  2599,  1902,  2724,  2475,  1828,  2379,  1894,  2583,
    2830,  1528,  1895,  2831,  2576,  1896,  1497,  1521,  2381,  2946,
    1832,  1498,  2438,  1441,  1897,  2901,  1898,   497,  2602,    52,
     530,   531,   733,  1191,   532,   714,    53,   498,  1157,   539,
      55,  1879,  2626,  2226,  2627,  1951,  1873,  1252,  1948,  1572,
    1501,  1253,   485,  1586,  2227,  2181,  1573,   540,   885,    58,
      59,    60,   579,   592,   593,  1355,  1735,  2062,   953,   566,
     567,  1867,   607,  1491,  1393,  1394,  1769,  2107,  1420,  1421,
     962,   963,  2675,  2883,  2676,  2677,  2534,  2535,  2962,  1408,
    1412,  1413,  1789,  1779,  1399,  2340,  2699,  2700,  2701,  2702,
    2703,  2704,   886,  2555,  2816,  1416,  1417,   965,   966,   967,
    1425,  1799,    62,  1739,  2069,  2070,  2071,  2318,  2319,  2333,
    2329,  2540,  2683,  2072,  2073,  2668,  2669,  2788,  2336,  2079,
    2687,  2688,  2745,  1545,   715,  1259,  1194,   717,   887,   718,
    1170,   888,  1174,   720,   889,   890,   891,   723,   892,   893,
     894,   726,  1166,   895,   896,  1185,  1213,  1214,  1215,  1216,
    1217,  1218,  1219,  1220,  1221,   937,  1640,   898,   899,   900,
    2075,   901,  1349,  1725,  2055,  2708,  2812,  2813,  2303,  2521,
    2666,  2784,  2918,  2955,  2956,   902,   903,  1299,  1300,  1722,
    1344,  1345,   904,  2440,  1347,  1633,  1298,  1295,  1046,  1047,
    1260,  1613,  1614,  1636,  1980,  1643,  1648,  2007,  2008,  1656,
    1690,   905,  1597,  1598,  1966,  1268,   906,   632,  1053,   633,
    1265,  1684,   914,   907,   908,  1292,  1293,  2021,  2278,  1661,
    1795,   584,  2679,   737,  1134,   909,   910,   911,   912,   939,
     586,  1048,   478,   729,  2891,  1147,   943,  1049,  1829,  1680,
      63,   812,   637,    64,  1145,  1509,    65,  2652,  2485,  1159,
    1530,  1906,   499,    66,    67,    68,    69,    70,   614,  1246,
     541,  1247,  1248,   799,    71,  1255,   801,   802,    72,   573,
     574,  1256,  1368,  1257,    73,   552,    74,   933,   589,   934,
     936,   543,   950,  2089,  1754,    76,    77,   560,   561,    78,
      79,   575,    80,    81,  2649,   544,  2209,  1882,   507,   480,
     481,   731,  1137,  1051,  1138
};

/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
   STATE-NUM.  */
#define YYPACT_NINF -2677
static const int yypact[] =
{
    4807,  -132,   764, -2677, -2677,  -132, 33572, -2677,  -132,   111,
    2981, 38332, -2677,  4676,  -132, 44996,   980,   181,   326,   287,
   38808, 38808, 44996, 44996, 39284,  -132,   231, 45472, -2677,  -132,
   23611, 35952,    -8,  -190, 45948, 44996,  1231,   428,    -1, -2677,
   -2677, -2677, -2677, -2677, -2677,    80, -2677, -2677, -2677, -2677,
   -2677, -2677, -2677, -2677, -2677, -2677, -2677,    93, -2677,   527,
     101,   821,   154, -2677, -2677, -2677, -2677, -2677, -2677, -2677,
   -2677,   166, -2677, -2677, -2677, -2677, -2677, -2677, -2677, 23134,
   -2677, -2677, -2677, -2677, -2677, -2677, 39760, 44996, 40236, 36428,
   40712, -2677,   103, -2677, -2677, -2677, -2677, -2677, -2677, -2677,
   -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677,
   -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677,
   -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677,
   -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677,
   -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677,
   -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677,
   -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677,
   -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677,
   -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677,
   -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677,
   -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677,
   -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677,
   -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677,
   -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677,
   -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677,
   -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677,
   -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677,
     110, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677,
   -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677,
   -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677,
   -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677,
   -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677,
   -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677,
   -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677,
   -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677,
   -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677,
   -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677,
   -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677,
   -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677,
   -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677,
   -2677, -2677, -2677, -2677, -2677, -2677, -2677,   138, -2677, -2677,
   -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677,
   -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677,
   -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677,
   -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677,
   -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677,
   -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677,
   -2677, -2677, -2677, -2677, -2677, -2677,   171,   289, -2677,   140,
   -2677, -2677, -2677, -2677,  1231, 41188, -2677,   740,   780, -2677,
     246, 46424, -2677, -2677, 44996, -2677, -2677,   -91, 41188,   398,
   -2677, -2677, -2677, 41664, -2677, -2677, -2677, -2677,   450, -2677,
   -2677,   298, -2677,    85, -2677, -2677, -2677,   294, -2677, -2677,
   -2677, -2677, -2677, -2677, -2677, -2677,   395, -2677, 51660, -2677,
   46900, 47376, 47852, -2677,   305,   610,    51, 22657, -2677, -2677,
   -2677, -2677,   166, -2677, -2677,   804, -2677, 38808,   804, -2677,
   -2677, -2677, -2677, -2677,  -175,   339, -2677,   384,   625, -2677,
   -2677, -2677,   409, -2677, -2677,   638, 10305, 10305, 48328, 48328,
     804, 48328,   460, -2677, -2677,   317, -2677,  -190, -2677,   821,
     409, -2677, 24088, -2677,   497,   289, -2677, -2677,   127,   828,
   13311, 44996,   524, -2677,   542,   524,   579,   614, -2677,  4807,
     949,   945, 35952,   254,   254,  1114,   254,   699,   744, -2677,
    1392, -2677,   677, -2677, 41188, -2677,   713,  1007, -2677,   409,
    1086,   801,   900,  1094,  4974,  1112,   873,  1148,  1057,  6798,
   13311, 32144, -2677,   289, -2677, -2677, -2677,   809, -2677,   832,
   -2677, -2677, -2677, -2677,   596,  1069, -2677,   847,  1315,   920,
   42140, 42616, 41188,   879,  1299, -2677, -2677, -2677, -2677,   930,
   -2677, -2677,   242, -2677, -2677, -2677, -2677,   964, -2677,   964,
     964, -2677, -2677, -2677, -2677,   907,   907,  1109,   950, -2677,
   -2677, -2677,  1313, -2677, -2677, -2677, -2677, -2677, -2677, -2677,
   -2677, -2677, -2677,   976,   250, -2677,   964, -2677,   907, -2677,
   -2677, -2677, -2677, -2677, 53043, -2677, -2677, -2677, -2677,   366,
     612, -2677, -2677, -2677,    41,   978, -2677,  1445, -2677, -2677,
   -2677, -2677, -2677, -2677, -2677, -2677,   987, -2677,  3412,   907,
   -2677, -2677,  1338,   152, -2677,  1340,   165, -2677,  1345,  1230,
   13311, -2677,  1177,  1123, -2677, -2677, -2677, -2677, -2677, -2677,
   -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677,
   -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677,
   -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677,
   -2677, -2677, -2677, -2677, -2677,  -190, -2677, -2677, -2677, -2677,
   -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677,   293,
   -2677, -2677, 29952, -2677, -2677,    51,  1033, -2677, -2677, 29952,
   13812, 52121,  1498, -2677,  1360, 44996,  1107, -2677, -2677, -2677,
   -2677, -2677, -2677,  1156,  1648,   105,  1650, 13311,  1161,   105,
     105,  1165,  1499, -2677, -2677, -2677,   142,  1169,  1172, -2677,
     143,   143, -2677,  1174,  1175, -2677,   146,  1176,  1178,  1671,
    1675,   132,  1191,  1192,   250,   105, 13311, -2677,  1194,   143,
    1196,  1197,  1205,  1692,  1210, -2677,  1702,  1215,    92,    97,
    1216,  1220, -2677,  1221, -2677,   148, 13311, 13311, 13311,  1571,
   13311,  7800, 41188,  1710, -2677,   289,  1228,   804, -2677, -2677,
   -2677, -2677, -2677, -2677, -2677, -2677,   133,  4893, -2677,  1267,
   -2677, -2677, -2677,  1426, 13311, -2677, -2677,   -52, -2677,   150,
   -2677, -2677, -2677,   334,  1509,  1234, -2677, -2677, -2677, -2677,
     168,  1632, 29000, 29476, 41188, -2677, -2677,   289, -2677, -2677,
   -2677, -2677, -2677, -2677,   438, -2677,   166, 31128,   456,   289,
     524, 44996, 44996,  1694, -2677, -2677, -2677, 35952, 41188, 48804,
    1363, -2677, -2677,   821,   821,  9303,   821,   113,    68, 10806,
   14313,  1570,  1458,   139,   508,  1578, -2677,  1463,   699,   744,
   13311,   542, -2677,  1514, 41188, 34048,   601,   702,  1254,  1336,
    1263,   -35,  1677, -2677,  1265, -2677,  1353, 41188, 53043,   176,
   -2677,  1715,   176,   176,   589,  1717,  1358,   187,  1517,   505,
     208,  1265,  2605, -2677, 35952,   131,   537,  1265, 41188,  1365,
     539,  1265,    91, 13812,   666,   962,   239,  1002,  1041,    98,
   13812,  1054,  1071,  1082,  1142,  1163,  1202,  1207,  1342,  1352,
    1420,   109,  1487,  1500,  1536,  1551,  1556,  1575,   120,  1586,
     118, 13812,  1593,  1286, -2677, 31128,   -78, -2677, -2677,  1595,
     122, -2677, 27571,  1279, -2677, -2677, -2677, -2677, -2677, -2677,
   -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677,
   -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677,
   -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677,
   -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677,
   -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677,
   -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677,
   -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677,
   -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677,
    1370, 44996,  1329,   -71,  1637,  1695, 32144,  1292,  1656, 41188,
    1533,  2605,  1534,  1310,  1770,   832, 11307,  1773, -2677, 49280,
   -2677, -2677, -2677, -2677, -2677, -2677,  1316, -2677, -2677, 13311,
   -2677, -2677, -2677,  1801, -2677, 52121, 52121,   964,   964, -2677,
   -2677,  1778,  1402,  1408,  1801, -2677,  1801, -2677, -2677, -2677,
   52121, -2677, 44996,  1328,  1330,  1801, -2677, -2677, -2677, -2677,
   -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677,
   -2677, -2677,  1801,  1412, -2677,  1413,  1416,  1417, -2677, -2677,
   -2677, -2677, -2677, 44996, 44996, -2677, 44996, 44996, -2677, 44996,
   44996,   499,   596, 43092,    51, 36904, -2677, -2677, -2677, -2677,
     318,   851, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677,
   -2677, 32144, -2677,  1311, -2677, -2677, -2677,  1333,   510, -2677,
     549,  1231, -2677, -2677, 13311,   289, 13311, 31128,  1385, 13311,
   13311,  1344,  1801,  1801, -2677,  1542,  1801,  1801,  6236, 13311,
   26953, 13311, 17820, 11808, 13311, 13311,  8301, 13311,  6236,  1830,
    1830, 25042, -2677,  1503,  1347,  1357,  1983,  5176,  1350, -2677,
     701, -2677,  1348, -2677,   289,   289, 13311, -2677, 13311,  3274,
    3274, -2677,   182, 52121, 13311, 13311, 13311, 13311, 13311, 31668,
    1441,   100, 44996, 13311, 13311,  1359,   645, -2677, 13311,  1581,
   -2677,  1364, 13311,  1449,   197, 13311, 13311, 13311, 13311, 13311,
   13311, 13311, 13311, 13311, -2677, -2677, 19309,   185,  1693,  1712,
     289,   -69,   276, 37380, 10305,  1701,  6798, -2677,   289, 28048,
      84,  1701, -2677, -2677, -2677, -2677,   151, -2677, -2677, -2677,
   -2677,  1333, -2677,  1333,  1377, 41188,   127, 35476, -2677, 13311,
   -2677,   557,  1379,  1438,   630,  1839, 44996, -2677, 25519,  1664,
   -2677,   314,   314,  1380, -2677, 30425,  1664, -2677, -2677, 18307,
    1501,  1658,  1596, -2677, -2677,  1574,  1576, -2677,  1386, 31195,
   14814, 14814, -2677,  1266, 31128,  1268, -2677, -2677, -2677, -2677,
   -2677, -2677,   721, -2677, 41188,    -7,  1570,   508,   607, -2677,
   -2677,  1189,  1389, 49756, 44996,  1665,  1616,  1668,  -127, -2677,
   -2677, -2677, 52121, -2677, 44996, 44996, 50232, 50708, 32620, 44996,
   32144, -2677, -2677, -2677, -2677, 44996,   800, 44996,  6078, -2677,
   -2677, -2677,   176, -2677, -2677, -2677, -2677, -2677, 44996, 44996,
   -2677, -2677,   176, 44996, 44996,   176, -2677,  1227, 44996, 44996,
   44996, 44996,  1468, 44996, 44996,   -67,   -67,  1600, -2677, 12309,
      82, -2677, 13311, 13311, -2677, 13311,  1573, -2677,   613, -2677,
    1611,    30,  1454, 41188, 41188, 44996,  1272, -2677, -2677, -2677,
   -2677, -2677, -2677, 32144,  1410,  1418,  1761, -2677,  2605,  1762,
   34524,   750,   581,  1457, -2677,   620, 13311,  1645, -2677, -2677,
    1631, 13311,   635,  1427,    41,   655, -2677, -2677,  1429,  1330,
    1447,  1448,  1431,  1432, -2677,   682, 52121,  1801,    89,  1433,
    1434,  1368,   994,    11,  1264,   152, -2677,   165, -2677,  1646,
     212, -2677,  1529,  1663,   832,  1899, -2677, -2677, -2677, -2677,
   -2677, -2677, -2677,   687, 22180, -2677, -2677,  1900,   804,  1900,
     541, -2677, -2677,  1900, -2677,  1900, -2677, 29952, -2677, 13812,
   -2677, 52121, -2677,   726, -2677,  1443, 13311,   112, -2677, 30485,
     734, 13311,  1446,  1450, -2677, -2677, -2677, -2677, -2677, -2677,
   -2677, -2677, -2677,  1451,  1772, -2677,  1452,  1455,  4586, -2677,
   -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677,
   -2677, -2677, -2677,  1459,  1442, 30519,  1460, 17820, 17820,  7800,
     399, -2677, 17820,  1461, -2677,   735, 30438,  1347,  1464, 30762,
   12810, 13311, 12810, 12810, 30821,  1347,  1466, 31007, 44996, -2677,
   15315, -2677, -2677, -2677, 13311, 41188, -2677, 13311,   736,  5502,
   -2677, -2677, -2677,   276, 27558, 27558, 27558,  6236, -2677, -2677,
   -2677,  1465, -2677, 17820, 17820, -2677,  1847,   170,  7800, -2677,
   -2677,  1775, -2677,   676, -2677,  1471, -2677, -2677,  1125, -2677,
   26953,  3730, 13311,   134, -2677, 13311,  1359, 13311,  1538, 27558,
   27558, 27558,   203,   203,   135,   135,   135,   261,   276, -2677,
   -2677, -2677,  1474,  1477,  1480,  1800,  1210, 13311, -2677,   844,
     865, 41188,  3062,  4085,  4215, -2677, -2677, -2677, 20749,  1505,
     -78,  1571,  1505,  1801,  3274, -2677,   542, -2677, -2677, -2677,
   31128, -2677,  1231, 20749,  1522,  1519,   -84, 23611,  1700, -2677,
   44996, -2677, 44996, -2677,    14,  1493, -2677, -2677, -2677,  1518,
    1518, 13311,  1602,  1518,  1716,  1720,   864,   864,  1266,  1726,
   -2677, -2677,  1565, -2677, -2677, -2677, 13311,  8802,  1283, -2677,
    1285, -2677, -2677, -2677, -2677,  1479, -2677, -2677,  1774, -2677,
   -2677, -2677, -2677,  1589,  1265, 13311,  1744, -2677,    90,  1521,
    1869,  -122,  1822, 44996, -2677,  1734, -2677,   705,  1879,   212,
    1880,   212, 32144, 32144, 32144,   771, -2677, -2677,   804, -2677,
   -2677,   790, -2677,  -178, -2677, -2677, -2677,  1617,   552,  1265,
    2605, -2677, -2677, -2677, -2677, -2677, -2677, -2677,   153,   570,
    1265,  1618, -2677,  1619, -2677,  1627,   586,  1265, -2677, -2677,
      82,    82,    82, 13812, -2677,  1769,  1777,  1553, 31128, 31128,
   31128,  1557, -2677,   145, -2677, 44996, -2677, -2677, -2677,  1573,
   41188,  1555,  2016,   832, -2677,  1713,   633, -2677,   804, 44996,
   41188, 41188, 41188, -2677, -2677, -2677,  1560,  1558, -2677, 52121,
     -86,  1780,  1779, 44996,  1601,  1263,  2024, -2677, 31128,  1916,
   41188,   795, -2677, -2677, -2677, -2677,  1801, -2677, -2677,  -158,
    -158, -2677, 44996, -2677,  1580, -2677,  1582, -2677, -2677, -2677,
   -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, 44996, -2677,
   41188,  1918,  1231, -2677, 32144, -2677, 35000, -2677, -2677, -2677,
   -2677,   804, -2677,   804,  1795, 44996, 28524,   804,   804, -2677,
   -2677, -2677, -2677, 31052, 13311, -2677,  1934, 52121, -2677,  5578,
   -2677, -2677, -2677, 13311, -2677, -2677, 13311, -2677, 26953, 13311,
    1908, -2677,  2069,  2069,  5176, 52121, 17820, 17820, 17820, 17820,
     639,  1196, 17820, 17820, 17820, 17820, 17820, 17820, 17820, 17820,
   17820, 18808,   218, -2677, -2677, 13311, 13311,  1917,  1908, -2677,
   52121,  1591,  1347,  1598,  1599, 13311, -2677, 52121,   796,  7800,
   31081, -2677,   289,  5861, -2677, 31128, -2677,  3274, 13311,  2998,
    3340, 13311,   797, 13311,  1927, -2677, -2677,  1607, -2677, -2677,
   52121, 13311,  1609,  2445, 17820, 17820,  3133, -2677,  3850, 13311,
    7800, -2677,  1600,  1649, -2677,  1812,  1705,  1705,  1705,  1705,
   -2677, -2677, 41188, 41188, 41188, 21226,  1940, 20272, 43568,  1613,
     763, -2677, 43568, 44044, -2677,  1629, -2677,   289, 13311,  1935,
      82,  1503,  1935,  1620, -2677, -2677,  1622,  1613, 13311,  1766,
   -2677, -2677, -2677,  1672, -2677,   807, -2677,  2035,  1766, -2677,
     829, -2677, 25519,  1522, 13311,   289,   107, -2677, -2677, -2677,
    1626, -2677,  1518, -2677, -2677, -2677,  1837, -2677, -2677, -2677,
   41188, -2677, 44996,  6069,  1975, -2677, 44996, 44996, 44996, -2677,
   44996,   842,   568,  1635, -2677,   568,  1953,   247,  1263,   187,
    2472,   -20, -2677, -2677, -2677,  1706, 44996, -2677, 44996, -2677,
   -2677, -2677, -2677, -2677, 32620, -2677, -2677, -2677, 32144, 26476,
   32144, 44996, 44996, 44996, 44996, 44996, 44996, 44996, 44996, 44996,
   44996,  1636,  1639,  1640,  1600, -2677, -2677, -2677, -2677, -2677,
   -2677,   208, -2677, -2677,   145,  1642, 34524,  1231,  1457,  1695,
     596, 44520,  1643,  1628, -2677,   853,  2605,  1655,  2102, -2677,
     750, 34524, -2677, -2677, -2677,  2061, -2677,   305,   156, -2677,
   -2677,  1231, 44996,  1719, -2677,  1330,  1657, -2677, -2677,  1330,
   52121, -2677, -2677,   212, 41188, -2677,   868, -2677, -2677, -2677,
   -2677, 44996,  1659, -2677,  1659, -2677, -2677, 13311, 31128, -2677,
    1666, -2677, 31128,  6088, -2677, 31128,  1917, -2677,  1378,  1378,
    1378,  2394,  1986,   210,  1669,  1378,  1378,  1378,   262,   262,
     128,   128,   128,  2069,   218, 31128, 31128, -2677, -2677,  1667,
   -2677, -2677, -2677,  1347,  1673, -2677,  5221, -2677,   876, 44996,
   -2677, -2677,   258, 13311, 13311,  1847, -2677, 27524, 13311, 52121,
     886,  1847,   188, 13311,  3545,  3572, 13311, 13311,  4058, 27437,
    1674, 13311, 25996, -2677, 41188, 41188, 41188, 41188, -2677, -2677,
   -2677, 43568, 44044,  1670, 19794,   763,  1676, 41188, -2677,  1739,
    1683, 20749,  1939,  1874, -2677, 20749,  1874,   820,  1874,  1951,
    1739, 24565, -2677,  1739,  1686,  1882, -2677,   546, 31128,  2129,
    2004,  1697, -2677,  2004,   804, -2677, 31128, 10305, -2677,  1231,
    1295, 44996,   289,   -82, -2677,  1704, 44996, -2677,  1766, 31128,
   -2677, -2677, 26953, -2677, -2677, -2677, -2677, -2677, 44996,   891,
   -2677,   904,   568, -2677,  1740, -2677,   164,  1999,    58, -2677,
   32144,  4209,   707, -2677,  2012,  1928, -2677,   176, -2677, 13311,
     707,  1929,   161, 44996, -2677, -2677,  2151, -2677, 52121,   212,
     212, -2677, -2677,  1708,  1711,  1723,  1724,  1725,  1727,  1730,
    1732,  1733,  1736,  1737,  1738,  1741,  1742,  1743,  1745,  1746,
     976,  1747, -2677,  1748,  1626,  1749,  1750,  1752, 52582,  1753,
    1755,  1756,  1757,  1758,   318,   851, -2677, -2677, -2677, -2677,
   -2677, -2677,   847,  1763, -2677,  1718, -2677, -2677,  1793, -2677,
    1796, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677,    82,
    1033,   115, 44996,  1721,  1601,  2173,   345,  1942,  1728, -2677,
     804,  1457, -2677, 34524,   762,   147,  1779, -2677,   116,  1601,
   -2677,  2106,  1784,  1947, 44996,  1764, -2677, -2677, -2677,  2200,
   -2677, 35000,  1659, 31128, -2677, -2677, -2677, 17820,  2068,  1767,
   52121, -2677, -2677, -2677, 13311, -2677,  1847,  1847, 27524,   931,
   -2677,  1847, 13311, 13311,  1847,  1847, 13311, -2677, -2677, 27456,
   51184, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677, 33096,
   43568,  1771, -2677, 37856, -2677, -2677, 44996,   763, 20749, -2677,
   -2677,  1913, -2677, 20749,  2041, -2677, 20749, -2677, 44996,  1776,
   -2677, 44996, -2677,  9804, 13311,  1816,   804,  1816, -2677,  1234,
   -2677,   -84, -2677, -2677,  2182, 21703,  2138, 13311, -2677, -2677,
    1785,   568, -2677,  1946,  1740,  1781, -2677, -2677, -2677, -2677,
   -2677, -2677, -2677,   942,  1789, 44996, 44996, 17820, -2677,   707,
     186,   191, -2677,  2051, 41188,  1740,  2204, -2677, -2677, -2677,
   -2677,  2171,  2252,  2139, -2677, -2677, 31128, -2677, -2677,  1801,
    1801, -2677, -2677,  2219, -2677, -2677, -2677, -2677,   847,  -107,
   26476, 44996, 44996,  1797, -2677, -2677,   208,  2174,   947,   750,
   -2677,  1231, 41188,  2149, 34524, -2677,  2264,  1805, 44996,  1601,
    1361,  1361, -2677,  1949, -2677,  1950, -2677, -2677,   175, -2677,
   41188, -2677, -2677, 21703,  1231, -2677,  3704, 17820, 52121,   953,
   -2677, -2677,  1847,  1847,  1847, -2677,  1998, -2677, -2677,   957,
    2267, -2677, 44996,   -76,   -60,  1814,  1815, -2677, -2677,   959,
   -2677, 13311,  1818, -2677, -2677, 20749,  1913,   963, -2677, 52121,
   44996,   973, 52121, -2677,  1819,  -128,  1823, -2677,  7299,  1809,
   -2677, -2677, -2677, -2677, -2677, 31128, 31128, 44996,  1992, -2677,
    1992,  1877, 44996, 13311, -2677,   985,  2249,    45,   -36, 31128,
   -2677, 41188, -2677, 32144, -2677,   568, -2677, 32144, 13311, -2677,
    1735,  2394,  2287, -2677, -2677, -2677, -2677,  1740,   832, -2677,
   44996, -2677,  2141, -2677, 44996,  1891,   283,  1905, -2677, -2677,
   -2677, -2677,  1033,   804,  1457,  1779,  1784,  1844, 41188,  1231,
     750,   305, -2677, -2677, -2677, -2677, -2677, -2677, -2677, -2677,
   -2677, -2677, -2677, -2677, -2677,  2265,  2052,  2279,  1719,  1000,
    3704,  1006, -2677,  2293,  1600,  1629, 33096,  1854, -2677,  1010,
   -2677, -2677, -2677, -2677, -2677, 44996,  1009, -2677, 31128, 44996,
   -2677, -2677, -2677, 44996,  2219,  1039, -2677, 13311,  1855, 13311,
   -2677, 15816,  1853, -2677,  2317, 13311,  1921,  1921,  1231, -2677,
   27485,  1505, 21703, 44996, 44996, 44996, -2677,  1981,   832,   568,
    1043, -2677,  1872, -2677, 27504,  2087, -2677,  2176, -2677,  2118,
   -2677,  1871, -2677, 13311, -2677,  1943, -2677, -2677, -2677,  2331,
   -2677, -2677, 34524,  1875,  1784,  1779,  1601,  2081, -2677,  2084,
    1878,  1457, -2677, 13311,   -17, -2677, -2677, 44996, -2677,  1045,
    1881,  1058, -2677, -2677, -2677,  1059, 15816,  1078, -2677, 44996,
    1883, 31128,  2017, -2677, -2677, -2677,  2249, -2677, -2677, -2677,
     314, -2677,   314, 25519,  2118, -2677, 32144, 26476,  2108,  1871,
      55,  2100,  2605, -2677, 31128, -2677,  1231, 34524, -2677, -2677,
   -2677, -2677, -2677, 21703,  1505,  1347, 16317, 16317,  1890,  1079,
   -2677,  2378,  2049, -2677, -2677,  1083, -2677, -2677, -2677, 37856,
   44996,  1518,  1518,  -147,  2100, -2677, -2677,  2191, -2677, -2677,
   -2677, -2677, -2677,   144,  2109, -2677,  2111,   955,  1784,  1088,
   -2677, 17319,  2038,    99, 30472, -2677, -2677, -2677, -2677, -2677,
    1902,  1906, -2677, -2677, -2677,   314, -2677, -2677, -2677, -2677,
   -2677,   506,   506,  2280, -2677,  1970, -2677, -2677, -2677,  1457,
    2375, -2677, -2677, -2677, -2677, -2677, -2677,  2405,  1518,   568,
   -2677,  2395, -2677,   123, -2677, -2677,  1505, 16818,  1920, -2677,
   -2677, -2677, -2677, -2677, -2677, -2677
};

/* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -2677, -2677, -2677,  1821, -2677, -2677, -2677,   277, -2677,   965,
   -2677,   272,  -553,   611, -2677, -2677, -2677, -2677, -2677, -2677,
    -917,    10, -2677, -2677, -2677, -2677,    78,   328, -2677,  -391,
   -1908,  -129, -2677, -2485, -2566, -2677,  -456, -2420, -1686, -2677,
   -1111,   245, -2677, -2122, -2677,  -623,  -991,  -791,  -998, -2677,
      46, -2677,  1355, -1101, -1759, -2441,  -454, -2677,  -526, -2677,
    -283, -1769,  -497,  -483, -2677, -2307,  -939, -2677,  1482,  -189,
   -2677,   644, -2677, -2118, -2677, -2677,   636, -2677,  -942, -2677,
   -2677, -1870,   257,  -436, -2317, -2116,   587,  -637, -2677,  -478,
     309, -1735, -2677,   660, -2677,  -425, -2677,  -518, -2164, -2677,
   -2677, -2677,  1247,  -691, -2677,  1296, -2677, -2677, -2677,    22,
   -2677, -2677, -2677, -2677, -2677,  -731,   598, -2267, -2677,   534,
   -2677, -2677, -2677, -2677,   -10,   299, -2677,     8,   423,   -22,
      -9,    16,    21,    49,  1546,  1585, -2677,  -936,   681, -2677,
   -2677, -1781,  -594,   -56, -2677,   718, -1368, -1727,  -440,  1065,
    1532,  1539,  -300,  -317, -2677,  -427, -2677, -1195, -2677, -2677,
     717,  1105, -1304, -1253, -2677,   427,  -371,  -299, -2677, -2677,
   -2677, -2677, -2677,   172,  -199,  -439,  1087, -2677,  1549, -2677,
   -2677, -2677, -2677, -1255,   767, -1975,   449, -1956, -1868,   205,
     194, -1007,  -164,    27,   459,  -261, -2677, -2677,  -257, -1706,
   -2324,  -272,  -271, -2677, -2677,  -500, -1122,  -697, -2677, -2677,
     323,  -464, -2677, -2677, -2677,  -249,  1213, -2677, -2677,  1437,
    1456, -2677,  -575,  2002,  -474,  -681,  1259, -1093,  1261, -1080,
   -1088, -1091,  1270,  1275, -1243,  3454, -1518,  -579,     0, -2677,
   -2098, -1625, -2677, -2677, -2677,   -16, -2677,  -337, -2677,  -329,
   -2677, -2677, -2677,  -364, -2676, -2677,  1203,   890, -2677, -2677,
   -1249, -2677,  3930,   784, -2677, -1637,  -551,  1291,  -720,  -979,
   -1146, -2677, -2677, -2677, -2677, -2677, -2677, -1311, -1757,  -896,
     852, -2677, -2677,   966, -2677, -2677, -2677,  -582,  1067,  -550,
    -844,   857, -2677,  -562,  1212, -2677,   823, -1919, -2677,   486,
   -2677,   544,  -505,  1679,  -994,     6, -2677,  1792,  1552,  1813,
    -857, -2090, -2677, -2677,  -481, -2196,  -924, -2677,  -599, -2677,
   -2677, -2677, -1170, -2677,   684, -2677, -1097, -2677,  -209, -2677,
   -2677, -2123, -2677, -2677, -2677, -2677, -2677, -2677,  -433, -2677,
    -475,  -463, -2677, -2677,     2,  -787,  1335, -2677, -2677,   308,
   -2677,   986, -2677,   720, -2677,    65, -2677,  1198, -2677, -2677,
   -2677,    23,  1625,   472, -2677,  1199, -2677, -2677, -2677, -2677,
   -2677,   871, -2677, -1095, -2551,    83, -2315,  -632,    -6, -2677,
   -2677, -2677,  -517, -2677, -2087
};

/* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
   positive, shift that token.  If negative, reduce the rule which
   number is the opposite.  If zero, do what YYDEFACT says.
   If YYTABLE_NINF, syntax error.  */
#define YYTABLE_NINF -1735
static const yytype_int16 yytable[] =
{
     479,  1002,  1142,   608,  1476,   915,   475,  1181,    56,  1475,
      44,  1242,   476,   648,   597,  1249,   968,   743,   542,  1154,
     804,    61,    54,    75,  1770,  1302,   736,  1773,   716,  1187,
    1535,  1632,  1135,  1440,  1507,   927,  2082,    61,   578,   938,
    1304,  1451,  1225,  2108,  1508,  1228,  2113,  1429,  1510,   734,
    1511,  1139,   610,  2150,   728,  2152,  1350,  2135,   583,  1539,
    1447,   744,  1487,  2042,   719,  2465,  1670,  1671,  1358,  2442,
    2463,  1001,  2444,  1007,   798,  1011,  2101,   611,  2131,  2171,
    2172,  2173,  2476,    82,   595,  2479,   553,   618,  1480, -1048,
    1258,  1592,  2315,  -441,  1167,  1168, -1073,  -715,   821,  1188,
    2277,  -444,  -715, -1610, -1070, -1070,  1742,  1791, -1073,   805,
    -707, -1713, -1713,  2076, -1621, -1621,   626,  2332,  2823,  1982,
    1983,  1179, -1724, -1724,  2002, -1628,  1143, -1074,  2076,  1365,
     928, -1733, -1733, -1731, -1731, -1071, -1071,  -712,   549,  1985,
    1682,  -712,   821, -1628,   535, -1074,  1313, -1610,  -674,  2630,
     549,  -687,  1512,  -702,  2195,   549,   549,  1432,     3,     4,
    1794,   483,   587,  1353,  2646,  2029,  2030,   961,   964,  2642,
     821,  1362,  1236,   549,  1682,  2580,  1320,   821,  1312,  2748,
    1236,  1313,  1606,  1738,  1610,   821,  -441,  1609,  1187,  1231,
    2354,  -180,   659,  2624,  -444,  1608,  -180,  2202,  1460,  1877,
     600,  1463,  1464,  2564,  2330,  2851,  1443,  1452,  1322,  -930,
    1188,  1320,  1719,   605,  1313,  -949,  -930,  1478, -1735,  1720,
    2232,  2234,  -949,  1188,   605,  2940,  2607,  2691,  1443,  1985,
     728,  2790,  2825,  2779,  2775,  2826,  2643,  -401,  3001,  2163,
     719,   649,  2776,  1322,  1320,  1703,  2619,  2792,  2808,  1964,
    2267,  2644, -1710, -1710,  1167,  1168,  1435,  2722,   564,  2892,
    2373,  1502,  2982,  2480,  2971,  1204,  1205,  1797,  2360,  1313,
    1188,  1865,  1313,  1985,  1397,  2980,  1322,   650,  2739,   721,
    1179,   951,  2577,  1363,    83,   804,  1726,  1313,   601,   545,
    1400,  1459,   804,  1485,  2640,   929,  2793,   930,   957,  2341,
    1486,  1182,  1320,  2908,  2733,   590,  2159,  2078,  2735,   809,
    2916,  1812,   651,  2031,  1177,  1178,  1812,  1320,  2091,  2160,
     810,  3004,  1568,  1183,  2762,  1161,  2139,   821,    84,  1294,
    1250,  1322,  1503,  2361,  1322,  1305,  1401,   728,  2618,  2917,
    2498,  2244,  2483,  2641, -1735,  1139,  2537,   719,  2636,  1322,
    2541,  1767,  2102,  2092,  2396,  2578,  2332,  2637,  2941,   652,
   -1735,   565,  2383,  1360,  2965, -1735,  2805,  -566,  1813,  1162,
    2372,  1704,   959,  2128,  1798,  1208,  1209,  2734,  -441,  1504,
    1398,  1415,   687,  2747,   952,  2363,  -444,  1705,  1189,  1360,
    1513,  2369,  1706,  2371,   546,   548,  1402,  2978,  3002,  1453,
    2827,  2930, -1735,  1271,  1364,   804,   804,   820,  1437,  1450,
    1985,  2777,  2983,  2565,  2791,  1986,  1987,  1988,    26,  1428,
    2838,  1489,  2746,    57,  2481,  2732,  1727,  1866,   598,  1707,
    2794,  2670,  1589,  2645,  2384,  2942,  1525,  1381,  1768,    57,
    2076,  -441,  2076,  2527,  1878,  1403,  1366,  1354,  2850,  -444,
    2569,  1632,  1490,    57,    31,   721,  2936,  1331,  1929,   596,
    1450,  1932,  1934,  1935,  1931,  1933,  2736,  2716,  2248,  2249,
    2250,  2251,  1930,  1791,  2255,  2256,  2257,  2258,  2259,  2260,
    2261,  2262,  2263,  2264,   609,  2847,   921,   588,   660,  2496,
    2499,  1807,   636,  2949,   634,    33,  2492,   599,  2581,  1189,
    1683,  2084,    57,  1377,  1404,    61,   635,   638,    34,  2103,
    1864,  2755,  1189,  2102,   728,   597,   602,  2385,  1523,  1887,
    1476,  1438,   730,  2111,   719,  2116,  2294,  2295,  1426,  1427,
    2442,   803,    35,  2444,  2044,   547,  2179,  2180,   630,   800,
    1190,  2910,   631,  2919,  1163,  1479,    36,  1135,  2909, -1735,
    -441,  1182,  1165,  2625,   969,  2716,  1182,    61,  -444,  1189,
     479,   479,   721,  2680,  2990,  1596,  -930,  2164,  2684,  1721,
     610,  2686,  -949,  1183,  2671,   931,  1708,   630,  1183, -1048,
    2972,   631,  2086,  1925,   479,  2660, -1073,  1184,   644,  -441,
     932,  -441,  1186, -1610,  1989,   611,   654,  -444, -1073,  -444,
    -707,  1565,  1536,  1537, -1621, -1621,   484,    56,  2571,    44,
    1864,  2582,   807,  1287,   613, -1628,  1990, -1074,  1532,  2000,
      61,    54,    75,  1050,   479,  1136,  1343,  -712,  1308,   949,
     621,  2849,   624, -1628,   628, -1074,  1740, -1610,  1169,  2856,
     940,  1173,  2855,  -702,  1470,  1356,  1743,  2609,  2610, -1735,
    1164,  1224,  1574,   612,  1240,  1241,  1338,  1339,  1340,  1341,
    1342,  1343,  1240,  1241,  1227,  1470,   629,   957,  1471,  2246,
    2568,  1841,   603,  -180,  -180,   716,  1443,  1502,  2623, -1708,
   -1708,  1844,    82,  1594,  1847,  2375,  1991,  1444,  2670,  1471,
    1544,  1340,  1341,  1342,  1343,  1465,  2076,  2268,   730,   657,
    2076,   728,   728,  1641,  1995,  1996,  1997,  1998,  1999,  2000,
    2800,   719,   719,  1593,  1562,  1294,   728,   658,   804,  1600,
    1679,  1557,  1594,  1139,  2716,  2570,   719,  2628,  2136,  1632,
    1903,   922,  1645,  1647,   479,  1655,  2463,  2600,  2914,   721,
     604,   959,   734,  1556,   661,  1755,  1305,  1452,  2632,  1560,
    1997,  1998,  1999,  2000,  2011,  1668,  2013,  2014,   662,  1566,
    1135,  2601,  1338,  1339,  1340,  1341,  1342,  1343,  1594,  2252,
    2376,   487,   798,  2845,  2991,  1691,  1594,  1443,  1139,  1452,
    1513,  1452,   630,  1947,  2281,   487,   631,  1949,  1446,  1234,
     960,  2637,  1235,  2215,  1452,  1504,   803,  2063,  2064,  2219,
     740,   923,  1692,   803,  1050,   730,  2034,  2442,  1302,   549,
    2444,  1954,  1452,  1672,   815,  2716,  1955,  2725,   605,  2022,
    1780,   479,  2085,   975,   975,  1182,    61,   630,  1452,   976,
     976,  1359,   488,  2035,   811,  1840,  2377,  1466,  2378,   728,
    2137,  1685,  1476,  1914,   814,  1467,   488,  1183,  1953,   719,
     479,  1833,  1957,  2992,  1958,  1570,  2996,  2322,   957,   597,
     821,  1184,   813,   958,  1936,  1474,  1937,  1956,  2114,  1939,
     479,   479,   479,   821,   479,   479,   916,   917,  1804,   919,
    2993,  1992,  1993,  1994,  2174,  1995,  1996,  1997,  1998,  1999,
    2000,  1860,  1861,  1862,  2290,   562,   975,  1481,   479,  1484,
     742,   580,   976,  -490,  2076,  1839,   815,    57,  -490,  2253,
    2111,  2638,  2162,  2076,  1135,  1693,   803,   803,  2076,  2254,
    1694,  2076,  2105,   816,  1850,  1695,   721,   721,  1756,  1857,
    2166,  2165,   959,  2323,  1375,   977,   977,  1376,   920,  1453,
    2076,   721,  1815,  1400,  1389,  1390,  2170,  1396,    26,   479,
     619,  2036,  1378,   479,   479,  1379,  2037,   606,  2833,    57,
     596,  2203,    86,  2829,   479,   649,  2210,  2324,   728,   611,
     611,  1453,   611,  1453,   949, -1709, -1709,  -490,   719,  2656,
    1911,   960,   730,  2325,    31,   926,  1453,  1842,  1886,  1401,
    2323,   988,  1845,  2326,   978,  1561,   935,    26,  1379,  1171,
    1450,   650,   609,   492,  1453,   493,  1588,  1050,   977,  1589,
     989,     3,     4,  2673,  1050, -1711, -1711,   492,  2674,   493,
    1453,  1180,    57,   941,  2324,    33,  -490,  2327,  2076,   639,
     496,  1477,  1450,    31,  1450,  1050,  2191,   942,    34,   630,
    2543, -1048,   653,   631,   496,  1590,  1923,  1450,  1591,  2138,
    2326,  2139,  1222,  1751, -1712, -1712,  1227,   804,  1641,  1641,
    2076,   990,    35,  1641,   721,  1450,  1696, -1714, -1714,  2731,
     804,  1182,   728,   535,    33,   944,    36,  1697,  1507,  2140,
     975,  1450,   719,   652, -1715, -1715,   976,    34,  1508,   978,
     978,  1960,  1510,  1183,  1511, -1716, -1716,  2038,  1403,  1655,
    2012,  1655,  1655,  1802,  1641,  1641,  1379,  1186,  2039,  1874,
     945,    35,  1875,  1632,  2328,  2887,  1907,   728,   947,  1589,
    2304,  2305,  2306,  2307,    87,  1757,   925,   719,  2147,    26,
    2149,  1912,    88,  1312,  1379,  2547,  1313,  2032,  2550,  2780,
    1136,   979,  2394,  2509,   980,   980,  2080,   640,  2387,   641,
    1050,  1915,   991,  2018,  1591, -1717, -1717,  1404,   971,  2228,
     948,  2076,   978,   479,  1171,    31,  1320,    89,   955,   730,
     730,  2328,   970, -1735,   981,   981, -1718, -1718,  1921,  1198,
    1199,  1922,  1180,  1943,   730,  2370,  1944,   642,    26,   643,
    2460,   972,   977,   721,  1151,  1153,  1155,  2076,  1322,  2386,
    1665,  2395,  1666,   992,  2966,  2967,    33,  1900,  2950,  1901,
    2989,   993,   975,  1005,    90, -1719, -1719,   980,   976,    34,
   -1720, -1720,  1961,   994,    31,  1379,   973,  2968,    57,   803,
    1968,  2004,  2026,  1379,  1379,  1379,   974,   800,  2217,  2218,
     986,   982,   982,    35,   987,  1136,  2188,  1006,  1204,  1205,
     975,  2056,  2352,  2057,   995,    61,   976,    36,   479,  2198,
     479,  2999,  1004,   479,   479,    33,  1274,  2153,  2041,   636,
    2154,   634,  2058,   479,  2059,   479,   479,   479,   479,   479,
     479,   479,    61,   635,   638,   954,  2157,   956,  2076,  2158,
    3003,  2214,  2275,  2286,  1379,  1227,  1379,   721,  1008, -1735,
     479,   997,   479,  2350,  1296,  1140,  2351,   730,   479,   479,
     479,   479,   479,  1136,   982, -1735,    36,   479,   479,  2542,
   -1735,  2545,   479,   998,   977,  2355,   479,  1141,  2356,   479,
     479,   479,   479,   479,   479,   479,   479,   479,  2374,  1144,
     479,  1875,   721,  1000,  1146,  1574,   978,    26,   479,  2471,
    1050,  1148,  1875,  1136,  2659, -1721, -1721, -1735,  1208,  1209,
      91,  1575,   977,   482,  2490, -1722, -1722,  2491,  2436,   533,
    1149,  2111,  2503,   479,  1156,  2504,   609,   609,   932,   609,
     563,  1158,  2510,    31,   576,  1591,   820,  2573,  2763,  1985,
    1875,  1160,  1759,   479, -1735, -1735, -1735,  1009,  2394,  1815,
    2574,   980,  1169,  1875,   479,   479,  1576,  1641,  1641,  1641,
    1641,  1165,  1331,  1641,  1641,  1641,  1641,  1641,  1641,  1641,
    1641,  1641,  1641,  1172,    33,   728,  2572,  2661,   536,   804,
    1591,  1010,  1577, -1723, -1723,   719,   730,    34,  2726,  2764,
    1594,  2727,  1136,  2754,  1136,  1173,  1875,   487,  2765,  2782,
    1578,  2977,  1591,  2785,  1579,  2797,  2786,  2223,  1227,  2802,
    2532,    35,  2803,  1175,  2273,  1641,  1641,  2240,  1374,  2806,
   -1119,  1176,  2803,  1192,  2532,   537,  1580,  2766,   978,  1581,
    1193,  2821,  1195,  1050,  2822,  2247,   479,   479,  1223,   479,
    1226,   975,  1385,   728,  1582,  1229,  2861,   976,   982,  2822,
   -1725, -1725,  2862,   719, -1735,  1591,  2868,  1136,   488,  1227,
    2269,   728,  2781, -1726, -1726,  1230,   978,  2274,  1431,  1232,
     479,   719,  2931,  1594,  2932,   479,  1233,  2337,  1251,  1803,
    1904,  1458,  2488,   980,  1261,  2874,   728,   603,  2803,  2895,
     730,  2920,  2896,   728,  2921,  1604,   719,   549,  2767, -1727,
   -1727,  -491,  1482,   719,  2923,  2924,  -491,  1227,  1379,  1833,
    2768,  2445,  1885,   981, -1728, -1728,   728,  1848,   803, -1729,
   -1729,   980,   550,   550,  2926,  2959,   719,  1379,  2803,  2963,
    2459,   803,  2811,  1050,  2979,   730,  1583,  2822, -1730, -1730,
     479,  1262,  2489,  2561,  1584,   479,  2605,  2988,    26, -1732,
   -1732,  1849,  1264,   977, -1735,   604, -1734, -1734,  1492,  1493,
    1619,  1338,  1339,  1340,  1341,  1342,  1343,   597,  1620,  1621,
    1622,  1792,  1793,  -542,  -542,  -491,  1206,  1207,  1208,  1209,
     982,   479,   479,   479,    31,  2752,   479,  1585,  -546,  -546,
    -545,  -545,  1371,  1373,   479,   479,   479,   479,  2111,  1266,
     721,  1196,  1197,  -678,   479,  -685,  1269,    57,   479,  2439,
    1270,   479,    26,  1271,  1272,  1991,   597,  1273,   982,    36,
    1275,  -566,  2466,  -567,  -491,    33,  -675,   479,   479,   492,
    -676,   493,   479,   605,    57,   728,  1276,  1277,    34,  1279,
     505,  1280,  1281,  1515,   534,   719,   479,  -679,    31,   479,
    1282,   479,   555,   495,  2228,  1283,   496,  -677,  2614,  2615,
    1284,  1285,    35,   594,   594,  1286,  1287,  1291,   721,  1303,
    2487,   479,  1351,  1306,  1353,  1348,    36,  1198,  1199,  1369,
    1382,  1181,   479,  1354,   958,   597,   721,  1388,  2074,    33,
     960,   722,  1422,  1424,   476,  1430,   728,   479,  1689,  1448,
    1449,  2769,    34,  2074,  2770,  1139,   719,   978,  1450,   476,
     636,   721,   634,  1455,  1456,   479,   622,  1457,   721,  1461,
    1594,  1468,  1469,    61,   635,   638,    35,  1564,  1473,  1483,
     479,   479,  1488,  1495,  1496,  2559,  1500,  1505,  1506,  1513,
      36,   721,  1200,  1201,  1202,  1203,  1204,  1205,  1514,   479,
    1206,  1207,  2584,  1516,  1519,  1520,  1522,    57,  1855,  1526,
     821,  1531,   980,  1538,  1540,   728,  1136,  1136,  1136,   477,
    1541,  1547,   606,  1548,   506,   719,  1551,  1552,   506,  2436,
    1553,  1554,  1587,   551,   551,   554,   506,   559,  1596,  1601,
     559,  1313,  1856,   559,   585,  1660,  1379,   506,   506,  1664,
    2587,  1662,  1667,  1681,  1688,  1312,  1699,  1050,  1313,  1700,
   -1735, -1735, -1735,  1702,  1995,  1996,  1997,  1998,  1999,  2000,
    1738,  1723,  1724,  1745,  1752,  1760,  1753,   604,  1781,  1771,
    1782,  1784,  1783,  1785,  1805,  1786,  1810,  1809,  1320,  2110,
    1811,   605,   559,   730,  1876, -1735,  1872,  1736,  2613,   585,
     506,   585,   585,   585,  1880,  1888,  1208,  1209,  2589,   982,
     721,  1890,  1891,  1889,  1905,  1909,  1910,   722,  1641,  1746,
    1322,  1748,  1916,  1913,   728,  1917,  1918,  1919,  1920,  1927,
    1928,  1938,  1940,  1941,   719,  1942,  1950,  1962,  1136,  1978,
     803,  1973,  1970,  2028,  2033,    57,  1971,  1972,  1974,  1476,
    1904,  1975,  2049,  2054,   728,  1977,  1981,  2003,   479,  2078,
    2009,   730,  2016,  2090,   719,   724,  2040,   479,  1796,  2050,
     479,   721,  2052,   479,   804,  2053,  2088,  2104,  2120,   730,
     479,   479,   479,   479,   725,  2097,   479,   479,   479,   479,
     479,   479,   479,   479,   479,   479,  2300,   597,  2106,   479,
     479,  2118,  -547,  2122,   730,  2835,  -548,  2322,  1641,   479,
    2592,   730,  2117,   479,  2124,  2121,  2126,  1210,  1211,  2127,
    2130, -1735,   479,  2133,   722,   479,   728,   479,   597,  2146,
    2148,  2161,  2167,  2168,   730,   479,   719, -1735,   479,   479,
     721,  2169, -1735,   479,   479,   597,  2175,  1881,  1883,  2177,
    2186,  2178,  2187,  2593,  2176,  2190,  2200,  2201,  2208,   479,
    2211,   479,  1296,  2204,  2205,  2074,  2212,  2074,  2224,  2594,
    2231,   476,   479,   476,  2221,  2239,  2222,  2006,  1641, -1735,
    1985,  2005,   479,  2323,  1623,  1624,  1625,  2270,  1626,  1627,
    1628,  1629,  1630,  1631,  2271,  2272,  2288,   806,   479,   550,
     808,  2839,  2289,  2301,  2729,  2292,  2436,  2302,  2061,  2313,
    2335,  1296,  2321,  2339,  2347,  2349,  2344,  2324,  2345,  2353,
    2439,  2362,   918,  2364,  2832,  2368,  2382,  2470,  -453,  1689,
    2380,  2398,  2456,  2325,  1331,  2457,  2458,  2462,  2474,  2469,
    2478,   724,  -453,  2326,  2533,  2051,   728,  -453,  1136,   721,
    2473,  2486,  1136,  2443,  1136,  2497,   719,  2484,  1875,  2538,
     725,  2068,  2494,  2501,  2500,  2529,  2595,  2789,  2539,  2502,
    2518,  2546,  2530,  2596,  2552,    57,  2068,  2327,  2536,   721,
     596,  2551,   656,  2553,   728,  2789,  2554,   988,  2567,  2804,
    2864,  2894,  2804,  2556,   719,  2464,  -453,  2575,  2681,  2579,
    2603,   722,  2620,  2604,  2608, -1070,   989,  2621, -1708,  2631,
    2622,   739,  2633,  2647,   730,   728,  -453,  2629,   728,  2482,
   -1709, -1710, -1711,  2634, -1712,   719, -1735, -1713,   719, -1714,
   -1715,   479,  2650, -1716, -1717, -1718,  2654,  2657, -1719, -1720,
   -1721,  2648, -1722, -1723, -1725, -1726, -1727, -1728,   724, -1729,
   -1730,   721, -1731, -1732, -1733, -1734,  2875,   990,  2877,  2653,
   -1071,  2685,  2658,  2842,  2328,  -453,  2672,   725,  2712,  2718,
     594,  2690,  2707,  2737,  -453,  2060,  2723,   479,   479,  2947,
    2721,  2720,   479,   730,  2728,  2740,  2741,   479,  2742,  2743,
     479,   479,  2744,  2751,  2871,   479,  2753,  2832,   585,  2758,
    2759,  2760,  2783,  2787,   646,  2773,  2774,   647,  2811,  2795,
    2796,   585,  2915,  2799,  2807,   479,   506,  2815,  2809,   479,
    2818,  2074,  2823,  2837,  2390,  2074, -1735,   476,  2841,  2843,
    2846,   476,  2857,  1338,  1339,  1340,  1341,  1342,  1343,  2852,
    2858,   479,  2889,   647,   506,   506,  2859,  2863,   991,  2867,
    2876,  2682,  2879,  2880,  1245,  2893,  2897,  2560,  2562,  2882,
     551,  1245,  2736,  2899,  2900,    57,  2902,  2906,  2905,  2911,
    2907,   721,  2912,  2913,  1136,  2929,  2937,  2922,  2520,   913,
     913,   559,   559,   479,   559,  2943,  2958,  2960,   722,   722,
    2961,  2970,   730,  2981,  2973,   585,  2975,  2439,  2986,   992,
    2971,  2987,   820,   722,   506,  1985,  2972,   993,  2997,   721,
    1986,  1987,  1988,  -453,  2998,   585,  3005,  3000,  2397,   994,
     946,  1835,  2443,   728,  2185,   724,  2401,   585,  2144,  2563,
    2357,  2888,  2711,   719,  2196,  2197,  2199,  2933,  2611,  1307,
     721,  2472,  1296,   721,   725,  2939,  2995,  2836,  1310,  2976,
     995,  2969,  2772,  1312,  2213,  2129,  1313,  1439,  2477,  2151,
    2935,  1357,  2183,   585,   585,   585,  2974,  2402,  2125,  2934,
    1555,  1534,  1367,  1296,  1245,  1245,   630,  2184,  2225,   944,
     631,  2655,  2639,  2461,  1564,   803,  1320,  1380,  2311,  2109,
    2314,   479,  1801, -1735,   730,  1419,  2870,   997,   479,  1361,
    2884,  1418,  2964,  2119,  1778,  2925,   479,   479,   988,  2343,
     479,  2817,  2878,  1800,  1423,  2557,  2316,  2528,  1322,   998,
    2087,  2544,  2801,   479,  2312,  2866,   722,   989,  2865,  2074,
     727,  2872,   479,  2873,  1605,   476,  1607,   479,  2074,  1000,
     479,  2710,  2927,  2074,   476,  1611,  2074,   479,   479,   476,
    1612,  2928,   476,  2957,  1728,  2024,  2112,  1595,  2047,   479,
    2045,   479,  1871,  1965,  2081,  2074,  1737,  2342,  2189,  2860,
    1567,   476,  1383,  1959,  1747,  2358,  1749,     0,   990,  2388,
       0,   479,     0,     0,     0,     0,     0,  2389,  2293,     0,
       0,     0,     0,     0,  1244,     0,     0,     0,     0,     0,
       0,  1244,     0,     0,     0,     0,  2308,  2309,  2310,     0,
      57,  1990,   724,   724,  2443,     0,     0,     0,     0, -1735,
     594,     0,     0,     0,     0,     0,     0,   724,  1263,     0,
       0,   725,   725,     0,    57, -1735,     0,     0,     0,  2756,
   -1735,   988,     0,     0,     0,  2390,   725,   479,   721,     0,
       0,   479,   730,  2074,     0,   722,     0,     0,     0,   476,
     989,     0,  2639,     0,  2365,     0,     0,     0,     0,   991,
       0,     0,     0,     0,     0,   479,   597, -1735,     0,   479,
       0,  1991,     0,   730,     0,  2074,   730,     0,  1309,     0,
       0,   476,   479,     0,     0,  1301,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   727,   479,     0,     0,
       0,   990,  1244,     0,  1244,  1244,     0,  1136,     0,     0,
     992,  1136,   479,     0,     0,     0,     0,     0,   993,     0,
       0,     0,  1331,     0,     0,  2468,     0,   585,     0,     0,
     994,     0,  2391,     0,  2068,     0,     0,     0,  2068,     0,
     724,     0,     0,     0,   506,   506,     0,     0,     0,   722,
     585,   585,  1387,     0,     0,     0,     0,  2854,  1564,   725,
       0,   995,    57,    57,     0,     0,     0,     0,     0,     0,
     479,  1244,     0,     0,  1244,  1244,  2074,   585,  1442,     0,
       0,     0,   476,     0,     0,     0,     0,     0,     0,     0,
     585,   479,   991,   479,   722,   479,     0,     0,     0,   479,
       0,     0,     0,   727,     0,     0,   479,   585,   997,     0,
       0,   585,  2074,     0, -1735,     0,  2885,  1615,   476,     0,
       0,     0,     0,     0,     0,     0,     0,   479,     0,     0,
     998,     0,     0,     0,     0,     0,     0,     0,  2523,  2524,
    2525,  2526,     0,   992,     0,     0,     0,   479,     0,     0,
    1000,   993,  2392,     0,     0,  2393,     0,     0,     0,     0,
     479,     0,     0,   994,     0,     0,  1992,  1993,  1994,   724,
    1995,  1996,  1997,  1998,  1999,  2000,     0,     0,     0,     0,
    1136,  2443,     0,     0,     0,     0,     0,    57,   725,     0,
       0,     0,     0,     0,   995,     0,  1558,   479,  1559,     0,
     479,   479,     0,  2074,  2948,     0,     0,     0,  1744,   476,
       0,     0,     0,     0, -1735,     0,     0,     0,     0,     0,
       0,  1338,  1339,  1340,  1341,  1342,  1343,     0,     0,     0,
       0,     0,     0,     0,     0,   479,     0,     0,     0,     0,
       0,   997,     0,     0,  1499,     0,     0,     0,     0,     0,
       0,  2068,   585,     0,     0,  1533,  2068,  1450,     0,  2068,
       0,     0,  1529,   998,     0,     0,  1542,     0,  1543,     0,
       0,     0,     0,   724,     0,     0,     0,  1549,     0,     0,
     727,   479,     0,  1000,     0,     0,     0,     0,     0,     0,
       0,     0,   725,     0,  1550,  1546,   820,     0,     0,  1985,
       0,     0,     0,     0,  1986,  1987,  1988,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   724,     0,
       0,  2283,  1569,  1571,     0,     0,   647,   647,     0,   506,
     506,     0,   506,   647,     0,     0,   585,   725,     0,     0,
       0,     0,     0,     0,    57,     0,     0,     0,     0,     0,
       0,     0, -1513,     0,  1602,  1603,     0,     0,  1616,  1617,
       0,     0,     0,     0,     0,     0,     0,    57,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1634,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1659,     0,     0,     0,  2068,     0,
       0,     0,   722,  1808,     0,     0,     0,     0,     0,     0,
       0,  1296,     0,  1816,     0,  1819,  1245,     0,  1830,     0,
    1952,     0,     0,     0,  1834,   647,  1836,     0,  2738,  1245,
       0,  1312,     0,     0,  1313,     0,     0,     0,  1843,     0,
       0,     0,   486,  1846,     0, -1513,   487,  1851,  1852,  1853,
    1854,     0,  1858,  1859,     0,     0,   585,   913,     0,     0,
       0,     0,     0,     0,  1320,     0,  2757,   727,   727, -1119,
     722, -1735,    57,     0,     0,     0,     0,     0,   585,     0,
     585,     0,   727,     0,  2778,     0,     0,     0,   722,  1761,
       0,  1766,  1790,  1790,     0,     0,  1322, -1513,     0,     0,
       0,     0,     0,     0,     0,  1990,     0,   488,     0,     0,
       0, -1513,     0,   722,   489,     0, -1513,     0,     0,     0,
     722, -1513,     0,     0,     0,     0,     0,   585,     0,     0,
   -1513,    57,     0,     0, -1513,     0,  1442,   506,     0,     0,
       0,     0,     0,   722,  1244,     0,     0,   506,  1817,   506,
    1821,     0,   506,     0,  1244,  2828,     0,  1244,   506,     0,
     506,   490,     0,     0,     0, -1513,  2296,     0,     0,     0,
       0,   647,   506,     0,     0,  1991,   647,   506,     0,     0,
       0,   506,   506,   506,   506, -1513,   506,   506,     0,     0,
       0,     0,  2853,     0,     0,     0,     0, -1735,     0,     0,
       0,     0,     0,     0,     0,   727,   585,   585,  1884,     0,
       0,     0,     0, -1735,     0,     0,     0,     0, -1735,    57,
       0,     0,     0,  1899,     0,     0,   724,     0,     0,  1924,
    1926,   491,     0,     0, -1513,     0,     0, -1513,   820,     0,
       0,  1985,     0, -1513,     0,   725,  1986,  1987,  1988,     0,
       0,     0,     0,     0,     0, -1735,  1244,     0,     0,     0,
       0,     0,   722,  2284,     0,     0,     0,     0,     0,  1244,
    2156,     0,     0,  1196,  1197,     0,     0, -1513,   492,     0,
     493,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   724,     0,   494,     0,     0,     0,
   -1513,     0,   495,     0,     0,   496,     0,     0,     0,     0,
    1331,     0,   724,   725,     0,  2182,     0,     0,     0,     0,
       0,     0,     0,   722,     0,     0,     0,     0,     0,     0,
    2194,   725,     0,     0,   727,     0,     0,   724,     0,     0,
       0,     0,     0,     0,   724,     0,     0,     0,     0,  1198,
    1199,     0,     0,     0,     0,  2061,   725,     0,     0,     0,
       0,   506,     0,   725,     0,     0,     0,   724,  1301,     0,
    1992,  1993,  1994,     0,  1995,  1996,  1997,  1998,  1999,  2000,
       0,     0, -1513,     0,     0,     0,   725,     0,  1245,     0,
   -1513,     0,   722,  2229,     0,  2230,     0,     0,     0,  2235,
    2236,     0, -1735,  1634,     0,     0, -1513,     0, -1513, -1513,
       0,  1196,  1197,     0,  1200,  1201,  1202,  1203,  1204,  1205,
       0,     0,  1206,  1207,     0,  2083,     0,     0,     0,     0,
       0,     0,     0,     0,   585,     0,     0,     0,   727,     0,
       0,  2077,     0,   820,     0, -1513,  1985,  1990, -1513, -1513,
   -1513,  1986,  1987,  1988,     0,     0,  2077,     0,  2115,  2115,
    2096,     0,     0,  2099,     0,  1766,     0,     0,  2512,     0,
     820,     0,  2207,  1985,     0,     0,     0,     0,  1986,  1987,
    1988,     0,     0,   727,     0,     0,   724,  1198,  1199,     0,
       0,     0,     0,     0,     0,  2513,     0,     0,     0,     0,
       0,   722, -1735,     0,     0,   725,     0,     0,     0,  1338,
    1339,  1340,  1341,  1342,  1343,     0,  1499,  1991,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1208,  1209,
       0,   722,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   724,     0,     0,
       0,     0,  1200,  1201,  1202,  1203,  1204,  1205,     0,     0,
    1206,  1207,     0,     0,     0,     0,   725,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1499,     0,
       0,     0,     0,   585,     0,     0,     0,     0,     0,     0,
       0,     0,  1499,   585,   585,   585,     0,     0,  2216,     0,
       0,  2441,   820,   722,     0,  1985,   506,     0,     0,     0,
    1986,  1987,  1988,   585,     0,     0,   724,     0,     0,     0,
       0,     0,     0,     0,     0,  2220,  2182,     0,  1312,     0,
       0,  1313,     0,     0,     0,   725,  1315,  1316,  1317,  1210,
    1211,   647,     0,   585,     0,     0,     0,     0,     0,     0,
       0,     0,  1990,  1318,     0,     0,     0,     0,  1499,  1499,
       0,  1320,     0,     0,     0,     0,  1208,  1209,  1321,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1990,
       0,  1634,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2366,     0,  1322,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1992,  1993,  1994,  2399,  1995,  1996,  1997,  1998,
    1999,  2000,  1991,   722,     0,   724,     0,     0,     0,     0,
    2446,  2447,  2448,  2449,  2450,  2451,  2452,  2453,  2454,  2455,
       0,     0,     0,     0,   725,     0,     0,     0,  1312,  1991,
       0,  1313,     0,     0,     0,   724,     0,     0,     0,     0,
       0,   722,     0,     0,     0,   585,   585,   585,   477,     0,
    2077,  2320,     0,     0,   725,  2320,  2334,  1210,  1211,     0,
       0,  1320,     0,     0,     0,     0,  2558,     0, -1735,     0,
       0,   727,   722,     0,  1323,   722,     0,  1212,     0,     0,
       0,     0,     0,     0,     0,  1766,     0,     0,     0,     0,
    1324, -1735,     0,  1322,     0,  1325,     0,     0,     0,     0,
       0,     0,     0,   585,     0,   506,     0,   724,     0,  1499,
    1442,  1499,     0,  1529,     0,     0,     0,  1326,  1327,     0,
       0,  1244,     0,     0,     0,     0,   725,     0,     0,   506,
       0,  2400,  1328,     0,     0,     0,     0,     0,     0,   727,
       0,     0,     0,     0,   506,   506,   506,   506,   506,   506,
     506,   506,   506,   506,     0,     0,     0,   727,     0,     0,
       0,  1991,     0,  2297,     0,     0,     0,     0,     0,  1899,
    1329,     0,     0,  1330,   585,     0,     0,     0,     0,     0,
       0,     0,   727,     0,  1442,     0,     0,  1331,     0,   727,
     897,   897,  2635,     0, -1735,  1529,     0,  1992,  1993,  1994,
       0,  1995,  1996,  1997,  1998,  1999,  2000,   585,     0,     0,
   -1735,     0,   727,  1245,  1499, -1735,     0,     0,     0,     0,
       0,     0,     0,     0,  1992,  1993,  1994,   724,  1995,  1996,
    1997,  1998,  1999,  2000,     0,     0,  1312,     0,     0,  1313,
       0,     0,     0,     0,     0,     0,   725,     0,     0,     0,
       0,     0, -1735,  1045,  1052, -1515,     0,     0,     0,     0,
       0,     0,  2505,     0,     0,   724,     0,     0,     0,  1320,
       0,     0,     0,     0,     0,     0, -1735,     0,  2709,  1333,
     722,     0,     0,     0,   725,  2522,     0,   585,   585,   585,
     585,     0,     0,     0,  2320,  2334,   724,  2320,     0,   724,
    2531,  1322,     0,     0,  2077,     0,     0,  1331,  2077,     0,
       0,     0,     0,     0,  2549,   725,     0,     0,   725,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     913,   727,     0,     0,  2096,     0,     0,     0,     0,  1766,
       0,     0,  2441,     0,     0,  1634,     0,     0, -1515,  1244,
       0,  1442,     0,     0,  1244,     0,  1992,  1993,  1994,     0,
    1995,  1996,  1997,  1998,  1999,  2000,     0,     0,     0,     0,
       0,  2516,     0,     0,     0,     0,  2612,     0,     0,  1334,
       0,     0,  1335,  1336,  1337, -1529,  1338,  1339,  1340,  1341,
    1342,  1343,   727,     0,     0,     0,  1569,  1571,     0, -1735,
   -1515,     0, -1735,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0, -1515,     0,     0,     0, -1735, -1515,
       0,     0,     0, -1735, -1515,     0,     0,     0,     0,     0,
       0,     0,     0, -1515,  1045,  2730,     0, -1515,     0,     0,
       0,     0,     0,     0,     0,  1499,  2584,     0,     0,     0,
       0,  1267,  2585,     0,     0,     0,  1899,     0,     0,     0,
   -1735,   727,     0,     0,     0,  2586,     0,  2651, -1515,     0,
    2749,  2750,     0,     0,     0,  2848,     0,     0, -1529,     0,
    1278,     0,     0,     0,     0,     0,     0,  2761, -1515,     0,
       0,     0,     0,     0,  2587,     0,  2588,     0,     0, -1735,
    1288,  1289,  1290,  2667,   724,  1297,  1338,  1339,  1340,  1341,
    1342,  1343,   477,  2320,     0,  1331,  2678,     0,     0,   506,
       0,  2077,     0,   725,     0,     0,  2077,     0,  1352,  2077,
   -1529,  2689,     0,     0,  2692,     0,     0, -1515,     0,     0,
   -1515,     0,     0,     0, -1529,     0, -1515,     0,  2717, -1529,
       0,     0,  2589,     0, -1529,     0,     0,     0,     0,     0,
       0,  2819,     0, -1529,     0,     0,     0, -1529,   647,   506,
     727,  1569,  1571,     0,     0,     0,     0,   585,     0,  1395,
   -1515,  2590,  1244,  1409,  1414,     0,     0,     0,     0,  2840,
       0,     0,     0,     0,     0,     0,     0,     0, -1529,     0,
     727,     0,     0, -1515,   506,   506,     0, -1735,     0,     0,
       0,     0,     0,     0,     0,   585,     0,  1442, -1529,  2441,
       0,   506,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   585,     0,     0,  2717,  1045,     0,     0,
       0,     0,     0,     0,  1045,     0,     0,     0,     0,  2591,
       0,     0,     0,     0,  2592,   506,     0,     0,  2061,     0,
       0,     0,     0,     0,     0,  1045,     0, -1529,  2077,     0,
   -1529,     0,   727,  2692,     0,     0, -1529,     0,     0,     0,
       0,     0,     0,     0,     0, -1515,     0,     0,     0,     0,
    2814,     0,     0, -1515,     0,   506,     0,  2593,     0,     0,
       0,     0,     0,     0,   585,     0,     0, -1735,     0, -1515,
   -1529, -1515, -1515,  2594,  1338,  1339,  1340,  1341,  1342,  1343,
       0,     0,     0,   506,     0,     0,     0,   647,     0,     0,
       0,     0,     0, -1529,     0,     0,     0,     0,     0,     0,
       0,   585,     0,     0,     0,     0,     0,     0, -1515,     0,
       0, -1515, -1515, -1515,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1312,     0,     0,  1313,     0,   477,
       0,  1314,  1315,  1316,  1317,     0,     0,     0,  2869,     0,
    1045,     0,   506,     0,     0,     0,  2689,     0,  2061,  1318,
       0,     0,   727,     0,     0,     0,     0,  1320,     0,     0,
       0,     0,     0,     0,  1321,  2717,   647,   647,   647,     0,
    2595,     0,     0,     0,     0, -1529,     0,  2596,     0,     0,
       0,     0,     0, -1529,     0,     0,     0,     0,     0,  1322,
     727,     0,     0,     0,     0,  1442,     0,     0,     0, -1529,
       0, -1529, -1529,     0,     0,     0,     0,     0,     0,     0,
    2689,     0,     0,     0,     0,     0,     0,     0,     0,  1244,
       0,   727,  2814,     0,   727,     0,     0,   508,     0,     0,
       0,     0,     0,     0,     0,     0,  1766,     0, -1529,     0,
       0, -1529, -1529, -1529,     0,     0,     0,     0,     0,     0,
    1442,     0,     0,  1599,     0,     0,  2717,     0,     0,     0,
       0,     0,     0,  1618,     0,  1635,     0,     0,  1646,  1649,
    1654,  1657,  2678,   647,     0,     0,     0,     0,     0,     0,
     509,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1323,     0,  1669,     0,     0,     0,   510,     0,  1673,  1674,
    1675,  1676,  1677,     0,     0,     0,  1324,  1686,  1687,     0,
       0,  1325,  1698,     0,     0,     0,  1701,     0,     0,  1709,
    1710,  1711,  1712,  1713,  1714,  1715,  1716,  1717,     0,     0,
    1718,     0,     0,  1326,  1327,     0,     0,   -39,   897,     0,
    1045,     0,     0,     0,     0,     0,     0,     0,  1328,     0,
     511,     0,     0,     0,     0,     0,     1,  1346,     0,     0,
     512,     0,     0,  1750,     0,     0,     2,     0,     3,     4,
       0,     0,   513,     0,     0,     0,     0,   514,     0,     0,
       0,     0,     0,     0,     5,     0,  1329,     0,     0,  1330,
       0,     0,     0,     6,  1289,  1290,     0,  1346,     0,     0,
       0,     0,     0,  1331,   515,     7,  1332,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     8,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1311,     0,     9,   727,
      10,  1312,     0,     0,  1313,     0,     0,     0,  1314,  1315,
    1316,  1317,     0,     0,     0,     0,     0,     0,    11,   516,
       0,     0,     0,   517,     0,     0,  1318,     0,     0,  1319,
       0,     0,    12,     0,  1320,     0,     0,     0,     0,     0,
       0,  1321,    13,  1045,     0,     0,  1868,  1869,    14,  1870,
       0,     0,     0,     0,     0,     0,    15,     0,    16,    17,
       0,     0,     0,     0,     0,  1333,  1322,     0,     0,     0,
       0,     0,    18,     0,     0,  1346,     0,     0,     0,     0,
    1908,     0,  1346,     0,     0,     0,   518,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   975,     0,     0,
     519,    19,     0,   976,     0,     0,     0,     0,     0,     0,
     988,     0,     0,     0,     0,     0,    20,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   989,
       0,     0,     0,   520,     0,     0,   521,     0,     0,     0,
       0,     0,    21,  1045,   522,     0,     0,   523,     0,     0,
    1963,     0,     0,     0,     0,  1969,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1334,   524,  1323,  1335,  1336,
    1337,     0,  1338,  1339,  1340,  1341,  1342,  1343,     0,   525,
     990,     0,     0,  1324,     0,  1976,   526,     0,  1325,     0,
       0,     0,     0,  1984,     0,   527,     0,     0,     0,     0,
       0,   528,     0,     0,  1654,     0,  1654,  1654,     0,   977,
    1326,  1327,     0,     0,  2020,     0,     0,     0,  2023,    22,
       0,  2025,    23,     0,     0,  1328,   529,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    24,     0,     0,     0,     0,  2043,     0,     0,  2046,
      25,  2048,     0,  1329,     0,     0,  1330,     0,     0,     0,
       0,   991,     0,     0,    26,     0,     0,     0,     0,     0,
    1331,    27,     0,  1332,  1312,    28,     0,  1313,     0,     0,
       0,  1314,  1315,  1316,  1317,    29,     0,  1346,     0,     0,
       0,     0,     0,     0,     0,     0,    30,     0,  1346,  1318,
      31,     0,  1642,     0,     0,     0,     0,  1320,  1346,  1346,
    1346,     0,   992,     0,  1321,  1395,     0,  1346,     0,  1312,
     993,     0,  1313,     0,     0,     0,  1314,  1315,  1316,  1317,
    1414,  1716,   994,     0,     0,     0,    32,     0,     0,  1322,
       0,    33,     0,     0,  1318,     0,     0,  2279,     0,  2123,
       0,     0,  1320,   978,    34,     0,     0,     0,     0,  1321,
       0,     0,  1333,   995,     0,     0,     0,     0,     0,     0,
       0,     0,  1346,     0,     0,     0,     0,     0,    35,     0,
       0,     0,     0,     0,  1322,     0,     0,     0,     0,     0,
       0,     0,    36,     0,     0,   -39,     0,     0,     0,     0,
       0,     0,     0,     0,   996,     0,     0,  1045,   980,     0,
     997,     0,     0,     0,     0,  1346,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1346,
       0,     0,   998,     0,  1346,     0,     0,     0,   999,     0,
    1323,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1000,     0,     0,     0,  1324,     0,     0,     0,
       0,  1325,  1334,     0,     0,  1335,  1336,  1337,     0,  1338,
    1339,  1340,  1341,  1342,  1343,     0,     0,     0,     0,     0,
       0,     0,     0,  1326,  1327,  1323,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1328,     0,
       0,  1324,     0,     0,     0,   982,  1325,     0,  2238,     0,
       0,     0,     0,     0,     0,     0,     0,  2242,     0,     0,
    2243,     0,     0,  2245,     0,     0,     0,     0,  1326,  1327,
       0,     0,     0,     0,     0,     0,  1329,     0,     0,  1330,
       0,     0,     0,  1328,     0,     0,     0,     0,     0,  2265,
    2266,     0,     0,  1331,     0,     0,  1332,     0,     0,     0,
       0,     0,     0,  2276,     0,     0,     0,     0,     0,     0,
       0,     0,  2282,     0,     0,  2285,     0,  2287,     0,     0,
       0,  1329,     0,     0,  1330,  2291,     0,     0,     0,     0,
       0,     0,     0,  2298,  2299,     0,     0,     0,  1331,     0,
    1312,  1332,     0,  1313,     0,     0,     0,  1314,  1315,  1316,
    1317,     0,     0,     0,     0,     0,     0,     0,     0,  1346,
       0,     0,  2338,     0,     0,  1318,     0,     0,     0,     0,
       0,     0,  2346,  1320,     0,     0,     0,     0,  1346,     0,
    1321,     0,     0,     0,     0,  1333,     0,     0,  2359,     0,
       0,     0,     0,     0,     0,  1346,     0,  1642,  1642,     0,
    2001,     0,  1642,     0,     0,  1322,  1346,     0,     0,  1346,
       0,     0,     0,     0,  1346,     0,  1312,  1346,     0,  1313,
       0,     0,     0,  1314,  1315,  1316,  1317,     0,     0,  1346,
    1333,     0,     0,  1346,  1346,  1346,  1346,  1346,     0,     0,
       0,  1318,     0,  1642,  1642,     0,  1346,  1346,     0,  1320,
       0,     0,     0,     0,     0,     0,  1321,     0,  1346,     0,
       0,  1346,     0,     0,     0,     0,     0,     0,     0,  1346,
    1346,  1346,  1346,  1346,  1346,  1346,  1346,  1346,  1346,     0,
       0,  1322,     0,     0,     0,  1334,     0,     0,  1335,  1336,
    1337,     0,  1338,  1339,  1340,  1341,  1342,  1343,     0,     0,
       0,     0,  1663,     0,     0,     0,  1323,     0,     0,     0,
    1346,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2493,  1324,     0,     0,     0,     0,  1325,     0,     0,
    1334,     0,     0,  1335,  1336,  1337,     0,  1338,  1339,  1340,
    1341,  1342,  1343,     0,     0,     0,     0,  1663,     0,  1326,
    1327,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1328,     0,     0,  2506,  2507,     0,
       0,     0,  2508,     0,     0,     0,     0,  2511,     0,     0,
    2514,  2515,  1323,     0,     0,  2519,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1324,     0,
       0,     0,  1329,  1325,     0,  1330,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1331,
       0,     0,  1332,     0,     0,  1326,  1327,     0,  1346,  1346,
    1346,   897,     0,     0,     0,     0,     0,     0,     0,     0,
    1328,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1346,     0,
       0,     0,     0,  2606,     0,     0,     0,     0,  1329,     0,
       0,  1330,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1331,     0,     0,  1332,  1312,
       0,     0,  1313,     0,     0,     0,  1314,  1315,  1316,  1317,
       0,  1333,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1346,  1318,     0,     0,     0,     0,  1346,
       0,     0,  1320,     0,     0,     0,     0,     0,     0,  1321,
       0,     0,  2001,  2001,  1346,     0,  1642,  1642,  1642,  1642,
       0,     0,  1642,  1642,  1642,  1642,  1642,  1642,  1642,  1642,
    1642,  1642,  2001,     0,  1322,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1346,     0,     0,  1346,     0,  1346,     0,  1333,  2020,  2001,
    2001,     0,     0,     0,     0,     0,  2662,  2663,     0,     0,
    2664,     0,     0,  1346,  1642,  1642,  1346,     0,  1346,     0,
       0,  1334,     0,     0,  1335,  1336,  1337,     0,  1338,  1339,
    1340,  1341,  1342,  1343,     0,     0,     0,     0,  2027,     0,
       0,     0,     0,     0,     0,     0,     0,  2705,  2706,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2719,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1323,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1324,     0,  1346,     0,     0,  1325,  1334,     0,     0,
    1335,  1336,  1337,     0,  1338,  1339,  1340,  1341,  1342,  1343,
       0,     0,     0,     0,  2241,     0,     0,  1312,  1326,  1327,
    1313,     0,     0,     0,  1314,  1315,  1316,  1317,     0,     0,
       0,     0,     0,  1328,     0,     0,  1312,     0,     0,  1313,
       0,   975,  1318,  1314,  1315,  1316,  1317,   976,     0,     0,
    1320,     0,     0,     0,   988,     0,     0,  1321,     0,     0,
       0,  1318,     0,     0,     0,     0,     0,     0,     0,  1320,
       0,  1329,     0,   989,  1330,  2798,  1321,     0,     0,     0,
       0,     0,  1322,     0,     0,     0,     0,     0,  1331,     0,
       0,  1332,  1297,     0,     0,     0,     0,     0,     0,     0,
       0,  1322,     0,     0,     0,     0,     0,  2820,  1346,     0,
       0,     0,  1346,  1346,     0,  1346,     0,     0,  2001,  2001,
    2001,  2001,  2834,     0,   990,  2001,  2001,  2001,  2001,  2001,
    2001,  2001,  2001,  2001,  2001,  1346,  1346,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1346,     0,     0,     0,
       0,     0,  1346,   977,     0,  1346,     0,  1346,     0,     0,
       0,  1346,     0,     0,  2001,  2001,     0,     0,  1346,  1346,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1333,     0,     0,  1323,  1312,     0,     0,  1313,     0,     0,
       0,     0,  1315,  1316,  1317,     0,     0,     0,     0,  1324,
       0,     0,  1323,     0,  1325,  2705,     0,     0,  1346,  2881,
       0,     0,     0,     0,     0,   991,  1346,  1320,  1324,     0,
       0,     0,     0,  1325,  1321,     0,  1326,  1327,     0,  1346,
       0,     0,     0,     0,     0,     0,     0,  2904,     0,     0,
       0,  1328,     0,     0,     0,  1326,  1327,     0,     0,  1322,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1328,     0,     0,     0,     0,     0,   992,     0,     0,     0,
    2705,     0,     0,     0,   993,     0,     0,     0,     0,  1329,
    1334,     0,  1330,  1335,  1336,  1337,   994,  1338,  1339,  1340,
    1341,  1342,  1343,     0,     0,     0,  1331,  2280,  1329,  1332,
       0,  1330,     0,     0,     0,     0,     0,   978,     0,     0,
    2954,  2954,     0,     0,     0,  1331,     0,   995,  1332,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2954,     0,     0,     0,     0,
    1323,     0,     0,     0,     0,     0,     0,     0,  1837,     0,
       0,     0,   980,  1346,   997,     0,  1324,  1642,     0,     0,
       0,  1325,     0,     0,     0,     0,  1346,  1346,  1346,     0,
       0,  1346,     0,     0,  1346,  1346,   998,     0,  1333,  1346,
       0,  2954,  1838,  1326,  1327,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1000,  1333,  1328,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1329,     0,     0,  1330,
       0,     0,     0,     0,     0,     0,     0,  1642,     0,   982,
       0,     0,     0,  1331,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1346,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1334,     0,
       0,  1335,  1336,  1337,     0,  1338,  1339,  1340,  1341,  1342,
    1343,     0,     0,     0,     0,  2367,     0,  1334,     0,     0,
    1335,  1336,  1337,     0,  1338,  1339,  1340,  1341,  1342,  1343,
       0,     0,     0,     0,  2495,     0,  2001,  1642,     0,     0,
       0,     0,  1346,  1346,  1346,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1333,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1346,  1346,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1346,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2001,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2001,     0,     0,     0,     0,  1334,     0,     0,  1335,  1336,
    1337,     0,  1338,  1339,  1340,  1341,  1342,  1343,  1346,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1346,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1346,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1012,   817,   549,   818,   819,   820,   821,   822,     0,
       0,  1346,     0,     0,     0,     0,     0,    93,    94,    95,
      96,    97,    98,    99,   100,  1013,   101,   102,   103,     0,
       0,     0,     0,   823,  1346,     0,   104,   105,     0,   106,
     107,   108,  1014,   110,   111,   112,   113,   824,  1015,   825,
     826,     0,   118,   119,   120,   121,   122,   123,   827,   828,
     124,   125,   829,   830,   128,     0,   129,   130,   131,   132,
     831,     0,  1016,     0,   135,   136,   137,   138,   139,   140,
    1017,   142,   143,   144,  1346,   145,   146,   147,   148,   149,
     150,     0,  1018,   152,   153,   154,   833,   834,   835,  1019,
     837,   838,   839,   156,   157,   158,   159,   160,   161,   162,
     840,   841,   165,   842,   166,     0,   167,   168,   169,   170,
     171,   172,     0,   173,   174,   175,   176,   177,  1020,     0,
     178,   179,   677,   181,   182,     0,   183,   184,   185,     0,
     186,   187,   188,     0,   189,   190,   191,   192,   843,   194,
     195,   196,   197,   198,   844,   845,   200,     0,   201,   202,
     846,   204,     0,   205,     0,   206,  1021,     0,  1022,   209,
     210,   211,  1023,   213,     0,   214,     0,   847,   848,   217,
       0,   218,   219,   220,   221,   222,   223,   224,  1024,   226,
     227,   228,   229,     0,   230,   231,   232,   233,   234,   235,
       0,   236,  1025,   238,   239,   240,   241,   242,   243,   849,
     850,     0,   851,     0,   247,  1026,  1027,   250,  1028,   252,
     253,   254,   255,   256,   257,     0,     0,   258,  1029,   260,
    1030,     0,   262,   263,   264,   852,   853,   265,   266,   267,
     268,   269,  1031,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   854,  1032,   855,   292,   293,   294,   295,   856,   296,
     297,  1033,   299,   857,   858,   301,   859,   303,   304,   305,
       0,   306,   307,     0,     0,   860,   309,   310,     0,     0,
     311,   312,  1034,   314,  1035,   861,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,     0,   327,   328,   862,
     330,   331,   332,   333,   334,   335,     0,   336,   337,   338,
     339,   340,   341,     0,   342,   343,   344,   863,   346,   347,
     348,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,     0,   363,   364,  1036,
     366,   367,   368,   864,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,     0,   381,   382,   383,   384,
     385,   865,   386,   387,   388,   389,   390,  1037,   392,   393,
     866,   395,     0,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,  1038,   408,   867,   410,     0,   411,
     412,     0,   413,  1039,   415,   416,   417,   418,   419,     0,
     868,   869,     0,     0,   422,   423,   870,   425,   871,   872,
     427,   428,  1040,   430,   431,   432,   433,   434,     0,     0,
     435,   436,   437,   438,   439,   874,     0,   440,   441,   442,
     443,   444,   445,   875,  1041,   447,  1042,   449,   450,   451,
     452,     0,     0,   453,     0,     0,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   876,     0,     0,
       0,     0,     0,     0,   877,   878,  1043,     0,     0,     0,
       0,   880,     0,   881,  1044,     0,     0,     0,   882,     0,
     883,   884,    92,   817,   549,   818,   819,   820,   821,   822,
       0,     0,     0,     0,     0,     0,     0,     0,    93,    94,
      95,    96,    97,    98,    99,   100,     0,   101,   102,   103,
       0,     0,     0,     0,   823,     0,     0,   104,   105,     0,
     106,   107,   108,   109,   110,   111,   112,   113,   824,   115,
     825,   826,     0,   118,   119,   120,   121,   122,   123,   827,
     828,   124,   125,   829,   830,   128,     0,   129,   130,   131,
     132,   831,     0,   832,     0,   135,   136,   137,   138,   139,
     140,   141,   142,   143,   144,     0,   145,   146,   147,   148,
     149,   150,     0,   151,   152,   153,   154,   833,   834,   835,
     836,   837,   838,   839,   156,   157,   158,   159,   160,   161,
     162,   840,   841,   165,   842,   166,     0,   167,   168,   169,
     170,   171,   172,     0,   173,   174,   175,   176,   177,     0,
       0,   178,   179,   677,   181,   182,     0,   183,   184,   185,
       0,   186,   187,   188,     0,   189,   190,   191,   192,   843,
     194,   195,   196,   197,   198,   844,   845,   200,     0,   201,
     202,   846,   204,     0,   205,     0,   206,   207,     0,   208,
     209,   210,   211,   212,   213,     0,   214,     0,   847,   848,
     217,     0,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,     0,   230,   231,   232,   233,   234,
     235,     0,   236,   237,   238,   239,   240,   241,   242,   243,
     849,   850,     0,   851,     0,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,     0,     0,   258,   259,
     260,   261,     0,   262,   263,   264,   852,   853,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   854,   290,   855,   292,   293,   294,   295,   856,
     296,   297,   298,   299,   857,   858,   301,   859,   303,   304,
     305,     0,   306,   307,     0,     0,   860,   309,   310,     0,
       0,   311,   312,   313,   314,   315,   861,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,     0,   327,   328,
     862,   330,   331,   332,   333,   334,   335,     0,   336,   337,
     338,   339,   340,   341,     0,   342,   343,   344,   863,   346,
     347,   348,   349,     0,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,     0,   363,   364,
     365,   366,   367,   368,   864,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,    26,   381,   382,   383,
     384,   385,   865,   386,   387,   388,   389,   390,   391,   392,
     393,   866,   395,     0,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   867,   410,     0,
     411,   412,    31,   413,   414,   415,   416,   417,   418,   419,
       0,   868,   869,     0,     0,   422,   423,   870,   425,   871,
     872,   427,   428,   873,   430,   431,   432,   433,   434,     0,
       0,   435,   436,   437,   438,   439,   874,     0,   440,   441,
     442,   443,   444,   577,   875,     0,   447,   448,   449,   450,
     451,   452,     0,     0,   453,     0,    34,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   876,     0,
      35,     0,     0,     0,     0,   877,   878,     0,     0,     0,
       0,     0,   880,     0,   881,  2810,     0,     0,     0,   882,
       0,   883,   884,    92,   817,   549,   818,   819,   820,   821,
     822,     0,     0,     0,     0,     0,     0,     0,     0,    93,
      94,    95,    96,    97,    98,    99,   100,     0,   101,   102,
     103,     0,     0,     0,     0,   823,     0,     0,   104,   105,
       0,   106,   107,   108,   109,   110,   111,   112,   113,   824,
     115,   825,   826,     0,   118,   119,   120,   121,   122,   123,
     827,   828,   124,   125,   829,   830,   128,     0,   129,   130,
     131,   132,   831,     0,   832,     0,   135,   136,   137,   138,
     139,   140,   141,   142,   143,   144,     0,   145,   146,   147,
     148,   149,   150,     0,   151,   152,   153,   154,   833,   834,
     835,   836,   837,   838,   839,   156,   157,   158,   159,   160,
     161,   162,   840,   841,   165,   842,   166,     0,   167,   168,
     169,   170,   171,   172,     0,   173,   174,   175,   176,   177,
       0,     0,   178,   179,   677,   181,   182,     0,   183,   184,
     185,     0,   186,   187,   188,     0,   189,   190,   191,   192,
     843,   194,   195,   196,   197,   198,   844,   845,   200,     0,
     201,   202,   846,   204,     0,   205,     0,   206,   207,     0,
     208,   209,   210,   211,   212,   213,     0,   214,     0,   847,
     848,   217,     0,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,     0,   230,   231,   232,   233,
     234,   235,     0,   236,   237,   238,   239,   240,   241,   242,
     243,   849,   850,     0,   851,     0,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,     0,     0,   258,
     259,   260,   261,     0,   262,   263,   264,   852,   853,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   854,   290,   855,   292,   293,   294,   295,
     856,   296,   297,   298,   299,   857,   858,   301,   859,   303,
     304,   305,     0,   306,   307,     0,     0,   860,   309,   310,
       0,     0,   311,   312,   313,   314,   315,   861,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,     0,   327,
     328,   862,   330,   331,   332,   333,   334,   335,     0,   336,
     337,   338,   339,   340,   341,     0,   342,   343,   344,   863,
     346,   347,   348,   349,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,     0,   363,
     364,   365,   366,   367,   368,   864,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,    26,   381,   382,
     383,   384,   385,   865,   386,   387,   388,   389,   390,   391,
     392,   393,   866,   395,     0,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   867,   410,
       0,   411,   412,    31,   413,   414,   415,   416,   417,   418,
     419,     0,   868,   869,     0,     0,   422,   423,   870,   425,
     871,   872,   427,   428,   873,   430,   431,   432,   433,   434,
       0,     0,   435,   436,   437,   438,   439,   874,     0,   440,
     441,   442,   443,   444,   577,   875,     0,   447,   448,   449,
     450,   451,   452,     0,     0,   453,     0,    34,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   876,
       0,    35,     0,     0,     0,     0,   877,   878,     0,     0,
       0,     0,     0,   880,     0,   881,     0,     0,     0,     0,
     882,     0,   883,   884,    92,   817,   549,   818,   819,   820,
     821,   822,     0,     0,     0,     0,     0,     0,     0,     0,
      93,    94,    95,    96,    97,    98,    99,   100,     0,   101,
     102,   103,     0,     0,     0,     0,   823,     0,     0,   104,
     105,     0,   106,   107,   108,   109,   110,   111,   112,   113,
     824,   115,   825,   826,  1650,   118,   119,   120,   121,   122,
     123,   827,   828,   124,   125,   829,   830,   128,     0,   129,
     130,   131,   132,   831,     0,   832,     0,   135,   136,   137,
     138,   139,   140,   141,   142,   143,   144,     0,   145,   146,
     147,   148,   149,   150,     0,   151,   152,   153,   154,   833,
     834,   835,   836,   837,   838,   839,   156,   157,   158,   159,
     160,   161,   162,   840,   841,   165,   842,   166,     0,   167,
     168,   169,   170,   171,   172,     0,   173,   174,   175,   176,
     177,     0,     0,   178,   179,   677,   181,   182,     0,   183,
     184,   185,     0,   186,   187,   188,     0,   189,   190,   191,
     192,   843,   194,   195,   196,   197,   198,   844,   845,   200,
       0,   201,   202,   846,   204,     0,   205,     0,   206,   207,
    1651,   208,   209,   210,   211,   212,   213,     0,   214,     0,
     847,   848,   217,     0,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,     0,   230,   231,   232,
     233,   234,   235,     0,   236,   237,   238,   239,   240,   241,
     242,   243,   849,   850,     0,   851,     0,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,     0,  1652,
     258,   259,   260,   261,     0,   262,   263,   264,   852,   853,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   854,   290,   855,   292,   293,   294,
     295,   856,   296,   297,   298,   299,   857,   858,   301,   859,
     303,   304,   305,     0,   306,   307,     0,     0,   860,   309,
     310,     0,     0,   311,   312,   313,   314,   315,   861,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,     0,
     327,   328,   862,   330,   331,   332,   333,   334,   335,     0,
     336,   337,   338,   339,   340,   341,     0,   342,   343,   344,
     863,   346,   347,   348,   349,     0,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,     0,
     363,   364,   365,   366,   367,   368,   864,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,     0,   381,
     382,   383,   384,   385,   865,   386,   387,   388,   389,   390,
     391,   392,   393,   866,   395,     0,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   867,
     410,     0,   411,   412,     0,   413,   414,   415,   416,   417,
     418,   419,     0,   868,   869,     0,  1653,   422,   423,   870,
     425,   871,   872,   427,   428,   873,   430,   431,   432,   433,
     434,     0,     0,   435,   436,   437,   438,   439,   874,     0,
     440,   441,   442,   443,   444,   445,   875,     0,   447,   448,
     449,   450,   451,   452,     0,     0,   453,     0,     0,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     876,     0,     0,     0,     0,     0,     0,   877,   878,     0,
       0,     0,     0,     0,   880,     0,   881,     0,     0,     0,
       0,   882,     0,   883,   884,    92,   817,   549,   818,   819,
     820,   821,   822,     0,     0,     0,     0,     0,     0,     0,
       0,    93,    94,    95,    96,    97,    98,    99,   100,  -936,
     101,   102,   103,     0,     0,     0,  -936,   823,     0,     0,
     104,   105,     0,   106,   107,   108,   109,   110,   111,   112,
     113,   824,   115,   825,   826,     0,   118,   119,   120,   121,
     122,   123,   827,   828,   124,   125,   829,   830,   128,     0,
     129,   130,   131,   132,   831,     0,   832,     0,   135,   136,
     137,   138,   139,   140,   141,   142,   143,   144,     0,   145,
     146,   147,   148,   149,   150,     0,   151,   152,   153,   154,
     833,   834,   835,   836,   837,   838,   839,   156,   157,   158,
     159,   160,   161,   162,   840,   841,   165,   842,   166,     0,
     167,   168,   169,   170,   171,   172,     0,   173,   174,   175,
     176,   177,     0,     0,   178,   179,   677,   181,   182,     0,
     183,   184,   185,     0,   186,   187,   188,     0,   189,   190,
     191,   192,   843,   194,   195,   196,   197,   198,   844,   845,
     200,     0,   201,   202,   846,   204,     0,   205,     0,   206,
     207,     0,   208,   209,   210,   211,   212,   213,     0,   214,
       0,   847,   848,   217,     0,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,     0,   230,   231,
     232,   233,   234,   235,     0,   236,   237,   238,   239,   240,
     241,   242,   243,   849,   850,     0,   851,     0,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,     0,
       0,   258,   259,   260,   261,     0,   262,   263,   264,   852,
     853,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   854,   290,   855,   292,   293,
     294,   295,   856,   296,   297,   298,   299,   857,   858,   301,
     859,   303,   304,   305,     0,   306,   307,     0,     0,   860,
     309,   310,     0,     0,   311,   312,   313,   314,   315,   861,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,   327,   328,   862,   330,   331,   332,   333,   334,   335,
       0,   336,   337,   338,   339,   340,   341,     0,   342,   343,
     344,   863,   346,   347,   348,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
       0,   363,   364,   365,   366,   367,   368,   864,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,     0,
     381,   382,   383,   384,   385,   865,   386,   387,   388,   389,
     390,   391,   392,   393,   866,   395,  -936,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     867,   410,     0,   411,   412,     0,   413,   414,   415,   416,
     417,   418,   419,     0,   868,   869,     0,     0,   422,   423,
     870,   425,   871,   872,   427,   428,   873,   430,   431,   432,
     433,   434,     0,     0,   435,   436,   437,   438,   439,   874,
       0,   440,   441,   442,   443,   444,   445,   875,     0,   447,
     448,   449,   450,   451,   452,     0,     0,   453,     0,     0,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   876,     0,     0,     0,     0,     0,     0,   877,   878,
       0,     0,     0,     0,     0,   880,     0,   881,     0,     0,
       0,     0,   882,     0,   883,   884,    92,   817,   549,   818,
     819,   820,   821,   822,     0,     0,     0,     0,     0,     0,
       0,     0,    93,    94,    95,    96,    97,    98,    99,   100,
    1391,   101,   102,   103,     0,     0,     0,     0,   823,     0,
       0,   104,   105,     0,   106,   107,   108,   109,   110,   111,
     112,   113,   824,   115,   825,   826,     0,   118,   119,   120,
     121,   122,   123,   827,   828,   124,   125,   829,   830,   128,
       0,   129,   130,   131,   132,   831,     0,   832,     0,   135,
     136,   137,   138,   139,   140,   141,   142,   143,   144,     0,
     145,   146,   147,   148,   149,   150,     0,   151,   152,   153,
     154,   833,   834,   835,   836,   837,   838,   839,   156,   157,
     158,   159,   160,   161,   162,   840,   841,   165,   842,   166,
       0,   167,   168,   169,   170,   171,   172,     0,   173,   174,
     175,   176,   177,     0,     0,   178,   179,   677,   181,   182,
       0,   183,   184,   185,     0,   186,   187,   188,     0,   189,
     190,   191,   192,   843,   194,   195,   196,   197,   198,   844,
     845,   200,     0,   201,   202,   846,   204,     0,   205,     0,
     206,   207,     0,   208,   209,   210,   211,   212,   213,     0,
     214,     0,   847,   848,   217,     0,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,     0,   230,
     231,   232,   233,   234,   235,     0,   236,   237,   238,   239,
     240,   241,   242,   243,   849,   850,     0,   851,     0,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
       0,     0,   258,   259,   260,   261,     0,   262,   263,   264,
     852,   853,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   854,   290,   855,   292,
     293,   294,   295,   856,   296,   297,   298,   299,   857,   858,
     301,   859,   303,   304,   305,     0,   306,   307,     0,     0,
     860,   309,   310,     0,     0,   311,   312,   313,   314,   315,
     861,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,     0,   327,   328,   862,   330,   331,   332,   333,   334,
     335,     0,   336,   337,   338,   339,   340,   341,     0,   342,
     343,   344,   863,   346,   347,   348,   349,     0,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,     0,   363,   364,   365,   366,   367,   368,   864,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
       0,   381,   382,   383,   384,   385,   865,   386,   387,   388,
     389,   390,   391,   392,   393,   866,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   867,   410,     0,   411,   412,     0,   413,   414,   415,
     416,   417,   418,   419,     0,   868,   869,     0,     0,   422,
     423,   870,   425,   871,   872,   427,   428,   873,   430,   431,
     432,   433,   434,     0,     0,   435,   436,   437,   438,   439,
     874,     0,   440,   441,   442,   443,   444,   445,   875,     0,
     447,   448,   449,   450,   451,   452,     0,     0,   453,     0,
       0,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   876,     0,     0,     0,     0,     0,     0,   877,
     878,  1392,     0,     0,     0,     0,   880,     0,   881,     0,
       0,     0,     0,   882,     0,   883,   884,    92,   817,   549,
     818,   819,   820,   821,   822,     0,     0,     0,     0,     0,
       0,     0,     0,    93,    94,    95,    96,    97,    98,    99,
     100,  2693,   101,   102,   103,     0,     0,     0,     0,   823,
       0,     0,   104,   105,     0,   106,   107,   108,   109,   110,
     111,   112,   113,   824,   115,   825,   826,     0,   118,   119,
     120,   121,   122,   123,   827,   828,   124,   125,   829,   830,
     128,     0,   129,   130,   131,   132,   831,     0,   832,     0,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
       0,   145,   146,   147,   148,   149,   150,     0,   151,   152,
    2694,   154,   833,   834,   835,   836,   837,   838,   839,   156,
     157,   158,   159,   160,   161,   162,   840,   841,   165,   842,
     166,     0,   167,   168,   169,   170,   171,   172,     0,   173,
     174,   175,   176,   177,     0,     0,   178,   179,   677,   181,
     182,     0,   183,   184,   185,     0,   186,   187,   188,     0,
     189,   190,   191,   192,   843,   194,   195,   196,   197,   198,
     844,   845,   200,     0,   201,   202,   846,   204,     0,   205,
       0,   206,   207,     0,   208,   209,   210,   211,   212,   213,
       0,   214,     0,  2695,   848,   217,     0,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,     0,
     230,   231,   232,   233,   234,   235,     0,   236,   237,   238,
     239,   240,   241,   242,   243,   849,   850,     0,   851,     0,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,     0,     0,   258,   259,   260,   261,     0,   262,   263,
     264,   852,   853,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   854,   290,   855,
     292,   293,   294,   295,   856,   296,   297,   298,   299,   857,
     858,   301,   859,   303,   304,   305,     0,   306,   307,     0,
       0,   860,   309,   310,     0,     0,   311,   312,   313,   314,
     315,   861,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,     0,   327,   328,   862,   330,   331,   332,   333,
     334,   335,     0,   336,   337,   338,   339,   340,   341,     0,
     342,   343,   344,   863,   346,   347,   348,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,     0,   363,   364,   365,   366,   367,  2696,   864,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,     0,   381,   382,   383,   384,   385,   865,   386,   387,
     388,   389,   390,   391,   392,   393,   866,   395,     0,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   867,   410,     0,   411,   412,     0,   413,   414,
     415,   416,   417,   418,   419,     0,   868,   869,     0,     0,
     422,   423,   870,   425,   871,   872,   427,   428,   873,   430,
     431,   432,   433,   434,     0,     0,   435,   436,   437,   438,
     439,   874,     0,   440,   441,   442,   443,   444,   445,   875,
       0,   447,   448,   449,   450,   451,   452,     0,     0,   453,
       0,     0,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   876,     0,     0,     0,     0,     0,     0,
     877,   878,  2697,     0,     0,     0,     0,   880,     0,  2698,
       0,     0,     0,     0,   882,     0,   883,   884,    92,   817,
     549,   818,   819,   820,   821,   822,     0,     0,     0,     0,
       0,     0,     0,     0,    93,    94,    95,    96,    97,    98,
      99,   100,     0,   101,   102,   103,     0,     0,     0,     0,
     823,     0,     0,   104,   105,     0,   106,   107,   108,   109,
     110,   111,   112,   113,   824,   115,   825,   826,     0,   118,
     119,   120,   121,   122,   123,   827,   828,   124,   125,   829,
     830,   128,     0,   129,   130,   131,   132,   831,     0,   832,
       0,   135,   136,   137,   138,   139,   140,   141,   142,   143,
     144,     0,   145,   146,   147,   148,   149,   150,     0,   151,
     152,   153,   154,   833,   834,   835,   836,   837,   838,   839,
     156,   157,   158,   159,   160,   161,   162,   840,   841,   165,
     842,   166,     0,   167,   168,   169,   170,   171,   172,     0,
     173,   174,   175,   176,   177,     0,     0,   178,   179,   677,
     181,   182,     0,   183,   184,   185,     0,   186,   187,   188,
       0,   189,   190,   191,   192,   843,   194,   195,   196,   197,
     198,   844,   845,   200,     0,   201,   202,   846,   204,     0,
     205,     0,   206,   207,     0,   208,   209,   210,   211,   212,
     213,     0,   214,     0,   847,   848,   217,     0,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,   237,
     238,   239,   240,   241,   242,   243,   849,   850,     0,   851,
       0,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,     0,     0,   258,   259,   260,   261,     0,   262,
     263,   264,   852,   853,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   854,   290,
     855,   292,   293,   294,   295,   856,   296,   297,   298,   299,
     857,   858,   301,   859,   303,   304,   305,     0,   306,   307,
       0,     0,   860,   309,   310,     0,     0,   311,   312,   313,
     314,   315,   861,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,     0,   327,   328,   862,   330,   331,   332,
     333,   334,   335,     0,   336,   337,   338,   339,   340,   341,
       0,   342,   343,   344,   863,   346,   347,   348,   349,     0,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,     0,   363,   364,   365,   366,   367,   368,
     864,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,     0,   381,   382,   383,   384,   385,   865,   386,
     387,   388,   389,   390,   391,   392,   393,   866,   395,     0,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   867,   410,     0,   411,   412,     0,   413,
     414,   415,   416,   417,   418,   419,     0,   868,   869,     0,
       0,   422,   423,   870,   425,   871,   872,   427,   428,   873,
     430,   431,   432,   433,   434,     0,     0,   435,   436,   437,
     438,   439,   874,     0,   440,   441,   442,   443,   444,   445,
     875,     0,   447,   448,   449,   450,   451,   452,     0,     0,
     453,     0,     0,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   876,     0,     0,     0,     0,     0,
       0,   877,   878,   879,     0,     0,     0,     0,   880,     0,
     881,     0,     0,     0,     0,   882,     0,   883,   884,    92,
    1405,   549,   818,   819,   820,  1406,   822,     0,     0,     0,
       0,     0,     0,     0,     0,    93,    94,    95,    96,    97,
      98,    99,   100,  1407,   101,   102,   103,     0,     0,     0,
       0,   823,     0,     0,   104,   105,     0,   106,   107,   108,
     109,   110,   111,   112,   113,   824,   115,   825,   826,     0,
     118,   119,   120,   121,   122,   123,   827,   828,   124,   125,
     829,   830,   128,     0,   129,   130,   131,   132,   831,     0,
     832,     0,   135,   136,   137,   138,   139,   140,   141,   142,
     143,   144,     0,   145,   146,   147,   148,   149,   150,     0,
     151,   152,   153,   154,   833,   834,   835,   836,   837,   838,
     839,   156,   157,   158,   159,   160,   161,   162,   840,   841,
     165,   842,   166,     0,   167,   168,   169,   170,   171,   172,
       0,   173,   174,   175,   176,   177,     0,     0,   178,   179,
     677,   181,   182,     0,   183,   184,   185,     0,   186,   187,
     188,     0,   189,   190,   191,   192,   843,   194,   195,   196,
     197,   198,   844,   845,   200,     0,   201,   202,   846,   204,
       0,   205,     0,   206,   207,     0,   208,   209,   210,   211,
     212,   213,     0,   214,     0,   847,   848,   217,     0,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,     0,   230,   231,   232,   233,   234,   235,     0,   236,
     237,   238,   239,   240,   241,   242,   243,   849,   850,     0,
     851,     0,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,     0,     0,   258,   259,   260,   261,     0,
     262,   263,   264,   852,   853,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   854,
     290,   855,   292,   293,   294,   295,   856,   296,   297,   298,
     299,   857,   858,   301,   859,   303,   304,   305,     0,   306,
     307,     0,     0,   860,   309,   310,     0,     0,   311,   312,
     313,   314,   315,   861,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,     0,   327,   328,   862,   330,   331,
     332,   333,   334,   335,     0,   336,   337,   338,   339,   340,
     341,     0,   342,   343,   344,   863,   346,   347,   348,   349,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,     0,   363,   364,   365,   366,   367,
     368,   864,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,     0,   381,   382,   383,   384,   385,   865,
     386,   387,   388,   389,   390,   391,   392,   393,   866,   395,
       0,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   867,   410,     0,   411,   412,     0,
     413,   414,   415,   416,   417,   418,   419,     0,   868,   869,
       0,     0,   422,   423,   870,   425,   871,   872,   427,   428,
     873,   430,   431,   432,   433,   434,     0,     0,   435,   436,
     437,   438,   439,   874,     0,   440,   441,   442,   443,   444,
     445,   875,     0,   447,   448,   449,   450,   451,   452,     0,
       0,   453,     0,     0,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   876,     0,     0,     0,     0,
       0,     0,   877,   878,     0,     0,     0,     0,     0,   880,
       0,   881,     0,     0,     0,     0,   882,     0,   883,   884,
    1012,   817,   549,   818,   819,   820,   821,   822,     0,     0,
       0,     0,     0,     0,     0,     0,    93,    94,    95,    96,
      97,    98,    99,   100,     0,   101,   102,   103,     0,     0,
       0,     0,   823,     0,     0,   104,   105,     0,   106,   107,
     108,  1014,   110,   111,   112,   113,   824,  1015,   825,   826,
       0,   118,   119,   120,   121,   122,   123,   827,   828,   124,
     125,   829,   830,   128,     0,   129,   130,   131,   132,   831,
       0,  1016,     0,   135,   136,   137,   138,   139,   140,  1017,
     142,   143,   144,     0,   145,   146,   147,   148,   149,   150,
       0,  1018,   152,   153,   154,   833,   834,   835,  1019,   837,
     838,   839,   156,   157,   158,   159,   160,   161,   162,   840,
     841,   165,   842,   166,     0,   167,   168,   169,   170,   171,
     172,     0,   173,   174,   175,   176,   177,     0,     0,   178,
     179,   677,   181,   182,     0,   183,   184,   185,     0,   186,
     187,   188,     0,   189,   190,   191,   192,   843,   194,   195,
     196,   197,   198,   844,   845,   200,     0,   201,   202,   846,
     204,     0,   205,     0,   206,  1021,     0,  1022,   209,   210,
     211,  1023,   213,     0,   214,     0,   847,   848,   217,     0,
     218,   219,   220,   221,   222,   223,   224,  1024,   226,   227,
     228,   229,     0,   230,   231,   232,   233,   234,   235,     0,
     236,  1025,   238,   239,   240,   241,   242,   243,   849,   850,
       0,   851,     0,   247,  1026,  1027,   250,  1028,   252,   253,
     254,   255,   256,   257,     0,     0,   258,  1029,   260,  1030,
       0,   262,   263,   264,   852,   853,   265,   266,   267,   268,
     269,  1031,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     854,  1032,   855,   292,   293,   294,   295,   856,   296,   297,
    1033,   299,   857,   858,   301,   859,   303,   304,   305,     0,
     306,   307,     0,     0,   860,   309,   310,     0,     0,   311,
     312,  1034,   314,  1035,   861,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,     0,   327,   328,   862,   330,
     331,   332,   333,   334,   335,     0,   336,   337,   338,   339,
     340,   341,     0,   342,   343,   344,   863,   346,   347,   348,
     349,     0,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,     0,   363,   364,  1036,   366,
     367,   368,   864,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,     0,   381,   382,   383,   384,   385,
     865,   386,   387,   388,   389,   390,  1037,   392,   393,   866,
     395,     0,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,  1038,   408,   867,   410,     0,   411,   412,
       0,   413,  1039,   415,   416,   417,   418,   419,     0,   868,
     869,     0,     0,   422,   423,   870,   425,   871,   872,   427,
     428,  1040,   430,   431,   432,   433,   434,     0,     0,   435,
     436,   437,   438,   439,   874,     0,   440,   441,   442,   443,
     444,   445,   875,     0,   447,  1042,   449,   450,   451,   452,
       0,     0,   453,     0,     0,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   876,     0,     0,     0,
       0,     0,     0,   877,   878,     0,     0,     0,     0,     0,
     880,     0,   881,  1524,     0,     0,     0,   882,     0,   883,
     884,    92,   817,   549,   818,   819,   820,   821,   822,     0,
       0,     0,     0,     0,     0,     0,     0,    93,    94,    95,
      96,    97,    98,    99,   100,     0,   101,   102,   103,     0,
       0,     0,     0,   823,     0,     0,   104,   105,     0,   106,
     107,   108,   109,   110,   111,   112,   113,   824,   115,   825,
     826,     0,   118,   119,   120,   121,   122,   123,   827,   828,
     124,   125,   829,   830,   128,     0,   129,   130,   131,   132,
     831,     0,   832,     0,   135,   136,   137,   138,   139,   140,
     141,   142,   143,   144,     0,   145,   146,   147,   148,   149,
     150,     0,   151,   152,   153,   154,   833,   834,   835,   836,
     837,   838,   839,   156,   157,   158,   159,   160,   161,   162,
     840,   841,   165,   842,   166,     0,   167,   168,   169,   170,
     171,   172,     0,   173,   174,   175,   176,   177,     0,     0,
     178,   179,   677,   181,   182,     0,   183,   184,   185,     0,
     186,   187,   188,     0,   189,   190,   191,   192,   843,   194,
     195,   196,   197,   198,   844,   845,   200,     0,   201,   202,
     846,   204,     0,   205,     0,   206,   207,     0,   208,   209,
     210,   211,   212,   213,     0,   214,     0,   847,   848,   217,
       0,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,     0,   230,   231,   232,   233,   234,   235,
       0,   236,   237,   238,   239,   240,   241,   242,   243,   849,
     850,     0,   851,     0,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,     0,     0,   258,   259,   260,
     261,     0,   262,   263,   264,   852,   853,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   854,   290,   855,   292,   293,   294,   295,   856,   296,
     297,   298,   299,   857,   858,   301,   859,   303,   304,   305,
       0,   306,   307,     0,     0,   860,   309,   310,     0,     0,
     311,   312,   313,   314,   315,   861,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,     0,   327,   328,   862,
     330,   331,   332,   333,   334,   335,     0,   336,   337,   338,
     339,   340,   341,     0,   342,   343,   344,   863,   346,   347,
     348,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,     0,   363,   364,   365,
     366,   367,   368,   864,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,     0,   381,   382,   383,   384,
     385,   865,   386,   387,   388,   389,   390,   391,   392,   393,
     866,   395,     0,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   867,   410,     0,   411,
     412,     0,   413,   414,   415,   416,   417,   418,   419,     0,
     868,   869,     0,     0,   422,   423,   870,   425,   871,   872,
     427,   428,   873,   430,   431,   432,   433,   434,     0,     0,
     435,   436,   437,   438,   439,   874,     0,   440,   441,   442,
     443,   444,   445,   875,     0,   447,   448,   449,   450,   451,
     452,     0,     0,   453,     0,     0,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   876,     0,     0,
       0,     0,     0,     0,   877,   878,     0,     0,     0,     0,
       0,   880,     0,   881,  1644,     0,     0,     0,   882,     0,
     883,   884,  1012,   817,   549,   818,   819,   820,   821,   822,
       0,     0,     0,     0,     0,     0,     0,     0,    93,    94,
      95,    96,    97,    98,    99,   100,     0,   101,   102,   103,
       0,     0,     0,     0,   823,     0,     0,   104,   105,     0,
     106,   107,   108,  1014,   110,   111,   112,   113,   824,  1015,
     825,   826,     0,   118,   119,   120,   121,   122,   123,   827,
     828,   124,   125,   829,   830,   128,     0,   129,   130,   131,
     132,   831,     0,  1016,     0,   135,   136,   137,   138,   139,
     140,  1017,   142,   143,   144,     0,   145,   146,   147,   148,
     149,   150,     0,  1018,   152,   153,   154,   833,   834,   835,
    1019,   837,   838,   839,   156,   157,   158,   159,   160,   161,
     162,   840,   841,   165,   842,   166,     0,   167,   168,   169,
     170,   171,   172,     0,   173,   174,   175,   176,   177,     0,
       0,   178,   179,   677,   181,   182,     0,   183,   184,   185,
       0,   186,   187,   188,     0,   189,   190,   191,   192,   843,
     194,   195,   196,   197,   198,   844,   845,   200,     0,   201,
     202,   846,   204,     0,   205,     0,   206,  1021,     0,  1022,
     209,   210,   211,  1023,   213,     0,   214,     0,   847,   848,
     217,     0,   218,   219,   220,   221,   222,   223,   224,  1024,
     226,   227,   228,   229,     0,   230,   231,   232,   233,   234,
     235,     0,   236,  1025,   238,   239,   240,   241,   242,   243,
     849,   850,     0,   851,     0,   247,  1026,  1027,   250,  1028,
     252,   253,   254,   255,   256,   257,     0,     0,   258,  1029,
     260,  1030,     0,   262,   263,   264,   852,   853,   265,   266,
     267,   268,   269,  1031,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   854,  1032,   855,   292,   293,   294,   295,   856,
     296,   297,  1033,   299,   857,   858,   301,   859,   303,   304,
     305,     0,   306,   307,     0,     0,   860,   309,   310,     0,
       0,   311,   312,  1034,   314,  1035,   861,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,     0,   327,   328,
     862,   330,   331,   332,   333,   334,   335,     0,   336,   337,
     338,   339,   340,   341,     0,   342,   343,   344,   863,   346,
     347,   348,   349,     0,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,     0,   363,   364,
    1036,   366,   367,   368,   864,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,     0,   381,   382,   383,
     384,   385,   865,   386,   387,   388,   389,   390,  1037,   392,
     393,   866,   395,     0,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,  1038,   408,   867,   410,     0,
     411,   412,     0,   413,  1039,   415,   416,   417,   418,   419,
       0,   868,   869,     0,     0,   422,   423,   870,   425,   871,
     872,   427,   428,  1040,   430,   431,   432,   433,   434,     0,
       0,   435,   436,   437,   438,   439,   874,     0,   440,   441,
     442,   443,   444,   445,   875,  1863,   447,  1042,   449,   450,
     451,   452,     0,     0,   453,     0,     0,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   876,     0,
       0,     0,     0,     0,     0,   877,   878,     0,     0,     0,
       0,     0,   880,     0,   881,     0,     0,     0,     0,   882,
       0,   883,   884,    92,   817,   549,   818,   819,   820,   821,
     822,     0,     0,     0,     0,     0,     0,     0,     0,    93,
      94,    95,    96,    97,    98,    99,   100,     0,   101,   102,
     103,     0,     0,     0,     0,   823,     0,     0,   104,   105,
       0,   106,   107,   108,   109,   110,   111,   112,   113,   824,
     115,   825,   826,     0,   118,   119,   120,   121,   122,   123,
     827,   828,   124,   125,   829,   830,   128,     0,   129,   130,
     131,   132,   831,     0,   832,     0,   135,   136,   137,   138,
     139,   140,   141,   142,   143,   144,     0,   145,   146,   147,
     148,   149,   150,     0,   151,   152,   153,   154,   833,   834,
     835,   836,   837,   838,   839,   156,   157,   158,   159,   160,
     161,   162,   840,   841,   165,   842,   166,     0,   167,   168,
     169,   170,   171,   172,     0,   173,   174,   175,   176,   177,
       0,     0,   178,   179,   677,   181,   182,     0,   183,   184,
     185,     0,   186,   187,   188,     0,   189,   190,   191,   192,
     843,   194,   195,   196,   197,   198,   844,   845,   200,     0,
     201,   202,   846,   204,     0,   205,     0,   206,   207,  1651,
     208,   209,   210,   211,   212,   213,     0,   214,     0,   847,
     848,   217,     0,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,     0,   230,   231,   232,   233,
     234,   235,     0,   236,   237,   238,   239,   240,   241,   242,
     243,   849,   850,     0,   851,     0,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,     0,     0,   258,
     259,   260,   261,     0,   262,   263,   264,   852,   853,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   854,   290,   855,   292,   293,   294,   295,
     856,   296,   297,   298,   299,   857,   858,   301,   859,   303,
     304,   305,     0,   306,   307,     0,     0,   860,   309,   310,
       0,     0,   311,   312,   313,   314,   315,   861,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,     0,   327,
     328,   862,   330,   331,   332,   333,   334,   335,     0,   336,
     337,   338,   339,   340,   341,     0,   342,   343,   344,   863,
     346,   347,   348,   349,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,     0,   363,
     364,   365,   366,   367,   368,   864,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,     0,   381,   382,
     383,   384,   385,   865,   386,   387,   388,   389,   390,   391,
     392,   393,   866,   395,     0,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   867,   410,
       0,   411,   412,     0,   413,   414,   415,   416,   417,   418,
     419,     0,   868,   869,     0,     0,   422,   423,   870,   425,
     871,   872,   427,   428,   873,   430,   431,   432,   433,   434,
       0,     0,   435,   436,   437,   438,   439,   874,     0,   440,
     441,   442,   443,   444,   445,   875,     0,   447,   448,   449,
     450,   451,   452,     0,     0,   453,     0,     0,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   876,
       0,     0,     0,     0,     0,     0,   877,   878,     0,     0,
       0,     0,     0,   880,     0,   881,     0,     0,     0,     0,
     882,     0,   883,   884,    92,   817,   549,   818,   819,   820,
     821,   822,     0,     0,     0,     0,     0,     0,     0,     0,
      93,    94,    95,    96,    97,    98,    99,   100,     0,   101,
     102,   103,     0,     0,     0,     0,   823,     0,     0,   104,
     105,     0,   106,   107,   108,   109,   110,   111,   112,   113,
     824,   115,   825,   826,     0,   118,   119,   120,   121,   122,
     123,   827,   828,   124,   125,   829,   830,   128,     0,   129,
     130,   131,   132,   831,     0,   832,     0,   135,   136,   137,
     138,   139,   140,   141,   142,   143,   144,     0,   145,   146,
     147,   148,   149,   150,     0,   151,   152,   153,   154,   833,
     834,   835,   836,   837,   838,   839,   156,   157,   158,   159,
     160,   161,   162,   840,   841,   165,   842,   166,     0,   167,
     168,   169,   170,   171,   172,     0,   173,   174,   175,   176,
     177,     0,     0,   178,   179,   677,   181,   182,     0,   183,
     184,   185,     0,   186,   187,   188,     0,   189,   190,   191,
     192,   843,   194,   195,   196,   197,   198,   844,   845,   200,
       0,   201,   202,   846,   204,     0,   205,     0,   206,   207,
       0,   208,   209,   210,   211,   212,   213,     0,   214,     0,
     847,   848,   217,     0,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,     0,   230,   231,   232,
     233,   234,   235,     0,   236,   237,   238,   239,   240,   241,
     242,   243,   849,   850,     0,   851,     0,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,     0,     0,
     258,   259,   260,   261,     0,   262,   263,   264,   852,   853,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   854,   290,   855,   292,   293,   294,
     295,   856,   296,   297,   298,   299,   857,   858,   301,   859,
     303,   304,   305,     0,   306,   307,     0,     0,   860,   309,
     310,     0,     0,   311,   312,   313,   314,   315,   861,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,     0,
     327,   328,   862,   330,   331,   332,   333,   334,   335,     0,
     336,   337,   338,   339,   340,   341,     0,   342,   343,   344,
     863,   346,   347,   348,   349,     0,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,     0,
     363,   364,   365,   366,   367,   368,   864,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,     0,   381,
     382,   383,   384,   385,   865,   386,   387,   388,   389,   390,
     391,   392,   393,   866,   395,     0,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   867,
     410,     0,   411,   412,     0,   413,   414,   415,   416,   417,
     418,   419,     0,   868,   869,     0,     0,   422,   423,   870,
     425,   871,   872,   427,   428,   873,   430,   431,   432,   433,
     434,     0,     0,   435,   436,   437,   438,   439,   874,     0,
     440,   441,   442,   443,   444,   445,   875,     0,   447,   448,
     449,   450,   451,   452,     0,     0,   453,     0,     0,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     876,     0,     0,     0,     0,     0,     0,   877,   878,     0,
       0,     0,     0,     0,   880,     0,   881,     0,     0,     0,
       0,   882,     0,   883,   884,  1012,   817,   549,   818,   819,
     820,   821,   822,     0,     0,     0,     0,     0,     0,     0,
       0,    93,    94,    95,    96,    97,    98,    99,   100,     0,
     101,   102,   103,     0,     0,     0,     0,   823,     0,     0,
     104,   105,     0,   106,   107,   108,  1014,   110,   111,   112,
     113,   824,  1015,   825,   826,     0,   118,   119,   120,   121,
     122,   123,   827,   828,   124,   125,   829,   830,   128,     0,
     129,   130,   131,   132,   831,     0,  1016,     0,   135,   136,
     137,   138,   139,   140,  1017,   142,   143,   144,     0,   145,
     146,   147,   148,   149,   150,     0,  1018,   152,   153,   154,
     833,   834,   835,  1019,   837,   838,   839,   156,   157,   158,
     159,   160,   161,   162,   840,   841,   165,   842,   166,     0,
     167,   168,   169,   170,   171,   172,     0,   173,   174,   175,
     176,   177,     0,     0,   178,   179,   677,   181,   182,     0,
     183,   184,   185,     0,   186,   187,   188,     0,   189,   190,
     191,   192,   843,   194,   195,   196,   197,   198,   844,   845,
     200,     0,   201,   202,   846,   204,     0,   205,     0,   206,
    1021,     0,  1022,   209,   210,   211,  1023,   213,     0,   214,
       0,   847,   848,   217,     0,   218,   219,   220,   221,   222,
     223,   224,  1024,   226,   227,   228,   229,     0,   230,   231,
     232,   233,   234,   235,     0,   236,  1025,   238,   239,   240,
     241,   242,   243,   849,   850,     0,   851,     0,   247,  1026,
    1027,   250,  1028,   252,   253,   254,   255,   256,   257,     0,
       0,   258,  1029,   260,  1030,     0,   262,   263,   264,   852,
     853,   265,   266,   267,   268,   269,  1031,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   854,  1032,   855,   292,   293,
     294,   295,   856,   296,   297,  1033,   299,   857,   858,   301,
     859,   303,   304,   305,     0,   306,   307,     0,     0,   860,
     309,   310,     0,     0,   311,   312,  1034,   314,  1035,   861,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,   327,   328,   862,   330,   331,   332,   333,   334,   335,
       0,   336,   337,   338,   339,   340,   341,     0,   342,   343,
     344,   863,   346,   347,   348,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
       0,   363,   364,  1036,   366,   367,   368,   864,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,     0,
     381,   382,   383,   384,   385,   865,   386,   387,   388,   389,
     390,  1037,   392,   393,   866,   395,     0,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,  1038,   408,
     867,   410,     0,   411,   412,     0,   413,  1039,   415,   416,
     417,   418,   419,     0,   868,   869,     0,     0,   422,   423,
     870,   425,   871,   872,   427,   428,  1040,   430,   431,   432,
     433,   434,     0,     0,   435,   436,   437,   438,   439,   874,
       0,   440,   441,   442,   443,   444,   445,   875,     0,   447,
    1042,   449,   450,   451,   452,     0,     0,   453,     0,     0,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   876,     0,     0,     0,     0,     0,     0,   877,   878,
       0,     0,     0,     0,     0,   880,     0,   881,     0,     0,
       0,     0,   882,     0,   883,   884,    92,   817,   549,   818,
     819,   820,   821,   822,     0,     0,     0,     0,     0,     0,
       0,     0,    93,    94,    95,    96,    97,    98,    99,   100,
       0,   101,   102,   103,     0,     0,     0,     0,   823,     0,
       0,   104,   105,     0,   106,   107,   108,   109,   110,   111,
     112,   113,   824,   115,   825,   826,     0,   118,   119,   120,
     121,   122,   123,   827,   828,   124,   125,   829,   830,   128,
       0,   129,   130,   131,   132,   831,     0,   832,     0,   135,
     136,   137,   138,   139,   140,   141,   142,   143,   144,     0,
     145,   146,   147,   148,   149,   150,     0,   151,   152,   153,
     154,   833,   834,   835,   836,   837,   838,   839,   156,   157,
     158,   159,   160,   161,   162,   840,   841,   165,   842,   166,
       0,   167,   168,   169,   170,   171,   172,     0,   173,   174,
     175,   176,   177,     0,     0,   178,   179,   677,   181,   182,
       0,   183,   184,   185,     0,   186,   187,   188,     0,   189,
     190,   191,   192,   843,   194,   195,   196,   197,   198,   844,
     845,   200,     0,   201,   202,   846,   204,     0,   205,     0,
     206,   207,     0,   208,   209,   210,   211,   212,   213,     0,
     214,     0,   847,   848,   217,     0,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,     0,   230,
     231,   232,   233,   234,   235,     0,   236,   237,   238,   239,
     240,   241,   242,   243,   849,   850,     0,   851,     0,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
       0,     0,   258,   259,   260,   261,     0,   262,   263,   264,
     852,   853,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   854,   290,   855,   292,
     293,   294,   295,   856,   296,   297,   298,   299,   857,   858,
     301,   859,   303,   304,   305,     0,   306,   307,     0,     0,
     860,   309,   310,     0,     0,   311,   312,   313,   314,   315,
     861,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,     0,   327,   328,   862,   330,   331,   332,   333,   334,
     335,     0,   336,   337,   338,   339,   340,   341,     0,   342,
     343,   344,   863,   346,   347,   348,   349,     0,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,     0,   363,   364,   365,   366,   367,   368,   864,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
       0,   381,   382,   383,   384,   385,   865,   386,   387,   388,
     389,   390,   391,   392,   393,   866,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   867,   410,     0,   411,   412,     0,   413,   414,   415,
     416,   417,   418,   419,     0,   868,   869,     0,     0,   422,
     423,   870,   425,   871,   872,   427,   428,   873,   430,   431,
     432,   433,   434,     0,     0,   435,   436,   437,   438,   439,
     874,     0,   440,   441,   442,   443,   444,   445,   875,     0,
     447,   448,   449,   450,   451,   452,     0,     0,   453,     0,
       0,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   876,     0,     0,     0,     0,     0,     0,  1410,
    1411,     0,     0,     0,     0,     0,   880,     0,   881,     0,
       0,     0,     0,   882,     0,   883,   884,    92,  1788,   549,
     818,   819,   820,   821,   822,     0,     0,     0,     0,     0,
       0,     0,     0,    93,    94,    95,    96,    97,    98,    99,
     100,     0,   101,   102,   103,     0,     0,     0,     0,   823,
       0,     0,   104,   105,     0,   106,   107,   108,   109,   110,
     111,   112,   113,   824,   115,   825,   826,     0,   118,   119,
     120,   121,   122,   123,   827,   828,   124,   125,   829,   830,
     128,     0,   129,   130,   131,   132,   831,     0,   832,     0,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
       0,   145,   146,   147,   148,   149,   150,     0,   151,   152,
     153,   154,   833,   834,   835,   836,   837,   838,   839,   156,
     157,   158,   159,   160,   161,   162,   840,   841,   165,   842,
     166,     0,   167,   168,   169,   170,   171,   172,     0,   173,
     174,   175,   176,   177,     0,     0,   178,   179,   677,   181,
     182,     0,   183,   184,   185,     0,   186,   187,   188,     0,
     189,   190,   191,   192,   843,   194,   195,   196,   197,   198,
     844,   845,   200,     0,   201,   202,   846,   204,     0,   205,
       0,   206,   207,     0,   208,   209,   210,   211,   212,   213,
       0,   214,     0,   847,   848,   217,     0,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,     0,
     230,   231,   232,   233,   234,   235,     0,   236,   237,   238,
     239,   240,   241,   242,   243,   849,   850,     0,   851,     0,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,     0,     0,   258,   259,   260,   261,     0,   262,   263,
     264,   852,   853,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   854,   290,   855,
     292,   293,   294,   295,   856,   296,   297,   298,   299,   857,
     858,   301,   859,   303,   304,   305,     0,   306,   307,     0,
       0,   860,   309,   310,     0,     0,   311,   312,   313,   314,
     315,   861,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,     0,   327,   328,   862,   330,   331,   332,   333,
     334,   335,     0,   336,   337,   338,   339,   340,   341,     0,
     342,   343,   344,   863,   346,   347,   348,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,     0,   363,   364,   365,   366,   367,   368,   864,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,     0,   381,   382,   383,   384,   385,   865,   386,   387,
     388,   389,   390,   391,   392,   393,   866,   395,     0,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   867,   410,     0,   411,   412,     0,   413,   414,
     415,   416,   417,   418,   419,     0,   868,   869,     0,     0,
     422,   423,   870,   425,   871,   872,   427,   428,   873,   430,
     431,   432,   433,   434,     0,     0,   435,   436,   437,   438,
     439,   874,     0,   440,   441,   442,   443,   444,   445,   875,
       0,   447,   448,   449,   450,   451,   452,     0,     0,   453,
       0,     0,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   876,     0,     0,     0,     0,     0,     0,
     877,   878,     0,     0,     0,     0,     0,   880,     0,   881,
       0,     0,     0,     0,   882,     0,   883,   884,    92,   817,
     549,   818,   819,   820,   821,   822,     0,     0,     0,     0,
       0,     0,     0,     0,    93,    94,    95,    96,    97,    98,
      99,   100,     0,   101,   102,   103,     0,     0,     0,     0,
     823,     0,     0,   104,   105,     0,   106,   107,   108,   109,
     110,   111,   112,   113,   824,   115,   825,   826,     0,   118,
     119,   120,   121,   122,   123,   827,   828,   124,   125,   829,
     830,   128,     0,   129,   130,   131,   132,   831,     0,   832,
       0,   135,   136,   137,   138,   139,   140,   141,   142,   143,
     144,     0,   145,   146,   147,   148,   149,   150,     0,   151,
     152,   153,   154,   833,   834,   835,   836,   837,   838,   839,
     156,   157,   158,   159,   160,   161,   162,   840,   841,   165,
     842,   166,     0,   167,   168,   169,   170,   171,   172,     0,
     173,   174,   175,   176,   177,     0,     0,   178,   179,   677,
     181,   182,     0,   183,   184,   185,     0,   186,   187,   188,
       0,   189,   190,   191,   192,   843,   194,   195,   196,   197,
     198,   844,   845,   200,     0,   201,   202,   846,   204,     0,
     205,     0,   206,   207,     0,   208,   209,   210,   211,   212,
     213,     0,   214,     0,   847,   848,   217,     0,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,   237,
     238,   239,   240,   241,   242,   243,   849,   850,     0,   851,
       0,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,     0,     0,   258,   259,   260,   261,     0,   262,
     263,   264,   852,   853,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   854,   290,
     855,   292,   293,   294,   295,   856,   296,   297,   298,   299,
     857,   858,   301,   859,   303,   304,   305,     0,   306,   307,
       0,     0,   860,   309,   310,     0,     0,   311,   312,   313,
     314,   315,   861,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,     0,   327,   328,   862,   330,   331,   332,
     333,   334,   335,     0,   336,   337,   338,   339,   340,   341,
       0,   342,   343,   344,   863,   346,   347,   348,   349,     0,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,     0,   363,   364,   365,   366,   367,   368,
     864,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,     0,   381,   382,   383,   384,   385,   865,   386,
     387,   388,   389,   390,   391,   392,   393,   866,   395,     0,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   867,   410,     0,   411,   412,     0,   413,
     414,   415,   416,   417,   418,   419,     0,   868,   869,     0,
       0,   422,   423,   870,   425,   871,   872,   427,   428,   873,
     430,   431,   432,   433,   434,     0,     0,   435,   436,   437,
     438,   439,   874,     0,   440,   441,   442,   443,   444,   445,
     875,     0,   447,   448,   449,   450,   451,   452,     0,     0,
     453,     0,     0,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   876,     0,     0,     0,     0,     0,
       0,   877,   878,     0,     0,     0,     0,     0,   880,     0,
    2019,     0,     0,     0,     0,   882,     0,   883,   884,    92,
     817,   549,   818,   819,   820,   821,   822,     0,     0,     0,
       0,     0,     0,     0,     0,    93,    94,    95,    96,    97,
      98,    99,   100,     0,   101,   102,   103,     0,     0,     0,
       0,   823,     0,     0,   104,   105,     0,   106,   107,   108,
     109,   110,   111,   112,   113,   824,   115,   825,   826,     0,
     118,   119,   120,   121,   122,   123,   827,   828,   124,   125,
     829,   830,   128,     0,   129,   130,   131,   132,   831,     0,
     832,     0,   135,   136,   137,   138,   139,   140,   141,   142,
     143,   144,     0,   145,   146,   147,   148,   149,   150,     0,
     151,   152,  2694,   154,   833,   834,   835,   836,   837,   838,
     839,   156,   157,   158,   159,   160,   161,   162,   840,   841,
     165,   842,   166,     0,   167,   168,   169,   170,   171,   172,
       0,   173,   174,   175,   176,   177,     0,     0,   178,   179,
     677,   181,   182,     0,   183,   184,   185,     0,   186,   187,
     188,     0,   189,   190,   191,   192,   843,   194,   195,   196,
     197,   198,   844,   845,   200,     0,   201,   202,   846,   204,
       0,   205,     0,   206,   207,     0,   208,   209,   210,   211,
     212,   213,     0,   214,     0,  2695,   848,   217,     0,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,     0,   230,   231,   232,   233,   234,   235,     0,   236,
     237,   238,   239,   240,   241,   242,   243,   849,   850,     0,
     851,     0,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,     0,     0,   258,   259,   260,   261,     0,
     262,   263,   264,   852,   853,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   854,
     290,   855,   292,   293,   294,   295,   856,   296,   297,   298,
     299,   857,   858,   301,   859,   303,   304,   305,     0,   306,
     307,     0,     0,   860,   309,   310,     0,     0,   311,   312,
     313,   314,   315,   861,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,     0,   327,   328,   862,   330,   331,
     332,   333,   334,   335,     0,   336,   337,   338,   339,   340,
     341,     0,   342,   343,   344,   863,   346,   347,   348,   349,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,     0,   363,   364,   365,   366,   367,
    2696,   864,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,     0,   381,   382,   383,   384,   385,   865,
     386,   387,   388,   389,   390,   391,   392,   393,   866,   395,
       0,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   867,   410,     0,   411,   412,     0,
     413,   414,   415,   416,   417,   418,   419,     0,   868,   869,
       0,     0,   422,   423,   870,   425,   871,   872,   427,   428,
     873,   430,   431,   432,   433,   434,     0,     0,   435,   436,
     437,   438,   439,   874,     0,   440,   441,   442,   443,   444,
     445,   875,     0,   447,   448,   449,   450,   451,   452,     0,
       0,   453,     0,     0,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   876,     0,     0,     0,     0,
       0,     0,   877,   878,     0,     0,     0,     0,     0,   880,
       0,  2698,     0,     0,     0,     0,   882,     0,   883,   884,
      92,   817,   549,   818,   819,   820,   821,   822,     0,     0,
       0,     0,     0,     0,     0,     0,    93,    94,    95,    96,
      97,    98,    99,   100,     0,   101,   102,   103,     0,     0,
       0,     0,   823,     0,     0,   104,   105,     0,   106,   107,
     108,   109,   110,   111,   112,  2951,   824,   115,   825,   826,
       0,   118,   119,   120,   121,   122,   123,   827,   828,   124,
     125,   829,   830,   128,     0,   129,   130,   131,   132,   831,
       0,   832,     0,   135,   136,   137,   138,   139,   140,   141,
     142,   143,   144,     0,   145,   146,   147,   148,   149,   150,
       0,   151,   152,   153,  2952,   833,   834,   835,   836,   837,
     838,   839,   156,   157,   158,   159,   160,   161,   162,   840,
     841,   165,   842,   166,     0,   167,   168,   169,   170,   171,
     172,     0,   173,   174,   175,   176,   177,     0,     0,   178,
     179,   677,   181,   182,     0,   183,   184,   185,     0,   186,
     187,   188,     0,   189,   190,   191,   192,   843,   194,   195,
     196,   197,   198,   844,   845,   200,     0,   201,   202,   846,
     204,     0,   205,     0,   206,   207,     0,   208,   209,   210,
     211,   212,   213,     0,   214,     0,   847,   848,   217,     0,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,     0,   230,   231,   232,   233,   234,   235,     0,
     236,   237,   238,   239,   240,   241,   242,   243,   849,   850,
       0,   851,     0,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,     0,     0,   258,   259,   260,   261,
       0,   262,   263,   264,   852,   853,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     854,   290,   855,   292,   293,   294,   295,   856,   296,   297,
     298,   299,   857,   858,   301,   859,   303,   304,   305,     0,
     306,   307,     0,     0,   860,   309,   310,     0,     0,   311,
     312,   313,   314,   315,   861,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,     0,   327,   328,   862,   330,
     331,   332,   333,   334,   335,     0,   336,   337,   338,   339,
     340,   341,     0,   342,   343,   344,   863,   346,   347,   348,
     349,     0,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,     0,   363,   364,   365,   366,
     367,   368,   864,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,     0,   381,   382,   383,   384,   385,
     865,   386,   387,   388,   389,   390,   391,   392,   393,   866,
     395,     0,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   867,   410,     0,   411,   412,
       0,   413,   414,   415,   416,   417,   418,   419,     0,   868,
     869,     0,     0,   422,   423,   870,   425,   871,   872,   427,
     428,   873,   430,   431,  2953,   433,   434,     0,     0,   435,
     436,   437,   438,   439,   874,     0,   440,   441,   442,   443,
     444,   445,   875,     0,   447,   448,   449,   450,   451,   452,
       0,     0,   453,     0,     0,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   876,     0,     0,     0,
       0,     0,     0,   877,   878,     0,     0,     0,     0,     0,
     880,     0,   881,     0,     0,     0,     0,   882,     0,   883,
     884,    92,   817,   549,   818,   819,   820,   821,   822,     0,
       0,     0,     0,     0,     0,     0,     0,    93,    94,    95,
      96,    97,    98,    99,   100,     0,   101,   102,   103,     0,
       0,     0,     0,   823,     0,     0,   104,   105,     0,   106,
     107,   108,   109,   110,   111,   112,   113,   824,   115,   825,
     826,     0,   118,   119,   120,   121,   122,   123,   827,   828,
     124,   125,   829,   830,   128,     0,   129,   130,   131,   132,
     831,     0,   832,     0,   135,   136,   137,   138,   139,   140,
     141,   142,   143,   144,     0,   145,   146,   147,   148,   149,
     150,     0,   151,   152,   153,  2952,   833,   834,   835,   836,
     837,   838,   839,   156,   157,   158,   159,   160,   161,   162,
     840,   841,   165,   842,   166,     0,   167,   168,   169,   170,
     171,   172,     0,   173,   174,   175,   176,   177,     0,     0,
     178,   179,   677,   181,   182,     0,   183,   184,   185,     0,
     186,   187,   188,     0,   189,   190,   191,   192,   843,   194,
     195,   196,   197,   198,   844,   845,   200,     0,   201,   202,
     846,   204,     0,   205,     0,   206,   207,     0,   208,   209,
     210,   211,   212,   213,     0,   214,     0,   847,   848,   217,
       0,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,     0,   230,   231,   232,   233,   234,   235,
       0,   236,   237,   238,   239,   240,   241,   242,   243,   849,
     850,     0,   851,     0,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,     0,     0,   258,   259,   260,
     261,     0,   262,   263,   264,   852,   853,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   854,   290,   855,   292,   293,   294,   295,   856,   296,
     297,   298,   299,   857,   858,   301,   859,   303,   304,   305,
       0,   306,   307,     0,     0,   860,   309,   310,     0,     0,
     311,   312,   313,   314,   315,   861,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,     0,   327,   328,   862,
     330,   331,   332,   333,   334,   335,     0,   336,   337,   338,
     339,   340,   341,     0,   342,   343,   344,   863,   346,   347,
     348,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,     0,   363,   364,   365,
     366,   367,   368,   864,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,     0,   381,   382,   383,   384,
     385,   865,   386,   387,   388,   389,   390,   391,   392,   393,
     866,   395,     0,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   867,   410,     0,   411,
     412,     0,   413,   414,   415,   416,   417,   418,   419,     0,
     868,   869,     0,     0,   422,   423,   870,   425,   871,   872,
     427,   428,   873,   430,   431,  2953,   433,   434,     0,     0,
     435,   436,   437,   438,   439,   874,     0,   440,   441,   442,
     443,   444,   445,   875,     0,   447,   448,   449,   450,   451,
     452,     0,     0,   453,     0,     0,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   876,     0,     0,
       0,     0,     0,     0,   877,   878,     0,     0,     0,     0,
       0,   880,     0,   881,     0,     0,     0,     0,   882,     0,
     883,   884,    92,   817,   549,   818,   819,   820,   821,   822,
       0,     0,     0,     0,     0,     0,     0,     0,    93,    94,
      95,    96,    97,    98,    99,   100,     0,   101,   102,   103,
       0,     0,     0,     0,   823,     0,     0,   104,   105,     0,
     106,   107,   108,   109,   110,   111,   112, -1735,   824,   115,
     825,   826,     0,   118,   119,   120,   121,   122,   123,   827,
     828,   124,   125,   829,   830,   128,     0,   129,   130,   131,
     132,   831,     0,   832,     0,   135,   136,   137,   138,   139,
     140,   141,   142,   143,   144,     0,   145,   146,   147,   148,
     149,   150,     0,   151,   152,   153,  2952,   833,   834,   835,
     836,   837,   838,   839,   156,   157,   158,   159,   160,   161,
     162,   840,   841,   165,   842,   166,     0,   167,   168,   169,
     170,   171,   172,     0,   173,   174,   175,   176,   177,     0,
       0,   178,   179,   677,   181,   182,     0,   183,   184,   185,
       0,   186,   187,   188,     0,   189,   190,   191,   192,   843,
     194,   195,   196,   197,   198,   844,   845,   200,     0,   201,
     202,   846,   204,     0,   205,     0,   206,   207,     0,   208,
     209,   210,   211, -1735,   213,     0,   214,     0,   847,   848,
     217,     0,   218,   219,   220,   221,   222,   223,   224, -1735,
     226,   227,   228,   229,     0,   230,   231,   232,   233,   234,
     235,     0,   236,   237,   238,   239,   240,   241,   242,   243,
     849,   850,     0,   851,     0,   247,     0,     0,   250,   251,
     252,   253,   254,   255,   256,   257,     0,     0,   258,   259,
     260, -1735,     0,   262,   263,   264,   852,   853,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   854,   290,   855,   292,   293,   294,   295,     0,
     296,   297,     0,   299,   857,   858,   301,   859,   303,   304,
     305,     0,   306,   307,     0,     0,   860,   309,   310,     0,
       0,   311,   312,   313,   314,   315,   861,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,     0,   327,   328,
     862,   330,   331,   332,   333,   334,   335,     0,   336,   337,
     338,   339,   340,   341,     0,   342,   343,   344,   863,   346,
     347,   348,   349,     0,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,     0,   363,   364,
     365,   366,   367,   368,   864,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,     0,   381,   382,   383,
     384,   385,   865,   386,   387,   388,   389,   390, -1735,   392,
     393,   866,   395,     0,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   867,   410,     0,
     411,   412,     0,   413,   414,   415,   416,   417,   418,   419,
       0,   868,   869,     0,     0,   422,   423,   870,   425,   871,
     872,   427,   428,   873,   430,   431,  2953,   433,   434,     0,
       0,   435,   436,   437,   438,   439,   874,     0,   440,   441,
     442,   443,   444,   445,   875,     0,   447,   448,   449,   450,
     451,   452,     0,     0,   453,     0,     0,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474, -1735,     0,
       0,     0,     0,     0,     0,   877,   878,     0,     0,     0,
       0,     0,   880,     0,   881,     0,     0,     0,     0,   882,
       0,   883,   884,    92,   817,   549,   818,   819,   820,   821,
     822,     0,     0,     0,     0,     0,     0,     0,     0,    93,
      94,    95,    96,    97,    98,    99,   100,     0,   101,   102,
     103,     0,     0,     0,     0,     0,     0,     0,   104,   105,
       0,   106,   107,   108,   109,   110,   111,   112,   113,   824,
     115,   825,   826,     0,   118,   119,   120,   121,   122,   123,
     827,   828,   124,   125,   829,   830,   128,     0,   129,   130,
     131,   132,   831,     0,   832,     0,   135,   136,   137,   138,
     139,   140,   141,   142,   143,   144,     0,   145,   146,   147,
     148,   149,   150,     0,   151,   152,   153,   154,   833,   834,
     835,   836,   837,   838,   839,   156,   157,   158,   159,   160,
     161,   162,   840,   841,   165,     0,   166,     0,   167,   168,
     169,   170,   171,   172,     0,   173,   174,   175,   176,   177,
       0,     0,   178,   179,   677,   181,   182,     0,   183,   184,
     185,     0,   186,   187,   188,     0,   189,   190,   191,   192,
     843,   194,   195,   196,   197,   198,   844,   845,   200,     0,
     201,   202,   846,   204,     0,   205,     0,   206,   207,     0,
     208,   209,   210,   211,   212,   213,     0,   214,     0,   847,
     848,   217,     0,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,     0,   230,   231,   232,   233,
     234,   235,     0,   236,   237,   238,   239,   240,   241,   242,
     243,   849,   850,     0,   851,     0,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,     0,     0,   258,
     259,   260,   261,     0,   262,   263,   264,   852,   853,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   854,   290,   855,   292,   293,   294,   295,
       0,   296,   297,   298,   299,   857,   858,   301,   859,   303,
     304,   305,     0,   306,   307,     0,     0,   860,   309,   310,
       0,     0,   311,   312,   313,   314,   315,   861,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,     0,   327,
     328,   862,   330,   331,   332,   333,   334,   335,     0,   336,
     337,   338,   339,   340,   341,     0,   342,   343,   344,   863,
     346,   347,   348,   349,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,     0,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,     0,   381,   382,
     383,   384,   385,   865,   386,   387,   388,   389,   390,   391,
     392,   393,   866,   395,     0,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   867,   410,
       0,   411,   412,     0,   413,   414,   415,   416,   417,   418,
     419,     0,   868,   869,     0,     0,   422,   423,   870,   425,
     871,   872,   427,   428,   873,   430,   431,   432,   433,   434,
       0,     0,   435,   436,   437,   438,   439,   874,     0,   440,
     441,   442,   443,   444,   445,   875,     0,   447,   448,   449,
     450,   451,   452,     0,     0,   453,     0,     0,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,     0,
       0,     0,     0,     0,     0,     0,  1637,  1638,     0,     0,
      92,   817,   549,   818,   819,  1639,   821,   822,     0,     0,
       0,     0,   883,   884,     0,     0,    93,    94,    95,    96,
      97,    98,    99,   100,     0,   101,   102,   103,     0,     0,
       0,     0,     0,     0,     0,   104,   105,     0,   106,   107,
     108,   109,   110,   111,   112,   113,   824,   115,   825,   826,
       0,   118,   119,   120,   121,   122,   123,   827,   828,   124,
     125,   829,   830,   128,     0,   129,   130,   131,   132,   831,
       0,   832,     0,   135,   136,   137,   138,   139,   140,   141,
     142,   143,   144,     0,   145,   146,   147,   148,   149,   150,
       0,   151,   152,   153,   154,   833,   834,   835,   836,   837,
     838,   839,   156,   157,   158,   159,   160,   161,   162,   840,
     841,   165,     0,   166,     0,   167,   168,   169,   170,   171,
     172,     0,   173,   174,   175,   176,   177,     0,     0,   178,
     179,   677,   181,   182,     0,   183,   184,   185,     0,   186,
     187,   188,     0,   189,   190,   191,   192,   843,   194,   195,
     196,   197,   198,   844,   845,   200,     0,   201,   202,   846,
     204,     0,   205,     0,   206,   207,     0,   208,   209,   210,
     211,   212,   213,     0,   214,     0,   847,   848,   217,     0,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,     0,   230,   231,   232,   233,   234,   235,     0,
     236,   237,   238,   239,   240,   241,   242,   243,   849,   850,
       0,   851,     0,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,     0,     0,   258,   259,   260,   261,
       0,   262,   263,   264,   852,   853,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     854,   290,   855,   292,   293,   294,   295,     0,   296,   297,
     298,   299,   857,   858,   301,   859,   303,   304,   305,     0,
     306,   307,     0,     0,   308,   309,   310,     0,     0,   311,
     312,   313,   314,   315,   861,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,     0,   327,   328,   862,   330,
     331,   332,   333,   334,   335,     0,   336,   337,   338,   339,
     340,   341,     0,   342,   343,   344,   863,   346,   347,   348,
     349,     0,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,     0,   363,   364,   365,   366,
     367,   368,  1774,  1775,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,     0,   381,   382,   383,   384,   385,
     865,   386,   387,   388,   389,   390,   391,   392,   393,   866,
     395,     0,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   867,   410,     0,   411,   412,
       0,   413,   414,   415,   416,   417,   418,   419,     0,   868,
     869,     0,     0,   422,   423,   870,   425,   871,   872,   427,
     428,   873,   430,   431,   432,   433,   434,     0,     0,   435,
     436,   437,   438,   439,   874,     0,   440,   441,   442,   443,
     444,   445,   875,     0,   447,   448,   449,   450,   451,   452,
       0,     0,   453,     0,     0,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,     0,     0,     0,     0,
       0,     0,     0,  1776,  1777,     0,     0,     0,     0,     0,
       0,     0,  1639,     0,     0,     0,     0,     0,     0,   883,
     884,    92,   817,   549,   818,   819,   820,   821,   822,     0,
       0,     0,     0,     0,     0,     0,     0,    93,    94,    95,
      96,    97,    98,    99,   100,     0,   101,   102,   103,     0,
       0,     0,     0,     0,     0,     0,   104,   105,     0,   106,
     107,   108,   109,   110,   111,   112,   113,   824,   115,   825,
     826,     0,   118,   119,   120,   121,   122,   123,   827,   828,
     124,   125,   829,   830,   128,     0,   129,   130,   131,   132,
     831,     0,   832,     0,   135,   136,   137,   138,   139,   140,
     141,   142,   143,   144,     0,   145,   146,   147,   148,   149,
     150,     0,   151,   152,   153,   154,   833,   834,   835,   836,
     837,   838,   839,   156,   157,   158,   159,   160,   161,   162,
     840,   841,   165,     0,   166,     0,   167,   168,   169,   170,
     171,   172,     0,   173,   174,   175,   176,   177,     0,     0,
     178,   179,   677,   181,   182,     0,   183,   184,   185,     0,
     186,   187,   188,     0,   189,   190,   191,   192,   843,   194,
     195,   196,   197,   198,   844,   845,   200,     0,   201,   202,
     846,   204,     0,   205,     0,   206,   207,     0,   208,   209,
     210,   211,   212,   213,     0,   214,     0,   847,   848,   217,
       0,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,     0,   230,   231,   232,   233,   234,   235,
       0,   236,   237,   238,   239,   240,   241,   242,   243,   849,
     850,     0,   851,     0,   247,     0,   249,   250,   251,   252,
     253,   254,   255,   256,   257,     0,     0,   258,   259,   260,
     261,     0,   262,   263,   264,   852,   853,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   854,   290,   855,   292,   293,   294,   295,     0,   296,
     297,   298,   299,   857,   858,   301,   859,   303,   304,   305,
       0,   306,   307,     0,     0,   860,   309,   310,     0,     0,
     311,   312,   313,   314,   315,   861,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,     0,   327,   328,   862,
     330,   331,   332,   333,   334,   335,     0,   336,   337,   338,
     339,   340,   341,     0,   342,   343,   344,   863,   346,   347,
     348,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,     0,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,     0,   381,   382,   383,   384,
     385,   865,   386,   387,   388,   389,   390,   391,   392,   393,
     866,   395,     0,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   867,   410,     0,   411,
     412,     0,   413,   414,   415,   416,   417,   418,   419,     0,
     868,   869,     0,     0,   422,   423,   870,   425,   871,   872,
     427,   428,   873,   430,   431,   432,   433,   434,     0,     0,
     435,   436,   437,   438,   439,   874,     0,   440,   441,   442,
     443,   444,   445,   875,     0,   447,   448,   449,   450,   451,
     452,     0,     0,   453,     0,     0,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,     0,     0,     0,
       0,     0,     0,     0,  1637,  1638,     0,     0,     0,     0,
       0,     0,     0,  1639,     0,     0,     0,     0,     0,     0,
     883,   884,    92,   817,   549,   818,   819,   820,   821,   822,
       0,     0,     0,     0,     0,     0,     0,     0,    93,    94,
      95,    96,    97,    98,    99,   100,     0,   101,   102,   103,
       0,     0,     0,     0,   823,     0,     0,   104,   105,     0,
     106,   107,   108,   109,   110,   111,   112,     0,   824,   115,
     825,   826,     0,   118,   119,   120,   121,   122,   123,   827,
     828,   124,   125,   829,   830,   128,     0,   129,   130,   131,
     132,   831,     0,   832,     0,   135,   136,   137,   138,   139,
     140,   141,   142,   143,   144,     0,   145,   146,   147,   148,
     149,   150,     0,   151,   152,   153,   154,   833,   834,   835,
     836,   837,   838,   839,   156,   157,   158,   159,   160,   161,
     162,   840,   841,   165,   842,   166,     0,   167,   168,   169,
     170,   171,   172,     0,   173,   174,   175,   176,   177,     0,
       0,   178,   179,   677,   181,   182,     0,   183,   184,   185,
       0,   186,     0,   188,     0,   189,   190,   191,   192,   843,
     194,   195,   196,   197,   198,   844,   845,   200,     0,   201,
     202,   846,   204,     0,   205,     0,   206,   207,     0,   208,
     209,   210,   211,     0,   213,     0,   214,     0,   847,   848,
     217,     0,   218,   219,   220,   221,   222,   223,   224,     0,
     226,   227,   228,   229,     0,   230,   231,   232,   233,   234,
     235,     0,   236,   237,   238,   239,   240,   241,   242,   243,
     849,   850,     0,   851,     0,   247,     0,     0,   250,   251,
     252,   253,   254,   255,   256,   257,     0,     0,   258,   259,
     260,     0,     0,   262,   263,   264,   852,   853,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   854,   290,   855,   292,   293,   294,   295,     0,
     296,   297,     0,   299,   857,   858,   301,   859,   303,   304,
     305,     0,   306,   307,     0,     0,   860,   309,   310,     0,
       0,   311,   312,   313,   314,   315,   861,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,     0,   327,   328,
     862,   330,   331,   332,   333,   334,   335,     0,   336,   337,
     338,   339,   340,   341,     0,   342,   343,   344,   863,   346,
     347,   348,   349,     0,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,     0,   363,   364,
     365,   366,   367,   368,   864,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,     0,   381,   382,   383,
     384,   385,   865,   386,   387,   388,   389,   390,     0,   392,
     393,   866,   395,     0,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   867,   410,     0,
     411,   412,     0,   413,   414,   415,   416,   417,   418,   419,
       0,   868,   869,     0,     0,   422,   423,   870,   425,   871,
     872,   427,   428,   873,   430,   431,   432,   433,   434,     0,
       0,   435,   436,   437,   438,   439,   874,     0,   440,   441,
     442,   443,   444,   445,   875,     0,   447,   448,   449,   450,
     451,   452,     0,     0,   453,     0,     0,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,     0,     0,
       0,     0,     0,     0,     0,   877,   878,   500,     0,     0,
       0,     0,   880,     0,   881,     0,     0,     0,     0,   882,
       0,   883,   884,    93,    94,    95,    96,    97,    98,    99,
     100,     0,   101,   102,   103,     0,     0,     0,     0,     0,
    2317,     0,   104,   105,     0,   106,   107,   108,     0,   110,
     111,   112,   113,   114,     0,   116,   117,     0,   118,   119,
     120,   121,   122,   123,     0,     0,   124,   125,   126,   127,
     128,     0,   129,   130,   131,   132,   133,     0,     0,     0,
     135,   136,   137,   138,   139,   140,     0,   142,   143,   144,
       0,   145,   146,   147,   148,   149,   150,     0,  -612,   152,
     153,   154,     0,     0,     0,     0,     0,     0,     0,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   165,     0,
     166,     0,   167,   168,   169,   170,   171,   172,     0,   173,
     174,   175,   176,   177,     0,     0,   178,   179,   180,   181,
     182,     0,   183,   184,   185,     0,   186,   187,   188,     0,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,     0,   200,     0,   201,   202,   203,   204,     0,   205,
       0,   206,     0,     0,  -612,   209,   210,   211,     0,   213,
       0,   214,     0,   215,   216,   217,     0,   218,   219,   220,
     221,   222,   223,   224,     0,   226,   227,   228,   229,     0,
     230,   231,   232,   233,   234,   235,     0,   236,  -612,   238,
     239,   240,   241,   242,   243,   244,   245,     0,   246,     0,
     247,     0,     0,   250,  -612,   252,   253,   254,   255,   256,
     257,     0,     0,   258,  -612,   260,     0,     0,   262,   263,
     264,     0,     0,   265,   266,   267,   268,   269,   502,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,  -612,   291,
     292,   293,   294,   295,     0,   296,   297,     0,   299,     0,
     300,   301,   302,   303,   304,   305,     0,   306,   307,     0,
       0,   308,   309,   310,     0,     0,   311,   312,     0,   314,
       0,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,     0,   327,   328,   329,   330,   331,   332,   333,
     334,   335,     0,   336,   337,   338,   339,   340,   341,     0,
     342,   343,   344,   345,   346,   347,   348,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,     0,   363,   364,  -612,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,     0,   381,   382,   383,   384,   385,     0,   386,   387,
     388,   389,   390,     0,   392,   393,   394,   395,     0,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     504,   408,   409,   410,     0,   411,   412,     0,   413,  -612,
     415,   416,   417,   418,   419,     0,   420,   421,     0,     0,
     422,   423,   424,   425,   426,     0,   427,   428,   429,   430,
     431,   432,   433,   434,     0,     0,   435,   436,   437,   438,
     439,     0,     0,   440,   441,   442,   443,   444,   445,   446,
       0,   447,     0,   449,   450,   451,   452,     0,     0,   453,
       0,     0,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,     0,     0,    92,     0,   581,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     944,    93,    94,    95,    96,    97,    98,    99,   100,     0,
     101,   102,   103,     0,     0,     0,     0,     0,     0,     0,
     104,   105,     0,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,   117,     0,   118,   119,   120,   121,
     122,   123,     0,   828,   124,   125,   126,   127,   128,     0,
     129,   130,   131,   132,   831,     0,   832,     0,   135,   136,
     137,   138,   139,   140,   141,   142,   143,   144,     0,   145,
     146,   147,   148,   149,   150,     0,   151,   152,   153,   154,
     833,   834,   835,   836,   837,   838,   839,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,     0,   166,     0,
     167,   168,   169,   170,   171,   172,     0,   173,   174,   175,
     176,   177,     0,     0,   178,   179,   180,   181,   182,     0,
     183,   184,   185,     0,   186,   187,   188,     0,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   844,     0,
     200,     0,   201,   202,   203,   204,     0,   205,     0,   206,
     207,     0,   208,   209,   210,   211,   212,   213,     0,   214,
       0,   215,   216,   217,     0,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,     0,   230,   231,
     232,   233,   234,   235,     0,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,     0,   246,     0,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,  2065,
       0,   258,   259,   260,   261,     0,   262,   263,   264,   852,
     853,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,     0,   296,   297,   298,   299,     0,   858,   301,
     302,   303,   304,   305,     0,   306,   307,     0,   582,   308,
     309,   310,     0,     0,   311,   312,   313,   314,   315,   861,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,   327,   328,   862,   330,   331,   332,   333,   334,   335,
       0,   336,   337,   338,   339,   340,   341,     0,   342,   343,
     344,   345,   346,   347,   348,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
       0,   363,   364,   365,   366,   367,   368,   369,  2066,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,    26,
     381,   382,   383,   384,   385,   865,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,     0,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     867,   410,     0,   411,   412,    31,   413,   414,   415,   416,
     417,   418,   419,     0,   420,   421,     0,     0,   422,   423,
     870,   425,   871,     0,   427,   428,   873,   430,   431,   432,
     433,   434,     0,     0,   435,   436,   437,   438,   439,   874,
       0,   440,   441,   442,   443,   444,   577,   446,     0,   447,
     448,   449,   450,   451,   452,     0,     0,   453,     0,    34,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,     0,    92,    35,   581,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2067,    93,    94,
      95,    96,    97,    98,    99,   100,     0,   101,   102,   103,
       0,     0,     0,     0,     0,     0,     0,   104,   105,     0,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,   117,     0,   118,   119,   120,   121,   122,   123,     0,
     828,   124,   125,   126,   127,   128,     0,   129,   130,   131,
     132,   831,     0,   832,     0,   135,   136,   137,   138,   139,
     140,   141,   142,   143,   144,     0,   145,   146,   147,   148,
     149,   150,     0,   151,   152,   153,   154,   833,   834,   835,
     836,   837,   838,   839,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,     0,   166,     0,   167,   168,   169,
     170,   171,   172,     0,   173,   174,   175,   176,   177,     0,
       0,   178,   179,   180,   181,   182,     0,   183,   184,   185,
       0,   186,   187,   188,     0,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   844,     0,   200,     0,   201,
     202,   203,   204,     0,   205,     0,   206,   207,     0,   208,
     209,   210,   211,   212,   213,     0,   214,     0,   215,   216,
     217,     0,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,     0,   230,   231,   232,   233,   234,
     235,     0,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,     0,   246,     0,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,  2065,     0,   258,   259,
     260,   261,     0,   262,   263,   264,   852,   853,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,     0,
     296,   297,   298,   299,     0,   858,   301,   302,   303,   304,
     305,     0,   306,   307,     0,   582,   308,   309,   310,     0,
       0,   311,   312,   313,   314,   315,   861,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,     0,   327,   328,
     862,   330,   331,   332,   333,   334,   335,     0,   336,   337,
     338,   339,   340,   341,     0,   342,   343,   344,   345,   346,
     347,   348,   349,     0,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,     0,   363,   364,
     365,   366,   367,   368,   369,  2066,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,     0,   381,   382,   383,
     384,   385,   865,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,     0,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   867,   410,     0,
     411,   412,     0,   413,   414,   415,   416,   417,   418,   419,
       0,   420,   421,     0,     0,   422,   423,   870,   425,   871,
       0,   427,   428,   873,   430,   431,   432,   433,   434,     0,
       0,   435,   436,   437,   438,   439,   874,     0,   440,   441,
     442,   443,   444,   445,   446,     0,   447,   448,   449,   450,
     451,   452,     0,     0,   453,     0,     0,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,     0,    92,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2067,    93,    94,    95,    96,    97,
      98,    99,   100,     0,   101,   102,   103,     0,     0,     0,
       0,     0,     0,     0,   104,   105,     0,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,   116,   117,     0,
     118,   119,   120,   121,   122,   123,     0,   828,   124,   125,
     126,   127,   128,     0,   129,   130,   131,   132,   831,     0,
     832,     0,   135,   136,   137,   138,   139,   140,   141,   142,
     143,   144,     0,   145,   146,   147,   148,   149,   150,     0,
     151,   152,   153,   154,   833,   834,   835,   836,   837,   838,
     839,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,     0,   166,     0,   167,   168,   169,   170,   171,   172,
       0,   173,   174,   175,   176,   177,     0,     0,   178,   179,
     180,   181,   182,     0,   183,   184,   185,     0,   186,   187,
     188,     0,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   844,     0,   200,     0,   201,   202,   203,   204,
       0,   205,     0,   206,   207,     0,   208,   209,   210,   211,
     212,   213,     0,   214,     0,   215,   216,   217,     0,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,     0,   230,   231,   232,   233,   234,   235,     0,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,     0,
     246,     0,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,     0,     0,   258,   259,   260,   261,     0,
     262,   263,   264,   852,   853,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,     0,   296,   297,   298,
     299,     0,   858,   301,   302,   303,   304,   305,     0,   306,
     307,     0,     0,   308,   309,   310,     0,     0,   311,   312,
     313,   314,   315,   861,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,     0,   327,   328,   862,   330,   331,
     332,   333,   334,   335,     0,   336,   337,   338,   339,   340,
     341,     0,   342,   343,   344,   345,   346,   347,   348,   349,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,     0,   363,   364,   365,   366,   367,
     368,   369,  2066,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,     0,   381,   382,   383,   384,   385,   865,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
       0,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   867,   410,     0,   411,   412,     0,
     413,   414,   415,   416,   417,   418,   419,     0,   420,   421,
       0,     0,   422,   423,   870,   425,   871,     0,   427,   428,
     873,   430,   431,   432,   433,   434,     0,     0,   435,   436,
     437,   438,   439,   874,     0,   440,   441,   442,   443,   444,
     445,   446,     0,   447,   448,   449,   450,   451,   452,     0,
       0,   453,     0,     0,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,     0,    92,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    36,    93,    94,    95,    96,    97,    98,    99,   100,
       0,   101,   102,   103,     0,     0,     0,     0,     0,     0,
       0,   104,   105,     0,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,   117,     0,   118,   119,   120,
     121,   122,   123,     0,   828,   124,   125,   126,   127,   128,
       0,   129,   130,   131,   132,   831,     0,   832,     0,   135,
     136,   137,   138,   139,   140,   141,   142,   143,   144,     0,
     145,   146,   147,   148,   149,   150,     0,   151,   152,   153,
     154,   833,   834,   835,   836,   837,   838,   839,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,     0,   166,
       0,   167,   168,   169,   170,   171,   172,     0,   173,   174,
     175,   176,   177,     0,     0,   178,   179,   180,   181,   182,
       0,   183,   184,   185,     0,   186,   187,   188,     0,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   844,
       0,   200,     0,   201,   202,   203,   204,     0,   205,     0,
     206,   207,     0,   208,   209,   210,   211,   212,   213,     0,
     214,     0,   215,   216,   217,     0,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,     0,   230,
     231,   232,   233,   234,   235,     0,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,     0,   246,     0,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
       0,     0,   258,   259,   260,   261,     0,   262,   263,   264,
     852,   853,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,     0,   296,   297,   298,   299,     0,   858,
     301,   302,   303,   304,   305,     0,   306,   307,     0,     0,
     308,   309,   310,     0,     0,   311,   312,   313,   314,   315,
     861,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,     0,   327,   328,   862,   330,   331,   332,   333,   334,
     335,     0,   336,   337,   338,   339,   340,   341,     0,   342,
     343,   344,   345,   346,   347,   348,   349,     0,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,     0,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
       0,   381,   382,   383,   384,   385,   865,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   867,   410,     0,   411,   412,     0,   413,   414,   415,
     416,   417,   418,   419,     0,   420,   421,     0,     0,   422,
     423,   870,   425,   871,     0,   427,   428,   873,   430,   431,
     432,   433,   434,     0,     0,   435,   436,   437,   438,   439,
     874,     0,   440,   441,   442,   443,   444,   445,   446,     0,
     447,   448,   449,   450,   451,   452,     0,     0,   453,     0,
       0,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,     0,   745,  1236,   549,     0,     0,     0,   821,
       0,     0,     0,     0,     0,     0,     0,     0,  2713,    93,
      94,    95,    96,    97,    98,    99,   100,     0,   101,   102,
     103,     0,     0,     0,     0,     0,     0,     0,   104,   105,
       0,   106,   107,   108,     0,   110,   111,   112,   746,   747,
       0,   748,   749,     0,   118,   119,   120,   121,   122,   123,
       0,     0,   124,   125,   750,   751,   128,     0,   129,   130,
     131,   132,   752,     0,     0,     0,   135,   136,   137,   138,
     139,   140,     0,   142,   143,   144,     0,   145,   146,   147,
     148,   149,   150,     0,     0,   152,   153,   154,     0,     0,
       0,     0,     0,     0,     0,   156,   157,   158,   159,   160,
     161,   162,   753,   754,   165,     0,   166,     0,   167,   168,
     169,   170,   171,   172,     0,   173,   174,   175,   176,   177,
       0,     0,   178,   179,   180,   181,   182,     0,   183,   184,
     185,     0,   186,   187,   188,     0,   189,   190,   191,   192,
     755,   194,   195,   196,   197,   198,   756,  1237,   200,     0,
     201,   202,   757,   204,     0,   205,     0,   206,     0,     0,
       0,   209,   210,   211,     0,   213,     0,   214,     0,   758,
     759,   217,     0,   218,   219,   220,   221,   222,   223,   224,
       0,   226,   227,   228,   229,     0,   230,   231,   232,   233,
     234,   235,     0,   236,     0,   760,   239,   240,   241,   242,
     243,   761,   762,     0,   763,     0,   247,     0,     0,   250,
       0,   252,   253,   254,   255,   256,   257,     0,     0,   258,
       0,   260,     0,     0,   262,   263,   264,     0,     0,   265,
     266,   267,   268,   269,   764,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   765,     0,   766,   292,   293,   294,   767,
       0,   296,   297,     0,   299,     0,   768,   301,   769,   303,
     304,   305,     0,   306,   307,  1238,     0,   308,   309,   310,
       0,     0,   311,   770,     0,   314,     0,   771,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,     0,   327,
     328,   772,   330,   331,   773,   333,   334,   335,     0,   336,
     337,   338,   339,   340,   341,     0,   342,   343,   344,   774,
     346,   347,   348,   349,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,     0,   363,
     364,     0,   366,   367,   368,   775,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,     0,   381,   382,
     383,   384,   385,     0,   386,   776,   388,   389,   390,     0,
     392,   393,   777,   395,     0,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   778,   408,   779,   410,
       0,   411,   412,     0,   413,     0,   415,   416,   417,   418,
     419,     0,   780,   781,     0,     0,   422,   423,   782,   425,
     783,  1239,   427,   428,   784,   430,   431,   432,   433,   434,
       0,     0,   435,   436,   437,   438,   439,     0,     0,   440,
     441,   442,   443,   444,  1128,   786,     0,   447,     0,   449,
     450,   451,   452,     0,     0,   453,     0,     0,   454,   455,
     456,   457,   458,   459,   787,   788,   789,   790,   791,   792,
     793,   794,   795,   796,   797,   471,   472,   473,   474,     0,
     745,     0,     0,     0,     0,     0,  1240,  1241,  1945,     0,
       0,     0,     0,     0,     0,  1946,    93,    94,    95,    96,
      97,    98,    99,   100,     0,   101,   102,   103,     3,     4,
       0,     0,     0,     0,     0,   104,   105,     0,   106,   107,
     108,     0,   110,   111,   112,   746,   747,     0,   748,   749,
       0,   118,   119,   120,   121,   122,   123,     0,     0,   124,
     125,   750,   751,   128,     0,   129,   130,   131,   132,   752,
       0,     0,     0,   135,   136,   137,   138,   139,   140,     0,
     142,   143,   144,     0,   145,   146,   147,   148,   149,   150,
       0,     0,   152,   153,   154,     0,     0,     0,     0,     0,
       0,     0,   156,   157,   158,   159,   160,   161,   162,   753,
     754,   165,     0,   166,     0,   167,   168,   169,   170,   171,
     172,     0,   173,   174,   175,   176,   177,     0,     0,   178,
     179,   180,   181,   182,     0,   183,   184,   185,     0,   186,
     187,   188,     0,   189,   190,   191,   192,   755,   194,   195,
     196,   197,   198,   756,     0,   200,     0,   201,   202,   757,
     204,     0,   205,     0,   206,     0,     0,     0,   209,   210,
     211,     0,   213,     0,   214,     0,   758,   759,   217,     0,
     218,   219,   220,   221,   222,   223,   224,     0,   226,   227,
     228,   229,     0,   230,   231,   232,   233,   234,   235,     0,
     236,     0,   760,   239,   240,   241,   242,   243,   761,   762,
       0,   763,     0,   247,     0,     0,   250,     0,   252,   253,
     254,   255,   256,   257,     0,     0,   258,     0,   260,     0,
       0,   262,   263,   264,     0,     0,   265,   266,   267,   268,
     269,   764,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     765,     0,   766,   292,   293,   294,   767,     0,   296,   297,
       0,   299,     0,   768,   301,   769,   303,   304,   305,     0,
     306,   307,     0,     0,   308,   309,   310,     0,     0,   311,
     770,     0,   314,     0,   771,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,     0,   327,   328,   772,   330,
     331,   773,   333,   334,   335,     0,   336,   337,   338,   339,
     340,   341,     0,   342,   343,   344,   774,   346,   347,   348,
     349,     0,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,     0,   363,   364,     0,   366,
     367,   368,   775,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,    26,   381,   382,   383,   384,   385,
       0,   386,   776,   388,   389,   390,     0,   392,   393,   777,
     395,     0,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   778,   408,   779,   410,     0,   411,   412,
      31,   413,     0,   415,   416,   417,   418,   419,     0,   780,
     781,     0,     0,   422,   423,   782,   425,   783,     0,   427,
     428,   784,   430,   431,   432,   433,   434,     0,     0,   435,
     436,   437,   438,   439,     0,     0,   440,   441,   442,   443,
     444,   785,   786,     0,   447,     0,   449,   450,   451,   452,
       0,     0,   453,     0,    34,   454,   455,   456,   457,   458,
     459,   787,   788,   789,   790,   791,   792,   793,   794,   795,
     796,   797,   471,   472,   473,   474,     0,   500,    35,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    36,    93,    94,    95,    96,    97,    98,    99,
     100,   615,   101,   102,   103,     0,     0,     0,     0,     0,
       0,     0,   104,   105,     0,   106,   107,   108,     0,   110,
     111,   112,   113,   114,     0,   116,   117,     0,   118,   119,
     120,   121,   122,   123,     0,     0,   124,   125,   126,   127,
     128,     0,   129,   130,   131,   132,   133,     0,     0,     0,
     135,   136,   137,   138,   139,   140,     0,   142,   143,   144,
       0,   145,   146,   147,   148,   149,   150,     0,     0,   152,
     153,   154,     0,     0,     0,     0,     0,     0,     0,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   165,     0,
     166,     0,   167,   168,   169,   170,   171,   172,     0,   173,
     174,   175,   176,   177,     0,     0,   178,   179,   180,   181,
     182,     0,   183,   184,   185,     0,   186,   187,   188,     0,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,     0,   200,     0,   201,   202,   203,   204,     0,   205,
       0,   206,     0,     0,     0,   209,   210,   211,     0,   213,
       0,   214,     0,   215,   216,   217,     0,   218,   219,   220,
     221,   222,   223,   224,     0,   226,   227,   228,   229,     0,
     230,   231,   232,   233,   234,   235,     0,   236,     0,   238,
     239,   240,   241,   242,   243,   244,   245,     0,   246,     0,
     247,     0,     0,   250,     0,   252,   253,   254,   255,   256,
     257,     0,     0,   258,     0,   260,     0,     0,   262,   263,
     264,     0,     0,   265,   266,   267,   268,   269,   502,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,     0,   291,
     292,   293,   294,   295,     0,   296,   297,     0,   299,     0,
     300,   301,   302,   303,   304,   305,     0,   306,   307,     0,
       0,   308,   309,   310,     0,     0,   311,   312,     0,   314,
       0,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,     0,   327,   328,   329,   330,   331,   332,   333,
     334,   335,     0,   336,   337,   338,   339,   340,   341,     0,
     342,   343,   344,   345,   346,   347,   348,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,     0,   363,   364,     0,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,    26,   381,   382,   383,   384,   385,     0,   386,   387,
     388,   389,   390,     0,   392,   393,   394,   395,     0,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     504,   408,   409,   410,     0,   411,   412,    31,   413,     0,
     415,   416,   417,   418,   419,     0,   616,   421,     0,     0,
     617,   423,   424,   425,   426,     0,   427,   428,   429,   430,
     431,   432,   433,   434,     0,     0,   435,   436,   437,   438,
     439,     0,     0,   440,   441,   442,   443,   444,   577,   446,
       0,   447,     0,   449,   450,   451,   452,     0,     0,   453,
       0,    34,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,     0,   500,    35,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    36,
      93,    94,    95,    96,    97,    98,    99,   100,     0,   101,
     102,   103,     0,     0,     0,     0,     0,     0,     0,   104,
     105,     0,   106,   107,   108,     0,   110,   111,   112,   113,
     114,     0,   116,   117,     0,   118,   119,   120,   121,   122,
     123,     0,     0,   124,   125,   126,   127,   128,     0,   129,
     130,   131,   132,   133,     0,     0,     0,   135,   136,   137,
     138,   139,   140,     0,   142,   143,   144,     0,   145,   146,
     147,   148,   149,   150,     0,     0,   152,   153,   154,     0,
       0,     0,     0,     0,     0,     0,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,     0,   166,     0,   167,
     168,   169,   170,   171,   172,     0,   173,   174,   175,   176,
     177,     0,     0,   178,   179,   180,   181,   182,     0,   183,
     184,   185,     0,   186,   187,   188,     0,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,     0,   200,
       0,   201,   202,   203,   204,     0,   205,     0,   206,     0,
       0,     0,   209,   210,   211,     0,   213,     0,   214,     0,
     215,   216,   217,     0,   218,   219,   220,   221,   222,   223,
     224,     0,   226,   227,   228,   229,     0,   230,   231,   232,
     233,   234,   235,     0,   236,     0,   238,   239,   240,   241,
     242,   243,   244,   245,     0,   246,     0,   247,     0,     0,
     250,     0,   252,   253,   254,   255,   256,   257,     0,     0,
     258,     0,   260,     0,     0,   262,   263,   264,     0,     0,
     265,   266,   267,   268,   269,   502,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,     0,   291,   292,   293,   294,
     295,     0,   296,   297,     0,   299,     0,   300,   301,   302,
     303,   304,   305,     0,   306,   307,     0,     0,   308,   309,
     310,     0,     0,   311,   312,     0,   314,     0,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,     0,
     327,   328,   329,   330,   331,   332,   333,   334,   335,     0,
     336,   337,   338,   339,   340,   341,     0,   342,   343,   344,
     345,   346,   347,   348,   349,     0,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,     0,
     363,   364,     0,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,    26,   381,
     382,   383,   384,   385,     0,   386,   387,   388,   389,   390,
       0,   392,   393,   394,   395,     0,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   504,   408,   409,
     410,     0,   411,   412,    31,   413,     0,   415,   416,   417,
     418,   419,     0,   420,   421,     0,     0,   422,   423,   424,
     425,   426,     0,   427,   428,   429,   430,   431,   432,   433,
     434,     0,     0,   435,   436,   437,   438,   439,     0,     0,
     440,   441,   442,   443,   444,   577,   446,     0,   447,     0,
     449,   450,   451,   452,     0,     0,   453,     0,    34,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
       0,   500,    35,   581,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    36,    93,    94,    95,
      96,    97,    98,    99,   100,     0,   101,   102,   103,     0,
       0,     0,     0,     0,     0,     0,   104,   105,     0,   106,
     107,   108,     0,   110,   111,   112,   113,   114,     0,   116,
     117,     0,   118,   119,   120,   121,   122,   123,     0,     0,
     124,   125,   126,   127,   128,     0,   129,   130,   131,   132,
     133,     0,     0,     0,   135,   136,   137,   138,   139,   140,
       0,   142,   143,   144,     0,   145,   146,   147,   148,   149,
     150,     0,     0,   152,   153,   154,     0,     0,     0,     0,
       0,     0,     0,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,     0,   166,     0,   167,   168,   169,   170,
     171,   172,     0,   173,   174,   175,   176,   177,     0,     0,
     178,   179,   180,   181,   182,     0,   183,   184,   185,     0,
     186,   187,   188,     0,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,     0,   200,     0,   201,   202,
     203,   204,     0,   205,     0,   206,     0,     0,     0,   209,
     210,   211,     0,   213,     0,   214,     0,   215,   216,   217,
       0,   218,   219,   220,   221,   222,   223,   224,     0,   226,
     227,   228,   229,     0,   230,   231,   232,   233,   234,   235,
       0,   236,     0,   238,   239,   240,   241,   242,   243,   244,
     245,     0,   246,     0,   247,     0,     0,   250,     0,   252,
     253,   254,   255,   256,   257,     0,     0,   258,     0,   260,
       0,     0,   262,   263,   264,     0,     0,   265,   266,   267,
     268,   269,   502,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,     0,   291,   292,   293,   294,   295,     0,   296,
     297,     0,   299,     0,   300,   301,   302,   303,   304,   305,
       0,   306,   307,     0,     0,   308,   309,   310,     0,     0,
     311,   312,     0,   314,     0,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,     0,   327,   328,   329,
     330,   331,   332,   333,   334,   335,     0,   336,   337,   338,
     339,   340,   341,     0,   342,   343,   344,   345,   346,   347,
     348,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,     0,   363,   364,     0,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,     0,   381,   382,   383,   384,
     385,     0,   386,   387,   388,   389,   390,     0,   392,   393,
     394,   395,     0,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   504,   408,   409,   410,     0,   411,
     412,     0,   413,     0,   415,   416,   417,   418,   419,     0,
     420,   421,     0,     0,   422,   423,   424,   425,   426,     0,
     427,   428,   429,   430,   431,   432,   433,   434,     0,     0,
     435,   436,   437,   438,   439,     0,     0,   440,   441,   442,
     443,   444,   445,   446,     0,   447,     0,   449,   450,   451,
     452,     0,     0,   453,     0,     0,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,     0,   500,     0,
     581,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   924,    93,    94,    95,    96,    97,    98,
      99,   100,     0,   101,   102,   103,     0,     0,     0,     0,
       0,     0,     0,   104,   105,     0,   106,   107,   108,     0,
     110,   111,   112,   113,   114,     0,   116,   117,     0,   118,
     119,   120,   121,   122,   123,     0,     0,   124,   125,   126,
     127,   128,     0,   129,   130,   131,   132,   133,     0,     0,
       0,   135,   136,   137,   138,   139,   140,     0,   142,   143,
     144,     0,   145,   146,   147,   148,   149,   150,     0,     0,
     152,   153,   154,     0,     0,     0,     0,     0,     0,     0,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
       0,   166,     0,   167,   168,   169,   170,   171,   172,     0,
     173,   174,   175,   176,   177,     0,     0,   178,   179,   180,
     181,   182,     0,   183,   184,   185,     0,   186,   187,   188,
       0,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,     0,   200,     0,   201,   202,   203,   204,     0,
     205,     0,   206,     0,     0,     0,   209,   210,   211,     0,
     213,     0,   214,     0,   215,   216,   217,     0,   218,   219,
     220,   221,   222,   223,   224,     0,   226,   227,   228,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,     0,
     238,   239,   240,   241,   242,   243,   244,   245,     0,   246,
       0,   247,     0,     0,   250,     0,   252,   253,   254,   255,
     256,   257,     0,     0,   258,     0,   260,     0,     0,   262,
     263,   264,     0,     0,   265,   266,   267,   268,   269,   502,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,     0,
     291,   292,   293,   294,   295,     0,   296,   297,     0,   299,
       0,   300,   301,   302,   303,   304,   305,     0,   306,   307,
       0,     0,   308,   309,   310,     0,     0,   311,   312,     0,
     314,     0,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,     0,   327,   328,   329,   330,   331,   332,
     333,   334,   335,     0,   336,   337,   338,   339,   340,   341,
       0,   342,   343,   344,   345,   346,   347,   348,   349,     0,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,     0,   363,   364,     0,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,     0,   381,   382,   383,   384,   385,     0,   386,
     387,   388,   389,   390,     0,   392,   393,   394,   395,     0,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   504,   408,   409,   410,     0,   411,   412,     0,   413,
       0,   415,   416,   417,   418,   419,     0,   420,   421,     0,
       0,   422,   423,   424,   425,   426,     0,   427,   428,   429,
     430,   431,   432,   433,   434,     0,     0,   435,   436,   437,
     438,   439,     0,     0,   440,   441,   442,   443,   444,   445,
     446,     0,   447,     0,   449,   450,   451,   452,     0,     0,
     453,     0,     0,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,     0,   500,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2548,    93,    94,    95,    96,    97,    98,    99,   100,     0,
     101,   102,   103,     0,     0,     0,     0,     0,     0,     0,
     104,   105,     0,   106,   107,   108,     0,   110,   111,   112,
     113,   114,     0,   116,   117,     0,   118,   119,   120,   121,
     122,   123,     0,     0,   124,   125,   126,   127,   128,     0,
     129,   130,   131,   132,   133,     0,     0,     0,   135,   136,
     137,   138,   139,   140,     0,   142,   143,   144,     0,   145,
     146,   147,   148,   149,   150,     0,     0,   152,   153,   154,
       0,     0,     0,     0,     0,     0,     0,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,     0,   166,     0,
     167,   168,   169,   170,   171,   172,     0,   173,   174,   175,
     176,   177,     0,     0,   178,   179,   180,   181,   182,     0,
     183,   184,   185,     0,   186,   187,   188,     0,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,     0,
     200,     0,   201,   202,   203,   204,     0,   205,     0,   206,
       0,     0,     0,   209,   210,   211,     0,   213,     0,   214,
       0,   215,   216,   217,     0,   218,   219,   220,   221,   222,
     223,   224,     0,   226,   227,   228,   229,     0,   230,   231,
     232,   233,   234,   235,     0,   236,     0,   238,   239,   240,
     241,   242,   243,   244,   245,     0,   246,     0,   247,     0,
       0,   250,     0,   252,   253,   254,   255,   256,   257,     0,
       0,   258,     0,   260,     0,     0,   262,   263,   264,     0,
       0,   265,   266,   267,   268,   269,   502,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,     0,   291,   292,   293,
     294,   295,     0,   296,   297,     0,   299,     0,   300,   301,
     302,   303,   304,   305,     0,   306,   307,     0,     0,   308,
     309,   310,     0,     0,   311,   312,     0,   314,     0,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,   327,   328,   329,   330,   331,   332,   333,   334,   335,
       0,   336,   337,   338,   339,   340,   341,     0,   342,   343,
     344,   345,   346,   347,   348,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
       0,   363,   364,     0,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,     0,
     381,   382,   383,   384,   385,     0,   386,   387,   388,   389,
     390,     0,   392,   393,   394,   395,     0,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   504,   408,
     409,   410,     0,   411,   412,     0,   413,     0,   415,   416,
     417,   418,   419,     0,   420,   421,     0,     0,   422,   423,
     424,   425,   426,     0,   427,   428,   429,   430,   431,   432,
     433,   434,     0,     0,   435,   436,   437,   438,   439,     0,
       0,   440,   441,   442,   443,   444,   445,   446,     0,   447,
       0,   449,   450,   451,   452,     0,     0,   453,     0,     0,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,     0,   500,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1658,    93,    94,
      95,    96,    97,    98,    99,   100,     0,   101,   102,   103,
       0,     0,     0,     0,     0,     0,     0,   104,   105,     0,
     106,   107,   108,     0,   110,   111,   112,   113,   114,     0,
     116,   117,     0,   118,   119,   120,   121,   122,   123,     0,
       0,   124,   125,   126,   127,   128,     0,   129,   130,   131,
     132,   133,     0,     0,     0,   135,   136,   137,   138,   139,
     140,     0,   142,   143,   144,     0,   145,   146,   147,   148,
     149,   150,     0,     0,   152,   153,   154,     0,     0,     0,
       0,     0,     0,     0,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,     0,   166,     0,   167,   168,   169,
     170,   171,   172,     0,   173,   174,   175,   176,   177,     0,
       0,   178,   179,   180,   181,   182,     0,   183,   184,   185,
       0,   186,   187,   188,     0,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,     0,   200,     0,   201,
     202,   203,   204,     0,   205,     0,   206,     0,     0,     0,
     209,   210,   211,     0,   213,     0,   214,     0,   215,   216,
     217,     0,   218,   219,   220,   221,   222,   223,   224,     0,
     226,   227,   228,   229,     0,   230,   231,   232,   233,   234,
     235,     0,   236,     0,   238,   239,   240,   241,   242,   243,
     244,   245,     0,   246,     0,   247,     0,     0,   250,     0,
     252,   253,   254,   255,   256,   257,     0,     0,   258,     0,
     260,     0,     0,   262,   263,   264,     0,     0,   265,   266,
     267,   268,   269,   502,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,     0,   291,   292,   293,   294,   295,     0,
     296,   297,     0,   299,     0,   300,   301,   302,   303,   304,
     305,     0,   306,   307,     0,     0,   308,   309,   310,     0,
       0,   311,   312,     0,   314,     0,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,     0,   327,   328,
     329,   330,   331,   332,   333,   334,   335,     0,   336,   337,
     338,   339,   340,   341,     0,   342,   343,   344,   345,   346,
     347,   348,   349,     0,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,     0,   363,   364,
       0,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,     0,   381,   382,   383,
     384,   385,     0,   386,   387,   388,   389,   390,     0,   392,
     393,   394,   395,     0,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   504,   408,   409,   410,     0,
     411,   412,     0,   413,     0,   415,   416,   417,   418,   419,
       0,   420,   421,     0,     0,   422,   423,   424,   425,   426,
       0,   427,   428,   429,   430,   431,   432,   433,   434,     0,
       0,   435,   436,   437,   438,   439,     0,     0,   440,   441,
     442,   443,   444,   445,   446,     0,   447,     0,   449,   450,
     451,   452,     0,     0,   453,     0,     0,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,     0,   500,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1762,    93,    94,    95,    96,    97,
      98,    99,   100,     0,   101,   102,   103,     0,     0,     0,
       0,     0,     0,     0,   104,   105,     0,   106,   107,   108,
       0,   110,   111,   112,   113,   114,     0,   116,   117,     0,
     118,   119,   120,   121,   122,   123,     0,     0,   124,   125,
     126,   127,   128,     0,   129,   130,   131,   132,   133,     0,
       0,     0,   135,   136,   137,   138,   139,   140,     0,   142,
     143,   144,     0,   145,   146,   147,   148,   149,   150,     0,
       0,   152,   153,   154,     0,     0,     0,     0,     0,     0,
       0,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,     0,   166,     0,   167,   168,   169,   170,   171,   172,
       0,   173,   174,   175,   176,   177,     0,     0,   178,   179,
     180,   181,   182,     0,   183,   184,   185,     0,   186,   187,
     188,     0,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,     0,   200,     0,   201,   202,   203,   204,
       0,   205,     0,   206,     0,     0,     0,   209,   210,   211,
       0,   213,     0,   214,     0,   215,   216,   217,     0,   218,
     219,   220,   221,   222,   223,   224,     0,   226,   227,   228,
     229,     0,   230,   231,   232,   233,   234,   235,     0,   236,
       0,   238,   239,   240,   241,   242,   243,   244,   245,     0,
     246,     0,   247,     0,     0,   250,     0,   252,   253,   254,
     255,   256,   257,     0,     0,   258,     0,   260,     0,     0,
     262,   263,   264,     0,     0,   265,   266,   267,   268,   269,
     502,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
       0,   291,   292,   293,   294,   295,     0,   296,   297,     0,
     299,     0,   300,   301,   302,   303,   304,   305,     0,   306,
     307,     0,     0,   308,   309,   310,     0,     0,   311,   312,
       0,   314,     0,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,     0,   327,   328,   329,   330,   331,
     332,   333,   334,   335,     0,   336,   337,   338,   339,   340,
     341,     0,   342,   343,   344,   345,   346,   347,   348,   349,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,     0,   363,   364,     0,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,     0,   381,   382,   383,   384,   385,     0,
     386,   387,   388,   389,   390,     0,   392,   393,   394,   395,
       0,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   504,   408,   409,   410,     0,   411,   412,     0,
     413,     0,   415,   416,   417,   418,   419,     0,   420,   421,
       0,     0,   422,   423,   424,   425,   426,     0,   427,   428,
     429,   430,   431,   432,   433,   434,     0,     0,   435,   436,
     437,   438,   439,     0,     0,   440,   441,   442,   443,   444,
     445,   446,     0,   447,     0,   449,   450,   451,   452,     0,
       0,   453,     0,     0,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,     0,     0,     0,     0,  2403,
    1236,   549,     0,     0,  1619,   821,     0,     0,     0,     0,
       0,  2520,  1620,  1621,  1622,    93,    94,    95,    96,    97,
      98,    99,   100,  1055,   101,   102,   103,  1056,  1057,  1058,
    1059,  1060,  1061,  1062,   104,   105,  1063,   106,   107,   108,
    2404,   110,   111,   112,     0,   665,  2405,   667,   668,  1064,
     118,   119,   120,   121,   122,   123,  1065,  1066,   124,   125,
     669,   670,   128,  1067,   129,   130,   131,   132,     0,  1068,
    2406,  1069,   135,   136,   137,   138,   139,   140,  2407,   142,
     143,   144,  1070,   145,   146,   147,   148,   149,   150,  1071,
    2408,   152,   153,   154,  1072,  1073,  1074,  2409,  1075,  1076,
    1077,   156,   157,   158,   159,   160,   161,   162,   675,   676,
     165,  1078,   166,  1079,   167,   168,   169,   170,   171,   172,
    1080,   173,   174,   175,   176,   177,  1081,  1082,   178,   179,
     677,   181,   182,  1083,   183,   184,   185,  1084,   186,   187,
     188,  1085,   189,   190,   191,   192,     0,   194,   195,   196,
     197,   198,     0,  1086,   200,  1087,   201,   202,   678,   204,
    1088,   205,  1089,   206,  2410,  1090,  2411,   209,   210,   211,
    2412,   213,  1091,   214,  1092,     0,     0,   217,  1093,   218,
     219,   220,   221,   222,   223,   224,  2413,   226,   227,   228,
     229,  1094,   230,   231,   232,   233,   234,   235,  1095,   236,
    2414,     0,   239,   240,   241,   242,   243,   685,   686,  1096,
     687,  1097,   247,  2415,  2416,   250,  2417,   252,   253,   254,
     255,   256,   257,  1098,  1099,   258,  2418,   260,  2419,  1100,
     262,   263,   264,  1101,  1102,   265,   266,   267,   268,   269,
    2420,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   694,
    2421,   696,   292,   293,   294,  2422,  1103,   296,   297,  2423,
     299,  1104,     0,   301,   698,   303,   304,   305,  1105,   306,
     307,  1106,  1107,  2424,   309,   310,  1108,  1109,   311,     0,
    2425,   314,  2426,     0,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,  1110,   327,   328,     0,   330,   331,
       0,   333,   334,   335,  1111,   336,   337,   338,   339,   340,
     341,  1112,   342,   343,   344,   701,   346,   347,   348,   349,
    1113,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,  1114,   363,   364,  2427,   366,   367,
     368,   703,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,  1115,   381,   382,   383,   384,   385,  1116,
     386,  2428,   388,   389,   390,  2429,   392,   393,   706,   395,
    1117,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,  2430,   408,     0,   410,  1118,   411,   412,  1119,
     413,  2431,   415,   416,   417,   418,   419,  1120,   709,   710,
    1121,  1122,   422,   423,     0,   425,     0,  1123,   427,   428,
    2432,   430,   431,   432,   433,   434,  1124,  1125,   435,   436,
     437,   438,   439,  1126,  1127,   440,   441,   442,   443,   444,
       0,   712,  1129,   447,  2433,   449,   450,   451,   452,  1130,
    1131,   453,  1132,  1133,   454,   455,   456,   457,   458,   459,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   471,   472,   473,   474,     0,   500,     0,  1623,  1624,
    1625,  1619,  2434,  2435,  1628,  1629,  1630,  1631,     0,  1620,
    1621,  1622,    93,    94,    95,    96,    97,    98,    99,   100,
       0,   101,   102,   103,     0,     0,     0,     0,     0,     0,
       0,   104,   105,     0,   106,   107,   108,     0,   110,   111,
     112,   113,   114,     0,   116,   117,     0,   118,   119,   120,
     121,   122,   123,     0,     0,   124,   125,   126,   127,   128,
       0,   129,   130,   131,   132,   133,     0,     0,     0,   135,
     136,   137,   138,   139,   140,     0,   142,   143,   144,     0,
     145,   146,   147,   148,   149,   150,     0,     0,   152,   153,
     154,     0,     0,     0,     0,     0,     0,     0,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,     0,   166,
       0,   167,   168,   169,   170,   171,   172,     0,   173,   174,
     175,   176,   177,     0,     0,   178,   179,   180,   181,   182,
       0,   183,   184,   185,     0,   186,   187,   188,     0,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
       0,   200,     0,   201,   202,   203,   204,     0,   205,     0,
     206,     0,     0,     0,   209,   210,   211,     0,   213,     0,
     214,     0,   215,   216,   217,     0,   218,   219,   220,   221,
     222,   223,   224,     0,   226,   227,   228,   229,     0,   230,
     231,   232,   233,   234,   235,     0,   236,     0,   238,   239,
     240,   241,   242,   243,   244,   245,     0,   246,     0,   247,
       0,     0,   250,     0,   252,   253,   254,   255,   256,   257,
       0,     0,   258,     0,   260,     0,     0,   262,   263,   264,
       0,     0,   265,   266,   267,   268,   269,   502,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,     0,   291,   292,
     293,   294,   295,     0,   296,   297,     0,   299,     0,   300,
     301,   302,   303,   304,   305,     0,   306,   307,     0,     0,
     308,   309,   310,     0,     0,   311,   312,     0,   314,     0,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,     0,   327,   328,   329,   330,   331,   332,   333,   334,
     335,     0,   336,   337,   338,   339,   340,   341,     0,   342,
     343,   344,   345,   346,   347,   348,   349,     0,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,     0,   363,   364,     0,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
       0,   381,   382,   383,   384,   385,     0,   386,   387,   388,
     389,   390,     0,   392,   393,   394,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   504,
     408,   409,   410,     0,   411,   412,     0,   413,     0,   415,
     416,   417,   418,   419,     0,   420,   421,     0,     0,   422,
     423,   424,   425,   426,     0,   427,   428,   429,   430,   431,
     432,   433,   434,     0,     0,   435,   436,   437,   438,   439,
       0,     0,   440,   441,   442,   443,   444,   445,   446,     0,
     447,     0,   449,   450,   451,   452,     0,     0,   453,     0,
       0,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,     0,     0,     0,  1623,  1624,  1625,     0,  1626,
    1627,  1628,  1629,  1630,  1631,  1312,     0,     0,  1313,     0,
       0,     0,  1314,  1315,  1316,  1317,     0,     0,     0,     0,
       0,     0,     0,     0,  1312,     0,     0,  1313,     0,     0,
    1318,  1314,  1315,  1316,  1317,     0,     0,     0,  1320,     0,
       0,     0,     0,     0,     0,  1321,     0,     0,     0,  1318,
       0,     0,     0,  1312,     0,     0,  1313,  1320,     0,     0,
    1314,  1315,  1316,  1317,  1321,     0,     0,     0,     0,     0,
    1322,     0,  1312,     0,     0,  1313,     0,     0,  1318,  1314,
    1315,  1316,  1317,     0,     0,     0,  1320,     0,     0,  1322,
       0,     0,  1312,  1321,     0,  1313,     0,  1318,     0,     0,
    1315,  1316,  1317,     0,     0,  1320,     0,     0,     0,     0,
       0,     0,  1321,     0,     0,     0,     0,     0,  1322,     0,
       0,     0,     0,     0,     0,  1320,  1312,     0,     0,  1313,
       0,     0,  1321,     0, -1735, -1735, -1735,  1322,     0,  1312,
       0,     0,  1313,     0,     0,     0,  1314,  1315,  1316,  1317,
       0,     0,     0,     0,     0,     0,     0,  1322,     0,  1320,
       0,     0,     0,     0,  1318,     0,  1321,     0,     0,     0,
       0,  1323,  1320,     0,     0,     0,     0,     0,     0,  1321,
       0,     0,     0,     0,     0,     0,     0,  1324,     0,     0,
    1323,  1322,  1325,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1322,     0,  1324,     0,     0,     0,
       0,  1325,     0,     0,  1326,  1327,     0,     0,     0,  1323,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1328,
       0,     0,     0,  1326,  1327,  1324,     0,     0,  1323,     0,
    1325,     0,     0,     0,     0,     0,     0,     0,  1328,     0,
       0,     0,     0,     0,  1324,     0,     0,     0,  1323,  1325,
       0,     0,  1326,  1327,     0,     0,     0,  1329,     0,     0,
    1330,     0,     0,     0,  1324,     0,     0,  1328,     0,  1325,
       0,  1326,  1327,     0,  1331,     0,  1329,  1332,     0,  1330,
       0,     0,  1323,     0,     0,     0,  1328,     0,     0,     0,
       0, -1735, -1735,  1331,     0,  1323,  1332,     0,  1324,     0,
       0,     0,     0,  1325,     0,  1329,  1328,     0,  1330,     0,
       0,  1324,     0,     0,     0,     0,  1325,     0,     0,     0,
       0,     0,  1331,     0,  1329,  1332,     0,  1330,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1326,  1327,
    1328,  1331,     0,     0,  1332,     0,     0, -1735,     0,     0,
       0,     0,     0,  1328,     0,     0,     0,     0,     0,     0,
       0,  1331,     0,     0,     0,     0,  1333,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1333,     0,     0,     0,     0,
       0,  1329,     0,     0,  1330,  1331,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1331,     0,
       0,  1332,     0,     0,  1333,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1333,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1333,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1334,     0,     0,  1335,
    1336,  1337,     0,  1338,  1339,  1340,  1341,  1342,  1343,     0,
       0,     0,     0,  2517,     0,  1334,     0,  1333,  1335,  1336,
    1337,     0,  1338,  1339,  1340,  1341,  1342,  1343,     0,     0,
    1333,     0,  2665,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1334,     0,     0,  1335,  1336,  1337,
       0,  1338,  1339,  1340,  1341,  1342,  1343,     0,     0,     0,
       0,  2886,     0,  1334,     0,     0,  1335,  1336,  1337,     0,
    1338,  1339,  1340,  1341,  1342,  1343,     0,     0,     0,     0,
    2898,     0,     0,  1334,     0,     0,  1335,  1336,  1337,     0,
    1338,  1339,  1340,  1341,  1342,  1343,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1334,     0,     0,
   -1735, -1735, -1735,     0,  1338,  1339,  1340,  1341,  1342,  1343,
    1334,  1054,     0,  1335,  1336,  1337,     0,  1338,  1339,  1340,
    1341,  1342,  1343,     0,     0,  1494,     0,    93,    94,    95,
      96,    97,    98,    99,   100,  1055,   101,   102,   103,  1056,
    1057,  1058,  1059,  1060,  1061,  1062,   104,   105,  1063,   106,
     107,   108,     0,   110,   111,   112,   746,   747,     0,   748,
     749,  1064,   118,   119,   120,   121,   122,   123,  1065,  1066,
     124,   125,   750,   751,   128,  1067,   129,   130,   131,   132,
     752,  1068,     0,  1069,   135,   136,   137,   138,   139,   140,
       0,   142,   143,   144,  1070,   145,   146,   147,   148,   149,
     150,  1071,     0,   152,   153,   154,  1072,  1073,  1074,     0,
    1075,  1076,  1077,   156,   157,   158,   159,   160,   161,   162,
     753,   754,   165,  1078,   166,  1079,   167,   168,   169,   170,
     171,   172,  1080,   173,   174,   175,   176,   177,  1081,  1082,
     178,   179,   180,   181,   182,  1083,   183,   184,   185,  1084,
     186,   187,   188,  1085,   189,   190,   191,   192,   755,   194,
     195,   196,   197,   198,   756,  1086,   200,  1087,   201,   202,
     757,   204,  1088,   205,  1089,   206,     0,  1090,     0,   209,
     210,   211,     0,   213,  1091,   214,  1092,   758,   759,   217,
    1093,   218,   219,   220,   221,   222,   223,   224,     0,   226,
     227,   228,   229,  1094,   230,   231,   232,   233,   234,   235,
    1095,   236,     0,   760,   239,   240,   241,   242,   243,   761,
     762,  1096,   763,  1097,   247,     0,     0,   250,     0,   252,
     253,   254,   255,   256,   257,  1098,  1099,   258,     0,   260,
       0,  1100,   262,   263,   264,  1101,  1102,   265,   266,   267,
     268,   269,   764,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   765,     0,   766,   292,   293,   294,   767,  1103,   296,
     297,     0,   299,  1104,   768,   301,   769,   303,   304,   305,
    1105,   306,   307,  1106,  1107,   308,   309,   310,  1108,  1109,
     311,   770,     0,   314,     0,   771,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,  1110,   327,   328,   772,
     330,   331,   773,   333,   334,   335,  1111,   336,   337,   338,
     339,   340,   341,  1112,   342,   343,   344,   774,   346,   347,
     348,   349,  1113,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,  1114,   363,   364,     0,
     366,   367,   368,   775,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,  1115,   381,   382,   383,   384,
     385,  1116,   386,   776,   388,   389,   390,     0,   392,   393,
     777,   395,  1117,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   778,   408,   779,   410,  1118,   411,
     412,  1119,   413,     0,   415,   416,   417,   418,   419,  1120,
     780,   781,  1121,  1122,   422,   423,   782,   425,   783,  1123,
     427,   428,   784,   430,   431,   432,   433,   434,  1124,  1125,
     435,   436,   437,   438,   439,  1126,  1127,   440,   441,   442,
     443,   444,  1128,   786,  1129,   447,     0,   449,   450,   451,
     452,  1130,  1131,   453,  1132,  1133,   454,   455,   456,   457,
     458,   459,   787,   788,   789,   790,   791,   792,   793,   794,
     795,   796,   797,   471,   472,   473,   474,   500,     0,     0,
       0,     0,     0,     0,     0,     0,  1741,     0,     0,     0,
       0,     0,     0,    93,    94,    95,    96,    97,    98,    99,
     100,     0,   101,   102,   103,     0,     0,     0,     0,     0,
       0,     0,   104,   105,     0,   106,   107,   108,     0,   110,
     111,   112,   113,   114,     0,   116,   117,     0,   118,   119,
     120,   121,   122,   123,     0,     0,   124,   125,   126,   127,
     128,     0,   129,   130,   131,   132,   133,     0,     0,     0,
     135,   136,   137,   138,   139,   140,     0,   142,   143,   144,
       0,   145,   146,   147,   148,   149,   150,     0,     0,   152,
     153,   154,     0,     0,     0,     0,     0,     0,     0,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   165,     0,
     166,     0,   167,   168,   169,   170,   171,   172,     0,   173,
     174,   175,   176,   177,     0,     0,   178,   179,   180,   181,
     182,     0,   183,   184,   185,     0,   186,   187,   188,     0,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,     0,   200,     0,   201,   202,   203,   204,     0,   205,
       0,   206,     0,     0,     0,   209,   210,   211,     0,   213,
       0,   214,     0,   215,   216,   217,     0,   218,   219,   220,
     221,   222,   223,   224,     0,   226,   227,   228,   229,     0,
     230,   231,   232,   233,   234,   235,     0,   236,     0,   238,
     239,   240,   241,   242,   243,   244,   245,     0,   246,     0,
     247,     0,     0,   250,     0,   252,   253,   254,   255,   256,
     257,     0,     0,   258,     0,   260,     0,     0,   262,   263,
     264,     0,     0,   265,   266,   267,   268,   269,   502,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,     0,   291,
     292,   293,   294,   295,     0,   296,   297,     0,   299,     0,
     300,   301,   302,   303,   304,   305,     0,   306,   307,     0,
       0,   308,   309,   310,     0,     0,   311,   312,     0,   314,
       0,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,     0,   327,   328,   329,   330,   331,   332,   333,
     334,   335,     0,   336,   337,   338,   339,   340,   341,     0,
     342,   343,   344,   345,   346,   347,   348,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,     0,   363,   364,     0,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,     0,   381,   382,   383,   384,   385,     0,   386,   387,
     388,   389,   390,     0,   392,   393,   394,   395,     0,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     504,   408,   409,   410,     0,   411,   412,     0,   413,     0,
     415,   416,   417,   418,   419,     0,   420,   421,     0,     0,
     422,   423,   424,   425,   426,     0,   427,   428,   429,   430,
     431,   432,   433,   434,     0,     0,   435,   436,   437,   438,
     439,     0,     0,   440,   441,   442,   443,   444,   445,   446,
       0,   447,     0,   449,   450,   451,   452,     0,     0,   453,
       0,     0,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   745,  1236,   549,     0,     0,     0,   821,
       0,     0,  2233,     0,     0,     0,     0,     0,     0,    93,
      94,    95,    96,    97,    98,    99,   100,     0,   101,   102,
     103,     0,     0,     0,     0,     0,     0,     0,   104,   105,
       0,   106,   107,   108,     0,   110,   111,   112,   746,   747,
       0,   748,   749,     0,   118,   119,   120,   121,   122,   123,
       0,     0,   124,   125,   750,   751,   128,     0,   129,   130,
     131,   132,   752,     0,     0,     0,   135,   136,   137,   138,
     139,   140,     0,   142,   143,   144,     0,   145,   146,   147,
     148,   149,   150,     0,     0,   152,   153,   154,     0,     0,
       0,     0,     0,     0,     0,   156,   157,   158,   159,   160,
     161,   162,   753,   754,   165,  1370,   166,     0,   167,   168,
     169,   170,   171,   172,     0,   173,   174,   175,   176,   177,
       0,     0,   178,   179,   180,   181,   182,     0,   183,   184,
     185,     0,   186,   187,   188,     0,   189,   190,   191,   192,
     755,   194,   195,   196,   197,   198,   756,  1237,   200,     0,
     201,   202,   757,   204,     0,   205,     0,   206,     0,     0,
       0,   209,   210,   211,     0,   213,     0,   214,     0,   758,
     759,   217,     0,   218,   219,   220,   221,   222,   223,   224,
       0,   226,   227,   228,   229,     0,   230,   231,   232,   233,
     234,   235,     0,   236,     0,   760,   239,   240,   241,   242,
     243,   761,   762,     0,   763,     0,   247,     0,     0,   250,
       0,   252,   253,   254,   255,   256,   257,     0,     0,   258,
       0,   260,     0,     0,   262,   263,   264,     0,     0,   265,
     266,   267,   268,   269,   764,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   765,     0,   766,   292,   293,   294,   767,
       0,   296,   297,     0,   299,     0,   768,   301,   769,   303,
     304,   305,     0,   306,   307,  1238,     0,   308,   309,   310,
       0,     0,   311,   770,     0,   314,     0,   771,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,     0,   327,
     328,   772,   330,   331,   773,   333,   334,   335,     0,   336,
     337,   338,   339,   340,   341,     0,   342,   343,   344,   774,
     346,   347,   348,   349,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,     0,   363,
     364,     0,   366,   367,   368,   775,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,     0,   381,   382,
     383,   384,   385,     0,   386,   776,   388,   389,   390,     0,
     392,   393,   777,   395,     0,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   778,   408,   779,   410,
       0,   411,   412,     0,   413,     0,   415,   416,   417,   418,
     419,     0,   780,   781,     0,     0,   422,   423,   782,   425,
     783,  1239,   427,   428,   784,   430,   431,   432,   433,   434,
       0,     0,   435,   436,   437,   438,   439,     0,     0,   440,
     441,   442,   443,   444,  1128,   786,     0,   447,     0,   449,
     450,   451,   452,     0,     0,   453,     0,     0,   454,   455,
     456,   457,   458,   459,   787,   788,   789,   790,   791,   792,
     793,   794,   795,   796,   797,   471,   472,   473,   474,   745,
    1236,   549,     0,     0,     0,   821,  1240,  1241,     0,     0,
       0,     0,     0,     0,     0,    93,    94,    95,    96,    97,
      98,    99,   100,     0,   101,   102,   103,     0,     0,     0,
       0,     0,     0,     0,   104,   105,     0,   106,   107,   108,
       0,   110,   111,   112,   746,   747,     0,   748,   749,     0,
     118,   119,   120,   121,   122,   123,     0,     0,   124,   125,
     750,   751,   128,     0,   129,   130,   131,   132,   752,     0,
       0,     0,   135,   136,   137,   138,   139,   140,     0,   142,
     143,   144,     0,   145,   146,   147,   148,   149,   150,     0,
       0,   152,   153,   154,     0,     0,     0,     0,     0,     0,
       0,   156,   157,   158,   159,   160,   161,   162,   753,   754,
     165,  1372,   166,     0,   167,   168,   169,   170,   171,   172,
       0,   173,   174,   175,   176,   177,     0,     0,   178,   179,
     180,   181,   182,     0,   183,   184,   185,     0,   186,   187,
     188,     0,   189,   190,   191,   192,   755,   194,   195,   196,
     197,   198,   756,  1237,   200,     0,   201,   202,   757,   204,
       0,   205,     0,   206,     0,     0,     0,   209,   210,   211,
       0,   213,     0,   214,     0,   758,   759,   217,     0,   218,
     219,   220,   221,   222,   223,   224,     0,   226,   227,   228,
     229,     0,   230,   231,   232,   233,   234,   235,     0,   236,
       0,   760,   239,   240,   241,   242,   243,   761,   762,     0,
     763,     0,   247,     0,     0,   250,     0,   252,   253,   254,
     255,   256,   257,     0,     0,   258,     0,   260,     0,     0,
     262,   263,   264,     0,     0,   265,   266,   267,   268,   269,
     764,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   765,
       0,   766,   292,   293,   294,   767,     0,   296,   297,     0,
     299,     0,   768,   301,   769,   303,   304,   305,     0,   306,
     307,  1238,     0,   308,   309,   310,     0,     0,   311,   770,
       0,   314,     0,   771,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,     0,   327,   328,   772,   330,   331,
     773,   333,   334,   335,     0,   336,   337,   338,   339,   340,
     341,     0,   342,   343,   344,   774,   346,   347,   348,   349,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,     0,   363,   364,     0,   366,   367,
     368,   775,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,     0,   381,   382,   383,   384,   385,     0,
     386,   776,   388,   389,   390,     0,   392,   393,   777,   395,
       0,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   778,   408,   779,   410,     0,   411,   412,     0,
     413,     0,   415,   416,   417,   418,   419,     0,   780,   781,
       0,     0,   422,   423,   782,   425,   783,  1239,   427,   428,
     784,   430,   431,   432,   433,   434,     0,     0,   435,   436,
     437,   438,   439,     0,     0,   440,   441,   442,   443,   444,
    1128,   786,     0,   447,     0,   449,   450,   451,   452,     0,
       0,   453,     0,     0,   454,   455,   456,   457,   458,   459,
     787,   788,   789,   790,   791,   792,   793,   794,   795,   796,
     797,   471,   472,   473,   474,   745,  1236,   549,     0,     0,
       0,   821,  1240,  1241,     0,     0,     0,     0,     0,     0,
       0,    93,    94,    95,    96,    97,    98,    99,   100,     0,
     101,   102,   103,     0,     0,     0,     0,     0,     0,     0,
     104,   105,     0,   106,   107,   108,     0,   110,   111,   112,
     746,   747,     0,   748,   749,     0,   118,   119,   120,   121,
     122,   123,     0,     0,   124,   125,   750,   751,   128,     0,
     129,   130,   131,   132,   752,     0,     0,     0,   135,   136,
     137,   138,   139,   140,     0,   142,   143,   144,     0,   145,
     146,   147,   148,   149,   150,     0,     0,   152,   153,   154,
       0,     0,     0,     0,     0,     0,     0,   156,   157,   158,
     159,   160,   161,   162,   753,   754,   165,     0,   166,     0,
     167,   168,   169,   170,   171,   172,     0,   173,   174,   175,
     176,   177,     0,     0,   178,   179,   180,   181,   182,     0,
     183,   184,   185,     0,   186,   187,   188,     0,   189,   190,
     191,   192,   755,   194,   195,   196,   197,   198,   756,  1237,
     200,     0,   201,   202,   757,   204,     0,   205,     0,   206,
       0,     0,     0,   209,   210,   211,     0,   213,     0,   214,
       0,   758,   759,   217,     0,   218,   219,   220,   221,   222,
     223,   224,     0,   226,   227,   228,   229,     0,   230,   231,
     232,   233,   234,   235,     0,   236,     0,   760,   239,   240,
     241,   242,   243,   761,   762,     0,   763,     0,   247,     0,
       0,   250,     0,   252,   253,   254,   255,   256,   257,     0,
       0,   258,     0,   260,     0,     0,   262,   263,   264,     0,
       0,   265,   266,   267,   268,   269,   764,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   765,     0,   766,   292,   293,
     294,   767,     0,   296,   297,     0,   299,     0,   768,   301,
     769,   303,   304,   305,     0,   306,   307,  1238,     0,   308,
     309,   310,     0,     0,   311,   770,     0,   314,     0,   771,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,   327,   328,   772,   330,   331,   773,   333,   334,   335,
       0,   336,   337,   338,   339,   340,   341,     0,   342,   343,
     344,   774,   346,   347,   348,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
       0,   363,   364,     0,   366,   367,   368,   775,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,     0,
     381,   382,   383,   384,   385,     0,   386,   776,   388,   389,
     390,     0,   392,   393,   777,   395,     0,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   778,   408,
     779,   410,     0,   411,   412,     0,   413,     0,   415,   416,
     417,   418,   419,     0,   780,   781,     0,     0,   422,   423,
     782,   425,   783,  1239,   427,   428,   784,   430,   431,   432,
     433,   434,     0,     0,   435,   436,   437,   438,   439,     0,
       0,   440,   441,   442,   443,   444,  1128,   786,     0,   447,
       0,   449,   450,   451,   452,     0,     0,   453,     0,     0,
     454,   455,   456,   457,   458,   459,   787,   788,   789,   790,
     791,   792,   793,   794,   795,   796,   797,   471,   472,   473,
     474,     0,     0,  1312,     0,     0,  1313,     0,  1240,  1241,
    1314,  1315,  1316,  1317,     0,     0,  1312,     0,     0,  1313,
       0,     0,     0,  1314,  1315,  1316,  1317,     0,  1318,     0,
       0,     0,  1767,     0,     0,     0,  1320,     0,     0,     0,
       0,  1318,     0,  1321,     0,     0,     0,     0,     0,  1320,
    1312,     0,     0,  1313,     0,     0,  1321,  1314,  1315,  1316,
    1317,     0,     0,  1312,     0,     0,  1313,     0,  1322,     0,
    1314,  1315,  1316,  1317,     0,  1318,     0,     0,     0,     0,
       0,  1322,     0,  1320,     0,     0,     0,     0,  1318,     0,
    1321,  1967,     0,     0,     0,     0,  1320,  1312,     0,     0,
    1313,     0,     0,  1321,  1314,  1315,  1316,  1317,     0,     0,
       0,     0,     0,     0,     0,  1322,     0,     0,     0,  1768,
       0,     0,  1318,     0,     0,     0,     0,     0,  1322,     0,
    1320,     0,     0,     0,     0,     0,     0,  1321,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1322,     0,     0,     0,     0,     0,     0,  1323,
       0,     0,  2005,     0,     0,     0,     0,  2006,     0,     0,
       0,     0,  1323,     0,     0,  1324,     0,     0,     0,     0,
    1325,     0,     0,     0,     0,     0,     0,     0,  1324,     0,
       0,     0,     0,  1325,     0,  2984,     0,     0,     0,     0,
       0,     0,  1326,  1327,     0,     0,  1323,     0,     0,     0,
       0,     0,     0,     0,     0,  1326,  1327,  1328,     0,  1323,
       0,     0,  1324,     0,     0,     0,     0,  1325,     0,     0,
    1328,     0,     0,     0,     0,  1324,     0,     0,     0,     0,
    1325,     0,     0,     0,     0,     0,     0,     0,     0,  1326,
    1327,     0,     0,  1323,     0,  1329,     0,     0,  1330,     0,
       0,     0,  1326,  1327,  1328,     0,     0,     0,  1329,  1324,
       0,  1330,  1331,     0,  1325,  1332,     0,  1328,     0,     0,
       0,     0,     0,     0,     0,  1331,     0,     0,  1332,     0,
       0,     0,     0,     0,     0,     0,  1326,  1327,     0,     0,
       0,     0,  1329,     0,     0,  1330,     0,     0,     0,     0,
       0,  1328,     0,     0,     0,  1329,     0,     0,  1330,  1331,
       0,     0,  1332,     0,     0,     0,     0,     0,     0,     0,
    1312,     0,  1331,  1313,     0,  1332,     0,  1314,  1315,  1316,
    1317,     0,     0,     0,     0,  2985,     0,     0,     0,  1329,
       0,     0,  1330,     0,     0,  1318,     0,     0,  2010,     0,
       0,     0,     0,  1320,  1333,     0,  1331,     0,     0,  1332,
    1321,     0,     0,     0,     0,     0,     0,  1333,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1979,     0,  1312,
       0,     0,  1313,     0,     0,  1322,  1314,  1315,  1316,  1317,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1333,     0,     0,  1318,     0,     0,     0,     0,     0,
       0,     0,  1320,  1772,  1333,     0,     0,     0,     0,  1321,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1322,     0,     0,     0,  1333,     0,
       0,     0,     0,     0,  1334,     0,     0,  1335,  1336,  1337,
       0,  1338,  1339,  1340,  1341,  1342,  1343,  1334,     0,     0,
    1335,  1336,  1337,     0,  1338,  1339,  1340,  1341,  1342,  1343,
       0,     0,     0,     0,     0,     0,  1323,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1334,  1324,     0,  1335,  1336,  1337,  1325,  1338,  1339,
    1340,  1341,  1342,  1343,  1334,     0,     0,  1335,  1336,  1337,
       0,  1338,  1339,  1340,  1341,  1342,  1343,     0,     0,  1326,
    1327,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2015,     0,     0,     0,  1328,  1323,     0,     0,  1334,     0,
       0,  1335,  1336,  1337,     0,  1338,  1339,  1340,  1341,  1342,
    1343,  1324,     0,     0,     0,  1312,  1325,     0,  1313,     0,
       0,     0,  1314,  1315,  1316,  1317,     0,     0,     0,     0,
       0,     0,  1329,     0,     0,  1330,     0,     0,  1326,  1327,
    1318,     0,     0,  2017,     0,     0,     0,     0,  1320,  1331,
       0,     0,  1332,  1328,     0,  1321,     0,     0,     0,     0,
    1312,     0,     0,  1313,     0,     0,     0,  1314,  1315,  1316,
    1317,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1322,     0,     0,     0,     0,  1318,     0,     0,     0,  1312,
       0,  1329,  1313,  1320,  1330,     0,  1314,  1315,  1316,  1317,
    1321,     0,     0,     0,     0,     0,     0,     0,  1331,     0,
       0,  1332,     0,     0,  1318,     0,     0,  2279,     0,     0,
       0,     0,  1320,     0,     0,  1322,     0,     0,     0,  1321,
       0,     0,     0,     0,     0,     0,  1312,     0,     0,  1313,
       0,  1333,     0,  1314,  1315,  1316,  1317,     0,     0,     0,
       0,     0,     0,     0,  1322,     0,     0,     0,     0,     0,
       0,  1318,     0,     0,     0,     0,     0,     0,     0,  1320,
       0,     0,     0,     0,     0,     0,  1321,     0,     0,     0,
       0,  1323,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1324,     0,     0,
    1333,  1322,  1325,  1312,     0,     0,  1313,     0,     0,     0,
    1314,  1315,  1316,  1317,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1326,  1327,  1323,     0,  1318,     0,
       0,     0,     0,     0,     0,     0,  1320,     0,     0,  1328,
       0,  1334,  1324,  1321,  1335,  1336,  1337,  1325,  1338,  1339,
    1340,  1341,  1342,  1343,     0,  1323,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1322,  1326,
    1327,  1324,     0,     0,     0,     0,  1325,  1329,     0,     0,
    1330,     0,     0,     0,  1328,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1331,     0,     0,  1332,  1326,  1327,
    1334,     0,  1323,  1335,  1336,  1337,     0,  1338,  1339,  1340,
    1341,  1342,  1343,  1328,     0,     0,     0,     0,  1324,     0,
       0,     0,  1329,  1325,     0,  1330,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1331,
       0,     0,  1332,     0,     0,  1326,  1327,     0,     0,     0,
       0,  1329,     0,     0,  1330,     0,     0,     0,     0,     0,
    1328,     0,     0,     0,     0,     0,     0,     0,  1331,  1323,
       0,  1332,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1324,  1333,     0,     0,     0,
    1325,     0,     0,     0,     0,     0,     0,     0,  1329,     0,
       0,  1330,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1326,  1327,     0,  1331,     0,     0,  1332,     0,
       0,     0,     0,     0,     0,     0,     0,  1328,     0,     0,
       0,  1333,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1333,     0,     0,  2237,     0,  1329,     0,     0,  1330,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1331,     0,     0,  1332,  1334,     0,     0,  1335,
    1336,  1337,     0,  1338,  1339,  1340,  1341,  1342,  1343,     0,
       0,     0,     0,     0,     0,     0,     0,  1333,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1334,     0,     0,  1335,  1336,  1337,     0,  1338,  1339,
    1340,  1341,  1342,  1343,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1334,     0,     0,  1335,  1336,  1337,     0,  1338,  1339,  1340,
    1341,  1342,  1343,     0,  1333,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1334,     0,     0,
    1335,  1336,  1337,     0,  1338,  1339,  1340,  1341,  1342,  1343,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1054,     0,  1678,  1334,     0,     0,  1335,  1336,  1337,
       0,  1338,  1339,  1340,  1341,  1787,  1343,    93,    94,    95,
      96,    97,    98,    99,   100,  1055,   101,   102,   103,  1056,
    1057,  1058,  1059,  1060,  1061,  1062,   104,   105,  1063,   106,
     107,   108,     0,   110,   111,   112,   746,   747,     0,   748,
     749,  1064,   118,   119,   120,   121,   122,   123,  1065,  1066,
     124,   125,   750,   751,   128,  1067,   129,   130,   131,   132,
     752,  1068,     0,  1069,   135,   136,   137,   138,   139,   140,
       0,   142,   143,   144,  1070,   145,   146,   147,   148,   149,
     150,  1071,     0,   152,   153,   154,  1072,  1073,  1074,     0,
    1075,  1076,  1077,   156,   157,   158,   159,   160,   161,   162,
     753,   754,   165,  1078,   166,  1079,   167,   168,   169,   170,
     171,   172,  1080,   173,   174,   175,   176,   177,  1081,  1082,
     178,   179,   180,   181,   182,  1083,   183,   184,   185,  1084,
     186,   187,   188,  1085,   189,   190,   191,   192,   755,   194,
     195,   196,   197,   198,   756,  1086,   200,  1087,   201,   202,
     757,   204,  1088,   205,  1089,   206,     0,  1090,     0,   209,
     210,   211,     0,   213,  1091,   214,  1092,   758,   759,   217,
    1093,   218,   219,   220,   221,   222,   223,   224,     0,   226,
     227,   228,   229,  1094,   230,   231,   232,   233,   234,   235,
    1095,   236,     0,   760,   239,   240,   241,   242,   243,   761,
     762,  1096,   763,  1097,   247,     0,     0,   250,     0,   252,
     253,   254,   255,   256,   257,  1098,  1099,   258,     0,   260,
       0,  1100,   262,   263,   264,  1101,  1102,   265,   266,   267,
     268,   269,   764,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   765,     0,   766,   292,   293,   294,   767,  1103,   296,
     297,     0,   299,  1104,   768,   301,   769,   303,   304,   305,
    1105,   306,   307,  1106,  1107,   308,   309,   310,  1108,  1109,
     311,   770,     0,   314,     0,   771,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,  1110,   327,   328,   772,
     330,   331,   773,   333,   334,   335,  1111,   336,   337,   338,
     339,   340,   341,  1112,   342,   343,   344,   774,   346,   347,
     348,   349,  1113,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,  1114,   363,   364,     0,
     366,   367,   368,   775,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,  1115,   381,   382,   383,   384,
     385,  1116,   386,   776,   388,   389,   390,     0,   392,   393,
     777,   395,  1117,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   778,   408,   779,   410,  1118,   411,
     412,  1119,   413,     0,   415,   416,   417,   418,   419,  1120,
     780,   781,  1121,  1122,   422,   423,   782,   425,   783,  1123,
     427,   428,   784,   430,   431,   432,   433,   434,  1124,  1125,
     435,   436,   437,   438,   439,  1126,  1127,   440,   441,   442,
     443,   444,  1128,   786,  1129,   447,     0,   449,   450,   451,
     452,  1130,  1131,   453,  1132,  1133,   454,   455,   456,   457,
     458,   459,   787,   788,   789,   790,   791,   792,   793,   794,
     795,   796,   797,   471,   472,   473,   474,  1054,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    93,    94,    95,    96,    97,    98,    99,
     100,  1055,   101,   102,   103,  1056,  1057,  1058,  1059,  1060,
    1061,  1062,   104,   105,  1063,   106,   107,   108,     0,   110,
     111,   112,   746,   747,     0,   748,   749,  1064,   118,   119,
     120,   121,   122,   123,  1065,  1066,   124,   125,   750,   751,
     128,  1067,   129,   130,   131,   132,   752,  1068,     0,  1069,
     135,   136,   137,   138,   139,   140,     0,   142,   143,   144,
    1070,   145,   146,   147,   148,   149,   150,  1071,     0,   152,
     153,   154,  1072,  1073,  1074,     0,  1075,  1076,  1077,   156,
     157,   158,   159,   160,   161,   162,   753,   754,   165,  1078,
     166,  1079,   167,   168,   169,   170,   171,   172,  1080,   173,
     174,   175,   176,   177,  1081,  1082,   178,   179,   180,   181,
     182,  1083,   183,   184,   185,  1084,   186,   187,   188,  1085,
     189,   190,   191,   192,   755,   194,   195,   196,   197,   198,
     756,  1086,   200,  1087,   201,   202,   757,   204,  1088,   205,
    1089,   206,     0,  1090,     0,   209,   210,   211,     0,   213,
    1091,   214,  1092,   758,   759,   217,  1093,   218,   219,   220,
     221,   222,   223,   224,     0,   226,   227,   228,   229,  1094,
     230,   231,   232,   233,   234,   235,  1095,   236,     0,   760,
     239,   240,   241,   242,   243,   761,   762,  1096,   763,  1097,
     247,     0,     0,   250,     0,   252,   253,   254,   255,   256,
     257,  1098,  1099,   258,     0,   260,     0,  1100,   262,   263,
     264,  1101,  1102,   265,   266,   267,   268,   269,   764,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   765,     0,   766,
     292,   293,   294,   767,  1103,   296,   297,     0,   299,  1104,
     768,   301,   769,   303,   304,   305,  1105,   306,   307,  1106,
    1107,   308,   309,   310,  1108,  1109,   311,   770,     0,   314,
       0,   771,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,  1110,   327,   328,   772,   330,   331,   773,   333,
     334,   335,  1111,   336,   337,   338,   339,   340,   341,  1112,
     342,   343,   344,   774,   346,   347,   348,   349,  1113,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,  1114,   363,   364,     0,   366,   367,   368,   775,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,  1115,   381,   382,   383,   384,   385,  1116,   386,   776,
     388,   389,   390,     0,   392,   393,   777,   395,  1117,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     778,   408,   779,   410,  1118,   411,   412,  1119,   413,     0,
     415,   416,   417,   418,   419,  1120,   780,   781,  1121,  1122,
     422,   423,   782,   425,   783,  1123,   427,   428,   784,   430,
     431,   432,   433,   434,  1124,  1125,   435,   436,   437,   438,
     439,  1126,  1127,   440,   441,   442,   443,   444,  1128,   786,
    1129,   447,     0,   449,   450,   451,   452,  1130,  1131,   453,
    1132,  1133,   454,   455,   456,   457,   458,   459,   787,   788,
     789,   790,   791,   792,   793,   794,   795,   796,   797,   471,
     472,   473,   474,  1054,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    93,
      94,    95,    96,  1822,    98,    99,   100,  1055,   101,   102,
     103,  1056,  1057,  1058,  1059,  1060,  1061,  1062,   104,   105,
    1063,   106,   107,   108,     0,   110,   111,   112,   746,   747,
       0,   748,   749,  1064,   118,   119,   120,   121,   122,   123,
    1065,  1066,   124,   125,   750,   751,   128,  1067,   129,   130,
     131,   132,   752,  1068,     0,  1069,   135,   136,   137,   138,
     139,   140,     0,   142,   143,   144,  1070,   145,   146,   147,
     148,   149,   150,  1071,     0,   152,   153,   154,  1072,  1073,
    1074,     0,  1075,  1076,  1077,   156,   157,   158,   159,   160,
     161,   162,   753,   754,   165,  1078,   166,  1079,   167,   168,
     169,   170,   171,   172,  1080,   173,   174,   175,   176,   177,
    1081,  1082,   178,   179,   180,  1823,   182,  1083,   183,   184,
     185,  1084,   186,   187,   188,  1085,   189,   190,   191,   192,
     755,   194,   195,   196,   197,   198,   756,  1086,   200,  1087,
     201,   202,   757,   204,  1088,   205,  1089,   206,     0,  1090,
       0,   209,   210,   211,     0,   213,  1091,   214,  1092,   758,
     759,   217,  1093,   218,   219,   220,   221,   222,   223,   224,
       0,   226,   227,   228,   229,  1094,   230,   231,   232,   233,
     234,   235,  1095,   236,     0,   760,   239,   240,   241,   242,
     243,   761,   762,  1096,   763,  1097,   247,     0,     0,   250,
       0,   252,   253,   254,   255,   256,   257,  1098,  1099,   258,
       0,   260,     0,  1100,   262,   263,   264,  1101,  1102,   265,
     266,   267,   268,   269,   764,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   765,     0,   766,   292,   293,   294,   767,
    1103,   296,   297,     0,   299,  1104,   768,   301,   769,   303,
     304,   305,  1105,   306,   307,  1106,  1107,   308,   309,   310,
    1108,  1109,   311,   770,     0,   314,     0,   771,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,  1110,   327,
     328,   772,   330,   331,   773,   333,   334,   335,  1111,   336,
     337,   338,   339,   340,   341,  1112,   342,   343,   344,   774,
     346,   347,   348,   349,  1113,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,  1114,   363,
     364,     0,   366,   367,   368,   775,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,  1115,   381,   382,
     383,   384,   385,  1116,  1824,   776,   388,   389,   390,     0,
     392,   393,   777,   395,  1117,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   778,   408,   779,   410,
    1118,   411,   412,  1119,   413,     0,   415,   416,   417,   418,
     419,  1120,   780,   781,  1121,  1122,   422,   423,   782,   425,
     783,  1123,   427,   428,   784,   430,   431,   432,   433,   434,
    1124,  1125,   435,   436,   437,   438,   439,  1126,  1127,   440,
     441,   442,   443,   444,  1128,   786,  1129,   447,     0,   449,
     450,   451,   452,  1130,  1131,   453,  1132,  1133,   454,   455,
     456,   457,   458,   459,   787,   788,   789,   790,   791,   792,
     793,   794,   795,   796,   797,   471,   472,   473,   474,    92,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    93,    94,    95,    96,    97,
      98,    99,   100,     0,   101,   102,   103,     0,     0,     0,
       0,     0,     0,     0,   104,   105,     0,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,   116,   117,     0,
     118,   119,   120,   121,   122,   123,     0,   828,   124,   125,
     126,   127,   128,     0,   129,   130,   131,   132,   831,     0,
     832,     0,   135,   136,   137,   138,   139,   140,   141,   142,
     143,   144,     0,   145,   146,   147,   148,   149,   150,     0,
     151,   152,   153,   154,   833,   834,   835,   836,   837,   838,
     839,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,     0,   166,     0,   167,   168,   169,   170,   171,   172,
       0,   173,   174,   175,   176,   177,     0,     0,   178,   179,
     180,   181,   182,     0,   183,   184,   185,     0,   186,   187,
     188,     0,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   844,     0,   200,     0,   201,   202,   203,   204,
       0,   205,     0,   206,   207,     0,   208,   209,   210,   211,
     212,   213,     0,   214,     0,   215,   216,   217,     0,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,     0,   230,   231,   232,   233,   234,   235,     0,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,     0,
     246,     0,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,     0,     0,   258,   259,   260,   261,     0,
     262,   263,   264,   852,   853,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,     0,   296,   297,   298,
     299,     0,   858,   301,   302,   303,   304,   305,     0,   306,
     307,     0,     0,   308,   309,   310,     0,     0,   311,   312,
     313,   314,   315,   861,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,     0,   327,   328,   862,   330,   331,
     332,   333,   334,   335,     0,   336,   337,   338,   339,   340,
     341,     0,   342,   343,   344,   345,   346,   347,   348,   349,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,     0,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,     0,   381,   382,   383,   384,   385,   865,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
       0,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   867,   410,     0,   411,   412,     0,
     413,   414,   415,   416,   417,   418,   419,     0,   420,   421,
       0,     0,   422,   423,   870,   425,   871,     0,   427,   428,
     873,   430,   431,   432,   433,   434,     0,     0,   435,   436,
     437,   438,   439,   874,     0,   440,   441,   442,   443,   444,
     445,   446,     0,   447,   448,   449,   450,   451,   452,     0,
       0,   453,     0,     0,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,    92,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    93,    94,    95,    96,    97,    98,    99,   100,     0,
     101,   102,   103,     0,     0,     0,     0,     0,     0,     0,
     104,   105,     0,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,   117,     0,   118,   119,   120,   121,
     122,   123,     0,     0,   124,   125,   126,   127,   128,     0,
     129,   130,   131,   132,   133,     0,   134,     0,   135,   136,
     137,   138,   139,   140,   141,   142,   143,   144,     0,   145,
     146,   147,   148,   149,   150,     0,   151,   152,   153,   154,
       0,     0,     0,   155,     0,     0,     0,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,     0,   166,     0,
     167,   168,   169,   170,   171,   172,     0,   173,   174,   175,
     176,   177,     0,     0,   178,   179,   180,   181,   182,     0,
     183,   184,   185,     0,   186,   187,   188,     0,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,     0,
     200,     0,   201,   202,   203,   204,     0,   205,     0,   206,
     207,     0,   208,   209,   210,   211,   212,   213,     0,   214,
       0,   215,   216,   217,     0,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,     0,   230,   231,
     232,   233,   234,   235,     0,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,     0,   246,     0,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,     0,
       0,   258,   259,   260,   261,     0,   262,   263,   264,     0,
       0,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,     0,   296,   297,   298,   299,     0,   300,   301,
     302,   303,   304,   305,     0,   306,   307,     0,     0,   308,
     309,   310,     0,     0,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,   327,   328,   329,   330,   331,   332,   333,   334,   335,
       0,   336,   337,   338,   339,   340,   341,     0,   342,   343,
     344,   345,   346,   347,   348,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
       0,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,     0,
     381,   382,   383,   384,   385,     0,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,     0,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,     0,   411,   412,     0,   413,   414,   415,   416,
     417,   418,   419,     0,   420,   421,     0,     0,   422,   423,
     424,   425,   426,     0,   427,   428,   429,   430,   431,   432,
     433,   434,     0,     0,   435,   436,   437,   438,   439,     0,
       0,   440,   441,   442,   443,   444,   445,   446,     0,   447,
     448,   449,   450,   451,   452,     0,     0,   453,     0,     0,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   500,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    93,    94,    95,
      96,    97,    98,    99,   100,     0,   101,   102,   103,     0,
       0,     0,     0,     0,     0,     0,   104,   105,     0,   106,
     107,   108,     0,   110,   111,   112,   113,   114,     0,   116,
     117,     0,   118,   119,   120,   121,   122,   123,     0,     0,
     124,   125,   126,   127,   128,  1432,   129,   130,   131,   132,
     133,     0,     0,  1433,   135,   136,   137,   138,   139,   140,
       0,   142,   143,   144,  1434,   145,   146,   147,   148,   149,
     150,     0,     0,   152,   153,   154,     0,     0,     0,     0,
       0,     0,     0,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,     0,   166,     0,   167,   168,   169,   170,
     171,   172,     0,   173,   174,   175,   176,   177,     0,     0,
     178,   179,   180,   181,   182,     0,   183,   184,   185,     0,
     186,   187,   188,     0,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,     0,   200,     0,   201,   202,
     203,   204,     0,   205,  1435,   206,     0,     0,     0,   209,
     210,   211,     0,   213,     0,   214,     0,   215,   216,   217,
       0,   218,   219,   220,   221,   222,  1436,   224,     0,   226,
     227,   228,   229,     0,   230,   231,   232,   233,   234,   235,
       0,   236,     0,   238,   239,   240,   241,   242,   243,   244,
     245,     0,   246,     0,   247,     0,     0,   250,     0,   252,
     253,   254,   255,   256,   257,     0,     0,   258,     0,   260,
       0,     0,   262,   263,   264,     0,     0,   265,   266,   267,
     268,   269,   502,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,     0,   291,   292,   293,   294,   295,     0,   296,
     297,     0,   299,     0,   300,   301,   302,   303,   304,   305,
       0,   306,   307,     0,     0,   308,   309,   310,     0,     0,
     311,   312,     0,   314,     0,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,     0,   327,   328,   329,
     330,   331,   332,   333,   334,   335,  1437,   336,   337,   338,
     339,   340,   341,     0,   342,   343,   344,   345,   346,   347,
     348,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,     0,   363,   364,     0,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,     0,   381,   382,   383,   384,
     385,     0,   386,   387,   388,   389,   390,     0,   392,   393,
     394,   395,     0,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   504,   408,   409,   410,     0,   411,
     412,     0,   413,     0,   415,   416,   417,   418,   419,     0,
     420,   421,     0,     0,   422,   423,   424,   425,   426,     0,
     427,   428,   429,   430,   431,   432,   433,   434,     0,  1438,
     435,   436,   437,   438,   439,     0,     0,   440,   441,   442,
     443,   444,   445,   446,     0,   447,     0,   449,   450,   451,
     452,     0,     0,   453,     0,     0,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   500,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    93,    94,    95,    96,    97,    98,    99,
     100,     0,   101,   102,   103,     0,     0,     0,     0,     0,
       0,     0,   104,   105,     0,   106,   107,   108,     0,   110,
     111,   112,   113,   114,     0,   116,   117,     0,   118,   119,
     120,   121,   122,   123,     0,     0,   124,   125,   126,   127,
     128,  1432,   129,   130,   131,   132,   133,     0,     0,     0,
     135,   136,   137,   138,   139,   140,     0,   142,   143,   144,
    1434,   145,   146,   147,   148,   149,   150,     0,     0,   152,
     153,   154,     0,     0,     0,     0,     0,     0,     0,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   165,     0,
     166,     0,   167,   168,   169,   170,   171,   172,     0,   173,
     174,   175,   176,   177,     0,     0,   178,   179,   180,   181,
     182,     0,   183,   184,   185,     0,   186,   187,   188,     0,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,     0,   200,     0,   201,   202,   203,   204,     0,   205,
    1435,   206,     0,     0,     0,   209,   210,   211,     0,   213,
       0,   214,     0,   215,   216,   217,     0,   218,   219,   220,
     221,   222,   223,   224,     0,   226,   227,   228,   229,     0,
     230,   231,   232,   233,   234,   235,     0,   236,     0,   238,
     239,   240,   241,   242,   243,   244,   245,     0,   246,     0,
     247,     0,     0,   250,     0,   252,   253,   254,   255,   256,
     257,     0,     0,   258,     0,   260,  1892,     0,   262,   263,
     264,     0,     0,   265,   266,   267,   268,   269,   502,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,     0,   291,
     292,   293,   294,   295,     0,   296,   297,     0,   299,     0,
     300,   301,   302,   303,   304,   305,     0,   306,   307,     0,
       0,   308,   309,   310,     0,     0,   311,   312,     0,   314,
       0,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,     0,   327,   328,   329,   330,   331,   332,   333,
     334,   335,  1437,   336,   337,   338,   339,   340,   341,     0,
     342,   343,   344,   345,   346,   347,   348,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,     0,   363,   364,     0,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,     0,   381,   382,   383,   384,   385,     0,   386,   387,
     388,   389,   390,     0,   392,   393,   394,   395,     0,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     504,   408,   409,   410,     0,   411,   412,     0,   413,     0,
     415,   416,   417,   418,   419,     0,   420,   421,     0,     0,
     422,   423,   424,   425,   426,     0,   427,   428,   429,   430,
     431,   432,   433,   434,     0,  1438,   435,   436,   437,   438,
     439,     0,     0,   440,   441,   442,   443,   444,   445,   446,
       0,   447,     0,   449,   450,   451,   452,     0,     0,   453,
       0,     0,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   745,     0,   549,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    93,
      94,    95,    96,    97,    98,    99,   100,     0,   101,   102,
     103,     0,     0,     0,     0,     0,     0,     0,   104,   105,
       0,   106,   107,   108,     0,   110,   111,   112,   746,   747,
       0,   748,   749,     0,   118,   119,   120,   121,   122,   123,
       0,     0,   124,   125,   750,   751,   128,     0,   129,   130,
     131,   132,   752,     0,     0,     0,   135,   136,   137,   138,
     139,   140,     0,   142,   143,   144,     0,   145,   146,   147,
     148,   149,   150,     0,     0,   152,   153,   154,     0,     0,
       0,     0,     0,     0,     0,   156,   157,   158,   159,   160,
     161,   162,   753,   754,   165,     0,   166,     0,   167,   168,
     169,   170,   171,   172,     0,   173,   174,   175,   176,   177,
       0,     0,   178,   179,   180,   181,   182,     0,   183,   184,
     185,     0,   186,   187,   188,     0,   189,   190,   191,   192,
     755,   194,   195,   196,   197,   198,   756,  1237,   200,     0,
     201,   202,   757,   204,     0,   205,     0,   206,     0,     0,
       0,   209,   210,   211,     0,   213,     0,   214,     0,   758,
     759,   217,     0,   218,   219,   220,   221,   222,   223,   224,
       0,   226,   227,   228,   229,     0,   230,   231,   232,   233,
     234,   235,     0,   236,     0,   760,   239,   240,   241,   242,
     243,   761,   762,     0,   763,     0,   247,     0,     0,   250,
       0,   252,   253,   254,   255,   256,   257,     0,     0,   258,
       0,   260,     0,     0,   262,   263,   264,     0,     0,   265,
     266,   267,   268,   269,   764,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   765,     0,   766,   292,   293,   294,   767,
       0,   296,   297,     0,   299,     0,   768,   301,   769,   303,
     304,   305,     0,   306,   307,  1238,     0,   308,   309,   310,
       0,     0,   311,   770,     0,   314,     0,   771,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,     0,   327,
     328,   772,   330,   331,   773,   333,   334,   335,     0,   336,
     337,   338,   339,   340,   341,     0,   342,   343,   344,   774,
     346,   347,   348,   349,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,     0,   363,
     364,     0,   366,   367,   368,   775,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,     0,   381,   382,
     383,   384,   385,     0,   386,   776,   388,   389,   390,     0,
     392,   393,   777,   395,     0,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   778,   408,   779,   410,
       0,   411,   412,     0,   413,     0,   415,   416,   417,   418,
     419,     0,   780,   781,     0,     0,   422,   423,   782,   425,
     783,  1239,   427,   428,   784,   430,   431,   432,   433,   434,
       0,     0,   435,   436,   437,   438,   439,     0,     0,   440,
     441,   442,   443,   444,  1128,   786,     0,   447,     0,   449,
     450,   451,   452,     0,     0,   453,     0,     0,   454,   455,
     456,   457,   458,   459,   787,   788,   789,   790,   791,   792,
     793,   794,   795,   796,   797,   471,   472,   473,   474,   500,
       0,   581,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    93,    94,    95,    96,    97,
      98,    99,   100,     0,   101,   102,   103,     3,     4,     0,
       0,     0,     0,     0,   104,   105,     0,   106,   107,   108,
       0,   110,   111,   112,   113,   114,     0,   116,   117,     0,
     118,   119,   120,   121,   122,   123,     0,     0,   124,   125,
     126,   127,   128,     0,   129,   130,   131,   132,   133,     0,
       0,     0,   135,   136,   137,   138,   139,   140,     0,   142,
     143,   144,     0,   145,   146,   147,   148,   149,   150,     0,
       0,   152,   153,   154,     0,     0,     0,     0,     0,     0,
       0,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,     0,   166,     0,   167,   168,   169,   170,   171,   172,
       0,   173,   174,   175,   176,   177,     0,     0,   178,   179,
     180,   181,   182,     0,   183,   184,   185,     0,   186,   187,
     188,     0,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,     0,   200,     0,   201,   202,   203,   204,
       0,   205,     0,   206,     0,     0,     0,   209,   210,   211,
       0,   213,     0,   214,     0,   215,   216,   217,     0,   218,
     219,   220,   221,   222,   223,   224,     0,   226,   227,   228,
     229,     0,   230,   231,   232,   233,   234,   235,     0,   236,
       0,   238,   239,   240,   241,   242,   243,   244,   245,     0,
     246,     0,   247,     0,     0,   250,     0,   252,   253,   254,
     255,   256,   257,     0,     0,   258,     0,   260,     0,     0,
     262,   263,   264,     0,     0,   265,   266,   267,   268,   269,
     502,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
       0,   291,   292,   293,   294,   295,     0,   296,   297,     0,
     299,     0,   300,   301,   302,   303,   304,   305,     0,   306,
     307,     0,     0,   308,   309,   310,     0,     0,   311,   312,
       0,   314,     0,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,     0,   327,   328,   329,   330,   331,
     332,   333,   334,   335,     0,   336,   337,   338,   339,   340,
     341,     0,   342,   343,   344,   345,   346,   347,   348,   349,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,     0,   363,   364,     0,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,     0,   381,   382,   383,   384,   385,     0,
     386,   387,   388,   389,   390,     0,   392,   393,   394,   395,
       0,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   504,   408,   409,   410,     0,   411,   412,     0,
     413,     0,   415,   416,   417,   418,   419,     0,   420,   421,
       0,     0,   422,   423,   424,   425,   426,     0,   427,   428,
     429,   430,   431,   432,   433,   434,     0,     0,   435,   436,
     437,   438,   439,     0,     0,   440,   441,   442,   443,   444,
     445,   446,     0,   447,     0,   449,   450,   451,   452,     0,
       0,   453,     0,     0,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   500,     0,   581,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    93,    94,    95,    96,    97,    98,    99,   100,     0,
     101,   102,   103,     0,     0,     0,     0,     0,     0,     0,
     104,   105,     0,   106,   107,   108,     0,   110,   111,   112,
     113,   114,     0,   116,   117,     0,   118,   119,   120,   121,
     122,   123,     0,     0,   124,   125,   126,   127,   128,     0,
     129,   130,   131,   132,   133,     0,     0,     0,   135,   136,
     137,   138,   139,   140,     0,   142,   143,   144,     0,   145,
     146,   147,   148,   149,   150,     0,     0,   152,   153,   154,
       0,     0,     0,     0,     0,     0,     0,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,     0,   166,     0,
     167,   168,   169,   170,   171,   172,     0,   173,   174,   175,
     176,   177,     0,     0,   178,   179,   180,   181,   182,     0,
     183,   184,   185,     0,   186,   187,   188,     0,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,     0,
     200,     0,   201,   202,   203,   204,     0,   205,     0,   206,
       0,     0,     0,   209,   210,   211,     0,   213,     0,   214,
       0,   215,   216,   217,     0,   218,   219,   220,   221,   222,
     223,   224,     0,   226,   227,   228,   229,     0,   230,   231,
     232,   233,   234,   235,     0,   236,     0,   238,   239,   240,
     241,   242,   243,   244,   245,     0,   246,     0,   247,     0,
       0,   250,     0,   252,   253,   254,   255,   256,   257,     0,
       0,   258,     0,   260,     0,     0,   262,   263,   264,     0,
       0,   265,   266,   267,   268,   269,   502,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,     0,   291,   292,   293,
     294,   295,     0,   296,   297,     0,   299,     0,   300,   301,
     302,   303,   304,   305,     0,   306,   307,     0,   582,   308,
     309,   310,     0,     0,   311,   312,     0,   314,     0,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,   327,   328,   329,   330,   331,   332,   333,   334,   335,
       0,   336,   337,   338,   339,   340,   341,     0,   342,   343,
     344,   345,   346,   347,   348,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
       0,   363,   364,     0,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,     0,
     381,   382,   383,   384,   385,     0,   386,   387,   388,   389,
     390,     0,   392,   393,   394,   395,     0,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   504,   408,
     409,   410,     0,   411,   412,     0,   413,     0,   415,   416,
     417,   418,   419,     0,   420,   421,     0,     0,   422,   423,
     424,   425,   426,     0,   427,   428,   429,   430,   431,   432,
     433,   434,     0,     0,   435,   436,   437,   438,   439,     0,
       0,   440,   441,   442,   443,   444,   445,   446,     0,   447,
       0,   449,   450,   451,   452,     0,     0,   453,     0,     0,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   500,     0,   581,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    93,    94,    95,
      96,    97,    98,    99,   100,     0,   101,   102,   103,     0,
       0,     0,     0,     0,     0,     0,   104,   105,     0,   106,
     107,   108,     0,   110,   111,   112,   113,   114,     0,   116,
     117,     0,   118,   119,   120,   121,   122,   123,     0,     0,
     124,   125,   126,   127,   128,     0,   129,   130,   131,   132,
     133,     0,     0,     0,   135,   136,   137,   138,   139,   140,
       0,   142,   143,   144,     0,   145,   146,   147,   148,   149,
     150,     0,     0,   152,   153,   154,     0,     0,     0,     0,
       0,     0,     0,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,     0,   166,     0,   167,   168,   169,   170,
     171,   172,     0,   173,   174,   175,   176,   177,     0,     0,
     178,   179,   180,   181,   182,     0,   183,   184,   185,     0,
     186,   187,   188,     0,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,     0,   200,     0,   201,   202,
     203,   204,     0,   205,     0,   206,     0,     0,     0,   209,
     210,   211,     0,   213,     0,   214,     0,   215,   216,   217,
       0,   218,   219,   220,   221,   222,   625,   224,     0,   226,
     227,   228,   229,     0,   230,   231,   232,   233,   234,   235,
       0,   236,     0,   238,   239,   240,   241,   242,   243,   244,
     245,     0,   246,     0,   247,     0,     0,   250,     0,   252,
     253,   254,   255,   256,   257,     0,     0,   258,     0,   260,
       0,     0,   262,   263,   264,     0,     0,   265,   266,   267,
     268,   269,   502,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,     0,   291,   292,   293,   294,   295,     0,   296,
     297,     0,   299,     0,   300,   301,   302,   303,   304,   305,
       0,   306,   307,     0,   582,   308,   309,   310,     0,     0,
     311,   312,     0,   314,     0,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,     0,   327,   328,   329,
     330,   331,   332,   333,   334,   335,     0,   336,   337,   338,
     339,   340,   341,     0,   342,   343,   344,   345,   346,   347,
     348,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,     0,   363,   364,     0,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,     0,   381,   382,   383,   384,
     385,     0,   386,   387,   388,   389,   390,     0,   392,   393,
     394,   395,     0,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   504,   408,   409,   410,     0,   411,
     412,     0,   413,     0,   415,   416,   417,   418,   419,     0,
     420,   421,     0,     0,   422,   423,   424,   425,   426,     0,
     427,   428,   429,   430,   431,   432,   433,   434,     0,     0,
     435,   436,   437,   438,   439,     0,     0,   440,   441,   442,
     443,   444,   445,   446,     0,   447,     0,   449,   450,   451,
     452,     0,     0,   453,     0,     0,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   745,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    93,    94,    95,    96,    97,    98,    99,
     100,     0,   101,   102,   103,     3,     4,     0,     0,     0,
       0,     0,   104,   105,     0,   106,   107,   108,     0,   110,
     111,   112,   746,   747,     0,   748,   749,     0,   118,   119,
     120,   121,   122,   123,     0,     0,   124,   125,   750,   751,
     128,     0,   129,   130,   131,   132,   752,     0,     0,     0,
     135,   136,   137,   138,   139,   140,     0,   142,   143,   144,
       0,   145,   146,   147,   148,   149,   150,     0,     0,   152,
     153,   154,     0,     0,     0,     0,     0,     0,     0,   156,
     157,   158,   159,   160,   161,   162,   753,   754,   165,     0,
     166,     0,   167,   168,   169,   170,   171,   172,     0,   173,
     174,   175,   176,   177,     0,     0,   178,   179,   180,   181,
     182,     0,   183,   184,   185,     0,   186,   187,   188,     0,
     189,   190,   191,   192,   755,   194,   195,   196,   197,   198,
     756,     0,   200,     0,   201,   202,   757,   204,     0,   205,
       0,   206,     0,     0,     0,   209,   210,   211,     0,   213,
       0,   214,     0,   758,   759,   217,     0,   218,   219,   220,
     221,   222,   223,   224,     0,   226,   227,   228,   229,     0,
     230,   231,   232,   233,   234,   235,     0,   236,     0,   760,
     239,   240,   241,   242,   243,   761,   762,     0,   763,     0,
     247,     0,     0,   250,     0,   252,   253,   254,   255,   256,
     257,     0,     0,   258,     0,   260,     0,     0,   262,   263,
     264,     0,     0,   265,   266,   267,   268,   269,   764,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   765,     0,   766,
     292,   293,   294,   767,     0,   296,   297,     0,   299,     0,
     768,   301,   769,   303,   304,   305,     0,   306,   307,     0,
       0,   308,   309,   310,     0,     0,   311,   770,     0,   314,
       0,   771,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,     0,   327,   328,   772,   330,   331,   773,   333,
     334,   335,     0,   336,   337,   338,   339,   340,   341,     0,
     342,   343,   344,   774,   346,   347,   348,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,     0,   363,   364,     0,   366,   367,   368,   775,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,     0,   381,   382,   383,   384,   385,     0,   386,   776,
     388,   389,   390,     0,   392,   393,   777,   395,     0,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     778,   408,   779,   410,     0,   411,   412,     0,   413,     0,
     415,   416,   417,   418,   419,     0,   780,   781,     0,     0,
     422,   423,   782,   425,   783,     0,   427,   428,   784,   430,
     431,   432,   433,   434,     0,     0,   435,   436,   437,   438,
     439,     0,     0,   440,   441,   442,   443,   444,  1128,   786,
       0,   447,     0,   449,   450,   451,   452,     0,     0,   453,
       0,     0,   454,   455,   456,   457,   458,   459,   787,   788,
     789,   790,   791,   792,   793,   794,   795,   796,   797,   471,
     472,   473,   474,   500,     0,   581,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    93,
      94,    95,    96,    97,    98,    99,   100,     0,   101,   102,
     103,     0,     0,     0,     0,     0,     0,     0,   104,   105,
       0,   106,   107,   108,     0,   110,   111,   112,   113,   114,
       0,   116,   117,     0,   118,   119,   120,   121,   122,   123,
       0,     0,   124,   125,   126,   127,   128,     0,   129,   130,
     131,   132,   133,     0,     0,     0,   135,   136,   137,   138,
     139,   140,     0,   142,   143,   144,     0,   145,   146,   147,
     148,   149,   150,     0,     0,   152,   153,   154,     0,     0,
       0,     0,     0,     0,     0,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,     0,   166,     0,   167,   168,
     169,   170,   171,   172,     0,   173,   174,   175,   176,   177,
       0,     0,   178,   179,   180,   181,   182,     0,   183,   184,
     185,     0,   186,   187,   188,     0,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,     0,   200,     0,
     201,   202,   203,   204,     0,   205,     0,   206,     0,     0,
       0,   209,   210,   211,     0,  1729,     0,   214,     0,   215,
     216,   217,     0,   218,   219,   220,   221,   222,   223,   224,
       0,   226,   227,   228,   229,     0,   230,   231,   232,   233,
     234,   235,     0,   236,     0,   238,   239,   240,   241,   242,
     243,   244,   245,     0,   246,     0,   247,     0,     0,   250,
       0,   252,   253,   254,   255,   256,   257,     0,     0,   258,
       0,   260,     0,     0,   262,   263,  1730,     0,     0,   265,
     266,   267,   268,   269,   502,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,     0,   291,   292,   293,   294,   295,
       0,   296,   297,     0,   299,     0,   300,   301,   302,   303,
     304,   305,     0,   306,   307,     0,     0,   308,   309,   310,
       0,     0,   311,   312,     0,   314,     0,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,     0,   327,
     328,   329,   330,   331,   332,   333,   334,   335,     0,   336,
     337,   338,   339,   340,   341,     0,   342,   343,   344,   345,
     346,   347,   348,   349,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,     0,   363,
     364,     0,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,     0,   381,   382,
     383,   384,   385,     0,   386,   387,   388,   389,   390,     0,
     392,   393,   394,   395,     0,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   504,   408,   409,   410,
       0,   411,   412,  1731,   413,     0,   415,  1732,   417,  1733,
     419,     0,   420,   421,     0,     0,   422,   423,   424,   425,
     426,     0,   427,   428,   429,   430,   431,   432,   433,   434,
       0,     0,   435,   436,  1734,   438,   439,     0,     0,   440,
     441,   442,   443,   444,   445,   446,     0,   447,     0,   449,
     450,   451,   452,     0,     0,   453,     0,     0,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   500,
    2673,     0,     0,     0,     0,  2674,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    93,    94,    95,    96,    97,
      98,    99,   100,     0,   101,   102,   103,     0,     0,     0,
       0,     0,     0,     0,   104,   105,     0,   106,   107,   108,
       0,   110,   111,   112,   113,   114,     0,   116,   117,     0,
     118,   119,   120,   121,   122,   123,     0,     0,   124,   125,
     126,   127,   128,     0,   129,   130,   131,   132,   133,     0,
       0,     0,   135,   136,   137,   138,   139,   140,     0,   142,
     143,   144,     0,   145,   146,   147,   148,   149,   150,     0,
       0,   152,   153,   154,     0,     0,     0,     0,     0,     0,
       0,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,     0,   166,     0,   167,   168,   169,   170,   171,   172,
       0,   173,   174,   175,   176,   177,     0,     0,   178,   179,
     180,   181,   182,     0,   183,   184,   185,     0,   186,   187,
     188,     0,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,     0,   200,     0,   201,   202,   203,   204,
       0,   205,     0,   206,     0,     0,     0,   209,   210,   211,
       0,   213,     0,   214,     0,   215,   216,   217,     0,   218,
     219,   220,   221,   222,   223,   224,     0,   226,   227,   228,
     229,     0,   230,   231,   232,   233,   234,   235,     0,   236,
       0,   238,   239,   240,   241,   242,   243,   244,   245,     0,
     246,     0,   247,     0,     0,   250,     0,   252,   253,   254,
     255,   256,   257,     0,     0,   258,     0,   260,     0,     0,
     262,   263,   264,     0,     0,   265,   266,   267,   268,   269,
     502,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
       0,   291,   292,   293,   294,   295,     0,   296,   297,     0,
     299,     0,   300,   301,   302,   303,   304,   305,     0,   306,
     307,     0,     0,   308,   309,   310,     0,     0,   311,   312,
       0,   314,     0,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,     0,   327,   328,   329,   330,   331,
     332,   333,   334,   335,     0,   336,   337,   338,   339,   340,
     341,     0,   342,   343,   344,   345,   346,   347,   348,   349,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,     0,   363,   364,     0,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,     0,   381,   382,   383,   384,   385,     0,
     386,   387,   388,   389,   390,     0,   392,   393,   394,   395,
       0,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   504,   408,   409,   410,     0,   411,   412,     0,
     413,     0,   415,   416,   417,   418,   419,     0,   420,   421,
       0,     0,   422,   423,   424,   425,   426,     0,   427,   428,
     429,   430,   431,   432,   433,   434,     0,     0,   435,   436,
     437,   438,   439,     0,     0,   440,   441,   442,   443,   444,
     445,   446,     0,   447,     0,   449,   450,   451,   452,     0,
       0,   453,     0,     0,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   500,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    93,    94,    95,    96,    97,    98,    99,   100,   501,
     101,   102,   103,     0,     0,     0,     0,     0,     0,     0,
     104,   105,     0,   106,   107,   108,     0,   110,   111,   112,
     113,   114,     0,   116,   117,     0,   118,   119,   120,   121,
     122,   123,     0,     0,   124,   125,   126,   127,   128,     0,
     129,   130,   131,   132,   133,     0,     0,     0,   135,   136,
     137,   138,   139,   140,     0,   142,   143,   144,     0,   145,
     146,   147,   148,   149,   150,     0,     0,   152,   153,   154,
       0,     0,     0,     0,     0,     0,     0,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,     0,   166,     0,
     167,   168,   169,   170,   171,   172,     0,   173,   174,   175,
     176,   177,     0,     0,   178,   179,   180,   181,   182,     0,
     183,   184,   185,     0,   186,   187,   188,     0,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,     0,
     200,     0,   201,   202,   203,   204,     0,   205,     0,   206,
       0,     0,     0,   209,   210,   211,     0,   213,     0,   214,
       0,   215,   216,   217,     0,   218,   219,   220,   221,   222,
     223,   224,     0,   226,   227,   228,   229,     0,   230,   231,
     232,   233,   234,   235,     0,   236,     0,   238,   239,   240,
     241,   242,   243,   244,   245,     0,   246,     0,   247,     0,
       0,   250,     0,   252,   253,   254,   255,   256,   257,     0,
       0,   258,     0,   260,     0,     0,   262,   263,   264,     0,
       0,   265,   266,   267,   268,   269,   502,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,     0,   291,   292,   293,
     294,   295,     0,   296,   297,     0,   299,     0,   300,   301,
     302,   303,   304,   305,     0,   306,   307,     0,     0,   308,
     309,   310,     0,     0,   311,   312,     0,   314,     0,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,   327,   328,   329,   330,   331,   332,   503,   334,   335,
       0,   336,   337,   338,   339,   340,   341,     0,   342,   343,
     344,   345,   346,   347,   348,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
       0,   363,   364,     0,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,     0,
     381,   382,   383,   384,   385,     0,   386,   387,   388,   389,
     390,     0,   392,   393,   394,   395,     0,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   504,   408,
     409,   410,     0,   411,   412,     0,   413,     0,   415,   416,
     417,   418,   419,     0,   420,   421,     0,     0,   422,   423,
     424,   425,   426,     0,   427,   428,   429,   430,   431,   432,
     433,   434,     0,     0,   435,   436,   437,   438,   439,     0,
       0,   440,   441,   442,   443,   444,   445,   446,     0,   447,
       0,   449,   450,   451,   452,     0,     0,   453,     0,     0,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   500,     0,   549,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    93,    94,    95,
      96,    97,    98,    99,   100,     0,   101,   102,   103,     0,
       0,     0,     0,     0,     0,     0,   104,   105,     0,   106,
     107,   108,     0,   110,   111,   112,   113,   114,     0,   116,
     117,     0,   118,   119,   120,   121,   122,   123,     0,     0,
     124,   125,   126,   127,   128,     0,   129,   130,   131,   132,
     133,     0,     0,     0,   135,   136,   137,   138,   139,   140,
       0,   142,   143,   144,     0,   145,   146,   147,   148,   149,
     150,     0,     0,   152,   153,   154,     0,     0,     0,     0,
       0,     0,     0,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,     0,   166,     0,   167,   168,   169,   170,
     171,   172,     0,   173,   174,   175,   176,   177,     0,     0,
     178,   179,   180,   181,   182,     0,   183,   184,   185,     0,
     186,   187,   188,     0,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,     0,   200,     0,   201,   202,
     203,   204,     0,   205,     0,   206,     0,     0,     0,   209,
     210,   211,     0,   213,     0,   214,     0,   215,   216,   217,
       0,   218,   219,   220,   221,   222,   223,   224,     0,   226,
     227,   228,   229,     0,   230,   231,   232,   233,   234,   235,
       0,   236,     0,   238,   239,   240,   241,   242,   243,   244,
     245,     0,   246,     0,   247,     0,     0,   250,     0,   252,
     253,   254,   255,   256,   257,     0,     0,   258,     0,   260,
       0,     0,   262,   263,   264,     0,     0,   265,   266,   267,
     268,   269,   502,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,     0,   291,   292,   293,   294,   295,     0,   296,
     297,     0,   299,     0,   300,   301,   302,   303,   304,   305,
       0,   306,   307,     0,     0,   308,   309,   310,     0,     0,
     311,   312,     0,   314,     0,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,     0,   327,   328,   329,
     330,   331,   332,   333,   334,   335,     0,   336,   337,   338,
     339,   340,   341,     0,   342,   343,   344,   345,   346,   347,
     348,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,     0,   363,   364,     0,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,     0,   381,   382,   383,   384,
     385,     0,   386,   387,   388,   389,   390,     0,   392,   393,
     394,   395,     0,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   504,   408,   409,   410,     0,   411,
     412,     0,   413,     0,   415,   416,   417,   418,   419,     0,
     420,   421,     0,     0,   422,   423,   424,   425,   426,     0,
     427,   428,   429,   430,   431,   432,   433,   434,     0,     0,
     435,   436,   437,   438,   439,     0,     0,   440,   441,   442,
     443,   444,   445,   446,     0,   447,     0,   449,   450,   451,
     452,     0,     0,   453,     0,     0,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   500,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    93,    94,    95,    96,    97,    98,    99,
     100,   556,   101,   102,   103,     0,     0,     0,     0,     0,
       0,     0,   104,   105,     0,   106,   107,   108,     0,   110,
     111,   112,   113,   114,     0,   116,   117,     0,   118,   119,
     120,   121,   122,   123,     0,     0,   124,   125,   126,   127,
     128,     0,   129,   130,   131,   132,   133,     0,     0,     0,
     135,   136,   137,   138,   139,   140,     0,   142,   143,   144,
       0,   145,   146,   147,   148,   149,   150,     0,     0,   152,
     153,   154,     0,     0,     0,     0,     0,     0,     0,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   165,     0,
     166,     0,   167,   168,   169,   170,   171,   172,     0,   173,
     174,   175,   176,   177,     0,     0,   178,   179,   180,   181,
     182,     0,   183,   184,   185,     0,   186,   187,   188,     0,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,     0,   200,     0,   201,   202,   203,   204,     0,   205,
       0,   206,     0,     0,     0,   209,   210,   211,     0,   213,
       0,   214,     0,   215,   216,   217,     0,   218,   219,   220,
     221,   222,   223,   224,     0,   226,   227,   228,   229,     0,
     230,   231,   232,   233,   234,   235,     0,   236,     0,   238,
     239,   240,   241,   242,   243,   244,   245,     0,   246,     0,
     247,     0,     0,   250,     0,   252,   253,   254,   255,   256,
     257,     0,     0,   258,     0,   260,     0,     0,   262,   263,
     264,     0,     0,   265,   266,   267,   268,   269,   502,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,     0,   291,
     292,   293,   294,   295,     0,   296,   297,     0,   299,     0,
     300,   301,   302,   303,   304,   305,     0,   306,   307,     0,
       0,   308,   309,   310,     0,     0,   311,   312,     0,   314,
       0,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,     0,   327,   328,   329,   330,   331,   332,   333,
     334,   335,     0,   336,   337,   338,   339,   340,   341,     0,
     342,   343,   344,   345,   346,   347,   348,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,     0,   363,   364,     0,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,     0,   381,   382,   383,   384,   385,     0,   386,   387,
     388,   389,   390,     0,   392,   393,   394,   395,     0,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     504,   408,   409,   410,     0,   411,   412,     0,   413,     0,
     415,   416,   417,   418,   419,     0,   557,   421,     0,     0,
     558,   423,   424,   425,   426,     0,   427,   428,   429,   430,
     431,   432,   433,   434,     0,     0,   435,   436,   437,   438,
     439,     0,     0,   440,   441,   442,   443,   444,   445,   446,
       0,   447,     0,   449,   450,   451,   452,     0,     0,   453,
       0,     0,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   500,     0,   581,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    93,
      94,    95,    96,    97,    98,    99,   100,     0,   101,   102,
     103,     0,     0,     0,     0,     0,     0,     0,   104,   105,
       0,   106,   107,   108,     0,   110,   111,   112,   113,   114,
       0,   116,   117,     0,   118,   119,   120,   121,   122,   123,
       0,     0,   124,   125,   126,   127,   128,     0,   129,   130,
     131,   132,   133,     0,     0,     0,   135,   136,   137,   138,
     139,   140,     0,   142,   143,   144,     0,   145,   146,   147,
     148,   149,   150,     0,     0,   152,   153,   154,     0,     0,
       0,     0,     0,     0,     0,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,     0,   166,     0,   167,   168,
     169,   170,   171,   172,     0,   173,   174,   175,   176,   177,
       0,     0,   178,   179,   180,   181,   182,     0,   183,   184,
     185,     0,   186,   187,   188,     0,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,     0,   200,     0,
     201,   202,   203,   204,     0,   205,     0,   206,     0,     0,
       0,   209,   210,   211,     0,   213,     0,   214,     0,   215,
     216,   217,     0,   218,   219,   220,   221,   222,   620,   224,
       0,   226,   227,   228,   229,     0,   230,   231,   232,   233,
     234,   235,     0,   236,     0,   238,   239,   240,   241,   242,
     243,   244,   245,     0,   246,     0,   247,     0,     0,   250,
       0,   252,   253,   254,   255,   256,   257,     0,     0,   258,
       0,   260,     0,     0,   262,   263,   264,     0,     0,   265,
     266,   267,   268,   269,   502,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,     0,   291,   292,   293,   294,   295,
       0,   296,   297,     0,   299,     0,   300,   301,   302,   303,
     304,   305,     0,   306,   307,     0,     0,   308,   309,   310,
       0,     0,   311,   312,     0,   314,     0,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,     0,   327,
     328,   329,   330,   331,   332,   333,   334,   335,     0,   336,
     337,   338,   339,   340,   341,     0,   342,   343,   344,   345,
     346,   347,   348,   349,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,     0,   363,
     364,     0,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,     0,   381,   382,
     383,   384,   385,     0,   386,   387,   388,   389,   390,     0,
     392,   393,   394,   395,     0,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   504,   408,   409,   410,
       0,   411,   412,     0,   413,     0,   415,   416,   417,   418,
     419,     0,   420,   421,     0,     0,   422,   423,   424,   425,
     426,     0,   427,   428,   429,   430,   431,   432,   433,   434,
       0,     0,   435,   436,   437,   438,   439,     0,     0,   440,
     441,   442,   443,   444,   445,   446,     0,   447,     0,   449,
     450,   451,   452,     0,     0,   453,     0,     0,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   500,
       0,   581,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    93,    94,    95,    96,    97,
      98,    99,   100,     0,   101,   102,   103,     0,     0,     0,
       0,     0,     0,     0,   104,   105,     0,   106,   107,   108,
       0,   110,   111,   112,   113,   114,     0,   116,   117,     0,
     118,   119,   120,   121,   122,   123,     0,     0,   124,   125,
     126,   127,   128,     0,   129,   130,   131,   132,   133,     0,
       0,     0,   135,   136,   137,   138,   139,   140,     0,   142,
     143,   144,     0,   145,   146,   147,   148,   149,   150,     0,
       0,   152,   153,   154,     0,     0,     0,     0,     0,     0,
       0,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,     0,   166,     0,   167,   168,   169,   170,   171,   172,
       0,   173,   174,   175,   176,   177,     0,     0,   178,   179,
     180,   181,   182,     0,   183,   184,   185,     0,   186,   187,
     188,     0,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,     0,   200,     0,   201,   202,   203,   204,
       0,   205,     0,   206,     0,     0,     0,   209,   210,   211,
       0,   213,     0,   214,     0,   215,   216,   217,     0,   218,
     219,   220,   221,   222,   623,   224,     0,   226,   227,   228,
     229,     0,   230,   231,   232,   233,   234,   235,     0,   236,
       0,   238,   239,   240,   241,   242,   243,   244,   245,     0,
     246,     0,   247,     0,     0,   250,     0,   252,   253,   254,
     255,   256,   257,     0,     0,   258,     0,   260,     0,     0,
     262,   263,   264,     0,     0,   265,   266,   267,   268,   269,
     502,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
       0,   291,   292,   293,   294,   295,     0,   296,   297,     0,
     299,     0,   300,   301,   302,   303,   304,   305,     0,   306,
     307,     0,     0,   308,   309,   310,     0,     0,   311,   312,
       0,   314,     0,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,     0,   327,   328,   329,   330,   331,
     332,   333,   334,   335,     0,   336,   337,   338,   339,   340,
     341,     0,   342,   343,   344,   345,   346,   347,   348,   349,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,     0,   363,   364,     0,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,     0,   381,   382,   383,   384,   385,     0,
     386,   387,   388,   389,   390,     0,   392,   393,   394,   395,
       0,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   504,   408,   409,   410,     0,   411,   412,     0,
     413,     0,   415,   416,   417,   418,   419,     0,   420,   421,
       0,     0,   422,   423,   424,   425,   426,     0,   427,   428,
     429,   430,   431,   432,   433,   434,     0,     0,   435,   436,
     437,   438,   439,     0,     0,   440,   441,   442,   443,   444,
     445,   446,     0,   447,     0,   449,   450,   451,   452,     0,
       0,   453,     0,     0,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   500,     0,   581,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    93,    94,    95,    96,    97,    98,    99,   100,     0,
     101,   102,   103,     0,     0,     0,     0,     0,     0,     0,
     104,   105,     0,   106,   107,   108,     0,   110,   111,   112,
     113,   114,     0,   116,   117,     0,   118,   119,   120,   121,
     122,   123,     0,     0,   124,   125,   126,   127,   128,     0,
     129,   130,   131,   132,   133,     0,     0,     0,   135,   136,
     137,   138,   139,   140,     0,   142,   143,   144,     0,   145,
     146,   147,   148,   149,   150,     0,     0,   152,   153,   154,
       0,     0,     0,     0,     0,     0,     0,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,     0,   166,     0,
     167,   168,   169,   170,   171,   172,     0,   173,   174,   175,
     176,   177,     0,     0,   178,   179,   180,   181,   182,     0,
     183,   184,   185,     0,   186,   187,   188,     0,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,     0,
     200,     0,   201,   202,   203,   204,     0,   205,     0,   206,
       0,     0,     0,   209,   210,   211,     0,   213,     0,   214,
       0,   215,   216,   217,     0,   218,   219,   220,   221,   222,
     627,   224,     0,   226,   227,   228,   229,     0,   230,   231,
     232,   233,   234,   235,     0,   236,     0,   238,   239,   240,
     241,   242,   243,   244,   245,     0,   246,     0,   247,     0,
       0,   250,     0,   252,   253,   254,   255,   256,   257,     0,
       0,   258,     0,   260,     0,     0,   262,   263,   264,     0,
       0,   265,   266,   267,   268,   269,   502,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,     0,   291,   292,   293,
     294,   295,     0,   296,   297,     0,   299,     0,   300,   301,
     302,   303,   304,   305,     0,   306,   307,     0,     0,   308,
     309,   310,     0,     0,   311,   312,     0,   314,     0,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,   327,   328,   329,   330,   331,   332,   333,   334,   335,
       0,   336,   337,   338,   339,   340,   341,     0,   342,   343,
     344,   345,   346,   347,   348,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
       0,   363,   364,     0,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,     0,
     381,   382,   383,   384,   385,     0,   386,   387,   388,   389,
     390,     0,   392,   393,   394,   395,     0,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   504,   408,
     409,   410,     0,   411,   412,     0,   413,     0,   415,   416,
     417,   418,   419,     0,   420,   421,     0,     0,   422,   423,
     424,   425,   426,     0,   427,   428,   429,   430,   431,   432,
     433,   434,     0,     0,   435,   436,   437,   438,   439,     0,
       0,   440,   441,   442,   443,   444,   445,   446,     0,   447,
       0,   449,   450,   451,   452,     0,     0,   453,     0,     0,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   500,     0,   581,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    93,    94,    95,
      96,    97,    98,    99,   100,     0,   101,   102,   103,     0,
       0,     0,     0,     0,     0,     0,   104,   105,     0,   106,
     107,   108,     0,   110,   111,   112,   113,   114,     0,   116,
     117,     0,   118,   119,   120,   121,   122,   123,     0,     0,
     124,   125,   126,   127,   128,     0,   129,   130,   131,   132,
     133,     0,     0,     0,   135,   136,   137,   138,   139,   140,
       0,   142,   143,   144,     0,   145,   146,   147,   148,   149,
     150,     0,     0,   152,   153,   154,     0,     0,     0,     0,
       0,     0,     0,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,     0,   166,     0,   167,   168,   169,   170,
     171,   172,     0,   173,   174,   175,   176,   177,     0,     0,
     178,   179,   180,   181,   182,     0,   183,   184,   185,     0,
     186,   187,   188,     0,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,     0,   200,     0,   201,   202,
     203,   204,     0,   205,     0,   206,     0,     0,     0,   209,
     210,   211,     0,   213,     0,   214,     0,   215,   216,   217,
       0,   218,   219,   220,   221,   222,   223,   224,     0,   226,
     227,   228,   229,     0,   230,   231,   232,   233,   234,   235,
       0,   236,     0,   238,   239,   240,   241,   242,   243,   244,
     245,     0,   246,     0,   247,     0,     0,   250,     0,   252,
     253,   254,   255,   256,   257,     0,     0,   258,     0,   260,
       0,     0,   262,   263,   264,     0,     0,   265,   266,   267,
     268,   269,   502,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,     0,   291,   292,   293,   294,   295,     0,   296,
     297,     0,   299,     0,   300,   301,   302,   303,   304,   305,
       0,   306,   307,     0,     0,   308,   309,   310,     0,     0,
     311,   312,     0,   314,     0,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,     0,   327,   328,   329,
     330,   331,   332,   333,   334,   335,     0,   336,   337,   338,
     339,   340,   341,     0,   342,   343,   344,   345,   346,   347,
     348,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,     0,   363,   364,     0,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,     0,   381,   382,   383,   384,
     385,     0,   386,   387,   388,   389,   390,     0,   392,   393,
     394,   395,     0,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   504,   408,   409,   410,     0,   411,
     412,     0,   413,     0,   415,   416,   417,   418,   419,     0,
     420,   421,     0,     0,   422,   423,   424,   425,   426,     0,
     427,   428,   429,   430,   431,   432,   433,   434,     0,     0,
     435,   436,   437,   438,   439,     0,     0,   440,   441,   442,
     443,   444,   445,   446,     0,   447,     0,   449,   450,   451,
     452,     0,     0,   453,     0,     0,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   500,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    93,    94,    95,    96,    97,    98,    99,
     100,   655,   101,   102,   103,     0,     0,     0,     0,     0,
       0,     0,   104,   105,     0,   106,   107,   108,     0,   110,
     111,   112,   113,   114,     0,   116,   117,     0,   118,   119,
     120,   121,   122,   123,     0,     0,   124,   125,   126,   127,
     128,     0,   129,   130,   131,   132,   133,     0,     0,     0,
     135,   136,   137,   138,   139,   140,     0,   142,   143,   144,
       0,   145,   146,   147,   148,   149,   150,     0,     0,   152,
     153,   154,     0,     0,     0,     0,     0,     0,     0,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   165,     0,
     166,     0,   167,   168,   169,   170,   171,   172,     0,   173,
     174,   175,   176,   177,     0,     0,   178,   179,   180,   181,
     182,     0,   183,   184,   185,     0,   186,   187,   188,     0,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,     0,   200,     0,   201,   202,   203,   204,     0,   205,
       0,   206,     0,     0,     0,   209,   210,   211,     0,   213,
       0,   214,     0,   215,   216,   217,     0,   218,   219,   220,
     221,   222,   223,   224,     0,   226,   227,   228,   229,     0,
     230,   231,   232,   233,   234,   235,     0,   236,     0,   238,
     239,   240,   241,   242,   243,   244,   245,     0,   246,     0,
     247,     0,     0,   250,     0,   252,   253,   254,   255,   256,
     257,     0,     0,   258,     0,   260,     0,     0,   262,   263,
     264,     0,     0,   265,   266,   267,   268,   269,   502,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,     0,   291,
     292,   293,   294,   295,     0,   296,   297,     0,   299,     0,
     300,   301,   302,   303,   304,   305,     0,   306,   307,     0,
       0,   308,   309,   310,     0,     0,   311,   312,     0,   314,
       0,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,     0,   327,   328,   329,   330,   331,   332,   333,
     334,   335,     0,   336,   337,   338,   339,   340,   341,     0,
     342,   343,   344,   345,   346,   347,   348,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,     0,   363,   364,     0,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,     0,   381,   382,   383,   384,   385,     0,   386,   387,
     388,   389,   390,     0,   392,   393,   394,   395,     0,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     504,   408,   409,   410,     0,   411,   412,     0,   413,     0,
     415,   416,   417,   418,   419,     0,   420,   421,     0,     0,
     422,   423,   424,   425,   426,     0,   427,   428,   429,   430,
     431,   432,   433,   434,     0,     0,   435,   436,   437,   438,
     439,     0,     0,   440,   441,   442,   443,   444,   445,   446,
       0,   447,     0,   449,   450,   451,   452,     0,     0,   453,
       0,     0,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   500,     0,   581,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    93,
      94,    95,    96,    97,    98,    99,   100,     0,   101,   102,
     103,     0,     0,     0,     0,     0,     0,     0,   104,   105,
       0,   106,   107,   108,     0,   110,   111,   112,   113,   114,
       0,   116,   117,     0,   118,   119,   120,   121,   122,   123,
       0,     0,   124,   125,   126,   127,   128,     0,   129,   130,
     131,   132,   133,     0,     0,     0,   135,   136,   137,   138,
     139,   140,     0,   142,   143,   144,     0,   145,   146,   147,
     148,   149,   150,     0,     0,   152,   153,   154,     0,     0,
       0,     0,     0,     0,     0,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,     0,   166,     0,   167,   168,
     169,   170,   171,   172,     0,   173,   174,   175,   176,   177,
       0,     0,   178,   179,   180,   181,   182,     0,   183,   184,
     185,     0,   186,   187,   188,     0,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,     0,   200,     0,
     201,   202,   203,   204,     0,   205,     0,   206,     0,     0,
       0,   209,   210,   211,     0,   213,     0,   214,     0,   215,
     216,   217,     0,   218,   219,   220,   221,   222,  1150,   224,
       0,   226,   227,   228,   229,     0,   230,   231,   232,   233,
     234,   235,     0,   236,     0,   238,   239,   240,   241,   242,
     243,   244,   245,     0,   246,     0,   247,     0,     0,   250,
       0,   252,   253,   254,   255,   256,   257,     0,     0,   258,
       0,   260,     0,     0,   262,   263,   264,     0,     0,   265,
     266,   267,   268,   269,   502,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,     0,   291,   292,   293,   294,   295,
       0,   296,   297,     0,   299,     0,   300,   301,   302,   303,
     304,   305,     0,   306,   307,     0,     0,   308,   309,   310,
       0,     0,   311,   312,     0,   314,     0,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,     0,   327,
     328,   329,   330,   331,   332,   333,   334,   335,     0,   336,
     337,   338,   339,   340,   341,     0,   342,   343,   344,   345,
     346,   347,   348,   349,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,     0,   363,
     364,     0,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,     0,   381,   382,
     383,   384,   385,     0,   386,   387,   388,   389,   390,     0,
     392,   393,   394,   395,     0,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   504,   408,   409,   410,
       0,   411,   412,     0,   413,     0,   415,   416,   417,   418,
     419,     0,   420,   421,     0,     0,   422,   423,   424,   425,
     426,     0,   427,   428,   429,   430,   431,   432,   433,   434,
       0,     0,   435,   436,   437,   438,   439,     0,     0,   440,
     441,   442,   443,   444,   445,   446,     0,   447,     0,   449,
     450,   451,   452,     0,     0,   453,     0,     0,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   500,
       0,   581,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    93,    94,    95,    96,    97,
      98,    99,   100,     0,   101,   102,   103,     0,     0,     0,
       0,     0,     0,     0,   104,   105,     0,   106,   107,   108,
       0,   110,   111,   112,   113,   114,     0,   116,   117,     0,
     118,   119,   120,   121,   122,   123,     0,     0,   124,   125,
     126,   127,   128,     0,   129,   130,   131,   132,   133,     0,
       0,     0,   135,   136,   137,   138,   139,   140,     0,   142,
     143,   144,     0,   145,   146,   147,   148,   149,   150,     0,
       0,   152,   153,   154,     0,     0,     0,     0,     0,     0,
       0,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,     0,   166,     0,   167,   168,   169,   170,   171,   172,
       0,   173,   174,   175,   176,   177,     0,     0,   178,   179,
     180,   181,   182,     0,   183,   184,   185,     0,   186,   187,
     188,     0,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,     0,   200,     0,   201,   202,   203,   204,
       0,   205,     0,   206,     0,     0,     0,   209,   210,   211,
       0,   213,     0,   214,     0,   215,   216,   217,     0,   218,
     219,   220,   221,   222,  1152,   224,     0,   226,   227,   228,
     229,     0,   230,   231,   232,   233,   234,   235,     0,   236,
       0,   238,   239,   240,   241,   242,   243,   244,   245,     0,
     246,     0,   247,     0,     0,   250,     0,   252,   253,   254,
     255,   256,   257,     0,     0,   258,     0,   260,     0,     0,
     262,   263,   264,     0,     0,   265,   266,   267,   268,   269,
     502,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
       0,   291,   292,   293,   294,   295,     0,   296,   297,     0,
     299,     0,   300,   301,   302,   303,   304,   305,     0,   306,
     307,     0,     0,   308,   309,   310,     0,     0,   311,   312,
       0,   314,     0,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,     0,   327,   328,   329,   330,   331,
     332,   333,   334,   335,     0,   336,   337,   338,   339,   340,
     341,     0,   342,   343,   344,   345,   346,   347,   348,   349,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,     0,   363,   364,     0,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,     0,   381,   382,   383,   384,   385,     0,
     386,   387,   388,   389,   390,     0,   392,   393,   394,   395,
       0,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   504,   408,   409,   410,     0,   411,   412,     0,
     413,     0,   415,   416,   417,   418,   419,     0,   420,   421,
       0,     0,   422,   423,   424,   425,   426,     0,   427,   428,
     429,   430,   431,   432,   433,   434,     0,     0,   435,   436,
     437,   438,   439,     0,     0,   440,   441,   442,   443,   444,
     445,   446,     0,   447,     0,   449,   450,   451,   452,     0,
       0,   453,     0,     0,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   500,     0,   581,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    93,    94,    95,    96,    97,    98,    99,   100,     0,
     101,   102,   103,     0,     0,     0,     0,     0,     0,     0,
     104,   105,     0,   106,   107,   108,     0,   110,   111,   112,
     113,   114,     0,   116,   117,     0,   118,   119,   120,   121,
     122,   123,     0,     0,   124,   125,   126,   127,   128,     0,
     129,   130,   131,   132,   133,     0,     0,     0,   135,   136,
     137,   138,   139,   140,     0,   142,   143,   144,     0,   145,
     146,   147,   148,   149,   150,     0,     0,   152,   153,   154,
       0,     0,     0,     0,     0,     0,     0,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,     0,   166,     0,
     167,   168,   169,   170,   171,   172,     0,   173,   174,   175,
     176,   177,     0,     0,   178,   179,   180,   181,   182,     0,
     183,   184,   185,     0,   186,   187,   188,     0,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,     0,
     200,     0,   201,   202,   203,   204,     0,   205,     0,   206,
       0,     0,     0,   209,   210,   211,     0,   213,     0,   214,
       0,   215,   216,   217,     0,   218,   219,   220,   221,   222,
    1563,   224,     0,   226,   227,   228,   229,     0,   230,   231,
     232,   233,   234,   235,     0,   236,     0,   238,   239,   240,
     241,   242,   243,   244,   245,     0,   246,     0,   247,     0,
       0,   250,     0,   252,   253,   254,   255,   256,   257,     0,
       0,   258,     0,   260,     0,     0,   262,   263,   264,     0,
       0,   265,   266,   267,   268,   269,   502,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,     0,   291,   292,   293,
     294,   295,     0,   296,   297,     0,   299,     0,   300,   301,
     302,   303,   304,   305,     0,   306,   307,     0,     0,   308,
     309,   310,     0,     0,   311,   312,     0,   314,     0,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,   327,   328,   329,   330,   331,   332,   333,   334,   335,
       0,   336,   337,   338,   339,   340,   341,     0,   342,   343,
     344,   345,   346,   347,   348,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
       0,   363,   364,     0,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,     0,
     381,   382,   383,   384,   385,     0,   386,   387,   388,   389,
     390,     0,   392,   393,   394,   395,     0,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   504,   408,
     409,   410,     0,   411,   412,     0,   413,     0,   415,   416,
     417,   418,   419,     0,   420,   421,     0,     0,   422,   423,
     424,   425,   426,     0,   427,   428,   429,   430,   431,   432,
     433,   434,     0,     0,   435,   436,   437,   438,   439,     0,
       0,   440,   441,   442,   443,   444,   445,   446,     0,   447,
       0,   449,   450,   451,   452,     0,     0,   453,     0,     0,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   500,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    93,    94,    95,
      96,    97,    98,    99,   100,     0,   101,   102,   103,     0,
       0,     0,     0,     0,  2317,     0,   104,   105,     0,   106,
     107,   108,     0,   110,   111,   112,   113,   114,     0,   116,
     117,     0,   118,   119,   120,   121,   122,   123,     0,     0,
     124,   125,   126,   127,   128,     0,   129,   130,   131,   132,
     133,     0,     0,     0,   135,   136,   137,   138,   139,   140,
       0,   142,   143,   144,     0,   145,   146,   147,   148,   149,
     150,     0,     0,   152,   153,   154,     0,     0,     0,     0,
       0,     0,     0,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,     0,   166,     0,   167,   168,   169,   170,
     171,   172,     0,   173,   174,   175,   176,   177,     0,     0,
     178,   179,   180,   181,   182,     0,   183,   184,   185,     0,
     186,   187,   188,     0,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,     0,   200,     0,   201,   202,
     203,   204,     0,   205,     0,   206,     0,     0,     0,   209,
     210,   211,     0,   213,     0,   214,     0,   215,   216,   217,
       0,   218,   219,   220,   221,   222,   223,   224,     0,   226,
     227,   228,   229,     0,   230,   231,   232,   233,   234,   235,
       0,   236,     0,   238,   239,   240,   241,   242,   243,   244,
     245,     0,   246,     0,   247,     0,     0,   250,     0,   252,
     253,   254,   255,   256,   257,     0,     0,   258,     0,   260,
       0,     0,   262,   263,   264,     0,     0,   265,   266,   267,
     268,   269,   502,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,     0,   291,   292,   293,   294,   295,     0,   296,
     297,     0,   299,     0,   300,   301,   302,   303,   304,   305,
       0,   306,   307,     0,     0,   308,   309,   310,     0,     0,
     311,   312,     0,   314,     0,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,     0,   327,   328,   329,
     330,   331,   332,   333,   334,   335,     0,   336,   337,   338,
     339,   340,   341,     0,   342,   343,   344,   345,   346,   347,
     348,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,     0,   363,   364,     0,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,     0,   381,   382,   383,   384,
     385,     0,   386,   387,   388,   389,   390,     0,   392,   393,
     394,   395,     0,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   504,   408,   409,   410,     0,   411,
     412,     0,   413,     0,   415,   416,   417,   418,   419,     0,
     420,   421,     0,     0,   422,   423,   424,   425,   426,     0,
     427,   428,   429,   430,   431,   432,   433,   434,     0,     0,
     435,   436,   437,   438,   439,     0,     0,   440,   441,   442,
     443,   444,   445,   446,     0,   447,     0,   449,   450,   451,
     452,     0,     0,   453,     0,     0,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   500,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    93,    94,    95,    96,    97,    98,    99,
     100,     0,   101,   102,   103,     0,     0,     0,     0,     0,
    2331,     0,   104,   105,     0,   106,   107,   108,     0,   110,
     111,   112,   113,   114,     0,   116,   117,     0,   118,   119,
     120,   121,   122,   123,     0,     0,   124,   125,   126,   127,
     128,     0,   129,   130,   131,   132,   133,     0,     0,     0,
     135,   136,   137,   138,   139,   140,     0,   142,   143,   144,
       0,   145,   146,   147,   148,   149,   150,     0,     0,   152,
     153,   154,     0,     0,     0,     0,     0,     0,     0,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   165,     0,
     166,     0,   167,   168,   169,   170,   171,   172,     0,   173,
     174,   175,   176,   177,     0,     0,   178,   179,   180,   181,
     182,     0,   183,   184,   185,     0,   186,   187,   188,     0,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,     0,   200,     0,   201,   202,   203,   204,     0,   205,
       0,   206,     0,     0,     0,   209,   210,   211,     0,   213,
       0,   214,     0,   215,   216,   217,     0,   218,   219,   220,
     221,   222,   223,   224,     0,   226,   227,   228,   229,     0,
     230,   231,   232,   233,   234,   235,     0,   236,     0,   238,
     239,   240,   241,   242,   243,   244,   245,     0,   246,     0,
     247,     0,     0,   250,     0,   252,   253,   254,   255,   256,
     257,     0,     0,   258,     0,   260,     0,     0,   262,   263,
     264,     0,     0,   265,   266,   267,   268,   269,   502,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,     0,   291,
     292,   293,   294,   295,     0,   296,   297,     0,   299,     0,
     300,   301,   302,   303,   304,   305,     0,   306,   307,     0,
       0,   308,   309,   310,     0,     0,   311,   312,     0,   314,
       0,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,     0,   327,   328,   329,   330,   331,   332,   333,
     334,   335,     0,   336,   337,   338,   339,   340,   341,     0,
     342,   343,   344,   345,   346,   347,   348,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,     0,   363,   364,     0,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,     0,   381,   382,   383,   384,   385,     0,   386,   387,
     388,   389,   390,     0,   392,   393,   394,   395,     0,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     504,   408,   409,   410,     0,   411,   412,     0,   413,     0,
     415,   416,   417,   418,   419,     0,   420,   421,     0,     0,
     422,   423,   424,   425,   426,     0,   427,   428,   429,   430,
     431,   432,   433,   434,     0,     0,   435,   436,   437,   438,
     439,     0,     0,   440,   441,   442,   443,   444,   445,   446,
       0,   447,     0,   449,   450,   451,   452,     0,     0,   453,
       0,     0,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   500,     0,   581,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    93,
      94,    95,    96,    97,    98,    99,   100,     0,   101,   102,
     103,     0,     0,     0,     0,     0,     0,     0,   104,   105,
       0,   106,   107,   108,     0,   110,   111,   112,   113,   114,
       0,   116,   117,     0,   118,   119,   120,   121,   122,   123,
       0,     0,   124,   125,   126,   127,   128,     0,   129,   130,
     131,   132,   133,     0,     0,     0,   135,   136,   137,   138,
     139,   140,     0,   142,   143,   144,     0,   145,   146,   147,
     148,   149,   150,     0,     0,   152,   153,   154,     0,     0,
       0,     0,     0,     0,     0,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,     0,   166,     0,   167,   168,
     169,   170,   171,   172,     0,   173,   174,   175,   176,   177,
       0,     0,   178,   179,   180,   181,   182,     0,   183,   184,
     185,     0,   186,   187,   188,     0,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,     0,   200,     0,
     201,   202,   203,   204,     0,   205,     0,   206,     0,     0,
       0,   209,   210,   211,     0,   213,     0,   214,     0,   215,
     216,   217,     0,   218,   219,   220,   221,   222,  2467,   224,
       0,   226,   227,   228,   229,     0,   230,   231,   232,   233,
     234,   235,     0,   236,     0,   238,   239,   240,   241,   242,
     243,   244,   245,     0,   246,     0,   247,     0,     0,   250,
       0,   252,   253,   254,   255,   256,   257,     0,     0,   258,
       0,   260,     0,     0,   262,   263,   264,     0,     0,   265,
     266,   267,   268,   269,   502,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,     0,   291,   292,   293,   294,   295,
       0,   296,   297,     0,   299,     0,   300,   301,   302,   303,
     304,   305,     0,   306,   307,     0,     0,   308,   309,   310,
       0,     0,   311,   312,     0,   314,     0,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,     0,   327,
     328,   329,   330,   331,   332,   333,   334,   335,     0,   336,
     337,   338,   339,   340,   341,     0,   342,   343,   344,   345,
     346,   347,   348,   349,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,     0,   363,
     364,     0,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,     0,   381,   382,
     383,   384,   385,     0,   386,   387,   388,   389,   390,     0,
     392,   393,   394,   395,     0,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   504,   408,   409,   410,
       0,   411,   412,     0,   413,     0,   415,   416,   417,   418,
     419,     0,   420,   421,     0,     0,   422,   423,   424,   425,
     426,     0,   427,   428,   429,   430,   431,   432,   433,   434,
       0,     0,   435,   436,   437,   438,   439,     0,     0,   440,
     441,   442,   443,   444,   445,   446,     0,   447,     0,   449,
     450,   451,   452,     0,     0,   453,     0,     0,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   500,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    93,    94,    95,    96,    97,
      98,    99,   100,     0,   101,   102,   103,     0,     0,     0,
       0,     0,     0,     0,   104,   105,     0,   106,   107,   108,
       0,   110,   111,   112,   113,   114,     0,   116,   117,     0,
     118,   119,   120,   121,   122,   123,     0,     0,   124,   125,
     126,   127,   128,     0,   129,   130,   131,   132,   133,     0,
       0,     0,   135,   136,   137,   138,   139,   140,     0,   142,
     143,   144,     0,   145,   146,   147,   148,   149,   150,     0,
       0,   152,   153,   154,     0,     0,     0,     0,     0,     0,
       0,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,     0,   166,     0,   167,   168,   169,   170,   171,   172,
       0,   173,   174,   175,   176,   177,     0,     0,   178,   179,
     180,   181,   182,     0,   183,   184,   185,     0,   186,   187,
     188,     0,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,     0,   200,     0,   201,   202,   203,   204,
       0,   205,     0,   206,     0,     0,     0,   209,   210,   211,
       0,   213,     0,   214,     0,   215,   216,   217,     0,   218,
     219,   220,   221,   222,   223,   224,     0,   226,   227,   228,
     229,     0,   230,   231,   232,   233,   234,   235,     0,   236,
       0,   238,   239,   240,   241,   242,   243,   244,   245,     0,
     246,     0,   247,     0,     0,   250,     0,   252,   253,   254,
     255,   256,   257,     0,     0,   258,     0,   260,     0,     0,
     262,   263,   264,     0,     0,   265,   266,   267,   268,   269,
     502,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
       0,   291,   292,   293,   294,   295,     0,   296,   297,     0,
     299,     0,   300,   301,   302,   303,   304,   305,     0,   306,
     307,     0,     0,   308,   309,   310,     0,     0,   311,   312,
       0,   314,     0,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,     0,   327,   328,   329,   330,   331,
     332,   333,   334,   335,     0,   336,   337,   338,   339,   340,
     341,     0,   342,   343,   344,   345,   346,   347,   348,   349,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,     0,   363,   364,     0,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,     0,   381,   382,   383,   384,   385,     0,
     386,   387,   388,   389,   390,     0,   392,   393,   394,   395,
       0,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   504,   408,   409,   410,     0,   411,   412,     0,
     413,     0,   415,   416,   417,   418,   419,     0,   420,   421,
       0,     0,   422,   423,   424,   425,   426,     0,   427,   428,
     429,   430,   431,   432,   433,   434,     0,     0,   435,   436,
     437,   438,   439,     0,     0,   440,   441,   442,   443,   444,
     445,   446,     0,   447,     0,   449,   450,   451,   452,     0,
       0,   453,     0,     0,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   500,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    93,    94,    95,    96,    97,    98,    99,   100,     0,
     101,   102,   103,     0,     0,     0,     0,     0,     0,     0,
     104,   105,     0,   106,   107,   108,     0,   110,   111,   112,
     113,   114,     0,   116,   117,     0,   118,   119,   120,   121,
     122,   123,     0,     0,   124,   125,   126,   127,   128,     0,
     129,   130,   131,   132,   133,     0,     0,     0,   135,   136,
     137,   138,   139,   140,     0,   142,   143,   144,     0,   145,
     146,   147,   148,   149,   150,     0,     0,   152,   153,   154,
       0,     0,     0,     0,     0,     0,     0,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,     0,   166,     0,
     167,   168,   169,   170,   171,   172,     0,   173,   174,   175,
     176,   177,     0,     0,   178,   179,   180,   181,   182,     0,
     183,   184,   185,     0,   186,   187,   188,     0,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,     0,
     200,     0,   201,   202,   203,   204,     0,   205,     0,   206,
       0,     0,     0,   209,   210,   211,     0,   568,     0,   214,
       0,   215,   216,   217,     0,   218,   219,   220,   221,   222,
     223,   224,     0,   226,   227,   228,   229,     0,   230,   231,
     232,   233,   234,   235,     0,   236,     0,   238,   239,   240,
     241,   242,   243,   244,   245,     0,   246,     0,   247,     0,
       0,   250,     0,   252,   253,   254,   255,   256,   257,     0,
       0,   258,     0,   260,     0,     0,   262,   263,   569,     0,
       0,   265,   266,   267,   268,   269,   502,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,     0,   291,   292,   293,
     294,   295,     0,   296,   297,     0,   299,     0,   300,   301,
     302,   303,   304,   305,     0,   306,   307,     0,     0,   308,
     309,   310,     0,     0,   311,   312,     0,   314,     0,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,   327,   328,   329,   330,   331,   332,   333,   334,   335,
       0,   336,   337,   338,   339,   340,   341,     0,   342,   343,
     344,   345,   346,   347,   348,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
       0,   363,   364,     0,   366,   367,   368,   369,   370,   371,
     372,   373,   570,   375,   376,   377,   378,   379,   380,     0,
     381,   382,   383,   384,   571,     0,   386,   387,   388,   389,
     390,     0,   392,   393,   394,   395,     0,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   504,   408,
     409,   410,     0,   411,   412,     0,   413,     0,   415,   416,
     417,   418,   419,     0,   572,   421,     0,     0,   422,   423,
     424,   425,   426,     0,   427,   428,   429,   430,   431,   432,
     433,   434,     0,     0,   435,   436,   437,   438,   439,     0,
       0,   440,   441,   442,   443,   444,   445,   446,     0,   447,
       0,   449,   450,   451,   452,     0,     0,   453,     0,     0,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   500,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    93,    94,    95,
      96,    97,    98,    99,   100,     0,   101,   102,   103,     0,
       0,     0,     0,     0,     0,     0,   104,   105,     0,   106,
     107,   108,     0,   110,   111,   112,   113,   114,     0,   116,
     117,     0,   118,   119,   120,   121,   122,   123,     0,     0,
     124,   125,   126,   127,   128,     0,   129,   130,   131,   132,
     133,     0,     0,     0,   135,   136,   137,   138,   139,   140,
       0,   142,   143,   144,     0,   145,   146,   147,   148,   149,
     150,     0,     0,   152,   153,   154,     0,     0,     0,     0,
       0,     0,     0,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,     0,   166,     0,   167,   168,   169,   170,
     171,   172,     0,   173,   174,   175,   176,   177,     0,     0,
     178,   179,   180,   181,   182,     0,   183,   184,   185,     0,
     186,   187,   188,     0,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,     0,   200,     0,   201,   202,
     203,   204,     0,   205,     0,   206,     0,     0,     0,   209,
     210,   211,     0,   213,     0,   214,     0,   215,   216,   217,
       0,   218,   219,   220,   221,   222,   223,   224,     0,   226,
     227,   228,   229,     0,   230,   231,   232,   233,   234,   235,
       0,   236,     0,   238,   239,   240,   241,   242,   243,   244,
     245,     0,   246,     0,   247,     0,     0,   250,     0,   252,
     253,   254,   255,   256,   257,     0,     0,   258,     0,   260,
       0,     0,   262,   263,   264,     0,     0,   265,   266,   267,
     268,   269,   502,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,     0,   291,   292,   293,   294,   295,     0,   296,
     297,     0,   299,     0,   300,   301,   302,   303,   304,   305,
       0,   306,   307,     0,     0,   308,   309,   310,     0,     0,
     311,   312,     0,   314,     0,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,     0,   327,   328,   329,
     330,   331,   332,   333,   334,   335,     0,   336,   337,   338,
     339,   340,   341,     0,   342,   343,   344,   345,   346,   347,
     591,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,     0,   363,   364,     0,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,     0,   381,   382,   383,   384,
     385,     0,   386,   387,   388,   389,   390,     0,   392,   393,
     394,   395,     0,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   504,   408,   409,   410,     0,   411,
     412,     0,   413,     0,   415,   416,   417,   418,   419,     0,
     420,   421,     0,     0,   422,   423,   424,   425,   426,     0,
     427,   428,   429,   430,   431,   432,   433,   434,     0,     0,
     435,   436,   437,   438,   439,     0,     0,   440,   441,   442,
     443,   444,   445,   446,     0,   447,     0,   449,   450,   451,
     452,     0,     0,   453,     0,     0,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   500,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    93,    94,    95,    96,    97,    98,    99,
     100,     0,   101,   102,   103,     0,     0,     0,     0,     0,
       0,     0,   104,   105,     0,   106,   107,   108,     0,   110,
     111,   112,   113,   114,     0,   116,   117,     0,   118,   119,
     120,   121,   122,   123,     0,     0,   124,   125,   126,   127,
     128,     0,   129,   130,   131,   132,   133,     0,     0,     0,
     135,   136,   137,   138,   139,   140,     0,   142,   143,   144,
       0,   145,   146,   147,   148,   149,   150,     0,     0,   152,
     153,   154,     0,     0,     0,     0,     0,     0,     0,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   165,     0,
     166,     0,   167,   168,   169,   170,   171,   172,     0,   173,
     174,   175,   176,   177,     0,     0,   178,   179,   180,   181,
     182,     0,   183,   184,   185,     0,   186,   187,   188,     0,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,     0,   200,     0,   201,   202,   203,   204,     0,   205,
       0,   206,     0,     0,     0,   209,   210,   211,     0,   213,
       0,   214,     0,   215,   216,   217,     0,   218,   219,   220,
     221,   222,   645,   224,     0,   226,   227,   228,   229,     0,
     230,   231,   232,   233,   234,   235,     0,   236,     0,   238,
     239,   240,   241,   242,   243,   244,   245,     0,   246,     0,
     247,     0,     0,   250,     0,   252,   253,   254,   255,   256,
     257,     0,     0,   258,     0,   260,     0,     0,   262,   263,
     264,     0,     0,   265,   266,   267,   268,   269,   502,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,     0,   291,
     292,   293,   294,   295,     0,   296,   297,     0,   299,     0,
     300,   301,   302,   303,   304,   305,     0,   306,   307,     0,
       0,   308,   309,   310,     0,     0,   311,   312,     0,   314,
       0,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,     0,   327,   328,   329,   330,   331,   332,   333,
     334,   335,     0,   336,   337,   338,   339,   340,   341,     0,
     342,   343,   344,   345,   346,   347,   348,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,     0,   363,   364,     0,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,     0,   381,   382,   383,   384,   385,     0,   386,   387,
     388,   389,   390,     0,   392,   393,   394,   395,     0,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     504,   408,   409,   410,     0,   411,   412,     0,   413,     0,
     415,   416,   417,   418,   419,     0,   420,   421,     0,     0,
     422,   423,   424,   425,   426,     0,   427,   428,   429,   430,
     431,   432,   433,   434,     0,     0,   435,   436,   437,   438,
     439,     0,     0,   440,   441,   442,   443,   444,   445,   446,
       0,   447,     0,   449,   450,   451,   452,     0,     0,   453,
       0,     0,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   500,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    93,
      94,    95,    96,    97,    98,    99,   100,     0,   101,   102,
     103,     0,     0,     0,     0,     0,     0,     0,   104,   105,
       0,   106,   107,   108,     0,   110,   111,   112,   113,   114,
       0,   116,   117,     0,   118,   119,   120,   121,   122,   123,
       0,     0,   124,   125,   126,   127,   128,     0,   129,   130,
     131,   132,   133,     0,     0,     0,   135,   136,   137,   138,
     139,   140,     0,   142,   143,   144,     0,   145,   146,   147,
     148,   149,   150,     0,     0,   152,   153,   154,     0,     0,
       0,     0,     0,     0,     0,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,     0,   166,     0,   167,   168,
     169,   170,   171,   172,     0,   173,   174,   175,   176,   177,
       0,     0,   178,   179,   180,   181,   182,     0,   183,   184,
     185,     0,   186,   187,   188,     0,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,     0,   200,     0,
     201,   202,   203,   204,     0,   205,     0,   206,     0,     0,
       0,   209,   210,   211,     0,   213,     0,   214,     0,   215,
     216,   217,     0,   218,   219,   220,   221,   222,   732,   224,
       0,   226,   227,   228,   229,     0,   230,   231,   232,   233,
     234,   235,     0,   236,     0,   238,   239,   240,   241,   242,
     243,   244,   245,     0,   246,     0,   247,     0,     0,   250,
       0,   252,   253,   254,   255,   256,   257,     0,     0,   258,
       0,   260,     0,     0,   262,   263,   264,     0,     0,   265,
     266,   267,   268,   269,   502,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,     0,   291,   292,   293,   294,   295,
       0,   296,   297,     0,   299,     0,   300,   301,   302,   303,
     304,   305,     0,   306,   307,     0,     0,   308,   309,   310,
       0,     0,   311,   312,     0,   314,     0,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,     0,   327,
     328,   329,   330,   331,   332,   333,   334,   335,     0,   336,
     337,   338,   339,   340,   341,     0,   342,   343,   344,   345,
     346,   347,   348,   349,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,     0,   363,
     364,     0,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,     0,   381,   382,
     383,   384,   385,     0,   386,   387,   388,   389,   390,     0,
     392,   393,   394,   395,     0,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   504,   408,   409,   410,
       0,   411,   412,     0,   413,     0,   415,   416,   417,   418,
     419,     0,   420,   421,     0,     0,   422,   423,   424,   425,
     426,     0,   427,   428,   429,   430,   431,   432,   433,   434,
       0,     0,   435,   436,   437,   438,   439,     0,     0,   440,
     441,   442,   443,   444,   445,   446,     0,   447,     0,   449,
     450,   451,   452,     0,     0,   453,     0,     0,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   500,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    93,    94,    95,    96,    97,
      98,    99,   100,     0,   101,   102,   103,     0,     0,     0,
       0,     0,     0,     0,   104,   105,     0,   106,   107,   108,
       0,   110,   111,   112,   113,   114,     0,   116,   117,     0,
     118,   119,   120,   121,   122,   123,     0,     0,   124,   125,
     126,   127,   128,     0,   129,   130,   131,   132,   133,     0,
       0,     0,   135,   136,   137,   138,   139,   140,     0,   142,
     143,   144,     0,   145,   146,   147,   148,   149,   150,     0,
       0,   152,   153,   154,     0,     0,     0,     0,     0,     0,
       0,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,     0,   166,     0,   167,   168,   169,   170,   171,   172,
       0,   173,   174,   175,   176,   177,     0,     0,   178,   179,
     180,   181,   182,     0,   183,   184,   185,     0,   186,   187,
     188,     0,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,     0,   200,     0,   201,   202,   203,   204,
       0,   205,     0,   206,     0,     0,     0,   209,   210,   211,
       0,   213,     0,   214,     0,   215,   216,   217,     0,   218,
     219,   220,   221,   222,   735,   224,     0,   226,   227,   228,
     229,     0,   230,   231,   232,   233,   234,   235,     0,   236,
       0,   238,   239,   240,   241,   242,   243,   244,   245,     0,
     246,     0,   247,     0,     0,   250,     0,   252,   253,   254,
     255,   256,   257,     0,     0,   258,     0,   260,     0,     0,
     262,   263,   264,     0,     0,   265,   266,   267,   268,   269,
     502,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
       0,   291,   292,   293,   294,   295,     0,   296,   297,     0,
     299,     0,   300,   301,   302,   303,   304,   305,     0,   306,
     307,     0,     0,   308,   309,   310,     0,     0,   311,   312,
       0,   314,     0,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,     0,   327,   328,   329,   330,   331,
     332,   333,   334,   335,     0,   336,   337,   338,   339,   340,
     341,     0,   342,   343,   344,   345,   346,   347,   348,   349,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,     0,   363,   364,     0,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,     0,   381,   382,   383,   384,   385,     0,
     386,   387,   388,   389,   390,     0,   392,   393,   394,   395,
       0,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   504,   408,   409,   410,     0,   411,   412,     0,
     413,     0,   415,   416,   417,   418,   419,     0,   420,   421,
       0,     0,   422,   423,   424,   425,   426,     0,   427,   428,
     429,   430,   431,   432,   433,   434,     0,     0,   435,   436,
     437,   438,   439,     0,     0,   440,   441,   442,   443,   444,
     445,   446,     0,   447,     0,   449,   450,   451,   452,     0,
       0,   453,     0,     0,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   500,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    93,    94,    95,    96,    97,    98,    99,   100,     0,
     101,   102,   103,     0,     0,     0,     0,     0,     0,     0,
     104,   105,     0,   106,   107,   108,     0,   110,   111,   112,
     113,   114,     0,   116,   117,     0,   118,   119,   120,   121,
     122,   123,     0,     0,   124,   125,   126,   127,   128,     0,
     129,   130,   131,   132,   133,     0,     0,     0,   135,   136,
     137,   138,   139,   140,     0,   142,   143,   144,     0,   145,
     146,   147,   148,   149,   150,     0,     0,   152,   153,   154,
       0,     0,     0,     0,     0,     0,     0,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,     0,   166,     0,
     167,   168,   169,   170,   171,   172,     0,   173,   174,   175,
     176,   177,     0,     0,   178,   179,   180,   181,   182,     0,
     183,   184,   185,     0,   186,   187,   188,     0,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,     0,
     200,     0,   201,   202,   203,   204,     0,   205,     0,   206,
       0,     0,     0,   209,   210,   211,     0,   213,     0,   214,
       0,   215,   216,   217,     0,   218,   219,   220,   221,   222,
     738,   224,     0,   226,   227,   228,   229,     0,   230,   231,
     232,   233,   234,   235,     0,   236,     0,   238,   239,   240,
     241,   242,   243,   244,   245,     0,   246,     0,   247,     0,
       0,   250,     0,   252,   253,   254,   255,   256,   257,     0,
       0,   258,     0,   260,     0,     0,   262,   263,   264,     0,
       0,   265,   266,   267,   268,   269,   502,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,     0,   291,   292,   293,
     294,   295,     0,   296,   297,     0,   299,     0,   300,   301,
     302,   303,   304,   305,     0,   306,   307,     0,     0,   308,
     309,   310,     0,     0,   311,   312,     0,   314,     0,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,   327,   328,   329,   330,   331,   332,   333,   334,   335,
       0,   336,   337,   338,   339,   340,   341,     0,   342,   343,
     344,   345,   346,   347,   348,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
       0,   363,   364,     0,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,     0,
     381,   382,   383,   384,   385,     0,   386,   387,   388,   389,
     390,     0,   392,   393,   394,   395,     0,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   504,   408,
     409,   410,     0,   411,   412,     0,   413,     0,   415,   416,
     417,   418,   419,     0,   420,   421,     0,     0,   422,   423,
     424,   425,   426,     0,   427,   428,   429,   430,   431,   432,
     433,   434,     0,     0,   435,   436,   437,   438,   439,     0,
       0,   440,   441,   442,   443,   444,   445,   446,     0,   447,
       0,   449,   450,   451,   452,     0,     0,   453,     0,     0,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   500,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    93,    94,    95,
      96,    97,    98,    99,   100,     0,   101,   102,   103,     0,
       0,     0,     0,     0,     0,     0,   104,   105,     0,   106,
     107,   108,     0,   110,   111,   112,   113,   114,     0,   116,
     117,     0,   118,   119,   120,   121,   122,   123,     0,     0,
     124,   125,   126,   127,   128,     0,   129,   130,   131,   132,
     133,     0,     0,     0,   135,   136,   137,   138,   139,   140,
       0,   142,   143,   144,     0,   145,   146,   147,   148,   149,
     150,     0,     0,   152,   153,   154,     0,     0,     0,     0,
       0,     0,     0,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,     0,   166,     0,   167,   168,   169,   170,
     171,   172,     0,   173,   174,   175,   176,   177,     0,     0,
     178,   179,   180,   181,   182,     0,   183,   184,   185,     0,
     186,   187,   188,     0,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,     0,   200,     0,   201,   202,
     203,   204,     0,   205,     0,   206,     0,     0,     0,   209,
     210,   211,     0,   213,     0,   214,     0,   215,   216,   217,
       0,   218,   219,   220,   221,   222,   223,   224,     0,   226,
     227,   228,   229,     0,   230,   231,   232,   233,   234,   235,
       0,   236,     0,   238,   239,   240,   241,   242,   243,   244,
     245,     0,   246,     0,   247,     0,     0,   250,     0,   252,
     253,   254,   255,   256,   257,     0,     0,   258,     0,   260,
       0,     0,   262,   263,   264,     0,     0,   265,   266,   267,
     268,   269,   502,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,     0,   291,   292,   293,   294,   295,     0,   296,
     297,     0,   299,     0,   300,   301,   302,   303,   304,   305,
       0,   306,   307,     0,     0,   308,   309,   310,     0,     0,
     311,   312,     0,   314,     0,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,     0,   327,   328,   329,
     330,   331,   332,   333,   334,   335,     0,   336,   337,   338,
     339,   340,   341,     0,   342,   343,   344,   345,   346,   347,
     348,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,     0,   363,   364,     0,
     366,   367,   368,   369,   370,   371,   372,   373,   570,   375,
     376,   377,   378,   379,   380,     0,   381,   382,   383,   384,
     385,     0,   386,   387,   388,   389,   390,     0,   392,   393,
     394,   395,     0,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   504,   408,   409,   410,     0,   411,
     412,     0,   413,     0,   415,   416,   417,   418,   419,     0,
     572,   421,     0,     0,   422,   423,   424,   425,   426,     0,
     427,   428,   429,   430,   431,   432,   433,   434,     0,     0,
     435,   436,   437,   438,   439,     0,     0,   440,   441,   442,
     443,   444,   445,   446,     0,   447,     0,   449,   450,   451,
     452,     0,     0,   453,     0,     0,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   500,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    93,    94,    95,    96,    97,    98,    99,
     100,     0,   101,   102,   103,     0,     0,     0,     0,     0,
    1386,     0,   104,   105,     0,   106,   107,   108,     0,   110,
     111,   112,   113,   114,     0,   116,   117,     0,   118,   119,
     120,   121,   122,   123,     0,     0,   124,   125,   126,   127,
     128,     0,   129,   130,   131,   132,   133,     0,     0,     0,
     135,   136,   137,   138,   139,   140,     0,   142,   143,   144,
       0,   145,   146,   147,   148,   149,   150,     0,     0,   152,
     153,   154,     0,     0,     0,     0,     0,     0,     0,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   165,     0,
     166,     0,   167,   168,   169,   170,   171,   172,     0,   173,
     174,   175,   176,   177,     0,     0,   178,   179,   180,   181,
     182,     0,   183,   184,   185,     0,   186,   187,   188,     0,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,     0,   200,     0,   201,   202,   203,   204,     0,   205,
       0,   206,     0,     0,     0,   209,   210,   211,     0,   213,
       0,   214,     0,   215,   216,   217,     0,   218,   219,   220,
     221,   222,   223,   224,     0,   226,   227,   228,   229,     0,
     230,   231,   232,   233,   234,   235,     0,   236,     0,   238,
     239,   240,   241,   242,   243,   244,   245,     0,   246,     0,
     247,     0,     0,   250,     0,   252,   253,   254,   255,   256,
     257,     0,     0,   258,     0,   260,     0,     0,   262,   263,
     264,     0,     0,   265,   266,   267,   268,   269,   502,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,     0,   291,
     292,   293,   294,   295,     0,   296,   297,     0,   299,     0,
     300,   301,   302,   303,   304,   305,     0,   306,   307,     0,
       0,   308,   309,   310,     0,     0,   311,   312,     0,   314,
       0,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,     0,   327,   328,   329,   330,   331,   332,   333,
     334,   335,     0,   336,   337,   338,   339,   340,   341,     0,
     342,   343,   344,   345,   346,   347,   348,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,     0,   363,   364,     0,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,     0,   381,   382,   383,   384,   385,     0,     0,   387,
     388,   389,   390,     0,   392,   393,   394,   395,     0,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     504,   408,   409,   410,     0,   411,   412,     0,   413,     0,
     415,   416,   417,   418,   419,     0,   420,   421,     0,     0,
     422,   423,   424,   425,   426,     0,   427,   428,   429,   430,
     431,   432,   433,   434,     0,     0,   435,   436,   437,   438,
     439,     0,     0,   440,   441,   442,   443,   444,   445,   446,
       0,   447,     0,   449,   450,   451,   452,     0,     0,   453,
       0,     0,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   500,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    93,
      94,    95,    96,    97,    98,    99,   100,     0,   101,   102,
     103,     0,     0,     0,     0,     0,     0,     0,   104,   105,
       0,   106,   107,   108,     0,   110,   111,   112,   113,   114,
       0,   116,   117,     0,   118,   119,   120,   121,   122,   123,
       0,     0,   124,   125,   126,   127,   128,     0,   129,   130,
     131,   132,   133,     0,     0,     0,   135,   136,   137,   138,
     139,   140,     0,   142,   143,   144,     0,   145,   146,   147,
     148,   149,   150,     0,     0,   152,   153,   154,     0,     0,
       0,     0,     0,     0,     0,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,     0,   166,     0,   167,   168,
     169,   170,   171,   172,     0,   173,   174,   175,   176,   177,
       0,     0,   178,   179,   180,   181,   182,     0,   183,   184,
     185,     0,   186,   187,   188,     0,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,     0,   200,     0,
     201,   202,   203,   204,     0,   205,     0,   206,     0,     0,
       0,   209,   210,   211,     0,   213,     0,   214,     0,   215,
     216,   217,     0,   218,   219,   220,   221,   222,  1527,   224,
       0,   226,   227,   228,   229,     0,   230,   231,   232,   233,
     234,   235,     0,   236,     0,   238,   239,   240,   241,   242,
     243,   244,   245,     0,   246,     0,   247,     0,     0,   250,
       0,   252,   253,   254,   255,   256,   257,     0,     0,   258,
       0,   260,     0,     0,   262,   263,   264,     0,     0,   265,
     266,   267,   268,   269,   502,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,     0,   291,   292,   293,   294,   295,
       0,   296,   297,     0,   299,     0,   300,   301,   302,   303,
     304,   305,     0,   306,   307,     0,     0,   308,   309,   310,
       0,     0,   311,   312,     0,   314,     0,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,     0,   327,
     328,   329,   330,   331,   332,   333,   334,   335,     0,   336,
     337,   338,   339,   340,   341,     0,   342,   343,   344,   345,
     346,   347,   348,   349,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,     0,   363,
     364,     0,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,     0,   381,   382,
     383,   384,   385,     0,   386,   387,   388,   389,   390,     0,
     392,   393,   394,   395,     0,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   504,   408,   409,   410,
       0,   411,   412,     0,   413,     0,   415,   416,   417,   418,
     419,     0,   420,   421,     0,     0,   422,   423,   424,   425,
     426,     0,   427,   428,   429,   430,   431,   432,   433,   434,
       0,     0,   435,   436,   437,   438,   439,     0,     0,   440,
     441,   442,   443,   444,   445,   446,     0,   447,     0,   449,
     450,   451,   452,     0,     0,   453,     0,     0,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   500,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    93,    94,    95,    96,    97,
      98,    99,   100,     0,   101,   102,   103,     0,     0,     0,
       0,     0,     0,     0,   104,   105,     0,   106,   107,   108,
       0,   110,   111,   112,   113,   114,     0,   116,   117,     0,
     118,   119,   120,   121,   122,   123,     0,     0,   124,   125,
     126,   127,   128,     0,   129,   130,   131,   132,   133,     0,
       0,     0,   135,   136,   137,   138,   139,   140,     0,   142,
     143,   144,     0,   145,   146,   147,   148,   149,   150,     0,
       0,   152,   153,   154,     0,     0,     0,     0,     0,     0,
       0,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,     0,   166,     0,   167,   168,   169,   170,   171,   172,
       0,   173,   174,   175,   176,   177,     0,     0,   178,   179,
     180,   181,   182,     0,   183,   184,   185,     0,   186,   187,
     188,     0,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,     0,   200,     0,   201,   202,   203,   204,
       0,   205,     0,   206,     0,     0,     0,   209,   210,   211,
       0,   213,     0,   214,     0,   215,   216,   217,     0,   218,
     219,   220,   221,   222,  1806,   224,     0,   226,   227,   228,
     229,     0,   230,   231,   232,   233,   234,   235,     0,   236,
       0,   238,   239,   240,   241,   242,   243,   244,   245,     0,
     246,     0,   247,     0,     0,   250,     0,   252,   253,   254,
     255,   256,   257,     0,     0,   258,     0,   260,     0,     0,
     262,   263,   264,     0,     0,   265,   266,   267,   268,   269,
     502,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
       0,   291,   292,   293,   294,   295,     0,   296,   297,     0,
     299,     0,   300,   301,   302,   303,   304,   305,     0,   306,
     307,     0,     0,   308,   309,   310,     0,     0,   311,   312,
       0,   314,     0,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,     0,   327,   328,   329,   330,   331,
     332,   333,   334,   335,     0,   336,   337,   338,   339,   340,
     341,     0,   342,   343,   344,   345,   346,   347,   348,   349,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,     0,   363,   364,     0,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,     0,   381,   382,   383,   384,   385,     0,
     386,   387,   388,   389,   390,     0,   392,   393,   394,   395,
       0,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   504,   408,   409,   410,     0,   411,   412,     0,
     413,     0,   415,   416,   417,   418,   419,     0,   420,   421,
       0,     0,   422,   423,   424,   425,   426,     0,   427,   428,
     429,   430,   431,   432,   433,   434,     0,     0,   435,   436,
     437,   438,   439,     0,     0,   440,   441,   442,   443,   444,
     445,   446,     0,   447,     0,   449,   450,   451,   452,     0,
       0,   453,     0,     0,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   500,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    93,    94,    95,    96,    97,    98,    99,   100,     0,
     101,   102,   103,     0,     0,     0,     0,     0,     0,     0,
     104,   105,     0,   106,   107,   108,     0,   110,   111,   112,
     113,   114,     0,   116,   117,     0,   118,   119,   120,   121,
     122,   123,     0,     0,   124,   125,   126,   127,   128,     0,
     129,   130,   131,   132,   133,     0,     0,     0,   135,   136,
     137,   138,   139,   140,     0,   142,   143,   144,     0,   145,
     146,   147,   148,   149,   150,     0,     0,   152,   153,   154,
       0,     0,     0,     0,     0,     0,     0,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,     0,   166,     0,
     167,   168,   169,   170,   171,   172,     0,   173,   174,   175,
     176,   177,     0,     0,   178,   179,   180,   181,   182,     0,
     183,   184,   185,     0,   186,   187,   188,     0,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,     0,
     200,     0,   201,   202,   203,   204,     0,   205,     0,   206,
       0,     0,     0,   209,   210,   211,     0,   213,     0,   214,
       0,   215,   216,   217,     0,   218,   219,   220,   221,   222,
    1818,   224,     0,   226,   227,   228,   229,     0,   230,   231,
     232,   233,   234,   235,     0,   236,     0,   238,   239,   240,
     241,   242,   243,   244,   245,     0,   246,     0,   247,     0,
       0,   250,     0,   252,   253,   254,   255,   256,   257,     0,
       0,   258,     0,   260,     0,     0,   262,   263,   264,     0,
       0,   265,   266,   267,   268,   269,   502,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,     0,   291,   292,   293,
     294,   295,     0,   296,   297,     0,   299,     0,   300,   301,
     302,   303,   304,   305,     0,   306,   307,     0,     0,   308,
     309,   310,     0,     0,   311,   312,     0,   314,     0,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,   327,   328,   329,   330,   331,   332,   333,   334,   335,
       0,   336,   337,   338,   339,   340,   341,     0,   342,   343,
     344,   345,   346,   347,   348,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
       0,   363,   364,     0,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,     0,
     381,   382,   383,   384,   385,     0,   386,   387,   388,   389,
     390,     0,   392,   393,   394,   395,     0,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   504,   408,
     409,   410,     0,   411,   412,     0,   413,     0,   415,   416,
     417,   418,   419,     0,   420,   421,     0,     0,   422,   423,
     424,   425,   426,     0,   427,   428,   429,   430,   431,   432,
     433,   434,     0,     0,   435,   436,   437,   438,   439,     0,
       0,   440,   441,   442,   443,   444,   445,   446,     0,   447,
       0,   449,   450,   451,   452,     0,     0,   453,     0,     0,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   500,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    93,    94,    95,
      96,    97,    98,    99,   100,     0,   101,   102,   103,     0,
       0,     0,     0,     0,     0,     0,   104,   105,     0,   106,
     107,   108,     0,   110,   111,   112,   113,   114,     0,   116,
     117,     0,   118,   119,   120,   121,   122,   123,     0,     0,
     124,   125,   126,   127,   128,     0,   129,   130,   131,   132,
     133,     0,     0,     0,   135,   136,   137,   138,   139,   140,
       0,   142,   143,   144,     0,   145,   146,   147,   148,   149,
     150,     0,     0,   152,   153,   154,     0,     0,     0,     0,
       0,     0,     0,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,     0,   166,     0,   167,   168,   169,   170,
     171,   172,     0,   173,   174,   175,   176,   177,     0,     0,
     178,   179,   180,   181,   182,     0,   183,   184,   185,     0,
     186,   187,   188,     0,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,     0,   200,     0,   201,   202,
     203,   204,     0,   205,     0,   206,     0,     0,     0,   209,
     210,   211,     0,   213,     0,   214,     0,   215,   216,   217,
       0,   218,   219,   220,   221,   222,  1820,   224,     0,   226,
     227,   228,   229,     0,   230,   231,   232,   233,   234,   235,
       0,   236,     0,   238,   239,   240,   241,   242,   243,   244,
     245,     0,   246,     0,   247,     0,     0,   250,     0,   252,
     253,   254,   255,   256,   257,     0,     0,   258,     0,   260,
       0,     0,   262,   263,   264,     0,     0,   265,   266,   267,
     268,   269,   502,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,     0,   291,   292,   293,   294,   295,     0,   296,
     297,     0,   299,     0,   300,   301,   302,   303,   304,   305,
       0,   306,   307,     0,     0,   308,   309,   310,     0,     0,
     311,   312,     0,   314,     0,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,     0,   327,   328,   329,
     330,   331,   332,   333,   334,   335,     0,   336,   337,   338,
     339,   340,   341,     0,   342,   343,   344,   345,   346,   347,
     348,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,     0,   363,   364,     0,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,     0,   381,   382,   383,   384,
     385,     0,   386,   387,   388,   389,   390,     0,   392,   393,
     394,   395,     0,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   504,   408,   409,   410,     0,   411,
     412,     0,   413,     0,   415,   416,   417,   418,   419,     0,
     420,   421,     0,     0,   422,   423,   424,   425,   426,     0,
     427,   428,   429,   430,   431,   432,   433,   434,     0,     0,
     435,   436,   437,   438,   439,     0,     0,   440,   441,   442,
     443,   444,   445,   446,     0,   447,     0,   449,   450,   451,
     452,     0,     0,   453,     0,     0,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   500,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    93,    94,    95,    96,    97,    98,    99,
     100,     0,   101,   102,   103,     0,     0,     0,     0,     0,
       0,     0,   104,   105,     0,   106,   107,   108,     0,   110,
     111,   112,   113,   114,     0,   116,   117,     0,   118,   119,
     120,   121,   122,   123,     0,     0,   124,   125,   126,   127,
     128,     0,   129,   130,   131,   132,   133,     0,     0,     0,
     135,   136,   137,   138,   139,   140,     0,   142,   143,   144,
       0,   145,   146,   147,   148,   149,   150,     0,     0,   152,
     153,   154,     0,     0,     0,     0,     0,     0,     0,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   165,     0,
     166,     0,   167,   168,   169,   170,   171,   172,     0,   173,
     174,   175,   176,   177,     0,     0,   178,   179,   180,   181,
     182,     0,   183,   184,   185,     0,   186,   187,   188,     0,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,     0,   200,     0,   201,   202,   203,   204,     0,   205,
       0,   206,     0,     0,     0,   209,   210,   211,     0,   213,
       0,   214,     0,   215,   216,   217,     0,   218,   219,   220,
     221,   222,   223,   224,     0,   226,   227,   228,   229,     0,
     230,   231,   232,   233,   234,   235,     0,   236,     0,   238,
     239,   240,   241,   242,   243,   244,   245,     0,   246,     0,
     247,     0,     0,   250,     0,   252,   253,   254,   255,   256,
     257,     0,     0,   258,     0,   260,     0,     0,   262,   263,
     264,     0,     0,   265,   266,   267,   268,   269,   502,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,     0,   291,
     292,   293,   294,   295,     0,   296,   297,     0,   299,     0,
     300,   301,   302,   303,   304,   305,     0,   306,   307,     0,
       0,   308,   309,   310,     0,     0,   311,   312,     0,   314,
       0,   316,   317,   318,   319,   320,   321,   322,     0,   324,
     325,   326,     0,   327,   328,   329,   330,   331,   332,   333,
     334,   335,     0,   336,   337,   338,   339,   340,   341,     0,
     342,     0,   344,   345,   346,   347,   348,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,     0,   363,   364,     0,   366,   367,   368,   369,
       0,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,     0,   381,   382,   383,   384,   385,     0,   386,   387,
     388,   389,   390,     0,   392,   393,   394,   395,     0,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     504,   408,   409,   410,     0,   411,   412,     0,   413,     0,
     415,   416,   417,   418,   419,     0,   420,   421,     0,     0,
     422,   423,   424,   425,   426,     0,   427,   428,   429,   430,
     431,   432,   433,   434,     0,     0,   435,   436,   437,   438,
     439,     0,     0,   440,   441,   442,   443,   444,   445,   446,
       0,   447,     0,   449,   450,   451,   452,     0,     0,   453,
       0,     0,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   663,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    93,
      94,    95,    96,    97,    98,    99,   100,     0,   101,   102,
     103,     0,     0,     0,     0,     0,     0,     0,   104,   105,
       0,   106,   107,   108,   664,   110,   111,   112,     0,   665,
     666,   667,   668,     0,   118,   119,   120,   121,   122,   123,
       0,     0,   124,   125,   669,   670,   128,     0,   129,   130,
     131,   132,     0,     0,   671,     0,   135,   136,   137,   138,
     139,   140,   672,   142,   143,   144,     0,   145,   146,   147,
     148,   149,   150,     0,   673,   152,   153,   154,     0,     0,
       0,   674,     0,     0,     0,   156,   157,   158,   159,   160,
     161,   162,   675,   676,   165,     0,   166,     0,   167,   168,
     169,   170,   171,   172,     0,   173,   174,   175,   176,   177,
       0,     0,   178,   179,   677,   181,   182,     0,   183,   184,
     185,     0,   186,   187,   188,     0,   189,   190,   191,   192,
       0,   194,   195,   196,   197,   198,     0,     0,   200,     0,
     201,   202,   678,   204,     0,   205,     0,   206,   679,     0,
     680,   209,   210,   211,   681,   213,     0,   214,     0,     0,
       0,   217,     0,   218,   219,   220,   221,   222,   682,   224,
     683,   226,   227,   228,   229,     0,   230,   231,   232,   233,
     234,   235,     0,   236,   684,     0,   239,   240,   241,   242,
     243,   685,   686,     0,   687,     0,   247,   688,   689,   250,
     690,   252,   253,   254,   255,   256,   257,     0,     0,   258,
     691,   260,   692,     0,   262,   263,   264,     0,     0,   265,
     266,   267,   268,   269,   693,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   694,   695,   696,   292,   293,   294,     0,
       0,   296,   297,   697,   299,     0,     0,   301,   698,   303,
     304,   305,     0,   306,   307,     0,     0,   308,   309,   310,
       0,     0,   311,     0,   699,   314,   700,     0,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,     0,   327,
     328,     0,   330,   331,     0,   333,   334,   335,     0,   336,
     337,   338,   339,   340,   341,     0,   342,   343,   344,   701,
     346,   347,   348,   349,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,     0,   363,
     364,   702,   366,   367,   368,   703,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,     0,   381,   382,
     383,   384,   385,     0,   386,   704,   388,   389,   390,   705,
     392,   393,   706,   395,     0,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   707,   408,     0,   410,
       0,   411,   412,     0,   413,   708,   415,   416,   417,   418,
     419,     0,   709,   710,     0,     0,   422,   423,     0,   425,
       0,     0,   427,   428,   711,   430,   431,   432,   433,   434,
       0,     0,   435,   436,   437,   438,   439,     0,     0,   440,
     441,   442,   443,   444,     0,   712,     0,   447,   713,   449,
     450,   451,   452,     0,     0,   453,     0,     0,   454,   455,
     456,   457,   458,   459,   663,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   471,   472,   473,   474,     0,
      93,    94,    95,    96,    97,    98,    99,   100,     0,   101,
     102,   103,     0,     0,     0,     0,     0,     0,     0,   104,
     105,     0,   106,   107,   108,   664,   110,   111,   112,     0,
     665,   666,   667,   668,     0,   118,   119,   120,   121,   122,
     123,     0,     0,   124,   125,   669,   670,   128,     0,   129,
     130,   131,   132,     0,     0,   671,     0,   135,   136,   137,
     138,   139,   140,   672,   142,   143,   144,     0,   145,   146,
     147,   148,   149,   150,     0,   673,   152,   153,   154,     0,
       0,     0,   674,     0,     0,     0,   156,   157,   158,   159,
     160,   161,   162,   675,   676,   165,     0,   166,     0,   167,
     168,   169,   170,   171,   172,     0,   173,   174,   175,   176,
     177,     0,     0,   178,   179,   677,   181,   182,     0,   183,
     184,   185,     0,   186,   187,   188,     0,   189,   190,   191,
     192,     0,   194,   195,   196,   197,   198,     0,     0,   200,
       0,   201,   202,   678,   204,     0,   205,     0,   206,   679,
       0,   680,   209,   210,   211,   681,   213,     0,   214,     0,
       0,     0,   217,     0,   218,   219,   220,   221,   222,   223,
     224,   683,   226,   227,   228,   229,     0,   230,   231,   232,
     233,   234,   235,     0,   236,   684,     0,   239,   240,   241,
     242,   243,   685,   686,     0,   687,     0,   247,   688,   689,
     250,   690,   252,   253,   254,   255,   256,   257,     0,     0,
     258,   691,   260,   692,     0,   262,   263,   264,     0,     0,
     265,   266,   267,   268,   269,   693,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   694,   695,   696,   292,   293,   294,
       0,     0,   296,   297,   697,   299,     0,     0,   301,   698,
     303,   304,   305,     0,   306,   307,     0,     0,   308,   309,
     310,     0,     0,   311,     0,   699,   314,   700,     0,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,     0,
     327,   328,     0,   330,   331,     0,   333,   334,   335,     0,
     336,   337,   338,   339,   340,   341,     0,   342,   343,   344,
     701,   346,   347,   348,   349,     0,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,     0,
     363,   364,   702,   366,   367,   368,   703,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,     0,   381,
     382,   383,   384,   385,     0,   386,   704,   388,   389,   390,
     705,   392,   393,   706,   395,     0,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   707,   408,     0,
     410,     0,   411,   412,     0,   413,   708,   415,   416,   417,
     418,   419,     0,   709,   710,     0,     0,   422,   423,     0,
     425,     0,     0,   427,   428,   711,   430,   431,   432,   433,
     434,     0,     0,   435,   436,   437,   438,   439,     0,     0,
     440,   441,   442,   443,   444,     0,   712,     0,   447,   713,
     449,   450,   451,   452,     0,     0,   453,     0,     0,   454,
     455,   456,   457,   458,   459,  2403,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   471,   472,   473,   474,
       0,    93,    94,    95,    96,    97,    98,    99,   100,     0,
     101,   102,   103,     0,     0,     0,     0,     0,     0,     0,
     104,   105,     0,   106,   107,   108,  2404,   110,   111,   112,
       0,   665,  2405,   667,   668,     0,   118,   119,   120,   121,
     122,   123,     0,     0,   124,   125,   669,   670,   128,     0,
     129,   130,   131,   132,     0,     0,  2406,     0,   135,   136,
     137,   138,   139,   140,  2407,   142,   143,   144,     0,   145,
     146,   147,   148,   149,   150,     0,  2408,   152,   153,   154,
       0,     0,     0,  2409,     0,     0,     0,   156,   157,   158,
     159,   160,   161,   162,   675,   676,   165,     0,   166,     0,
     167,   168,   169,   170,   171,   172,     0,   173,   174,   175,
     176,   177,     0,     0,   178,   179,   677,   181,   182,     0,
     183,   184,   185,     0,   186,   187,   188,     0,   189,   190,
     191,   192,     0,   194,   195,   196,   197,   198,     0,     0,
     200,     0,   201,   202,   678,   204,     0,   205,     0,   206,
    2410,     0,  2411,   209,   210,   211,  2412,   213,     0,   214,
       0,     0,     0,   217,     0,   218,   219,   220,   221,   222,
     223,   224,  2413,   226,   227,   228,   229,     0,   230,   231,
     232,   233,   234,   235,     0,   236,  2414,     0,   239,   240,
     241,   242,   243,   685,   686,     0,   687,     0,   247,  2415,
    2416,   250,  2417,   252,   253,   254,   255,   256,   257,     0,
       0,   258,  2418,   260,  2419,     0,   262,   263,   264,     0,
       0,   265,   266,   267,   268,   269,  2616,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   694,  2421,   696,   292,   293,
     294,     0,     0,   296,   297,  2423,   299,     0,     0,   301,
     698,   303,   304,   305,     0,   306,   307,     0,     0,   308,
     309,   310,     0,     0,   311,     0,  2425,   314,  2426,     0,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,   327,   328,     0,   330,   331,     0,   333,   334,   335,
       0,   336,   337,   338,   339,   340,   341,     0,   342,   343,
     344,   701,   346,   347,   348,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
       0,   363,   364,  2427,   366,   367,   368,     0,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,     0,
     381,   382,   383,   384,   385,     0,   386,     0,   388,   389,
     390,  2429,   392,   393,   706,   395,     0,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,  2617,   408,
       0,   410,     0,   411,   412,     0,   413,  2431,   415,   416,
     417,   418,   419,     0,   709,   710,     0,     0,   422,   423,
       0,   425,     0,     0,   427,   428,  2432,   430,   431,   432,
     433,   434,     0,     0,   435,   436,   437,   438,   439,     0,
       0,   440,   441,   442,   443,   444,     0,   712,     0,   447,
    2433,   449,   450,   451,   452,     0,     0,   453,     0,     0,
     454,   455,   456,   457,   458,   459,   663,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   471,   472,   473,
     474,     0,    93,    94,    95,    96,    97,    98,    99,   100,
       0,   101,   102,   103,     0,     0,     0,     0,     0,     0,
       0,   104,   105,     0,   106,   107,   108,   664,   110,   111,
     112,     0,   665,   666,   667,   668,     0,   118,   119,   120,
     121,   122,   123,     0,     0,   124,   125,   669,   670,   128,
       0,   129,   130,   131,   132,     0,     0,   671,     0,   135,
     136,   137,   138,   139,   140,   672,   142,   143,   144,     0,
     145,   146,   147,   148,   149,   150,     0,   673,   152,   153,
     154,     0,     0,     0,   674,     0,     0,     0,   156,   157,
     158,   159,   160,   161,   162,   675,   676,   165,     0,   166,
       0,   167,   168,   169,   170,   171,   172,     0,   173,   174,
     175,   176,   177,     0,     0,   178,   179,   677,   181,   182,
       0,   183,   184,   185,     0,   186,   187,   188,     0,   189,
     190,   191,   192,     0,   194,   195,   196,   197,   198,     0,
       0,   200,     0,   201,   202,   678,   204,     0,   205,     0,
     206,   679,     0,   680,   209,   210,   211,   681,   213,     0,
     214,     0,     0,     0,   217,     0,   218,   219,   220,   221,
     222,   223,   224,   683,   226,   227,   228,   229,     0,   230,
     231,   232,   233,   234,   235,     0,   236,   684,     0,   239,
     240,   241,   242,   243,   685,   686,     0,   687,     0,   247,
     688,   689,   250,   690,   252,   253,   254,   255,   256,   257,
       0,     0,   258,   691,   260,   692,     0,   262,   263,   264,
       0,     0,   265,   266,   267,   268,   269,     0,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   694,   695,   696,   292,
     293,   294,     0,     0,   296,   297,   697,   299,     0,     0,
     301,   698,   303,   304,   305,     0,   306,   307,     0,     0,
     308,   309,   310,     0,     0,   311,     0,   699,   314,   700,
       0,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,     0,   327,   328,     0,   330,   331,     0,   333,   334,
     335,     0,   336,   337,   338,   339,   340,   341,     0,   342,
     343,   344,   701,   346,   347,   348,   349,     0,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,     0,   363,   364,   702,   366,   367,   368,     0,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
       0,   381,   382,   383,   384,   385,     0,   386,     0,   388,
     389,   390,   705,   392,   393,   706,   395,     0,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,     0,
     408,     0,   410,     0,   411,   412,     0,   413,   708,   415,
     416,   417,   418,   419,     0,   709,   710,     0,     0,   422,
     423,     0,   425,     0,     0,   427,   428,   711,   430,   431,
     432,   433,   434,     0,     0,   435,   436,   437,   438,   439,
       0,     0,   440,   441,   442,   443,   444,     0,   712,     0,
     447,   713,   449,   450,   451,   452,     0,     0,   453,     0,
       0,   454,   455,   456,   457,   458,   459,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   471,   472,
     473,   474
};

static const yytype_int16 yycheck[] =
{
       6,   624,   639,    59,  1002,   567,     6,   704,     0,  1000,
       0,   802,     6,   494,    36,   802,   610,   535,    16,   651,
     537,     0,     0,     0,  1392,   882,   531,  1395,   528,   710,
    1176,  1280,   631,   975,  1145,   585,  1742,    16,    30,   590,
     884,   980,   733,  1770,  1145,   736,  1773,   971,  1145,   530,
    1145,   633,    61,  1822,   528,  1824,   900,  1816,    31,  1181,
     977,   536,  1041,  1700,   528,  2188,  1309,  1310,   912,  2159,
    2186,   624,  2159,   626,   537,   628,  1762,    61,  1813,  1860,
    1861,  1862,  2200,     0,    35,  2207,    21,    79,  1005,     5,
     810,  1261,  2067,     0,   669,   670,     5,     5,     9,    58,
    2019,     0,     5,     5,    13,    14,  1361,  1411,     5,   542,
       5,    13,    14,  1738,     5,     5,    89,  2073,    73,  1637,
    1638,   696,    13,    14,  1642,     5,   644,     5,  1753,   920,
       3,    13,    14,    13,    14,    13,    14,     5,     5,    11,
      40,     9,     9,     5,    93,     5,    11,     5,     5,  2464,
       5,     5,  1146,     5,  1889,     5,     5,    67,    31,    32,
    1413,    50,   170,   215,  2479,  1683,  1684,   607,   607,  2476,
       9,     3,     4,     5,    40,   117,    41,     9,     8,  2620,
       4,    11,  1275,   169,  1275,     9,    93,  1275,   869,   740,
    2098,     4,   107,  2460,    93,  1275,     9,   283,   989,   169,
     120,   992,   993,   285,  2072,  2756,    75,   242,    73,    27,
      58,    41,    27,   291,    11,    27,    34,    86,    48,    34,
    1955,  1956,    34,    58,   291,   170,  2390,  2551,    75,    11,
     704,   307,  2717,  2653,    59,   271,   120,   122,   115,    86,
     704,   332,    67,    73,    41,    48,  2442,   307,   376,   137,
    2007,   135,    13,    14,   829,   830,   166,  2574,    27,  2825,
    2130,   332,   163,   107,   120,   254,   255,   274,   161,    11,
      58,   189,    11,    11,   161,  2951,    73,   368,  2595,   528,
     855,    27,   118,   115,   416,   802,   355,    11,   208,   108,
     222,   988,   809,  1013,   147,   168,   356,   170,   159,  2080,
    1020,   459,    41,  2854,   118,   495,   484,   454,   117,   484,
     327,   438,   403,   143,    64,    65,   438,    41,   402,   497,
     495,  2997,     4,   481,  2639,    83,   346,     9,   460,   880,
     805,    73,   403,   226,    73,   885,   268,   811,  2428,   356,
     130,  1978,  2212,   196,   174,   927,  2321,   811,  2471,    73,
    2325,    37,   499,   437,   374,   191,  2312,  2473,   303,   450,
     190,   130,   115,   913,  2930,   195,  2690,   495,   495,   127,
    2129,   174,   233,   495,   381,   364,   365,   191,   285,   450,
     267,   960,   214,   490,   130,  2112,   285,   190,   347,   939,
     497,  2126,   195,  2128,    68,   108,   328,  2948,   275,   434,
     436,  2886,   232,   164,   236,   922,   923,     8,   318,   495,
      11,   236,   313,   495,   490,    16,    17,    18,   367,   970,
    2737,   499,  2618,     0,   268,  2589,   495,   345,     0,   232,
     490,  2529,   499,   317,   187,   380,  1156,   942,   124,    16,
    2065,   348,  2067,  2311,   414,   377,   920,   499,  2755,   348,
    2358,  1700,  1046,    30,   403,   704,  2897,   287,  1551,    36,
     495,  1552,  1553,  1554,  1552,  1553,   275,  2565,  1986,  1987,
    1988,  1989,  1552,  1777,  1992,  1993,  1994,  1995,  1996,  1997,
    1998,  1999,  2000,  2001,    61,  2752,   169,   495,   403,  2246,
     280,  1433,   484,  2913,   484,   444,  2231,   498,   440,   347,
     400,  1744,    79,   936,   436,   484,   484,   484,   457,  1764,
    1489,  2629,   347,   499,   988,   537,   436,   270,  1155,  1513,
    1518,   431,   528,  1772,   988,  1778,  2044,  2045,   968,   968,
    2620,   537,   481,  2620,   400,   209,   391,   392,   493,   537,
     499,  2856,   497,  2867,   302,   414,   495,  1146,  2855,   379,
     457,   459,   447,   438,   610,  2653,   459,   536,   457,   347,
     566,   567,   811,  2538,    58,   453,   384,   414,  2543,   384,
     579,  2546,   384,   481,  2530,   448,   379,   493,   481,   495,
     436,   497,  1752,   494,   590,  2504,   495,   495,   342,   496,
     588,   498,   495,   495,   195,   579,   198,   496,   495,   498,
     495,  1233,  1177,  1178,   495,   495,   495,   599,  2367,   599,
    1589,  2380,   547,   495,   448,   495,   217,   495,  1169,   491,
     599,   599,   599,   629,   630,   631,   491,   495,   495,   602,
      86,  2754,    88,   495,    90,   495,  1356,   495,   495,  2761,
     591,   495,  2760,   495,   457,   495,   495,   486,   487,   479,
     408,   499,  1251,   499,   486,   487,   486,   487,   488,   489,
     490,   491,   486,   487,   499,   457,   495,   159,   481,  1980,
    2356,  1462,   145,   486,   487,  1175,    75,   332,  2459,    13,
      14,  1472,   599,  1265,  1475,   117,   287,    86,  2786,   481,
    1190,   488,   489,   490,   491,   106,  2321,  2008,   704,   249,
    2325,  1175,  1176,  1282,   486,   487,   488,   489,   490,   491,
    2685,  1175,  1176,  1264,  1232,  1266,  1190,   419,  1235,  1270,
    1319,  1226,  1304,  1305,  2822,  2362,  1190,  2462,    23,  1978,
     149,   414,  1283,  1284,   740,  1286,  2852,    30,  2861,   988,
     213,   233,  1223,  1224,   450,   115,  1296,   242,   403,  1230,
     488,   489,   490,   491,  1650,  1306,  1652,  1653,   363,  1234,
    1359,    54,   486,   487,   488,   489,   490,   491,  1350,   130,
     202,   175,  1235,   490,   268,   130,  1358,    75,  1360,   242,
     497,   242,   493,  1574,  2027,   175,   497,  1574,    86,   496,
     282,  2907,   499,  1915,   242,   450,   802,  1733,  1734,  1921,
     495,   484,   157,   809,   810,   811,   130,  2897,  1665,     5,
    2897,   270,   242,  1313,   497,  2913,   275,  2576,   291,  1663,
    1399,   827,  1746,    23,    23,   459,   805,   493,   242,    29,
      29,   497,   236,   157,   495,  1458,   268,   248,   270,  1313,
     135,  1322,  1840,  1534,   219,   256,   236,   481,  1579,  1313,
     856,  1450,  1583,   347,  1585,     4,  2979,    94,   159,   881,
       9,   495,   478,   164,  1555,   360,  1557,   326,     4,  1560,
     876,   877,   878,     9,   880,   881,   568,   569,  1431,   571,
     374,   482,   483,   484,  1863,   486,   487,   488,   489,   490,
     491,  1485,  1486,  1487,  2040,    24,    23,   360,   904,   360,
     290,    30,    29,   159,  2529,  1458,   497,   484,   164,   270,
    2159,   149,   360,  2538,  1513,   270,   922,   923,  2543,   280,
     275,  2546,  1766,   285,  1477,   280,  1175,  1176,   298,  1482,
     360,  1848,   233,   170,   496,   135,   135,   499,   478,   434,
    2565,  1190,  1442,   222,   953,   954,   360,   956,   367,   955,
      79,   275,   496,   959,   960,   499,   280,   430,  2727,   536,
     537,  1900,   198,  2722,   970,   332,  1905,   204,  1442,   953,
     954,   434,   956,   434,   947,    13,    14,   233,  1442,  2497,
    1531,   282,   988,   220,   403,   488,   434,  1468,  1506,   268,
     170,    36,  1473,   230,   289,   496,   168,   367,   499,   676,
     495,   368,   579,   407,   434,   409,   496,  1013,   135,   499,
      55,    31,    32,     4,  1020,    13,    14,   407,     9,   409,
     434,   698,   599,   499,   204,   444,   282,   264,  2653,   485,
     434,  1004,   495,   403,   495,  1041,   403,   495,   457,   493,
     220,   495,   498,   497,   434,   496,  1546,   495,   499,   344,
     230,   346,   729,   496,    13,    14,   499,  1574,  1637,  1638,
    2685,   106,   481,  1642,  1313,   495,   421,    13,    14,  2587,
    1587,   459,  1546,    93,   444,   496,   495,   432,  2189,   374,
      23,   495,  1546,   450,    13,    14,    29,   457,  2189,   289,
     289,  1591,  2189,   481,  2189,    13,    14,   421,   377,  1650,
    1651,  1652,  1653,   496,  1683,  1684,   499,   495,   432,   496,
     496,   481,   499,  2362,   351,  2821,   496,  1591,   169,   499,
    2056,  2057,  2058,  2059,   360,   495,   582,  1591,  1819,   367,
    1821,   496,   368,     8,   499,  2330,    11,  1688,  2333,  2657,
    1146,   340,  2140,  2289,   344,   344,  1740,   407,  2139,   409,
    1156,   496,   197,  1658,   499,    13,    14,   436,   614,  1946,
     215,  2786,   289,  1169,   841,   403,    41,   403,    54,  1175,
    1176,   351,   495,    48,   374,   374,    13,    14,   496,   185,
     186,   499,   859,   496,  1190,  2127,   499,   407,   367,   409,
    2181,   478,   135,  1442,   650,   651,   652,  2822,    73,  2138,
     499,  2140,   501,   248,  2931,  2932,   444,   457,  2914,   459,
    2969,   256,    23,   340,   450,    13,    14,   344,    29,   457,
      13,    14,   496,   268,   403,   499,   219,  2933,   805,  1235,
     496,   496,   496,   499,   499,   499,   150,  1235,  1919,  1920,
     340,   441,   441,   481,   150,  1251,  1883,   374,   254,   255,
      23,   407,  2096,   409,   299,  1234,    29,   495,  1264,  1891,
    1266,  2988,   150,  1269,  1270,   444,   843,   496,   143,  1261,
     499,  1261,   407,  1279,   409,  1281,  1282,  1283,  1284,  1285,
    1286,  1287,  1261,  1261,  1261,   604,   496,   606,  2913,   499,
    2996,   496,   496,   496,   499,   499,   499,  1546,   150,   174,
    1306,   346,  1308,   496,   881,   496,   499,  1313,  1314,  1315,
    1316,  1317,  1318,  1319,   441,   190,   495,  1323,  1324,  2326,
     195,  2328,  1328,   368,   135,   496,  1332,   495,   499,  1335,
    1336,  1337,  1338,  1339,  1340,  1341,  1342,  1343,   496,   270,
    1346,   499,  1591,   388,   497,  1944,   289,   367,  1354,   496,
    1356,    36,   499,  1359,  2500,    13,    14,   232,   364,   365,
       5,    50,   135,     8,   496,    13,    14,   499,  2159,    14,
     450,  2620,   496,  1379,   495,   499,   953,   954,  1376,   956,
      25,    82,   496,   403,    29,   499,     8,   496,    27,    11,
     499,   461,  1384,  1399,    16,    17,    18,   340,  2396,  1899,
     496,   344,   495,   499,  1410,  1411,    95,  1986,  1987,  1988,
    1989,   447,   287,  1992,  1993,  1994,  1995,  1996,  1997,  1998,
    1999,  2000,  2001,   314,   444,  1899,  2368,   496,   448,  1946,
     499,   374,   121,    13,    14,  1899,  1442,   457,   496,    78,
    2022,   499,  1448,   496,  1450,   495,   499,   175,    87,   496,
     139,   496,   499,   496,   143,   496,   499,  1938,   499,   496,
    2317,   481,   499,   150,  2015,  2044,  2045,  1967,   924,   496,
     198,   495,   499,   495,  2331,   495,   165,   116,   289,   168,
      35,   496,   495,  1489,   499,  1985,  1492,  1493,   150,  1495,
     150,    23,   948,  1967,   183,   150,   496,    29,   441,   499,
      13,    14,   496,  1967,   379,   499,   496,  1513,   236,   499,
    2010,  1985,  2658,    13,    14,   285,   289,  2017,   974,   342,
    1526,  1985,  2890,  2105,  2892,  1531,   403,  2077,   495,   340,
    1522,   987,  2223,   344,    36,   496,  2010,   145,   499,   496,
    1546,   496,   499,  2017,   499,     3,  2010,     5,   187,    13,
      14,   159,  1008,  2017,   496,   496,   164,   499,   499,  2158,
     199,  2160,   290,   374,    13,    14,  2040,   340,  1574,    13,
      14,   344,    20,    21,   496,   496,  2040,   499,   499,   496,
    2174,  1587,   499,  1589,   496,  1591,   275,   499,    13,    14,
    1596,   231,  2224,   298,   283,  1601,  2387,  2965,   367,    13,
      14,   374,   495,   135,   479,   213,    13,    14,    13,    14,
       8,   486,   487,   488,   489,   490,   491,  1639,    16,    17,
      18,   355,   356,   355,   356,   233,   258,   259,   364,   365,
     441,  1637,  1638,  1639,   403,  2626,  1642,   326,   355,   356,
     355,   356,   922,   923,  1650,  1651,  1652,  1653,  2897,   493,
    1899,   109,   110,     5,  1660,     5,   495,  1234,  1664,  2159,
     495,  1667,   367,   164,   495,   287,  1688,   495,   441,   495,
     495,   495,  2190,   495,   282,   444,     5,  1683,  1684,   407,
       5,   409,  1688,   291,  1261,  2159,   495,   495,   457,   495,
      11,   495,   495,  1149,    15,  2159,  1702,     5,   403,  1705,
     495,  1707,    23,   431,  2491,   495,   434,     5,  2399,  2400,
     495,   495,   481,    34,    35,   495,   495,   146,  1967,     9,
    2220,  1727,   296,   495,   215,   458,   495,   185,   186,    97,
      36,  2428,  1738,   499,   164,  1757,  1985,   374,  1738,   444,
     282,   528,   164,   280,  1738,   231,  2220,  1753,  1325,   495,
     414,   390,   457,  1753,   393,  2337,  2220,   289,   495,  1753,
    1752,  2010,  1752,    86,   499,  1771,    87,   414,  2017,    54,
    2352,    54,   414,  1752,  1752,  1752,   481,  1233,   261,   414,
    1786,  1787,   496,   504,   414,  2347,   457,   150,    93,   497,
     495,  2040,   250,   251,   252,   253,   254,   255,   142,  1805,
     258,   259,    67,   270,   270,   495,    36,  1384,   340,    36,
       9,   495,   344,    35,   412,  2289,  1822,  1823,  1824,     6,
     412,   493,   430,   493,    11,  2289,   414,   414,    15,  2620,
     414,   414,   499,    20,    21,    22,    23,    24,   453,   495,
      27,    11,   374,    30,    31,   342,   499,    34,    35,   499,
     115,   494,   504,   412,   495,     8,   275,  1863,    11,   495,
     482,   483,   484,   414,   486,   487,   488,   489,   490,   491,
     169,   178,   160,   496,   495,    36,   438,   213,   377,   499,
     222,   307,   286,   307,   495,   499,   270,   222,    41,   287,
     222,   291,    79,  1899,   283,    48,   323,  1353,  2398,    86,
      87,    88,    89,    90,   450,   495,   364,   365,   173,   441,
    2159,   150,   150,   495,   457,   270,   285,   704,  2497,  1375,
      73,  1377,   493,   496,  2398,   478,   478,   496,   496,   496,
     496,   285,   403,   270,  2398,    36,    36,   494,  1944,   497,
    1946,   169,   496,   478,   169,  1522,   496,   496,   496,  2947,
    1942,   496,   414,   153,  2428,   496,   496,   496,  1964,   454,
     496,  1967,   496,   444,  2428,   528,   495,  1973,  1424,   495,
    1976,  2220,   495,  1979,  2491,   495,   454,   484,   499,  1985,
    1986,  1987,  1988,  1989,   528,   285,  1992,  1993,  1994,  1995,
    1996,  1997,  1998,  1999,  2000,  2001,  2052,  2019,   480,  2005,
    2006,   436,   286,   414,  2010,   270,   286,    94,  2587,  2015,
     275,  2017,   286,  2019,   270,   241,   495,   475,   476,   150,
     198,   174,  2028,   289,   811,  2031,  2500,  2033,  2050,   150,
     150,   414,   414,   414,  2040,  2041,  2500,   190,  2044,  2045,
    2289,   414,   195,  2049,  2050,  2067,   277,  1503,  1504,   496,
     495,   494,    36,   318,   277,   342,   496,   499,   457,  2065,
      36,  2067,  1639,   283,   285,  2065,   150,  2067,   150,   334,
     275,  2065,  2078,  2067,   494,   141,   494,   169,  2657,   232,
      11,   164,  2088,   170,   482,   483,   484,   496,   486,   487,
     488,   489,   490,   491,   496,   496,   169,   545,  2104,   547,
     548,  2738,   495,   454,  2585,   496,  2897,   295,   403,   169,
     481,  1688,   499,   178,   348,   443,   496,   204,   496,    84,
    2620,   495,   570,   286,  2723,   150,   173,   499,   145,  1706,
     495,   425,   496,   220,   287,   496,   496,   495,    36,   496,
      79,   704,   159,   230,   405,  1722,  2620,   164,  2154,  2398,
     495,   494,  2158,  2159,  2160,   169,  2620,   438,   499,   220,
     704,  1738,   496,   496,   495,   495,   431,  2672,   294,   496,
     496,   220,   496,   438,   292,  1752,  1753,   264,   495,  2428,
    1757,   495,   503,    54,  2658,  2690,   182,    36,   484,  2689,
    2784,  2828,  2692,   496,  2658,  2187,   213,   457,   285,   200,
     188,   988,   484,   275,   275,   497,    55,   414,   497,    36,
     414,   532,   270,   107,  2220,  2689,   233,   496,  2692,  2211,
     497,   497,   497,   495,   497,  2689,   379,   497,  2692,   497,
     497,  2237,   285,   497,   497,   497,    36,   169,   497,   497,
     497,   457,   497,   497,   497,   497,   497,   497,   811,   497,
     497,  2500,   497,   497,   497,   497,  2807,   106,  2809,   495,
     497,   220,   495,  2744,   351,   282,   495,   811,    86,   131,
     591,   495,   456,   222,   291,  1731,   495,  2283,  2284,  2902,
     334,   496,  2288,  2289,   495,    81,   115,  2293,    36,   150,
    2296,  2297,    73,   496,  2799,  2301,   122,  2896,   485,   150,
      36,   496,   304,    36,   491,   356,   356,   494,   499,   495,
     495,   498,  2863,   495,   495,  2321,   503,   325,   495,  2325,
     443,  2321,    73,    36,   173,  2325,   479,  2321,   187,   438,
     425,  2325,    67,   486,   487,   488,   489,   490,   491,   495,
     288,  2347,  2823,   530,   531,   532,    67,    54,   197,   495,
     495,   438,   499,    36,   802,   374,   484,  2349,  2350,   438,
     547,   809,   275,   187,   246,  1942,   495,    36,   425,   288,
     495,  2620,   288,   495,  2380,   358,   268,   496,   495,   566,
     567,   568,   569,  2389,   571,   285,   496,     9,  1175,  1176,
     341,   200,  2398,   355,   285,   582,   285,  2897,   496,   248,
     120,   495,     8,  1190,   591,    11,   436,   256,    33,  2658,
      16,    17,    18,   430,     9,   602,   496,    22,  2141,   268,
     599,  1456,  2428,  2897,  1880,   988,  2154,   614,  1817,  2351,
    2102,  2822,  2561,  2897,  1890,  1891,  1892,  2893,  2392,   887,
    2689,  2196,  2019,  2692,   988,  2899,  2972,  2730,   896,  2946,
     299,  2934,  2641,     8,  1910,  1811,    11,   975,  2201,  1823,
    2896,   909,  1875,   650,   651,   652,  2944,  2158,  1808,  2894,
    1223,  1175,   920,  2050,   922,   923,   493,  1879,  1944,   496,
     497,  2491,  2474,  2184,  1940,  2491,    41,   941,  2065,  1771,
    2067,  2497,  1427,    48,  2500,   963,  2796,   346,  2504,   914,
    2817,   962,  2929,  1786,  1399,  2876,  2512,  2513,    36,  2082,
    2516,  2710,  2811,  1426,   965,  2343,  2067,  2312,    73,   368,
    1753,  2327,  2686,  2529,  2065,  2786,  1313,    55,  2785,  2529,
     528,  2803,  2538,  2804,  1275,  2529,  1275,  2543,  2538,   388,
    2546,  2557,  2879,  2543,  2538,  1275,  2546,  2553,  2554,  2543,
    1275,  2880,  2546,  2917,  1351,  1665,  1772,  1266,  1706,  2565,
    1703,  2567,  1495,  1597,  1741,  2565,  1354,  2081,  1884,  2778,
    1235,  2565,   947,  1587,  1376,  2103,  1377,    -1,   106,   107,
      -1,  2587,    -1,    -1,    -1,    -1,    -1,   115,   143,    -1,
      -1,    -1,    -1,    -1,   802,    -1,    -1,    -1,    -1,    -1,
      -1,   809,    -1,    -1,    -1,    -1,  2062,  2063,  2064,    -1,
    2187,   217,  1175,  1176,  2620,    -1,    -1,    -1,    -1,   174,
     941,    -1,    -1,    -1,    -1,    -1,    -1,  1190,   815,    -1,
      -1,  1175,  1176,    -1,  2211,   190,    -1,    -1,    -1,  2631,
     195,    36,    -1,    -1,    -1,   173,  1190,  2653,  2897,    -1,
      -1,  2657,  2658,  2653,    -1,  1442,    -1,    -1,    -1,  2653,
      55,    -1,  2654,    -1,  2120,    -1,    -1,    -1,    -1,   197,
      -1,    -1,    -1,    -1,    -1,  2681,  2698,   232,    -1,  2685,
      -1,   287,    -1,  2689,    -1,  2685,  2692,    -1,   896,    -1,
      -1,  2685,  2698,    -1,    -1,   882,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   704,  2713,    -1,    -1,
      -1,   106,   920,    -1,   922,   923,    -1,  2723,    -1,    -1,
     248,  2727,  2728,    -1,    -1,    -1,    -1,    -1,   256,    -1,
      -1,    -1,   287,    -1,    -1,  2191,    -1,   924,    -1,    -1,
     268,    -1,   270,    -1,  2321,    -1,    -1,    -1,  2325,    -1,
    1313,    -1,    -1,    -1,   941,   942,    -1,    -1,    -1,  1546,
     947,   948,   949,    -1,    -1,    -1,    -1,  2759,  2224,  1313,
      -1,   299,  2349,  2350,    -1,    -1,    -1,    -1,    -1,    -1,
    2786,   989,    -1,    -1,   992,   993,  2786,   974,   975,    -1,
      -1,    -1,  2786,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     987,  2807,   197,  2809,  1591,  2811,    -1,    -1,    -1,  2815,
      -1,    -1,    -1,   811,    -1,    -1,  2822,  1004,   346,    -1,
      -1,  1008,  2822,    -1,   379,    -1,  2818,  1275,  2822,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2843,    -1,    -1,
     368,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2304,  2305,
    2306,  2307,    -1,   248,    -1,    -1,    -1,  2863,    -1,    -1,
     388,   256,   390,    -1,    -1,   393,    -1,    -1,    -1,    -1,
    2876,    -1,    -1,   268,    -1,    -1,   482,   483,   484,  1442,
     486,   487,   488,   489,   490,   491,    -1,    -1,    -1,    -1,
    2896,  2897,    -1,    -1,    -1,    -1,    -1,  2474,  1442,    -1,
      -1,    -1,    -1,    -1,   299,    -1,  1227,  2913,  1229,    -1,
    2916,  2917,    -1,  2913,  2906,    -1,    -1,    -1,  1366,  2913,
      -1,    -1,    -1,    -1,   479,    -1,    -1,    -1,    -1,    -1,
      -1,   486,   487,   488,   489,   490,   491,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2951,    -1,    -1,    -1,    -1,
      -1,   346,    -1,    -1,  1141,    -1,    -1,    -1,    -1,    -1,
      -1,  2538,  1149,    -1,    -1,  1173,  2543,   495,    -1,  2546,
      -1,    -1,  1159,   368,    -1,    -1,  1184,    -1,  1186,    -1,
      -1,    -1,    -1,  1546,    -1,    -1,    -1,  1195,    -1,    -1,
     988,  2997,    -1,   388,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1546,    -1,  1212,  1192,     8,    -1,    -1,    11,
      -1,    -1,    -1,    -1,    16,    17,    18,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1591,    -1,
      -1,    33,  1240,  1241,    -1,    -1,  1223,  1224,    -1,  1226,
    1227,    -1,  1229,  1230,    -1,    -1,  1233,  1591,    -1,    -1,
      -1,    -1,    -1,    -1,  2631,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,     0,    -1,  1272,  1273,    -1,    -1,  1276,  1277,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2654,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1280,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1291,    -1,    -1,    -1,  2685,    -1,
      -1,    -1,  1899,  1434,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2698,    -1,  1444,    -1,  1446,  1574,    -1,  1449,    -1,
    1578,    -1,    -1,    -1,  1455,  1322,  1457,    -1,  2594,  1587,
      -1,     8,    -1,    -1,    11,    -1,    -1,    -1,  1469,    -1,
      -1,    -1,   171,  1474,    -1,    93,   175,  1478,  1479,  1480,
    1481,    -1,  1483,  1484,    -1,    -1,  1353,  1354,    -1,    -1,
      -1,    -1,    -1,    -1,    41,    -1,  2632,  1175,  1176,   198,
    1967,    48,  2759,    -1,    -1,    -1,    -1,    -1,  1375,    -1,
    1377,    -1,  1190,    -1,  2650,    -1,    -1,    -1,  1985,  1386,
      -1,  1388,  1410,  1411,    -1,    -1,    73,   145,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   217,    -1,   236,    -1,    -1,
      -1,   159,    -1,  2010,   243,    -1,   164,    -1,    -1,    -1,
    2017,   169,    -1,    -1,    -1,    -1,    -1,  1424,    -1,    -1,
     178,  2818,    -1,    -1,   182,    -1,  1433,  1434,    -1,    -1,
      -1,    -1,    -1,  2040,  1462,    -1,    -1,  1444,  1445,  1446,
    1447,    -1,  1449,    -1,  1472,  2721,    -1,  1475,  1455,    -1,
    1457,   290,    -1,    -1,    -1,   213,   143,    -1,    -1,    -1,
      -1,  1468,  1469,    -1,    -1,   287,  1473,  1474,    -1,    -1,
      -1,  1478,  1479,  1480,  1481,   233,  1483,  1484,    -1,    -1,
      -1,    -1,  2758,    -1,    -1,    -1,    -1,   174,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1313,  1503,  1504,  1505,    -1,
      -1,    -1,    -1,   190,    -1,    -1,    -1,    -1,   195,  2906,
      -1,    -1,    -1,  1520,    -1,    -1,  1899,    -1,    -1,  1547,
    1548,   360,    -1,    -1,   282,    -1,    -1,   285,     8,    -1,
      -1,    11,    -1,   291,    -1,  1899,    16,    17,    18,    -1,
      -1,    -1,    -1,    -1,    -1,   232,  1574,    -1,    -1,    -1,
      -1,    -1,  2159,    33,    -1,    -1,    -1,    -1,    -1,  1587,
    1828,    -1,    -1,   109,   110,    -1,    -1,   325,   407,    -1,
     409,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1967,    -1,   425,    -1,    -1,    -1,
     348,    -1,   431,    -1,    -1,   434,    -1,    -1,    -1,    -1,
     287,    -1,  1985,  1967,    -1,  1873,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2220,    -1,    -1,    -1,    -1,    -1,    -1,
    1888,  1985,    -1,    -1,  1442,    -1,    -1,  2010,    -1,    -1,
      -1,    -1,    -1,    -1,  2017,    -1,    -1,    -1,    -1,   185,
     186,    -1,    -1,    -1,    -1,   403,  2010,    -1,    -1,    -1,
      -1,  1658,    -1,  2017,    -1,    -1,    -1,  2040,  1665,    -1,
     482,   483,   484,    -1,   486,   487,   488,   489,   490,   491,
      -1,    -1,   430,    -1,    -1,    -1,  2040,    -1,  1946,    -1,
     438,    -1,  2289,  1951,    -1,  1953,    -1,    -1,    -1,  1957,
    1958,    -1,   379,  1700,    -1,    -1,   454,    -1,   456,   457,
      -1,   109,   110,    -1,   250,   251,   252,   253,   254,   255,
      -1,    -1,   258,   259,    -1,  1743,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1731,    -1,    -1,    -1,  1546,    -1,
      -1,  1738,    -1,     8,    -1,   493,    11,   217,   496,   497,
     498,    16,    17,    18,    -1,    -1,  1753,    -1,  1776,  1777,
    1757,    -1,    -1,  1760,    -1,  1762,    -1,    -1,    33,    -1,
       8,    -1,  1903,    11,    -1,    -1,    -1,    -1,    16,    17,
      18,    -1,    -1,  1591,    -1,    -1,  2159,   185,   186,    -1,
      -1,    -1,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,  2398,   479,    -1,    -1,  2159,    -1,    -1,    -1,   486,
     487,   488,   489,   490,   491,    -1,  1813,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   364,   365,
      -1,  2428,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2220,    -1,    -1,
      -1,    -1,   250,   251,   252,   253,   254,   255,    -1,    -1,
     258,   259,    -1,    -1,    -1,    -1,  2220,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1875,    -1,
      -1,    -1,    -1,  1880,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1889,  1890,  1891,  1892,    -1,    -1,  1916,    -1,
      -1,  2159,     8,  2500,    -1,    11,  1903,    -1,    -1,    -1,
      16,    17,    18,  1910,    -1,    -1,  2289,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1922,  2184,    -1,     8,    -1,
      -1,    11,    -1,    -1,    -1,  2289,    16,    17,    18,   475,
     476,  1938,    -1,  1940,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   217,    33,    -1,    -1,    -1,    -1,  1955,  1956,
      -1,    41,    -1,    -1,    -1,    -1,   364,   365,    48,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   217,
      -1,  1978,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2122,    -1,    73,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   482,   483,   484,  2146,   486,   487,   488,   489,
     490,   491,   287,  2620,    -1,  2398,    -1,    -1,    -1,    -1,
    2161,  2162,  2163,  2164,  2165,  2166,  2167,  2168,  2169,  2170,
      -1,    -1,    -1,    -1,  2398,    -1,    -1,    -1,     8,   287,
      -1,    11,    -1,    -1,    -1,  2428,    -1,    -1,    -1,    -1,
      -1,  2658,    -1,    -1,    -1,  2062,  2063,  2064,  2065,    -1,
    2067,  2068,    -1,    -1,  2428,  2072,  2073,   475,   476,    -1,
      -1,    41,    -1,    -1,    -1,    -1,  2344,    -1,    48,    -1,
      -1,  1899,  2689,    -1,   174,  2692,    -1,   495,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2102,    -1,    -1,    -1,    -1,
     190,   217,    -1,    73,    -1,   195,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2120,    -1,  2122,    -1,  2500,    -1,  2126,
    2127,  2128,    -1,  2130,    -1,    -1,    -1,   217,   218,    -1,
      -1,  2159,    -1,    -1,    -1,    -1,  2500,    -1,    -1,  2146,
      -1,  2148,   232,    -1,    -1,    -1,    -1,    -1,    -1,  1967,
      -1,    -1,    -1,    -1,  2161,  2162,  2163,  2164,  2165,  2166,
    2167,  2168,  2169,  2170,    -1,    -1,    -1,  1985,    -1,    -1,
      -1,   287,    -1,   143,    -1,    -1,    -1,    -1,    -1,  2186,
     270,    -1,    -1,   273,  2191,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2010,    -1,  2201,    -1,    -1,   287,    -1,  2017,
     566,   567,  2470,    -1,   174,  2212,    -1,   482,   483,   484,
      -1,   486,   487,   488,   489,   490,   491,  2224,    -1,    -1,
     190,    -1,  2040,  2491,  2231,   195,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   482,   483,   484,  2620,   486,   487,
     488,   489,   490,   491,    -1,    -1,     8,    -1,    -1,    11,
      -1,    -1,    -1,    -1,    -1,    -1,  2620,    -1,    -1,    -1,
      -1,    -1,   232,   629,   630,     0,    -1,    -1,    -1,    -1,
      -1,    -1,  2279,    -1,    -1,  2658,    -1,    -1,    -1,    41,
      -1,    -1,    -1,    -1,    -1,    -1,    48,    -1,  2556,   379,
    2897,    -1,    -1,    -1,  2658,  2302,    -1,  2304,  2305,  2306,
    2307,    -1,    -1,    -1,  2311,  2312,  2689,  2314,    -1,  2692,
    2317,    73,    -1,    -1,  2321,    -1,    -1,   287,  2325,    -1,
      -1,    -1,    -1,    -1,  2331,  2689,    -1,    -1,  2692,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2347,  2159,    -1,    -1,  2351,    -1,    -1,    -1,    -1,  2356,
      -1,    -1,  2620,    -1,    -1,  2362,    -1,    -1,    93,  2387,
      -1,  2368,    -1,    -1,  2392,    -1,   482,   483,   484,    -1,
     486,   487,   488,   489,   490,   491,    -1,    -1,    -1,    -1,
      -1,   143,    -1,    -1,    -1,    -1,  2393,    -1,    -1,   479,
      -1,    -1,   482,   483,   484,     0,   486,   487,   488,   489,
     490,   491,  2220,    -1,    -1,    -1,  2434,  2435,    -1,   379,
     145,    -1,   174,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   159,    -1,    -1,    -1,   190,   164,
      -1,    -1,    -1,   195,   169,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   178,   810,  2586,    -1,   182,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2462,    67,    -1,    -1,    -1,
      -1,   827,    73,    -1,    -1,    -1,  2473,    -1,    -1,    -1,
     232,  2289,    -1,    -1,    -1,    86,    -1,  2484,   213,    -1,
    2621,  2622,    -1,    -1,    -1,  2753,    -1,    -1,    93,    -1,
     856,    -1,    -1,    -1,    -1,    -1,    -1,  2638,   233,    -1,
      -1,    -1,    -1,    -1,   115,    -1,   117,    -1,    -1,   479,
     876,   877,   878,  2520,  2897,   881,   486,   487,   488,   489,
     490,   491,  2529,  2530,    -1,   287,  2533,    -1,    -1,  2536,
      -1,  2538,    -1,  2897,    -1,    -1,  2543,    -1,   904,  2546,
     145,  2548,    -1,    -1,  2551,    -1,    -1,   282,    -1,    -1,
     285,    -1,    -1,    -1,   159,    -1,   291,    -1,  2565,   164,
      -1,    -1,   173,    -1,   169,    -1,    -1,    -1,    -1,    -1,
      -1,  2712,    -1,   178,    -1,    -1,    -1,   182,  2585,  2586,
    2398,  2609,  2610,    -1,    -1,    -1,    -1,  2594,    -1,   955,
     325,   202,  2620,   959,   960,    -1,    -1,    -1,    -1,  2740,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   213,    -1,
    2428,    -1,    -1,   348,  2621,  2622,    -1,   379,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2632,    -1,  2634,   233,  2897,
      -1,  2638,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2650,    -1,    -1,  2653,  1013,    -1,    -1,
      -1,    -1,    -1,    -1,  1020,    -1,    -1,    -1,    -1,   270,
      -1,    -1,    -1,    -1,   275,  2672,    -1,    -1,   403,    -1,
      -1,    -1,    -1,    -1,    -1,  1041,    -1,   282,  2685,    -1,
     285,    -1,  2500,  2690,    -1,    -1,   291,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   430,    -1,    -1,    -1,    -1,
    2707,    -1,    -1,   438,    -1,  2712,    -1,   318,    -1,    -1,
      -1,    -1,    -1,    -1,  2721,    -1,    -1,   479,    -1,   454,
     325,   456,   457,   334,   486,   487,   488,   489,   490,   491,
      -1,    -1,    -1,  2740,    -1,    -1,    -1,  2744,    -1,    -1,
      -1,    -1,    -1,   348,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2758,    -1,    -1,    -1,    -1,    -1,    -1,   493,    -1,
      -1,   496,   497,   498,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,     8,    -1,    -1,    11,    -1,  2786,
      -1,    15,    16,    17,    18,    -1,    -1,    -1,  2795,    -1,
    1156,    -1,  2799,    -1,    -1,    -1,  2803,    -1,   403,    33,
      -1,    -1,  2620,    -1,    -1,    -1,    -1,    41,    -1,    -1,
      -1,    -1,    -1,    -1,    48,  2822,  2823,  2824,  2825,    -1,
     431,    -1,    -1,    -1,    -1,   430,    -1,   438,    -1,    -1,
      -1,    -1,    -1,   438,    -1,    -1,    -1,    -1,    -1,    73,
    2658,    -1,    -1,    -1,    -1,  2852,    -1,    -1,    -1,   454,
      -1,   456,   457,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2867,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2897,
      -1,  2689,  2879,    -1,  2692,    -1,    -1,    21,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2893,    -1,   493,    -1,
      -1,   496,   497,   498,    -1,    -1,    -1,    -1,    -1,    -1,
    2907,    -1,    -1,  1269,    -1,    -1,  2913,    -1,    -1,    -1,
      -1,    -1,    -1,  1279,    -1,  1281,    -1,    -1,  1284,  1285,
    1286,  1287,  2929,  2930,    -1,    -1,    -1,    -1,    -1,    -1,
      74,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     174,    -1,  1308,    -1,    -1,    -1,    90,    -1,  1314,  1315,
    1316,  1317,  1318,    -1,    -1,    -1,   190,  1323,  1324,    -1,
      -1,   195,  1328,    -1,    -1,    -1,  1332,    -1,    -1,  1335,
    1336,  1337,  1338,  1339,  1340,  1341,  1342,  1343,    -1,    -1,
    1346,    -1,    -1,   217,   218,    -1,    -1,     0,  1354,    -1,
    1356,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   232,    -1,
     144,    -1,    -1,    -1,    -1,    -1,    19,   897,    -1,    -1,
     154,    -1,    -1,  1379,    -1,    -1,    29,    -1,    31,    32,
      -1,    -1,   166,    -1,    -1,    -1,    -1,   171,    -1,    -1,
      -1,    -1,    -1,    -1,    47,    -1,   270,    -1,    -1,   273,
      -1,    -1,    -1,    56,  1410,  1411,    -1,   937,    -1,    -1,
      -1,    -1,    -1,   287,   198,    68,   290,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    79,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,     3,    -1,    91,  2897,
      93,     8,    -1,    -1,    11,    -1,    -1,    -1,    15,    16,
      17,    18,    -1,    -1,    -1,    -1,    -1,    -1,   111,   243,
      -1,    -1,    -1,   247,    -1,    -1,    33,    -1,    -1,    36,
      -1,    -1,   125,    -1,    41,    -1,    -1,    -1,    -1,    -1,
      -1,    48,   135,  1489,    -1,    -1,  1492,  1493,   141,  1495,
      -1,    -1,    -1,    -1,    -1,    -1,   149,    -1,   151,   152,
      -1,    -1,    -1,    -1,    -1,   379,    73,    -1,    -1,    -1,
      -1,    -1,   165,    -1,    -1,  1045,    -1,    -1,    -1,    -1,
    1526,    -1,  1052,    -1,    -1,    -1,   310,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    23,    -1,    -1,
     324,   194,    -1,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    -1,    -1,   209,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    55,
      -1,    -1,    -1,   357,    -1,    -1,   360,    -1,    -1,    -1,
      -1,    -1,   235,  1589,   368,    -1,    -1,   371,    -1,    -1,
    1596,    -1,    -1,    -1,    -1,  1601,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   479,   390,   174,   482,   483,
     484,    -1,   486,   487,   488,   489,   490,   491,    -1,   403,
     106,    -1,    -1,   190,    -1,   499,   410,    -1,   195,    -1,
      -1,    -1,    -1,  1639,    -1,   419,    -1,    -1,    -1,    -1,
      -1,   425,    -1,    -1,  1650,    -1,  1652,  1653,    -1,   135,
     217,   218,    -1,    -1,  1660,    -1,    -1,    -1,  1664,   312,
      -1,  1667,   315,    -1,    -1,   232,   450,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   344,    -1,    -1,    -1,    -1,  1702,    -1,    -1,  1705,
     353,  1707,    -1,   270,    -1,    -1,   273,    -1,    -1,    -1,
      -1,   197,    -1,    -1,   367,    -1,    -1,    -1,    -1,    -1,
     287,   374,    -1,   290,     8,   378,    -1,    11,    -1,    -1,
      -1,    15,    16,    17,    18,   388,    -1,  1267,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   399,    -1,  1278,    33,
     403,    -1,  1282,    -1,    -1,    -1,    -1,    41,  1288,  1289,
    1290,    -1,   248,    -1,    48,  1771,    -1,  1297,    -1,     8,
     256,    -1,    11,    -1,    -1,    -1,    15,    16,    17,    18,
    1786,  1787,   268,    -1,    -1,    -1,   439,    -1,    -1,    73,
      -1,   444,    -1,    -1,    33,    -1,    -1,    36,    -1,  1805,
      -1,    -1,    41,   289,   457,    -1,    -1,    -1,    -1,    48,
      -1,    -1,   379,   299,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1352,    -1,    -1,    -1,    -1,    -1,   481,    -1,
      -1,    -1,    -1,    -1,    73,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   495,    -1,    -1,   498,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   340,    -1,    -1,  1863,   344,    -1,
     346,    -1,    -1,    -1,    -1,  1395,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1409,
      -1,    -1,   368,    -1,  1414,    -1,    -1,    -1,   374,    -1,
     174,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   388,    -1,    -1,    -1,   190,    -1,    -1,    -1,
      -1,   195,   479,    -1,    -1,   482,   483,   484,    -1,   486,
     487,   488,   489,   490,   491,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   217,   218,   174,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   232,    -1,
      -1,   190,    -1,    -1,    -1,   441,   195,    -1,  1964,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1973,    -1,    -1,
    1976,    -1,    -1,  1979,    -1,    -1,    -1,    -1,   217,   218,
      -1,    -1,    -1,    -1,    -1,    -1,   270,    -1,    -1,   273,
      -1,    -1,    -1,   232,    -1,    -1,    -1,    -1,    -1,  2005,
    2006,    -1,    -1,   287,    -1,    -1,   290,    -1,    -1,    -1,
      -1,    -1,    -1,  2019,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2028,    -1,    -1,  2031,    -1,  2033,    -1,    -1,
      -1,   270,    -1,    -1,   273,  2041,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2049,  2050,    -1,    -1,    -1,   287,    -1,
       8,   290,    -1,    11,    -1,    -1,    -1,    15,    16,    17,
      18,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1599,
      -1,    -1,  2078,    -1,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    -1,  2088,    41,    -1,    -1,    -1,    -1,  1618,    -1,
      48,    -1,    -1,    -1,    -1,   379,    -1,    -1,  2104,    -1,
      -1,    -1,    -1,    -1,    -1,  1635,    -1,  1637,  1638,    -1,
    1640,    -1,  1642,    -1,    -1,    73,  1646,    -1,    -1,  1649,
      -1,    -1,    -1,    -1,  1654,    -1,     8,  1657,    -1,    11,
      -1,    -1,    -1,    15,    16,    17,    18,    -1,    -1,  1669,
     379,    -1,    -1,  1673,  1674,  1675,  1676,  1677,    -1,    -1,
      -1,    33,    -1,  1683,  1684,    -1,  1686,  1687,    -1,    41,
      -1,    -1,    -1,    -1,    -1,    -1,    48,    -1,  1698,    -1,
      -1,  1701,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1709,
    1710,  1711,  1712,  1713,  1714,  1715,  1716,  1717,  1718,    -1,
      -1,    73,    -1,    -1,    -1,   479,    -1,    -1,   482,   483,
     484,    -1,   486,   487,   488,   489,   490,   491,    -1,    -1,
      -1,    -1,   496,    -1,    -1,    -1,   174,    -1,    -1,    -1,
    1750,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2237,   190,    -1,    -1,    -1,    -1,   195,    -1,    -1,
     479,    -1,    -1,   482,   483,   484,    -1,   486,   487,   488,
     489,   490,   491,    -1,    -1,    -1,    -1,   496,    -1,   217,
     218,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   232,    -1,    -1,  2283,  2284,    -1,
      -1,    -1,  2288,    -1,    -1,    -1,    -1,  2293,    -1,    -1,
    2296,  2297,   174,    -1,    -1,  2301,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   190,    -1,
      -1,    -1,   270,   195,    -1,   273,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   287,
      -1,    -1,   290,    -1,    -1,   217,   218,    -1,  1868,  1869,
    1870,  2347,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     232,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1908,    -1,
      -1,    -1,    -1,  2389,    -1,    -1,    -1,    -1,   270,    -1,
      -1,   273,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   287,    -1,    -1,   290,     8,
      -1,    -1,    11,    -1,    -1,    -1,    15,    16,    17,    18,
      -1,   379,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1963,    33,    -1,    -1,    -1,    -1,  1969,
      -1,    -1,    41,    -1,    -1,    -1,    -1,    -1,    -1,    48,
      -1,    -1,  1982,  1983,  1984,    -1,  1986,  1987,  1988,  1989,
      -1,    -1,  1992,  1993,  1994,  1995,  1996,  1997,  1998,  1999,
    2000,  2001,  2002,    -1,    73,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2020,    -1,    -1,  2023,    -1,  2025,    -1,   379,  2504,  2029,
    2030,    -1,    -1,    -1,    -1,    -1,  2512,  2513,    -1,    -1,
    2516,    -1,    -1,  2043,  2044,  2045,  2046,    -1,  2048,    -1,
      -1,   479,    -1,    -1,   482,   483,   484,    -1,   486,   487,
     488,   489,   490,   491,    -1,    -1,    -1,    -1,   496,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2553,  2554,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2567,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   174,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   190,    -1,  2123,    -1,    -1,   195,   479,    -1,    -1,
     482,   483,   484,    -1,   486,   487,   488,   489,   490,   491,
      -1,    -1,    -1,    -1,   496,    -1,    -1,     8,   217,   218,
      11,    -1,    -1,    -1,    15,    16,    17,    18,    -1,    -1,
      -1,    -1,    -1,   232,    -1,    -1,     8,    -1,    -1,    11,
      -1,    23,    33,    15,    16,    17,    18,    29,    -1,    -1,
      41,    -1,    -1,    -1,    36,    -1,    -1,    48,    -1,    -1,
      -1,    33,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    41,
      -1,   270,    -1,    55,   273,  2681,    48,    -1,    -1,    -1,
      -1,    -1,    73,    -1,    -1,    -1,    -1,    -1,   287,    -1,
      -1,   290,  2698,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    73,    -1,    -1,    -1,    -1,    -1,  2713,  2238,    -1,
      -1,    -1,  2242,  2243,    -1,  2245,    -1,    -1,  2248,  2249,
    2250,  2251,  2728,    -1,   106,  2255,  2256,  2257,  2258,  2259,
    2260,  2261,  2262,  2263,  2264,  2265,  2266,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2276,    -1,    -1,    -1,
      -1,    -1,  2282,   135,    -1,  2285,    -1,  2287,    -1,    -1,
      -1,  2291,    -1,    -1,  2294,  2295,    -1,    -1,  2298,  2299,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     379,    -1,    -1,   174,     8,    -1,    -1,    11,    -1,    -1,
      -1,    -1,    16,    17,    18,    -1,    -1,    -1,    -1,   190,
      -1,    -1,   174,    -1,   195,  2811,    -1,    -1,  2338,  2815,
      -1,    -1,    -1,    -1,    -1,   197,  2346,    41,   190,    -1,
      -1,    -1,    -1,   195,    48,    -1,   217,   218,    -1,  2359,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2843,    -1,    -1,
      -1,   232,    -1,    -1,    -1,   217,   218,    -1,    -1,    73,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     232,    -1,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,
    2876,    -1,    -1,    -1,   256,    -1,    -1,    -1,    -1,   270,
     479,    -1,   273,   482,   483,   484,   268,   486,   487,   488,
     489,   490,   491,    -1,    -1,    -1,   287,   496,   270,   290,
      -1,   273,    -1,    -1,    -1,    -1,    -1,   289,    -1,    -1,
    2916,  2917,    -1,    -1,    -1,   287,    -1,   299,   290,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2951,    -1,    -1,    -1,    -1,
     174,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   340,    -1,
      -1,    -1,   344,  2493,   346,    -1,   190,  2497,    -1,    -1,
      -1,   195,    -1,    -1,    -1,    -1,  2506,  2507,  2508,    -1,
      -1,  2511,    -1,    -1,  2514,  2515,   368,    -1,   379,  2519,
      -1,  2997,   374,   217,   218,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   388,   379,   232,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   270,    -1,    -1,   273,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2587,    -1,   441,
      -1,    -1,    -1,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2606,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   479,    -1,
      -1,   482,   483,   484,    -1,   486,   487,   488,   489,   490,
     491,    -1,    -1,    -1,    -1,   496,    -1,   479,    -1,    -1,
     482,   483,   484,    -1,   486,   487,   488,   489,   490,   491,
      -1,    -1,    -1,    -1,   496,    -1,  2656,  2657,    -1,    -1,
      -1,    -1,  2662,  2663,  2664,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   379,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2705,  2706,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2719,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2731,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2780,    -1,    -1,    -1,    -1,   479,    -1,    -1,   482,   483,
     484,    -1,   486,   487,   488,   489,   490,   491,  2798,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2820,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2834,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
      -1,  2881,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    27,    28,    29,    30,    -1,
      -1,    -1,    -1,    35,  2904,    -1,    38,    39,    -1,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    74,    -1,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,  2954,    87,    88,    89,    90,    91,
      92,    -1,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,   130,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,    -1,   160,   161,
     162,   163,    -1,   165,    -1,   167,   168,    -1,   170,   171,
     172,   173,   174,   175,    -1,   177,    -1,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,    -1,   196,   197,   198,   199,   200,   201,
      -1,   203,   204,   205,   206,   207,   208,   209,   210,   211,
     212,    -1,   214,    -1,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,    -1,    -1,   229,   230,   231,
     232,    -1,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
      -1,   283,   284,    -1,    -1,   287,   288,   289,    -1,    -1,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,    -1,   309,   310,   311,
     312,   313,   314,   315,   316,   317,    -1,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,   328,   329,   330,   331,
     332,   333,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,    -1,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,    -1,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,    -1,   404,   405,   406,   407,   408,   409,   410,    -1,
     412,   413,    -1,    -1,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,    -1,    -1,
     432,   433,   434,   435,   436,   437,    -1,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,    -1,    -1,   455,    -1,    -1,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,    -1,    -1,
      -1,    -1,    -1,    -1,   486,   487,   488,    -1,    -1,    -1,
      -1,   493,    -1,   495,   496,    -1,    -1,    -1,   500,    -1,
     502,   503,     3,     4,     5,     6,     7,     8,     9,    10,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    35,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,    -1,   160,
     161,   162,   163,    -1,   165,    -1,   167,   168,    -1,   170,
     171,   172,   173,   174,   175,    -1,   177,    -1,   179,   180,
     181,    -1,   183,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   194,    -1,   196,   197,   198,   199,   200,
     201,    -1,   203,   204,   205,   206,   207,   208,   209,   210,
     211,   212,    -1,   214,    -1,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,    -1,    -1,   229,   230,
     231,   232,    -1,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,    -1,   283,   284,    -1,    -1,   287,   288,   289,    -1,
      -1,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,    -1,   319,   320,
     321,   322,   323,   324,    -1,   326,   327,   328,   329,   330,
     331,   332,   333,    -1,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,    -1,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,    -1,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,   413,    -1,    -1,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,    -1,
      -1,   432,   433,   434,   435,   436,   437,    -1,   439,   440,
     441,   442,   443,   444,   445,    -1,   447,   448,   449,   450,
     451,   452,    -1,    -1,   455,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,    -1,
     481,    -1,    -1,    -1,    -1,   486,   487,    -1,    -1,    -1,
      -1,    -1,   493,    -1,   495,   496,    -1,    -1,    -1,   500,
      -1,   502,   503,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    35,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    74,    -1,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,    -1,
     160,   161,   162,   163,    -1,   165,    -1,   167,   168,    -1,
     170,   171,   172,   173,   174,   175,    -1,   177,    -1,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,    -1,   196,   197,   198,   199,
     200,   201,    -1,   203,   204,   205,   206,   207,   208,   209,
     210,   211,   212,    -1,   214,    -1,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,    -1,    -1,   229,
     230,   231,   232,    -1,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,    -1,   283,   284,    -1,    -1,   287,   288,   289,
      -1,    -1,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,    -1,   309,
     310,   311,   312,   313,   314,   315,   316,   317,    -1,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,    -1,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,   413,    -1,    -1,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
      -1,    -1,   432,   433,   434,   435,   436,   437,    -1,   439,
     440,   441,   442,   443,   444,   445,    -1,   447,   448,   449,
     450,   451,   452,    -1,    -1,   455,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
      -1,   481,    -1,    -1,    -1,    -1,   486,   487,    -1,    -1,
      -1,    -1,    -1,   493,    -1,   495,    -1,    -1,    -1,    -1,
     500,    -1,   502,   503,     3,     4,     5,     6,     7,     8,
       9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    35,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    74,    -1,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      89,    90,    91,    92,    -1,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,   116,    -1,   118,
     119,   120,   121,   122,   123,    -1,   125,   126,   127,   128,
     129,    -1,    -1,   132,   133,   134,   135,   136,    -1,   138,
     139,   140,    -1,   142,   143,   144,    -1,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
      -1,   160,   161,   162,   163,    -1,   165,    -1,   167,   168,
     169,   170,   171,   172,   173,   174,   175,    -1,   177,    -1,
     179,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,    -1,   196,   197,   198,
     199,   200,   201,    -1,   203,   204,   205,   206,   207,   208,
     209,   210,   211,   212,    -1,   214,    -1,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,    -1,   228,
     229,   230,   231,   232,    -1,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,    -1,   283,   284,    -1,    -1,   287,   288,
     289,    -1,    -1,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,    -1,
     309,   310,   311,   312,   313,   314,   315,   316,   317,    -1,
     319,   320,   321,   322,   323,   324,    -1,   326,   327,   328,
     329,   330,   331,   332,   333,    -1,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,    -1,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,    -1,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,    -1,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,    -1,   401,   402,    -1,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,   413,    -1,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,    -1,    -1,   432,   433,   434,   435,   436,   437,    -1,
     439,   440,   441,   442,   443,   444,   445,    -1,   447,   448,
     449,   450,   451,   452,    -1,    -1,   455,    -1,    -1,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,    -1,    -1,    -1,    -1,    -1,    -1,   486,   487,    -1,
      -1,    -1,    -1,    -1,   493,    -1,   495,    -1,    -1,    -1,
      -1,   500,    -1,   502,   503,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    34,    35,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,    -1,   160,   161,   162,   163,    -1,   165,    -1,   167,
     168,    -1,   170,   171,   172,   173,   174,   175,    -1,   177,
      -1,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,    -1,   196,   197,
     198,   199,   200,   201,    -1,   203,   204,   205,   206,   207,
     208,   209,   210,   211,   212,    -1,   214,    -1,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,    -1,
      -1,   229,   230,   231,   232,    -1,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,    -1,   283,   284,    -1,    -1,   287,
     288,   289,    -1,    -1,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
      -1,   309,   310,   311,   312,   313,   314,   315,   316,   317,
      -1,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
      -1,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,    -1,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,   413,    -1,    -1,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,    -1,    -1,   432,   433,   434,   435,   436,   437,
      -1,   439,   440,   441,   442,   443,   444,   445,    -1,   447,
     448,   449,   450,   451,   452,    -1,    -1,   455,    -1,    -1,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,    -1,    -1,    -1,    -1,    -1,    -1,   486,   487,
      -1,    -1,    -1,    -1,    -1,   493,    -1,   495,    -1,    -1,
      -1,    -1,   500,    -1,   502,   503,     3,     4,     5,     6,
       7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      27,    28,    29,    30,    -1,    -1,    -1,    -1,    35,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    74,    -1,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    89,    90,    91,    92,    -1,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
      -1,   118,   119,   120,   121,   122,   123,    -1,   125,   126,
     127,   128,   129,    -1,    -1,   132,   133,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,    -1,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,    -1,   160,   161,   162,   163,    -1,   165,    -1,
     167,   168,    -1,   170,   171,   172,   173,   174,   175,    -1,
     177,    -1,   179,   180,   181,    -1,   183,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   194,    -1,   196,
     197,   198,   199,   200,   201,    -1,   203,   204,   205,   206,
     207,   208,   209,   210,   211,   212,    -1,   214,    -1,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
      -1,    -1,   229,   230,   231,   232,    -1,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,    -1,   283,   284,    -1,    -1,
     287,   288,   289,    -1,    -1,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,    -1,   309,   310,   311,   312,   313,   314,   315,   316,
     317,    -1,   319,   320,   321,   322,   323,   324,    -1,   326,
     327,   328,   329,   330,   331,   332,   333,    -1,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,    -1,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
      -1,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,    -1,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,    -1,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,   413,    -1,    -1,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,    -1,    -1,   432,   433,   434,   435,   436,
     437,    -1,   439,   440,   441,   442,   443,   444,   445,    -1,
     447,   448,   449,   450,   451,   452,    -1,    -1,   455,    -1,
      -1,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,    -1,    -1,    -1,    -1,    -1,    -1,   486,
     487,   488,    -1,    -1,    -1,    -1,   493,    -1,   495,    -1,
      -1,    -1,    -1,   500,    -1,   502,   503,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    27,    28,    29,    30,    -1,    -1,    -1,    -1,    35,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,    -1,   160,   161,   162,   163,    -1,   165,
      -1,   167,   168,    -1,   170,   171,   172,   173,   174,   175,
      -1,   177,    -1,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,    -1,
     196,   197,   198,   199,   200,   201,    -1,   203,   204,   205,
     206,   207,   208,   209,   210,   211,   212,    -1,   214,    -1,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,    -1,    -1,   229,   230,   231,   232,    -1,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,    -1,   283,   284,    -1,
      -1,   287,   288,   289,    -1,    -1,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,    -1,   309,   310,   311,   312,   313,   314,   315,
     316,   317,    -1,   319,   320,   321,   322,   323,   324,    -1,
     326,   327,   328,   329,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,    -1,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,    -1,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,    -1,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,   413,    -1,    -1,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,    -1,    -1,   432,   433,   434,   435,
     436,   437,    -1,   439,   440,   441,   442,   443,   444,   445,
      -1,   447,   448,   449,   450,   451,   452,    -1,    -1,   455,
      -1,    -1,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,    -1,    -1,    -1,    -1,    -1,    -1,
     486,   487,   488,    -1,    -1,    -1,    -1,   493,    -1,   495,
      -1,    -1,    -1,    -1,   500,    -1,   502,   503,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      35,    -1,    -1,    38,    39,    -1,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    74,
      -1,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    89,    90,    91,    92,    -1,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,    -1,   118,   119,   120,   121,   122,   123,    -1,
     125,   126,   127,   128,   129,    -1,    -1,   132,   133,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
      -1,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,    -1,   160,   161,   162,   163,    -1,
     165,    -1,   167,   168,    -1,   170,   171,   172,   173,   174,
     175,    -1,   177,    -1,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
      -1,   196,   197,   198,   199,   200,   201,    -1,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,    -1,   214,
      -1,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,    -1,    -1,   229,   230,   231,   232,    -1,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,    -1,   283,   284,
      -1,    -1,   287,   288,   289,    -1,    -1,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,    -1,   309,   310,   311,   312,   313,   314,
     315,   316,   317,    -1,   319,   320,   321,   322,   323,   324,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,    -1,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,    -1,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,    -1,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,    -1,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,   413,    -1,
      -1,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,    -1,    -1,   432,   433,   434,
     435,   436,   437,    -1,   439,   440,   441,   442,   443,   444,
     445,    -1,   447,   448,   449,   450,   451,   452,    -1,    -1,
     455,    -1,    -1,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,    -1,    -1,    -1,    -1,    -1,
      -1,   486,   487,   488,    -1,    -1,    -1,    -1,   493,    -1,
     495,    -1,    -1,    -1,    -1,   500,    -1,   502,   503,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    27,    28,    29,    30,    -1,    -1,    -1,
      -1,    35,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      74,    -1,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,    -1,   160,   161,   162,   163,
      -1,   165,    -1,   167,   168,    -1,   170,   171,   172,   173,
     174,   175,    -1,   177,    -1,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,    -1,   196,   197,   198,   199,   200,   201,    -1,   203,
     204,   205,   206,   207,   208,   209,   210,   211,   212,    -1,
     214,    -1,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,    -1,    -1,   229,   230,   231,   232,    -1,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,    -1,   283,
     284,    -1,    -1,   287,   288,   289,    -1,    -1,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,    -1,   309,   310,   311,   312,   313,
     314,   315,   316,   317,    -1,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,    -1,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
      -1,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,    -1,
     404,   405,   406,   407,   408,   409,   410,    -1,   412,   413,
      -1,    -1,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,    -1,    -1,   432,   433,
     434,   435,   436,   437,    -1,   439,   440,   441,   442,   443,
     444,   445,    -1,   447,   448,   449,   450,   451,   452,    -1,
      -1,   455,    -1,    -1,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,    -1,    -1,    -1,    -1,
      -1,    -1,   486,   487,    -1,    -1,    -1,    -1,    -1,   493,
      -1,   495,    -1,    -1,    -1,    -1,   500,    -1,   502,   503,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    35,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,    -1,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,    -1,   160,   161,   162,
     163,    -1,   165,    -1,   167,   168,    -1,   170,   171,   172,
     173,   174,   175,    -1,   177,    -1,   179,   180,   181,    -1,
     183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,    -1,   196,   197,   198,   199,   200,   201,    -1,
     203,   204,   205,   206,   207,   208,   209,   210,   211,   212,
      -1,   214,    -1,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,    -1,    -1,   229,   230,   231,   232,
      -1,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,    -1,
     283,   284,    -1,    -1,   287,   288,   289,    -1,    -1,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,    -1,   309,   310,   311,   312,
     313,   314,   315,   316,   317,    -1,   319,   320,   321,   322,
     323,   324,    -1,   326,   327,   328,   329,   330,   331,   332,
     333,    -1,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,    -1,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,    -1,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,    -1,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,    -1,   401,   402,
      -1,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
     413,    -1,    -1,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,    -1,    -1,   432,
     433,   434,   435,   436,   437,    -1,   439,   440,   441,   442,
     443,   444,   445,    -1,   447,   448,   449,   450,   451,   452,
      -1,    -1,   455,    -1,    -1,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,    -1,    -1,    -1,
      -1,    -1,    -1,   486,   487,    -1,    -1,    -1,    -1,    -1,
     493,    -1,   495,   496,    -1,    -1,    -1,   500,    -1,   502,
     503,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    35,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    74,    -1,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,    -1,   160,   161,
     162,   163,    -1,   165,    -1,   167,   168,    -1,   170,   171,
     172,   173,   174,   175,    -1,   177,    -1,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,    -1,   196,   197,   198,   199,   200,   201,
      -1,   203,   204,   205,   206,   207,   208,   209,   210,   211,
     212,    -1,   214,    -1,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,    -1,    -1,   229,   230,   231,
     232,    -1,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
      -1,   283,   284,    -1,    -1,   287,   288,   289,    -1,    -1,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,    -1,   309,   310,   311,
     312,   313,   314,   315,   316,   317,    -1,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,   328,   329,   330,   331,
     332,   333,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,    -1,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,    -1,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,    -1,   404,   405,   406,   407,   408,   409,   410,    -1,
     412,   413,    -1,    -1,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,    -1,    -1,
     432,   433,   434,   435,   436,   437,    -1,   439,   440,   441,
     442,   443,   444,   445,    -1,   447,   448,   449,   450,   451,
     452,    -1,    -1,   455,    -1,    -1,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,    -1,    -1,
      -1,    -1,    -1,    -1,   486,   487,    -1,    -1,    -1,    -1,
      -1,   493,    -1,   495,   496,    -1,    -1,    -1,   500,    -1,
     502,   503,     3,     4,     5,     6,     7,     8,     9,    10,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    35,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,    -1,   160,
     161,   162,   163,    -1,   165,    -1,   167,   168,    -1,   170,
     171,   172,   173,   174,   175,    -1,   177,    -1,   179,   180,
     181,    -1,   183,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   194,    -1,   196,   197,   198,   199,   200,
     201,    -1,   203,   204,   205,   206,   207,   208,   209,   210,
     211,   212,    -1,   214,    -1,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,    -1,    -1,   229,   230,
     231,   232,    -1,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,    -1,   283,   284,    -1,    -1,   287,   288,   289,    -1,
      -1,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,    -1,   319,   320,
     321,   322,   323,   324,    -1,   326,   327,   328,   329,   330,
     331,   332,   333,    -1,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,    -1,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,    -1,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,    -1,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,   413,    -1,    -1,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,    -1,
      -1,   432,   433,   434,   435,   436,   437,    -1,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,    -1,    -1,   455,    -1,    -1,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,    -1,
      -1,    -1,    -1,    -1,    -1,   486,   487,    -1,    -1,    -1,
      -1,    -1,   493,    -1,   495,    -1,    -1,    -1,    -1,   500,
      -1,   502,   503,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    35,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    74,    -1,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,    -1,
     160,   161,   162,   163,    -1,   165,    -1,   167,   168,   169,
     170,   171,   172,   173,   174,   175,    -1,   177,    -1,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,    -1,   196,   197,   198,   199,
     200,   201,    -1,   203,   204,   205,   206,   207,   208,   209,
     210,   211,   212,    -1,   214,    -1,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,    -1,    -1,   229,
     230,   231,   232,    -1,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,    -1,   283,   284,    -1,    -1,   287,   288,   289,
      -1,    -1,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,    -1,   309,
     310,   311,   312,   313,   314,   315,   316,   317,    -1,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,    -1,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,    -1,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,   413,    -1,    -1,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
      -1,    -1,   432,   433,   434,   435,   436,   437,    -1,   439,
     440,   441,   442,   443,   444,   445,    -1,   447,   448,   449,
     450,   451,   452,    -1,    -1,   455,    -1,    -1,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
      -1,    -1,    -1,    -1,    -1,    -1,   486,   487,    -1,    -1,
      -1,    -1,    -1,   493,    -1,   495,    -1,    -1,    -1,    -1,
     500,    -1,   502,   503,     3,     4,     5,     6,     7,     8,
       9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    35,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    74,    -1,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      89,    90,    91,    92,    -1,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,   116,    -1,   118,
     119,   120,   121,   122,   123,    -1,   125,   126,   127,   128,
     129,    -1,    -1,   132,   133,   134,   135,   136,    -1,   138,
     139,   140,    -1,   142,   143,   144,    -1,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
      -1,   160,   161,   162,   163,    -1,   165,    -1,   167,   168,
      -1,   170,   171,   172,   173,   174,   175,    -1,   177,    -1,
     179,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,    -1,   196,   197,   198,
     199,   200,   201,    -1,   203,   204,   205,   206,   207,   208,
     209,   210,   211,   212,    -1,   214,    -1,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,    -1,    -1,
     229,   230,   231,   232,    -1,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,    -1,   283,   284,    -1,    -1,   287,   288,
     289,    -1,    -1,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,    -1,
     309,   310,   311,   312,   313,   314,   315,   316,   317,    -1,
     319,   320,   321,   322,   323,   324,    -1,   326,   327,   328,
     329,   330,   331,   332,   333,    -1,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,    -1,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,    -1,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,    -1,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,    -1,   401,   402,    -1,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,   413,    -1,    -1,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,    -1,    -1,   432,   433,   434,   435,   436,   437,    -1,
     439,   440,   441,   442,   443,   444,   445,    -1,   447,   448,
     449,   450,   451,   452,    -1,    -1,   455,    -1,    -1,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,    -1,    -1,    -1,    -1,    -1,    -1,   486,   487,    -1,
      -1,    -1,    -1,    -1,   493,    -1,   495,    -1,    -1,    -1,
      -1,   500,    -1,   502,   503,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    35,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,    -1,   160,   161,   162,   163,    -1,   165,    -1,   167,
     168,    -1,   170,   171,   172,   173,   174,   175,    -1,   177,
      -1,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,    -1,   196,   197,
     198,   199,   200,   201,    -1,   203,   204,   205,   206,   207,
     208,   209,   210,   211,   212,    -1,   214,    -1,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,    -1,
      -1,   229,   230,   231,   232,    -1,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,    -1,   283,   284,    -1,    -1,   287,
     288,   289,    -1,    -1,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
      -1,   309,   310,   311,   312,   313,   314,   315,   316,   317,
      -1,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
      -1,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,    -1,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,    -1,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,   413,    -1,    -1,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,    -1,    -1,   432,   433,   434,   435,   436,   437,
      -1,   439,   440,   441,   442,   443,   444,   445,    -1,   447,
     448,   449,   450,   451,   452,    -1,    -1,   455,    -1,    -1,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,    -1,    -1,    -1,    -1,    -1,    -1,   486,   487,
      -1,    -1,    -1,    -1,    -1,   493,    -1,   495,    -1,    -1,
      -1,    -1,   500,    -1,   502,   503,     3,     4,     5,     6,
       7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    35,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    74,    -1,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    89,    90,    91,    92,    -1,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
      -1,   118,   119,   120,   121,   122,   123,    -1,   125,   126,
     127,   128,   129,    -1,    -1,   132,   133,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,    -1,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,    -1,   160,   161,   162,   163,    -1,   165,    -1,
     167,   168,    -1,   170,   171,   172,   173,   174,   175,    -1,
     177,    -1,   179,   180,   181,    -1,   183,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   194,    -1,   196,
     197,   198,   199,   200,   201,    -1,   203,   204,   205,   206,
     207,   208,   209,   210,   211,   212,    -1,   214,    -1,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
      -1,    -1,   229,   230,   231,   232,    -1,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,    -1,   283,   284,    -1,    -1,
     287,   288,   289,    -1,    -1,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,    -1,   309,   310,   311,   312,   313,   314,   315,   316,
     317,    -1,   319,   320,   321,   322,   323,   324,    -1,   326,
     327,   328,   329,   330,   331,   332,   333,    -1,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,    -1,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
      -1,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,    -1,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,    -1,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,   413,    -1,    -1,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,    -1,    -1,   432,   433,   434,   435,   436,
     437,    -1,   439,   440,   441,   442,   443,   444,   445,    -1,
     447,   448,   449,   450,   451,   452,    -1,    -1,   455,    -1,
      -1,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,    -1,    -1,    -1,    -1,    -1,    -1,   486,
     487,    -1,    -1,    -1,    -1,    -1,   493,    -1,   495,    -1,
      -1,    -1,    -1,   500,    -1,   502,   503,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    35,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,    -1,   160,   161,   162,   163,    -1,   165,
      -1,   167,   168,    -1,   170,   171,   172,   173,   174,   175,
      -1,   177,    -1,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,    -1,
     196,   197,   198,   199,   200,   201,    -1,   203,   204,   205,
     206,   207,   208,   209,   210,   211,   212,    -1,   214,    -1,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,    -1,    -1,   229,   230,   231,   232,    -1,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,    -1,   283,   284,    -1,
      -1,   287,   288,   289,    -1,    -1,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,    -1,   309,   310,   311,   312,   313,   314,   315,
     316,   317,    -1,   319,   320,   321,   322,   323,   324,    -1,
     326,   327,   328,   329,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,    -1,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,    -1,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,    -1,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,   413,    -1,    -1,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,    -1,    -1,   432,   433,   434,   435,
     436,   437,    -1,   439,   440,   441,   442,   443,   444,   445,
      -1,   447,   448,   449,   450,   451,   452,    -1,    -1,   455,
      -1,    -1,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,    -1,    -1,    -1,    -1,    -1,    -1,
     486,   487,    -1,    -1,    -1,    -1,    -1,   493,    -1,   495,
      -1,    -1,    -1,    -1,   500,    -1,   502,   503,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      35,    -1,    -1,    38,    39,    -1,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    74,
      -1,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    89,    90,    91,    92,    -1,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,    -1,   118,   119,   120,   121,   122,   123,    -1,
     125,   126,   127,   128,   129,    -1,    -1,   132,   133,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
      -1,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,    -1,   160,   161,   162,   163,    -1,
     165,    -1,   167,   168,    -1,   170,   171,   172,   173,   174,
     175,    -1,   177,    -1,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
      -1,   196,   197,   198,   199,   200,   201,    -1,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,    -1,   214,
      -1,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,    -1,    -1,   229,   230,   231,   232,    -1,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,    -1,   283,   284,
      -1,    -1,   287,   288,   289,    -1,    -1,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,    -1,   309,   310,   311,   312,   313,   314,
     315,   316,   317,    -1,   319,   320,   321,   322,   323,   324,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,    -1,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,    -1,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,    -1,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,    -1,   404,
     405,   406,   407,   408,   409,   410,    -1,   412,   413,    -1,
      -1,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,    -1,    -1,   432,   433,   434,
     435,   436,   437,    -1,   439,   440,   441,   442,   443,   444,
     445,    -1,   447,   448,   449,   450,   451,   452,    -1,    -1,
     455,    -1,    -1,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,    -1,    -1,    -1,    -1,    -1,
      -1,   486,   487,    -1,    -1,    -1,    -1,    -1,   493,    -1,
     495,    -1,    -1,    -1,    -1,   500,    -1,   502,   503,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    35,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      74,    -1,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,    -1,   160,   161,   162,   163,
      -1,   165,    -1,   167,   168,    -1,   170,   171,   172,   173,
     174,   175,    -1,   177,    -1,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,    -1,   196,   197,   198,   199,   200,   201,    -1,   203,
     204,   205,   206,   207,   208,   209,   210,   211,   212,    -1,
     214,    -1,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,    -1,    -1,   229,   230,   231,   232,    -1,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,    -1,   283,
     284,    -1,    -1,   287,   288,   289,    -1,    -1,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,    -1,   309,   310,   311,   312,   313,
     314,   315,   316,   317,    -1,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,    -1,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
      -1,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,    -1,
     404,   405,   406,   407,   408,   409,   410,    -1,   412,   413,
      -1,    -1,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,    -1,    -1,   432,   433,
     434,   435,   436,   437,    -1,   439,   440,   441,   442,   443,
     444,   445,    -1,   447,   448,   449,   450,   451,   452,    -1,
      -1,   455,    -1,    -1,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,    -1,    -1,    -1,    -1,
      -1,    -1,   486,   487,    -1,    -1,    -1,    -1,    -1,   493,
      -1,   495,    -1,    -1,    -1,    -1,   500,    -1,   502,   503,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    35,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,    -1,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,    -1,   160,   161,   162,
     163,    -1,   165,    -1,   167,   168,    -1,   170,   171,   172,
     173,   174,   175,    -1,   177,    -1,   179,   180,   181,    -1,
     183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,    -1,   196,   197,   198,   199,   200,   201,    -1,
     203,   204,   205,   206,   207,   208,   209,   210,   211,   212,
      -1,   214,    -1,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,    -1,    -1,   229,   230,   231,   232,
      -1,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,    -1,
     283,   284,    -1,    -1,   287,   288,   289,    -1,    -1,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,    -1,   309,   310,   311,   312,
     313,   314,   315,   316,   317,    -1,   319,   320,   321,   322,
     323,   324,    -1,   326,   327,   328,   329,   330,   331,   332,
     333,    -1,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,    -1,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,    -1,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,    -1,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,    -1,   401,   402,
      -1,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
     413,    -1,    -1,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,    -1,    -1,   432,
     433,   434,   435,   436,   437,    -1,   439,   440,   441,   442,
     443,   444,   445,    -1,   447,   448,   449,   450,   451,   452,
      -1,    -1,   455,    -1,    -1,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,    -1,    -1,    -1,
      -1,    -1,    -1,   486,   487,    -1,    -1,    -1,    -1,    -1,
     493,    -1,   495,    -1,    -1,    -1,    -1,   500,    -1,   502,
     503,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    35,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    74,    -1,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,    -1,   160,   161,
     162,   163,    -1,   165,    -1,   167,   168,    -1,   170,   171,
     172,   173,   174,   175,    -1,   177,    -1,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,    -1,   196,   197,   198,   199,   200,   201,
      -1,   203,   204,   205,   206,   207,   208,   209,   210,   211,
     212,    -1,   214,    -1,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,    -1,    -1,   229,   230,   231,
     232,    -1,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
      -1,   283,   284,    -1,    -1,   287,   288,   289,    -1,    -1,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,    -1,   309,   310,   311,
     312,   313,   314,   315,   316,   317,    -1,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,   328,   329,   330,   331,
     332,   333,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,    -1,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,    -1,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,    -1,   404,   405,   406,   407,   408,   409,   410,    -1,
     412,   413,    -1,    -1,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,    -1,    -1,
     432,   433,   434,   435,   436,   437,    -1,   439,   440,   441,
     442,   443,   444,   445,    -1,   447,   448,   449,   450,   451,
     452,    -1,    -1,   455,    -1,    -1,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,    -1,    -1,
      -1,    -1,    -1,    -1,   486,   487,    -1,    -1,    -1,    -1,
      -1,   493,    -1,   495,    -1,    -1,    -1,    -1,   500,    -1,
     502,   503,     3,     4,     5,     6,     7,     8,     9,    10,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    35,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,    -1,   160,
     161,   162,   163,    -1,   165,    -1,   167,   168,    -1,   170,
     171,   172,   173,   174,   175,    -1,   177,    -1,   179,   180,
     181,    -1,   183,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   194,    -1,   196,   197,   198,   199,   200,
     201,    -1,   203,   204,   205,   206,   207,   208,   209,   210,
     211,   212,    -1,   214,    -1,   216,    -1,    -1,   219,   220,
     221,   222,   223,   224,   225,   226,    -1,    -1,   229,   230,
     231,   232,    -1,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,    -1,
     271,   272,    -1,   274,   275,   276,   277,   278,   279,   280,
     281,    -1,   283,   284,    -1,    -1,   287,   288,   289,    -1,
      -1,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,    -1,   319,   320,
     321,   322,   323,   324,    -1,   326,   327,   328,   329,   330,
     331,   332,   333,    -1,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,    -1,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,    -1,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,    -1,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,   413,    -1,    -1,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,    -1,
      -1,   432,   433,   434,   435,   436,   437,    -1,   439,   440,
     441,   442,   443,   444,   445,    -1,   447,   448,   449,   450,
     451,   452,    -1,    -1,   455,    -1,    -1,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,    -1,
      -1,    -1,    -1,    -1,    -1,   486,   487,    -1,    -1,    -1,
      -1,    -1,   493,    -1,   495,    -1,    -1,    -1,    -1,   500,
      -1,   502,   503,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    74,    -1,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,    -1,
     160,   161,   162,   163,    -1,   165,    -1,   167,   168,    -1,
     170,   171,   172,   173,   174,   175,    -1,   177,    -1,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,    -1,   196,   197,   198,   199,
     200,   201,    -1,   203,   204,   205,   206,   207,   208,   209,
     210,   211,   212,    -1,   214,    -1,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,    -1,    -1,   229,
     230,   231,   232,    -1,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
      -1,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,    -1,   283,   284,    -1,    -1,   287,   288,   289,
      -1,    -1,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,    -1,   309,
     310,   311,   312,   313,   314,   315,   316,   317,    -1,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,    -1,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,    -1,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,   413,    -1,    -1,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
      -1,    -1,   432,   433,   434,   435,   436,   437,    -1,   439,
     440,   441,   442,   443,   444,   445,    -1,   447,   448,   449,
     450,   451,   452,    -1,    -1,   455,    -1,    -1,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   486,   487,    -1,    -1,
       3,     4,     5,     6,     7,   495,     9,    10,    -1,    -1,
      -1,    -1,   502,   503,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,    -1,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,    -1,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,    -1,   160,   161,   162,
     163,    -1,   165,    -1,   167,   168,    -1,   170,   171,   172,
     173,   174,   175,    -1,   177,    -1,   179,   180,   181,    -1,
     183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,    -1,   196,   197,   198,   199,   200,   201,    -1,
     203,   204,   205,   206,   207,   208,   209,   210,   211,   212,
      -1,   214,    -1,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,    -1,    -1,   229,   230,   231,   232,
      -1,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,    -1,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,    -1,
     283,   284,    -1,    -1,   287,   288,   289,    -1,    -1,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,    -1,   309,   310,   311,   312,
     313,   314,   315,   316,   317,    -1,   319,   320,   321,   322,
     323,   324,    -1,   326,   327,   328,   329,   330,   331,   332,
     333,    -1,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,    -1,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,    -1,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,    -1,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,    -1,   401,   402,
      -1,   404,   405,   406,   407,   408,   409,   410,    -1,   412,
     413,    -1,    -1,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,    -1,    -1,   432,
     433,   434,   435,   436,   437,    -1,   439,   440,   441,   442,
     443,   444,   445,    -1,   447,   448,   449,   450,   451,   452,
      -1,    -1,   455,    -1,    -1,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   486,   487,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   495,    -1,    -1,    -1,    -1,    -1,    -1,   502,
     503,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    74,    -1,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,    -1,   160,   161,
     162,   163,    -1,   165,    -1,   167,   168,    -1,   170,   171,
     172,   173,   174,   175,    -1,   177,    -1,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,    -1,   196,   197,   198,   199,   200,   201,
      -1,   203,   204,   205,   206,   207,   208,   209,   210,   211,
     212,    -1,   214,    -1,   216,    -1,   218,   219,   220,   221,
     222,   223,   224,   225,   226,    -1,    -1,   229,   230,   231,
     232,    -1,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,    -1,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
      -1,   283,   284,    -1,    -1,   287,   288,   289,    -1,    -1,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,    -1,   309,   310,   311,
     312,   313,   314,   315,   316,   317,    -1,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,   328,   329,   330,   331,
     332,   333,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,    -1,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,    -1,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,    -1,   404,   405,   406,   407,   408,   409,   410,    -1,
     412,   413,    -1,    -1,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,    -1,    -1,
     432,   433,   434,   435,   436,   437,    -1,   439,   440,   441,
     442,   443,   444,   445,    -1,   447,   448,   449,   450,   451,
     452,    -1,    -1,   455,    -1,    -1,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   486,   487,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   495,    -1,    -1,    -1,    -1,    -1,    -1,
     502,   503,     3,     4,     5,     6,     7,     8,     9,    10,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    35,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    44,    45,    46,    47,    -1,    49,    50,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,    -1,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,    -1,   160,
     161,   162,   163,    -1,   165,    -1,   167,   168,    -1,   170,
     171,   172,   173,    -1,   175,    -1,   177,    -1,   179,   180,
     181,    -1,   183,   184,   185,   186,   187,   188,   189,    -1,
     191,   192,   193,   194,    -1,   196,   197,   198,   199,   200,
     201,    -1,   203,   204,   205,   206,   207,   208,   209,   210,
     211,   212,    -1,   214,    -1,   216,    -1,    -1,   219,   220,
     221,   222,   223,   224,   225,   226,    -1,    -1,   229,   230,
     231,    -1,    -1,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,    -1,
     271,   272,    -1,   274,   275,   276,   277,   278,   279,   280,
     281,    -1,   283,   284,    -1,    -1,   287,   288,   289,    -1,
      -1,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,    -1,   319,   320,
     321,   322,   323,   324,    -1,   326,   327,   328,   329,   330,
     331,   332,   333,    -1,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,    -1,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,    -1,   380,
     381,   382,   383,    -1,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,    -1,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,   413,    -1,    -1,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,    -1,
      -1,   432,   433,   434,   435,   436,   437,    -1,   439,   440,
     441,   442,   443,   444,   445,    -1,   447,   448,   449,   450,
     451,   452,    -1,    -1,   455,    -1,    -1,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   486,   487,     3,    -1,    -1,
      -1,    -1,   493,    -1,   495,    -1,    -1,    -1,    -1,   500,
      -1,   502,   503,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      36,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    81,    -1,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    94,    95,
      96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,    -1,   160,   161,   162,   163,    -1,   165,
      -1,   167,    -1,    -1,   170,   171,   172,   173,    -1,   175,
      -1,   177,    -1,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,   189,    -1,   191,   192,   193,   194,    -1,
     196,   197,   198,   199,   200,   201,    -1,   203,   204,   205,
     206,   207,   208,   209,   210,   211,   212,    -1,   214,    -1,
     216,    -1,    -1,   219,   220,   221,   222,   223,   224,   225,
     226,    -1,    -1,   229,   230,   231,    -1,    -1,   234,   235,
     236,    -1,    -1,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,    -1,   271,   272,    -1,   274,    -1,
     276,   277,   278,   279,   280,   281,    -1,   283,   284,    -1,
      -1,   287,   288,   289,    -1,    -1,   292,   293,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,    -1,   309,   310,   311,   312,   313,   314,   315,
     316,   317,    -1,   319,   320,   321,   322,   323,   324,    -1,
     326,   327,   328,   329,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,    -1,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,    -1,   374,   375,
     376,   377,   378,    -1,   380,   381,   382,   383,    -1,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,    -1,   404,   405,
     406,   407,   408,   409,   410,    -1,   412,   413,    -1,    -1,
     416,   417,   418,   419,   420,    -1,   422,   423,   424,   425,
     426,   427,   428,   429,    -1,    -1,   432,   433,   434,   435,
     436,    -1,    -1,   439,   440,   441,   442,   443,   444,   445,
      -1,   447,    -1,   449,   450,   451,   452,    -1,    -1,   455,
      -1,    -1,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,    -1,    -1,     3,    -1,     5,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     496,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    61,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,    -1,
     158,    -1,   160,   161,   162,   163,    -1,   165,    -1,   167,
     168,    -1,   170,   171,   172,   173,   174,   175,    -1,   177,
      -1,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,    -1,   196,   197,
     198,   199,   200,   201,    -1,   203,   204,   205,   206,   207,
     208,   209,   210,   211,   212,    -1,   214,    -1,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
      -1,   229,   230,   231,   232,    -1,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,    -1,   271,   272,   273,   274,    -1,   276,   277,
     278,   279,   280,   281,    -1,   283,   284,    -1,   286,   287,
     288,   289,    -1,    -1,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
      -1,   309,   310,   311,   312,   313,   314,   315,   316,   317,
      -1,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
      -1,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,    -1,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,   413,    -1,    -1,   416,   417,
     418,   419,   420,    -1,   422,   423,   424,   425,   426,   427,
     428,   429,    -1,    -1,   432,   433,   434,   435,   436,   437,
      -1,   439,   440,   441,   442,   443,   444,   445,    -1,   447,
     448,   449,   450,   451,   452,    -1,    -1,   455,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,    -1,     3,   481,     5,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   495,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      61,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,    -1,   158,    -1,   160,
     161,   162,   163,    -1,   165,    -1,   167,   168,    -1,   170,
     171,   172,   173,   174,   175,    -1,   177,    -1,   179,   180,
     181,    -1,   183,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   194,    -1,   196,   197,   198,   199,   200,
     201,    -1,   203,   204,   205,   206,   207,   208,   209,   210,
     211,   212,    -1,   214,    -1,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,    -1,   229,   230,
     231,   232,    -1,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,    -1,
     271,   272,   273,   274,    -1,   276,   277,   278,   279,   280,
     281,    -1,   283,   284,    -1,   286,   287,   288,   289,    -1,
      -1,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,    -1,   319,   320,
     321,   322,   323,   324,    -1,   326,   327,   328,   329,   330,
     331,   332,   333,    -1,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,    -1,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,    -1,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,    -1,   404,   405,   406,   407,   408,   409,   410,
      -1,   412,   413,    -1,    -1,   416,   417,   418,   419,   420,
      -1,   422,   423,   424,   425,   426,   427,   428,   429,    -1,
      -1,   432,   433,   434,   435,   436,   437,    -1,   439,   440,
     441,   442,   443,   444,   445,    -1,   447,   448,   449,   450,
     451,   452,    -1,    -1,   455,    -1,    -1,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,    -1,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   495,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    61,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      74,    -1,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,    -1,   158,    -1,   160,   161,   162,   163,
      -1,   165,    -1,   167,   168,    -1,   170,   171,   172,   173,
     174,   175,    -1,   177,    -1,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,    -1,   196,   197,   198,   199,   200,   201,    -1,   203,
     204,   205,   206,   207,   208,   209,   210,   211,   212,    -1,
     214,    -1,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,    -1,    -1,   229,   230,   231,   232,    -1,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,    -1,   271,   272,   273,
     274,    -1,   276,   277,   278,   279,   280,   281,    -1,   283,
     284,    -1,    -1,   287,   288,   289,    -1,    -1,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,    -1,   309,   310,   311,   312,   313,
     314,   315,   316,   317,    -1,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,    -1,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
      -1,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,    -1,
     404,   405,   406,   407,   408,   409,   410,    -1,   412,   413,
      -1,    -1,   416,   417,   418,   419,   420,    -1,   422,   423,
     424,   425,   426,   427,   428,   429,    -1,    -1,   432,   433,
     434,   435,   436,   437,    -1,   439,   440,   441,   442,   443,
     444,   445,    -1,   447,   448,   449,   450,   451,   452,    -1,
      -1,   455,    -1,    -1,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,    -1,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   495,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    61,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    74,    -1,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    89,    90,    91,    92,    -1,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,    -1,   116,
      -1,   118,   119,   120,   121,   122,   123,    -1,   125,   126,
     127,   128,   129,    -1,    -1,   132,   133,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,    -1,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
      -1,   158,    -1,   160,   161,   162,   163,    -1,   165,    -1,
     167,   168,    -1,   170,   171,   172,   173,   174,   175,    -1,
     177,    -1,   179,   180,   181,    -1,   183,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   194,    -1,   196,
     197,   198,   199,   200,   201,    -1,   203,   204,   205,   206,
     207,   208,   209,   210,   211,   212,    -1,   214,    -1,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
      -1,    -1,   229,   230,   231,   232,    -1,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,    -1,   271,   272,   273,   274,    -1,   276,
     277,   278,   279,   280,   281,    -1,   283,   284,    -1,    -1,
     287,   288,   289,    -1,    -1,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,    -1,   309,   310,   311,   312,   313,   314,   315,   316,
     317,    -1,   319,   320,   321,   322,   323,   324,    -1,   326,
     327,   328,   329,   330,   331,   332,   333,    -1,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,    -1,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
      -1,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,    -1,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,    -1,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,   413,    -1,    -1,   416,
     417,   418,   419,   420,    -1,   422,   423,   424,   425,   426,
     427,   428,   429,    -1,    -1,   432,   433,   434,   435,   436,
     437,    -1,   439,   440,   441,   442,   443,   444,   445,    -1,
     447,   448,   449,   450,   451,   452,    -1,    -1,   455,    -1,
      -1,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,    -1,     3,     4,     5,    -1,    -1,    -1,     9,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   495,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    81,    -1,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,    -1,
     160,   161,   162,   163,    -1,   165,    -1,   167,    -1,    -1,
      -1,   171,   172,   173,    -1,   175,    -1,   177,    -1,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,   189,
      -1,   191,   192,   193,   194,    -1,   196,   197,   198,   199,
     200,   201,    -1,   203,    -1,   205,   206,   207,   208,   209,
     210,   211,   212,    -1,   214,    -1,   216,    -1,    -1,   219,
      -1,   221,   222,   223,   224,   225,   226,    -1,    -1,   229,
      -1,   231,    -1,    -1,   234,   235,   236,    -1,    -1,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,    -1,   265,   266,   267,   268,   269,
      -1,   271,   272,    -1,   274,    -1,   276,   277,   278,   279,
     280,   281,    -1,   283,   284,   285,    -1,   287,   288,   289,
      -1,    -1,   292,   293,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,    -1,   309,
     310,   311,   312,   313,   314,   315,   316,   317,    -1,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,    -1,   349,
     350,    -1,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,    -1,   374,   375,   376,   377,   378,    -1,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,    -1,   404,    -1,   406,   407,   408,   409,
     410,    -1,   412,   413,    -1,    -1,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
      -1,    -1,   432,   433,   434,   435,   436,    -1,    -1,   439,
     440,   441,   442,   443,   444,   445,    -1,   447,    -1,   449,
     450,   451,   452,    -1,    -1,   455,    -1,    -1,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,    -1,
       3,    -1,    -1,    -1,    -1,    -1,   486,   487,   488,    -1,
      -1,    -1,    -1,    -1,    -1,   495,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    31,    32,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    81,    -1,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,    -1,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,    -1,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,    -1,   158,    -1,   160,   161,   162,
     163,    -1,   165,    -1,   167,    -1,    -1,    -1,   171,   172,
     173,    -1,   175,    -1,   177,    -1,   179,   180,   181,    -1,
     183,   184,   185,   186,   187,   188,   189,    -1,   191,   192,
     193,   194,    -1,   196,   197,   198,   199,   200,   201,    -1,
     203,    -1,   205,   206,   207,   208,   209,   210,   211,   212,
      -1,   214,    -1,   216,    -1,    -1,   219,    -1,   221,   222,
     223,   224,   225,   226,    -1,    -1,   229,    -1,   231,    -1,
      -1,   234,   235,   236,    -1,    -1,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,    -1,   265,   266,   267,   268,   269,    -1,   271,   272,
      -1,   274,    -1,   276,   277,   278,   279,   280,   281,    -1,
     283,   284,    -1,    -1,   287,   288,   289,    -1,    -1,   292,
     293,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,    -1,   309,   310,   311,   312,
     313,   314,   315,   316,   317,    -1,   319,   320,   321,   322,
     323,   324,    -1,   326,   327,   328,   329,   330,   331,   332,
     333,    -1,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,    -1,   349,   350,    -1,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
      -1,   374,   375,   376,   377,   378,    -1,   380,   381,   382,
     383,    -1,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,    -1,   401,   402,
     403,   404,    -1,   406,   407,   408,   409,   410,    -1,   412,
     413,    -1,    -1,   416,   417,   418,   419,   420,    -1,   422,
     423,   424,   425,   426,   427,   428,   429,    -1,    -1,   432,
     433,   434,   435,   436,    -1,    -1,   439,   440,   441,   442,
     443,   444,   445,    -1,   447,    -1,   449,   450,   451,   452,
      -1,    -1,   455,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,    -1,     3,   481,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   495,    19,    20,    21,    22,    23,    24,    25,
      26,    27,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    81,    -1,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    -1,    95,
      96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,    -1,   160,   161,   162,   163,    -1,   165,
      -1,   167,    -1,    -1,    -1,   171,   172,   173,    -1,   175,
      -1,   177,    -1,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,   189,    -1,   191,   192,   193,   194,    -1,
     196,   197,   198,   199,   200,   201,    -1,   203,    -1,   205,
     206,   207,   208,   209,   210,   211,   212,    -1,   214,    -1,
     216,    -1,    -1,   219,    -1,   221,   222,   223,   224,   225,
     226,    -1,    -1,   229,    -1,   231,    -1,    -1,   234,   235,
     236,    -1,    -1,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,    -1,   265,
     266,   267,   268,   269,    -1,   271,   272,    -1,   274,    -1,
     276,   277,   278,   279,   280,   281,    -1,   283,   284,    -1,
      -1,   287,   288,   289,    -1,    -1,   292,   293,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,    -1,   309,   310,   311,   312,   313,   314,   315,
     316,   317,    -1,   319,   320,   321,   322,   323,   324,    -1,
     326,   327,   328,   329,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,    -1,   349,   350,    -1,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,    -1,   374,   375,
     376,   377,   378,    -1,   380,   381,   382,   383,    -1,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,   403,   404,    -1,
     406,   407,   408,   409,   410,    -1,   412,   413,    -1,    -1,
     416,   417,   418,   419,   420,    -1,   422,   423,   424,   425,
     426,   427,   428,   429,    -1,    -1,   432,   433,   434,   435,
     436,    -1,    -1,   439,   440,   441,   442,   443,   444,   445,
      -1,   447,    -1,   449,   450,   451,   452,    -1,    -1,   455,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,    -1,     3,   481,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   495,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    81,    -1,    83,    84,    85,    -1,    87,    88,
      89,    90,    91,    92,    -1,    -1,    95,    96,    97,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,    -1,   116,    -1,   118,
     119,   120,   121,   122,   123,    -1,   125,   126,   127,   128,
     129,    -1,    -1,   132,   133,   134,   135,   136,    -1,   138,
     139,   140,    -1,   142,   143,   144,    -1,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,    -1,   158,
      -1,   160,   161,   162,   163,    -1,   165,    -1,   167,    -1,
      -1,    -1,   171,   172,   173,    -1,   175,    -1,   177,    -1,
     179,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
     189,    -1,   191,   192,   193,   194,    -1,   196,   197,   198,
     199,   200,   201,    -1,   203,    -1,   205,   206,   207,   208,
     209,   210,   211,   212,    -1,   214,    -1,   216,    -1,    -1,
     219,    -1,   221,   222,   223,   224,   225,   226,    -1,    -1,
     229,    -1,   231,    -1,    -1,   234,   235,   236,    -1,    -1,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,    -1,   265,   266,   267,   268,
     269,    -1,   271,   272,    -1,   274,    -1,   276,   277,   278,
     279,   280,   281,    -1,   283,   284,    -1,    -1,   287,   288,
     289,    -1,    -1,   292,   293,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,    -1,
     309,   310,   311,   312,   313,   314,   315,   316,   317,    -1,
     319,   320,   321,   322,   323,   324,    -1,   326,   327,   328,
     329,   330,   331,   332,   333,    -1,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,    -1,
     349,   350,    -1,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,    -1,   374,   375,   376,   377,   378,
      -1,   380,   381,   382,   383,    -1,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,    -1,   401,   402,   403,   404,    -1,   406,   407,   408,
     409,   410,    -1,   412,   413,    -1,    -1,   416,   417,   418,
     419,   420,    -1,   422,   423,   424,   425,   426,   427,   428,
     429,    -1,    -1,   432,   433,   434,   435,   436,    -1,    -1,
     439,   440,   441,   442,   443,   444,   445,    -1,   447,    -1,
     449,   450,   451,   452,    -1,    -1,   455,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
      -1,     3,   481,     5,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   495,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,    -1,   158,    -1,   160,   161,
     162,   163,    -1,   165,    -1,   167,    -1,    -1,    -1,   171,
     172,   173,    -1,   175,    -1,   177,    -1,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,   189,    -1,   191,
     192,   193,   194,    -1,   196,   197,   198,   199,   200,   201,
      -1,   203,    -1,   205,   206,   207,   208,   209,   210,   211,
     212,    -1,   214,    -1,   216,    -1,    -1,   219,    -1,   221,
     222,   223,   224,   225,   226,    -1,    -1,   229,    -1,   231,
      -1,    -1,   234,   235,   236,    -1,    -1,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,    -1,   265,   266,   267,   268,   269,    -1,   271,
     272,    -1,   274,    -1,   276,   277,   278,   279,   280,   281,
      -1,   283,   284,    -1,    -1,   287,   288,   289,    -1,    -1,
     292,   293,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,    -1,   309,   310,   311,
     312,   313,   314,   315,   316,   317,    -1,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,   328,   329,   330,   331,
     332,   333,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,    -1,   349,   350,    -1,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,    -1,   374,   375,   376,   377,   378,    -1,   380,   381,
     382,   383,    -1,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,    -1,   404,    -1,   406,   407,   408,   409,   410,    -1,
     412,   413,    -1,    -1,   416,   417,   418,   419,   420,    -1,
     422,   423,   424,   425,   426,   427,   428,   429,    -1,    -1,
     432,   433,   434,   435,   436,    -1,    -1,   439,   440,   441,
     442,   443,   444,   445,    -1,   447,    -1,   449,   450,   451,
     452,    -1,    -1,   455,    -1,    -1,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,    -1,     3,    -1,
       5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   495,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    81,    -1,    83,    84,
      85,    -1,    87,    88,    89,    90,    91,    92,    -1,    -1,
      95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
      -1,   116,    -1,   118,   119,   120,   121,   122,   123,    -1,
     125,   126,   127,   128,   129,    -1,    -1,   132,   133,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
      -1,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,    -1,   158,    -1,   160,   161,   162,   163,    -1,
     165,    -1,   167,    -1,    -1,    -1,   171,   172,   173,    -1,
     175,    -1,   177,    -1,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,   189,    -1,   191,   192,   193,   194,
      -1,   196,   197,   198,   199,   200,   201,    -1,   203,    -1,
     205,   206,   207,   208,   209,   210,   211,   212,    -1,   214,
      -1,   216,    -1,    -1,   219,    -1,   221,   222,   223,   224,
     225,   226,    -1,    -1,   229,    -1,   231,    -1,    -1,   234,
     235,   236,    -1,    -1,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,    -1,
     265,   266,   267,   268,   269,    -1,   271,   272,    -1,   274,
      -1,   276,   277,   278,   279,   280,   281,    -1,   283,   284,
      -1,    -1,   287,   288,   289,    -1,    -1,   292,   293,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,    -1,   309,   310,   311,   312,   313,   314,
     315,   316,   317,    -1,   319,   320,   321,   322,   323,   324,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,    -1,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,    -1,   349,   350,    -1,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,   371,   372,    -1,   374,
     375,   376,   377,   378,    -1,   380,   381,   382,   383,    -1,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,    -1,   404,
      -1,   406,   407,   408,   409,   410,    -1,   412,   413,    -1,
      -1,   416,   417,   418,   419,   420,    -1,   422,   423,   424,
     425,   426,   427,   428,   429,    -1,    -1,   432,   433,   434,
     435,   436,    -1,    -1,   439,   440,   441,   442,   443,   444,
     445,    -1,   447,    -1,   449,   450,   451,   452,    -1,    -1,
     455,    -1,    -1,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,    -1,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     495,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    81,    -1,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    -1,    95,    96,    97,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,    -1,
     158,    -1,   160,   161,   162,   163,    -1,   165,    -1,   167,
      -1,    -1,    -1,   171,   172,   173,    -1,   175,    -1,   177,
      -1,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,   189,    -1,   191,   192,   193,   194,    -1,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,    -1,   214,    -1,   216,    -1,
      -1,   219,    -1,   221,   222,   223,   224,   225,   226,    -1,
      -1,   229,    -1,   231,    -1,    -1,   234,   235,   236,    -1,
      -1,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,    -1,   265,   266,   267,
     268,   269,    -1,   271,   272,    -1,   274,    -1,   276,   277,
     278,   279,   280,   281,    -1,   283,   284,    -1,    -1,   287,
     288,   289,    -1,    -1,   292,   293,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
      -1,   309,   310,   311,   312,   313,   314,   315,   316,   317,
      -1,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
      -1,   349,   350,    -1,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,    -1,   374,   375,   376,   377,
     378,    -1,   380,   381,   382,   383,    -1,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,    -1,   404,    -1,   406,   407,
     408,   409,   410,    -1,   412,   413,    -1,    -1,   416,   417,
     418,   419,   420,    -1,   422,   423,   424,   425,   426,   427,
     428,   429,    -1,    -1,   432,   433,   434,   435,   436,    -1,
      -1,   439,   440,   441,   442,   443,   444,   445,    -1,   447,
      -1,   449,   450,   451,   452,    -1,    -1,   455,    -1,    -1,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,    -1,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   495,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,    -1,   158,    -1,   160,
     161,   162,   163,    -1,   165,    -1,   167,    -1,    -1,    -1,
     171,   172,   173,    -1,   175,    -1,   177,    -1,   179,   180,
     181,    -1,   183,   184,   185,   186,   187,   188,   189,    -1,
     191,   192,   193,   194,    -1,   196,   197,   198,   199,   200,
     201,    -1,   203,    -1,   205,   206,   207,   208,   209,   210,
     211,   212,    -1,   214,    -1,   216,    -1,    -1,   219,    -1,
     221,   222,   223,   224,   225,   226,    -1,    -1,   229,    -1,
     231,    -1,    -1,   234,   235,   236,    -1,    -1,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,    -1,   265,   266,   267,   268,   269,    -1,
     271,   272,    -1,   274,    -1,   276,   277,   278,   279,   280,
     281,    -1,   283,   284,    -1,    -1,   287,   288,   289,    -1,
      -1,   292,   293,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,    -1,   319,   320,
     321,   322,   323,   324,    -1,   326,   327,   328,   329,   330,
     331,   332,   333,    -1,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,    -1,   349,   350,
      -1,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,    -1,   374,   375,   376,   377,   378,    -1,   380,
     381,   382,   383,    -1,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,    -1,   404,    -1,   406,   407,   408,   409,   410,
      -1,   412,   413,    -1,    -1,   416,   417,   418,   419,   420,
      -1,   422,   423,   424,   425,   426,   427,   428,   429,    -1,
      -1,   432,   433,   434,   435,   436,    -1,    -1,   439,   440,
     441,   442,   443,   444,   445,    -1,   447,    -1,   449,   450,
     451,   452,    -1,    -1,   455,    -1,    -1,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,    -1,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   495,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,    -1,   158,    -1,   160,   161,   162,   163,
      -1,   165,    -1,   167,    -1,    -1,    -1,   171,   172,   173,
      -1,   175,    -1,   177,    -1,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,   189,    -1,   191,   192,   193,
     194,    -1,   196,   197,   198,   199,   200,   201,    -1,   203,
      -1,   205,   206,   207,   208,   209,   210,   211,   212,    -1,
     214,    -1,   216,    -1,    -1,   219,    -1,   221,   222,   223,
     224,   225,   226,    -1,    -1,   229,    -1,   231,    -1,    -1,
     234,   235,   236,    -1,    -1,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
      -1,   265,   266,   267,   268,   269,    -1,   271,   272,    -1,
     274,    -1,   276,   277,   278,   279,   280,   281,    -1,   283,
     284,    -1,    -1,   287,   288,   289,    -1,    -1,   292,   293,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,    -1,   309,   310,   311,   312,   313,
     314,   315,   316,   317,    -1,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,    -1,   349,   350,    -1,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,    -1,
     374,   375,   376,   377,   378,    -1,   380,   381,   382,   383,
      -1,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,    -1,
     404,    -1,   406,   407,   408,   409,   410,    -1,   412,   413,
      -1,    -1,   416,   417,   418,   419,   420,    -1,   422,   423,
     424,   425,   426,   427,   428,   429,    -1,    -1,   432,   433,
     434,   435,   436,    -1,    -1,   439,   440,   441,   442,   443,
     444,   445,    -1,   447,    -1,   449,   450,   451,   452,    -1,
      -1,   455,    -1,    -1,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,    -1,    -1,    -1,    -1,     3,
       4,     5,    -1,    -1,     8,     9,    -1,    -1,    -1,    -1,
      -1,   495,    16,    17,    18,    19,    20,    21,    22,    23,
      24,    25,    26,    27,    28,    29,    30,    31,    32,    33,
      34,    35,    36,    37,    38,    39,    40,    41,    42,    43,
      44,    45,    46,    47,    -1,    49,    50,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    -1,    73,
      74,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    86,    87,    88,    89,    90,    91,    92,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   127,   128,   129,   130,   131,   132,   133,
     134,   135,   136,   137,   138,   139,   140,   141,   142,   143,
     144,   145,   146,   147,   148,   149,    -1,   151,   152,   153,
     154,   155,    -1,   157,   158,   159,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   173,
     174,   175,   176,   177,   178,    -1,    -1,   181,   182,   183,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,    -1,   206,   207,   208,   209,   210,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,    -1,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,    -1,
     294,   295,   296,    -1,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,    -1,   312,   313,
      -1,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,    -1,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
      -1,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   475,   476,   477,   478,    -1,     3,    -1,   482,   483,
     484,     8,   486,   487,   488,   489,   490,   491,    -1,    16,
      17,    18,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    81,    -1,    83,    84,    85,    -1,
      87,    88,    89,    90,    91,    92,    -1,    -1,    95,    96,
      97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,    -1,   116,
      -1,   118,   119,   120,   121,   122,   123,    -1,   125,   126,
     127,   128,   129,    -1,    -1,   132,   133,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,    -1,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
      -1,   158,    -1,   160,   161,   162,   163,    -1,   165,    -1,
     167,    -1,    -1,    -1,   171,   172,   173,    -1,   175,    -1,
     177,    -1,   179,   180,   181,    -1,   183,   184,   185,   186,
     187,   188,   189,    -1,   191,   192,   193,   194,    -1,   196,
     197,   198,   199,   200,   201,    -1,   203,    -1,   205,   206,
     207,   208,   209,   210,   211,   212,    -1,   214,    -1,   216,
      -1,    -1,   219,    -1,   221,   222,   223,   224,   225,   226,
      -1,    -1,   229,    -1,   231,    -1,    -1,   234,   235,   236,
      -1,    -1,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,    -1,   265,   266,
     267,   268,   269,    -1,   271,   272,    -1,   274,    -1,   276,
     277,   278,   279,   280,   281,    -1,   283,   284,    -1,    -1,
     287,   288,   289,    -1,    -1,   292,   293,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,    -1,   309,   310,   311,   312,   313,   314,   315,   316,
     317,    -1,   319,   320,   321,   322,   323,   324,    -1,   326,
     327,   328,   329,   330,   331,   332,   333,    -1,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,    -1,   349,   350,    -1,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
      -1,   368,   369,   370,   371,   372,    -1,   374,   375,   376,
     377,   378,    -1,   380,   381,   382,   383,    -1,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,    -1,   404,    -1,   406,
     407,   408,   409,   410,    -1,   412,   413,    -1,    -1,   416,
     417,   418,   419,   420,    -1,   422,   423,   424,   425,   426,
     427,   428,   429,    -1,    -1,   432,   433,   434,   435,   436,
      -1,    -1,   439,   440,   441,   442,   443,   444,   445,    -1,
     447,    -1,   449,   450,   451,   452,    -1,    -1,   455,    -1,
      -1,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,    -1,    -1,    -1,   482,   483,   484,    -1,   486,
     487,   488,   489,   490,   491,     8,    -1,    -1,    11,    -1,
      -1,    -1,    15,    16,    17,    18,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,     8,    -1,    -1,    11,    -1,    -1,
      33,    15,    16,    17,    18,    -1,    -1,    -1,    41,    -1,
      -1,    -1,    -1,    -1,    -1,    48,    -1,    -1,    -1,    33,
      -1,    -1,    -1,     8,    -1,    -1,    11,    41,    -1,    -1,
      15,    16,    17,    18,    48,    -1,    -1,    -1,    -1,    -1,
      73,    -1,     8,    -1,    -1,    11,    -1,    -1,    33,    15,
      16,    17,    18,    -1,    -1,    -1,    41,    -1,    -1,    73,
      -1,    -1,     8,    48,    -1,    11,    -1,    33,    -1,    -1,
      16,    17,    18,    -1,    -1,    41,    -1,    -1,    -1,    -1,
      -1,    -1,    48,    -1,    -1,    -1,    -1,    -1,    73,    -1,
      -1,    -1,    -1,    -1,    -1,    41,     8,    -1,    -1,    11,
      -1,    -1,    48,    -1,    16,    17,    18,    73,    -1,     8,
      -1,    -1,    11,    -1,    -1,    -1,    15,    16,    17,    18,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    73,    -1,    41,
      -1,    -1,    -1,    -1,    33,    -1,    48,    -1,    -1,    -1,
      -1,   174,    41,    -1,    -1,    -1,    -1,    -1,    -1,    48,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   190,    -1,    -1,
     174,    73,   195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    73,    -1,   190,    -1,    -1,    -1,
      -1,   195,    -1,    -1,   217,   218,    -1,    -1,    -1,   174,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   232,
      -1,    -1,    -1,   217,   218,   190,    -1,    -1,   174,    -1,
     195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   232,    -1,
      -1,    -1,    -1,    -1,   190,    -1,    -1,    -1,   174,   195,
      -1,    -1,   217,   218,    -1,    -1,    -1,   270,    -1,    -1,
     273,    -1,    -1,    -1,   190,    -1,    -1,   232,    -1,   195,
      -1,   217,   218,    -1,   287,    -1,   270,   290,    -1,   273,
      -1,    -1,   174,    -1,    -1,    -1,   232,    -1,    -1,    -1,
      -1,   217,   218,   287,    -1,   174,   290,    -1,   190,    -1,
      -1,    -1,    -1,   195,    -1,   270,   232,    -1,   273,    -1,
      -1,   190,    -1,    -1,    -1,    -1,   195,    -1,    -1,    -1,
      -1,    -1,   287,    -1,   270,   290,    -1,   273,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   217,   218,
     232,   287,    -1,    -1,   290,    -1,    -1,   273,    -1,    -1,
      -1,    -1,    -1,   232,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   287,    -1,    -1,    -1,    -1,   379,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   379,    -1,    -1,    -1,    -1,
      -1,   270,    -1,    -1,   273,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   287,    -1,
      -1,   290,    -1,    -1,   379,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   379,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   379,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   479,    -1,    -1,   482,
     483,   484,    -1,   486,   487,   488,   489,   490,   491,    -1,
      -1,    -1,    -1,   496,    -1,   479,    -1,   379,   482,   483,
     484,    -1,   486,   487,   488,   489,   490,   491,    -1,    -1,
     379,    -1,   496,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   479,    -1,    -1,   482,   483,   484,
      -1,   486,   487,   488,   489,   490,   491,    -1,    -1,    -1,
      -1,   496,    -1,   479,    -1,    -1,   482,   483,   484,    -1,
     486,   487,   488,   489,   490,   491,    -1,    -1,    -1,    -1,
     496,    -1,    -1,   479,    -1,    -1,   482,   483,   484,    -1,
     486,   487,   488,   489,   490,   491,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   479,    -1,    -1,
     482,   483,   484,    -1,   486,   487,   488,   489,   490,   491,
     479,     3,    -1,   482,   483,   484,    -1,   486,   487,   488,
     489,   490,   491,    -1,    -1,   494,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    27,    28,    29,    30,    31,
      32,    33,    34,    35,    36,    37,    38,    39,    40,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    86,    87,    88,    89,    90,    91,
      92,    93,    -1,    95,    96,    97,    98,    99,   100,    -1,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   129,   130,   131,
     132,   133,   134,   135,   136,   137,   138,   139,   140,   141,
     142,   143,   144,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,   166,   167,    -1,   169,    -1,   171,
     172,   173,    -1,   175,   176,   177,   178,   179,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,    -1,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,    -1,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   214,   215,   216,    -1,    -1,   219,    -1,   221,
     222,   223,   224,   225,   226,   227,   228,   229,    -1,   231,
      -1,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,    -1,   265,   266,   267,   268,   269,   270,   271,
     272,    -1,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,    -1,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,    -1,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,    -1,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   488,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    81,    -1,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    -1,    95,
      96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,    -1,   160,   161,   162,   163,    -1,   165,
      -1,   167,    -1,    -1,    -1,   171,   172,   173,    -1,   175,
      -1,   177,    -1,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,   189,    -1,   191,   192,   193,   194,    -1,
     196,   197,   198,   199,   200,   201,    -1,   203,    -1,   205,
     206,   207,   208,   209,   210,   211,   212,    -1,   214,    -1,
     216,    -1,    -1,   219,    -1,   221,   222,   223,   224,   225,
     226,    -1,    -1,   229,    -1,   231,    -1,    -1,   234,   235,
     236,    -1,    -1,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,    -1,   265,
     266,   267,   268,   269,    -1,   271,   272,    -1,   274,    -1,
     276,   277,   278,   279,   280,   281,    -1,   283,   284,    -1,
      -1,   287,   288,   289,    -1,    -1,   292,   293,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,    -1,   309,   310,   311,   312,   313,   314,   315,
     316,   317,    -1,   319,   320,   321,   322,   323,   324,    -1,
     326,   327,   328,   329,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,    -1,   349,   350,    -1,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,    -1,   374,   375,
     376,   377,   378,    -1,   380,   381,   382,   383,    -1,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,    -1,   404,    -1,
     406,   407,   408,   409,   410,    -1,   412,   413,    -1,    -1,
     416,   417,   418,   419,   420,    -1,   422,   423,   424,   425,
     426,   427,   428,   429,    -1,    -1,   432,   433,   434,   435,
     436,    -1,    -1,   439,   440,   441,   442,   443,   444,   445,
      -1,   447,    -1,   449,   450,   451,   452,    -1,    -1,   455,
      -1,    -1,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,     3,     4,     5,    -1,    -1,    -1,     9,
      -1,    -1,   488,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    81,    -1,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,    -1,
     160,   161,   162,   163,    -1,   165,    -1,   167,    -1,    -1,
      -1,   171,   172,   173,    -1,   175,    -1,   177,    -1,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,   189,
      -1,   191,   192,   193,   194,    -1,   196,   197,   198,   199,
     200,   201,    -1,   203,    -1,   205,   206,   207,   208,   209,
     210,   211,   212,    -1,   214,    -1,   216,    -1,    -1,   219,
      -1,   221,   222,   223,   224,   225,   226,    -1,    -1,   229,
      -1,   231,    -1,    -1,   234,   235,   236,    -1,    -1,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,    -1,   265,   266,   267,   268,   269,
      -1,   271,   272,    -1,   274,    -1,   276,   277,   278,   279,
     280,   281,    -1,   283,   284,   285,    -1,   287,   288,   289,
      -1,    -1,   292,   293,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,    -1,   309,
     310,   311,   312,   313,   314,   315,   316,   317,    -1,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,    -1,   349,
     350,    -1,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,    -1,   374,   375,   376,   377,   378,    -1,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,    -1,   404,    -1,   406,   407,   408,   409,
     410,    -1,   412,   413,    -1,    -1,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
      -1,    -1,   432,   433,   434,   435,   436,    -1,    -1,   439,
     440,   441,   442,   443,   444,   445,    -1,   447,    -1,   449,
     450,   451,   452,    -1,    -1,   455,    -1,    -1,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,     3,
       4,     5,    -1,    -1,    -1,     9,   486,   487,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,    -1,   160,   161,   162,   163,
      -1,   165,    -1,   167,    -1,    -1,    -1,   171,   172,   173,
      -1,   175,    -1,   177,    -1,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,   189,    -1,   191,   192,   193,
     194,    -1,   196,   197,   198,   199,   200,   201,    -1,   203,
      -1,   205,   206,   207,   208,   209,   210,   211,   212,    -1,
     214,    -1,   216,    -1,    -1,   219,    -1,   221,   222,   223,
     224,   225,   226,    -1,    -1,   229,    -1,   231,    -1,    -1,
     234,   235,   236,    -1,    -1,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
      -1,   265,   266,   267,   268,   269,    -1,   271,   272,    -1,
     274,    -1,   276,   277,   278,   279,   280,   281,    -1,   283,
     284,   285,    -1,   287,   288,   289,    -1,    -1,   292,   293,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,    -1,   309,   310,   311,   312,   313,
     314,   315,   316,   317,    -1,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,    -1,   349,   350,    -1,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,    -1,
     374,   375,   376,   377,   378,    -1,   380,   381,   382,   383,
      -1,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,    -1,
     404,    -1,   406,   407,   408,   409,   410,    -1,   412,   413,
      -1,    -1,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,    -1,    -1,   432,   433,
     434,   435,   436,    -1,    -1,   439,   440,   441,   442,   443,
     444,   445,    -1,   447,    -1,   449,   450,   451,   452,    -1,
      -1,   455,    -1,    -1,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,     3,     4,     5,    -1,    -1,
      -1,     9,   486,   487,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    81,    -1,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    -1,    95,    96,    97,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,    -1,   160,   161,   162,   163,    -1,   165,    -1,   167,
      -1,    -1,    -1,   171,   172,   173,    -1,   175,    -1,   177,
      -1,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,   189,    -1,   191,   192,   193,   194,    -1,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,    -1,   214,    -1,   216,    -1,
      -1,   219,    -1,   221,   222,   223,   224,   225,   226,    -1,
      -1,   229,    -1,   231,    -1,    -1,   234,   235,   236,    -1,
      -1,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,    -1,   265,   266,   267,
     268,   269,    -1,   271,   272,    -1,   274,    -1,   276,   277,
     278,   279,   280,   281,    -1,   283,   284,   285,    -1,   287,
     288,   289,    -1,    -1,   292,   293,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
      -1,   309,   310,   311,   312,   313,   314,   315,   316,   317,
      -1,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
      -1,   349,   350,    -1,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,    -1,   374,   375,   376,   377,
     378,    -1,   380,   381,   382,   383,    -1,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,    -1,   404,    -1,   406,   407,
     408,   409,   410,    -1,   412,   413,    -1,    -1,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,    -1,    -1,   432,   433,   434,   435,   436,    -1,
      -1,   439,   440,   441,   442,   443,   444,   445,    -1,   447,
      -1,   449,   450,   451,   452,    -1,    -1,   455,    -1,    -1,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,    -1,    -1,     8,    -1,    -1,    11,    -1,   486,   487,
      15,    16,    17,    18,    -1,    -1,     8,    -1,    -1,    11,
      -1,    -1,    -1,    15,    16,    17,    18,    -1,    33,    -1,
      -1,    -1,    37,    -1,    -1,    -1,    41,    -1,    -1,    -1,
      -1,    33,    -1,    48,    -1,    -1,    -1,    -1,    -1,    41,
       8,    -1,    -1,    11,    -1,    -1,    48,    15,    16,    17,
      18,    -1,    -1,     8,    -1,    -1,    11,    -1,    73,    -1,
      15,    16,    17,    18,    -1,    33,    -1,    -1,    -1,    -1,
      -1,    73,    -1,    41,    -1,    -1,    -1,    -1,    33,    -1,
      48,    36,    -1,    -1,    -1,    -1,    41,     8,    -1,    -1,
      11,    -1,    -1,    48,    15,    16,    17,    18,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    73,    -1,    -1,    -1,   124,
      -1,    -1,    33,    -1,    -1,    -1,    -1,    -1,    73,    -1,
      41,    -1,    -1,    -1,    -1,    -1,    -1,    48,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    73,    -1,    -1,    -1,    -1,    -1,    -1,   174,
      -1,    -1,   164,    -1,    -1,    -1,    -1,   169,    -1,    -1,
      -1,    -1,   174,    -1,    -1,   190,    -1,    -1,    -1,    -1,
     195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   190,    -1,
      -1,    -1,    -1,   195,    -1,   163,    -1,    -1,    -1,    -1,
      -1,    -1,   217,   218,    -1,    -1,   174,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   217,   218,   232,    -1,   174,
      -1,    -1,   190,    -1,    -1,    -1,    -1,   195,    -1,    -1,
     232,    -1,    -1,    -1,    -1,   190,    -1,    -1,    -1,    -1,
     195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   217,
     218,    -1,    -1,   174,    -1,   270,    -1,    -1,   273,    -1,
      -1,    -1,   217,   218,   232,    -1,    -1,    -1,   270,   190,
      -1,   273,   287,    -1,   195,   290,    -1,   232,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   287,    -1,    -1,   290,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   217,   218,    -1,    -1,
      -1,    -1,   270,    -1,    -1,   273,    -1,    -1,    -1,    -1,
      -1,   232,    -1,    -1,    -1,   270,    -1,    -1,   273,   287,
      -1,    -1,   290,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
       8,    -1,   287,    11,    -1,   290,    -1,    15,    16,    17,
      18,    -1,    -1,    -1,    -1,   313,    -1,    -1,    -1,   270,
      -1,    -1,   273,    -1,    -1,    33,    -1,    -1,    36,    -1,
      -1,    -1,    -1,    41,   379,    -1,   287,    -1,    -1,   290,
      48,    -1,    -1,    -1,    -1,    -1,    -1,   379,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   308,    -1,     8,
      -1,    -1,    11,    -1,    -1,    73,    15,    16,    17,    18,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   379,    -1,    -1,    33,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    41,   438,   379,    -1,    -1,    -1,    -1,    48,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    73,    -1,    -1,    -1,   379,    -1,
      -1,    -1,    -1,    -1,   479,    -1,    -1,   482,   483,   484,
      -1,   486,   487,   488,   489,   490,   491,   479,    -1,    -1,
     482,   483,   484,    -1,   486,   487,   488,   489,   490,   491,
      -1,    -1,    -1,    -1,    -1,    -1,   174,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   479,   190,    -1,   482,   483,   484,   195,   486,   487,
     488,   489,   490,   491,   479,    -1,    -1,   482,   483,   484,
      -1,   486,   487,   488,   489,   490,   491,    -1,    -1,   217,
     218,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     169,    -1,    -1,    -1,   232,   174,    -1,    -1,   479,    -1,
      -1,   482,   483,   484,    -1,   486,   487,   488,   489,   490,
     491,   190,    -1,    -1,    -1,     8,   195,    -1,    11,    -1,
      -1,    -1,    15,    16,    17,    18,    -1,    -1,    -1,    -1,
      -1,    -1,   270,    -1,    -1,   273,    -1,    -1,   217,   218,
      33,    -1,    -1,    36,    -1,    -1,    -1,    -1,    41,   287,
      -1,    -1,   290,   232,    -1,    48,    -1,    -1,    -1,    -1,
       8,    -1,    -1,    11,    -1,    -1,    -1,    15,    16,    17,
      18,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      73,    -1,    -1,    -1,    -1,    33,    -1,    -1,    -1,     8,
      -1,   270,    11,    41,   273,    -1,    15,    16,    17,    18,
      48,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   287,    -1,
      -1,   290,    -1,    -1,    33,    -1,    -1,    36,    -1,    -1,
      -1,    -1,    41,    -1,    -1,    73,    -1,    -1,    -1,    48,
      -1,    -1,    -1,    -1,    -1,    -1,     8,    -1,    -1,    11,
      -1,   379,    -1,    15,    16,    17,    18,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    73,    -1,    -1,    -1,    -1,    -1,
      -1,    33,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    41,
      -1,    -1,    -1,    -1,    -1,    -1,    48,    -1,    -1,    -1,
      -1,   174,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   190,    -1,    -1,
     379,    73,   195,     8,    -1,    -1,    11,    -1,    -1,    -1,
      15,    16,    17,    18,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   217,   218,   174,    -1,    33,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    41,    -1,    -1,   232,
      -1,   479,   190,    48,   482,   483,   484,   195,   486,   487,
     488,   489,   490,   491,    -1,   174,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    73,   217,
     218,   190,    -1,    -1,    -1,    -1,   195,   270,    -1,    -1,
     273,    -1,    -1,    -1,   232,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   287,    -1,    -1,   290,   217,   218,
     479,    -1,   174,   482,   483,   484,    -1,   486,   487,   488,
     489,   490,   491,   232,    -1,    -1,    -1,    -1,   190,    -1,
      -1,    -1,   270,   195,    -1,   273,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   287,
      -1,    -1,   290,    -1,    -1,   217,   218,    -1,    -1,    -1,
      -1,   270,    -1,    -1,   273,    -1,    -1,    -1,    -1,    -1,
     232,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   287,   174,
      -1,   290,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   190,   379,    -1,    -1,    -1,
     195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   270,    -1,
      -1,   273,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   217,   218,    -1,   287,    -1,    -1,   290,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   232,    -1,    -1,
      -1,   379,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     379,    -1,    -1,   411,    -1,   270,    -1,    -1,   273,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   287,    -1,    -1,   290,   479,    -1,    -1,   482,
     483,   484,    -1,   486,   487,   488,   489,   490,   491,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   379,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   479,    -1,    -1,   482,   483,   484,    -1,   486,   487,
     488,   489,   490,   491,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     479,    -1,    -1,   482,   483,   484,    -1,   486,   487,   488,
     489,   490,   491,    -1,   379,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   479,    -1,    -1,
     482,   483,   484,    -1,   486,   487,   488,   489,   490,   491,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,     3,    -1,     5,   479,    -1,    -1,   482,   483,   484,
      -1,   486,   487,   488,   489,   490,   491,    19,    20,    21,
      22,    23,    24,    25,    26,    27,    28,    29,    30,    31,
      32,    33,    34,    35,    36,    37,    38,    39,    40,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    86,    87,    88,    89,    90,    91,
      92,    93,    -1,    95,    96,    97,    98,    99,   100,    -1,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   129,   130,   131,
     132,   133,   134,   135,   136,   137,   138,   139,   140,   141,
     142,   143,   144,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,   166,   167,    -1,   169,    -1,   171,
     172,   173,    -1,   175,   176,   177,   178,   179,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,    -1,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,    -1,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   214,   215,   216,    -1,    -1,   219,    -1,   221,
     222,   223,   224,   225,   226,   227,   228,   229,    -1,   231,
      -1,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,    -1,   265,   266,   267,   268,   269,   270,   271,
     272,    -1,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,    -1,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,    -1,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,    -1,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    27,    28,    29,    30,    31,    32,    33,    34,    35,
      36,    37,    38,    39,    40,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    -1,    83,    84,    85,
      86,    87,    88,    89,    90,    91,    92,    93,    -1,    95,
      96,    97,    98,    99,   100,    -1,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
     136,   137,   138,   139,   140,   141,   142,   143,   144,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,   167,    -1,   169,    -1,   171,   172,   173,    -1,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,    -1,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,    -1,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   214,   215,
     216,    -1,    -1,   219,    -1,   221,   222,   223,   224,   225,
     226,   227,   228,   229,    -1,   231,    -1,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,    -1,   265,
     266,   267,   268,   269,   270,   271,   272,    -1,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,    -1,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,    -1,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,    -1,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    31,    32,    33,    34,    35,    36,    37,    38,    39,
      40,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,    71,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    -1,    83,    84,    85,    86,    87,    88,    89,
      90,    91,    92,    93,    -1,    95,    96,    97,    98,    99,
     100,    -1,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,   116,   117,   118,   119,
     120,   121,   122,   123,   124,   125,   126,   127,   128,   129,
     130,   131,   132,   133,   134,   135,   136,   137,   138,   139,
     140,   141,   142,   143,   144,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,   166,   167,    -1,   169,
      -1,   171,   172,   173,    -1,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
      -1,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,    -1,   205,   206,   207,   208,   209,
     210,   211,   212,   213,   214,   215,   216,    -1,    -1,   219,
      -1,   221,   222,   223,   224,   225,   226,   227,   228,   229,
      -1,   231,    -1,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,    -1,   265,   266,   267,   268,   269,
     270,   271,   272,    -1,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,    -1,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,    -1,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,    -1,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    61,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      74,    -1,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,    -1,   158,    -1,   160,   161,   162,   163,
      -1,   165,    -1,   167,   168,    -1,   170,   171,   172,   173,
     174,   175,    -1,   177,    -1,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,    -1,   196,   197,   198,   199,   200,   201,    -1,   203,
     204,   205,   206,   207,   208,   209,   210,   211,   212,    -1,
     214,    -1,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,    -1,    -1,   229,   230,   231,   232,    -1,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,    -1,   271,   272,   273,
     274,    -1,   276,   277,   278,   279,   280,   281,    -1,   283,
     284,    -1,    -1,   287,   288,   289,    -1,    -1,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,    -1,   309,   310,   311,   312,   313,
     314,   315,   316,   317,    -1,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,    -1,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
      -1,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,    -1,
     404,   405,   406,   407,   408,   409,   410,    -1,   412,   413,
      -1,    -1,   416,   417,   418,   419,   420,    -1,   422,   423,
     424,   425,   426,   427,   428,   429,    -1,    -1,   432,   433,
     434,   435,   436,   437,    -1,   439,   440,   441,   442,   443,
     444,   445,    -1,   447,   448,   449,   450,   451,   452,    -1,
      -1,   455,    -1,    -1,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    94,    95,    96,    97,
      -1,    -1,    -1,   101,    -1,    -1,    -1,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,    -1,
     158,    -1,   160,   161,   162,   163,    -1,   165,    -1,   167,
     168,    -1,   170,   171,   172,   173,   174,   175,    -1,   177,
      -1,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,    -1,   196,   197,
     198,   199,   200,   201,    -1,   203,   204,   205,   206,   207,
     208,   209,   210,   211,   212,    -1,   214,    -1,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,    -1,
      -1,   229,   230,   231,   232,    -1,   234,   235,   236,    -1,
      -1,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,    -1,   271,   272,   273,   274,    -1,   276,   277,
     278,   279,   280,   281,    -1,   283,   284,    -1,    -1,   287,
     288,   289,    -1,    -1,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
      -1,   309,   310,   311,   312,   313,   314,   315,   316,   317,
      -1,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
      -1,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,    -1,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,    -1,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,    -1,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,   413,    -1,    -1,   416,   417,
     418,   419,   420,    -1,   422,   423,   424,   425,   426,   427,
     428,   429,    -1,    -1,   432,   433,   434,   435,   436,    -1,
      -1,   439,   440,   441,   442,   443,   444,   445,    -1,   447,
     448,   449,   450,   451,   452,    -1,    -1,   455,    -1,    -1,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,    -1,    -1,    75,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    86,    87,    88,    89,    90,    91,
      92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,    -1,   158,    -1,   160,   161,
     162,   163,    -1,   165,   166,   167,    -1,    -1,    -1,   171,
     172,   173,    -1,   175,    -1,   177,    -1,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,   189,    -1,   191,
     192,   193,   194,    -1,   196,   197,   198,   199,   200,   201,
      -1,   203,    -1,   205,   206,   207,   208,   209,   210,   211,
     212,    -1,   214,    -1,   216,    -1,    -1,   219,    -1,   221,
     222,   223,   224,   225,   226,    -1,    -1,   229,    -1,   231,
      -1,    -1,   234,   235,   236,    -1,    -1,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,    -1,   265,   266,   267,   268,   269,    -1,   271,
     272,    -1,   274,    -1,   276,   277,   278,   279,   280,   281,
      -1,   283,   284,    -1,    -1,   287,   288,   289,    -1,    -1,
     292,   293,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,    -1,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,   328,   329,   330,   331,
     332,   333,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,    -1,   349,   350,    -1,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,    -1,   374,   375,   376,   377,   378,    -1,   380,   381,
     382,   383,    -1,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,    -1,   404,    -1,   406,   407,   408,   409,   410,    -1,
     412,   413,    -1,    -1,   416,   417,   418,   419,   420,    -1,
     422,   423,   424,   425,   426,   427,   428,   429,    -1,   431,
     432,   433,   434,   435,   436,    -1,    -1,   439,   440,   441,
     442,   443,   444,   445,    -1,   447,    -1,   449,   450,   451,
     452,    -1,    -1,   455,    -1,    -1,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    81,    -1,    83,    84,    85,
      86,    87,    88,    89,    90,    91,    92,    -1,    -1,    95,
      96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,    -1,   160,   161,   162,   163,    -1,   165,
     166,   167,    -1,    -1,    -1,   171,   172,   173,    -1,   175,
      -1,   177,    -1,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,   189,    -1,   191,   192,   193,   194,    -1,
     196,   197,   198,   199,   200,   201,    -1,   203,    -1,   205,
     206,   207,   208,   209,   210,   211,   212,    -1,   214,    -1,
     216,    -1,    -1,   219,    -1,   221,   222,   223,   224,   225,
     226,    -1,    -1,   229,    -1,   231,   232,    -1,   234,   235,
     236,    -1,    -1,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,    -1,   265,
     266,   267,   268,   269,    -1,   271,   272,    -1,   274,    -1,
     276,   277,   278,   279,   280,   281,    -1,   283,   284,    -1,
      -1,   287,   288,   289,    -1,    -1,   292,   293,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,    -1,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,    -1,
     326,   327,   328,   329,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,    -1,   349,   350,    -1,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,    -1,   374,   375,
     376,   377,   378,    -1,   380,   381,   382,   383,    -1,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,    -1,   404,    -1,
     406,   407,   408,   409,   410,    -1,   412,   413,    -1,    -1,
     416,   417,   418,   419,   420,    -1,   422,   423,   424,   425,
     426,   427,   428,   429,    -1,   431,   432,   433,   434,   435,
     436,    -1,    -1,   439,   440,   441,   442,   443,   444,   445,
      -1,   447,    -1,   449,   450,   451,   452,    -1,    -1,   455,
      -1,    -1,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,     3,    -1,     5,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    81,    -1,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,    -1,
     160,   161,   162,   163,    -1,   165,    -1,   167,    -1,    -1,
      -1,   171,   172,   173,    -1,   175,    -1,   177,    -1,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,   189,
      -1,   191,   192,   193,   194,    -1,   196,   197,   198,   199,
     200,   201,    -1,   203,    -1,   205,   206,   207,   208,   209,
     210,   211,   212,    -1,   214,    -1,   216,    -1,    -1,   219,
      -1,   221,   222,   223,   224,   225,   226,    -1,    -1,   229,
      -1,   231,    -1,    -1,   234,   235,   236,    -1,    -1,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,    -1,   265,   266,   267,   268,   269,
      -1,   271,   272,    -1,   274,    -1,   276,   277,   278,   279,
     280,   281,    -1,   283,   284,   285,    -1,   287,   288,   289,
      -1,    -1,   292,   293,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,    -1,   309,
     310,   311,   312,   313,   314,   315,   316,   317,    -1,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,    -1,   349,
     350,    -1,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,    -1,   374,   375,   376,   377,   378,    -1,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,    -1,   404,    -1,   406,   407,   408,   409,
     410,    -1,   412,   413,    -1,    -1,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
      -1,    -1,   432,   433,   434,   435,   436,    -1,    -1,   439,
     440,   441,   442,   443,   444,   445,    -1,   447,    -1,   449,
     450,   451,   452,    -1,    -1,   455,    -1,    -1,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,     3,
      -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    31,    32,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,    -1,   158,    -1,   160,   161,   162,   163,
      -1,   165,    -1,   167,    -1,    -1,    -1,   171,   172,   173,
      -1,   175,    -1,   177,    -1,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,   189,    -1,   191,   192,   193,
     194,    -1,   196,   197,   198,   199,   200,   201,    -1,   203,
      -1,   205,   206,   207,   208,   209,   210,   211,   212,    -1,
     214,    -1,   216,    -1,    -1,   219,    -1,   221,   222,   223,
     224,   225,   226,    -1,    -1,   229,    -1,   231,    -1,    -1,
     234,   235,   236,    -1,    -1,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
      -1,   265,   266,   267,   268,   269,    -1,   271,   272,    -1,
     274,    -1,   276,   277,   278,   279,   280,   281,    -1,   283,
     284,    -1,    -1,   287,   288,   289,    -1,    -1,   292,   293,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,    -1,   309,   310,   311,   312,   313,
     314,   315,   316,   317,    -1,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,    -1,   349,   350,    -1,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,    -1,
     374,   375,   376,   377,   378,    -1,   380,   381,   382,   383,
      -1,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,    -1,
     404,    -1,   406,   407,   408,   409,   410,    -1,   412,   413,
      -1,    -1,   416,   417,   418,   419,   420,    -1,   422,   423,
     424,   425,   426,   427,   428,   429,    -1,    -1,   432,   433,
     434,   435,   436,    -1,    -1,   439,   440,   441,   442,   443,
     444,   445,    -1,   447,    -1,   449,   450,   451,   452,    -1,
      -1,   455,    -1,    -1,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,     3,    -1,     5,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    81,    -1,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    -1,    95,    96,    97,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,    -1,
     158,    -1,   160,   161,   162,   163,    -1,   165,    -1,   167,
      -1,    -1,    -1,   171,   172,   173,    -1,   175,    -1,   177,
      -1,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,   189,    -1,   191,   192,   193,   194,    -1,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,    -1,   214,    -1,   216,    -1,
      -1,   219,    -1,   221,   222,   223,   224,   225,   226,    -1,
      -1,   229,    -1,   231,    -1,    -1,   234,   235,   236,    -1,
      -1,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,    -1,   265,   266,   267,
     268,   269,    -1,   271,   272,    -1,   274,    -1,   276,   277,
     278,   279,   280,   281,    -1,   283,   284,    -1,   286,   287,
     288,   289,    -1,    -1,   292,   293,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
      -1,   309,   310,   311,   312,   313,   314,   315,   316,   317,
      -1,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
      -1,   349,   350,    -1,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,    -1,   374,   375,   376,   377,
     378,    -1,   380,   381,   382,   383,    -1,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,    -1,   404,    -1,   406,   407,
     408,   409,   410,    -1,   412,   413,    -1,    -1,   416,   417,
     418,   419,   420,    -1,   422,   423,   424,   425,   426,   427,
     428,   429,    -1,    -1,   432,   433,   434,   435,   436,    -1,
      -1,   439,   440,   441,   442,   443,   444,   445,    -1,   447,
      -1,   449,   450,   451,   452,    -1,    -1,   455,    -1,    -1,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,    -1,   158,    -1,   160,   161,
     162,   163,    -1,   165,    -1,   167,    -1,    -1,    -1,   171,
     172,   173,    -1,   175,    -1,   177,    -1,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,   189,    -1,   191,
     192,   193,   194,    -1,   196,   197,   198,   199,   200,   201,
      -1,   203,    -1,   205,   206,   207,   208,   209,   210,   211,
     212,    -1,   214,    -1,   216,    -1,    -1,   219,    -1,   221,
     222,   223,   224,   225,   226,    -1,    -1,   229,    -1,   231,
      -1,    -1,   234,   235,   236,    -1,    -1,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,    -1,   265,   266,   267,   268,   269,    -1,   271,
     272,    -1,   274,    -1,   276,   277,   278,   279,   280,   281,
      -1,   283,   284,    -1,   286,   287,   288,   289,    -1,    -1,
     292,   293,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,    -1,   309,   310,   311,
     312,   313,   314,   315,   316,   317,    -1,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,   328,   329,   330,   331,
     332,   333,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,    -1,   349,   350,    -1,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,    -1,   374,   375,   376,   377,   378,    -1,   380,   381,
     382,   383,    -1,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,    -1,   404,    -1,   406,   407,   408,   409,   410,    -1,
     412,   413,    -1,    -1,   416,   417,   418,   419,   420,    -1,
     422,   423,   424,   425,   426,   427,   428,   429,    -1,    -1,
     432,   433,   434,   435,   436,    -1,    -1,   439,   440,   441,
     442,   443,   444,   445,    -1,   447,    -1,   449,   450,   451,
     452,    -1,    -1,   455,    -1,    -1,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    31,    32,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    81,    -1,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    -1,    95,
      96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,    -1,   160,   161,   162,   163,    -1,   165,
      -1,   167,    -1,    -1,    -1,   171,   172,   173,    -1,   175,
      -1,   177,    -1,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,   189,    -1,   191,   192,   193,   194,    -1,
     196,   197,   198,   199,   200,   201,    -1,   203,    -1,   205,
     206,   207,   208,   209,   210,   211,   212,    -1,   214,    -1,
     216,    -1,    -1,   219,    -1,   221,   222,   223,   224,   225,
     226,    -1,    -1,   229,    -1,   231,    -1,    -1,   234,   235,
     236,    -1,    -1,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,    -1,   265,
     266,   267,   268,   269,    -1,   271,   272,    -1,   274,    -1,
     276,   277,   278,   279,   280,   281,    -1,   283,   284,    -1,
      -1,   287,   288,   289,    -1,    -1,   292,   293,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,    -1,   309,   310,   311,   312,   313,   314,   315,
     316,   317,    -1,   319,   320,   321,   322,   323,   324,    -1,
     326,   327,   328,   329,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,    -1,   349,   350,    -1,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,    -1,   374,   375,
     376,   377,   378,    -1,   380,   381,   382,   383,    -1,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,    -1,   404,    -1,
     406,   407,   408,   409,   410,    -1,   412,   413,    -1,    -1,
     416,   417,   418,   419,   420,    -1,   422,   423,   424,   425,
     426,   427,   428,   429,    -1,    -1,   432,   433,   434,   435,
     436,    -1,    -1,   439,   440,   441,   442,   443,   444,   445,
      -1,   447,    -1,   449,   450,   451,   452,    -1,    -1,   455,
      -1,    -1,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,     3,    -1,     5,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    81,    -1,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,    -1,   158,    -1,
     160,   161,   162,   163,    -1,   165,    -1,   167,    -1,    -1,
      -1,   171,   172,   173,    -1,   175,    -1,   177,    -1,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,   189,
      -1,   191,   192,   193,   194,    -1,   196,   197,   198,   199,
     200,   201,    -1,   203,    -1,   205,   206,   207,   208,   209,
     210,   211,   212,    -1,   214,    -1,   216,    -1,    -1,   219,
      -1,   221,   222,   223,   224,   225,   226,    -1,    -1,   229,
      -1,   231,    -1,    -1,   234,   235,   236,    -1,    -1,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,    -1,   265,   266,   267,   268,   269,
      -1,   271,   272,    -1,   274,    -1,   276,   277,   278,   279,
     280,   281,    -1,   283,   284,    -1,    -1,   287,   288,   289,
      -1,    -1,   292,   293,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,    -1,   309,
     310,   311,   312,   313,   314,   315,   316,   317,    -1,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,    -1,   349,
     350,    -1,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,    -1,   374,   375,   376,   377,   378,    -1,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,   403,   404,    -1,   406,   407,   408,   409,
     410,    -1,   412,   413,    -1,    -1,   416,   417,   418,   419,
     420,    -1,   422,   423,   424,   425,   426,   427,   428,   429,
      -1,    -1,   432,   433,   434,   435,   436,    -1,    -1,   439,
     440,   441,   442,   443,   444,   445,    -1,   447,    -1,   449,
     450,   451,   452,    -1,    -1,   455,    -1,    -1,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,     3,
       4,    -1,    -1,    -1,    -1,     9,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,    -1,   158,    -1,   160,   161,   162,   163,
      -1,   165,    -1,   167,    -1,    -1,    -1,   171,   172,   173,
      -1,   175,    -1,   177,    -1,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,   189,    -1,   191,   192,   193,
     194,    -1,   196,   197,   198,   199,   200,   201,    -1,   203,
      -1,   205,   206,   207,   208,   209,   210,   211,   212,    -1,
     214,    -1,   216,    -1,    -1,   219,    -1,   221,   222,   223,
     224,   225,   226,    -1,    -1,   229,    -1,   231,    -1,    -1,
     234,   235,   236,    -1,    -1,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
      -1,   265,   266,   267,   268,   269,    -1,   271,   272,    -1,
     274,    -1,   276,   277,   278,   279,   280,   281,    -1,   283,
     284,    -1,    -1,   287,   288,   289,    -1,    -1,   292,   293,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,    -1,   309,   310,   311,   312,   313,
     314,   315,   316,   317,    -1,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,    -1,   349,   350,    -1,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,    -1,
     374,   375,   376,   377,   378,    -1,   380,   381,   382,   383,
      -1,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,    -1,
     404,    -1,   406,   407,   408,   409,   410,    -1,   412,   413,
      -1,    -1,   416,   417,   418,   419,   420,    -1,   422,   423,
     424,   425,   426,   427,   428,   429,    -1,    -1,   432,   433,
     434,   435,   436,    -1,    -1,   439,   440,   441,   442,   443,
     444,   445,    -1,   447,    -1,   449,   450,   451,   452,    -1,
      -1,   455,    -1,    -1,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    81,    -1,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    -1,    95,    96,    97,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,    -1,
     158,    -1,   160,   161,   162,   163,    -1,   165,    -1,   167,
      -1,    -1,    -1,   171,   172,   173,    -1,   175,    -1,   177,
      -1,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,   189,    -1,   191,   192,   193,   194,    -1,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,    -1,   214,    -1,   216,    -1,
      -1,   219,    -1,   221,   222,   223,   224,   225,   226,    -1,
      -1,   229,    -1,   231,    -1,    -1,   234,   235,   236,    -1,
      -1,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,    -1,   265,   266,   267,
     268,   269,    -1,   271,   272,    -1,   274,    -1,   276,   277,
     278,   279,   280,   281,    -1,   283,   284,    -1,    -1,   287,
     288,   289,    -1,    -1,   292,   293,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
      -1,   309,   310,   311,   312,   313,   314,   315,   316,   317,
      -1,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
      -1,   349,   350,    -1,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,    -1,   374,   375,   376,   377,
     378,    -1,   380,   381,   382,   383,    -1,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,    -1,   404,    -1,   406,   407,
     408,   409,   410,    -1,   412,   413,    -1,    -1,   416,   417,
     418,   419,   420,    -1,   422,   423,   424,   425,   426,   427,
     428,   429,    -1,    -1,   432,   433,   434,   435,   436,    -1,
      -1,   439,   440,   441,   442,   443,   444,   445,    -1,   447,
      -1,   449,   450,   451,   452,    -1,    -1,   455,    -1,    -1,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,    -1,   158,    -1,   160,   161,
     162,   163,    -1,   165,    -1,   167,    -1,    -1,    -1,   171,
     172,   173,    -1,   175,    -1,   177,    -1,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,   189,    -1,   191,
     192,   193,   194,    -1,   196,   197,   198,   199,   200,   201,
      -1,   203,    -1,   205,   206,   207,   208,   209,   210,   211,
     212,    -1,   214,    -1,   216,    -1,    -1,   219,    -1,   221,
     222,   223,   224,   225,   226,    -1,    -1,   229,    -1,   231,
      -1,    -1,   234,   235,   236,    -1,    -1,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,    -1,   265,   266,   267,   268,   269,    -1,   271,
     272,    -1,   274,    -1,   276,   277,   278,   279,   280,   281,
      -1,   283,   284,    -1,    -1,   287,   288,   289,    -1,    -1,
     292,   293,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,    -1,   309,   310,   311,
     312,   313,   314,   315,   316,   317,    -1,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,   328,   329,   330,   331,
     332,   333,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,    -1,   349,   350,    -1,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,    -1,   374,   375,   376,   377,   378,    -1,   380,   381,
     382,   383,    -1,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,    -1,   404,    -1,   406,   407,   408,   409,   410,    -1,
     412,   413,    -1,    -1,   416,   417,   418,   419,   420,    -1,
     422,   423,   424,   425,   426,   427,   428,   429,    -1,    -1,
     432,   433,   434,   435,   436,    -1,    -1,   439,   440,   441,
     442,   443,   444,   445,    -1,   447,    -1,   449,   450,   451,
     452,    -1,    -1,   455,    -1,    -1,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    27,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    81,    -1,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    -1,    95,
      96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,    -1,   160,   161,   162,   163,    -1,   165,
      -1,   167,    -1,    -1,    -1,   171,   172,   173,    -1,   175,
      -1,   177,    -1,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,   189,    -1,   191,   192,   193,   194,    -1,
     196,   197,   198,   199,   200,   201,    -1,   203,    -1,   205,
     206,   207,   208,   209,   210,   211,   212,    -1,   214,    -1,
     216,    -1,    -1,   219,    -1,   221,   222,   223,   224,   225,
     226,    -1,    -1,   229,    -1,   231,    -1,    -1,   234,   235,
     236,    -1,    -1,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,    -1,   265,
     266,   267,   268,   269,    -1,   271,   272,    -1,   274,    -1,
     276,   277,   278,   279,   280,   281,    -1,   283,   284,    -1,
      -1,   287,   288,   289,    -1,    -1,   292,   293,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,    -1,   309,   310,   311,   312,   313,   314,   315,
     316,   317,    -1,   319,   320,   321,   322,   323,   324,    -1,
     326,   327,   328,   329,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,    -1,   349,   350,    -1,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,    -1,   374,   375,
     376,   377,   378,    -1,   380,   381,   382,   383,    -1,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,    -1,   404,    -1,
     406,   407,   408,   409,   410,    -1,   412,   413,    -1,    -1,
     416,   417,   418,   419,   420,    -1,   422,   423,   424,   425,
     426,   427,   428,   429,    -1,    -1,   432,   433,   434,   435,
     436,    -1,    -1,   439,   440,   441,   442,   443,   444,   445,
      -1,   447,    -1,   449,   450,   451,   452,    -1,    -1,   455,
      -1,    -1,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,     3,    -1,     5,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    81,    -1,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,    -1,   158,    -1,
     160,   161,   162,   163,    -1,   165,    -1,   167,    -1,    -1,
      -1,   171,   172,   173,    -1,   175,    -1,   177,    -1,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,   189,
      -1,   191,   192,   193,   194,    -1,   196,   197,   198,   199,
     200,   201,    -1,   203,    -1,   205,   206,   207,   208,   209,
     210,   211,   212,    -1,   214,    -1,   216,    -1,    -1,   219,
      -1,   221,   222,   223,   224,   225,   226,    -1,    -1,   229,
      -1,   231,    -1,    -1,   234,   235,   236,    -1,    -1,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,    -1,   265,   266,   267,   268,   269,
      -1,   271,   272,    -1,   274,    -1,   276,   277,   278,   279,
     280,   281,    -1,   283,   284,    -1,    -1,   287,   288,   289,
      -1,    -1,   292,   293,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,    -1,   309,
     310,   311,   312,   313,   314,   315,   316,   317,    -1,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,    -1,   349,
     350,    -1,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,    -1,   374,   375,   376,   377,   378,    -1,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,    -1,   404,    -1,   406,   407,   408,   409,
     410,    -1,   412,   413,    -1,    -1,   416,   417,   418,   419,
     420,    -1,   422,   423,   424,   425,   426,   427,   428,   429,
      -1,    -1,   432,   433,   434,   435,   436,    -1,    -1,   439,
     440,   441,   442,   443,   444,   445,    -1,   447,    -1,   449,
     450,   451,   452,    -1,    -1,   455,    -1,    -1,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,     3,
      -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,    -1,   158,    -1,   160,   161,   162,   163,
      -1,   165,    -1,   167,    -1,    -1,    -1,   171,   172,   173,
      -1,   175,    -1,   177,    -1,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,   189,    -1,   191,   192,   193,
     194,    -1,   196,   197,   198,   199,   200,   201,    -1,   203,
      -1,   205,   206,   207,   208,   209,   210,   211,   212,    -1,
     214,    -1,   216,    -1,    -1,   219,    -1,   221,   222,   223,
     224,   225,   226,    -1,    -1,   229,    -1,   231,    -1,    -1,
     234,   235,   236,    -1,    -1,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
      -1,   265,   266,   267,   268,   269,    -1,   271,   272,    -1,
     274,    -1,   276,   277,   278,   279,   280,   281,    -1,   283,
     284,    -1,    -1,   287,   288,   289,    -1,    -1,   292,   293,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,    -1,   309,   310,   311,   312,   313,
     314,   315,   316,   317,    -1,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,    -1,   349,   350,    -1,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,    -1,
     374,   375,   376,   377,   378,    -1,   380,   381,   382,   383,
      -1,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,    -1,
     404,    -1,   406,   407,   408,   409,   410,    -1,   412,   413,
      -1,    -1,   416,   417,   418,   419,   420,    -1,   422,   423,
     424,   425,   426,   427,   428,   429,    -1,    -1,   432,   433,
     434,   435,   436,    -1,    -1,   439,   440,   441,   442,   443,
     444,   445,    -1,   447,    -1,   449,   450,   451,   452,    -1,
      -1,   455,    -1,    -1,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,     3,    -1,     5,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    81,    -1,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    -1,    95,    96,    97,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,    -1,
     158,    -1,   160,   161,   162,   163,    -1,   165,    -1,   167,
      -1,    -1,    -1,   171,   172,   173,    -1,   175,    -1,   177,
      -1,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,   189,    -1,   191,   192,   193,   194,    -1,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,    -1,   214,    -1,   216,    -1,
      -1,   219,    -1,   221,   222,   223,   224,   225,   226,    -1,
      -1,   229,    -1,   231,    -1,    -1,   234,   235,   236,    -1,
      -1,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,    -1,   265,   266,   267,
     268,   269,    -1,   271,   272,    -1,   274,    -1,   276,   277,
     278,   279,   280,   281,    -1,   283,   284,    -1,    -1,   287,
     288,   289,    -1,    -1,   292,   293,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
      -1,   309,   310,   311,   312,   313,   314,   315,   316,   317,
      -1,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
      -1,   349,   350,    -1,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,    -1,   374,   375,   376,   377,
     378,    -1,   380,   381,   382,   383,    -1,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,    -1,   404,    -1,   406,   407,
     408,   409,   410,    -1,   412,   413,    -1,    -1,   416,   417,
     418,   419,   420,    -1,   422,   423,   424,   425,   426,   427,
     428,   429,    -1,    -1,   432,   433,   434,   435,   436,    -1,
      -1,   439,   440,   441,   442,   443,   444,   445,    -1,   447,
      -1,   449,   450,   451,   452,    -1,    -1,   455,    -1,    -1,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,    -1,   158,    -1,   160,   161,
     162,   163,    -1,   165,    -1,   167,    -1,    -1,    -1,   171,
     172,   173,    -1,   175,    -1,   177,    -1,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,   189,    -1,   191,
     192,   193,   194,    -1,   196,   197,   198,   199,   200,   201,
      -1,   203,    -1,   205,   206,   207,   208,   209,   210,   211,
     212,    -1,   214,    -1,   216,    -1,    -1,   219,    -1,   221,
     222,   223,   224,   225,   226,    -1,    -1,   229,    -1,   231,
      -1,    -1,   234,   235,   236,    -1,    -1,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,    -1,   265,   266,   267,   268,   269,    -1,   271,
     272,    -1,   274,    -1,   276,   277,   278,   279,   280,   281,
      -1,   283,   284,    -1,    -1,   287,   288,   289,    -1,    -1,
     292,   293,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,    -1,   309,   310,   311,
     312,   313,   314,   315,   316,   317,    -1,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,   328,   329,   330,   331,
     332,   333,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,    -1,   349,   350,    -1,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,    -1,   374,   375,   376,   377,   378,    -1,   380,   381,
     382,   383,    -1,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,    -1,   404,    -1,   406,   407,   408,   409,   410,    -1,
     412,   413,    -1,    -1,   416,   417,   418,   419,   420,    -1,
     422,   423,   424,   425,   426,   427,   428,   429,    -1,    -1,
     432,   433,   434,   435,   436,    -1,    -1,   439,   440,   441,
     442,   443,   444,   445,    -1,   447,    -1,   449,   450,   451,
     452,    -1,    -1,   455,    -1,    -1,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    27,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    81,    -1,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    -1,    95,
      96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,    -1,   160,   161,   162,   163,    -1,   165,
      -1,   167,    -1,    -1,    -1,   171,   172,   173,    -1,   175,
      -1,   177,    -1,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,   189,    -1,   191,   192,   193,   194,    -1,
     196,   197,   198,   199,   200,   201,    -1,   203,    -1,   205,
     206,   207,   208,   209,   210,   211,   212,    -1,   214,    -1,
     216,    -1,    -1,   219,    -1,   221,   222,   223,   224,   225,
     226,    -1,    -1,   229,    -1,   231,    -1,    -1,   234,   235,
     236,    -1,    -1,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,    -1,   265,
     266,   267,   268,   269,    -1,   271,   272,    -1,   274,    -1,
     276,   277,   278,   279,   280,   281,    -1,   283,   284,    -1,
      -1,   287,   288,   289,    -1,    -1,   292,   293,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,    -1,   309,   310,   311,   312,   313,   314,   315,
     316,   317,    -1,   319,   320,   321,   322,   323,   324,    -1,
     326,   327,   328,   329,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,    -1,   349,   350,    -1,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,    -1,   374,   375,
     376,   377,   378,    -1,   380,   381,   382,   383,    -1,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,    -1,   404,    -1,
     406,   407,   408,   409,   410,    -1,   412,   413,    -1,    -1,
     416,   417,   418,   419,   420,    -1,   422,   423,   424,   425,
     426,   427,   428,   429,    -1,    -1,   432,   433,   434,   435,
     436,    -1,    -1,   439,   440,   441,   442,   443,   444,   445,
      -1,   447,    -1,   449,   450,   451,   452,    -1,    -1,   455,
      -1,    -1,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,     3,    -1,     5,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    81,    -1,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,    -1,   158,    -1,
     160,   161,   162,   163,    -1,   165,    -1,   167,    -1,    -1,
      -1,   171,   172,   173,    -1,   175,    -1,   177,    -1,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,   189,
      -1,   191,   192,   193,   194,    -1,   196,   197,   198,   199,
     200,   201,    -1,   203,    -1,   205,   206,   207,   208,   209,
     210,   211,   212,    -1,   214,    -1,   216,    -1,    -1,   219,
      -1,   221,   222,   223,   224,   225,   226,    -1,    -1,   229,
      -1,   231,    -1,    -1,   234,   235,   236,    -1,    -1,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,    -1,   265,   266,   267,   268,   269,
      -1,   271,   272,    -1,   274,    -1,   276,   277,   278,   279,
     280,   281,    -1,   283,   284,    -1,    -1,   287,   288,   289,
      -1,    -1,   292,   293,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,    -1,   309,
     310,   311,   312,   313,   314,   315,   316,   317,    -1,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,    -1,   349,
     350,    -1,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,    -1,   374,   375,   376,   377,   378,    -1,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,    -1,   404,    -1,   406,   407,   408,   409,
     410,    -1,   412,   413,    -1,    -1,   416,   417,   418,   419,
     420,    -1,   422,   423,   424,   425,   426,   427,   428,   429,
      -1,    -1,   432,   433,   434,   435,   436,    -1,    -1,   439,
     440,   441,   442,   443,   444,   445,    -1,   447,    -1,   449,
     450,   451,   452,    -1,    -1,   455,    -1,    -1,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,     3,
      -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,    -1,   158,    -1,   160,   161,   162,   163,
      -1,   165,    -1,   167,    -1,    -1,    -1,   171,   172,   173,
      -1,   175,    -1,   177,    -1,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,   189,    -1,   191,   192,   193,
     194,    -1,   196,   197,   198,   199,   200,   201,    -1,   203,
      -1,   205,   206,   207,   208,   209,   210,   211,   212,    -1,
     214,    -1,   216,    -1,    -1,   219,    -1,   221,   222,   223,
     224,   225,   226,    -1,    -1,   229,    -1,   231,    -1,    -1,
     234,   235,   236,    -1,    -1,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
      -1,   265,   266,   267,   268,   269,    -1,   271,   272,    -1,
     274,    -1,   276,   277,   278,   279,   280,   281,    -1,   283,
     284,    -1,    -1,   287,   288,   289,    -1,    -1,   292,   293,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,    -1,   309,   310,   311,   312,   313,
     314,   315,   316,   317,    -1,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,    -1,   349,   350,    -1,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,    -1,
     374,   375,   376,   377,   378,    -1,   380,   381,   382,   383,
      -1,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,    -1,
     404,    -1,   406,   407,   408,   409,   410,    -1,   412,   413,
      -1,    -1,   416,   417,   418,   419,   420,    -1,   422,   423,
     424,   425,   426,   427,   428,   429,    -1,    -1,   432,   433,
     434,   435,   436,    -1,    -1,   439,   440,   441,   442,   443,
     444,   445,    -1,   447,    -1,   449,   450,   451,   452,    -1,
      -1,   455,    -1,    -1,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,     3,    -1,     5,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    81,    -1,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    -1,    95,    96,    97,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,    -1,
     158,    -1,   160,   161,   162,   163,    -1,   165,    -1,   167,
      -1,    -1,    -1,   171,   172,   173,    -1,   175,    -1,   177,
      -1,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,   189,    -1,   191,   192,   193,   194,    -1,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,    -1,   214,    -1,   216,    -1,
      -1,   219,    -1,   221,   222,   223,   224,   225,   226,    -1,
      -1,   229,    -1,   231,    -1,    -1,   234,   235,   236,    -1,
      -1,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,    -1,   265,   266,   267,
     268,   269,    -1,   271,   272,    -1,   274,    -1,   276,   277,
     278,   279,   280,   281,    -1,   283,   284,    -1,    -1,   287,
     288,   289,    -1,    -1,   292,   293,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
      -1,   309,   310,   311,   312,   313,   314,   315,   316,   317,
      -1,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
      -1,   349,   350,    -1,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,    -1,   374,   375,   376,   377,
     378,    -1,   380,   381,   382,   383,    -1,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,    -1,   404,    -1,   406,   407,
     408,   409,   410,    -1,   412,   413,    -1,    -1,   416,   417,
     418,   419,   420,    -1,   422,   423,   424,   425,   426,   427,
     428,   429,    -1,    -1,   432,   433,   434,   435,   436,    -1,
      -1,   439,   440,   441,   442,   443,   444,   445,    -1,   447,
      -1,   449,   450,   451,   452,    -1,    -1,   455,    -1,    -1,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    36,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,    -1,   158,    -1,   160,   161,
     162,   163,    -1,   165,    -1,   167,    -1,    -1,    -1,   171,
     172,   173,    -1,   175,    -1,   177,    -1,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,   189,    -1,   191,
     192,   193,   194,    -1,   196,   197,   198,   199,   200,   201,
      -1,   203,    -1,   205,   206,   207,   208,   209,   210,   211,
     212,    -1,   214,    -1,   216,    -1,    -1,   219,    -1,   221,
     222,   223,   224,   225,   226,    -1,    -1,   229,    -1,   231,
      -1,    -1,   234,   235,   236,    -1,    -1,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,    -1,   265,   266,   267,   268,   269,    -1,   271,
     272,    -1,   274,    -1,   276,   277,   278,   279,   280,   281,
      -1,   283,   284,    -1,    -1,   287,   288,   289,    -1,    -1,
     292,   293,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,    -1,   309,   310,   311,
     312,   313,   314,   315,   316,   317,    -1,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,   328,   329,   330,   331,
     332,   333,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,    -1,   349,   350,    -1,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,    -1,   374,   375,   376,   377,   378,    -1,   380,   381,
     382,   383,    -1,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,    -1,   404,    -1,   406,   407,   408,   409,   410,    -1,
     412,   413,    -1,    -1,   416,   417,   418,   419,   420,    -1,
     422,   423,   424,   425,   426,   427,   428,   429,    -1,    -1,
     432,   433,   434,   435,   436,    -1,    -1,   439,   440,   441,
     442,   443,   444,   445,    -1,   447,    -1,   449,   450,   451,
     452,    -1,    -1,   455,    -1,    -1,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      36,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    81,    -1,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    -1,    95,
      96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,    -1,   160,   161,   162,   163,    -1,   165,
      -1,   167,    -1,    -1,    -1,   171,   172,   173,    -1,   175,
      -1,   177,    -1,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,   189,    -1,   191,   192,   193,   194,    -1,
     196,   197,   198,   199,   200,   201,    -1,   203,    -1,   205,
     206,   207,   208,   209,   210,   211,   212,    -1,   214,    -1,
     216,    -1,    -1,   219,    -1,   221,   222,   223,   224,   225,
     226,    -1,    -1,   229,    -1,   231,    -1,    -1,   234,   235,
     236,    -1,    -1,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,    -1,   265,
     266,   267,   268,   269,    -1,   271,   272,    -1,   274,    -1,
     276,   277,   278,   279,   280,   281,    -1,   283,   284,    -1,
      -1,   287,   288,   289,    -1,    -1,   292,   293,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,    -1,   309,   310,   311,   312,   313,   314,   315,
     316,   317,    -1,   319,   320,   321,   322,   323,   324,    -1,
     326,   327,   328,   329,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,    -1,   349,   350,    -1,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,    -1,   374,   375,
     376,   377,   378,    -1,   380,   381,   382,   383,    -1,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,    -1,   404,    -1,
     406,   407,   408,   409,   410,    -1,   412,   413,    -1,    -1,
     416,   417,   418,   419,   420,    -1,   422,   423,   424,   425,
     426,   427,   428,   429,    -1,    -1,   432,   433,   434,   435,
     436,    -1,    -1,   439,   440,   441,   442,   443,   444,   445,
      -1,   447,    -1,   449,   450,   451,   452,    -1,    -1,   455,
      -1,    -1,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,     3,    -1,     5,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    81,    -1,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,    -1,   158,    -1,
     160,   161,   162,   163,    -1,   165,    -1,   167,    -1,    -1,
      -1,   171,   172,   173,    -1,   175,    -1,   177,    -1,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,   189,
      -1,   191,   192,   193,   194,    -1,   196,   197,   198,   199,
     200,   201,    -1,   203,    -1,   205,   206,   207,   208,   209,
     210,   211,   212,    -1,   214,    -1,   216,    -1,    -1,   219,
      -1,   221,   222,   223,   224,   225,   226,    -1,    -1,   229,
      -1,   231,    -1,    -1,   234,   235,   236,    -1,    -1,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,    -1,   265,   266,   267,   268,   269,
      -1,   271,   272,    -1,   274,    -1,   276,   277,   278,   279,
     280,   281,    -1,   283,   284,    -1,    -1,   287,   288,   289,
      -1,    -1,   292,   293,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,    -1,   309,
     310,   311,   312,   313,   314,   315,   316,   317,    -1,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,    -1,   349,
     350,    -1,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,    -1,   374,   375,   376,   377,   378,    -1,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,    -1,   404,    -1,   406,   407,   408,   409,
     410,    -1,   412,   413,    -1,    -1,   416,   417,   418,   419,
     420,    -1,   422,   423,   424,   425,   426,   427,   428,   429,
      -1,    -1,   432,   433,   434,   435,   436,    -1,    -1,   439,
     440,   441,   442,   443,   444,   445,    -1,   447,    -1,   449,
     450,   451,   452,    -1,    -1,   455,    -1,    -1,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,    -1,   158,    -1,   160,   161,   162,   163,
      -1,   165,    -1,   167,    -1,    -1,    -1,   171,   172,   173,
      -1,   175,    -1,   177,    -1,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,   189,    -1,   191,   192,   193,
     194,    -1,   196,   197,   198,   199,   200,   201,    -1,   203,
      -1,   205,   206,   207,   208,   209,   210,   211,   212,    -1,
     214,    -1,   216,    -1,    -1,   219,    -1,   221,   222,   223,
     224,   225,   226,    -1,    -1,   229,    -1,   231,    -1,    -1,
     234,   235,   236,    -1,    -1,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
      -1,   265,   266,   267,   268,   269,    -1,   271,   272,    -1,
     274,    -1,   276,   277,   278,   279,   280,   281,    -1,   283,
     284,    -1,    -1,   287,   288,   289,    -1,    -1,   292,   293,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,    -1,   309,   310,   311,   312,   313,
     314,   315,   316,   317,    -1,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,    -1,   349,   350,    -1,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,    -1,
     374,   375,   376,   377,   378,    -1,   380,   381,   382,   383,
      -1,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,    -1,
     404,    -1,   406,   407,   408,   409,   410,    -1,   412,   413,
      -1,    -1,   416,   417,   418,   419,   420,    -1,   422,   423,
     424,   425,   426,   427,   428,   429,    -1,    -1,   432,   433,
     434,   435,   436,    -1,    -1,   439,   440,   441,   442,   443,
     444,   445,    -1,   447,    -1,   449,   450,   451,   452,    -1,
      -1,   455,    -1,    -1,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    81,    -1,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    -1,    95,    96,    97,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,    -1,
     158,    -1,   160,   161,   162,   163,    -1,   165,    -1,   167,
      -1,    -1,    -1,   171,   172,   173,    -1,   175,    -1,   177,
      -1,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,   189,    -1,   191,   192,   193,   194,    -1,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,    -1,   214,    -1,   216,    -1,
      -1,   219,    -1,   221,   222,   223,   224,   225,   226,    -1,
      -1,   229,    -1,   231,    -1,    -1,   234,   235,   236,    -1,
      -1,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,    -1,   265,   266,   267,
     268,   269,    -1,   271,   272,    -1,   274,    -1,   276,   277,
     278,   279,   280,   281,    -1,   283,   284,    -1,    -1,   287,
     288,   289,    -1,    -1,   292,   293,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
      -1,   309,   310,   311,   312,   313,   314,   315,   316,   317,
      -1,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
      -1,   349,   350,    -1,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,    -1,   374,   375,   376,   377,
     378,    -1,   380,   381,   382,   383,    -1,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,    -1,   404,    -1,   406,   407,
     408,   409,   410,    -1,   412,   413,    -1,    -1,   416,   417,
     418,   419,   420,    -1,   422,   423,   424,   425,   426,   427,
     428,   429,    -1,    -1,   432,   433,   434,   435,   436,    -1,
      -1,   439,   440,   441,   442,   443,   444,   445,    -1,   447,
      -1,   449,   450,   451,   452,    -1,    -1,   455,    -1,    -1,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,    -1,   158,    -1,   160,   161,
     162,   163,    -1,   165,    -1,   167,    -1,    -1,    -1,   171,
     172,   173,    -1,   175,    -1,   177,    -1,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,   189,    -1,   191,
     192,   193,   194,    -1,   196,   197,   198,   199,   200,   201,
      -1,   203,    -1,   205,   206,   207,   208,   209,   210,   211,
     212,    -1,   214,    -1,   216,    -1,    -1,   219,    -1,   221,
     222,   223,   224,   225,   226,    -1,    -1,   229,    -1,   231,
      -1,    -1,   234,   235,   236,    -1,    -1,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,    -1,   265,   266,   267,   268,   269,    -1,   271,
     272,    -1,   274,    -1,   276,   277,   278,   279,   280,   281,
      -1,   283,   284,    -1,    -1,   287,   288,   289,    -1,    -1,
     292,   293,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,    -1,   309,   310,   311,
     312,   313,   314,   315,   316,   317,    -1,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,   328,   329,   330,   331,
     332,   333,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,    -1,   349,   350,    -1,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,    -1,   374,   375,   376,   377,   378,    -1,   380,   381,
     382,   383,    -1,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,    -1,   404,    -1,   406,   407,   408,   409,   410,    -1,
     412,   413,    -1,    -1,   416,   417,   418,   419,   420,    -1,
     422,   423,   424,   425,   426,   427,   428,   429,    -1,    -1,
     432,   433,   434,   435,   436,    -1,    -1,   439,   440,   441,
     442,   443,   444,   445,    -1,   447,    -1,   449,   450,   451,
     452,    -1,    -1,   455,    -1,    -1,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    81,    -1,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    -1,    95,
      96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,    -1,   160,   161,   162,   163,    -1,   165,
      -1,   167,    -1,    -1,    -1,   171,   172,   173,    -1,   175,
      -1,   177,    -1,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,   189,    -1,   191,   192,   193,   194,    -1,
     196,   197,   198,   199,   200,   201,    -1,   203,    -1,   205,
     206,   207,   208,   209,   210,   211,   212,    -1,   214,    -1,
     216,    -1,    -1,   219,    -1,   221,   222,   223,   224,   225,
     226,    -1,    -1,   229,    -1,   231,    -1,    -1,   234,   235,
     236,    -1,    -1,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,    -1,   265,
     266,   267,   268,   269,    -1,   271,   272,    -1,   274,    -1,
     276,   277,   278,   279,   280,   281,    -1,   283,   284,    -1,
      -1,   287,   288,   289,    -1,    -1,   292,   293,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,    -1,   309,   310,   311,   312,   313,   314,   315,
     316,   317,    -1,   319,   320,   321,   322,   323,   324,    -1,
     326,   327,   328,   329,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,    -1,   349,   350,    -1,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,    -1,   374,   375,
     376,   377,   378,    -1,   380,   381,   382,   383,    -1,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,    -1,   404,    -1,
     406,   407,   408,   409,   410,    -1,   412,   413,    -1,    -1,
     416,   417,   418,   419,   420,    -1,   422,   423,   424,   425,
     426,   427,   428,   429,    -1,    -1,   432,   433,   434,   435,
     436,    -1,    -1,   439,   440,   441,   442,   443,   444,   445,
      -1,   447,    -1,   449,   450,   451,   452,    -1,    -1,   455,
      -1,    -1,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    81,    -1,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,    -1,   158,    -1,
     160,   161,   162,   163,    -1,   165,    -1,   167,    -1,    -1,
      -1,   171,   172,   173,    -1,   175,    -1,   177,    -1,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,   189,
      -1,   191,   192,   193,   194,    -1,   196,   197,   198,   199,
     200,   201,    -1,   203,    -1,   205,   206,   207,   208,   209,
     210,   211,   212,    -1,   214,    -1,   216,    -1,    -1,   219,
      -1,   221,   222,   223,   224,   225,   226,    -1,    -1,   229,
      -1,   231,    -1,    -1,   234,   235,   236,    -1,    -1,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,    -1,   265,   266,   267,   268,   269,
      -1,   271,   272,    -1,   274,    -1,   276,   277,   278,   279,
     280,   281,    -1,   283,   284,    -1,    -1,   287,   288,   289,
      -1,    -1,   292,   293,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,    -1,   309,
     310,   311,   312,   313,   314,   315,   316,   317,    -1,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,    -1,   349,
     350,    -1,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,    -1,   374,   375,   376,   377,   378,    -1,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,    -1,   404,    -1,   406,   407,   408,   409,
     410,    -1,   412,   413,    -1,    -1,   416,   417,   418,   419,
     420,    -1,   422,   423,   424,   425,   426,   427,   428,   429,
      -1,    -1,   432,   433,   434,   435,   436,    -1,    -1,   439,
     440,   441,   442,   443,   444,   445,    -1,   447,    -1,   449,
     450,   451,   452,    -1,    -1,   455,    -1,    -1,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,    -1,   158,    -1,   160,   161,   162,   163,
      -1,   165,    -1,   167,    -1,    -1,    -1,   171,   172,   173,
      -1,   175,    -1,   177,    -1,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,   189,    -1,   191,   192,   193,
     194,    -1,   196,   197,   198,   199,   200,   201,    -1,   203,
      -1,   205,   206,   207,   208,   209,   210,   211,   212,    -1,
     214,    -1,   216,    -1,    -1,   219,    -1,   221,   222,   223,
     224,   225,   226,    -1,    -1,   229,    -1,   231,    -1,    -1,
     234,   235,   236,    -1,    -1,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
      -1,   265,   266,   267,   268,   269,    -1,   271,   272,    -1,
     274,    -1,   276,   277,   278,   279,   280,   281,    -1,   283,
     284,    -1,    -1,   287,   288,   289,    -1,    -1,   292,   293,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,    -1,   309,   310,   311,   312,   313,
     314,   315,   316,   317,    -1,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,    -1,   349,   350,    -1,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,    -1,
     374,   375,   376,   377,   378,    -1,   380,   381,   382,   383,
      -1,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,    -1,
     404,    -1,   406,   407,   408,   409,   410,    -1,   412,   413,
      -1,    -1,   416,   417,   418,   419,   420,    -1,   422,   423,
     424,   425,   426,   427,   428,   429,    -1,    -1,   432,   433,
     434,   435,   436,    -1,    -1,   439,   440,   441,   442,   443,
     444,   445,    -1,   447,    -1,   449,   450,   451,   452,    -1,
      -1,   455,    -1,    -1,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    81,    -1,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    -1,    95,    96,    97,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,    -1,
     158,    -1,   160,   161,   162,   163,    -1,   165,    -1,   167,
      -1,    -1,    -1,   171,   172,   173,    -1,   175,    -1,   177,
      -1,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,   189,    -1,   191,   192,   193,   194,    -1,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,    -1,   214,    -1,   216,    -1,
      -1,   219,    -1,   221,   222,   223,   224,   225,   226,    -1,
      -1,   229,    -1,   231,    -1,    -1,   234,   235,   236,    -1,
      -1,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,    -1,   265,   266,   267,
     268,   269,    -1,   271,   272,    -1,   274,    -1,   276,   277,
     278,   279,   280,   281,    -1,   283,   284,    -1,    -1,   287,
     288,   289,    -1,    -1,   292,   293,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
      -1,   309,   310,   311,   312,   313,   314,   315,   316,   317,
      -1,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
      -1,   349,   350,    -1,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,    -1,   374,   375,   376,   377,
     378,    -1,   380,   381,   382,   383,    -1,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,    -1,   404,    -1,   406,   407,
     408,   409,   410,    -1,   412,   413,    -1,    -1,   416,   417,
     418,   419,   420,    -1,   422,   423,   424,   425,   426,   427,
     428,   429,    -1,    -1,   432,   433,   434,   435,   436,    -1,
      -1,   439,   440,   441,   442,   443,   444,   445,    -1,   447,
      -1,   449,   450,   451,   452,    -1,    -1,   455,    -1,    -1,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,    -1,   158,    -1,   160,   161,
     162,   163,    -1,   165,    -1,   167,    -1,    -1,    -1,   171,
     172,   173,    -1,   175,    -1,   177,    -1,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,   189,    -1,   191,
     192,   193,   194,    -1,   196,   197,   198,   199,   200,   201,
      -1,   203,    -1,   205,   206,   207,   208,   209,   210,   211,
     212,    -1,   214,    -1,   216,    -1,    -1,   219,    -1,   221,
     222,   223,   224,   225,   226,    -1,    -1,   229,    -1,   231,
      -1,    -1,   234,   235,   236,    -1,    -1,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,    -1,   265,   266,   267,   268,   269,    -1,   271,
     272,    -1,   274,    -1,   276,   277,   278,   279,   280,   281,
      -1,   283,   284,    -1,    -1,   287,   288,   289,    -1,    -1,
     292,   293,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,    -1,   309,   310,   311,
     312,   313,   314,   315,   316,   317,    -1,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,   328,   329,   330,   331,
     332,   333,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,    -1,   349,   350,    -1,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,    -1,   374,   375,   376,   377,   378,    -1,   380,   381,
     382,   383,    -1,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,    -1,   404,    -1,   406,   407,   408,   409,   410,    -1,
     412,   413,    -1,    -1,   416,   417,   418,   419,   420,    -1,
     422,   423,   424,   425,   426,   427,   428,   429,    -1,    -1,
     432,   433,   434,   435,   436,    -1,    -1,   439,   440,   441,
     442,   443,   444,   445,    -1,   447,    -1,   449,   450,   451,
     452,    -1,    -1,   455,    -1,    -1,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      36,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    81,    -1,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    -1,    95,
      96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,    -1,   160,   161,   162,   163,    -1,   165,
      -1,   167,    -1,    -1,    -1,   171,   172,   173,    -1,   175,
      -1,   177,    -1,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,   189,    -1,   191,   192,   193,   194,    -1,
     196,   197,   198,   199,   200,   201,    -1,   203,    -1,   205,
     206,   207,   208,   209,   210,   211,   212,    -1,   214,    -1,
     216,    -1,    -1,   219,    -1,   221,   222,   223,   224,   225,
     226,    -1,    -1,   229,    -1,   231,    -1,    -1,   234,   235,
     236,    -1,    -1,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,    -1,   265,
     266,   267,   268,   269,    -1,   271,   272,    -1,   274,    -1,
     276,   277,   278,   279,   280,   281,    -1,   283,   284,    -1,
      -1,   287,   288,   289,    -1,    -1,   292,   293,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,    -1,   309,   310,   311,   312,   313,   314,   315,
     316,   317,    -1,   319,   320,   321,   322,   323,   324,    -1,
     326,   327,   328,   329,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,    -1,   349,   350,    -1,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,    -1,    -1,   375,
     376,   377,   378,    -1,   380,   381,   382,   383,    -1,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,    -1,   404,    -1,
     406,   407,   408,   409,   410,    -1,   412,   413,    -1,    -1,
     416,   417,   418,   419,   420,    -1,   422,   423,   424,   425,
     426,   427,   428,   429,    -1,    -1,   432,   433,   434,   435,
     436,    -1,    -1,   439,   440,   441,   442,   443,   444,   445,
      -1,   447,    -1,   449,   450,   451,   452,    -1,    -1,   455,
      -1,    -1,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    81,    -1,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,    -1,   158,    -1,
     160,   161,   162,   163,    -1,   165,    -1,   167,    -1,    -1,
      -1,   171,   172,   173,    -1,   175,    -1,   177,    -1,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,   189,
      -1,   191,   192,   193,   194,    -1,   196,   197,   198,   199,
     200,   201,    -1,   203,    -1,   205,   206,   207,   208,   209,
     210,   211,   212,    -1,   214,    -1,   216,    -1,    -1,   219,
      -1,   221,   222,   223,   224,   225,   226,    -1,    -1,   229,
      -1,   231,    -1,    -1,   234,   235,   236,    -1,    -1,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,    -1,   265,   266,   267,   268,   269,
      -1,   271,   272,    -1,   274,    -1,   276,   277,   278,   279,
     280,   281,    -1,   283,   284,    -1,    -1,   287,   288,   289,
      -1,    -1,   292,   293,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,    -1,   309,
     310,   311,   312,   313,   314,   315,   316,   317,    -1,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,    -1,   349,
     350,    -1,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,    -1,   374,   375,   376,   377,   378,    -1,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,    -1,   404,    -1,   406,   407,   408,   409,
     410,    -1,   412,   413,    -1,    -1,   416,   417,   418,   419,
     420,    -1,   422,   423,   424,   425,   426,   427,   428,   429,
      -1,    -1,   432,   433,   434,   435,   436,    -1,    -1,   439,
     440,   441,   442,   443,   444,   445,    -1,   447,    -1,   449,
     450,   451,   452,    -1,    -1,   455,    -1,    -1,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,    -1,   158,    -1,   160,   161,   162,   163,
      -1,   165,    -1,   167,    -1,    -1,    -1,   171,   172,   173,
      -1,   175,    -1,   177,    -1,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,   189,    -1,   191,   192,   193,
     194,    -1,   196,   197,   198,   199,   200,   201,    -1,   203,
      -1,   205,   206,   207,   208,   209,   210,   211,   212,    -1,
     214,    -1,   216,    -1,    -1,   219,    -1,   221,   222,   223,
     224,   225,   226,    -1,    -1,   229,    -1,   231,    -1,    -1,
     234,   235,   236,    -1,    -1,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
      -1,   265,   266,   267,   268,   269,    -1,   271,   272,    -1,
     274,    -1,   276,   277,   278,   279,   280,   281,    -1,   283,
     284,    -1,    -1,   287,   288,   289,    -1,    -1,   292,   293,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,    -1,   309,   310,   311,   312,   313,
     314,   315,   316,   317,    -1,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,    -1,   349,   350,    -1,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,    -1,
     374,   375,   376,   377,   378,    -1,   380,   381,   382,   383,
      -1,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,    -1,
     404,    -1,   406,   407,   408,   409,   410,    -1,   412,   413,
      -1,    -1,   416,   417,   418,   419,   420,    -1,   422,   423,
     424,   425,   426,   427,   428,   429,    -1,    -1,   432,   433,
     434,   435,   436,    -1,    -1,   439,   440,   441,   442,   443,
     444,   445,    -1,   447,    -1,   449,   450,   451,   452,    -1,
      -1,   455,    -1,    -1,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    81,    -1,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    -1,    95,    96,    97,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,    -1,
     158,    -1,   160,   161,   162,   163,    -1,   165,    -1,   167,
      -1,    -1,    -1,   171,   172,   173,    -1,   175,    -1,   177,
      -1,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,   189,    -1,   191,   192,   193,   194,    -1,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,    -1,   214,    -1,   216,    -1,
      -1,   219,    -1,   221,   222,   223,   224,   225,   226,    -1,
      -1,   229,    -1,   231,    -1,    -1,   234,   235,   236,    -1,
      -1,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,    -1,   265,   266,   267,
     268,   269,    -1,   271,   272,    -1,   274,    -1,   276,   277,
     278,   279,   280,   281,    -1,   283,   284,    -1,    -1,   287,
     288,   289,    -1,    -1,   292,   293,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
      -1,   309,   310,   311,   312,   313,   314,   315,   316,   317,
      -1,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
      -1,   349,   350,    -1,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,    -1,   374,   375,   376,   377,
     378,    -1,   380,   381,   382,   383,    -1,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,    -1,   404,    -1,   406,   407,
     408,   409,   410,    -1,   412,   413,    -1,    -1,   416,   417,
     418,   419,   420,    -1,   422,   423,   424,   425,   426,   427,
     428,   429,    -1,    -1,   432,   433,   434,   435,   436,    -1,
      -1,   439,   440,   441,   442,   443,   444,   445,    -1,   447,
      -1,   449,   450,   451,   452,    -1,    -1,   455,    -1,    -1,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,    -1,   158,    -1,   160,   161,
     162,   163,    -1,   165,    -1,   167,    -1,    -1,    -1,   171,
     172,   173,    -1,   175,    -1,   177,    -1,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,   189,    -1,   191,
     192,   193,   194,    -1,   196,   197,   198,   199,   200,   201,
      -1,   203,    -1,   205,   206,   207,   208,   209,   210,   211,
     212,    -1,   214,    -1,   216,    -1,    -1,   219,    -1,   221,
     222,   223,   224,   225,   226,    -1,    -1,   229,    -1,   231,
      -1,    -1,   234,   235,   236,    -1,    -1,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,    -1,   265,   266,   267,   268,   269,    -1,   271,
     272,    -1,   274,    -1,   276,   277,   278,   279,   280,   281,
      -1,   283,   284,    -1,    -1,   287,   288,   289,    -1,    -1,
     292,   293,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,    -1,   309,   310,   311,
     312,   313,   314,   315,   316,   317,    -1,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,   328,   329,   330,   331,
     332,   333,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,    -1,   349,   350,    -1,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,    -1,   374,   375,   376,   377,   378,    -1,   380,   381,
     382,   383,    -1,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,    -1,   404,    -1,   406,   407,   408,   409,   410,    -1,
     412,   413,    -1,    -1,   416,   417,   418,   419,   420,    -1,
     422,   423,   424,   425,   426,   427,   428,   429,    -1,    -1,
     432,   433,   434,   435,   436,    -1,    -1,   439,   440,   441,
     442,   443,   444,   445,    -1,   447,    -1,   449,   450,   451,
     452,    -1,    -1,   455,    -1,    -1,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    81,    -1,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    -1,    95,
      96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,    -1,   160,   161,   162,   163,    -1,   165,
      -1,   167,    -1,    -1,    -1,   171,   172,   173,    -1,   175,
      -1,   177,    -1,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,   189,    -1,   191,   192,   193,   194,    -1,
     196,   197,   198,   199,   200,   201,    -1,   203,    -1,   205,
     206,   207,   208,   209,   210,   211,   212,    -1,   214,    -1,
     216,    -1,    -1,   219,    -1,   221,   222,   223,   224,   225,
     226,    -1,    -1,   229,    -1,   231,    -1,    -1,   234,   235,
     236,    -1,    -1,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,    -1,   265,
     266,   267,   268,   269,    -1,   271,   272,    -1,   274,    -1,
     276,   277,   278,   279,   280,   281,    -1,   283,   284,    -1,
      -1,   287,   288,   289,    -1,    -1,   292,   293,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,    -1,   305,
     306,   307,    -1,   309,   310,   311,   312,   313,   314,   315,
     316,   317,    -1,   319,   320,   321,   322,   323,   324,    -1,
     326,    -1,   328,   329,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,    -1,   349,   350,    -1,   352,   353,   354,   355,
      -1,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,    -1,   374,   375,
     376,   377,   378,    -1,   380,   381,   382,   383,    -1,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,    -1,   404,    -1,
     406,   407,   408,   409,   410,    -1,   412,   413,    -1,    -1,
     416,   417,   418,   419,   420,    -1,   422,   423,   424,   425,
     426,   427,   428,   429,    -1,    -1,   432,   433,   434,   435,
     436,    -1,    -1,   439,   440,   441,   442,   443,   444,   445,
      -1,   447,    -1,   449,   450,   451,   452,    -1,    -1,   455,
      -1,    -1,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    44,    45,    46,    47,    -1,    49,
      50,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    -1,    -1,    74,    -1,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    94,    95,    96,    97,    -1,    -1,
      -1,   101,    -1,    -1,    -1,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
      -1,   151,   152,   153,   154,   155,    -1,    -1,   158,    -1,
     160,   161,   162,   163,    -1,   165,    -1,   167,   168,    -1,
     170,   171,   172,   173,   174,   175,    -1,   177,    -1,    -1,
      -1,   181,    -1,   183,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,    -1,   196,   197,   198,   199,
     200,   201,    -1,   203,   204,    -1,   206,   207,   208,   209,
     210,   211,   212,    -1,   214,    -1,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,    -1,    -1,   229,
     230,   231,   232,    -1,   234,   235,   236,    -1,    -1,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,    -1,
      -1,   271,   272,   273,   274,    -1,    -1,   277,   278,   279,
     280,   281,    -1,   283,   284,    -1,    -1,   287,   288,   289,
      -1,    -1,   292,    -1,   294,   295,   296,    -1,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,    -1,   309,
     310,    -1,   312,   313,    -1,   315,   316,   317,    -1,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,    -1,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,    -1,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,    -1,   399,
      -1,   401,   402,    -1,   404,   405,   406,   407,   408,   409,
     410,    -1,   412,   413,    -1,    -1,   416,   417,    -1,   419,
      -1,    -1,   422,   423,   424,   425,   426,   427,   428,   429,
      -1,    -1,   432,   433,   434,   435,   436,    -1,    -1,   439,
     440,   441,   442,   443,    -1,   445,    -1,   447,   448,   449,
     450,   451,   452,    -1,    -1,   455,    -1,    -1,   458,   459,
     460,   461,   462,   463,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   475,   476,   477,   478,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    44,    45,    46,    47,    -1,
      49,    50,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    -1,    -1,    74,    -1,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      89,    90,    91,    92,    -1,    94,    95,    96,    97,    -1,
      -1,    -1,   101,    -1,    -1,    -1,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,    -1,   116,    -1,   118,
     119,   120,   121,   122,   123,    -1,   125,   126,   127,   128,
     129,    -1,    -1,   132,   133,   134,   135,   136,    -1,   138,
     139,   140,    -1,   142,   143,   144,    -1,   146,   147,   148,
     149,    -1,   151,   152,   153,   154,   155,    -1,    -1,   158,
      -1,   160,   161,   162,   163,    -1,   165,    -1,   167,   168,
      -1,   170,   171,   172,   173,   174,   175,    -1,   177,    -1,
      -1,    -1,   181,    -1,   183,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,    -1,   196,   197,   198,
     199,   200,   201,    -1,   203,   204,    -1,   206,   207,   208,
     209,   210,   211,   212,    -1,   214,    -1,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,    -1,    -1,
     229,   230,   231,   232,    -1,   234,   235,   236,    -1,    -1,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
      -1,    -1,   271,   272,   273,   274,    -1,    -1,   277,   278,
     279,   280,   281,    -1,   283,   284,    -1,    -1,   287,   288,
     289,    -1,    -1,   292,    -1,   294,   295,   296,    -1,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,    -1,
     309,   310,    -1,   312,   313,    -1,   315,   316,   317,    -1,
     319,   320,   321,   322,   323,   324,    -1,   326,   327,   328,
     329,   330,   331,   332,   333,    -1,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,    -1,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,    -1,   368,
     369,   370,   371,   372,    -1,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,    -1,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,    -1,
     399,    -1,   401,   402,    -1,   404,   405,   406,   407,   408,
     409,   410,    -1,   412,   413,    -1,    -1,   416,   417,    -1,
     419,    -1,    -1,   422,   423,   424,   425,   426,   427,   428,
     429,    -1,    -1,   432,   433,   434,   435,   436,    -1,    -1,
     439,   440,   441,   442,   443,    -1,   445,    -1,   447,   448,
     449,   450,   451,   452,    -1,    -1,   455,    -1,    -1,   458,
     459,   460,   461,   462,   463,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   475,   476,   477,   478,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      -1,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    -1,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    94,    95,    96,    97,
      -1,    -1,    -1,   101,    -1,    -1,    -1,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,    -1,   151,   152,   153,   154,   155,    -1,    -1,
     158,    -1,   160,   161,   162,   163,    -1,   165,    -1,   167,
     168,    -1,   170,   171,   172,   173,   174,   175,    -1,   177,
      -1,    -1,    -1,   181,    -1,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,    -1,   196,   197,
     198,   199,   200,   201,    -1,   203,   204,    -1,   206,   207,
     208,   209,   210,   211,   212,    -1,   214,    -1,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,    -1,
      -1,   229,   230,   231,   232,    -1,   234,   235,   236,    -1,
      -1,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,    -1,    -1,   271,   272,   273,   274,    -1,    -1,   277,
     278,   279,   280,   281,    -1,   283,   284,    -1,    -1,   287,
     288,   289,    -1,    -1,   292,    -1,   294,   295,   296,    -1,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
      -1,   309,   310,    -1,   312,   313,    -1,   315,   316,   317,
      -1,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
      -1,   349,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,    -1,   374,    -1,   376,   377,
     378,   379,   380,   381,   382,   383,    -1,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
      -1,   399,    -1,   401,   402,    -1,   404,   405,   406,   407,
     408,   409,   410,    -1,   412,   413,    -1,    -1,   416,   417,
      -1,   419,    -1,    -1,   422,   423,   424,   425,   426,   427,
     428,   429,    -1,    -1,   432,   433,   434,   435,   436,    -1,
      -1,   439,   440,   441,   442,   443,    -1,   445,    -1,   447,
     448,   449,   450,   451,   452,    -1,    -1,   455,    -1,    -1,
     458,   459,   460,   461,   462,   463,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   475,   476,   477,
     478,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    44,    45,    46,
      47,    -1,    49,    50,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    -1,    -1,    74,    -1,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    89,    90,    91,    92,    -1,    94,    95,    96,
      97,    -1,    -1,    -1,   101,    -1,    -1,    -1,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,    -1,   116,
      -1,   118,   119,   120,   121,   122,   123,    -1,   125,   126,
     127,   128,   129,    -1,    -1,   132,   133,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,    -1,   146,
     147,   148,   149,    -1,   151,   152,   153,   154,   155,    -1,
      -1,   158,    -1,   160,   161,   162,   163,    -1,   165,    -1,
     167,   168,    -1,   170,   171,   172,   173,   174,   175,    -1,
     177,    -1,    -1,    -1,   181,    -1,   183,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   194,    -1,   196,
     197,   198,   199,   200,   201,    -1,   203,   204,    -1,   206,
     207,   208,   209,   210,   211,   212,    -1,   214,    -1,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
      -1,    -1,   229,   230,   231,   232,    -1,   234,   235,   236,
      -1,    -1,   239,   240,   241,   242,   243,    -1,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,    -1,    -1,   271,   272,   273,   274,    -1,    -1,
     277,   278,   279,   280,   281,    -1,   283,   284,    -1,    -1,
     287,   288,   289,    -1,    -1,   292,    -1,   294,   295,   296,
      -1,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,    -1,   309,   310,    -1,   312,   313,    -1,   315,   316,
     317,    -1,   319,   320,   321,   322,   323,   324,    -1,   326,
     327,   328,   329,   330,   331,   332,   333,    -1,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,    -1,   349,   350,   351,   352,   353,   354,    -1,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
      -1,   368,   369,   370,   371,   372,    -1,   374,    -1,   376,
     377,   378,   379,   380,   381,   382,   383,    -1,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,    -1,
     397,    -1,   399,    -1,   401,   402,    -1,   404,   405,   406,
     407,   408,   409,   410,    -1,   412,   413,    -1,    -1,   416,
     417,    -1,   419,    -1,    -1,   422,   423,   424,   425,   426,
     427,   428,   429,    -1,    -1,   432,   433,   434,   435,   436,
      -1,    -1,   439,   440,   441,   442,   443,    -1,   445,    -1,
     447,   448,   449,   450,   451,   452,    -1,    -1,   455,    -1,
      -1,   458,   459,   460,   461,   462,   463,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   475,   476,
     477,   478
};

/* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
   symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,    19,    29,    31,    32,    47,    56,    68,    79,    91,
      93,   111,   125,   135,   141,   149,   151,   152,   165,   194,
     209,   235,   312,   315,   344,   353,   367,   374,   378,   388,
     399,   403,   439,   444,   457,   481,   495,   506,   507,   508,
     509,   520,   521,   524,   526,   530,   544,   545,   547,   549,
     556,   558,   604,   611,   614,   615,   632,   633,   634,   635,
     636,   637,   687,   825,   828,   831,   838,   839,   840,   841,
     842,   849,   853,   859,   861,   866,   870,   871,   874,   875,
     877,   878,   880,   416,   460,   557,   198,   360,   368,   403,
     450,   557,     3,    19,    20,    21,    22,    23,    24,    25,
      26,    28,    29,    30,    38,    39,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    54,    55,
      56,    57,    58,    59,    62,    63,    64,    65,    66,    68,
      69,    70,    71,    72,    74,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    87,    88,    89,    90,    91,
      92,    94,    95,    96,    97,   101,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   116,   118,   119,   120,
     121,   122,   123,   125,   126,   127,   128,   129,   132,   133,
     134,   135,   136,   138,   139,   140,   142,   143,   144,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     158,   160,   161,   162,   163,   165,   167,   168,   170,   171,
     172,   173,   174,   175,   177,   179,   180,   181,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     196,   197,   198,   199,   200,   201,   203,   204,   205,   206,
     207,   208,   209,   210,   211,   212,   214,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   229,   230,
     231,   232,   234,   235,   236,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   271,   272,   273,   274,
     276,   277,   278,   279,   280,   281,   283,   284,   287,   288,
     289,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   319,   320,   321,   322,
     323,   324,   326,   327,   328,   329,   330,   331,   332,   333,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   368,   369,   370,   371,   372,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   401,   402,   404,   405,   406,   407,   408,   409,   410,
     412,   413,   416,   417,   418,   419,   420,   422,   423,   424,
     425,   426,   427,   428,   429,   432,   433,   434,   435,   436,
     439,   440,   441,   442,   443,   444,   445,   447,   448,   449,
     450,   451,   452,   455,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   743,   810,   814,   817,   883,
     884,   885,   557,    50,   495,   627,   171,   175,   236,   243,
     290,   360,   407,   409,   425,   431,   434,   602,   612,   837,
       3,    27,   244,   315,   396,   808,   814,   883,    21,    74,
      90,   144,   154,   166,   171,   198,   243,   247,   310,   324,
     357,   360,   368,   371,   390,   403,   410,   419,   425,   450,
     605,   606,   609,   557,   808,    93,   448,   495,   526,   614,
     632,   845,   849,   866,   880,   108,    68,   209,   108,     5,
     813,   814,   860,   860,   814,   808,    27,   412,   416,   814,
     872,   873,   876,   557,    27,   130,   644,   645,   175,   236,
     360,   372,   412,   854,   855,   876,   557,   444,   632,   637,
     876,     5,   286,   698,   806,   814,   815,   170,   495,   863,
     495,   332,   638,   639,   808,   638,   633,   634,     0,   498,
     120,   208,   436,   145,   213,   291,   430,   647,   648,   633,
     635,   636,   499,   448,   843,    27,   412,   416,   632,   876,
     188,   806,   808,   188,   806,   188,   698,   188,   806,   495,
     493,   497,   792,   794,   526,   614,   632,   827,   866,   806,
     407,   409,   407,   409,   342,   188,   814,   814,   819,   332,
     368,   403,   450,   806,   198,    27,   808,   249,   419,   107,
     403,   450,   363,     3,    44,    49,    50,    51,    52,    64,
      65,    74,    82,    94,   101,   112,   113,   134,   162,   168,
     170,   174,   188,   190,   204,   211,   212,   214,   217,   218,
     220,   230,   232,   244,   263,   264,   265,   273,   278,   294,
     296,   329,   351,   355,   375,   379,   382,   396,   405,   412,
     413,   424,   445,   448,   610,   709,   710,   712,   714,   716,
     718,   720,   721,   722,   724,   725,   726,   728,   729,   818,
     883,   886,   188,   607,   819,   188,   807,   808,   188,   808,
     495,   548,   290,   602,   845,     3,    48,    49,    51,    52,
      64,    65,    72,   112,   113,   150,   156,   162,   179,   180,
     205,   211,   212,   214,   244,   263,   265,   269,   276,   278,
     293,   297,   311,   314,   329,   355,   375,   382,   396,   398,
     412,   413,   418,   420,   424,   444,   445,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   846,   848,
     849,   851,   852,   883,   887,   843,   813,   860,   813,   484,
     495,   495,   826,   478,   219,   497,   285,     4,     6,     7,
       8,     9,    10,    35,    49,    51,    52,    60,    61,    64,
      65,    72,    74,    98,    99,   100,   101,   102,   103,   104,
     112,   113,   115,   150,   156,   157,   162,   179,   180,   211,
     212,   214,   237,   238,   263,   265,   270,   275,   276,   278,
     287,   297,   311,   329,   355,   373,   382,   398,   412,   413,
     418,   420,   421,   424,   437,   445,   479,   486,   487,   488,
     493,   495,   500,   502,   503,   633,   677,   713,   716,   719,
     720,   721,   723,   724,   725,   728,   729,   740,   742,   743,
     744,   746,   760,   761,   767,   786,   791,   798,   799,   810,
     811,   812,   813,   814,   797,   798,   854,   854,   813,   854,
     478,   169,   414,   484,   495,   806,   488,   794,     3,   168,
     170,   448,   849,   862,   864,   168,   865,   740,   771,   814,
     638,   499,   495,   821,   496,   496,   508,   169,   215,   698,
     867,    27,   130,   643,   643,    54,   643,   159,   164,   233,
     282,   653,   655,   656,   680,   682,   683,   684,   647,   648,
     495,   806,   478,   219,   150,    23,    29,   135,   289,   340,
     344,   374,   441,   514,   517,   518,   340,   150,    36,    55,
     106,   197,   248,   256,   268,   299,   340,   346,   368,   374,
     388,   517,   550,   553,   150,   340,   374,   517,   150,   340,
     374,   517,     3,    27,    44,    50,    74,    82,    94,   101,
     130,   168,   170,   174,   190,   204,   217,   218,   220,   230,
     232,   244,   264,   273,   294,   296,   351,   379,   396,   405,
     424,   446,   448,   488,   496,   740,   773,   774,   816,   822,
     883,   888,   740,   793,     3,    27,    31,    32,    33,    34,
      35,    36,    37,    40,    53,    60,    61,    67,    73,    75,
      86,    93,    98,    99,   100,   102,   103,   104,   115,   117,
     124,   130,   131,   137,   141,   145,   157,   159,   164,   166,
     169,   176,   178,   182,   195,   202,   213,   215,   227,   228,
     233,   237,   238,   270,   275,   282,   285,   286,   290,   291,
     308,   318,   325,   334,   348,   367,   373,   384,   400,   403,
     411,   414,   415,   421,   430,   431,   437,   438,   444,   446,
     453,   454,   456,   457,   809,   823,   883,   887,   889,   792,
     496,   495,   592,   602,   270,   829,   497,   820,    36,   450,
     188,   806,   188,   806,   882,   806,   495,   613,    82,   834,
     461,    83,   127,   302,   408,   447,   727,   727,   727,   495,
     715,   715,   314,   495,   717,   150,   495,    64,    65,   727,
     715,   712,   459,   481,   495,   730,   495,   730,    58,   347,
     499,   608,   495,    35,   711,   495,   109,   110,   185,   186,
     250,   251,   252,   253,   254,   255,   258,   259,   364,   365,
     475,   476,   495,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   715,   150,   499,   608,   150,   499,   608,   150,
     285,   771,   342,   403,   496,   499,     4,   157,   285,   421,
     486,   487,   552,   555,   812,   813,   844,   846,   847,   850,
     845,   495,   622,   626,   552,   850,   856,   858,   773,   710,
     775,    36,   231,   814,   495,   795,   493,   740,   790,   495,
     495,   164,   495,   495,   633,   495,   495,   495,   740,   495,
     495,   495,   495,   495,   495,   495,   495,   495,   740,   740,
     740,   146,   800,   801,   771,   772,   633,   740,   771,   762,
     763,   814,   815,     9,   795,   794,   495,   813,   495,   812,
     813,     3,     8,    11,    15,    16,    17,    18,    33,    36,
      41,    48,    73,   174,   190,   195,   217,   218,   232,   270,
     273,   287,   290,   379,   479,   482,   483,   484,   486,   487,
     488,   489,   490,   491,   765,   766,   767,   769,   458,   747,
     795,   296,   740,   215,   499,   640,   495,   813,   795,   497,
     794,   640,     3,   115,   236,   552,   729,   813,   857,    97,
     115,   858,   115,   858,   806,   496,   499,   843,   496,   499,
     639,   807,    36,   867,   528,   806,    36,   814,   374,   635,
     635,    27,   488,   649,   650,   740,   635,   161,   267,   669,
     222,   268,   328,   377,   436,     4,     9,    27,   664,   740,
     486,   487,   665,   666,   740,   742,   680,   681,   656,   655,
     653,   654,   164,   683,   280,   685,   653,   680,   771,   821,
     231,   806,    67,    75,    86,   166,   188,   318,   431,   573,
     583,   598,   814,    75,    86,   525,    86,   525,   495,   414,
     495,   571,   242,   434,   571,    86,   499,   414,   806,   712,
     552,    54,   554,   552,   552,   106,   248,   256,    54,   414,
     457,   481,   551,   261,   360,   551,   553,   698,    86,   414,
     525,   360,   806,   414,   360,   773,   773,   774,   496,   499,
     647,   648,    13,    14,   494,   504,   414,   591,   596,   814,
     457,   625,   332,   403,   450,   150,    93,   545,   558,   830,
     831,   878,   809,   497,   142,   806,   270,   546,   550,   270,
     495,   592,    36,   592,   496,   773,    36,   188,   586,   814,
     835,   495,   771,   812,   610,   775,   727,   727,    35,   711,
     412,   412,   812,   812,   710,   708,   814,   493,   493,   812,
     812,   414,   414,   414,   414,   607,   819,   807,   808,   808,
     819,   496,   602,   188,   806,   882,   845,   851,     4,   812,
       4,   812,   624,   631,   823,    50,    95,   121,   139,   143,
     165,   168,   183,   275,   283,   326,   628,   499,   496,   499,
     496,   499,   827,   771,   792,   772,   453,   787,   788,   740,
     771,   495,   812,   812,     3,   731,   732,   733,   734,   735,
     736,   737,   738,   776,   777,   813,   812,   812,   740,     8,
      16,    17,    18,   482,   483,   484,   486,   487,   488,   489,
     490,   491,   765,   770,   814,   740,   778,   486,   487,   495,
     741,   742,   767,   780,   496,   771,   740,   771,   781,   740,
      53,   169,   228,   415,   740,   771,   784,   740,   495,   814,
     342,   804,   494,   496,   499,   499,   501,   504,   771,   740,
     739,   739,   710,   740,   740,   740,   740,   740,     5,   823,
     824,   412,    40,   400,   796,   819,   740,   740,   495,   633,
     785,   130,   157,   270,   275,   280,   421,   432,   740,   275,
     495,   740,   414,    48,   174,   190,   195,   232,   379,   740,
     740,   740,   740,   740,   740,   740,   740,   740,   740,    27,
      34,   384,   764,   178,   160,   748,   355,   495,   761,   175,
     236,   403,   407,   409,   434,   641,   806,   799,   169,   688,
     773,   488,   688,   495,   813,   496,   806,   862,   806,   870,
     740,   496,   495,   438,   869,   115,   298,   495,   527,   632,
      36,   814,   495,   532,   541,   543,   814,    37,   124,   651,
     651,   499,   438,   651,   355,   356,   486,   487,   666,   668,
     742,   377,   222,   286,   307,   307,   499,   490,     4,   667,
     812,   667,   355,   356,   668,   805,   806,   274,   381,   686,
     681,   654,   496,   340,   517,   495,   188,   583,   808,   222,
     270,   222,   438,   495,   576,   710,   808,   814,   188,   808,
     188,   814,    23,   135,   374,   513,   516,   566,   581,   823,
     808,   575,   595,   823,   808,   514,   808,   340,   374,   517,
     550,   552,   819,   808,   552,   819,   808,   552,   340,   374,
     517,   808,   808,   808,   808,   340,   374,   517,   808,   808,
     647,   647,   647,   446,   774,   189,   345,   646,   740,   740,
     740,   793,   323,   621,   496,   499,   283,   169,   414,   616,
     450,   806,   882,   806,   814,   290,   602,   809,   495,   495,
     150,   150,   232,   573,   583,   587,   590,   599,   601,   814,
     457,   459,   578,   149,   632,   457,   836,   496,   740,   270,
     285,   771,   496,   496,   608,   496,   493,   478,   478,   496,
     496,   496,   499,   710,   812,   494,   812,   496,   496,   732,
     734,   735,   736,   735,   736,   736,   608,   608,   285,   608,
     403,   270,    36,   496,   499,   488,   495,   552,   623,   850,
      36,   620,   813,   620,   270,   275,   326,   620,   620,   856,
     710,   496,   494,   740,   137,   788,   789,    36,   496,   740,
     496,   496,   496,   169,   496,   496,   499,   496,   497,   308,
     779,   496,   741,   741,   740,    11,    16,    17,    18,   195,
     217,   287,   482,   483,   484,   486,   487,   488,   489,   490,
     491,   767,   741,   496,   496,   164,   169,   782,   783,   496,
      36,   784,   771,   784,   784,   169,   496,    36,   807,   495,
     740,   802,   795,   740,   762,   740,   496,   496,   478,   741,
     741,   143,   771,   169,   130,   157,   275,   280,   421,   432,
     495,   143,   770,   740,   400,   796,   740,   785,   740,   414,
     495,   633,   495,   495,   153,   749,   407,   409,   407,   409,
     806,   403,   642,   642,   642,   227,   356,   495,   633,   689,
     690,   691,   698,   699,   743,   745,   746,   814,   454,   704,
     647,   801,   704,   812,   739,   821,   827,   689,   454,   868,
     444,   402,   437,   536,   531,   540,   814,   285,   533,   814,
     537,   543,   499,   688,   484,   795,   480,   652,   652,   650,
     287,   765,   768,   652,     4,   812,   668,   286,   436,   665,
     499,   241,   414,   740,   270,   598,   495,   150,   495,   576,
     198,   596,   559,   289,   569,   559,    23,   135,   344,   346,
     374,   510,   511,   512,   518,   519,   150,   608,   150,   608,
     566,   581,   566,   496,   499,   562,   813,   496,   499,   484,
     497,   414,   360,    86,   414,   525,   360,   414,   414,   414,
     360,   646,   646,   646,   774,   277,   277,   496,   494,   391,
     392,   630,   813,   591,   621,   806,   495,    36,   592,   829,
     342,   403,   522,   523,   813,   596,   806,   806,   882,   806,
     496,   499,   283,   571,   283,   285,   570,   808,   457,   881,
     571,    36,   150,   806,   496,   711,   812,   730,   730,   711,
     814,   494,   494,   819,   150,   624,   618,   629,   850,   813,
     813,   275,   596,   488,   596,   813,   813,   411,   740,   141,
     710,   496,   740,   740,   770,   740,   782,   710,   741,   741,
     741,   741,   130,   270,   280,   741,   741,   741,   741,   741,
     741,   741,   741,   741,   741,   740,   740,   783,   782,   710,
     496,   496,   496,   771,   710,   496,   740,   802,   803,    36,
     496,   739,   740,    33,    33,   740,   496,   740,   169,   495,
     775,   740,   496,   143,   741,   741,   143,   143,   740,   740,
     648,   454,   295,   753,   642,   642,   642,   642,   806,   806,
     806,   633,   699,   169,   633,   690,   691,    36,   692,   693,
     814,   499,    94,   170,   204,   220,   230,   264,   351,   695,
     693,    36,   692,   694,   814,   481,   703,   794,   740,   178,
     670,   646,   804,   670,   496,   496,   740,   348,   535,   443,
     496,   499,   795,    84,   535,   496,   499,   532,   868,   740,
     161,   226,   495,   652,   286,   806,   808,   496,   150,   596,
     583,   596,   559,   586,   496,   117,   202,   268,   270,   582,
     495,   593,   173,   115,   187,   270,   571,   551,   107,   115,
     173,   270,   390,   393,   553,   571,   374,   512,   425,   808,
     814,   516,   595,     3,    44,    50,    74,    82,    94,   101,
     168,   170,   174,   190,   204,   217,   218,   220,   230,   232,
     244,   264,   269,   273,   287,   294,   296,   351,   375,   379,
     396,   405,   424,   448,   486,   487,   552,   560,   597,   710,
     768,   813,   816,   883,   889,   823,   808,   808,   808,   808,
     808,   808,   808,   808,   808,   808,   496,   496,   496,   647,
     551,   630,   495,   590,   632,   836,   602,   188,   806,   496,
     499,   496,   546,   495,    36,   580,   578,   587,    79,   548,
     107,   268,   632,   586,   438,   833,   494,   710,   608,   882,
     496,   499,   596,   740,   496,   496,   783,   169,   130,   280,
     495,   496,   496,   496,   499,   814,   740,   740,   740,   775,
     496,   740,    33,    33,   740,   740,   143,   496,   496,   740,
     495,   754,   814,   806,   806,   806,   806,   693,   694,   495,
     496,   814,   815,   405,   661,   662,   495,   690,   220,   294,
     696,   690,   696,   220,   695,   696,   220,   662,   495,   814,
     662,   495,   292,    54,   182,   678,   496,   678,   813,   798,
     632,   298,   632,   531,   285,   495,   529,   484,   543,   535,
     770,   559,   583,   496,   496,   457,   589,   118,   191,   200,
     117,   440,   566,   584,    67,    73,    86,   115,   117,   173,
     202,   270,   275,   318,   334,   431,   438,   564,   565,   577,
      30,    54,   603,   188,   275,   552,   740,   603,   275,   486,
     487,   555,   814,   710,   608,   608,   244,   396,   816,   820,
     484,   414,   414,   646,   622,   438,   617,   619,   596,   496,
     881,    36,   403,   270,   495,   813,   836,   590,   149,   632,
     147,   196,   570,   120,   135,   317,   881,   107,   457,   879,
     285,   814,   832,   495,    36,   629,   741,   169,   495,   775,
     802,   496,   740,   740,   740,   496,   755,   814,   700,   701,
     745,   692,   495,     4,     9,   657,   659,   660,   814,   807,
     690,   285,   438,   697,   690,   220,   690,   705,   706,   814,
     495,   705,   814,    27,    96,   179,   354,   488,   495,   671,
     672,   673,   674,   675,   676,   740,   740,   456,   750,   813,
     750,   536,    86,   495,   534,   542,   745,   814,   131,   740,
     496,   334,   589,   495,   579,   559,   496,   499,   495,   819,
     808,   741,   603,   118,   191,   117,   275,   222,   806,   589,
      81,   115,    36,   150,    73,   707,   820,   490,   560,   808,
     808,   496,   551,   122,   496,   578,   632,   806,   150,    36,
     496,   808,   881,    27,    78,    87,   116,   187,   199,   390,
     393,   574,   574,   356,   356,    59,    67,   236,   806,   542,
     741,   775,   496,   304,   756,   496,   499,    36,   702,   807,
     307,   490,   307,   356,   490,   495,   495,   496,   740,   495,
     690,   697,   496,   499,   710,   705,   496,   495,   376,   495,
     496,   499,   751,   752,   814,   325,   679,   679,   443,   808,
     740,   496,   499,    73,   538,   538,   271,   436,   806,   559,
     585,   588,   823,   566,   740,   270,   565,    36,   589,   592,
     808,   187,   819,   438,   515,   490,   425,   622,   813,   836,
     570,   879,   495,   806,   632,   578,   548,    67,   288,    67,
     833,   496,   496,    54,   647,   703,   700,   495,   496,   814,
     657,   807,   706,   707,   496,   771,   495,   771,   672,   499,
      36,   740,   438,   658,   658,   632,   496,   704,   534,   819,
     539,   819,   539,   374,   592,   496,   499,   484,   496,   187,
     246,   600,   495,   561,   740,   425,    36,   495,   879,   570,
     881,   288,   288,   495,   836,   771,   327,   356,   757,   705,
     496,   499,   496,   496,   496,   671,   496,   752,   754,   358,
     538,   651,   651,   541,   600,   588,   560,   268,   572,   561,
     170,   303,   380,   285,   567,   568,   594,   550,   632,   542,
     704,    48,    97,   427,   740,   758,   759,   758,   496,   496,
       9,   341,   663,   496,   660,   539,   652,   652,   704,   568,
     200,   120,   436,   285,   594,   285,   567,   496,   879,   496,
     759,   355,   163,   313,   163,   313,   496,   495,   651,   559,
      58,   268,   347,   374,   563,   563,   836,    33,     9,   652,
      22,   115,   275,   704,   759,   496
};

#define yyerrok		(yyerrstatus = 0)
#define yyclearin	(yychar = YYEMPTY)
#define YYEMPTY		(-2)
#define YYEOF		0

#define YYACCEPT	goto yyacceptlab
#define YYABORT		goto yyabortlab
#define YYERROR		goto yyerrorlab


/* Like YYERROR except do call yyerror.  This remains here temporarily
   to ease the transition to the new meaning of YYERROR, for GCC.
   Once GCC version 2 has supplanted version 1, this can go.  */

#define YYFAIL		goto yyerrlab

#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)					\
do								\
  if (yychar == YYEMPTY && yylen == 1)				\
    {								\
      yychar = (Token);						\
      yylval = (Value);						\
      yytoken = YYTRANSLATE (yychar);				\
      YYPOPSTACK (1);						\
      goto yybackup;						\
    }								\
  else								\
    {								\
      yyerror (&yylloc, yyscanner, YY_("syntax error: cannot back up")); \
      YYERROR;							\
    }								\
while (YYID (0))


#define YYTERROR	1
#define YYERRCODE	256


/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#define YYRHSLOC(Rhs, K) ((Rhs)[K])
#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)				\
    do									\
      if (YYID (N))                                                    \
	{								\
	  (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;	\
	  (Current).first_column = YYRHSLOC (Rhs, 1).first_column;	\
	  (Current).last_line    = YYRHSLOC (Rhs, N).last_line;		\
	  (Current).last_column  = YYRHSLOC (Rhs, N).last_column;	\
	}								\
      else								\
	{								\
	  (Current).first_line   = (Current).last_line   =		\
	    YYRHSLOC (Rhs, 0).last_line;				\
	  (Current).first_column = (Current).last_column =		\
	    YYRHSLOC (Rhs, 0).last_column;				\
	}								\
    while (YYID (0))
#endif


/* YY_LOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

#ifndef YY_LOCATION_PRINT
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
#  define YY_LOCATION_PRINT(File, Loc)			\
     fprintf (File, "%d.%d-%d.%d",			\
	      (Loc).first_line, (Loc).first_column,	\
	      (Loc).last_line,  (Loc).last_column)
# else
#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
# endif
#endif


/* YYLEX -- calling `yylex' with the right arguments.  */

#ifdef YYLEX_PARAM
# define YYLEX yylex (&yylval, &yylloc, YYLEX_PARAM)
#else
# define YYLEX yylex (&yylval, &yylloc, yyscanner)
#endif

/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)			\
do {						\
  if (yydebug)					\
    YYFPRINTF Args;				\
} while (YYID (0))

# define YY_SYMBOL_PRINT(Title, Type, Value, Location)			  \
do {									  \
  if (yydebug)								  \
    {									  \
      YYFPRINTF (stderr, "%s ", Title);					  \
      yy_symbol_print (stderr,						  \
		  Type, Value, Location, yyscanner); \
      YYFPRINTF (stderr, "\n");						  \
    }									  \
} while (YYID (0))


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
#else
static void
yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  if (!yyvaluep)
    return;
  YYUSE (yylocationp);
  YYUSE (yyscanner);
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# else
  YYUSE (yyoutput);
# endif
  switch (yytype)
    {
      default:
	break;
    }
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
#else
static void
yy_symbol_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  if (yytype < YYNTOKENS)
    YYFPRINTF (yyoutput, "token %s (", yytname[yytype]);
  else
    YYFPRINTF (yyoutput, "nterm %s (", yytname[yytype]);

  YY_LOCATION_PRINT (yyoutput, *yylocationp);
  YYFPRINTF (yyoutput, ": ");
  yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_stack_print (yytype_int16 *bottom, yytype_int16 *top)
#else
static void
yy_stack_print (bottom, top)
    yytype_int16 *bottom;
    yytype_int16 *top;
#endif
{
  YYFPRINTF (stderr, "Stack now");
  for (; bottom <= top; ++bottom)
    YYFPRINTF (stderr, " %d", *bottom);
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)				\
do {								\
  if (yydebug)							\
    yy_stack_print ((Bottom), (Top));				\
} while (YYID (0))


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_reduce_print (YYSTYPE *yyvsp, YYLTYPE *yylsp, int yyrule, core_yyscan_t yyscanner)
#else
static void
yy_reduce_print (yyvsp, yylsp, yyrule, yyscanner)
    YYSTYPE *yyvsp;
    YYLTYPE *yylsp;
    int yyrule;
    core_yyscan_t yyscanner;
#endif
{
  int yynrhs = yyr2[yyrule];
  int yyi;
  unsigned long int yylno = yyrline[yyrule];
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
	     yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      fprintf (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
		       &(yyvsp[(yyi + 1) - (yynrhs)])
		       , &(yylsp[(yyi + 1) - (yynrhs)])		       , yyscanner);
      fprintf (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)		\
do {					\
  if (yydebug)				\
    yy_reduce_print (yyvsp, yylsp, Rule, yyscanner); \
} while (YYID (0))

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef	YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif



#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static YYSIZE_T
yystrlen (const char *yystr)
#else
static YYSIZE_T
yystrlen (yystr)
    const char *yystr;
#endif
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static char *
yystpcpy (char *yydest, const char *yysrc)
#else
static char *
yystpcpy (yydest, yysrc)
    char *yydest;
    const char *yysrc;
#endif
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
	switch (*++yyp)
	  {
	  case '\'':
	  case ',':
	    goto do_not_strip_quotes;

	  case '\\':
	    if (*++yyp != '\\')
	      goto do_not_strip_quotes;
	    /* Fall through.  */
	  default:
	    if (yyres)
	      yyres[yyn] = *yyp;
	    yyn++;
	    break;

	  case '"':
	    if (yyres)
	      yyres[yyn] = '\0';
	    return yyn;
	  }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into YYRESULT an error message about the unexpected token
   YYCHAR while in state YYSTATE.  Return the number of bytes copied,
   including the terminating null byte.  If YYRESULT is null, do not
   copy anything; just return the number of bytes that would be
   copied.  As a special case, return 0 if an ordinary "syntax error"
   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
   size calculation.  */
static YYSIZE_T
yysyntax_error (char *yyresult, int yystate, int yychar)
{
  int yyn = yypact[yystate];

  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
    return 0;
  else
    {
      int yytype = YYTRANSLATE (yychar);
      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
      YYSIZE_T yysize = yysize0;
      YYSIZE_T yysize1;
      int yysize_overflow = 0;
      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
      int yyx;

# if 0
      /* This is so xgettext sees the translatable formats that are
	 constructed on the fly.  */
      YY_("syntax error, unexpected %s");
      YY_("syntax error, unexpected %s, expecting %s");
      YY_("syntax error, unexpected %s, expecting %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
# endif
      char *yyfmt;
      char const *yyf;
      static char const yyunexpected[] = "syntax error, unexpected %s";
      static char const yyexpecting[] = ", expecting %s";
      static char const yyor[] = " or %s";
      char yyformat[sizeof yyunexpected
		    + sizeof yyexpecting - 1
		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
		       * (sizeof yyor - 1))];
      char const *yyprefix = yyexpecting;

      /* Start YYX at -YYN if negative to avoid negative indexes in
	 YYCHECK.  */
      int yyxbegin = yyn < 0 ? -yyn : 0;

      /* Stay within bounds of both yycheck and yytname.  */
      int yychecklim = YYLAST - yyn + 1;
      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
      int yycount = 1;

      yyarg[0] = yytname[yytype];
      yyfmt = yystpcpy (yyformat, yyunexpected);

      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
	  {
	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
	      {
		yycount = 1;
		yysize = yysize0;
		yyformat[sizeof yyunexpected - 1] = '\0';
		break;
	      }
	    yyarg[yycount++] = yytname[yyx];
	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
	    yysize_overflow |= (yysize1 < yysize);
	    yysize = yysize1;
	    yyfmt = yystpcpy (yyfmt, yyprefix);
	    yyprefix = yyor;
	  }

      yyf = YY_(yyformat);
      yysize1 = yysize + yystrlen (yyf);
      yysize_overflow |= (yysize1 < yysize);
      yysize = yysize1;

      if (yysize_overflow)
	return YYSIZE_MAXIMUM;

      if (yyresult)
	{
	  /* Avoid sprintf, as that infringes on the user's name space.
	     Don't have undefined behavior even if the translation
	     produced a string with the wrong number of "%s"s.  */
	  char *yyp = yyresult;
	  int yyi = 0;
	  while ((*yyp = *yyf) != '\0')
	    {
	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
		{
		  yyp += yytnamerr (yyp, yyarg[yyi++]);
		  yyf += 2;
		}
	      else
		{
		  yyp++;
		  yyf++;
		}
	    }
	}
      return yysize;
    }
}
#endif /* YYERROR_VERBOSE */


/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, YYLTYPE *yylocationp, core_yyscan_t yyscanner)
#else
static void
yydestruct (yymsg, yytype, yyvaluep, yylocationp, yyscanner)
    const char *yymsg;
    int yytype;
    YYSTYPE *yyvaluep;
    YYLTYPE *yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  YYUSE (yyvaluep);
  YYUSE (yylocationp);
  YYUSE (yyscanner);

  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  switch (yytype)
    {

      default:
	break;
    }
}


/* Prevent warnings from -Wmissing-prototypes.  */

#ifdef YYPARSE_PARAM
#if defined __STDC__ || defined __cplusplus
int yyparse (void *YYPARSE_PARAM);
#else
int yyparse ();
#endif
#else /* ! YYPARSE_PARAM */
#if defined __STDC__ || defined __cplusplus
int yyparse (core_yyscan_t yyscanner);
#else
int yyparse ();
#endif
#endif /* ! YYPARSE_PARAM */






/*----------.
| yyparse.  |
`----------*/

#ifdef YYPARSE_PARAM
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (void *YYPARSE_PARAM)
#else
int
yyparse (YYPARSE_PARAM)
    void *YYPARSE_PARAM;
#endif
#else /* ! YYPARSE_PARAM */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (core_yyscan_t yyscanner)
#else
int
yyparse (yyscanner)
    core_yyscan_t yyscanner;
#endif
#endif
{
  /* The look-ahead symbol.  */
int yychar;

/* The semantic value of the look-ahead symbol.  */
YYSTYPE yylval;

/* Number of syntax errors so far.  */
int yynerrs;
/* Location data for the look-ahead symbol.  */
YYLTYPE yylloc;

  int yystate;
  int yyn;
  int yyresult;
  /* Number of tokens to shift before error messages enabled.  */
  int yyerrstatus;
  /* Look-ahead token as an internal (translated) token number.  */
  int yytoken = 0;
#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

  /* Three stacks and their tools:
     `yyss': related to states,
     `yyvs': related to semantic values,
     `yyls': related to locations.

     Refer to the stacks thru separate pointers, to allow yyoverflow
     to reallocate them elsewhere.  */

  /* The state stack.  */
  yytype_int16 yyssa[YYINITDEPTH];
  yytype_int16 *yyss = yyssa;
  yytype_int16 *yyssp;

  /* The semantic value stack.  */
  YYSTYPE yyvsa[YYINITDEPTH];
  YYSTYPE *yyvs = yyvsa;
  YYSTYPE *yyvsp;

  /* The location stack.  */
  YYLTYPE yylsa[YYINITDEPTH];
  YYLTYPE *yyls = yylsa;
  YYLTYPE *yylsp;
  /* The locations where the error started and ended.  */
  YYLTYPE yyerror_range[2];

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))

  YYSIZE_T yystacksize = YYINITDEPTH;

  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;
  YYLTYPE yyloc;

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY;		/* Cause a token to be read.  */

  /* Initialize stack pointers.
     Waste one element of value and location stack
     so that they stay on the same level as the state stack.
     The wasted elements are never initialized.  */

  yyssp = yyss;
  yyvsp = yyvs;
  yylsp = yyls;
#if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
  /* Initialize the default location before parsing starts.  */
  yylloc.first_line   = yylloc.last_line   = 1;
  yylloc.first_column = yylloc.last_column = 0;
#endif

  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
	/* Give user a chance to reallocate the stack.  Use copies of
	   these so that the &'s don't force the real ones into
	   memory.  */
	YYSTYPE *yyvs1 = yyvs;
	yytype_int16 *yyss1 = yyss;
	YYLTYPE *yyls1 = yyls;

	/* Each stack pointer address is followed by the size of the
	   data in use in that stack, in bytes.  This used to be a
	   conditional around just the two extra args, but that might
	   be undefined if yyoverflow is a macro.  */
	yyoverflow (YY_("memory exhausted"),
		    &yyss1, yysize * sizeof (*yyssp),
		    &yyvs1, yysize * sizeof (*yyvsp),
		    &yyls1, yysize * sizeof (*yylsp),
		    &yystacksize);
	yyls = yyls1;
	yyss = yyss1;
	yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
	goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
	yystacksize = YYMAXDEPTH;

      {
	yytype_int16 *yyss1 = yyss;
	union yyalloc *yyptr =
	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
	if (! yyptr)
	  goto yyexhaustedlab;
	YYSTACK_RELOCATE (yyss);
	YYSTACK_RELOCATE (yyvs);
	YYSTACK_RELOCATE (yyls);
#  undef YYSTACK_RELOCATE
	if (yyss1 != yyssa)
	  YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;
      yylsp = yyls + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
		  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
	YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     look-ahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to look-ahead token.  */
  yyn = yypact[yystate];
  if (yyn == YYPACT_NINF)
    goto yydefault;

  /* Not known => get a look-ahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid look-ahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = YYLEX;
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yyn == 0 || yyn == YYTABLE_NINF)
	goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the look-ahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token unless it is eof.  */
  if (yychar != YYEOF)
    yychar = YYEMPTY;

  yystate = yyn;
  *++yyvsp = yylval;
  *++yylsp = yylloc;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     `$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];

  /* Default location.  */
  YYLLOC_DEFAULT (yyloc, (yylsp - yylen), yylen);
  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 2:
#line 468 "third_party/libpg_query/grammar/grammar.y"
    {
				pg_yyget_extra(yyscanner)->parsetree = (yyvsp[(1) - (1)].list);
			;}
    break;

  case 3:
#line 484 "third_party/libpg_query/grammar/grammar.y"
    {
					if ((yyvsp[(1) - (3)].list) != NIL)
					{
						/* update length of previous stmt */
						updateRawStmtEnd(llast_node(PGRawStmt, (yyvsp[(1) - (3)].list)), (yylsp[(2) - (3)]));
					}
					if ((yyvsp[(3) - (3)].node) != NULL)
						(yyval.list) = lappend((yyvsp[(1) - (3)].list), makeRawStmt((yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]) + 1));
					else
						(yyval.list) = (yyvsp[(1) - (3)].list);
				;}
    break;

  case 4:
#line 496 "third_party/libpg_query/grammar/grammar.y"
    {
					if ((yyvsp[(1) - (1)].node) != NULL)
						(yyval.list) = list_make1(makeRawStmt((yyvsp[(1) - (1)].node), 0));
					else
						(yyval.list) = NIL;
				;}
    break;

  case 39:
#line 539 "third_party/libpg_query/grammar/grammar.y"
    { (yyval.node) = NULL; ;}
    break;

  case 40:
#line 10 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_TABLE;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 41:
#line 19 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_TABLE;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 42:
#line 28 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_INDEX;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 43:
#line 37 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_INDEX;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 44:
#line 46 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_SEQUENCE;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 45:
#line 55 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_SEQUENCE;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 46:
#line 64 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_VIEW;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 47:
#line 73 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_VIEW;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 48:
#line 86 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 49:
#line 88 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 50:
#line 93 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = (yyvsp[(3) - (3)].node); ;}
    break;

  case 51:
#line 94 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = NULL; ;}
    break;

  case 52:
#line 100 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 53:
#line 104 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 54:
#line 108 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					if (strcmp((yyvsp[(2) - (2)].defelt)->defname, "as") == 0 ||
						strcmp((yyvsp[(2) - (2)].defelt)->defname, "restart") == 0 ||
						strcmp((yyvsp[(2) - (2)].defelt)->defname, "owned_by") == 0)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("sequence option \"%s\" not supported here", (yyvsp[(2) - (2)].defelt)->defname),
								 parser_errposition((yylsp[(2) - (2)]))));
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
				;}
    break;

  case 55:
#line 119 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("generated", (PGNode *) makeInteger((yyvsp[(3) - (3)].ival)), (yylsp[(1) - (3)]));
				;}
    break;

  case 56:
#line 127 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 57:
#line 131 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 58:
#line 140 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(2) - (2)].node);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 59:
#line 149 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(5) - (5)].node);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 60:
#line 158 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(3) - (3)].node);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 61:
#line 167 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(6) - (6)].node);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 62:
#line 176 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ColumnDefault;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (yyvsp[(4) - (4)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 63:
#line 185 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropNotNull;
					n->name = (yyvsp[(3) - (6)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 64:
#line 193 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetNotNull;
					n->name = (yyvsp[(3) - (6)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 65:
#line 201 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetStatistics;
					n->name = (yyvsp[(3) - (6)].str);
					n->def = (PGNode *) makeInteger((yyvsp[(6) - (6)].ival));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 66:
#line 210 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetOptions;
					n->name = (yyvsp[(3) - (5)].str);
					n->def = (PGNode *) (yyvsp[(5) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 67:
#line 219 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ResetOptions;
					n->name = (yyvsp[(3) - (5)].str);
					n->def = (PGNode *) (yyvsp[(5) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 68:
#line 228 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetStorage;
					n->name = (yyvsp[(3) - (6)].str);
					n->def = (PGNode *) makeString((yyvsp[(6) - (6)].str));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 69:
#line 237 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGConstraint *c = makeNode(PGConstraint);

					c->contype = PG_CONSTR_IDENTITY;
					c->generated_when = (yyvsp[(6) - (9)].ival);
					c->options = (yyvsp[(9) - (9)].list);
					c->location = (yylsp[(5) - (9)]);

					n->subtype = PG_AT_AddIdentity;
					n->name = (yyvsp[(3) - (9)].str);
					n->def = (PGNode *) c;

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 70:
#line 254 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetIdentity;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (PGNode *) (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 71:
#line 263 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = AT_DropIdentity;
					n->name = (yyvsp[(3) - (5)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 72:
#line 272 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = AT_DropIdentity;
					n->name = (yyvsp[(3) - (7)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 73:
#line 281 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropColumn;
					n->name = (yyvsp[(5) - (6)].str);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 74:
#line 291 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropColumn;
					n->name = (yyvsp[(3) - (4)].str);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 75:
#line 304 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGColumnDef *def = makeNode(PGColumnDef);
					n->subtype = PG_AT_AlterColumnType;
					n->name = (yyvsp[(3) - (8)].str);
					n->def = (PGNode *) def;
					/* We only use these fields of the PGColumnDef node */
					def->typeName = (yyvsp[(6) - (8)].typnam);
					def->collClause = (PGCollateClause *) (yyvsp[(7) - (8)].node);
					def->raw_default = (yyvsp[(8) - (8)].node);
					def->location = (yylsp[(3) - (8)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 76:
#line 319 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AlterColumnGenericOptions;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (PGNode *) (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 77:
#line 328 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddConstraint;
					n->def = (yyvsp[(2) - (2)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 78:
#line 336 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGConstraint *c = makeNode(PGConstraint);
					n->subtype = PG_AT_AlterConstraint;
					n->def = (PGNode *) c;
					c->contype = PG_CONSTR_FOREIGN; /* others not supported, yet */
					c->conname = (yyvsp[(3) - (4)].str);
					processCASbits((yyvsp[(4) - (4)].ival), (yylsp[(4) - (4)]), "ALTER CONSTRAINT statement",
									&c->deferrable,
									&c->initdeferred,
									NULL, NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 79:
#line 351 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ValidateConstraint;
					n->name = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 80:
#line 359 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropConstraint;
					n->name = (yyvsp[(5) - (6)].str);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 81:
#line 369 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropConstraint;
					n->name = (yyvsp[(3) - (4)].str);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 82:
#line 379 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetLogged;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 83:
#line 386 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetUnLogged;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 84:
#line 393 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetRelOptions;
					n->def = (PGNode *)(yyvsp[(2) - (2)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 85:
#line 401 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ResetRelOptions;
					n->def = (PGNode *)(yyvsp[(2) - (2)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 86:
#line 408 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_GenericOptions;
					n->def = (PGNode *)(yyvsp[(1) - (1)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 87:
#line 418 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 88:
#line 419 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = NULL; ;}
    break;

  case 89:
#line 425 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(1) - (1)].defelt);
				;}
    break;

  case 90:
#line 429 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
					(yyval.defelt)->defaction = PG_DEFELEM_SET;
				;}
    break;

  case 91:
#line 434 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
					(yyval.defelt)->defaction = PG_DEFELEM_ADD;
				;}
    break;

  case 92:
#line 439 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElemExtended(NULL, (yyvsp[(2) - (2)].str), NULL, DEFELEM_DROP, (yylsp[(2) - (2)]));
				;}
    break;

  case 93:
#line 446 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 94:
#line 447 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 95:
#line 452 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 96:
#line 456 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 1; ;}
    break;

  case 97:
#line 457 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 0; ;}
    break;

  case 98:
#line 458 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 0; ;}
    break;

  case 99:
#line 8 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = (yyvsp[(2) - (2)].str);
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 100:
#line 14 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = (yyvsp[(3) - (3)].str);
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 101:
#line 20 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = NULL;
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 102:
#line 26 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = NULL;
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 103:
#line 8 "third_party/libpg_query/grammar/statements/create_enum.y"
    {
					PGCreateEnumStmt *n = makeNode(PGCreateEnumStmt);
					n->typeName = (yyvsp[(3) - (8)].list);
					n->vals = (yyvsp[(7) - (8)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 104:
#line 17 "third_party/libpg_query/grammar/statements/create_enum.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 105:
#line 18 "third_party/libpg_query/grammar/statements/create_enum.y"
    { (yyval.list) = NIL; ;}
    break;

  case 106:
#line 22 "third_party/libpg_query/grammar/statements/create_enum.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 107:
#line 24 "third_party/libpg_query/grammar/statements/create_enum.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 108:
#line 7 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SCHEMA;
					n->subname = (yyvsp[(3) - (6)].str);
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 109:
#line 16 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 110:
#line 26 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 111:
#line 36 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 112:
#line 46 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 113:
#line 56 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 114:
#line 66 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 115:
#line 76 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_INDEX;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 116:
#line 86 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_INDEX;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 117:
#line 96 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_COLUMN;
					n->relationType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (8)].range);
					n->subname = (yyvsp[(6) - (8)].str);
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 118:
#line 107 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_COLUMN;
					n->relationType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (10)].range);
					n->subname = (yyvsp[(8) - (10)].str);
					n->newname = (yyvsp[(10) - (10)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 119:
#line 118 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABCONSTRAINT;
					n->relation = (yyvsp[(3) - (8)].range);
					n->subname = (yyvsp[(6) - (8)].str);
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 120:
#line 128 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABCONSTRAINT;
					n->relation = (yyvsp[(5) - (10)].range);
					n->subname = (yyvsp[(8) - (10)].str);
					n->newname = (yyvsp[(10) - (10)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 121:
#line 140 "third_party/libpg_query/grammar/statements/rename.y"
    { (yyval.ival) = COLUMN; ;}
    break;

  case 122:
#line 141 "third_party/libpg_query/grammar/statements/rename.y"
    { (yyval.ival) = 0; ;}
    break;

  case 123:
#line 10 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(5) - (7)].istmt)->relation = (yyvsp[(4) - (7)].range);
					(yyvsp[(5) - (7)].istmt)->onConflictClause = (yyvsp[(6) - (7)].onconflict);
					(yyvsp[(5) - (7)].istmt)->returningList = (yyvsp[(7) - (7)].list);
					(yyvsp[(5) - (7)].istmt)->withClause = (yyvsp[(1) - (7)].with);
					(yyval.node) = (PGNode *) (yyvsp[(5) - (7)].istmt);
				;}
    break;

  case 124:
#line 22 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = (yyvsp[(1) - (1)].node);
				;}
    break;

  case 125:
#line 28 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->override = (yyvsp[(2) - (4)].override);
					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
				;}
    break;

  case 126:
#line 35 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = (yyvsp[(2) - (4)].list);
					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
				;}
    break;

  case 127:
#line 41 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = (yyvsp[(2) - (7)].list);
					(yyval.istmt)->override = (yyvsp[(5) - (7)].override);
					(yyval.istmt)->selectStmt = (yyvsp[(7) - (7)].node);
				;}
    break;

  case 128:
#line 48 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = NULL;
				;}
    break;

  case 129:
#line 58 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
				;}
    break;

  case 130:
#line 62 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(1) - (3)].range)->alias = makeAlias((yyvsp[(3) - (3)].str), NIL);
					(yyval.range) = (yyvsp[(1) - (3)].range);
				;}
    break;

  case 131:
#line 71 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = makeNode(PGInferClause);
					(yyval.infer)->indexElems = (yyvsp[(2) - (4)].list);
					(yyval.infer)->whereClause = (yyvsp[(4) - (4)].node);
					(yyval.infer)->conname = NULL;
					(yyval.infer)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 132:
#line 80 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = makeNode(PGInferClause);
					(yyval.infer)->indexElems = NIL;
					(yyval.infer)->whereClause = NULL;
					(yyval.infer)->conname = (yyvsp[(3) - (3)].str);
					(yyval.infer)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 133:
#line 88 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = NULL;
				;}
    break;

  case 134:
#line 95 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.with) = (yyvsp[(1) - (1)].with); ;}
    break;

  case 135:
#line 96 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.with) = NULL; ;}
    break;

  case 136:
#line 102 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(1) - (2)].str);
					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.target)->val = NULL;
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 137:
#line 114 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(1) - (3)].target)->val = (PGNode *) (yyvsp[(3) - (3)].node);
					(yyval.list) = list_make1((yyvsp[(1) - (3)].target));
				;}
    break;

  case 138:
#line 119 "third_party/libpg_query/grammar/statements/insert.y"
    {
					int ncolumns = list_length((yyvsp[(2) - (5)].list));
					int i = 1;
					PGListCell *col_cell;

					/* Create a PGMultiAssignRef source for each target */
					foreach(col_cell, (yyvsp[(2) - (5)].list))
					{
						PGResTarget *res_col = (PGResTarget *) lfirst(col_cell);
						PGMultiAssignRef *r = makeNode(PGMultiAssignRef);

						r->source = (PGNode *) (yyvsp[(5) - (5)].node);
						r->colno = i;
						r->ncolumns = ncolumns;
						res_col->val = (PGNode *) r;
						i++;
					}

					(yyval.list) = (yyvsp[(2) - (5)].list);
				;}
    break;

  case 139:
#line 144 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = makeNode(PGOnConflictClause);
					(yyval.onconflict)->action = PG_ONCONFLICT_UPDATE;
					(yyval.onconflict)->infer = (yyvsp[(3) - (8)].infer);
					(yyval.onconflict)->targetList = (yyvsp[(7) - (8)].list);
					(yyval.onconflict)->whereClause = (yyvsp[(8) - (8)].node);
					(yyval.onconflict)->location = (yylsp[(1) - (8)]);
				;}
    break;

  case 140:
#line 154 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = makeNode(PGOnConflictClause);
					(yyval.onconflict)->action = PG_ONCONFLICT_NOTHING;
					(yyval.onconflict)->infer = (yyvsp[(3) - (5)].infer);
					(yyval.onconflict)->targetList = NIL;
					(yyval.onconflict)->whereClause = NULL;
					(yyval.onconflict)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 141:
#line 163 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = NULL;
				;}
    break;

  case 142:
#line 170 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = (yyvsp[(1) - (5)].str);
					(yyval.ielem)->expr = NULL;
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(2) - (5)].list);
					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].nullorder);
				;}
    break;

  case 143:
#line 181 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[(1) - (5)].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(2) - (5)].list);
					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].nullorder);
				;}
    break;

  case 144:
#line 192 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[(2) - (7)].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(4) - (7)].list);
					(yyval.ielem)->opclass = (yyvsp[(5) - (7)].list);
					(yyval.ielem)->ordering = (yyvsp[(6) - (7)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(7) - (7)].nullorder);
				;}
    break;

  case 145:
#line 206 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 146:
#line 207 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 147:
#line 213 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.override) = PG_OVERRIDING_USER_VALUE; ;}
    break;

  case 148:
#line 214 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.override) = OVERRIDING_SYSTEM_VALUE; ;}
    break;

  case 149:
#line 219 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 150:
#line 220 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].target)); ;}
    break;

  case 151:
#line 226 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 152:
#line 227 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 153:
#line 231 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 154:
#line 232 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 155:
#line 238 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 156:
#line 240 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
    break;

  case 157:
#line 245 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 158:
#line 246 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_concat((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].list)); ;}
    break;

  case 159:
#line 250 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].ielem)); ;}
    break;

  case 160:
#line 251 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].ielem)); ;}
    break;

  case 161:
#line 257 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(1) - (2)].str);
					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.target)->val = NULL;	/* upper production sets this */
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 162:
#line 8 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_NOTHING;
					n->name = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 163:
#line 15 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_ASSIGNMENT;
					n->name = (yyvsp[(2) - (4)].str);
					n->args = (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 164:
#line 23 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_CALL;
					n->name = (yyvsp[(2) - (5)].str);
					n->args = (yyvsp[(4) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 165:
#line 10 "third_party/libpg_query/grammar/statements/create_sequence.y"
    {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[(4) - (5)].range)->relpersistence = (yyvsp[(2) - (5)].ival);
					n->sequence = (yyvsp[(4) - (5)].range);
					n->options = (yyvsp[(5) - (5)].list);
					n->ownerId = InvalidOid;
					n->onconflict = PG_ERROR_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 166:
#line 20 "third_party/libpg_query/grammar/statements/create_sequence.y"
    {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[(7) - (8)].range)->relpersistence = (yyvsp[(2) - (8)].ival);
					n->sequence = (yyvsp[(7) - (8)].range);
					n->options = (yyvsp[(8) - (8)].list);
					n->ownerId = InvalidOid;
					n->onconflict = PG_IGNORE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 167:
#line 32 "third_party/libpg_query/grammar/statements/create_sequence.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 168:
#line 33 "third_party/libpg_query/grammar/statements/create_sequence.y"
    { (yyval.list) = NIL; ;}
    break;

  case 169:
#line 8 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(2) - (3)].str);
					n->params = (yyvsp[(3) - (3)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 170:
#line 16 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(7) - (9)].str);
					n->params = (yyvsp[(8) - (9)].list);
					ctas->query = (PGNode *) n;
					ctas->into = (yyvsp[(4) - (9)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_ERROR_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(4) - (9)].into)->rel->relpersistence = (yyvsp[(2) - (9)].ival);
					(yyvsp[(4) - (9)].into)->skipData = !((yyvsp[(9) - (9)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 171:
#line 33 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(10) - (12)].str);
					n->params = (yyvsp[(11) - (12)].list);
					ctas->query = (PGNode *) n;
					ctas->into = (yyvsp[(7) - (12)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_IGNORE_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(7) - (12)].into)->rel->relpersistence = (yyvsp[(2) - (12)].ival);
					(yyvsp[(7) - (12)].into)->skipData = !((yyvsp[(12) - (12)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 172:
#line 51 "third_party/libpg_query/grammar/statements/execute.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 173:
#line 52 "third_party/libpg_query/grammar/statements/execute.y"
    { (yyval.list) = NIL; ;}
    break;

  case 174:
#line 10 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
					n->sequence = (yyvsp[(3) - (4)].range);
					n->options = (yyvsp[(4) - (4)].list);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 175:
#line 18 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
					n->sequence = (yyvsp[(5) - (6)].range);
					n->options = (yyvsp[(6) - (6)].list);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 176:
#line 29 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 177:
#line 30 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 178:
#line 34 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 179:
#line 35 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 180:
#line 36 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 181:
#line 41 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeFloat((yyvsp[(1) - (1)].str)); ;}
    break;

  case 182:
#line 42 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeFloat((yyvsp[(2) - (2)].str)); ;}
    break;

  case 183:
#line 44 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.value) = makeFloat((yyvsp[(2) - (2)].str));
					doNegateFloat((yyval.value));
				;}
    break;

  case 184:
#line 48 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeInteger((yyvsp[(1) - (1)].ival)); ;}
    break;

  case 185:
#line 53 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("as", (PGNode *)(yyvsp[(2) - (2)].typnam), (yylsp[(1) - (2)]));
				;}
    break;

  case 186:
#line 57 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cache", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 187:
#line 61 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 188:
#line 65 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(false), (yylsp[(1) - (2)]));
				;}
    break;

  case 189:
#line 69 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("increment", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 190:
#line 73 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("maxvalue", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 191:
#line 77 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("minvalue", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 192:
#line 81 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("maxvalue", NULL, (yylsp[(1) - (2)]));
				;}
    break;

  case 193:
#line 85 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("minvalue", NULL, (yylsp[(1) - (2)]));
				;}
    break;

  case 194:
#line 89 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("owned_by", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 195:
#line 93 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					/* not documented, only used by pg_dump */
					(yyval.defelt) = makeDefElem("sequence_name", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 196:
#line 98 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("start", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 197:
#line 102 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 198:
#line 106 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 199:
#line 112 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 200:
#line 113 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 201:
#line 117 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 202:
#line 118 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = + (yyvsp[(2) - (2)].ival); ;}
    break;

  case 203:
#line 119 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = - (yyvsp[(2) - (2)].ival); ;}
    break;

  case 204:
#line 3 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 205:
#line 10 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_BEGIN;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 206:
#line 16 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_START;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 207:
#line 22 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 208:
#line 29 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 209:
#line 36 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 210:
#line 45 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 211:
#line 46 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 212:
#line 47 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 213:
#line 9 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(4) - (9)].range)->relpersistence = (yyvsp[(2) - (9)].ival);
					n->relation = (yyvsp[(4) - (9)].range);
					n->tableElts = (yyvsp[(6) - (9)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(8) - (9)].list);
					n->oncommit = (yyvsp[(9) - (9)].oncommit);
					n->onconflict = PG_ERROR_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 214:
#line 24 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(7) - (12)].range)->relpersistence = (yyvsp[(2) - (12)].ival);
					n->relation = (yyvsp[(7) - (12)].range);
					n->tableElts = (yyvsp[(9) - (12)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(11) - (12)].list);
					n->oncommit = (yyvsp[(12) - (12)].oncommit);
					n->onconflict = PG_IGNORE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 215:
#line 39 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(6) - (11)].range)->relpersistence = (yyvsp[(4) - (11)].ival);
					n->relation = (yyvsp[(6) - (11)].range);
					n->tableElts = (yyvsp[(8) - (11)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(10) - (11)].list);
					n->oncommit = (yyvsp[(11) - (11)].oncommit);
					n->onconflict = PG_REPLACE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 216:
#line 56 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = 0; ;}
    break;

  case 217:
#line 58 "third_party/libpg_query/grammar/statements/create.y"
    {
					/*
					 * We must complain about conflicting options.
					 * We could, but choose not to, complain about redundant
					 * options (ie, where $2's bit is already set in $1).
					 */
					int		newspec = (yyvsp[(1) - (2)].ival) | (yyvsp[(2) - (2)].ival);

					/* special message for this case */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED)) == (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("constraint declared INITIALLY DEFERRED must be DEFERRABLE"),
								 parser_errposition((yylsp[(2) - (2)]))));
					/* generic message for other conflicts */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE)) == (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE) ||
						(newspec & (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED)) == (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("conflicting constraint properties"),
								 parser_errposition((yylsp[(2) - (2)]))));
					(yyval.ival) = newspec;
				;}
    break;

  case 218:
#line 84 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].typnam); ;}
    break;

  case 219:
#line 85 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
    break;

  case 220:
#line 86 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].list); ;}
    break;

  case 221:
#line 87 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].value); ;}
    break;

  case 222:
#line 88 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 223:
#line 89 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
    break;

  case 224:
#line 93 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 225:
#line 94 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 226:
#line 99 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 227:
#line 104 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_NOACTION; ;}
    break;

  case 228:
#line 105 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_RESTRICT; ;}
    break;

  case 229:
#line 106 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_CASCADE; ;}
    break;

  case 230:
#line 107 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_SETNULL; ;}
    break;

  case 231:
#line 108 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_SETDEFAULT; ;}
    break;

  case 232:
#line 114 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = castNode(PGConstraint, (yyvsp[(3) - (3)].node));
					n->conname = (yyvsp[(2) - (3)].str);
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 233:
#line 120 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 234:
#line 121 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 235:
#line 123 "third_party/libpg_query/grammar/statements/create.y"
    {
					/*
					 * Note: the PGCollateClause is momentarily included in
					 * the list built by ColQualList, but we split it out
					 * again in SplitColQualList.
					 */
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[(2) - (2)].list);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 236:
#line 140 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_NOTNULL;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 237:
#line 147 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_NULL;
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 238:
#line 154 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (2)]);
					n->keys = NULL;
					n->options = (yyvsp[(2) - (2)].list);
					n->indexname = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 239:
#line 164 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (3)]);
					n->keys = NULL;
					n->options = (yyvsp[(3) - (3)].list);
					n->indexname = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 240:
#line 174 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_CHECK;
					n->location = (yylsp[(1) - (5)]);
					n->is_no_inherit = (yyvsp[(5) - (5)].boolean);
					n->raw_expr = (yyvsp[(3) - (5)].node);
					n->cooked_expr = NULL;
					n->skip_validation = false;
					n->initially_valid = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 241:
#line 186 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_COMPRESSION;
					n->location = (yylsp[(1) - (3)]);
					n->compression_name = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 242:
#line 194 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_DEFAULT;
					n->location = (yylsp[(1) - (2)]);
					n->raw_expr = (yyvsp[(2) - (2)].node);
					n->cooked_expr = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 243:
#line 203 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_IDENTITY;
					n->generated_when = (yyvsp[(2) - (5)].ival);
					n->options = (yyvsp[(5) - (5)].list);
					n->location = (yylsp[(1) - (5)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 244:
#line 212 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_FOREIGN;
					n->location = (yylsp[(1) - (5)]);
					n->pktable			= (yyvsp[(2) - (5)].range);
					n->fk_attrs			= NIL;
					n->pk_attrs			= (yyvsp[(3) - (5)].list);
					n->fk_matchtype		= (yyvsp[(4) - (5)].ival);
					n->fk_upd_action	= (char) ((yyvsp[(5) - (5)].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[(5) - (5)].ival) & 0xFF);
					n->skip_validation  = false;
					n->initially_valid  = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 245:
#line 231 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 246:
#line 237 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
    break;

  case 247:
#line 243 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(1) - (1)].ival) << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); ;}
    break;

  case 248:
#line 245 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | ((yyvsp[(1) - (1)].ival) & 0xFF); ;}
    break;

  case 249:
#line 247 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(1) - (2)].ival) << 8) | ((yyvsp[(2) - (2)].ival) & 0xFF); ;}
    break;

  case 250:
#line 249 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(2) - (2)].ival) << 8) | ((yyvsp[(1) - (2)].ival) & 0xFF); ;}
    break;

  case 251:
#line 251 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); ;}
    break;

  case 252:
#line 256 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 253:
#line 257 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 254:
#line 261 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = ONCOMMIT_DROP; ;}
    break;

  case 255:
#line 262 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_DELETE_ROWS; ;}
    break;

  case 256:
#line 263 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_PRESERVE_ROWS; ;}
    break;

  case 257:
#line 264 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_NOOP; ;}
    break;

  case 258:
#line 269 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 259:
#line 273 "third_party/libpg_query/grammar/statements/create.y"
    {  (yyval.boolean) = true; ;}
    break;

  case 260:
#line 274 "third_party/libpg_query/grammar/statements/create.y"
    {  (yyval.boolean) = false; ;}
    break;

  case 261:
#line 280 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = castNode(PGConstraint, (yyvsp[(3) - (3)].node));
					n->conname = (yyvsp[(2) - (3)].str);
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 262:
#line 286 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 263:
#line 291 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_COMMENTS; ;}
    break;

  case 264:
#line 292 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_CONSTRAINTS; ;}
    break;

  case 265:
#line 293 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_DEFAULTS; ;}
    break;

  case 266:
#line 294 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_IDENTITY; ;}
    break;

  case 267:
#line 295 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_INDEXES; ;}
    break;

  case 268:
#line 296 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_STATISTICS; ;}
    break;

  case 269:
#line 297 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_STORAGE; ;}
    break;

  case 270:
#line 298 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_ALL; ;}
    break;

  case 271:
#line 304 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 272:
#line 305 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
    break;

  case 273:
#line 309 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(3) - (3)].str); ;}
    break;

  case 274:
#line 315 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_DEFERRABLE;
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 275:
#line 322 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_NOT_DEFERRABLE;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 276:
#line 329 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_DEFERRED;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 277:
#line 336 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_IMMEDIATE;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 278:
#line 347 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 279:
#line 348 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(true), (yylsp[(1) - (2)]))); ;}
    break;

  case 280:
#line 349 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(false), (yylsp[(1) - (2)]))); ;}
    break;

  case 281:
#line 350 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 282:
#line 354 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 283:
#line 359 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
    break;

  case 284:
#line 360 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) & ~(yyvsp[(3) - (3)].ival); ;}
    break;

  case 285:
#line 361 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = 0; ;}
    break;

  case 286:
#line 366 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 287:
#line 371 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NOT_DEFERRABLE; ;}
    break;

  case 288:
#line 372 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_DEFERRABLE; ;}
    break;

  case 289:
#line 373 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_INITIALLY_IMMEDIATE; ;}
    break;

  case 290:
#line 374 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_INITIALLY_DEFERRED; ;}
    break;

  case 291:
#line 375 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NOT_VALID; ;}
    break;

  case 292:
#line 376 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NO_INHERIT; ;}
    break;

  case 293:
#line 382 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->colname = (yyvsp[(1) - (4)].str);
					n->typeName = (yyvsp[(2) - (4)].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collOid = InvalidOid;
					n->fdwoptions = (yyvsp[(3) - (4)].list);
					SplitColQualList((yyvsp[(4) - (4)].list), &n->constraints, &n->collClause,
									 yyscanner);
					n->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 294:
#line 405 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 295:
#line 409 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 296:
#line 415 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 297:
#line 416 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
    break;

  case 298:
#line 420 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 299:
#line 424 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 300:
#line 425 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 301:
#line 426 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 302:
#line 431 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (PGNode *) (yyvsp[(3) - (3)].node), (yylsp[(1) - (3)]));
				;}
    break;

  case 303:
#line 435 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 304:
#line 442 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 305:
#line 443 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 306:
#line 448 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 307:
#line 449 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 308:
#line 454 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str));
				;}
    break;

  case 309:
#line 461 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 310:
#line 462 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 311:
#line 467 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 312:
#line 468 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 313:
#line 472 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
    break;

  case 314:
#line 478 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (PGNode *) (yyvsp[(3) - (3)].node), (yylsp[(1) - (3)]));
				;}
    break;

  case 315:
#line 482 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 316:
#line 486 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (5)].str), (yyvsp[(3) - (5)].str), (PGNode *) (yyvsp[(5) - (5)].node),
											 PG_DEFELEM_UNSPEC, (yylsp[(1) - (5)]));
				;}
    break;

  case 317:
#line 491 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str), NULL, PG_DEFELEM_UNSPEC, (yylsp[(1) - (3)]));
				;}
    break;

  case 318:
#line 498 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 319:
#line 499 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 320:
#line 503 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 321:
#line 505 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(1) - (4)].str)), (yyvsp[(2) - (4)].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 322:
#line 511 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(2) - (5)].str)), (yyvsp[(3) - (5)].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->setof = true;
					(yyval.typnam)->location = (yylsp[(2) - (5)]);
				;}
    break;

  case 323:
#line 522 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_CHECK;
					n->location = (yylsp[(1) - (5)]);
					n->raw_expr = (yyvsp[(3) - (5)].node);
					n->cooked_expr = NULL;
					processCASbits((yyvsp[(5) - (5)].ival), (yylsp[(5) - (5)]), "CHECK",
								   NULL, NULL, &n->skip_validation,
								   &n->is_no_inherit, yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 324:
#line 536 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (6)]);
					n->keys = (yyvsp[(3) - (6)].list);
					n->options = (yyvsp[(5) - (6)].list);
					n->indexname = NULL;
					processCASbits((yyvsp[(6) - (6)].ival), (yylsp[(6) - (6)]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 325:
#line 549 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (3)]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[(2) - (3)].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[(3) - (3)].ival), (yylsp[(3) - (3)]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 326:
#line 564 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (7)]);
					n->keys = (yyvsp[(4) - (7)].list);
					n->options = (yyvsp[(6) - (7)].list);
					n->indexname = NULL;
					processCASbits((yyvsp[(7) - (7)].ival), (yylsp[(7) - (7)]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 327:
#line 577 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (4)]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[(3) - (4)].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[(4) - (4)].ival), (yylsp[(4) - (4)]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 328:
#line 592 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_FOREIGN;
					n->location = (yylsp[(1) - (11)]);
					n->pktable			= (yyvsp[(7) - (11)].range);
					n->fk_attrs			= (yyvsp[(4) - (11)].list);
					n->pk_attrs			= (yyvsp[(8) - (11)].list);
					n->fk_matchtype		= (yyvsp[(9) - (11)].ival);
					n->fk_upd_action	= (char) ((yyvsp[(10) - (11)].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[(10) - (11)].ival) & 0xFF);
					processCASbits((yyvsp[(11) - (11)].ival), (yylsp[(11) - (11)]), "FOREIGN KEY",
								   &n->deferrable, &n->initdeferred,
								   &n->skip_validation, NULL,
								   yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 329:
#line 614 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 330:
#line 618 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 331:
#line 625 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_FULL;
			;}
    break;

  case 332:
#line 629 "third_party/libpg_query/grammar/statements/create.y"
    {
				ereport(ERROR,
						(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
						 errmsg("MATCH PARTIAL not yet implemented"),
						 parser_errposition((yylsp[(1) - (2)]))));
				(yyval.ival) = PG_FKCONSTR_MATCH_PARTIAL;
			;}
    break;

  case 333:
#line 637 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
			;}
    break;

  case 334:
#line 641 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
			;}
    break;

  case 335:
#line 649 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGTableLikeClause *n = makeNode(PGTableLikeClause);
					n->relation = (yyvsp[(2) - (3)].range);
					n->options = (yyvsp[(3) - (3)].ival);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 336:
#line 658 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 337:
#line 659 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 338:
#line 660 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 339:
#line 661 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 340:
#line 663 "third_party/libpg_query/grammar/statements/create.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 341:
#line 670 "third_party/libpg_query/grammar/statements/create.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 342:
#line 676 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_UNLOGGED; ;}
    break;

  case 343:
#line 677 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = RELPERSISTENCE_PERMANENT; ;}
    break;

  case 344:
#line 682 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_ATTRIBUTE_IDENTITY_ALWAYS; ;}
    break;

  case 345:
#line 683 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ATTRIBUTE_IDENTITY_BY_DEFAULT; ;}
    break;

  case 346:
#line 10 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 347:
#line 20 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (4)].objtype);
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 348:
#line 30 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 349:
#line 40 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (4)].objtype);
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 350:
#line 50 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->objects = list_make1(lappend((yyvsp[(5) - (6)].list), makeString((yyvsp[(3) - (6)].str))));
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = false;
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 351:
#line 60 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (8)].objtype);
					n->objects = list_make1(lappend((yyvsp[(7) - (8)].list), makeString((yyvsp[(5) - (8)].str))));
					n->behavior = (yyvsp[(8) - (8)].dbehavior);
					n->missing_ok = true;
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 352:
#line 70 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = PG_OBJECT_TYPE;
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 353:
#line 80 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = PG_OBJECT_TYPE;
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 354:
#line 93 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TABLE; ;}
    break;

  case 355:
#line 94 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_SEQUENCE; ;}
    break;

  case 356:
#line 95 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FUNCTION; ;}
    break;

  case 357:
#line 96 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FUNCTION; ;}
    break;

  case 358:
#line 97 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_VIEW; ;}
    break;

  case 359:
#line 98 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_MATVIEW; ;}
    break;

  case 360:
#line 99 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_INDEX; ;}
    break;

  case 361:
#line 100 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FOREIGN_TABLE; ;}
    break;

  case 362:
#line 101 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_COLLATION; ;}
    break;

  case 363:
#line 102 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_CONVERSION; ;}
    break;

  case 364:
#line 103 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_STATISTIC_EXT; ;}
    break;

  case 365:
#line 104 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSPARSER; ;}
    break;

  case 366:
#line 105 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSDICTIONARY; ;}
    break;

  case 367:
#line 106 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSTEMPLATE; ;}
    break;

  case 368:
#line 107 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSCONFIGURATION; ;}
    break;

  case 369:
#line 112 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_ACCESS_METHOD; ;}
    break;

  case 370:
#line 113 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_EVENT_TRIGGER; ;}
    break;

  case 371:
#line 114 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_EXTENSION; ;}
    break;

  case 372:
#line 115 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FDW; ;}
    break;

  case 373:
#line 116 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_PUBLICATION; ;}
    break;

  case 374:
#line 117 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_SCHEMA; ;}
    break;

  case 375:
#line 118 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FOREIGN_SERVER; ;}
    break;

  case 376:
#line 123 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 377:
#line 124 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 378:
#line 129 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_CASCADE; ;}
    break;

  case 379:
#line 130 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_RESTRICT; ;}
    break;

  case 380:
#line 131 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_RESTRICT; /* default */ ;}
    break;

  case 381:
#line 136 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_POLICY; ;}
    break;

  case 382:
#line 137 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_RULE; ;}
    break;

  case 383:
#line 138 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TRIGGER; ;}
    break;

  case 384:
#line 141 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].typnam)); ;}
    break;

  case 385:
#line 142 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].typnam)); ;}
    break;

  case 386:
#line 8 "third_party/libpg_query/grammar/statements/create_function.y"
    {
					PGCreateFunctionStmt *n = makeNode(PGCreateFunctionStmt);
					n->name = (yyvsp[(3) - (6)].range);
					n->params = (yyvsp[(4) - (6)].list);
					n->function = (yyvsp[(6) - (6)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 389:
#line 24 "third_party/libpg_query/grammar/statements/create_function.y"
    {
				(yyval.list) = NIL;
			;}
    break;

  case 390:
#line 28 "third_party/libpg_query/grammar/statements/create_function.y"
    {
				(yyval.list) = (yyvsp[(2) - (3)].list);
			;}
    break;

  case 391:
#line 12 "third_party/libpg_query/grammar/statements/update.y"
    {
					PGUpdateStmt *n = makeNode(PGUpdateStmt);
					n->relation = (yyvsp[(3) - (8)].range);
					n->targetList = (yyvsp[(5) - (8)].list);
					n->fromClause = (yyvsp[(6) - (8)].list);
					n->whereClause = (yyvsp[(7) - (8)].node);
					n->returningList = (yyvsp[(8) - (8)].list);
					n->withClause = (yyvsp[(1) - (8)].with);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 392:
#line 3 "third_party/libpg_query/grammar/statements/copy.y"
    {
					PGCopyStmt *n = makeNode(PGCopyStmt);
					n->relation = (yyvsp[(3) - (11)].range);
					n->query = NULL;
					n->attlist = (yyvsp[(4) - (11)].list);
					n->is_from = (yyvsp[(6) - (11)].boolean);
					n->is_program = (yyvsp[(7) - (11)].boolean);
					n->filename = (yyvsp[(8) - (11)].str);

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[(8) - (11)]))));

					n->options = NIL;
					/* Concatenate user-supplied flags */
					if ((yyvsp[(2) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(2) - (11)].defelt));
					if ((yyvsp[(5) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(5) - (11)].defelt));
					if ((yyvsp[(9) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(9) - (11)].defelt));
					if ((yyvsp[(11) - (11)].list))
						n->options = list_concat(n->options, (yyvsp[(11) - (11)].list));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 393:
#line 31 "third_party/libpg_query/grammar/statements/copy.y"
    {
					PGCopyStmt *n = makeNode(PGCopyStmt);
					n->relation = NULL;
					n->query = (yyvsp[(3) - (9)].node);
					n->attlist = NIL;
					n->is_from = false;
					n->is_program = (yyvsp[(6) - (9)].boolean);
					n->filename = (yyvsp[(7) - (9)].str);
					n->options = (yyvsp[(9) - (9)].list);

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[(5) - (9)]))));

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 394:
#line 53 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = true; ;}
    break;

  case 395:
#line 54 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = false; ;}
    break;

  case 396:
#line 60 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(2) - (3)]));
				;}
    break;

  case 397:
#line 63 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 398:
#line 69 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 399:
#line 73 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 400:
#line 80 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 401:
#line 81 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 402:
#line 85 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 403:
#line 86 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 404:
#line 91 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = true; ;}
    break;

  case 405:
#line 92 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = false; ;}
    break;

  case 406:
#line 96 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 407:
#line 97 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 408:
#line 102 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 409:
#line 103 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].value); ;}
    break;

  case 410:
#line 104 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeNode(PGAStar); ;}
    break;

  case 411:
#line 105 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) (yyvsp[(2) - (3)].list); ;}
    break;

  case 412:
#line 106 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = NULL; ;}
    break;

  case 413:
#line 112 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 414:
#line 120 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[(1) - (2)]));
				;}
    break;

  case 415:
#line 123 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 416:
#line 128 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 417:
#line 129 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = NIL; ;}
    break;

  case 418:
#line 135 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[(1) - (1)]));
				;}
    break;

  case 419:
#line 138 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 420:
#line 144 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[(1) - (1)]));
				;}
    break;

  case 421:
#line 148 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 422:
#line 152 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("freeze", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 423:
#line 156 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 424:
#line 160 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("null", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 425:
#line 164 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("csv"), (yylsp[(1) - (1)]));
				;}
    break;

  case 426:
#line 168 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("header", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 427:
#line 172 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("quote", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 428:
#line 176 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("escape", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 429:
#line 180 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 430:
#line 184 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)makeNode(PGAStar), (yylsp[(1) - (3)]));
				;}
    break;

  case 431:
#line 188 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_not_null", (PGNode *)(yyvsp[(4) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 432:
#line 192 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_null", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 433:
#line 196 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("encoding", (PGNode *)makeString((yyvsp[(2) - (2)].str)), (yylsp[(1) - (2)]));
				;}
    break;

  case 434:
#line 203 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 435:
#line 209 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 436:
#line 210 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = NULL; ;}
    break;

  case 437:
#line 211 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = NULL; ;}
    break;

  case 438:
#line 217 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 439:
#line 221 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 442:
#line 52 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 443:
#line 53 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 444:
#line 68 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 445:
#line 70 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list), NIL,
										NULL, NULL, NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (2)].node);
				;}
    break;

  case 446:
#line 77 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(3) - (4)].list),
										(PGNode*) list_nth((yyvsp[(4) - (4)].list), 0), (PGNode*) list_nth((yyvsp[(4) - (4)].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (4)].node);
				;}
    break;

  case 447:
#line 85 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(4) - (4)].list),
										(PGNode*) list_nth((yyvsp[(3) - (4)].list), 0), (PGNode*) list_nth((yyvsp[(3) - (4)].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (4)].node);
				;}
    break;

  case 448:
#line 93 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (2)].node), NULL, NIL,
										NULL, NULL,
										(yyvsp[(1) - (2)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (2)].node);
				;}
    break;

  case 449:
#line 101 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].list), NIL,
										NULL, NULL,
										(yyvsp[(1) - (3)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (3)].node);
				;}
    break;

  case 450:
#line 109 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(4) - (5)].list),
										(PGNode*) list_nth((yyvsp[(5) - (5)].list), 0), (PGNode*) list_nth((yyvsp[(5) - (5)].list), 1),
										(yyvsp[(1) - (5)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (5)].node);
				;}
    break;

  case 451:
#line 117 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(5) - (5)].list),
										(PGNode*) list_nth((yyvsp[(4) - (5)].list), 0), (PGNode*) list_nth((yyvsp[(4) - (5)].list), 1),
										(yyvsp[(1) - (5)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (5)].node);
				;}
    break;

  case 452:
#line 127 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 453:
#line 128 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 454:
#line 158 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->targetList = (yyvsp[(3) - (11)].list);
					n->intoClause = (yyvsp[(4) - (11)].into);
					n->fromClause = (yyvsp[(5) - (11)].list);
					n->whereClause = (yyvsp[(6) - (11)].node);
					n->groupClause = (yyvsp[(7) - (11)].list);
					n->havingClause = (yyvsp[(8) - (11)].node);
					n->windowClause = (yyvsp[(9) - (11)].list);
					n->qualifyClause = (yyvsp[(10) - (11)].node);
					n->sampleOptions = (yyvsp[(11) - (11)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 455:
#line 174 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->distinctClause = (yyvsp[(2) - (11)].list);
					n->targetList = (yyvsp[(3) - (11)].list);
					n->intoClause = (yyvsp[(4) - (11)].into);
					n->fromClause = (yyvsp[(5) - (11)].list);
					n->whereClause = (yyvsp[(6) - (11)].node);
					n->groupClause = (yyvsp[(7) - (11)].list);
					n->havingClause = (yyvsp[(8) - (11)].node);
					n->windowClause = (yyvsp[(9) - (11)].list);
					n->qualifyClause = (yyvsp[(10) - (11)].node);
					n->sampleOptions = (yyvsp[(11) - (11)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 456:
#line 188 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 457:
#line 190 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* same as SELECT * FROM relation_expr */
					PGColumnRef *cr = makeNode(PGColumnRef);
					PGResTarget *rt = makeNode(PGResTarget);
					PGSelectStmt *n = makeNode(PGSelectStmt);

					cr->fields = list_make1(makeNode(PGAStar));
					cr->location = -1;

					rt->name = NULL;
					rt->indirection = NIL;
					rt->val = (PGNode *)cr;
					rt->location = -1;

					n->targetList = list_make1(rt);
					n->fromClause = list_make1((yyvsp[(2) - (2)].range));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 458:
#line 209 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_UNION, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 459:
#line 213 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_INTERSECT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 460:
#line 217 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_EXCEPT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 461:
#line 234 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[(1) - (2)]);
			;}
    break;

  case 462:
#line 241 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[(1) - (2)]);
			;}
    break;

  case 463:
#line 248 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(3) - (3)].list);
				(yyval.with)->recursive = true;
				(yyval.with)->location = (yylsp[(1) - (3)]);
			;}
    break;

  case 464:
#line 257 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 465:
#line 258 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 466:
#line 262 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGCommonTableExpr *n = makeNode(PGCommonTableExpr);
				n->ctename = (yyvsp[(1) - (6)].str);
				n->aliascolnames = (yyvsp[(2) - (6)].list);
				n->ctequery = (yyvsp[(5) - (6)].node);
				n->location = (yylsp[(1) - (6)]);
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 467:
#line 274 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.into) = makeNode(PGIntoClause);
					(yyval.into)->rel = (yyvsp[(2) - (2)].range);
					(yyval.into)->colNames = NIL;
					(yyval.into)->options = NIL;
					(yyval.into)->onCommit = PG_ONCOMMIT_NOOP;
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;
				;}
    break;

  case 468:
#line 284 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.into) = NULL; ;}
    break;

  case 469:
#line 293 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 470:
#line 298 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 471:
#line 303 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 472:
#line 308 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 473:
#line 313 "third_party/libpg_query/grammar/statements/select.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (4)]))));
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 474:
#line 321 "third_party/libpg_query/grammar/statements/select.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (4)]))));
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 475:
#line 329 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_UNLOGGED;
				;}
    break;

  case 476:
#line 334 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(2) - (2)].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				;}
    break;

  case 477:
#line 339 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				;}
    break;

  case 478:
#line 345 "third_party/libpg_query/grammar/statements/select.y"
    {;}
    break;

  case 479:
#line 346 "third_party/libpg_query/grammar/statements/select.y"
    {;}
    break;

  case 480:
#line 350 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 481:
#line 351 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 482:
#line 352 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 483:
#line 359 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(NIL); ;}
    break;

  case 484:
#line 360 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
    break;

  case 485:
#line 364 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL;;}
    break;

  case 486:
#line 365 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 487:
#line 369 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true;;}
    break;

  case 488:
#line 370 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false;;}
    break;

  case 489:
#line 371 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 490:
#line 375 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list);;}
    break;

  case 491:
#line 376 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 492:
#line 380 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 493:
#line 382 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSortBy *sort = makeNode(PGSortBy);
					sort->node = (PGNode *) makeNode(PGAStar);
					sort->sortby_dir = (yyvsp[(4) - (5)].sortorder);
					sort->sortby_nulls = (yyvsp[(5) - (5)].nullorder);
					sort->useOp = NIL;
					sort->location = -1;		/* no operator */
					(yyval.list) = list_make1(sort);
				;}
    break;

  case 494:
#line 392 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSortBy *sort = makeNode(PGSortBy);
					sort->node = (PGNode *) makeNode(PGAStar);
					sort->sortby_dir = (yyvsp[(4) - (5)].sortorder);
					sort->sortby_nulls = (yyvsp[(5) - (5)].nullorder);
					sort->useOp = NIL;
					sort->location = -1;		/* no operator */
					(yyval.list) = list_make1(sort);
				;}
    break;

  case 495:
#line 404 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].sortby)); ;}
    break;

  case 496:
#line 405 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].sortby)); ;}
    break;

  case 497:
#line 409 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.sortby) = makeNode(PGSortBy);
					(yyval.sortby)->node = (yyvsp[(1) - (4)].node);
					(yyval.sortby)->sortby_dir = SORTBY_USING;
					(yyval.sortby)->sortby_nulls = (yyvsp[(4) - (4)].nullorder);
					(yyval.sortby)->useOp = (yyvsp[(3) - (4)].list);
					(yyval.sortby)->location = (yylsp[(3) - (4)]);
				;}
    break;

  case 498:
#line 418 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.sortby) = makeNode(PGSortBy);
					(yyval.sortby)->node = (yyvsp[(1) - (3)].node);
					(yyval.sortby)->sortby_dir = (yyvsp[(2) - (3)].sortorder);
					(yyval.sortby)->sortby_nulls = (yyvsp[(3) - (3)].nullorder);
					(yyval.sortby)->useOp = NIL;
					(yyval.sortby)->location = -1;		/* no operator */
				;}
    break;

  case 499:
#line 428 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_ASC; ;}
    break;

  case 500:
#line 429 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_DESC; ;}
    break;

  case 501:
#line 430 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_DEFAULT; ;}
    break;

  case 502:
#line 433 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_FIRST; ;}
    break;

  case 503:
#line 434 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_LAST; ;}
    break;

  case 504:
#line 435 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_DEFAULT; ;}
    break;

  case 505:
#line 439 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(2) - (2)].node), (yyvsp[(1) - (2)].node)); ;}
    break;

  case 506:
#line 440 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 507:
#line 441 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2(NULL, (yyvsp[(1) - (1)].node)); ;}
    break;

  case 508:
#line 442 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (1)].node), NULL); ;}
    break;

  case 509:
#line 446 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 510:
#line 447 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2(NULL,NULL); ;}
    break;

  case 511:
#line 452 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 512:
#line 454 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* Disabled because it was too confusing, bjm 2002-02-18 */
					ereport(ERROR,
							(errcode(PG_ERRCODE_SYNTAX_ERROR),
							 errmsg("LIMIT #,# syntax is not supported"),
							 errhint("Use separate LIMIT and OFFSET clauses."),
							 parser_errposition((yylsp[(1) - (4)]))));
				;}
    break;

  case 513:
#line 470 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(3) - (5)].node); ;}
    break;

  case 514:
#line 472 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeIntConst(1, -1); ;}
    break;

  case 515:
#line 477 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 516:
#line 480 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 517:
#line 488 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeFloat((yyvsp[(1) - (2)].str)), true);
		;}
    break;

  case 518:
#line 492 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), true);
		;}
    break;

  case 519:
#line 496 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeFloat((yyvsp[(1) - (2)].str)), true);
		;}
    break;

  case 520:
#line 500 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), true);
		;}
    break;

  case 521:
#line 504 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (1)].ival)), false);
		;}
    break;

  case 522:
#line 508 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), false);
		;}
    break;

  case 523:
#line 515 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(3) - (3)].node);
				;}
    break;

  case 524:
#line 519 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 525:
#line 526 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 526:
#line 527 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = NULL; ;}
    break;

  case 527:
#line 532 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSampleOptions((yyvsp[(3) - (5)].node), (yyvsp[(1) - (5)].str), (yyvsp[(5) - (5)].ival), (yylsp[(1) - (5)]));
				;}
    break;

  case 528:
#line 536 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (1)].node), NULL, -1, (yylsp[(1) - (1)]));
		;}
    break;

  case 529:
#line 540 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (4)].node), (yyvsp[(3) - (4)].str), -1, (yylsp[(1) - (4)]));
		;}
    break;

  case 530:
#line 544 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (6)].node), (yyvsp[(3) - (6)].str), (yyvsp[(5) - (6)].ival), (yylsp[(1) - (6)]));
		;}
    break;

  case 531:
#line 551 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(2) - (2)].node);
				;}
    break;

  case 532:
#line 557 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 533:
#line 558 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 534:
#line 563 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = (yyvsp[(3) - (4)].ival); ;}
    break;

  case 535:
#line 564 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = -1; ;}
    break;

  case 536:
#line 568 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 537:
#line 570 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* LIMIT ALL is represented as a NULL constant */
					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
				;}
    break;

  case 538:
#line 575 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeLimitPercent((yyvsp[(1) - (2)].node)); ;}
    break;

  case 539:
#line 577 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeLimitPercent(makeFloatConst((yyvsp[(1) - (2)].str),(yylsp[(1) - (2)]))); ;}
    break;

  case 540:
#line 579 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeLimitPercent(makeIntConst((yyvsp[(1) - (2)].ival),(yylsp[(1) - (2)]))); ;}
    break;

  case 541:
#line 583 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 542:
#line 603 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 543:
#line 605 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 544:
#line 607 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 545:
#line 611 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival),(yylsp[(1) - (1)])); ;}
    break;

  case 546:
#line 612 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str),(yylsp[(1) - (1)])); ;}
    break;

  case 547:
#line 616 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 548:
#line 617 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 549:
#line 620 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 550:
#line 621 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 551:
#line 646 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 552:
#line 648 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNode *node = (PGNode *) makeGroupingSet(GROUPING_SET_ALL, NIL, (yylsp[(3) - (3)]));
					(yyval.list) = list_make1(node);
				;}
    break;

  case 553:
#line 653 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNode *node = (PGNode *) makeGroupingSet(GROUPING_SET_ALL, NIL, (yylsp[(3) - (3)]));
					(yyval.list) = list_make1(node);
				;}
    break;

  case 554:
#line 657 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 555:
#line 661 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 556:
#line 662 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].node)); ;}
    break;

  case 557:
#line 666 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 558:
#line 667 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 559:
#line 668 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 560:
#line 669 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 561:
#line 670 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 562:
#line 675 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_EMPTY, NIL, (yylsp[(1) - (2)]));
				;}
    break;

  case 563:
#line 688 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_ROLLUP, (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 564:
#line 695 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_CUBE, (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 565:
#line 702 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_SETS, (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 566:
#line 708 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 567:
#line 709 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 568:
#line 713 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 569:
#line 714 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 570:
#line 718 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 571:
#line 719 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 572:
#line 723 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 573:
#line 724 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 574:
#line 728 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 575:
#line 729 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 576:
#line 733 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 577:
#line 734 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 578:
#line 739 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGLockingClause *n = makeNode(PGLockingClause);
					n->lockedRels = (yyvsp[(2) - (3)].list);
					n->strength = (yyvsp[(1) - (3)].lockstrength);
					n->waitPolicy = (yyvsp[(3) - (3)].lockwaitpolicy);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 579:
#line 749 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = LCS_FORUPDATE; ;}
    break;

  case 580:
#line 750 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORNOKEYUPDATE; ;}
    break;

  case 581:
#line 751 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORSHARE; ;}
    break;

  case 582:
#line 752 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORKEYSHARE; ;}
    break;

  case 583:
#line 756 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 584:
#line 757 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 585:
#line 762 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = LockWaitError; ;}
    break;

  case 586:
#line 763 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = PGLockWaitSkip; ;}
    break;

  case 587:
#line 764 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = PGLockWaitBlock; ;}
    break;

  case 588:
#line 774 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->valuesLists = list_make1((yyvsp[(3) - (4)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 589:
#line 780 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = (PGSelectStmt *) (yyvsp[(1) - (5)].node);
					n->valuesLists = lappend(n->valuesLists, (yyvsp[(4) - (5)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 590:
#line 797 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 591:
#line 798 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 592:
#line 802 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 593:
#line 803 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 594:
#line 810 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyvsp[(1) - (3)].range)->alias = (yyvsp[(2) - (3)].alias);
					(yyvsp[(1) - (3)].range)->sample = (yyvsp[(3) - (3)].node);
					(yyval.node) = (PGNode *) (yyvsp[(1) - (3)].range);
				;}
    break;

  case 595:
#line 816 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[(1) - (3)].node);
					n->alias = (PGAlias*) linitial((yyvsp[(2) - (3)].list));
					n->coldeflist = (PGList*) lsecond((yyvsp[(2) - (3)].list));
					n->sample = (yyvsp[(3) - (3)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 596:
#line 824 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[(2) - (3)].node);
					n->lateral = true;
					n->alias = (PGAlias*) linitial((yyvsp[(3) - (3)].list));
					n->coldeflist = (PGList*) lsecond((yyvsp[(3) - (3)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 597:
#line 832 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeSubselect *n = makeNode(PGRangeSubselect);
					n->lateral = false;
					n->subquery = (yyvsp[(1) - (3)].node);
					n->alias = (yyvsp[(2) - (3)].alias);
					n->sample = (yyvsp[(3) - (3)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 598:
#line 841 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeSubselect *n = makeNode(PGRangeSubselect);
					n->lateral = true;
					n->subquery = (yyvsp[(2) - (3)].node);
					n->alias = (yyvsp[(3) - (3)].alias);
					n->sample = NULL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 599:
#line 850 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) (yyvsp[(1) - (1)].jexpr);
				;}
    break;

  case 600:
#line 854 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyvsp[(2) - (4)].jexpr)->alias = (yyvsp[(4) - (4)].alias);
					(yyval.node) = (PGNode *) (yyvsp[(2) - (4)].jexpr);
				;}
    break;

  case 601:
#line 880 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.jexpr) = (yyvsp[(2) - (3)].jexpr);
				;}
    break;

  case 602:
#line 884 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* CROSS JOIN is same as unqualified inner join */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(4) - (4)].node);
					n->usingClause = NIL;
					n->quals = NULL;
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 603:
#line 897 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[(2) - (5)].jtype);
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (5)].node);
					n->rarg = (yyvsp[(4) - (5)].node);
					if ((yyvsp[(5) - (5)].node) != NULL && IsA((yyvsp[(5) - (5)].node), PGList))
						n->usingClause = (PGList *) (yyvsp[(5) - (5)].node); /* USING clause */
					else
						n->quals = (yyvsp[(5) - (5)].node); /* ON clause */
					n->location = (yylsp[(2) - (5)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 604:
#line 911 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* letting join_type reduce to empty doesn't work */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(3) - (4)].node);
					if ((yyvsp[(4) - (4)].node) != NULL && IsA((yyvsp[(4) - (4)].node), PGList))
						n->usingClause = (PGList *) (yyvsp[(4) - (4)].node); /* USING clause */
					else
						n->quals = (yyvsp[(4) - (4)].node); /* ON clause */
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 605:
#line 926 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[(3) - (5)].jtype);
					n->isNatural = true;
					n->larg = (yyvsp[(1) - (5)].node);
					n->rarg = (yyvsp[(5) - (5)].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					n->location = (yylsp[(2) - (5)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 606:
#line 938 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* letting join_type reduce to empty doesn't work */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = true;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(4) - (4)].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 607:
#line 954 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(2) - (5)].str);
					(yyval.alias)->colnames = (yyvsp[(4) - (5)].list);
				;}
    break;

  case 608:
#line 960 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(2) - (2)].str);
				;}
    break;

  case 609:
#line 965 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(1) - (4)].str);
					(yyval.alias)->colnames = (yyvsp[(3) - (4)].list);
				;}
    break;

  case 610:
#line 971 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(1) - (1)].str);
				;}
    break;

  case 611:
#line 977 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.alias) = (yyvsp[(1) - (1)].alias); ;}
    break;

  case 612:
#line 978 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.alias) = NULL; ;}
    break;

  case 613:
#line 987 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2((yyvsp[(1) - (1)].alias), NIL);
				;}
    break;

  case 614:
#line 991 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(NULL, (yyvsp[(3) - (4)].list));
				;}
    break;

  case 615:
#line 995 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAlias *a = makeNode(PGAlias);
					a->aliasname = (yyvsp[(2) - (5)].str);
					(yyval.list) = list_make2(a, (yyvsp[(4) - (5)].list));
				;}
    break;

  case 616:
#line 1001 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAlias *a = makeNode(PGAlias);
					a->aliasname = (yyvsp[(1) - (4)].str);
					(yyval.list) = list_make2(a, (yyvsp[(3) - (4)].list));
				;}
    break;

  case 617:
#line 1007 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(NULL, NIL);
				;}
    break;

  case 618:
#line 1012 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_FULL; ;}
    break;

  case 619:
#line 1013 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_LEFT; ;}
    break;

  case 620:
#line 1014 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_RIGHT; ;}
    break;

  case 621:
#line 1015 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_INNER; ;}
    break;

  case 622:
#line 1019 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 623:
#line 1020 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 624:
#line 1032 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) (yyvsp[(3) - (4)].list); ;}
    break;

  case 625:
#line 1033 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 626:
#line 1039 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* inheritance query, implicitly */
					(yyval.range) = (yyvsp[(1) - (1)].range);
					(yyval.range)->inh = true;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 627:
#line 1046 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* inheritance query, explicitly */
					(yyval.range) = (yyvsp[(1) - (2)].range);
					(yyval.range)->inh = true;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 628:
#line 1053 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* no inheritance */
					(yyval.range) = (yyvsp[(2) - (2)].range);
					(yyval.range)->inh = false;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 629:
#line 1060 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* no inheritance, SQL99-style syntax */
					(yyval.range) = (yyvsp[(3) - (4)].range);
					(yyval.range)->inh = false;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 630:
#line 1092 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = makeNode(PGRangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[(2) - (2)].boolean);
					n->is_rowsfrom = false;
					n->functions = list_make1(list_make2((yyvsp[(1) - (2)].node), NIL));
					n->sample = NULL;
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 631:
#line 1103 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = makeNode(PGRangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[(6) - (6)].boolean);
					n->is_rowsfrom = true;
					n->functions = (yyvsp[(4) - (6)].list);
					n->sample = NULL;
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 632:
#line 1116 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list)); ;}
    break;

  case 633:
#line 1120 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 634:
#line 1121 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 635:
#line 1124 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 636:
#line 1125 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 637:
#line 1128 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 638:
#line 1129 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 639:
#line 1134 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 640:
#line 1135 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 641:
#line 1141 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 642:
#line 1145 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 643:
#line 1151 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->colname = (yyvsp[(1) - (3)].str);
					n->typeName = (yyvsp[(2) - (3)].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collClause = (PGCollateClause *) (yyvsp[(3) - (3)].node);
					n->collOid = InvalidOid;
					n->constraints = NIL;
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 644:
#line 1172 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[(2) - (2)].list);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 645:
#line 1179 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 646:
#line 1192 "third_party/libpg_query/grammar/statements/select.y"
    {
             (yyval.list) = list_make1(list_make2(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].typnam)));
            ;}
    break;

  case 647:
#line 1195 "third_party/libpg_query/grammar/statements/select.y"
    {
             (yyval.list) = lappend((yyvsp[(1) - (4)].list), list_make2(makeString((yyvsp[(3) - (4)].str)), (yyvsp[(4) - (4)].typnam)));
            ;}
    break;

  case 650:
#line 1202 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[(2) - (2)].list);
				;}
    break;

  case 651:
#line 1207 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[(3) - (3)].list);
					(yyval.typnam)->setof = true;
				;}
    break;

  case 652:
#line 1214 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (5)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(4) - (5)].ival)));
				;}
    break;

  case 653:
#line 1219 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (6)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(5) - (6)].ival)));
					(yyval.typnam)->setof = true;
				;}
    break;

  case 654:
#line 1225 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
				;}
    break;

  case 655:
#line 1230 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
					(yyval.typnam)->setof = true;
				;}
    break;

  case 656:
#line 1235 "third_party/libpg_query/grammar/statements/select.y"
    {
               (yyval.typnam) = SystemTypeName("struct");
               (yyval.typnam)->arrayBounds = (yyvsp[(5) - (5)].list);
               (yyval.typnam)->typmods = (yyvsp[(3) - (5)].list);
               (yyval.typnam)->location = (yylsp[(1) - (5)]);
               ;}
    break;

  case 657:
#line 1241 "third_party/libpg_query/grammar/statements/select.y"
    {
               (yyval.typnam) = SystemTypeName("map");
               (yyval.typnam)->arrayBounds = (yyvsp[(5) - (5)].list);
               (yyval.typnam)->typmods = (yyvsp[(3) - (5)].list);
               (yyval.typnam)->location = (yylsp[(1) - (5)]);
			;}
    break;

  case 658:
#line 1251 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeInteger(-1)); ;}
    break;

  case 659:
#line 1253 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = lappend((yyvsp[(1) - (4)].list), makeInteger((yyvsp[(3) - (4)].ival))); ;}
    break;

  case 660:
#line 1255 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = NIL; ;}
    break;

  case 661:
#line 1259 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 662:
#line 1260 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 663:
#line 1261 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 664:
#line 1262 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 665:
#line 1263 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 666:
#line 1265 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
				;}
    break;

  case 667:
#line 1270 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (4)].typnam);
					(yyval.typnam)->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											 makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
				;}
    break;

  case 668:
#line 1289 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 669:
#line 1290 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 670:
#line 1291 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 671:
#line 1292 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 672:
#line 1304 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = makeTypeName((yyvsp[(1) - (2)].str));
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 673:
#line 1317 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 674:
#line 1318 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 675:
#line 1325 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 676:
#line 1330 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 677:
#line 1335 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int2");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 678:
#line 1340 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int8");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 679:
#line 1345 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 680:
#line 1350 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (2)].typnam);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 681:
#line 1355 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float8");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 682:
#line 1360 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 683:
#line 1366 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 684:
#line 1372 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 685:
#line 1378 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("bool");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 686:
#line 1385 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Check FLOAT() precision limits assuming IEEE floating
					 * types - thomas 1997-09-18
					 */
					if ((yyvsp[(2) - (3)].ival) < 1)
						ereport(ERROR,
								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be at least 1 bit"),
								 parser_errposition((yylsp[(2) - (3)]))));
					else if ((yyvsp[(2) - (3)].ival) <= 24)
						(yyval.typnam) = SystemTypeName("float4");
					else if ((yyvsp[(2) - (3)].ival) <= 53)
						(yyval.typnam) = SystemTypeName("float8");
					else
						ereport(ERROR,
								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be less than 54 bits"),
								 parser_errposition((yylsp[(2) - (3)]))));
				;}
    break;

  case 687:
#line 1406 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float4");
				;}
    break;

  case 688:
#line 1416 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 689:
#line 1420 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 690:
#line 1428 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 691:
#line 1432 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
					(yyval.typnam)->typmods = NIL;
				;}
    break;

  case 692:
#line 1440 "third_party/libpg_query/grammar/statements/select.y"
    {
					const char *typname;

					typname = (yyvsp[(2) - (5)].boolean) ? "varbit" : "bit";
					(yyval.typnam) = SystemTypeName(typname);
					(yyval.typnam)->typmods = (yyvsp[(4) - (5)].list);
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 693:
#line 1452 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* bit defaults to bit(1), varbit to no limit */
					if ((yyvsp[(2) - (2)].boolean))
					{
						(yyval.typnam) = SystemTypeName("varbit");
					}
					else
					{
						(yyval.typnam) = SystemTypeName("bit");
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					}
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 694:
#line 1473 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 695:
#line 1477 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 696:
#line 1483 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 697:
#line 1487 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* Length was not specified so allow to be unrestricted.
					 * This handles problems with fixed-length (bpchar) strings
					 * which in column definitions must default to a length
					 * of one, but should not be constrained if the length
					 * was not specified.
					 */
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
					(yyval.typnam)->typmods = NIL;
				;}
    break;

  case 698:
#line 1500 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (4)].conststr));
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
					(yyval.typnam)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 699:
#line 1508 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (1)].conststr));
					/* char defaults to char(1), varchar to no limit */
					if (strcmp((yyvsp[(1) - (1)].conststr), "bpchar") == 0)
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 700:
#line 1518 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 701:
#line 1520 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 702:
#line 1522 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "varchar"; ;}
    break;

  case 703:
#line 1524 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 704:
#line 1526 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 705:
#line 1528 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 706:
#line 1532 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 707:
#line 1533 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 708:
#line 1541 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(5) - (5)].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 709:
#line 1550 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 710:
#line 1558 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(5) - (5)].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 711:
#line 1567 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 712:
#line 1578 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("interval");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 713:
#line 1585 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 714:
#line 1586 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 715:
#line 1587 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 732:
#line 1616 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR), (yylsp[(1) - (1)]))); ;}
    break;

  case 733:
#line 1618 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MONTH), (yylsp[(1) - (1)]))); ;}
    break;

  case 734:
#line 1620 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY), (yylsp[(1) - (1)]))); ;}
    break;

  case 735:
#line 1622 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR), (yylsp[(1) - (1)]))); ;}
    break;

  case 736:
#line 1624 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MINUTE), (yylsp[(1) - (1)]))); ;}
    break;

  case 737:
#line 1626 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(SECOND), (yylsp[(1) - (1)]))); ;}
    break;

  case 738:
#line 1628 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MILLISECOND), (yylsp[(1) - (1)]))); ;}
    break;

  case 739:
#line 1630 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MICROSECOND), (yylsp[(1) - (1)]))); ;}
    break;

  case 740:
#line 1632 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR) |
												 INTERVAL_MASK(MONTH), (yylsp[(1) - (3)])));
				;}
    break;

  case 741:
#line 1637 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR), (yylsp[(1) - (3)])));
				;}
    break;

  case 742:
#line 1642 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
				;}
    break;

  case 743:
#line 1648 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
				;}
    break;

  case 744:
#line 1655 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
				;}
    break;

  case 745:
#line 1660 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
				;}
    break;

  case 746:
#line 1666 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
				;}
    break;

  case 747:
#line 1671 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 748:
#line 1702 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 749:
#line 1705 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), 0, (yylsp[(2) - (3)])); ;}
    break;

  case 750:
#line 1707 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = (yyvsp[(1) - (3)].node);
					n->collname = (yyvsp[(3) - (3)].list);
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 751:
#line 1715 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("timezone"),
											   list_make2((yyvsp[(5) - (5)].node), (yyvsp[(1) - (5)].node)),
											   (yylsp[(2) - (5)]));
				;}
    break;

  case 752:
#line 1730 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 753:
#line 1732 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 754:
#line 1734 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 755:
#line 1736 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 756:
#line 1738 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 757:
#line 1740 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 758:
#line 1742 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 759:
#line 1744 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 760:
#line 1746 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 761:
#line 1748 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 762:
#line 1750 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 763:
#line 1752 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 764:
#line 1754 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 765:
#line 1756 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 766:
#line 1759 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 767:
#line 1761 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 768:
#line 1763 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
    break;

  case 769:
#line 1766 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeAndExpr((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 770:
#line 1768 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeOrExpr((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 771:
#line 1770 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeNotExpr((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 772:
#line 1772 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeNotExpr((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 773:
#line 1775 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_GLOB, "~~~",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 774:
#line 1780 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "~~",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 775:
#line 1785 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make3((yyvsp[(1) - (5)].node), (yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 776:
#line 1792 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "!~~",
												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
				;}
    break;

  case 777:
#line 1797 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("not_like_escape"),
											   list_make3((yyvsp[(1) - (6)].node), (yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 778:
#line 1804 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "~~*",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 779:
#line 1809 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("ilike_escape"),
											   list_make3((yyvsp[(1) - (5)].node), (yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 780:
#line 1816 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "!~~*",
												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
				;}
    break;

  case 781:
#line 1821 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("not_ilike_escape"),
											   list_make3((yyvsp[(1) - (6)].node), (yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 782:
#line 1829 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(4) - (4)].node), makeNullAConst(-1)),
											   (yylsp[(2) - (4)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
												   (yyvsp[(1) - (4)].node), (PGNode *) n, (yylsp[(2) - (4)]));
				;}
    break;

  case 783:
#line 1837 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
												   (yyvsp[(1) - (6)].node), (PGNode *) n, (yylsp[(2) - (6)]));
				;}
    break;

  case 784:
#line 1845 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(5) - (5)].node), makeNullAConst(-1)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
												   (yyvsp[(1) - (5)].node), (PGNode *) n, (yylsp[(2) - (5)]));
				;}
    break;

  case 785:
#line 1853 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
											   (yylsp[(2) - (7)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
												   (yyvsp[(1) - (7)].node), (PGNode *) n, (yylsp[(2) - (7)]));
				;}
    break;

  case 786:
#line 1871 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					n->nulltesttype = PG_IS_NULL;
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 787:
#line 1879 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
					n->nulltesttype = PG_IS_NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 788:
#line 1887 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 789:
#line 1895 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 790:
#line 1903 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 791:
#line 1910 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGFuncCall *n = makeFuncCall(SystemFuncName("row"), (yyvsp[(1) - (1)].list), (yylsp[(1) - (1)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 792:
#line 1914 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGFuncCall *n = makeFuncCall(SystemFuncName("struct_pack"), (yyvsp[(2) - (3)].list), (yylsp[(2) - (3)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 793:
#line 1918 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGFuncCall *n = makeFuncCall(SystemFuncName("list_value"), (yyvsp[(2) - (3)].list), (yylsp[(2) - (3)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 794:
#line 1923 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGLambdaFunction *n = makeNode(PGLambdaFunction);
				n->lhs = (yyvsp[(1) - (3)].node);
				n->rhs = (yyvsp[(3) - (3)].node);
				n->location = (yylsp[(2) - (3)]);
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 795:
#line 1931 "third_party/libpg_query/grammar/statements/select.y"
    {
					if (list_length((yyvsp[(1) - (3)].list)) != 2)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on left side of OVERLAPS expression"),
								 parser_errposition((yylsp[(1) - (3)]))));
					if (list_length((yyvsp[(3) - (3)].list)) != 2)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on right side of OVERLAPS expression"),
								 parser_errposition((yylsp[(3) - (3)]))));
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlaps"),
											   list_concat((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)),
											   (yylsp[(2) - (3)]));
				;}
    break;

  case 796:
#line 1947 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = PG_IS_TRUE;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 797:
#line 1955 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_TRUE;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 798:
#line 1963 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = IS_FALSE;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 799:
#line 1971 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_FALSE;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 800:
#line 1979 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = IS_UNKNOWN;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 801:
#line 1987 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_UNKNOWN;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 802:
#line 1995 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
				;}
    break;

  case 803:
#line 1999 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 804:
#line 2003 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
				;}
    break;

  case 805:
#line 2007 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
				;}
    break;

  case 806:
#line 2011 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN,
												   "BETWEEN",
												   (yyvsp[(1) - (6)].node),
												   (PGNode *) list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
												   (yylsp[(2) - (6)]));
				;}
    break;

  case 807:
#line 2019 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN,
												   "NOT BETWEEN",
												   (yyvsp[(1) - (7)].node),
												   (PGNode *) list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
												   (yylsp[(2) - (7)]));
				;}
    break;

  case 808:
#line 2027 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN_SYM,
												   "BETWEEN SYMMETRIC",
												   (yyvsp[(1) - (6)].node),
												   (PGNode *) list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
												   (yylsp[(2) - (6)]));
				;}
    break;

  case 809:
#line 2035 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN_SYM,
												   "NOT BETWEEN SYMMETRIC",
												   (yyvsp[(1) - (7)].node),
												   (PGNode *) list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
												   (yylsp[(2) - (7)]));
				;}
    break;

  case 810:
#line 2043 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* in_expr returns a PGSubLink or a list of a_exprs */
					if (IsA((yyvsp[(3) - (3)].node), PGSubLink))
					{
						/* generate foo = ANY (subquery) */
						PGSubLink *n = (PGSubLink *) (yyvsp[(3) - (3)].node);
						n->subLinkType = PG_ANY_SUBLINK;
						n->subLinkId = 0;
						n->testexpr = (yyvsp[(1) - (3)].node);
						n->operName = NIL;		/* show it's IN not = ANY */
						n->location = (yylsp[(2) - (3)]);
						(yyval.node) = (PGNode *)n;
					}
					else
					{
						/* generate scalar IN expression */
						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
					}
				;}
    break;

  case 811:
#line 2063 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* in_expr returns a PGSubLink or a list of a_exprs */
					if (IsA((yyvsp[(4) - (4)].node), PGSubLink))
					{
						/* generate NOT (foo = ANY (subquery)) */
						/* Make an = ANY node */
						PGSubLink *n = (PGSubLink *) (yyvsp[(4) - (4)].node);
						n->subLinkType = PG_ANY_SUBLINK;
						n->subLinkId = 0;
						n->testexpr = (yyvsp[(1) - (4)].node);
						n->operName = NIL;		/* show it's IN not = ANY */
						n->location = (yylsp[(2) - (4)]);
						/* Stick a NOT on top; must have same parse location */
						(yyval.node) = makeNotExpr((PGNode *) n, (yylsp[(2) - (4)]));
					}
					else
					{
						/* generate scalar NOT IN expression */
						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "<>", (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
					}
				;}
    break;

  case 812:
#line 2085 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = (yyvsp[(3) - (4)].subquerytype);
					n->subLinkId = 0;
					n->testexpr = (yyvsp[(1) - (4)].node);
					n->operName = (yyvsp[(2) - (4)].list);
					n->subselect = (yyvsp[(4) - (4)].node);
					n->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 813:
#line 2096 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(3) - (6)].subquerytype) == PG_ANY_SUBLINK)
						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ANY, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
					else
						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ALL, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 814:
#line 2103 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * The SQL spec only allows DEFAULT in "contextually typed
					 * expressions", but for us, it's easier to allow it in
					 * any a_expr and then throw error during parse analysis
					 * if it's in an inappropriate context.  This way also
					 * lets us say something smarter than "syntax error".
					 */
					PGSetToDefault *n = makeNode(PGSetToDefault);
					/* parse analysis will fill in the rest */
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 815:
#line 2116 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGList *func_name = list_make1(makeString("construct_array"));
				PGFuncCall *n = makeFuncCall(func_name, (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 816:
#line 2133 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 817:
#line 2135 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), 0, (yylsp[(2) - (3)])); ;}
    break;

  case 818:
#line 2137 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 819:
#line 2139 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 820:
#line 2141 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 821:
#line 2143 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 822:
#line 2145 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 823:
#line 2147 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 824:
#line 2149 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 825:
#line 2151 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 826:
#line 2153 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 827:
#line 2155 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 828:
#line 2157 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 829:
#line 2159 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 830:
#line 2161 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 831:
#line 2163 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 832:
#line 2165 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 833:
#line 2167 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 834:
#line 2169 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
    break;

  case 835:
#line 2171 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
				;}
    break;

  case 836:
#line 2175 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 837:
#line 2179 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
				;}
    break;

  case 838:
#line 2183 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
				;}
    break;

  case 839:
#line 2196 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 840:
#line 2197 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 841:
#line 2199 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGPositionalReference *n = makeNode(PGPositionalReference);
					n->position = (yyvsp[(2) - (2)].ival);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 842:
#line 2206 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = makeParamRef(0, (yylsp[(1) - (2)]));
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = makeParamRef(0, (yylsp[(1) - (2)]));
				;}
    break;

  case 843:
#line 2218 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGParamRef *p = makeNode(PGParamRef);
					p->number = (yyvsp[(1) - (2)].ival);
					p->location = (yylsp[(1) - (2)]);
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (PGNode *) p;
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = (PGNode *) p;
				;}
    break;

  case 844:
#line 2233 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(4) - (4)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (yyvsp[(2) - (4)].node);
						n->indirection = check_indirection((yyvsp[(4) - (4)].list), yyscanner);
						(yyval.node) = (PGNode *)n;
					}
					else
						(yyval.node) = (yyvsp[(2) - (4)].node);
				;}
    break;

  case 845:
#line 2245 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 846:
#line 2247 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].list)) {
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (yyvsp[(1) - (2)].node);
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *)n;
					}
					else {
						(yyval.node) = (yyvsp[(1) - (2)].node);
					}
				;}
    break;

  case 847:
#line 2259 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_EXPR_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(1) - (1)].node);
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 848:
#line 2270 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Because the select_with_parens nonterminal is designed
					 * to "eat" as many levels of parens as possible, the
					 * '(' a_expr ')' opt_indirection production above will
					 * fail to match a sub-SELECT with indirection decoration;
					 * the sub-SELECT won't be regarded as an a_expr as long
					 * as there are parens around it.  To support applying
					 * subscripting or field selection to a sub-SELECT result,
					 * we need this redundant-looking production.
					 */
					PGSubLink *n = makeNode(PGSubLink);
					PGAIndirection *a = makeNode(PGAIndirection);
					n->subLinkType = PG_EXPR_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(1) - (2)].node);
					n->location = (yylsp[(1) - (2)]);
					a->arg = (PGNode *)n;
					a->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.node) = (PGNode *)a;
				;}
    break;

  case 849:
#line 2294 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_EXISTS_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(2) - (2)].node);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 850:
#line 2305 "third_party/libpg_query/grammar/statements/select.y"
    {
				  PGGroupingFunc *g = makeNode(PGGroupingFunc);
				  g->args = (yyvsp[(3) - (4)].list);
				  g->location = (yylsp[(1) - (4)]);
				  (yyval.node) = (PGNode *)g;
			  ;}
    break;

  case 851:
#line 2314 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall((yyvsp[(1) - (3)].list), NIL, (yylsp[(1) - (3)]));
				;}
    break;

  case 852:
#line 2318 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), (yyvsp[(3) - (6)].list), (yylsp[(1) - (6)]));
					n->agg_order = (yyvsp[(4) - (6)].list);
					n->agg_ignore_nulls = (yyvsp[(5) - (6)].boolean);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 853:
#line 2325 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (7)].list), list_make1((yyvsp[(4) - (7)].node)), (yylsp[(1) - (7)]));
					n->func_variadic = true;
					n->agg_order = (yyvsp[(5) - (7)].list);
					n->agg_ignore_nulls = (yyvsp[(6) - (7)].boolean);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 854:
#line 2333 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (9)].list), lappend((yyvsp[(3) - (9)].list), (yyvsp[(6) - (9)].node)), (yylsp[(1) - (9)]));
					n->func_variadic = true;
					n->agg_order = (yyvsp[(7) - (9)].list);
					n->agg_ignore_nulls = (yyvsp[(8) - (9)].boolean);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 855:
#line 2341 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (7)].list), (yyvsp[(4) - (7)].list), (yylsp[(1) - (7)]));
					n->agg_order = (yyvsp[(5) - (7)].list);
					n->agg_ignore_nulls = (yyvsp[(6) - (7)].boolean);
					/* Ideally we'd mark the PGFuncCall node to indicate
					 * "must be an aggregate", but there's no provision
					 * for that in PGFuncCall at the moment.
					 */
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 856:
#line 2352 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (7)].list), (yyvsp[(4) - (7)].list), (yylsp[(1) - (7)]));
					n->agg_order = (yyvsp[(5) - (7)].list);
					n->agg_ignore_nulls = (yyvsp[(6) - (7)].boolean);
					n->agg_distinct = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 857:
#line 2360 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * We consider AGGREGATE(*) to invoke a parameterless
					 * aggregate.  This does the right thing for COUNT(*),
					 * and there are no other aggregates in SQL that accept
					 * '*' as parameter.
					 *
					 * The PGFuncCall node is also marked agg_star = true,
					 * so that later processing can detect what the argument
					 * really was.
					 */
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (4)].list), NIL, (yylsp[(1) - (4)]));
					n->agg_star = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 858:
#line 2388 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = (PGFuncCall *) (yyvsp[(1) - (5)].node);
					/*
					 * The order clause for WITHIN GROUP and the one for
					 * plain-aggregate ORDER BY share a field, so we have to
					 * check here that at most one is present.  We also check
					 * for DISTINCT and VARIADIC here to give a better error
					 * location.  Other consistency checks are deferred to
					 * parse analysis.
					 */
					if ((yyvsp[(2) - (5)].list) != NIL)
					{
						if (n->agg_order != NIL)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use multiple ORDER BY clauses with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (5)]))));
						if (n->agg_distinct)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use DISTINCT with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (5)]))));
						if (n->func_variadic)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use VARIADIC with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (5)]))));
						n->agg_order = (yyvsp[(2) - (5)].list);
						n->agg_within_group = true;
					}
					n->agg_filter = (yyvsp[(3) - (5)].node);
					n->export_state = (yyvsp[(4) - (5)].boolean);
					n->over = (yyvsp[(5) - (5)].windef);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 859:
#line 2424 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 860:
#line 2434 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 861:
#line 2435 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 862:
#line 2443 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("pg_collation_for"),
											   list_make1((yyvsp[(4) - (5)].node)),
											   (yylsp[(1) - (5)]));
				;}
    break;

  case 863:
#line 2449 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_DATE, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 864:
#line 2453 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIME, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 865:
#line 2457 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIME_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 866:
#line 2461 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIMESTAMP, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 867:
#line 2465 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIMESTAMP_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 868:
#line 2469 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIME, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 869:
#line 2473 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIME_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 870:
#line 2477 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIMESTAMP, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 871:
#line 2481 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIMESTAMP_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 872:
#line 2485 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_ROLE, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 873:
#line 2489 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 874:
#line 2493 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_SESSION_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 875:
#line 2497 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 876:
#line 2501 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_CATALOG, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 877:
#line 2505 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_SCHEMA, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 878:
#line 2509 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].typnam), 0, (yylsp[(1) - (6)])); ;}
    break;

  case 879:
#line 2511 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].typnam), 1, (yylsp[(1) - (6)])); ;}
    break;

  case 880:
#line 2513 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("date_part"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 881:
#line 2517 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* overlay(A PLACING B FROM C FOR D) is converted to
					 * overlay(A, B, C, D)
					 * overlay(A PLACING B FROM C) is converted to
					 * overlay(A, B, C)
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlay"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 882:
#line 2526 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* position(A in B) is converted to position(B, A) */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("position"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 883:
#line 2531 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* substring(A from B for C) is converted to
					 * substring(A, B, C) - thomas 2000-11-28
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("substring"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 884:
#line 2538 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* TREAT(expr AS target) converts expr of a particular type to target,
					 * which is defined to be a subtype of the original expression.
					 * In SQL99, this is intended for use with structured UDTs,
					 * but let's make this a generally useful form allowing stronger
					 * coercions than are handled by implicit casting.
					 *
					 * Convert SystemTypeName() to SystemFuncName() even though
					 * at the moment they result in the same thing.
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName(((PGValue *)llast((yyvsp[(5) - (6)].typnam)->names))->val.str),
												list_make1((yyvsp[(3) - (6)].node)),
												(yylsp[(1) - (6)]));
				;}
    break;

  case 885:
#line 2553 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* various trim expressions are defined in SQL
					 * - thomas 1997-07-19
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("trim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 886:
#line 2560 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("ltrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 887:
#line 2564 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("rtrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 888:
#line 2568 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("trim"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 889:
#line 2572 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NULLIF, "=", (yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(1) - (6)]));
				;}
    break;

  case 890:
#line 2576 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCoalesceExpr *c = makeNode(PGCoalesceExpr);
					c->args = (yyvsp[(3) - (4)].list);
					c->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)c;
				;}
    break;

  case 891:
#line 2589 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
    break;

  case 892:
#line 2590 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 893:
#line 2594 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(4) - (5)].node); ;}
    break;

  case 894:
#line 2595 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 895:
#line 2599 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 896:
#line 2600 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 897:
#line 2607 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 898:
#line 2608 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 899:
#line 2612 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].windef)); ;}
    break;

  case 900:
#line 2614 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].windef)); ;}
    break;

  case 901:
#line 2619 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(3) - (3)].windef);
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.windef) = n;
				;}
    break;

  case 902:
#line 2627 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.windef) = (yyvsp[(2) - (2)].windef); ;}
    break;

  case 903:
#line 2629 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->name = (yyvsp[(2) - (2)].str);
					n->refname = NULL;
					n->partitionClause = NIL;
					n->orderClause = NIL;
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.windef) = n;
				;}
    break;

  case 904:
#line 2642 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.windef) = NULL; ;}
    break;

  case 905:
#line 2647 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->name = NULL;
					n->refname = (yyvsp[(2) - (6)].str);
					n->partitionClause = (yyvsp[(3) - (6)].list);
					n->orderClause = (yyvsp[(4) - (6)].list);
					/* copy relevant fields of opt_frame_clause */
					n->frameOptions = (yyvsp[(5) - (6)].windef)->frameOptions;
					n->startOffset = (yyvsp[(5) - (6)].windef)->startOffset;
					n->endOffset = (yyvsp[(5) - (6)].windef)->endOffset;
					n->location = (yylsp[(1) - (6)]);
					(yyval.windef) = n;
				;}
    break;

  case 906:
#line 2672 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 907:
#line 2673 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = NULL; ;}
    break;

  case 908:
#line 2676 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 909:
#line 2677 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 910:
#line 2689 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(2) - (2)].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_RANGE;
					(yyval.windef) = n;
				;}
    break;

  case 911:
#line 2695 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(2) - (2)].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_ROWS;
					(yyval.windef) = n;
				;}
    break;

  case 912:
#line 2701 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 913:
#line 2711 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(1) - (1)].windef);
					/* reject invalid cases */
					if (n->frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[(1) - (1)]))));
					if (n->frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot end with current row"),
								 parser_errposition((yylsp[(1) - (1)]))));
					n->frameOptions |= FRAMEOPTION_END_CURRENT_ROW;
					(yyval.windef) = n;
				;}
    break;

  case 914:
#line 2728 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n1 = (yyvsp[(2) - (4)].windef);
					PGWindowDef *n2 = (yyvsp[(4) - (4)].windef);
					/* form merged options */
					int		frameOptions = n1->frameOptions;
					/* shift converts START_ options to END_ options */
					frameOptions |= n2->frameOptions << 1;
					frameOptions |= FRAMEOPTION_BETWEEN;
					/* reject invalid cases */
					if (frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[(2) - (4)]))));
					if (frameOptions & FRAMEOPTION_END_UNBOUNDED_PRECEDING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame end cannot be UNBOUNDED PRECEDING"),
								 parser_errposition((yylsp[(4) - (4)]))));
					if ((frameOptions & FRAMEOPTION_START_CURRENT_ROW) &&
						(frameOptions & FRAMEOPTION_END_VALUE_PRECEDING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from current row cannot have preceding rows"),
								 parser_errposition((yylsp[(4) - (4)]))));
					if ((frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING) &&
						(frameOptions & (FRAMEOPTION_END_VALUE_PRECEDING |
										 FRAMEOPTION_END_CURRENT_ROW)))
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot have preceding rows"),
								 parser_errposition((yylsp[(4) - (4)]))));
					n1->frameOptions = frameOptions;
					n1->endOffset = n2->startOffset;
					(yyval.windef) = n1;
				;}
    break;

  case 915:
#line 2773 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_PRECEDING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 916:
#line 2781 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_FOLLOWING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 917:
#line 2789 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_CURRENT_ROW;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 918:
#line 2797 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_PRECEDING;
					n->startOffset = (yyvsp[(1) - (2)].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 919:
#line 2805 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_FOLLOWING;
					n->startOffset = (yyvsp[(1) - (2)].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 920:
#line 2825 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 921:
#line 2826 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 922:
#line 2829 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list);;}
    break;

  case 923:
#line 2830 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(2) - (5)].list), (yyvsp[(4) - (5)].node)); ;}
    break;

  case 924:
#line 2834 "third_party/libpg_query/grammar/statements/select.y"
    {
		PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
		na->name = (yyvsp[(1) - (3)].str);
		na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
		na->argnumber = -1;
		na->location = (yylsp[(1) - (3)]);
		(yyval.node) = (PGNode *) na;
	;}
    break;

  case 925:
#line 2844 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 926:
#line 2845 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 927:
#line 2847 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
    break;

  case 928:
#line 2848 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
    break;

  case 929:
#line 2849 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ALL_SUBLINK; ;}
    break;

  case 930:
#line 2852 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 931:
#line 2853 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) (yyvsp[(1) - (1)].conststr); ;}
    break;

  case 932:
#line 2856 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "+"; ;}
    break;

  case 933:
#line 2857 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "-"; ;}
    break;

  case 934:
#line 2858 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "*"; ;}
    break;

  case 935:
#line 2859 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "/"; ;}
    break;

  case 936:
#line 2860 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "%"; ;}
    break;

  case 937:
#line 2861 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "^"; ;}
    break;

  case 938:
#line 2862 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<"; ;}
    break;

  case 939:
#line 2863 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = ">"; ;}
    break;

  case 940:
#line 2864 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "="; ;}
    break;

  case 941:
#line 2865 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<="; ;}
    break;

  case 942:
#line 2866 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = ">="; ;}
    break;

  case 943:
#line 2867 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<>"; ;}
    break;

  case 944:
#line 2871 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 945:
#line 2873 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 946:
#line 2878 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 947:
#line 2880 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 948:
#line 2885 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 949:
#line 2887 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 950:
#line 2889 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~")); ;}
    break;

  case 951:
#line 2891 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~")); ;}
    break;

  case 952:
#line 2893 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~~")); ;}
    break;

  case 953:
#line 2895 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~~")); ;}
    break;

  case 954:
#line 2897 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~*")); ;}
    break;

  case 955:
#line 2899 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~*")); ;}
    break;

  case 956:
#line 2913 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 957:
#line 2915 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lcons(makeString((yyvsp[(1) - (3)].str)), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 958:
#line 2919 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 959:
#line 2923 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 960:
#line 2930 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(1) - (1)].list);
				;}
    break;

  case 961:
#line 2934 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = NULL;
				;}
    break;

  case 962:
#line 2942 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 963:
#line 2946 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 964:
#line 2952 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(1) - (1)].node);
				;}
    break;

  case 965:
#line 2956 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[(1) - (3)].str);
					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) na;
				;}
    break;

  case 966:
#line 2965 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[(1) - (3)].str);
					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) na;
				;}
    break;

  case 967:
#line 2975 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].typnam)); ;}
    break;

  case 968:
#line 2976 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].typnam)); ;}
    break;

  case 969:
#line 2981 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(makeStringConst((yyvsp[(1) - (3)].str), (yylsp[(1) - (3)])), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 970:
#line 2984 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 971:
#line 2991 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 972:
#line 2992 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "year"; ;}
    break;

  case 973:
#line 2993 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "month"; ;}
    break;

  case 974:
#line 2994 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "day"; ;}
    break;

  case 975:
#line 2995 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "hour"; ;}
    break;

  case 976:
#line 2996 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "minute"; ;}
    break;

  case 977:
#line 2997 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "second"; ;}
    break;

  case 978:
#line 2998 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "millisecond"; ;}
    break;

  case 979:
#line 2999 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "microsecond"; ;}
    break;

  case 980:
#line 3000 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 981:
#line 3011 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make4((yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].node), (yyvsp[(3) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 982:
#line 3015 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 983:
#line 3022 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 984:
#line 3028 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(3) - (3)].node), (yyvsp[(1) - (3)].node)); ;}
    break;

  case 985:
#line 3029 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 986:
#line 3046 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 987:
#line 3050 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* not legal per SQL99, but might as well allow it */
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yyvsp[(2) - (3)].node));
				;}
    break;

  case 988:
#line 3055 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node));
				;}
    break;

  case 989:
#line 3059 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Since there are no cases where this syntax allows
					 * a textual FOR value, we forcibly cast the argument
					 * to int4.  The possible matches in pg_proc are
					 * substring(text,int4) and substring(text,text),
					 * and we don't want the parser to choose the latter,
					 * which it is likely to do if the second argument
					 * is unknown or doesn't have an implicit cast to int4.
					 */
					(yyval.list) = list_make3((yyvsp[(1) - (2)].node), makeIntConst(1, -1),
									makeTypeCast((yyvsp[(2) - (2)].node),
												 SystemTypeName("int4"), 0, -1));
				;}
    break;

  case 990:
#line 3074 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(1) - (1)].list);
				;}
    break;

  case 991:
#line 3078 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 992:
#line 3082 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 993:
#line 3085 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 994:
#line 3088 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(3) - (3)].list), (yyvsp[(1) - (3)].node)); ;}
    break;

  case 995:
#line 3089 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 996:
#line 3090 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 997:
#line 3094 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subselect = (yyvsp[(1) - (1)].node);
					/* other fields will be filled later */
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 998:
#line 3100 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *)(yyvsp[(2) - (3)].list); ;}
    break;

  case 999:
#line 3111 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCaseExpr *c = makeNode(PGCaseExpr);
					c->casetype = InvalidOid; /* not analyzed yet */
					c->arg = (PGExpr *) (yyvsp[(2) - (5)].node);
					c->args = (yyvsp[(3) - (5)].list);
					c->defresult = (PGExpr *) (yyvsp[(4) - (5)].node);
					c->location = (yylsp[(1) - (5)]);
					(yyval.node) = (PGNode *)c;
				;}
    break;

  case 1000:
#line 3124 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 1001:
#line 3125 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 1002:
#line 3130 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCaseWhen *w = makeNode(PGCaseWhen);
					w->expr = (PGExpr *) (yyvsp[(2) - (4)].node);
					w->result = (PGExpr *) (yyvsp[(4) - (4)].node);
					w->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)w;
				;}
    break;

  case 1003:
#line 3140 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 1004:
#line 3141 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1005:
#line 3144 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 1006:
#line 3145 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1007:
#line 3149 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeColumnRef((yyvsp[(1) - (1)].str), NIL, (yylsp[(1) - (1)]), yyscanner);
				;}
    break;

  case 1008:
#line 3153 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeColumnRef((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].list), (yylsp[(1) - (2)]), yyscanner);
				;}
    break;

  case 1009:
#line 3160 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeString((yyvsp[(2) - (2)].str));
				;}
    break;

  case 1010:
#line 3164 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = false;
					ai->lidx = NULL;
					ai->uidx = (yyvsp[(2) - (3)].node);
					(yyval.node) = (PGNode *) ai;
				;}
    break;

  case 1011:
#line 3172 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = true;
					ai->lidx = (yyvsp[(2) - (5)].node);
					ai->uidx = (yyvsp[(4) - (5)].node);
					(yyval.node) = (PGNode *) ai;
				;}
    break;

  case 1012:
#line 3182 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 1013:
#line 3183 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1014:
#line 3187 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 1015:
#line 3188 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 1016:
#line 3192 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1017:
#line 3193 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 1020:
#line 3207 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 1021:
#line 3208 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1022:
#line 3212 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 1023:
#line 3213 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
    break;

  case 1024:
#line 3217 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(3) - (3)].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (3)].node);
					(yyval.target)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 1025:
#line 3233 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(2) - (2)].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (2)].node);
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 1026:
#line 3241 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (1)].node);
					(yyval.target)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 1027:
#line 3249 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnRef *n = makeNode(PGColumnRef);
					PGAStar *star = makeNode(PGAStar);
					n->fields = list_make1(star);
					n->location = (yylsp[(1) - (3)]);
					star->except_list = (yyvsp[(2) - (3)].list);
					star->replace_list = (yyvsp[(3) - (3)].list);

					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)n;
					(yyval.target)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 1028:
#line 3264 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnRef *n = makeNode(PGColumnRef);
					PGAStar *star = makeNode(PGAStar);
					n->fields = list_make1(star);
					n->location = (yylsp[(1) - (5)]);
					star->relation = (yyvsp[(1) - (5)].str);
					star->except_list = (yyvsp[(4) - (5)].list);
					star->replace_list = (yyvsp[(5) - (5)].list);

					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)n;
					(yyval.target)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 1029:
#line 3281 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 1030:
#line 3282 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(2) - (2)].str))); ;}
    break;

  case 1031:
#line 3285 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 1032:
#line 3286 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NULL; ;}
    break;

  case 1033:
#line 3289 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (3)].node), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 1034:
#line 3293 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 1035:
#line 3294 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 1036:
#line 3297 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 1037:
#line 3298 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(2) - (2)].list)); ;}
    break;

  case 1038:
#line 3299 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NULL; ;}
    break;

  case 1039:
#line 3309 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].range)); ;}
    break;

  case 1040:
#line 3310 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].range)); ;}
    break;

  case 1041:
#line 3322 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = makeRangeVar(NULL, (yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1042:
#line 3326 "third_party/libpg_query/grammar/statements/select.y"
    {
					check_qualified_name((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.range) = makeRangeVar(NULL, NULL, (yylsp[(1) - (2)]));
					switch (list_length((yyvsp[(2) - (2)].list)))
					{
						case 1:
							(yyval.range)->catalogname = NULL;
							(yyval.range)->schemaname = (yyvsp[(1) - (2)].str);
							(yyval.range)->relname = strVal(linitial((yyvsp[(2) - (2)].list)));
							break;
						case 2:
							(yyval.range)->catalogname = (yyvsp[(1) - (2)].str);
							(yyval.range)->schemaname = strVal(linitial((yyvsp[(2) - (2)].list)));
							(yyval.range)->relname = strVal(lsecond((yyvsp[(2) - (2)].list)));
							break;
						default:
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("improper qualified name (too many dotted names): %s",
											NameListToString(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)))),
									 parser_errposition((yylsp[(1) - (2)]))));
							break;
					}
				;}
    break;

  case 1043:
#line 3353 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 1044:
#line 3355 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 1045:
#line 3359 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1046:
#line 3361 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1047:
#line 3372 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 1048:
#line 3375 "third_party/libpg_query/grammar/statements/select.y"
    {
						(yyval.list) = check_func_name(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)),
											 yyscanner);
					;}
    break;

  case 1049:
#line 3386 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival), (yylsp[(1) - (1)]));
				;}
    break;

  case 1050:
#line 3390 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1051:
#line 3394 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = makeStringConst((yyvsp[(1) - (2)].str), (yylsp[(1) - (2)]));
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = makeStringConst((yyvsp[(1) - (2)].str), (yylsp[(1) - (2)]));
				;}
    break;

  case 1052:
#line 3406 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1053:
#line 3410 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* This is a bit constant per SQL99:
					 * Without Feature F511, "BIT data type",
					 * a <general literal> shall not be a
					 * <bit string literal> or a <hex string literal>.
					 */
					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1054:
#line 3419 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* generic type 'literal' syntax */
					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (2)].list));
					t->location = (yylsp[(1) - (2)]);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), t);
				;}
    break;

  case 1055:
#line 3426 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* generic syntax with a type modifier */
					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (7)].list));
					PGListCell *lc;

					/*
					 * We must use func_arg_list and opt_sort_clause in the
					 * production to avoid reduce/reduce conflicts, but we
					 * don't actually wish to allow PGNamedArgExpr in this
					 * context, ORDER BY, nor IGNORE NULLS.
					 */
					foreach(lc, (yyvsp[(3) - (7)].list))
					{
						PGNamedArgExpr *arg = (PGNamedArgExpr *) lfirst(lc);

						if (IsA(arg, PGNamedArgExpr))
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have parameter name"),
									 parser_errposition(arg->location)));
					}
					if ((yyvsp[(4) - (7)].list) != NIL)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have ORDER BY"),
									 parser_errposition((yylsp[(4) - (7)]))));
					if ((yyvsp[(5) - (7)].boolean) != false)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have IGNORE NULLS"),
									 parser_errposition((yylsp[(5) - (7)]))));


					t->typmods = (yyvsp[(3) - (7)].list);
					t->location = (yylsp[(1) - (7)]);
					(yyval.node) = makeStringConstCast((yyvsp[(7) - (7)].str), (yylsp[(7) - (7)]), t);
				;}
    break;

  case 1056:
#line 3464 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), (yyvsp[(1) - (2)].typnam));
				;}
    break;

  case 1057:
#line 3468 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(3) - (5)].node), (yylsp[(3) - (5)]), (yyvsp[(5) - (5)].list));
				;}
    break;

  case 1058:
#line 3472 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(2) - (3)].ival), (yylsp[(2) - (3)]), (yyvsp[(3) - (3)].list));
				;}
    break;

  case 1059:
#line 3476 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), (yyvsp[(3) - (3)].list));
				;}
    break;

  case 1060:
#line 3480 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBoolAConst(true, (yylsp[(1) - (1)]));
				;}
    break;

  case 1061:
#line 3484 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBoolAConst(false, (yylsp[(1) - (1)]));
				;}
    break;

  case 1062:
#line 3488 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
				;}
    break;

  case 1063:
#line 3493 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 1064:
#line 3494 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1065:
#line 3510 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1066:
#line 3511 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1067:
#line 3512 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1068:
#line 3515 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1069:
#line 3516 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1070:
#line 3522 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1071:
#line 3523 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1072:
#line 3524 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1073:
#line 3527 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1074:
#line 3528 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1075:
#line 3529 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1076:
#line 3532 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1077:
#line 3533 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1078:
#line 3534 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1079:
#line 3537 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 1080:
#line 3538 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)); ;}
    break;

  case 1081:
#line 3542 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(2) - (2)].str))); ;}
    break;

  case 1082:
#line 3544 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 1083:
#line 3548 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 1084:
#line 3549 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1086:
#line 3560 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1087:
#line 3561 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1088:
#line 3562 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1089:
#line 3563 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1090:
#line 3566 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1091:
#line 3567 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1092:
#line 8 "third_party/libpg_query/grammar/statements/prepare.y"
    {
					PGPrepareStmt *n = makeNode(PGPrepareStmt);
					n->name = (yyvsp[(2) - (5)].str);
					n->argtypes = (yyvsp[(3) - (5)].list);
					n->query = (yyvsp[(5) - (5)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1093:
#line 18 "third_party/libpg_query/grammar/statements/prepare.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 1094:
#line 19 "third_party/libpg_query/grammar/statements/prepare.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1099:
#line 8 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					/* ...but not both */
					n->schemaname = (yyvsp[(3) - (4)].str);
					n->schemaElts = (yyvsp[(4) - (4)].list);
					n->onconflict = PG_ERROR_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1100:
#line 17 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					/* ...but not here */
					n->schemaname = (yyvsp[(6) - (7)].str);
					if ((yyvsp[(7) - (7)].list) != NIL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("CREATE SCHEMA IF NOT EXISTS cannot include schema elements"),
								 parser_errposition((yylsp[(7) - (7)]))));
					n->schemaElts = (yyvsp[(7) - (7)].list);
					n->onconflict = PG_IGNORE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1101:
#line 35 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					if ((yyloc) < 0)			/* see comments for YYLLOC_DEFAULT */
						(yyloc) = (yylsp[(2) - (2)]);
					(yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node));
				;}
    break;

  case 1102:
#line 41 "third_party/libpg_query/grammar/statements/create_schema.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1107:
#line 11 "third_party/libpg_query/grammar/statements/index.y"
    {
					PGIndexStmt *n = makeNode(PGIndexStmt);
					n->unique = (yyvsp[(2) - (13)].boolean);
					n->concurrent = (yyvsp[(4) - (13)].boolean);
					n->idxname = (yyvsp[(5) - (13)].str);
					n->relation = (yyvsp[(7) - (13)].range);
					n->accessMethod = (yyvsp[(8) - (13)].str);
					n->indexParams = (yyvsp[(10) - (13)].list);
					n->options = (yyvsp[(12) - (13)].list);
					n->whereClause = (yyvsp[(13) - (13)].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;
					n->transformed = false;
					n->onconflict = PG_ERROR_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1108:
#line 36 "third_party/libpg_query/grammar/statements/index.y"
    {
					PGIndexStmt *n = makeNode(PGIndexStmt);
					n->unique = (yyvsp[(2) - (16)].boolean);
					n->concurrent = (yyvsp[(4) - (16)].boolean);
					n->idxname = (yyvsp[(8) - (16)].str);
					n->relation = (yyvsp[(10) - (16)].range);
					n->accessMethod = (yyvsp[(11) - (16)].str);
					n->indexParams = (yyvsp[(13) - (16)].list);
					n->options = (yyvsp[(15) - (16)].list);
					n->whereClause = (yyvsp[(16) - (16)].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;
					n->transformed = false;
					n->onconflict = PG_IGNORE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1109:
#line 62 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1110:
#line 66 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
    break;

  case 1111:
#line 67 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (char*) DEFAULT_INDEX_TYPE; ;}
    break;

  case 1112:
#line 72 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1113:
#line 73 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1114:
#line 78 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1115:
#line 79 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = NULL; ;}
    break;

  case 1116:
#line 83 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1117:
#line 84 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1118:
#line 89 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1119:
#line 90 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1120:
#line 8 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1121:
#line 17 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1122:
#line 26 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1123:
#line 35 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1124:
#line 44 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1125:
#line 53 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1126:
#line 6 "third_party/libpg_query/grammar/statements/checkpoint.y"
    {
					PGCheckPointStmt *n = makeNode(PGCheckPointStmt);
					n->force = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1127:
#line 12 "third_party/libpg_query/grammar/statements/checkpoint.y"
    {
					PGCheckPointStmt *n = makeNode(PGCheckPointStmt);
					n->force = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1128:
#line 8 "third_party/libpg_query/grammar/statements/export.y"
    {
					PGExportStmt *n = makeNode(PGExportStmt);
					n->filename = (yyvsp[(3) - (4)].str);
					n->options = NIL;
					if ((yyvsp[(4) - (4)].list)) {
						n->options = list_concat(n->options, (yyvsp[(4) - (4)].list));
					}
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1129:
#line 21 "third_party/libpg_query/grammar/statements/export.y"
    {
					PGImportStmt *n = makeNode(PGImportStmt);
					n->filename = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1130:
#line 10 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(2) - (2)].node);
					n->options = NIL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1131:
#line 17 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(4) - (4)].node);
					n->options = list_make1(makeDefElem("analyze", NULL, (yylsp[(2) - (4)])));
					if ((yyvsp[(3) - (4)].boolean))
						n->options = lappend(n->options,
											 makeDefElem("verbose", NULL, (yylsp[(3) - (4)])));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1132:
#line 27 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(3) - (3)].node);
					n->options = list_make1(makeDefElem("verbose", NULL, (yylsp[(2) - (3)])));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1133:
#line 34 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(5) - (5)].node);
					n->options = (yyvsp[(3) - (5)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1134:
#line 44 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1135:
#line 45 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1136:
#line 50 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 1137:
#line 51 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].value); ;}
    break;

  case 1138:
#line 52 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1144:
#line 65 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1145:
#line 66 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1146:
#line 67 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1147:
#line 72 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1148:
#line 73 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1149:
#line 79 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 1150:
#line 83 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 1151:
#line 90 "third_party/libpg_query/grammar/statements/explain.y"
    {;}
    break;

  case 1152:
#line 91 "third_party/libpg_query/grammar/statements/explain.y"
    {;}
    break;

  case 1153:
#line 96 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "true"; ;}
    break;

  case 1154:
#line 97 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "false"; ;}
    break;

  case 1155:
#line 98 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "on"; ;}
    break;

  case 1156:
#line 104 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1157:
#line 110 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 1158:
#line 117 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1159:
#line 118 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "analyze"; ;}
    break;

  case 1160:
#line 11 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(2) - (2)].vsetstmt);
					n->scope = VAR_SET_SCOPE_DEFAULT;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1161:
#line 17 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->scope = VAR_SET_SCOPE_LOCAL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1162:
#line 23 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->scope = VAR_SET_SCOPE_SESSION;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1163:
#line 29 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->scope = VAR_SET_SCOPE_GLOBAL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1164:
#line 38 "third_party/libpg_query/grammar/statements/variable_set.y"
    {(yyval.vsetstmt) = (yyvsp[(1) - (1)].vsetstmt);;}
    break;

  case 1165:
#line 40 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_CURRENT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1166:
#line 48 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (char*) "timezone";
					if ((yyvsp[(3) - (3)].node) != NULL)
						n->args = list_make1((yyvsp[(3) - (3)].node));
					else
						n->kind = VAR_SET_DEFAULT;
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1167:
#line 59 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (char*) "search_path";
					n->args = list_make1(makeStringConst((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)])));
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1168:
#line 71 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[(1) - (3)].str);
					n->args = (yyvsp[(3) - (3)].list);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1169:
#line 79 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[(1) - (3)].str);
					n->args = (yyvsp[(3) - (3)].list);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1170:
#line 87 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1171:
#line 94 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1172:
#line 104 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)])); ;}
    break;

  case 1173:
#line 106 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
    break;

  case 1174:
#line 112 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1175:
#line 116 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1176:
#line 120 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGTypeName *t = (yyvsp[(1) - (3)].typnam);
					if ((yyvsp[(3) - (3)].list) != NIL)
					{
						PGAConst *n = (PGAConst *) linitial((yyvsp[(3) - (3)].list));
						if ((n->val.val.ival & ~(INTERVAL_MASK(HOUR) | INTERVAL_MASK(MINUTE))) != 0)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("time zone interval must be HOUR or HOUR TO MINUTE"),
									 parser_errposition((yylsp[(3) - (3)]))));
					}
					t->typmods = (yyvsp[(3) - (3)].list);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), t);
				;}
    break;

  case 1177:
#line 135 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGTypeName *t = (yyvsp[(1) - (5)].typnam);
					t->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.node) = makeStringConstCast((yyvsp[(5) - (5)].str), (yylsp[(5) - (5)]), t);
				;}
    break;

  case 1178:
#line 141 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
    break;

  case 1179:
#line 142 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1180:
#line 143 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1181:
#line 147 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 1182:
#line 148 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 1183:
#line 8 "third_party/libpg_query/grammar/statements/load.y"
    {
					PGLoadStmt *n = makeNode(PGLoadStmt);
					n->filename = (yyvsp[(2) - (2)].str);
					n->load_type = PG_LOAD_TYPE_LOAD;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1184:
#line 14 "third_party/libpg_query/grammar/statements/load.y"
    {
                    PGLoadStmt *n = makeNode(PGLoadStmt);
                    n->filename = (yyvsp[(2) - (2)].str);
                    n->load_type = PG_LOAD_TYPE_INSTALL;
                    (yyval.node) = (PGNode *)n;
				;}
    break;

  case 1185:
#line 20 "third_party/libpg_query/grammar/statements/load.y"
    {
                      PGLoadStmt *n = makeNode(PGLoadStmt);
                      n->filename = (yyvsp[(3) - (3)].str);
                      n->load_type = PG_LOAD_TYPE_FORCE_INSTALL;
                      (yyval.node) = (PGNode *)n;
                ;}
    break;

  case 1186:
#line 28 "third_party/libpg_query/grammar/statements/load.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1187:
#line 29 "third_party/libpg_query/grammar/statements/load.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1188:
#line 9 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (4)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (4)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (4)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1189:
#line 23 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (5)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (5)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (5)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = (yyvsp[(5) - (5)].range);
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1190:
#line 37 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = (PGVacuumStmt *) (yyvsp[(5) - (5)].node);
					n->options |= PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (5)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (5)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (5)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1191:
#line 49 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM | (yyvsp[(3) - (4)].ival);
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1192:
#line 57 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM | (yyvsp[(3) - (6)].ival);
					n->relation = (yyvsp[(5) - (6)].range);
					n->va_cols = (yyvsp[(6) - (6)].list);
					if (n->va_cols != NIL)	/* implies analyze */
						n->options |= PG_VACOPT_ANALYZE;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1193:
#line 70 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_ANALYZE; ;}
    break;

  case 1194:
#line 71 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_VERBOSE; ;}
    break;

  case 1195:
#line 72 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_FREEZE; ;}
    break;

  case 1196:
#line 73 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_FULL; ;}
    break;

  case 1197:
#line 75 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					if (strcmp((yyvsp[(1) - (1)].str), "disable_page_skipping") == 0)
						(yyval.ival) = PG_VACOPT_DISABLE_PAGE_SKIPPING;
					else
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
							 errmsg("unrecognized VACUUM option \"%s\"", (yyvsp[(1) - (1)].str)),
									 parser_errposition((yylsp[(1) - (1)]))));
				;}
    break;

  case 1198:
#line 87 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1199:
#line 88 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1200:
#line 93 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 1201:
#line 94 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
    break;

  case 1202:
#line 98 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1203:
#line 99 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1204:
#line 9 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGDeleteStmt *n = makeNode(PGDeleteStmt);
					n->relation = (yyvsp[(4) - (7)].range);
					n->usingClause = (yyvsp[(5) - (7)].list);
					n->whereClause = (yyvsp[(6) - (7)].node);
					n->returningList = (yyvsp[(7) - (7)].list);
					n->withClause = (yyvsp[(1) - (7)].with);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1205:
#line 22 "third_party/libpg_query/grammar/statements/delete.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
				;}
    break;

  case 1206:
#line 26 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGAlias *alias = makeNode(PGAlias);
					alias->aliasname = (yyvsp[(2) - (2)].str);
					(yyvsp[(1) - (2)].range)->alias = alias;
					(yyval.range) = (yyvsp[(1) - (2)].range);
				;}
    break;

  case 1207:
#line 33 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGAlias *alias = makeNode(PGAlias);
					alias->aliasname = (yyvsp[(3) - (3)].str);
					(yyvsp[(1) - (3)].range)->alias = alias;
					(yyval.range) = (yyvsp[(1) - (3)].range);
				;}
    break;

  case 1208:
#line 43 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 1209:
#line 44 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1210:
#line 50 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1211:
#line 51 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1212:
#line 10 "third_party/libpg_query/grammar/statements/analyze.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_ANALYZE;
					if ((yyvsp[(2) - (2)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1213:
#line 20 "third_party/libpg_query/grammar/statements/analyze.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_ANALYZE;
					if ((yyvsp[(2) - (4)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = (yyvsp[(3) - (4)].range);
					n->va_cols = (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1214:
#line 2 "third_party/libpg_query/grammar/statements/variable_reset.y"
    { (yyval.node) = (PGNode *) (yyvsp[(2) - (2)].vsetstmt); ;}
    break;

  case 1215:
#line 8 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (yyvsp[(1) - (1)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1216:
#line 15 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET_ALL;
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1217:
#line 24 "third_party/libpg_query/grammar/statements/variable_reset.y"
    { (yyval.vsetstmt) = (yyvsp[(1) - (1)].vsetstmt); ;}
    break;

  case 1218:
#line 26 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (char*) "timezone";
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1219:
#line 33 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (char*) "transaction_isolation";
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1220:
#line 3 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowSelectStmt *n = makeNode(PGVariableShowSelectStmt);
				n->stmt = (yyvsp[(2) - (2)].node);
				n->name = (char*) "select";
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1221:
#line 10 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowSelectStmt *n = makeNode(PGVariableShowSelectStmt);
				n->stmt = (yyvsp[(2) - (2)].node);
				n->name = (char*) "select";
				n->is_summary = 1;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1222:
#line 18 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (yyvsp[(2) - (2)].str);
				n->is_summary = 1;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1223:
#line 25 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (yyvsp[(2) - (2)].str);
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1224:
#line 32 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (char*) "timezone";
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1225:
#line 39 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (char*) "transaction_isolation";
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1226:
#line 46 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (char*) "all";
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1229:
#line 57 "third_party/libpg_query/grammar/statements/variable_show.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1230:
#line 59 "third_party/libpg_query/grammar/statements/variable_show.y"
    { (yyval.str) = psprintf("%s.%s", (yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str)); ;}
    break;

  case 1231:
#line 7 "third_party/libpg_query/grammar/statements/call.y"
    {
					PGCallStmt *n = makeNode(PGCallStmt);
					n->func = (yyvsp[(2) - (2)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1232:
#line 10 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(4) - (9)].range);
					n->view->relpersistence = (yyvsp[(2) - (9)].ival);
					n->aliases = (yyvsp[(5) - (9)].list);
					n->query = (yyvsp[(8) - (9)].node);
					n->onconflict = PG_ERROR_ON_CONFLICT;
					n->options = (yyvsp[(6) - (9)].list);
					n->withCheckOption = (yyvsp[(9) - (9)].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1233:
#line 23 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(6) - (11)].range);
					n->view->relpersistence = (yyvsp[(4) - (11)].ival);
					n->aliases = (yyvsp[(7) - (11)].list);
					n->query = (yyvsp[(10) - (11)].node);
					n->onconflict = PG_REPLACE_ON_CONFLICT;
					n->options = (yyvsp[(8) - (11)].list);
					n->withCheckOption = (yyvsp[(11) - (11)].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1234:
#line 36 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(5) - (12)].range);
					n->view->relpersistence = (yyvsp[(2) - (12)].ival);
					n->aliases = (yyvsp[(7) - (12)].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[(11) - (12)].node));
					n->onconflict = PG_ERROR_ON_CONFLICT;
					n->options = (yyvsp[(9) - (12)].list);
					n->withCheckOption = (yyvsp[(12) - (12)].viewcheckoption);
					if (n->withCheckOption != PG_NO_CHECK_OPTION)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[(12) - (12)]))));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1235:
#line 54 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(7) - (14)].range);
					n->view->relpersistence = (yyvsp[(4) - (14)].ival);
					n->aliases = (yyvsp[(9) - (14)].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[(13) - (14)].node));
					n->onconflict = PG_REPLACE_ON_CONFLICT;
					n->options = (yyvsp[(11) - (14)].list);
					n->withCheckOption = (yyvsp[(14) - (14)].viewcheckoption);
					if (n->withCheckOption != PG_NO_CHECK_OPTION)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[(14) - (14)]))));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1236:
#line 74 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; ;}
    break;

  case 1237:
#line 75 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; ;}
    break;

  case 1238:
#line 76 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = PG_LOCAL_CHECK_OPTION; ;}
    break;

  case 1239:
#line 77 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = PG_NO_CHECK_OPTION; ;}
    break;

  case 1240:
#line 12 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(6) - (7)].node);
					ctas->into = (yyvsp[(4) - (7)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_ERROR_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(4) - (7)].into)->rel->relpersistence = (yyvsp[(2) - (7)].ival);
					(yyvsp[(4) - (7)].into)->skipData = !((yyvsp[(7) - (7)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1241:
#line 25 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(9) - (10)].node);
					ctas->into = (yyvsp[(7) - (10)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_IGNORE_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(7) - (10)].into)->rel->relpersistence = (yyvsp[(2) - (10)].ival);
					(yyvsp[(7) - (10)].into)->skipData = !((yyvsp[(10) - (10)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1242:
#line 38 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(8) - (9)].node);
					ctas->into = (yyvsp[(6) - (9)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_REPLACE_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(6) - (9)].into)->rel->relpersistence = (yyvsp[(4) - (9)].ival);
					(yyvsp[(6) - (9)].into)->skipData = !((yyvsp[(9) - (9)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1243:
#line 54 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1244:
#line 55 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1245:
#line 56 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1246:
#line 62 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					(yyval.into) = makeNode(PGIntoClause);
					(yyval.into)->rel = (yyvsp[(1) - (4)].range);
					(yyval.into)->colNames = (yyvsp[(2) - (4)].list);
					(yyval.into)->options = (yyvsp[(3) - (4)].list);
					(yyval.into)->onCommit = (yyvsp[(4) - (4)].oncommit);
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;		/* might get changed later */
				;}
    break;


/* Line 1267 of yacc.c.  */
#line 24791 "third_party/libpg_query/grammar/grammar_out.cpp"
      default: break;
    }
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;
  *++yylsp = yyloc;

  /* Now `shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*------------------------------------.
| yyerrlab -- here on detecting error |
`------------------------------------*/
yyerrlab:
  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (&yylloc, yyscanner, YY_("syntax error"));
#else
      {
	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
	  {
	    YYSIZE_T yyalloc = 2 * yysize;
	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
	    if (yymsg != yymsgbuf)
	      YYSTACK_FREE (yymsg);
	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
	    if (yymsg)
	      yymsg_alloc = yyalloc;
	    else
	      {
		yymsg = yymsgbuf;
		yymsg_alloc = sizeof yymsgbuf;
	      }
	  }

	if (0 < yysize && yysize <= yymsg_alloc)
	  {
	    (void) yysyntax_error (yymsg, yystate, yychar);
	    yyerror (&yylloc, yyscanner, yymsg);
	  }
	else
	  {
	    yyerror (&yylloc, yyscanner, YY_("syntax error"));
	    if (yysize != 0)
	      goto yyexhaustedlab;
	  }
      }
#endif
    }

  yyerror_range[0] = yylloc;

  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse look-ahead token after an
	 error, discard it.  */

      if (yychar <= YYEOF)
	{
	  /* Return failure if at end of input.  */
	  if (yychar == YYEOF)
	    YYABORT;
	}
      else
	{
	  yydestruct ("Error: discarding",
		      yytoken, &yylval, &yylloc, yyscanner);
	  yychar = YYEMPTY;
	}
    }

  /* Else will try to reuse look-ahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  yyerror_range[0] = yylsp[1-yylen];
  /* Do not reclaim the symbols of the rule which action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;	/* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (yyn != YYPACT_NINF)
	{
	  yyn += YYTERROR;
	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
	    {
	      yyn = yytable[yyn];
	      if (0 < yyn)
		break;
	    }
	}

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
	YYABORT;

      yyerror_range[0] = *yylsp;
      yydestruct ("Error: popping",
		  yystos[yystate], yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  *++yyvsp = yylval;

  yyerror_range[1] = yylloc;
  /* Using YYLLOC is tempting, but would change the location of
     the look-ahead.  YYLOC is available though.  */
  YYLLOC_DEFAULT (yyloc, (yyerror_range - 1), 2);
  *++yylsp = yyloc;

  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#ifndef yyoverflow
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (&yylloc, yyscanner, YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEOF && yychar != YYEMPTY)
     yydestruct ("Cleanup: discarding lookahead",
		 yytoken, &yylval, &yylloc, yyscanner);
  /* Do not reclaim the symbols of the rule which action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
		  yystos[*yyssp], yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  /* Make sure YYID is used.  */
  return YYID (yyresult);
}


#line 83 "third_party/libpg_query/grammar/statements/create_as.y"


#line 1 "third_party/libpg_query/grammar/grammar.cpp"
/*
 * The signature of this function is required by bison.  However, we
 * ignore the passed yylloc and instead use the last token position
 * available from the scanner.
 */
static void
base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner, const char *msg)
{
	parser_yyerror(msg);
}

static PGRawStmt *
makeRawStmt(PGNode *stmt, int stmt_location)
{
	PGRawStmt    *rs = makeNode(PGRawStmt);

	rs->stmt = stmt;
	rs->stmt_location = stmt_location;
	rs->stmt_len = 0;			/* might get changed later */
	return rs;
}

/* Adjust a PGRawStmt to reflect that it doesn't run to the end of the string */
static void
updateRawStmtEnd(PGRawStmt *rs, int end_location)
{
	/*
	 * If we already set the length, don't change it.  This is for situations
	 * like "select foo ;; select bar" where the same statement will be last
	 * in the string for more than one semicolon.
	 */
	if (rs->stmt_len > 0)
		return;

	/* OK, update length of PGRawStmt */
	rs->stmt_len = end_location - rs->stmt_location;
}

static PGNode *
makeColumnRef(char *colname, PGList *indirection,
			  int location, core_yyscan_t yyscanner)
{
	/*
	 * Generate a PGColumnRef node, with an PGAIndirection node added if there
	 * is any subscripting in the specified indirection list.  However,
	 * any field selection at the start of the indirection list must be
	 * transposed into the "fields" part of the PGColumnRef node.
	 */
	PGColumnRef  *c = makeNode(PGColumnRef);
	int		nfields = 0;
	PGListCell *l;

	c->location = location;
	foreach(l, indirection)
	{
		if (IsA(lfirst(l), PGAIndices))
		{
			PGAIndirection *i = makeNode(PGAIndirection);

			if (nfields == 0)
			{
				/* easy case - all indirection goes to PGAIndirection */
				c->fields = list_make1(makeString(colname));
				i->indirection = check_indirection(indirection, yyscanner);
			}
			else
			{
				/* got to split the list in two */
				i->indirection = check_indirection(list_copy_tail(indirection,
																  nfields),
												   yyscanner);
				indirection = list_truncate(indirection, nfields);
				c->fields = lcons(makeString(colname), indirection);
			}
			i->arg = (PGNode *) c;
			return (PGNode *) i;
		}
		else if (IsA(lfirst(l), PGAStar))
		{
			/* We only allow '*' at the end of a PGColumnRef */
			if (lnext(l) != NULL)
				parser_yyerror("improper use of \"*\"");
		}
		nfields++;
	}
	/* No subscripting, so all indirection gets added to field list */
	c->fields = lcons(makeString(colname), indirection);
	return (PGNode *) c;
}

static PGNode *
makeTypeCast(PGNode *arg, PGTypeName *tpname, int trycast, int location)
{
	PGTypeCast *n = makeNode(PGTypeCast);
	n->arg = arg;
	n->typeName = tpname;
	n->tryCast = trycast;
	n->location = location;
	return (PGNode *) n;
}

static PGNode *
makeStringConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGString;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeStringConstCast(char *str, int location, PGTypeName *tpname)
{
	PGNode *s = makeStringConst(str, location);

	return makeTypeCast(s, tpname, 0, -1);
}

static PGNode *
makeIntervalNode(char *str, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGString;
	n->sval = str;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;

}

static PGNode *
makeIntervalNode(int val, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGInteger;
	n->ival = val;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;
}

static PGNode *
makeIntervalNode(PGNode *arg, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGAExpr;
	n->eval = arg;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;
}

static PGNode *
makeSampleSize(PGValue *sample_size, bool is_percentage) {
	PGSampleSize *n = makeNode(PGSampleSize);

	n->sample_size = *sample_size;
	n->is_percentage = is_percentage;

	return (PGNode *)n;
}

static PGNode *
makeSampleOptions(PGNode *sample_size, char *method, int seed, int location) {
	PGSampleOptions *n = makeNode(PGSampleOptions);

	n->sample_size = sample_size;
	n->method = method;
	n->seed = seed;
	n->location = location;

	return (PGNode *)n;
}

/* makeLimitPercent()
 * Make limit percent node
 */
static PGNode *
makeLimitPercent(PGNode *limit_percent) {
	PGLimitPercent *n = makeNode(PGLimitPercent);

	n->limit_percent = limit_percent;

	return (PGNode *)n;
}

static PGNode *
makeIntConst(int val, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGInteger;
	n->val.val.ival = val;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeFloatConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGFloat;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeBitStringConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGBitString;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeNullAConst(int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGNull;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeAConst(PGValue *v, int location)
{
	PGNode *n;

	switch (v->type)
	{
		case T_PGFloat:
			n = makeFloatConst(v->val.str, location);
			break;

		case T_PGInteger:
			n = makeIntConst(v->val.ival, location);
			break;

		case T_PGString:
		default:
			n = makeStringConst(v->val.str, location);
			break;
	}

	return n;
}

/* makeBoolAConst()
 * Create an PGAConst string node and put it inside a boolean cast.
 */
static PGNode *
makeBoolAConst(bool state, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGString;
	n->val.val.str = (state ? (char*) "t" : (char*) "f");
	n->location = location;

	return makeTypeCast((PGNode *)n, SystemTypeName("bool"), 0, -1);
}

/* check_qualified_name --- check the result of qualified_name production
 *
 * It's easiest to let the grammar production for qualified_name allow
 * subscripts and '*', which we then must reject here.
 */
static void
check_qualified_name(PGList *names, core_yyscan_t yyscanner)
{
	PGListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), PGString))
			parser_yyerror("syntax error");
	}
}

/* check_func_name --- check the result of func_name production
 *
 * It's easiest to let the grammar production for func_name allow subscripts
 * and '*', which we then must reject here.
 */
static PGList *
check_func_name(PGList *names, core_yyscan_t yyscanner)
{
	PGListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), PGString))
			parser_yyerror("syntax error");
	}
	return names;
}

/* check_indirection --- check the result of indirection production
 *
 * We only allow '*' at the end of the list, but it's hard to enforce that
 * in the grammar, so do it here.
 */
static PGList *
check_indirection(PGList *indirection, core_yyscan_t yyscanner)
{
	PGListCell *l;

	foreach(l, indirection)
	{
		if (IsA(lfirst(l), PGAStar))
		{
			if (lnext(l) != NULL)
				parser_yyerror("improper use of \"*\"");
		}
	}
	return indirection;
}

/* makeParamRef
 * Creates a new PGParamRef node
 */
static PGNode* makeParamRef(int number, int location)
{
	PGParamRef *p = makeNode(PGParamRef);
	p->number = number;
	p->location = location;
	return (PGNode *) p;
}


/* insertSelectOptions()
 * Insert ORDER BY, etc into an already-constructed SelectStmt.
 *
 * This routine is just to avoid duplicating code in PGSelectStmt productions.
 */
static void
insertSelectOptions(PGSelectStmt *stmt,
					PGList *sortClause, PGList *lockingClause,
					PGNode *limitOffset, PGNode *limitCount,
					PGWithClause *withClause,
					core_yyscan_t yyscanner)
{
	Assert(IsA(stmt, PGSelectStmt));

	/*
	 * Tests here are to reject constructs like
	 *	(SELECT foo ORDER BY bar) ORDER BY baz
	 */
	if (sortClause)
	{
		if (stmt->sortClause)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple ORDER BY clauses not allowed"),
					 parser_errposition(exprLocation((PGNode *) sortClause))));
		stmt->sortClause = sortClause;
	}
	/* We can handle multiple locking clauses, though */
	stmt->lockingClause = list_concat(stmt->lockingClause, lockingClause);
	if (limitOffset)
	{
		if (stmt->limitOffset)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple OFFSET clauses not allowed"),
					 parser_errposition(exprLocation(limitOffset))));
		stmt->limitOffset = limitOffset;
	}
	if (limitCount)
	{
		if (stmt->limitCount)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple LIMIT clauses not allowed"),
					 parser_errposition(exprLocation(limitCount))));
		stmt->limitCount = limitCount;
	}
	if (withClause)
	{
		if (stmt->withClause)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple WITH clauses not allowed"),
					 parser_errposition(exprLocation((PGNode *) withClause))));
		stmt->withClause = withClause;
	}
}

static PGNode *
makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg)
{
	PGSelectStmt *n = makeNode(PGSelectStmt);

	n->op = op;
	n->all = all;
	n->larg = (PGSelectStmt *) larg;
	n->rarg = (PGSelectStmt *) rarg;
	return (PGNode *) n;
}

/* SystemFuncName()
 * Build a properly-qualified reference to a built-in function.
 */
PGList *
SystemFuncName(const char *name)
{
	return list_make2(makeString(DEFAULT_SCHEMA), makeString(name));
}

/* SystemTypeName()
 * Build a properly-qualified reference to a built-in type.
 *
 * typmod is defaulted, but may be changed afterwards by caller.
 * Likewise for the location.
 */
PGTypeName *
SystemTypeName(const char *name)
{
	return makeTypeNameFromNameList(list_make2(makeString(DEFAULT_SCHEMA),
											   makeString(name)));
}

/* doNegate()
 * Handle negation of a numeric constant.
 *
 * Formerly, we did this here because the optimizer couldn't cope with
 * indexquals that looked like "var = -4" --- it wants "var = const"
 * and a unary minus operator applied to a constant didn't qualify.
 * As of Postgres 7.0, that problem doesn't exist anymore because there
 * is a constant-subexpression simplifier in the optimizer.  However,
 * there's still a good reason for doing this here, which is that we can
 * postpone committing to a particular internal representation for simple
 * negative constants.	It's better to leave "-123.456" in string form
 * until we know what the desired type is.
 */
static PGNode *
doNegate(PGNode *n, int location)
{
	if (IsA(n, PGAConst))
	{
		PGAConst *con = (PGAConst *)n;

		/* report the constant's location as that of the '-' sign */
		con->location = location;

		if (con->val.type == T_PGInteger)
		{
			con->val.val.ival = -con->val.val.ival;
			return n;
		}
		if (con->val.type == T_PGFloat)
		{
			doNegateFloat(&con->val);
			return n;
		}
	}

	return (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", NULL, n, location);
}

static void
doNegateFloat(PGValue *v)
{
	char   *oldval = v->val.str;

	Assert(IsA(v, PGFloat));
	if (*oldval == '+')
		oldval++;
	if (*oldval == '-')
		v->val.str = oldval+1;	/* just strip the '-' */
	else
		v->val.str = psprintf("-%s", oldval);
}

static PGNode *
makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location)
{
	PGNode	   *lexp = lexpr;

	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
	while (IsA(lexp, PGAExpr) &&
		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
		lexp = ((PGAExpr *) lexp)->lexpr;
	/* Flatten "a AND b AND c ..." to a single PGBoolExpr on sight */
	if (IsA(lexp, PGBoolExpr))
	{
		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;

		if (blexpr->boolop == PG_AND_EXPR)
		{
			blexpr->args = lappend(blexpr->args, rexpr);
			return (PGNode *) blexpr;
		}
	}
	return (PGNode *) makeBoolExpr(PG_AND_EXPR, list_make2(lexpr, rexpr), location);
}

static PGNode *
makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location)
{
	PGNode	   *lexp = lexpr;

	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
	while (IsA(lexp, PGAExpr) &&
		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
		lexp = ((PGAExpr *) lexp)->lexpr;
	/* Flatten "a OR b OR c ..." to a single PGBoolExpr on sight */
	if (IsA(lexp, PGBoolExpr))
	{
		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;

		if (blexpr->boolop == PG_OR_EXPR)
		{
			blexpr->args = lappend(blexpr->args, rexpr);
			return (PGNode *) blexpr;
		}
	}
	return (PGNode *) makeBoolExpr(PG_OR_EXPR, list_make2(lexpr, rexpr), location);
}

static PGNode *
makeNotExpr(PGNode *expr, int location)
{
	return (PGNode *) makeBoolExpr(PG_NOT_EXPR, list_make1(expr), location);
}

static PGNode *
makeSQLValueFunction(PGSQLValueFunctionOp op, int32_t typmod, int location)
{
	PGSQLValueFunction *svf = makeNode(PGSQLValueFunction);

	svf->op = op;
	/* svf->type will be filled during parse analysis */
	svf->typmod = typmod;
	svf->location = location;
	return (PGNode *) svf;
}

/* Separate PGConstraint nodes from COLLATE clauses in a */
static void
SplitColQualList(PGList *qualList,
				 PGList **constraintList, PGCollateClause **collClause,
				 core_yyscan_t yyscanner)
{
	PGListCell   *cell;
	PGListCell   *prev;
	PGListCell   *next;

	*collClause = NULL;
	prev = NULL;
	for (cell = list_head(qualList); cell; cell = next)
	{
		PGNode   *n = (PGNode *) lfirst(cell);

		next = lnext(cell);
		if (IsA(n, PGConstraint))
		{
			/* keep it in list */
			prev = cell;
			continue;
		}
		if (IsA(n, PGCollateClause))
		{
			PGCollateClause *c = (PGCollateClause *) n;

			if (*collClause)
				ereport(ERROR,
						(errcode(PG_ERRCODE_SYNTAX_ERROR),
						 errmsg("multiple COLLATE clauses not allowed"),
						 parser_errposition(c->location)));
			*collClause = c;
		}
		else
			elog(ERROR, "unexpected node type %d", (int) n->type);
		/* remove non-Constraint nodes from qualList */
		qualList = list_delete_cell(qualList, cell, prev);
	}
	*constraintList = qualList;
}

/*
 * Process result of ConstraintAttributeSpec, and set appropriate bool flags
 * in the output command node.  Pass NULL for any flags the particular
 * command doesn't support.
 */
static void
processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner)
{
	/* defaults */
	if (deferrable)
		*deferrable = false;
	if (initdeferred)
		*initdeferred = false;
	if (not_valid)
		*not_valid = false;

	if (cas_bits & (CAS_DEFERRABLE | CAS_INITIALLY_DEFERRED))
	{
		if (deferrable)
			*deferrable = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_INITIALLY_DEFERRED)
	{
		if (initdeferred)
			*initdeferred = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_NOT_VALID)
	{
		if (not_valid)
			*not_valid = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NOT VALID",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_NO_INHERIT)
	{
		if (no_inherit)
			*no_inherit = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NO INHERIT",
							constrType),
					 parser_errposition(location)));
	}
}

/*----------
 * Recursive view transformation
 *
 * Convert
 *
 *     CREATE RECURSIVE VIEW relname (aliases) AS query
 *
 * to
 *
 *     CREATE VIEW relname (aliases) AS
 *         WITH RECURSIVE relname (aliases) AS (query)
 *         SELECT aliases FROM relname
 *
 * Actually, just the WITH ... part, which is then inserted into the original
 * view as the query.
 * ----------
 */
static PGNode *
makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query)
{
	PGSelectStmt *s = makeNode(PGSelectStmt);
	PGWithClause *w = makeNode(PGWithClause);
	PGCommonTableExpr *cte = makeNode(PGCommonTableExpr);
	PGList	   *tl = NIL;
	PGListCell   *lc;

	/* create common table expression */
	cte->ctename = relname;
	cte->aliascolnames = aliases;
	cte->ctequery = query;
	cte->location = -1;

	/* create WITH clause and attach CTE */
	w->recursive = true;
	w->ctes = list_make1(cte);
	w->location = -1;

	/* create target list for the new SELECT from the alias list of the
	 * recursive view specification */
	foreach (lc, aliases)
	{
		PGResTarget *rt = makeNode(PGResTarget);

		rt->name = NULL;
		rt->indirection = NIL;
		rt->val = makeColumnRef(strVal(lfirst(lc)), NIL, -1, 0);
		rt->location = -1;

		tl = lappend(tl, rt);
	}

	/* create new SELECT combining WITH clause, target list, and fake FROM
	 * clause */
	s->withClause = w;
	s->targetList = tl;
	s->fromClause = list_make1(makeRangeVar(NULL, relname, -1));

	return (PGNode *) s;
}

/* parser_init()
 * Initialize to parse one query string
 */
void
parser_init(base_yy_extra_type *yyext)
{
	yyext->parsetree = NIL;		/* in case grammar forgets to set it */
}

#undef yyparse
#undef yylex
#undef yyerror
#undef yylval
#undef yychar
#undef yydebug
#undef yynerrs
#undef yylloc

} // namespace duckdb_libpgquery

