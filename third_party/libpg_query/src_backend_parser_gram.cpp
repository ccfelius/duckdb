/* A Bison parser, made by GNU Bison 2.3.  */

/* Skeleton implementation for Bison's Yacc-like parsers in C

   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
   Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street, Fifth Floor,
   Boston, MA 02110-1301, USA.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "2.3"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Using locations.  */
#define YYLSP_NEEDED 1

/* Substitute the variable and function names.  */
#define yyparse base_yyparse
#define yylex   base_yylex
#define yyerror base_yyerror
#define yylval  base_yylval
#define yychar  base_yychar
#define yydebug base_yydebug
#define yynerrs base_yynerrs
#define yylloc base_yylloc

/* Tokens.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
   /* Put the tokens into the symbol table, so that GDB and other debuggers
      know about them.  */
   enum yytokentype {
     IDENT = 258,
     FCONST = 259,
     SCONST = 260,
     BCONST = 261,
     XCONST = 262,
     Op = 263,
     ICONST = 264,
     PARAM = 265,
     TYPECAST = 266,
     DOT_DOT = 267,
     COLON_EQUALS = 268,
     EQUALS_GREATER = 269,
     LAMBDA_ARROW = 270,
     LESS_EQUALS = 271,
     GREATER_EQUALS = 272,
     NOT_EQUALS = 273,
     ABORT_P = 274,
     ABSOLUTE_P = 275,
     ACCESS = 276,
     ACTION = 277,
     ADD_P = 278,
     ADMIN = 279,
     AFTER = 280,
     AGGREGATE = 281,
     ALL = 282,
     ALSO = 283,
     ALTER = 284,
     ALWAYS = 285,
     ANALYSE = 286,
     ANALYZE = 287,
     AND = 288,
     ANY = 289,
     ARRAY = 290,
     AS = 291,
     ASC_P = 292,
     ASSERTION = 293,
     ASSIGNMENT = 294,
     ASYMMETRIC = 295,
     AT = 296,
     ATTACH = 297,
     ATTRIBUTE = 298,
     AUTHORIZATION = 299,
     BACKWARD = 300,
     BEFORE = 301,
     BEGIN_P = 302,
     BETWEEN = 303,
     BIGINT = 304,
     BINARY = 305,
     BIT = 306,
     BOOLEAN_P = 307,
     BOTH = 308,
     BY = 309,
     CACHE = 310,
     CALL_P = 311,
     CALLED = 312,
     CASCADE = 313,
     CASCADED = 314,
     CASE = 315,
     CAST = 316,
     CATALOG_P = 317,
     CHAIN = 318,
     CHAR_P = 319,
     CHARACTER = 320,
     CHARACTERISTICS = 321,
     CHECK_P = 322,
     CHECKPOINT = 323,
     CLASS = 324,
     CLOSE = 325,
     CLUSTER = 326,
     COALESCE = 327,
     COLLATE = 328,
     COLLATION = 329,
     COLUMN = 330,
     COLUMNS = 331,
     COMMENT = 332,
     COMMENTS = 333,
     COMMIT = 334,
     COMMITTED = 335,
     CONCURRENTLY = 336,
     CONFIGURATION = 337,
     CONFLICT = 338,
     CONNECTION = 339,
     CONSTRAINT = 340,
     CONSTRAINTS = 341,
     CONTENT_P = 342,
     CONTINUE_P = 343,
     CONVERSION_P = 344,
     COPY = 345,
     COST = 346,
     CREATE_P = 347,
     CROSS = 348,
     CSV = 349,
     CUBE = 350,
     CURRENT_P = 351,
     CURRENT_CATALOG = 352,
     CURRENT_DATE = 353,
     CURRENT_ROLE = 354,
     CURRENT_SCHEMA = 355,
     CURRENT_TIME = 356,
     CURRENT_TIMESTAMP = 357,
     CURRENT_USER = 358,
     CURSOR = 359,
     CYCLE = 360,
     DATA_P = 361,
     DATABASE = 362,
     DAY_P = 363,
     DAYS_P = 364,
     DEALLOCATE = 365,
     DEC = 366,
     DECIMAL_P = 367,
     DECLARE = 368,
     DEFAULT = 369,
     DEFAULTS = 370,
     DEFERRABLE = 371,
     DEFERRED = 372,
     DEFINER = 373,
     DELETE_P = 374,
     DELIMITER = 375,
     DELIMITERS = 376,
     DEPENDS = 377,
     DESC_P = 378,
     DESCRIBE = 379,
     DETACH = 380,
     DICTIONARY = 381,
     DISABLE_P = 382,
     DISCARD = 383,
     DISTINCT = 384,
     DO = 385,
     DOCUMENT_P = 386,
     DOMAIN_P = 387,
     DOUBLE_P = 388,
     DROP = 389,
     EACH = 390,
     ELSE = 391,
     ENABLE_P = 392,
     ENCODING = 393,
     ENCRYPTED = 394,
     END_P = 395,
     ENUM_P = 396,
     ESCAPE = 397,
     EVENT = 398,
     EXCEPT = 399,
     EXCLUDE = 400,
     EXCLUDING = 401,
     EXCLUSIVE = 402,
     EXECUTE = 403,
     EXISTS = 404,
     EXPLAIN = 405,
     EXPORT_P = 406,
     EXTENSION = 407,
     EXTERNAL = 408,
     EXTRACT = 409,
     FALSE_P = 410,
     FAMILY = 411,
     FETCH = 412,
     FILTER = 413,
     FIRST_P = 414,
     FLOAT_P = 415,
     FOLLOWING = 416,
     FOR = 417,
     FORCE = 418,
     FOREIGN = 419,
     FORWARD = 420,
     FREEZE = 421,
     FROM = 422,
     FULL = 423,
     FUNCTION = 424,
     FUNCTIONS = 425,
     GENERATED = 426,
     GLOB = 427,
     GLOBAL = 428,
     GRANT = 429,
     GRANTED = 430,
     GROUP_P = 431,
     GROUPING = 432,
     HANDLER = 433,
     HAVING = 434,
     HEADER_P = 435,
     HOLD = 436,
     HOUR_P = 437,
     HOURS_P = 438,
     IDENTITY_P = 439,
     IF_P = 440,
     ILIKE = 441,
     IMMEDIATE = 442,
     IMMUTABLE = 443,
     IMPLICIT_P = 444,
     IMPORT_P = 445,
     IN_P = 446,
     INCLUDING = 447,
     INCREMENT = 448,
     INDEX = 449,
     INDEXES = 450,
     INHERIT = 451,
     INHERITS = 452,
     INITIALLY = 453,
     INLINE_P = 454,
     INNER_P = 455,
     INOUT = 456,
     INPUT_P = 457,
     INSENSITIVE = 458,
     INSERT = 459,
     INSTEAD = 460,
     INT_P = 461,
     INTEGER = 462,
     INTERSECT = 463,
     INTERVAL = 464,
     INTO = 465,
     INVOKER = 466,
     IS = 467,
     ISNULL = 468,
     ISOLATION = 469,
     JOIN = 470,
     KEY = 471,
     LABEL = 472,
     LANGUAGE = 473,
     LARGE_P = 474,
     LAST_P = 475,
     LATERAL_P = 476,
     LEADING = 477,
     LEAKPROOF = 478,
     LEFT = 479,
     LEVEL = 480,
     LIKE = 481,
     LIMIT = 482,
     LISTEN = 483,
     LOAD = 484,
     LOCAL = 485,
     LOCALTIME = 486,
     LOCALTIMESTAMP = 487,
     LOCATION = 488,
     LOCK_P = 489,
     LOCKED = 490,
     LOGGED = 491,
     MACRO = 492,
     MAP = 493,
     MAPPING = 494,
     MATCH = 495,
     MATERIALIZED = 496,
     MAXVALUE = 497,
     METHOD = 498,
     MICROSECOND_P = 499,
     MICROSECONDS_P = 500,
     MILLISECOND_P = 501,
     MILLISECONDS_P = 502,
     MINUTE_P = 503,
     MINUTES_P = 504,
     MINVALUE = 505,
     MODE = 506,
     MONTH_P = 507,
     MONTHS_P = 508,
     MOVE = 509,
     NAME_P = 510,
     NAMES = 511,
     NATIONAL = 512,
     NATURAL = 513,
     NCHAR = 514,
     NEW = 515,
     NEXT = 516,
     NO = 517,
     NONE = 518,
     NOT = 519,
     NOTHING = 520,
     NOTIFY = 521,
     NOTNULL = 522,
     NOWAIT = 523,
     NULL_P = 524,
     NULLIF = 525,
     NULLS_P = 526,
     NUMERIC = 527,
     OBJECT_P = 528,
     OF = 529,
     OFF = 530,
     OFFSET = 531,
     OIDS = 532,
     OLD = 533,
     ON = 534,
     ONLY = 535,
     OPERATOR = 536,
     OPTION = 537,
     OPTIONS = 538,
     OR = 539,
     ORDER = 540,
     ORDINALITY = 541,
     OUT_P = 542,
     OUTER_P = 543,
     OVER = 544,
     OVERLAPS = 545,
     OVERLAY = 546,
     OVERRIDING = 547,
     OWNED = 548,
     OWNER = 549,
     PARALLEL = 550,
     PARSER = 551,
     PARTIAL = 552,
     PARTITION = 553,
     PASSING = 554,
     PASSWORD = 555,
     PERCENT = 556,
     PLACING = 557,
     PLANS = 558,
     POLICY = 559,
     POSITION = 560,
     PRAGMA_P = 561,
     PRECEDING = 562,
     PRECISION = 563,
     PREPARE = 564,
     PREPARED = 565,
     PRESERVE = 566,
     PRIMARY = 567,
     PRIOR = 568,
     PRIVILEGES = 569,
     PROCEDURAL = 570,
     PROCEDURE = 571,
     PROGRAM = 572,
     PUBLICATION = 573,
     QUOTE = 574,
     RANGE = 575,
     READ_P = 576,
     REAL = 577,
     REASSIGN = 578,
     RECHECK = 579,
     RECURSIVE = 580,
     REF = 581,
     REFERENCES = 582,
     REFERENCING = 583,
     REFRESH = 584,
     REINDEX = 585,
     RELATIVE_P = 586,
     RELEASE = 587,
     RENAME = 588,
     REPEATABLE = 589,
     REPLACE = 590,
     REPLICA = 591,
     RESET = 592,
     RESTART = 593,
     RESTRICT = 594,
     RETURNING = 595,
     RETURNS = 596,
     REVOKE = 597,
     RIGHT = 598,
     ROLE = 599,
     ROLLBACK = 600,
     ROLLUP = 601,
     ROW = 602,
     ROWS = 603,
     RULE = 604,
     SAMPLE = 605,
     SAVEPOINT = 606,
     SCHEMA = 607,
     SCHEMAS = 608,
     SCROLL = 609,
     SEARCH = 610,
     SECOND_P = 611,
     SECONDS_P = 612,
     SECURITY = 613,
     SELECT = 614,
     SEQUENCE = 615,
     SEQUENCES = 616,
     SERIALIZABLE = 617,
     SERVER = 618,
     SESSION = 619,
     SESSION_USER = 620,
     SET = 621,
     SETOF = 622,
     SETS = 623,
     SHARE = 624,
     SHOW = 625,
     SIMILAR = 626,
     SIMPLE = 627,
     SKIP = 628,
     SMALLINT = 629,
     SNAPSHOT = 630,
     SOME = 631,
     SQL_P = 632,
     STABLE = 633,
     STANDALONE_P = 634,
     START = 635,
     STATEMENT = 636,
     STATISTICS = 637,
     STDIN = 638,
     STDOUT = 639,
     STORAGE = 640,
     STRICT_P = 641,
     STRIP_P = 642,
     STRUCT = 643,
     SUBSCRIPTION = 644,
     SUBSTRING = 645,
     SYMMETRIC = 646,
     SYSID = 647,
     SYSTEM_P = 648,
     TABLE = 649,
     TABLES = 650,
     TABLESAMPLE = 651,
     TABLESPACE = 652,
     TEMP = 653,
     TEMPLATE = 654,
     TEMPORARY = 655,
     TEXT_P = 656,
     THEN = 657,
     TIME = 658,
     TIMESTAMP = 659,
     TO = 660,
     TRAILING = 661,
     TRANSACTION = 662,
     TRANSFORM = 663,
     TREAT = 664,
     TRIGGER = 665,
     TRIM = 666,
     TRUE_P = 667,
     TRUNCATE = 668,
     TRUSTED = 669,
     TRY_CAST = 670,
     TYPE_P = 671,
     TYPES_P = 672,
     UNBOUNDED = 673,
     UNCOMMITTED = 674,
     UNENCRYPTED = 675,
     UNION = 676,
     UNIQUE = 677,
     UNKNOWN = 678,
     UNLISTEN = 679,
     UNLOGGED = 680,
     UNTIL = 681,
     UPDATE = 682,
     USER = 683,
     USING = 684,
     VACUUM = 685,
     VALID = 686,
     VALIDATE = 687,
     VALIDATOR = 688,
     VALUE_P = 689,
     VALUES = 690,
     VARCHAR = 691,
     VARIADIC = 692,
     VARYING = 693,
     VERBOSE = 694,
     VERSION_P = 695,
     VIEW = 696,
     VIEWS = 697,
     VOLATILE = 698,
     WHEN = 699,
     WHERE = 700,
     WHITESPACE_P = 701,
     WINDOW = 702,
     WITH = 703,
     WITHIN = 704,
     WITHOUT = 705,
     WORK = 706,
     WRAPPER = 707,
     WRITE_P = 708,
     XML_P = 709,
     XMLATTRIBUTES = 710,
     XMLCONCAT = 711,
     XMLELEMENT = 712,
     XMLEXISTS = 713,
     XMLFOREST = 714,
     XMLNAMESPACES = 715,
     XMLPARSE = 716,
     XMLPI = 717,
     XMLROOT = 718,
     XMLSERIALIZE = 719,
     XMLTABLE = 720,
     YEAR_P = 721,
     YEARS_P = 722,
     YES_P = 723,
     ZONE = 724,
     NOT_LA = 725,
     NULLS_LA = 726,
     WITH_LA = 727,
     POSTFIXOP = 728,
     UMINUS = 729
   };
#endif
/* Tokens.  */
#define IDENT 258
#define FCONST 259
#define SCONST 260
#define BCONST 261
#define XCONST 262
#define Op 263
#define ICONST 264
#define PARAM 265
#define TYPECAST 266
#define DOT_DOT 267
#define COLON_EQUALS 268
#define EQUALS_GREATER 269
#define LAMBDA_ARROW 270
#define LESS_EQUALS 271
#define GREATER_EQUALS 272
#define NOT_EQUALS 273
#define ABORT_P 274
#define ABSOLUTE_P 275
#define ACCESS 276
#define ACTION 277
#define ADD_P 278
#define ADMIN 279
#define AFTER 280
#define AGGREGATE 281
#define ALL 282
#define ALSO 283
#define ALTER 284
#define ALWAYS 285
#define ANALYSE 286
#define ANALYZE 287
#define AND 288
#define ANY 289
#define ARRAY 290
#define AS 291
#define ASC_P 292
#define ASSERTION 293
#define ASSIGNMENT 294
#define ASYMMETRIC 295
#define AT 296
#define ATTACH 297
#define ATTRIBUTE 298
#define AUTHORIZATION 299
#define BACKWARD 300
#define BEFORE 301
#define BEGIN_P 302
#define BETWEEN 303
#define BIGINT 304
#define BINARY 305
#define BIT 306
#define BOOLEAN_P 307
#define BOTH 308
#define BY 309
#define CACHE 310
#define CALL_P 311
#define CALLED 312
#define CASCADE 313
#define CASCADED 314
#define CASE 315
#define CAST 316
#define CATALOG_P 317
#define CHAIN 318
#define CHAR_P 319
#define CHARACTER 320
#define CHARACTERISTICS 321
#define CHECK_P 322
#define CHECKPOINT 323
#define CLASS 324
#define CLOSE 325
#define CLUSTER 326
#define COALESCE 327
#define COLLATE 328
#define COLLATION 329
#define COLUMN 330
#define COLUMNS 331
#define COMMENT 332
#define COMMENTS 333
#define COMMIT 334
#define COMMITTED 335
#define CONCURRENTLY 336
#define CONFIGURATION 337
#define CONFLICT 338
#define CONNECTION 339
#define CONSTRAINT 340
#define CONSTRAINTS 341
#define CONTENT_P 342
#define CONTINUE_P 343
#define CONVERSION_P 344
#define COPY 345
#define COST 346
#define CREATE_P 347
#define CROSS 348
#define CSV 349
#define CUBE 350
#define CURRENT_P 351
#define CURRENT_CATALOG 352
#define CURRENT_DATE 353
#define CURRENT_ROLE 354
#define CURRENT_SCHEMA 355
#define CURRENT_TIME 356
#define CURRENT_TIMESTAMP 357
#define CURRENT_USER 358
#define CURSOR 359
#define CYCLE 360
#define DATA_P 361
#define DATABASE 362
#define DAY_P 363
#define DAYS_P 364
#define DEALLOCATE 365
#define DEC 366
#define DECIMAL_P 367
#define DECLARE 368
#define DEFAULT 369
#define DEFAULTS 370
#define DEFERRABLE 371
#define DEFERRED 372
#define DEFINER 373
#define DELETE_P 374
#define DELIMITER 375
#define DELIMITERS 376
#define DEPENDS 377
#define DESC_P 378
#define DESCRIBE 379
#define DETACH 380
#define DICTIONARY 381
#define DISABLE_P 382
#define DISCARD 383
#define DISTINCT 384
#define DO 385
#define DOCUMENT_P 386
#define DOMAIN_P 387
#define DOUBLE_P 388
#define DROP 389
#define EACH 390
#define ELSE 391
#define ENABLE_P 392
#define ENCODING 393
#define ENCRYPTED 394
#define END_P 395
#define ENUM_P 396
#define ESCAPE 397
#define EVENT 398
#define EXCEPT 399
#define EXCLUDE 400
#define EXCLUDING 401
#define EXCLUSIVE 402
#define EXECUTE 403
#define EXISTS 404
#define EXPLAIN 405
#define EXPORT_P 406
#define EXTENSION 407
#define EXTERNAL 408
#define EXTRACT 409
#define FALSE_P 410
#define FAMILY 411
#define FETCH 412
#define FILTER 413
#define FIRST_P 414
#define FLOAT_P 415
#define FOLLOWING 416
#define FOR 417
#define FORCE 418
#define FOREIGN 419
#define FORWARD 420
#define FREEZE 421
#define FROM 422
#define FULL 423
#define FUNCTION 424
#define FUNCTIONS 425
#define GENERATED 426
#define GLOB 427
#define GLOBAL 428
#define GRANT 429
#define GRANTED 430
#define GROUP_P 431
#define GROUPING 432
#define HANDLER 433
#define HAVING 434
#define HEADER_P 435
#define HOLD 436
#define HOUR_P 437
#define HOURS_P 438
#define IDENTITY_P 439
#define IF_P 440
#define ILIKE 441
#define IMMEDIATE 442
#define IMMUTABLE 443
#define IMPLICIT_P 444
#define IMPORT_P 445
#define IN_P 446
#define INCLUDING 447
#define INCREMENT 448
#define INDEX 449
#define INDEXES 450
#define INHERIT 451
#define INHERITS 452
#define INITIALLY 453
#define INLINE_P 454
#define INNER_P 455
#define INOUT 456
#define INPUT_P 457
#define INSENSITIVE 458
#define INSERT 459
#define INSTEAD 460
#define INT_P 461
#define INTEGER 462
#define INTERSECT 463
#define INTERVAL 464
#define INTO 465
#define INVOKER 466
#define IS 467
#define ISNULL 468
#define ISOLATION 469
#define JOIN 470
#define KEY 471
#define LABEL 472
#define LANGUAGE 473
#define LARGE_P 474
#define LAST_P 475
#define LATERAL_P 476
#define LEADING 477
#define LEAKPROOF 478
#define LEFT 479
#define LEVEL 480
#define LIKE 481
#define LIMIT 482
#define LISTEN 483
#define LOAD 484
#define LOCAL 485
#define LOCALTIME 486
#define LOCALTIMESTAMP 487
#define LOCATION 488
#define LOCK_P 489
#define LOCKED 490
#define LOGGED 491
#define MACRO 492
#define MAP 493
#define MAPPING 494
#define MATCH 495
#define MATERIALIZED 496
#define MAXVALUE 497
#define METHOD 498
#define MICROSECOND_P 499
#define MICROSECONDS_P 500
#define MILLISECOND_P 501
#define MILLISECONDS_P 502
#define MINUTE_P 503
#define MINUTES_P 504
#define MINVALUE 505
#define MODE 506
#define MONTH_P 507
#define MONTHS_P 508
#define MOVE 509
#define NAME_P 510
#define NAMES 511
#define NATIONAL 512
#define NATURAL 513
#define NCHAR 514
#define NEW 515
#define NEXT 516
#define NO 517
#define NONE 518
#define NOT 519
#define NOTHING 520
#define NOTIFY 521
#define NOTNULL 522
#define NOWAIT 523
#define NULL_P 524
#define NULLIF 525
#define NULLS_P 526
#define NUMERIC 527
#define OBJECT_P 528
#define OF 529
#define OFF 530
#define OFFSET 531
#define OIDS 532
#define OLD 533
#define ON 534
#define ONLY 535
#define OPERATOR 536
#define OPTION 537
#define OPTIONS 538
#define OR 539
#define ORDER 540
#define ORDINALITY 541
#define OUT_P 542
#define OUTER_P 543
#define OVER 544
#define OVERLAPS 545
#define OVERLAY 546
#define OVERRIDING 547
#define OWNED 548
#define OWNER 549
#define PARALLEL 550
#define PARSER 551
#define PARTIAL 552
#define PARTITION 553
#define PASSING 554
#define PASSWORD 555
#define PERCENT 556
#define PLACING 557
#define PLANS 558
#define POLICY 559
#define POSITION 560
#define PRAGMA_P 561
#define PRECEDING 562
#define PRECISION 563
#define PREPARE 564
#define PREPARED 565
#define PRESERVE 566
#define PRIMARY 567
#define PRIOR 568
#define PRIVILEGES 569
#define PROCEDURAL 570
#define PROCEDURE 571
#define PROGRAM 572
#define PUBLICATION 573
#define QUOTE 574
#define RANGE 575
#define READ_P 576
#define REAL 577
#define REASSIGN 578
#define RECHECK 579
#define RECURSIVE 580
#define REF 581
#define REFERENCES 582
#define REFERENCING 583
#define REFRESH 584
#define REINDEX 585
#define RELATIVE_P 586
#define RELEASE 587
#define RENAME 588
#define REPEATABLE 589
#define REPLACE 590
#define REPLICA 591
#define RESET 592
#define RESTART 593
#define RESTRICT 594
#define RETURNING 595
#define RETURNS 596
#define REVOKE 597
#define RIGHT 598
#define ROLE 599
#define ROLLBACK 600
#define ROLLUP 601
#define ROW 602
#define ROWS 603
#define RULE 604
#define SAMPLE 605
#define SAVEPOINT 606
#define SCHEMA 607
#define SCHEMAS 608
#define SCROLL 609
#define SEARCH 610
#define SECOND_P 611
#define SECONDS_P 612
#define SECURITY 613
#define SELECT 614
#define SEQUENCE 615
#define SEQUENCES 616
#define SERIALIZABLE 617
#define SERVER 618
#define SESSION 619
#define SESSION_USER 620
#define SET 621
#define SETOF 622
#define SETS 623
#define SHARE 624
#define SHOW 625
#define SIMILAR 626
#define SIMPLE 627
#define SKIP 628
#define SMALLINT 629
#define SNAPSHOT 630
#define SOME 631
#define SQL_P 632
#define STABLE 633
#define STANDALONE_P 634
#define START 635
#define STATEMENT 636
#define STATISTICS 637
#define STDIN 638
#define STDOUT 639
#define STORAGE 640
#define STRICT_P 641
#define STRIP_P 642
#define STRUCT 643
#define SUBSCRIPTION 644
#define SUBSTRING 645
#define SYMMETRIC 646
#define SYSID 647
#define SYSTEM_P 648
#define TABLE 649
#define TABLES 650
#define TABLESAMPLE 651
#define TABLESPACE 652
#define TEMP 653
#define TEMPLATE 654
#define TEMPORARY 655
#define TEXT_P 656
#define THEN 657
#define TIME 658
#define TIMESTAMP 659
#define TO 660
#define TRAILING 661
#define TRANSACTION 662
#define TRANSFORM 663
#define TREAT 664
#define TRIGGER 665
#define TRIM 666
#define TRUE_P 667
#define TRUNCATE 668
#define TRUSTED 669
#define TRY_CAST 670
#define TYPE_P 671
#define TYPES_P 672
#define UNBOUNDED 673
#define UNCOMMITTED 674
#define UNENCRYPTED 675
#define UNION 676
#define UNIQUE 677
#define UNKNOWN 678
#define UNLISTEN 679
#define UNLOGGED 680
#define UNTIL 681
#define UPDATE 682
#define USER 683
#define USING 684
#define VACUUM 685
#define VALID 686
#define VALIDATE 687
#define VALIDATOR 688
#define VALUE_P 689
#define VALUES 690
#define VARCHAR 691
#define VARIADIC 692
#define VARYING 693
#define VERBOSE 694
#define VERSION_P 695
#define VIEW 696
#define VIEWS 697
#define VOLATILE 698
#define WHEN 699
#define WHERE 700
#define WHITESPACE_P 701
#define WINDOW 702
#define WITH 703
#define WITHIN 704
#define WITHOUT 705
#define WORK 706
#define WRAPPER 707
#define WRITE_P 708
#define XML_P 709
#define XMLATTRIBUTES 710
#define XMLCONCAT 711
#define XMLELEMENT 712
#define XMLEXISTS 713
#define XMLFOREST 714
#define XMLNAMESPACES 715
#define XMLPARSE 716
#define XMLPI 717
#define XMLROOT 718
#define XMLSERIALIZE 719
#define XMLTABLE 720
#define YEAR_P 721
#define YEARS_P 722
#define YES_P 723
#define ZONE 724
#define NOT_LA 725
#define NULLS_LA 726
#define WITH_LA 727
#define POSTFIXOP 728
#define UMINUS 729




/* Copy the first part of user declarations.  */
#line 1 "third_party/libpg_query/grammar/grammar.y.tmp"

#line 1 "third_party/libpg_query/grammar/grammar.hpp"
/*#define YYDEBUG 1*/
/*-------------------------------------------------------------------------
 *
 * gram.y
 *	  POSTGRESQL BISON rules/actions
 *
 * Portions Copyright (c) 1996-2017, PostgreSQL Global Development PGGroup
 * Portions Copyright (c) 1994, Regents of the University of California
 *
 *
 * IDENTIFICATION
 *	  src/backend/parser/gram.y
 *
 * HISTORY
 *	  AUTHOR			DATE			MAJOR EVENT
 *	  Andrew Yu			Sept, 1994		POSTQUEL to SQL conversion
 *	  Andrew Yu			Oct, 1994		lispy code conversion
 *
 * NOTES
 *	  CAPITALS are used to represent terminal symbols.
 *	  non-capitals are used to represent non-terminals.
 *
 *	  In general, nothing in this file should initiate database accesses
 *	  nor depend on changeable state (such as SET variables).  If you do
 *	  database accesses, your code will fail when we have aborted the
 *	  current transaction and are just parsing commands to find the next
 *	  ROLLBACK or COMMIT.  If you make use of SET variables, then you
 *	  will do the wrong thing in multi-query strings like this:
 *			SET constraint_exclusion TO off; SELECT * FROM foo;
 *	  because the entire string is parsed by gram.y before the SET gets
 *	  executed.  Anything that depends on the database or changeable state
 *	  should be handled during parse analysis so that it happens at the
 *	  right time not the wrong time.
 *
 * WARNINGS
 *	  If you use a list, make sure the datum is a node so that the printing
 *	  routines work.
 *
 *	  Sometimes we assign constants to makeStrings. Make sure we don't free
 *	  those.
 *
 *-------------------------------------------------------------------------
 */
#include "pg_functions.hpp"
#include <string.h>

#include <ctype.h>
#include <limits.h>

#include "nodes/makefuncs.hpp"
#include "nodes/nodeFuncs.hpp"
#include "parser/gramparse.hpp"
#include "parser/parser.hpp"
#include "utils/datetime.hpp"

namespace duckdb_libpgquery {
#define DEFAULT_SCHEMA "main"

/*
 * Location tracking support --- simpler than bison's default, since we only
 * want to track the start position not the end position of each nonterminal.
 */
#define YYLLOC_DEFAULT(Current, Rhs, N) \
	do { \
		if ((N) > 0) \
			(Current) = (Rhs)[1]; \
		else \
			(Current) = (-1); \
	} while (0)

/*
 * The above macro assigns -1 (unknown) as the parse location of any
 * nonterminal that was reduced from an empty rule, or whose leftmost
 * component was reduced from an empty rule.  This is problematic
 * for nonterminals defined like
 *		OptFooList: / * EMPTY * / { ... } | OptFooList Foo { ... } ;
 * because we'll set -1 as the location during the first reduction and then
 * copy it during each subsequent reduction, leaving us with -1 for the
 * location even when the list is not empty.  To fix that, do this in the
 * action for the nonempty rule(s):
 *		if (@$ < 0) @$ = @2;
 * (Although we have many nonterminals that follow this pattern, we only
 * bother with fixing @$ like this when the nonterminal's parse location
 * is actually referenced in some rule.)
 *
 * A cleaner answer would be to make YYLLOC_DEFAULT scan all the Rhs
 * locations until it's found one that's not -1.  Then we'd get a correct
 * location for any nonterminal that isn't entirely empty.  But this way
 * would add overhead to every rule reduction, and so far there's not been
 * a compelling reason to pay that overhead.
 */

/*
 * Bison doesn't allocate anything that needs to live across parser calls,
 * so we can easily have it use palloc instead of malloc.  This prevents
 * memory leaks if we error out during parsing.  Note this only works with
 * bison >= 2.0.  However, in bison 1.875 the default is to use alloca()
 * if possible, so there's not really much problem anyhow, at least if
 * you're building with gcc.
 */
#define YYMALLOC palloc
#define YYFREE   pfree
#define YYINITDEPTH 1000

/* yields an integer bitmask of these flags: */
#define CAS_NOT_DEFERRABLE			0x01
#define CAS_DEFERRABLE				0x02
#define CAS_INITIALLY_IMMEDIATE		0x04
#define CAS_INITIALLY_DEFERRED		0x08
#define CAS_NOT_VALID				0x10
#define CAS_NO_INHERIT				0x20


#define parser_yyerror(msg)  scanner_yyerror(msg, yyscanner)
#define parser_errposition(pos)  scanner_errposition(pos, yyscanner)

static void base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner,
						 const char *msg);
static PGRawStmt *makeRawStmt(PGNode *stmt, int stmt_location);
static void updateRawStmtEnd(PGRawStmt *rs, int end_location);
static PGNode *makeColumnRef(char *colname, PGList *indirection,
						   int location, core_yyscan_t yyscanner);
static PGNode *makeTypeCast(PGNode *arg, PGTypeName *tpname, int trycast, int location);
static PGNode *makeStringConst(char *str, int location);
static PGNode *makeStringConstCast(char *str, int location, PGTypeName *tpname);
static PGNode *makeIntervalNode(char *str, int location, PGList *typmods);
static PGNode *makeIntervalNode(int val, int location, PGList *typmods);
static PGNode *makeIntervalNode(PGNode *arg, int location, PGList *typmods);
static PGNode *makeSampleSize(PGValue *sample_size, bool is_percentage);
static PGNode *makeSampleOptions(PGNode *sample_size, char *method, int seed, int location);
static PGNode *makeIntConst(int val, int location);
static PGNode *makeFloatConst(char *str, int location);
static PGNode *makeBitStringConst(char *str, int location);
static PGNode *makeNullAConst(int location);
static PGNode *makeAConst(PGValue *v, int location);
static PGNode *makeBoolAConst(bool state, int location);
static PGNode *makeParamRef(int number, int location);
static PGNode *makeParamRefCast(int number, int location, PGTypeName *tpname);
static void check_qualified_name(PGList *names, core_yyscan_t yyscanner);
static PGList *check_func_name(PGList *names, core_yyscan_t yyscanner);
static PGList *check_indirection(PGList *indirection, core_yyscan_t yyscanner);
static void insertSelectOptions(PGSelectStmt *stmt,
								PGList *sortClause, PGList *lockingClause,
								PGNode *limitOffset, PGNode *limitCount,
								PGWithClause *withClause,
								core_yyscan_t yyscanner);
static PGNode *makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg);
static PGNode *doNegate(PGNode *n, int location);
static void doNegateFloat(PGValue *v);
static PGNode *makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location);
static PGNode *makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location);
static PGNode *makeNotExpr(PGNode *expr, int location);
static PGNode *makeSQLValueFunction(PGSQLValueFunctionOp op, int32_t typmod,
								  int location);
static void SplitColQualList(PGList *qualList,
							 PGList **constraintList, PGCollateClause **collClause,
							 core_yyscan_t yyscanner);
static void processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner);
static PGNode *makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query);



/* Enabling traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* Enabling the token table.  */
#ifndef YYTOKEN_TABLE
# define YYTOKEN_TABLE 0
#endif

#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
typedef union YYSTYPE
#line 14 "third_party/libpg_query/grammar/grammar.y"
{
	core_YYSTYPE		core_yystype;
	/* these fields must match core_YYSTYPE: */
	int					ival;
	char				*str;
	const char			*keyword;
	const char          *conststr;

	char				chr;
	bool				boolean;
	PGJoinType			jtype;
	PGDropBehavior		dbehavior;
	PGOnCommitAction		oncommit;
	PGList				*list;
	PGNode				*node;
	PGValue				*value;
	PGObjectType			objtype;
	PGTypeName			*typnam;
	PGObjectWithArgs		*objwithargs;
	PGDefElem				*defelt;
	PGSortBy				*sortby;
	PGWindowDef			*windef;
	PGJoinExpr			*jexpr;
	PGIndexElem			*ielem;
	PGAlias				*alias;
	PGRangeVar			*range;
	PGIntoClause			*into;
	PGWithClause			*with;
	PGInferClause			*infer;
	PGOnConflictClause	*onconflict;
	PGAIndices			*aind;
	PGResTarget			*target;
	PGInsertStmt			*istmt;
	PGVariableSetStmt		*vsetstmt;
	PGOverridingKind       override;
	PGSortByDir            sortorder;
	PGSortByNulls          nullorder;
	PGLockClauseStrength lockstrength;
	PGLockWaitPolicy lockwaitpolicy;
	PGSubLinkType subquerytype;
	PGViewCheckOption viewcheckoption;
}
/* Line 193 of yacc.c.  */
#line 1261 "third_party/libpg_query/grammar/grammar_out.cpp"
	YYSTYPE;
# define yystype YYSTYPE /* obsolescent; will be withdrawn */
# define YYSTYPE_IS_DECLARED 1
# define YYSTYPE_IS_TRIVIAL 1
#endif

#if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
typedef struct YYLTYPE
{
  int first_line;
  int first_column;
  int last_line;
  int last_column;
} YYLTYPE;
# define yyltype YYLTYPE /* obsolescent; will be withdrawn */
# define YYLTYPE_IS_DECLARED 1
# define YYLTYPE_IS_TRIVIAL 1
#endif


/* Copy the second part of user declarations.  */


/* Line 216 of yacc.c.  */
#line 1286 "third_party/libpg_query/grammar/grammar_out.cpp"

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#elif (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
typedef signed char yytype_int8;
#else
typedef short int yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(msgid) dgettext ("bison-runtime", msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(msgid) msgid
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(e) ((void) (e))
#else
# define YYUSE(e) /* empty */
#endif

/* Identity function, used to suppress warnings about constant conditions.  */
#ifndef lint
# define YYID(n) (n)
#else
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static int
YYID (int i)
#else
static int
YYID (i)
    int i;
#endif
{
  return i;
}
#endif

#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#     ifndef _STDLIB_H
#      define _STDLIB_H 1
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's `empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (YYID (0))
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined _STDLIB_H \
       && ! ((defined YYMALLOC || defined malloc) \
	     && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef _STDLIB_H
#    define _STDLIB_H 1
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
	 || (defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL \
	     && defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss;
  YYSTYPE yyvs;
    YYLTYPE yyls;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
      + 2 * YYSTACK_GAP_MAXIMUM)

/* Copy COUNT objects from FROM to TO.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(To, From, Count) \
      __builtin_memcpy (To, From, (Count) * sizeof (*(From)))
#  else
#   define YYCOPY(To, From, Count)		\
      do					\
	{					\
	  YYSIZE_T yyi;				\
	  for (yyi = 0; yyi < (Count); yyi++)	\
	    (To)[yyi] = (From)[yyi];		\
	}					\
      while (YYID (0))
#  endif
# endif

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack)					\
    do									\
      {									\
	YYSIZE_T yynewbytes;						\
	YYCOPY (&yyptr->Stack, Stack, yysize);				\
	Stack = &yyptr->Stack;						\
	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
	yyptr += yynewbytes / sizeof (*yyptr);				\
      }									\
    while (YYID (0))

#endif

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  576
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   48657

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  493
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  366
/* YYNRULES -- Number of rules.  */
#define YYNRULES  1741
/* YYNRULES -- Number of states.  */
#define YYNSTATES  2843

/* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   729

#define YYTRANSLATE(YYX)						\
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[YYLEX] -- Bison symbol number corresponding to YYLEX.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,   481,     2,     2,
     486,   487,   479,   477,   490,   478,   488,   480,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   492,   489,
     473,   475,   474,   491,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,   484,     2,   485,   482,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   476,   483
};

#if YYDEBUG
/* YYPRHS[YYN] -- Index of the first RHS symbol of rule number YYN in
   YYRHS.  */
static const yytype_uint16 yyprhs[] =
{
       0,     0,     3,     5,     9,    11,    13,    15,    17,    19,
      21,    23,    25,    27,    29,    31,    33,    35,    37,    39,
      41,    43,    45,    47,    49,    51,    53,    55,    57,    59,
      61,    63,    65,    67,    69,    71,    73,    75,    77,    78,
      83,    90,    95,   102,   107,   114,   119,   126,   128,   131,
     135,   138,   140,   144,   147,   151,   153,   157,   160,   166,
     170,   177,   182,   189,   196,   203,   209,   215,   222,   232,
     237,   243,   251,   258,   263,   272,   277,   280,   285,   289,
     296,   301,   304,   307,   310,   313,   315,   318,   319,   321,
     324,   327,   330,   332,   336,   341,   344,   345,   348,   352,
     355,   359,   366,   373,   382,   389,   398,   405,   414,   421,
     430,   439,   450,   459,   470,   472,   473,   481,   483,   488,
     493,   501,   504,   506,   510,   515,   519,   520,   522,   523,
     526,   530,   536,   545,   551,   552,   558,   564,   572,   575,
     576,   578,   580,   582,   586,   589,   590,   592,   593,   595,
     599,   601,   605,   607,   611,   614,   617,   622,   628,   634,
     643,   645,   646,   650,   660,   673,   677,   678,   683,   690,
     692,   695,   697,   699,   700,   702,   705,   708,   710,   713,
     716,   718,   721,   725,   728,   731,   734,   737,   741,   745,
     749,   751,   755,   757,   758,   760,   763,   766,   769,   772,
     775,   778,   781,   784,   786,   788,   789,   799,   812,   813,
     816,   818,   820,   822,   824,   826,   828,   832,   833,   835,
     838,   840,   842,   845,   848,   852,   854,   856,   859,   862,
     864,   867,   871,   877,   880,   886,   892,   895,   899,   901,
     903,   906,   909,   910,   915,   916,   920,   925,   930,   931,
     935,   938,   939,   943,   945,   947,   949,   951,   953,   955,
     957,   959,   961,   963,   967,   971,   973,   976,   979,   982,
     985,   988,   991,   992,   996,  1000,  1004,  1005,  1007,  1010,
    1012,  1015,  1018,  1021,  1024,  1029,  1031,  1035,  1037,  1041,
    1043,  1045,  1047,  1049,  1053,  1055,  1058,  1059,  1061,  1062,
    1064,  1068,  1069,  1072,  1073,  1077,  1081,  1083,  1089,  1093,
    1095,  1099,  1101,  1106,  1112,  1118,  1125,  1129,  1137,  1142,
    1154,  1156,  1160,  1163,  1166,  1169,  1170,  1174,  1176,  1178,
    1181,  1184,  1187,  1190,  1192,  1193,  1195,  1198,  1205,  1210,
    1217,  1222,  1229,  1238,  1240,  1242,  1244,  1246,  1248,  1251,
    1253,  1256,  1258,  1260,  1262,  1266,  1270,  1274,  1278,  1281,
    1284,  1286,  1290,  1292,  1294,  1296,  1298,  1302,  1304,  1306,
    1307,  1309,  1311,  1313,  1320,  1322,  1324,  1327,  1331,  1340,
    1352,  1362,  1364,  1366,  1370,  1371,  1373,  1377,  1379,  1380,
    1382,  1383,  1385,  1386,  1388,  1392,  1394,  1396,  1398,  1402,
    1403,  1406,  1409,  1410,  1413,  1414,  1416,  1417,  1419,  1421,
    1423,  1427,  1431,  1433,  1435,  1439,  1443,  1447,  1451,  1456,
    1460,  1463,  1465,  1467,  1469,  1471,  1473,  1477,  1479,  1481,
    1485,  1489,  1491,  1494,  1499,  1504,  1507,  1511,  1517,  1523,
    1525,  1527,  1538,  1549,  1551,  1554,  1559,  1564,  1569,  1572,
    1575,  1579,  1581,  1585,  1592,  1595,  1596,  1600,  1604,  1609,
    1614,  1619,  1624,  1628,  1631,  1633,  1635,  1636,  1638,  1640,
    1641,  1643,  1649,  1651,  1652,  1654,  1655,  1659,  1661,  1665,
    1670,  1674,  1676,  1678,  1679,  1682,  1685,  1686,  1689,  1692,
    1694,  1696,  1698,  1699,  1702,  1707,  1713,  1718,  1721,  1725,
    1728,  1731,  1734,  1737,  1739,  1742,  1746,  1747,  1749,  1750,
    1756,  1758,  1763,  1770,  1773,  1775,  1776,  1781,  1782,  1784,
    1786,  1788,  1790,  1793,  1796,  1798,  1800,  1802,  1804,  1806,
    1808,  1812,  1813,  1815,  1819,  1821,  1823,  1826,  1829,  1830,
    1832,  1836,  1838,  1839,  1841,  1844,  1848,  1851,  1856,  1859,
    1863,  1866,  1867,  1869,  1872,  1873,  1878,  1884,  1887,  1888,
    1890,  1894,  1898,  1902,  1906,  1910,  1914,  1916,  1921,  1925,
    1930,  1936,  1941,  1947,  1952,  1958,  1961,  1966,  1968,  1970,
    1971,  1973,  1978,  1984,  1989,  1990,  1993,  1996,  1999,  2001,
    2003,  2004,  2009,  2012,  2014,  2017,  2020,  2025,  2028,  2035,
    2038,  2040,  2044,  2049,  2050,  2053,  2054,  2057,  2058,  2060,
    2064,  2068,  2071,  2072,  2075,  2080,  2082,  2084,  2087,  2091,
    2097,  2104,  2107,  2111,  2116,  2121,  2125,  2130,  2131,  2133,
    2135,  2137,  2139,  2141,  2144,  2149,  2151,  2153,  2155,  2157,
    2160,  2164,  2165,  2167,  2169,  2171,  2173,  2175,  2178,  2181,
    2184,  2187,  2190,  2192,  2196,  2197,  2199,  2201,  2203,  2205,
    2211,  2214,  2216,  2218,  2220,  2222,  2227,  2229,  2232,  2235,
    2237,  2241,  2245,  2248,  2250,  2251,  2257,  2260,  2266,  2269,
    2271,  2275,  2279,  2280,  2282,  2284,  2286,  2288,  2290,  2292,
    2294,  2296,  2298,  2300,  2302,  2304,  2306,  2308,  2310,  2312,
    2314,  2316,  2318,  2320,  2322,  2324,  2326,  2328,  2332,  2336,
    2340,  2344,  2348,  2352,  2356,  2357,  2359,  2363,  2367,  2373,
    2376,  2379,  2383,  2387,  2391,  2395,  2399,  2403,  2407,  2411,
    2415,  2419,  2423,  2427,  2431,  2434,  2437,  2441,  2445,  2448,
    2451,  2455,  2459,  2465,  2470,  2477,  2481,  2487,  2492,  2499,
    2504,  2511,  2517,  2525,  2529,  2532,  2537,  2541,  2544,  2546,
    2550,  2554,  2558,  2562,  2567,  2571,  2576,  2580,  2585,  2591,
    2598,  2605,  2613,  2620,  2628,  2635,  2643,  2647,  2652,  2657,
    2664,  2666,  2668,  2672,  2675,  2678,  2682,  2686,  2690,  2694,
    2698,  2702,  2706,  2710,  2714,  2718,  2722,  2726,  2730,  2733,
    2736,  2742,  2749,  2756,  2764,  2766,  2768,  2771,  2774,  2779,
    2781,  2783,  2785,  2788,  2791,  2795,  2801,  2808,  2817,  2824,
    2831,  2836,  2841,  2843,  2845,  2847,  2853,  2855,  2857,  2862,
    2864,  2869,  2871,  2876,  2878,  2883,  2885,  2887,  2889,  2891,
    2893,  2895,  2902,  2909,  2914,  2919,  2924,  2929,  2936,  2942,
    2948,  2954,  2959,  2966,  2971,  2977,  2978,  2984,  2985,  2988,
    2989,  2991,  2995,  2999,  3002,  3005,  3006,  3013,  3015,  3016,
    3020,  3021,  3024,  3027,  3028,  3030,  3035,  3038,  3041,  3044,
    3047,  3050,  3055,  3059,  3061,  3067,  3069,  3071,  3073,  3075,
    3077,  3079,  3081,  3083,  3085,  3087,  3089,  3091,  3093,  3095,
    3097,  3099,  3101,  3103,  3108,  3110,  3115,  3117,  3122,  3124,
    3127,  3129,  3132,  3134,  3137,  3139,  3143,  3145,  3149,  3151,
    3155,  3157,  3161,  3165,  3167,  3171,  3175,  3176,  3178,  3180,
    3182,  3184,  3186,  3188,  3190,  3192,  3194,  3196,  3201,  3205,
    3208,  3212,  3213,  3217,  3221,  3224,  3227,  3229,  3230,  3233,
    3236,  3240,  3243,  3245,  3247,  3251,  3257,  3259,  3262,  3267,
    3270,  3271,  3273,  3274,  3276,  3279,  3282,  3285,  3289,  3295,
    3297,  3298,  3300,  3303,  3304,  3307,  3309,  3310,  3312,  3313,
    3315,  3319,  3323,  3326,  3328,  3330,  3332,  3336,  3338,  3341,
    3343,  3347,  3349,  3351,  3353,  3356,  3358,  3360,  3362,  3364,
    3366,  3369,  3376,  3379,  3385,  3389,  3393,  3395,  3397,  3399,
    3401,  3403,  3405,  3407,  3409,  3411,  3413,  3415,  3417,  3419,
    3421,  3423,  3425,  3427,  3429,  3431,  3433,  3436,  3439,  3443,
    3447,  3448,  3450,  3452,  3454,  3456,  3458,  3460,  3462,  3468,
    3472,  3473,  3475,  3477,  3479,  3481,  3486,  3494,  3497,  3498,
    3500,  3502,  3504,  3506,  3520,  3537,  3539,  3542,  3543,  3545,
    3546,  3548,  3549,  3552,  3553,  3555,  3556,  3563,  3572,  3579,
    3588,  3595,  3604,  3607,  3609,  3614,  3618,  3621,  3626,  3630,
    3636,  3638,  3639,  3641,  3643,  3644,  3646,  3648,  3650,  3652,
    3654,  3656,  3658,  3660,  3662,  3664,  3666,  3670,  3672,  3674,
    3676,  3678,  3680,  3682,  3685,  3687,  3689,  3692,  3696,  3700,
    3702,  3706,  3710,  3713,  3717,  3721,  3725,  3729,  3731,  3733,
    3735,  3737,  3741,  3747,  3749,  3751,  3753,  3755,  3759,  3762,
    3764,  3769,  3775,  3781,  3786,  3793,  3795,  3797,  3799,  3801,
    3803,  3805,  3806,  3808,  3812,  3814,  3815,  3823,  3825,  3828,
    3832,  3835,  3836,  3839,  3840,  3843,  3848,  3851,  3853,  3855,
    3857,  3860,  3864,  3867,  3870,  3874,  3879,  3882,  3884,  3886,
    3888,  3892,  3895,  3905,  3917,  3930,  3945,  3949,  3954,  3959,
    3960,  3968,  3979,  3982,  3986,  3987,  3992,  3994,  3996,  3998,
    4000,  4002,  4004,  4006,  4008,  4010,  4012,  4014,  4016,  4018,
    4020,  4022,  4024,  4026,  4028,  4030,  4032,  4034,  4036,  4038,
    4040,  4042,  4044,  4046,  4048,  4050,  4052,  4054,  4056,  4058,
    4060,  4062,  4064,  4066,  4068,  4070,  4072,  4074,  4076,  4078,
    4080,  4082,  4084,  4086,  4088,  4090,  4092,  4094,  4096,  4098,
    4100,  4102,  4104,  4106,  4108,  4110,  4112,  4114,  4116,  4118,
    4120,  4122,  4124,  4126,  4128,  4130,  4132,  4134,  4136,  4138,
    4140,  4142,  4144,  4146,  4148,  4150,  4152,  4154,  4156,  4158,
    4160,  4162,  4164,  4166,  4168,  4170,  4172,  4174,  4176,  4178,
    4180,  4182,  4184,  4186,  4188,  4190,  4192,  4194,  4196,  4198,
    4200,  4202,  4204,  4206,  4208,  4210,  4212,  4214,  4216,  4218,
    4220,  4222,  4224,  4226,  4228,  4230,  4232,  4234,  4236,  4238,
    4240,  4242,  4244,  4246,  4248,  4250,  4252,  4254,  4256,  4258,
    4260,  4262,  4264,  4266,  4268,  4270,  4272,  4274,  4276,  4278,
    4280,  4282,  4284,  4286,  4288,  4290,  4292,  4294,  4296,  4298,
    4300,  4302,  4304,  4306,  4308,  4310,  4312,  4314,  4316,  4318,
    4320,  4322,  4324,  4326,  4328,  4330,  4332,  4334,  4336,  4338,
    4340,  4342,  4344,  4346,  4348,  4350,  4352,  4354,  4356,  4358,
    4360,  4362,  4364,  4366,  4368,  4370,  4372,  4374,  4376,  4378,
    4380,  4382,  4384,  4386,  4388,  4390,  4392,  4394,  4396,  4398,
    4400,  4402,  4404,  4406,  4408,  4410,  4412,  4414,  4416,  4418,
    4420,  4422,  4424,  4426,  4428,  4430,  4432,  4434,  4436,  4438,
    4440,  4442,  4444,  4446,  4448,  4450,  4452,  4454,  4456,  4458,
    4460,  4462,  4464,  4466,  4468,  4470,  4472,  4474,  4476,  4478,
    4480,  4482,  4484,  4486,  4488,  4490,  4492,  4494,  4496,  4498,
    4500,  4502,  4504,  4506,  4508,  4510,  4512,  4514,  4516,  4518,
    4520,  4522,  4524,  4526,  4528,  4530,  4532,  4534,  4536,  4538,
    4540,  4542,  4544,  4546,  4548,  4550,  4552,  4554,  4556,  4558,
    4560,  4562,  4564,  4566,  4568,  4570,  4572,  4574,  4576,  4578,
    4580,  4582,  4584,  4586,  4588,  4590,  4592,  4594,  4596,  4598,
    4600,  4602,  4604,  4606,  4608,  4610,  4612,  4614,  4616,  4618,
    4620,  4622,  4624,  4626,  4628,  4630,  4632,  4634,  4636,  4638,
    4640,  4642,  4644,  4646,  4648,  4650,  4652,  4654,  4656,  4658,
    4660,  4662,  4664,  4666,  4668,  4670,  4672,  4674,  4676,  4678,
    4680,  4682,  4684,  4686,  4688,  4690,  4692,  4694,  4696,  4698,
    4700,  4702,  4704,  4706,  4708,  4710,  4712,  4714,  4716,  4718,
    4720,  4722,  4724,  4726,  4728,  4730,  4732,  4734,  4736,  4738,
    4740,  4742,  4744,  4746,  4748,  4750,  4752,  4754,  4756,  4758,
    4760,  4762,  4764,  4766,  4768,  4770,  4772,  4774,  4776,  4778,
    4780,  4782,  4784,  4786,  4788,  4790,  4792,  4794,  4796,  4798,
    4800,  4802,  4804,  4806,  4808,  4810,  4812,  4814,  4816,  4818,
    4820,  4822,  4824,  4826,  4828,  4830,  4832,  4834,  4836,  4838,
    4840,  4842,  4844,  4846,  4848,  4850,  4852,  4854,  4856,  4858,
    4860,  4862,  4864,  4866,  4868,  4870,  4872,  4874,  4876,  4878,
    4880,  4882,  4884,  4886,  4888,  4890,  4892,  4894,  4896,  4898,
    4900,  4902,  4904,  4906,  4908,  4910,  4912,  4914,  4916,  4918,
    4920,  4922,  4924,  4926,  4928,  4930,  4932,  4934,  4936,  4938,
    4940,  4942,  4944,  4946,  4948,  4950,  4952,  4954,  4956,  4958,
    4960,  4962,  4964,  4966,  4968,  4970,  4972,  4974,  4976,  4978,
    4980,  4982,  4984,  4986,  4988,  4990,  4992,  4994,  4996,  4998,
    5000,  5002,  5004,  5006,  5008,  5010,  5012,  5014,  5016,  5018,
    5020,  5022,  5024,  5026,  5028,  5030,  5032,  5034,  5036,  5038,
    5040,  5042,  5044,  5046,  5048,  5050,  5052,  5054,  5056,  5058,
    5060,  5062,  5064,  5066,  5068,  5070,  5072,  5074,  5076,  5078,
    5080,  5082,  5084,  5086,  5088,  5090,  5092,  5094,  5096,  5098,
    5100,  5102
};

/* YYRHS -- A `-1'-separated list of the rules' RHS.  */
static const yytype_int16 yyrhs[] =
{
     494,     0,    -1,   495,    -1,   495,   489,   496,    -1,   496,
      -1,   807,    -1,   534,    -1,   497,    -1,   839,    -1,   846,
      -1,   808,    -1,   599,    -1,   849,    -1,   595,    -1,   797,
      -1,   530,    -1,   543,    -1,   508,    -1,   835,    -1,   589,
      -1,   532,    -1,   811,    -1,   809,    -1,   810,    -1,   800,
      -1,   511,    -1,   828,    -1,   529,    -1,   794,    -1,   509,
      -1,   616,    -1,   541,    -1,   598,    -1,   830,    -1,   840,
      -1,   822,    -1,   843,    -1,   847,    -1,    -1,    29,   394,
     676,   505,    -1,    29,   394,   185,   149,   676,   505,    -1,
      29,   194,   775,   505,    -1,    29,   194,   185,   149,   775,
     505,    -1,    29,   360,   775,   505,    -1,    29,   360,   185,
     149,   775,   505,    -1,    29,   441,   775,   505,    -1,    29,
     441,   185,   149,   775,   505,    -1,   500,    -1,   498,   500,
      -1,   366,   114,   718,    -1,   134,   114,    -1,   338,    -1,
     338,   536,   537,    -1,   366,   538,    -1,   366,   171,   588,
      -1,   504,    -1,   501,   490,   504,    -1,    23,   568,    -1,
      23,   185,   264,   149,   568,    -1,    23,    75,   568,    -1,
      23,    75,   185,   264,   149,   568,    -1,    29,   510,   783,
     499,    -1,    29,   510,   783,   134,   264,   269,    -1,    29,
     510,   783,   366,   264,   269,    -1,    29,   510,   783,   366,
     382,   540,    -1,    29,   510,   783,   366,   556,    -1,    29,
     510,   783,   337,   556,    -1,    29,   510,   783,   366,   385,
     783,    -1,    29,   510,   783,    23,   171,   588,    36,   184,
     546,    -1,    29,   510,   783,   498,    -1,    29,   510,   783,
     134,   184,    -1,    29,   510,   783,   134,   184,   185,   149,
      -1,   134,   510,   185,   149,   783,   593,    -1,   134,   510,
     783,   593,    -1,    29,   510,   783,   507,   416,   688,   685,
     503,    -1,    29,   510,   783,   506,    -1,    23,   558,    -1,
      29,    85,   777,   544,    -1,   432,    85,   777,    -1,   134,
      85,   185,   149,   777,   593,    -1,   134,    85,   777,   593,
      -1,   366,   236,    -1,   366,   425,    -1,   366,   556,    -1,
     337,   556,    -1,   506,    -1,   429,   718,    -1,    -1,   551,
      -1,   366,   551,    -1,    23,   551,    -1,   134,   566,    -1,
     502,    -1,   505,   490,   502,    -1,   283,   486,   501,   487,
      -1,   366,   106,    -1,    -1,   110,   777,    -1,   110,   309,
     777,    -1,   110,    27,    -1,   110,   309,    27,    -1,    29,
     352,   777,   333,   405,   777,    -1,    29,   394,   676,   333,
     405,   777,    -1,    29,   394,   185,   149,   676,   333,   405,
     777,    -1,    29,   360,   775,   333,   405,   777,    -1,    29,
     360,   185,   149,   775,   333,   405,   777,    -1,    29,   441,
     775,   333,   405,   777,    -1,    29,   441,   185,   149,   775,
     333,   405,   777,    -1,    29,   194,   775,   333,   405,   777,
      -1,    29,   194,   185,   149,   775,   333,   405,   777,    -1,
      29,   394,   676,   333,   510,   777,   405,   777,    -1,    29,
     394,   185,   149,   676,   333,   510,   777,   405,   777,    -1,
      29,   394,   676,   333,    85,   777,   405,   777,    -1,    29,
     394,   185,   149,   676,   333,    85,   777,   405,   777,    -1,
      75,    -1,    -1,   515,   204,   210,   513,   512,   518,   520,
      -1,   616,    -1,   292,   521,   434,   616,    -1,   486,   525,
     487,   616,    -1,   486,   525,   487,   292,   521,   434,   616,
      -1,   114,   435,    -1,   775,    -1,   775,    36,   783,    -1,
     486,   527,   487,   682,    -1,   279,    85,   777,    -1,    -1,
     621,    -1,    -1,   783,   769,    -1,   528,   475,   718,    -1,
     486,   522,   487,   475,   718,    -1,   279,    83,   514,   130,
     427,   366,   526,   682,    -1,   279,    83,   514,   130,   265,
      -1,    -1,   783,   523,   524,   634,   635,    -1,   723,   523,
     524,   634,   635,    -1,   486,   718,   487,   523,   524,   634,
     635,    -1,   340,   772,    -1,    -1,   428,    -1,   393,    -1,
     528,    -1,   522,   490,   528,    -1,    73,   788,    -1,    -1,
     788,    -1,    -1,   516,    -1,   525,   490,   516,    -1,   517,
      -1,   526,   490,   517,    -1,   519,    -1,   527,   490,   519,
      -1,   783,   769,    -1,   306,   783,    -1,   306,   783,   475,
     827,    -1,   306,   783,   486,   747,   487,    -1,    92,   587,
     360,   775,   531,    -1,    92,   587,   360,   185,   264,   149,
     775,   531,    -1,   535,    -1,    -1,   148,   777,   533,    -1,
      92,   587,   394,   851,    36,   148,   777,   533,   850,    -1,
      92,   587,   394,   185,   264,   149,   851,    36,   148,   777,
     533,   850,    -1,   486,   746,   487,    -1,    -1,    29,   360,
     775,   535,    -1,    29,   360,   185,   149,   775,   535,    -1,
     538,    -1,   535,   538,    -1,   448,    -1,   472,    -1,    -1,
       4,    -1,   477,     4,    -1,   478,     4,    -1,   540,    -1,
      36,   690,    -1,    55,   537,    -1,   105,    -1,   262,   105,
      -1,   193,   539,   537,    -1,   242,   537,    -1,   250,   537,
      -1,   262,   242,    -1,   262,   250,    -1,   293,    54,   788,
      -1,   360,   255,   788,    -1,   380,   536,   537,    -1,   338,
      -1,   338,   536,   537,    -1,    54,    -1,    -1,   781,    -1,
     477,   781,    -1,   478,   781,    -1,    19,   542,    -1,    47,
     542,    -1,   380,   542,    -1,    79,   542,    -1,   140,   542,
      -1,   345,   542,    -1,   451,    -1,   407,    -1,    -1,    92,
     587,   394,   775,   486,   575,   487,   563,   555,    -1,    92,
     587,   394,   185,   264,   149,   775,   486,   575,   487,   563,
     555,    -1,    -1,   544,   567,    -1,   582,    -1,   858,    -1,
     743,    -1,   537,    -1,   782,    -1,   263,    -1,   486,   535,
     487,    -1,    -1,   782,    -1,   262,    22,    -1,   339,    -1,
      58,    -1,   366,   269,    -1,   366,   114,    -1,    85,   777,
     550,    -1,   550,    -1,   562,    -1,    73,   788,    -1,   264,
     269,    -1,   269,    -1,   422,   574,    -1,   312,   216,   574,
      -1,    67,   486,   718,   487,   557,    -1,   114,   719,    -1,
     171,   588,    36,   184,   546,    -1,   327,   775,   577,   585,
     553,    -1,   566,   547,    -1,   279,   427,   548,    -1,   552,
      -1,   579,    -1,   552,   579,    -1,   579,   552,    -1,    -1,
     283,   486,   569,   487,    -1,    -1,   279,    79,   134,    -1,
     279,    79,   119,   348,    -1,   279,    79,   311,   348,    -1,
      -1,   486,   560,   487,    -1,   262,   196,    -1,    -1,    85,
     777,   583,    -1,   583,    -1,    78,    -1,    86,    -1,   115,
      -1,   184,    -1,   195,    -1,   382,    -1,   385,    -1,    27,
      -1,   580,    -1,   560,   490,   580,    -1,   429,   194,   571,
      -1,   116,    -1,   264,   116,    -1,   198,   117,    -1,   198,
     187,    -1,   448,   556,    -1,   448,   277,    -1,   450,   277,
      -1,    -1,   486,   570,   487,    -1,   565,   192,   559,    -1,
     565,   146,   559,    -1,    -1,   792,    -1,   264,   116,    -1,
     116,    -1,   198,   187,    -1,   198,   117,    -1,   264,   431,
      -1,   262,   196,    -1,   783,   688,   554,   578,    -1,   551,
      -1,   569,   490,   551,    -1,   573,    -1,   570,   490,   573,
      -1,   783,    -1,   568,    -1,   586,    -1,   558,    -1,   792,
     475,   545,    -1,   792,    -1,   448,   564,    -1,    -1,   584,
      -1,    -1,   783,    -1,   486,   581,   487,    -1,    -1,   578,
     549,    -1,    -1,   279,   119,   548,    -1,   792,   475,   545,
      -1,   792,    -1,   792,   488,   792,   475,   545,    -1,   792,
     488,   792,    -1,   576,    -1,   581,   490,   576,    -1,   688,
      -1,   785,   789,   481,   416,    -1,   367,   785,   789,   481,
     416,    -1,    67,   486,   718,   487,   544,    -1,   422,   486,
     581,   487,   574,   544,    -1,   422,   561,   544,    -1,   312,
     216,   486,   581,   487,   574,   544,    -1,   312,   216,   561,
     544,    -1,   164,   216,   486,   581,   487,   327,   775,   577,
     585,   553,   544,    -1,   572,    -1,   584,   490,   572,    -1,
     240,   168,    -1,   240,   297,    -1,   240,   372,    -1,    -1,
     226,   775,   565,    -1,   400,    -1,   398,    -1,   230,   400,
      -1,   230,   398,    -1,   173,   400,    -1,   173,   398,    -1,
     425,    -1,    -1,    30,    -1,    54,   114,    -1,   134,   590,
     185,   149,   592,   593,    -1,   134,   590,   592,   593,    -1,
     134,   591,   185,   149,   776,   593,    -1,   134,   591,   776,
     593,    -1,   134,   594,   777,   279,   788,   593,    -1,   134,
     594,   185,   149,   777,   279,   788,   593,    -1,   394,    -1,
     360,    -1,   169,    -1,   237,    -1,   441,    -1,   241,   441,
      -1,   194,    -1,   164,   394,    -1,    74,    -1,    89,    -1,
     382,    -1,   401,   355,   296,    -1,   401,   355,   126,    -1,
     401,   355,   399,    -1,   401,   355,    82,    -1,    21,   243,
      -1,   143,   410,    -1,   152,    -1,   164,   106,   452,    -1,
     318,    -1,   352,    -1,   363,    -1,   788,    -1,   592,   490,
     788,    -1,    58,    -1,   339,    -1,    -1,   304,    -1,   349,
      -1,   410,    -1,    92,   596,   775,   597,    36,   718,    -1,
     169,    -1,   237,    -1,   486,   487,    -1,   486,   747,   487,
      -1,   515,   427,   836,   366,   526,   666,   837,   520,    -1,
      90,   611,   775,   577,   609,   600,   605,   614,   601,   536,
     606,    -1,    90,   486,   796,   487,   405,   605,   614,   536,
     606,    -1,   167,    -1,   405,    -1,   603,   121,   782,    -1,
      -1,   613,    -1,   602,   490,   613,    -1,   429,    -1,    -1,
      36,    -1,    -1,   317,    -1,    -1,   610,    -1,   486,   615,
     487,    -1,   819,    -1,   537,    -1,   479,    -1,   486,   602,
     487,    -1,    -1,   792,   607,    -1,   448,   277,    -1,    -1,
     610,   612,    -1,    -1,    50,    -1,    -1,    50,    -1,   277,
      -1,   166,    -1,   120,   604,   782,    -1,   269,   604,   782,
      -1,    94,    -1,   180,    -1,   319,   604,   782,    -1,   142,
     604,   782,    -1,   163,   319,   581,    -1,   163,   319,   479,
      -1,   163,   264,   269,   581,    -1,   163,   269,   581,    -1,
     138,   782,    -1,   819,    -1,   782,    -1,   383,    -1,   384,
      -1,   608,    -1,   615,   490,   608,    -1,   618,    -1,   617,
      -1,   486,   618,   487,    -1,   486,   617,   487,    -1,   620,
      -1,   619,   631,    -1,   619,   630,   658,   637,    -1,   619,
     630,   636,   659,    -1,   621,   619,    -1,   621,   619,   631,
      -1,   621,   619,   630,   658,   637,    -1,   621,   619,   630,
     636,   659,    -1,   620,    -1,   617,    -1,   359,   629,   771,
     624,   666,   682,   653,   657,   727,   641,    -1,   359,   628,
     772,   624,   666,   682,   653,   657,   727,   641,    -1,   665,
      -1,   394,   676,    -1,   619,   421,   627,   619,    -1,   619,
     208,   627,   619,    -1,   619,   144,   627,   619,    -1,   448,
     622,    -1,   472,   622,    -1,   448,   325,   622,    -1,   623,
      -1,   622,   490,   623,    -1,   777,   790,    36,   486,   796,
     487,    -1,   210,   625,    -1,    -1,   400,   626,   775,    -1,
     398,   626,   775,    -1,   230,   400,   626,   775,    -1,   230,
     398,   626,   775,    -1,   173,   400,   626,   775,    -1,   173,
     398,   626,   775,    -1,   425,   626,   775,    -1,   394,   775,
      -1,   775,    -1,   394,    -1,    -1,    27,    -1,   129,    -1,
      -1,   129,    -1,   129,   279,   486,   746,   487,    -1,    27,
      -1,    -1,   631,    -1,    -1,   285,    54,   632,    -1,   633,
      -1,   632,   490,   633,    -1,   718,   429,   743,   635,    -1,
     718,   634,   635,    -1,    37,    -1,   123,    -1,    -1,   471,
     159,    -1,   471,   220,    -1,    -1,   638,   639,    -1,   639,
     638,    -1,   638,    -1,   639,    -1,   636,    -1,    -1,   227,
     647,    -1,   227,   647,   490,   648,    -1,   157,   652,   649,
     651,   280,    -1,   157,   652,   651,   280,    -1,   276,   648,
      -1,   276,   649,   651,    -1,     4,   481,    -1,     9,   481,
      -1,     4,   301,    -1,     9,   301,    -1,     9,    -1,     9,
     348,    -1,   429,   350,   643,    -1,    -1,   783,    -1,    -1,
     642,   486,   640,   487,   646,    -1,   640,    -1,   640,   486,
     783,   487,    -1,   640,   486,   783,   490,     9,   487,    -1,
     396,   643,    -1,   644,    -1,    -1,   334,   486,     9,   487,
      -1,    -1,   718,    -1,    27,    -1,   718,    -1,   720,    -1,
     477,   650,    -1,   478,   650,    -1,   781,    -1,     4,    -1,
     347,    -1,   348,    -1,   159,    -1,   261,    -1,   176,    54,
     654,    -1,    -1,   655,    -1,   654,   490,   655,    -1,   718,
      -1,   656,    -1,   486,   487,    -1,   179,   718,    -1,    -1,
     660,    -1,   162,   321,   280,    -1,   658,    -1,    -1,   661,
      -1,   660,   661,    -1,   662,   663,   664,    -1,   162,   427,
      -1,   162,   262,   216,   427,    -1,   162,   369,    -1,   162,
     216,   369,    -1,   274,   774,    -1,    -1,   268,    -1,   373,
     235,    -1,    -1,   435,   486,   746,   487,    -1,   665,   490,
     486,   746,   487,    -1,   167,   667,    -1,    -1,   668,    -1,
     667,   490,   668,    -1,   676,   671,   645,    -1,   677,   672,
     645,    -1,   221,   677,   672,    -1,   617,   671,   645,    -1,
     221,   617,   671,    -1,   669,    -1,   486,   669,   487,   670,
      -1,   486,   669,   487,    -1,   668,    93,   215,   668,    -1,
     668,   673,   215,   668,   675,    -1,   668,   215,   668,   675,
      -1,   668,   258,   673,   215,   668,    -1,   668,   258,   215,
     668,    -1,    36,   783,   486,   776,   487,    -1,    36,   784,
      -1,   783,   486,   776,   487,    -1,   783,    -1,   670,    -1,
      -1,   670,    -1,    36,   486,   683,   487,    -1,    36,   783,
     486,   683,   487,    -1,   783,   486,   683,   487,    -1,    -1,
     168,   674,    -1,   224,   674,    -1,   343,   674,    -1,   200,
      -1,   288,    -1,    -1,   429,   486,   776,   487,    -1,   279,
     718,    -1,   775,    -1,   775,   479,    -1,   280,   775,    -1,
     280,   486,   775,   487,    -1,   723,   681,    -1,   348,   167,
     486,   679,   487,   681,    -1,   723,   680,    -1,   678,    -1,
     679,   490,   678,    -1,    36,   486,   683,   487,    -1,    -1,
     472,   286,    -1,    -1,   445,   718,    -1,    -1,   684,    -1,
     683,   490,   684,    -1,   783,   688,   685,    -1,    73,   788,
      -1,    -1,   783,   688,    -1,   686,   490,   783,   688,    -1,
     347,    -1,   388,    -1,   690,   689,    -1,   367,   690,   689,
      -1,   690,    35,   484,   781,   485,    -1,   367,   690,    35,
     484,   781,   485,    -1,   690,    35,    -1,   367,   690,    35,
      -1,   687,   486,   686,   487,    -1,   238,   486,   749,   487,
      -1,   689,   484,   485,    -1,   689,   484,   781,   485,    -1,
      -1,   692,    -1,   694,    -1,   696,    -1,   700,    -1,   706,
      -1,   707,   717,    -1,   707,   486,   781,   487,    -1,   694,
      -1,   697,    -1,   701,    -1,   706,    -1,   787,   693,    -1,
     486,   746,   487,    -1,    -1,   206,    -1,   207,    -1,   374,
      -1,    49,    -1,   322,    -1,   160,   695,    -1,   133,   308,
      -1,   112,   693,    -1,   111,   693,    -1,   272,   693,    -1,
      52,    -1,   486,   781,   487,    -1,    -1,   698,    -1,   699,
      -1,   698,    -1,   699,    -1,    51,   705,   486,   746,   487,
      -1,    51,   705,    -1,   702,    -1,   703,    -1,   702,    -1,
     703,    -1,   704,   486,   781,   487,    -1,   704,    -1,    65,
     705,    -1,    64,   705,    -1,   436,    -1,   257,    65,   705,
      -1,   257,    64,   705,    -1,   259,   705,    -1,   438,    -1,
      -1,   404,   486,   781,   487,   708,    -1,   404,   708,    -1,
     403,   486,   781,   487,   708,    -1,   403,   708,    -1,   209,
      -1,   472,   403,   469,    -1,   450,   403,   469,    -1,    -1,
     466,    -1,   467,    -1,   252,    -1,   253,    -1,   108,    -1,
     109,    -1,   182,    -1,   183,    -1,   248,    -1,   249,    -1,
     356,    -1,   357,    -1,   246,    -1,   247,    -1,   244,    -1,
     245,    -1,   709,    -1,   710,    -1,   711,    -1,   712,    -1,
     713,    -1,   714,    -1,   715,    -1,   716,    -1,   709,   405,
     710,    -1,   711,   405,   712,    -1,   711,   405,   713,    -1,
     711,   405,   714,    -1,   712,   405,   713,    -1,   712,   405,
     714,    -1,   713,   405,   714,    -1,    -1,   720,    -1,   718,
      11,   688,    -1,   718,    73,   788,    -1,   718,    41,   403,
     469,   718,    -1,   477,   718,    -1,   478,   718,    -1,   718,
     477,   718,    -1,   718,   478,   718,    -1,   718,   479,   718,
      -1,   718,   480,   718,    -1,   718,   481,   718,    -1,   718,
     482,   718,    -1,   718,   473,   718,    -1,   718,   474,   718,
      -1,   718,   475,   718,    -1,   718,    16,   718,    -1,   718,
      17,   718,    -1,   718,    18,   718,    -1,   718,   742,   718,
      -1,   742,   718,    -1,   718,   742,    -1,   718,    33,   718,
      -1,   718,   284,   718,    -1,   264,   718,    -1,   470,   718,
      -1,   718,   172,   718,    -1,   718,   226,   718,    -1,   718,
     226,   718,   142,   718,    -1,   718,   470,   226,   718,    -1,
     718,   470,   226,   718,   142,   718,    -1,   718,   186,   718,
      -1,   718,   186,   718,   142,   718,    -1,   718,   470,   186,
     718,    -1,   718,   470,   186,   718,   142,   718,    -1,   718,
     371,   405,   718,    -1,   718,   371,   405,   718,   142,   718,
      -1,   718,   470,   371,   405,   718,    -1,   718,   470,   371,
     405,   718,   142,   718,    -1,   718,   212,   269,    -1,   718,
     213,    -1,   718,   212,   264,   269,    -1,   718,   264,   269,
      -1,   718,   267,    -1,   738,    -1,   738,    15,   718,    -1,
     765,    15,   718,    -1,   738,   290,   738,    -1,   718,   212,
     412,    -1,   718,   212,   264,   412,    -1,   718,   212,   155,
      -1,   718,   212,   264,   155,    -1,   718,   212,   423,    -1,
     718,   212,   264,   423,    -1,   718,   212,   129,   167,   718,
      -1,   718,   212,   264,   129,   167,   718,    -1,   718,   212,
     274,   486,   749,   487,    -1,   718,   212,   264,   274,   486,
     749,   487,    -1,   718,    48,   770,   719,    33,   718,    -1,
     718,   470,    48,   770,   719,    33,   718,    -1,   718,    48,
     391,   719,    33,   718,    -1,   718,   470,    48,   391,   719,
      33,   718,    -1,   718,   191,   759,    -1,   718,   470,   191,
     759,    -1,   718,   744,   739,   617,    -1,   718,   744,   739,
     486,   718,   487,    -1,   114,    -1,   720,    -1,   719,    11,
     688,    -1,   477,   719,    -1,   478,   719,    -1,   719,   477,
     719,    -1,   719,   478,   719,    -1,   719,   479,   719,    -1,
     719,   480,   719,    -1,   719,   481,   719,    -1,   719,   482,
     719,    -1,   719,   473,   719,    -1,   719,   474,   719,    -1,
     719,   475,   719,    -1,   719,    16,   719,    -1,   719,    17,
     719,    -1,   719,    18,   719,    -1,   719,   742,   719,    -1,
     742,   719,    -1,   719,   742,    -1,   719,   212,   129,   167,
     719,    -1,   719,   212,   264,   129,   167,   719,    -1,   719,
     212,   274,   486,   749,   487,    -1,   719,   212,   264,   274,
     486,   749,   487,    -1,   765,    -1,   780,    -1,   491,   769,
      -1,    10,   769,    -1,   486,   718,   487,   769,    -1,   760,
      -1,   722,    -1,   617,    -1,   617,   768,    -1,   149,   617,
      -1,   779,   486,   487,    -1,   779,   486,   747,   630,   487,
      -1,   779,   486,   437,   748,   630,   487,    -1,   779,   486,
     747,   490,   437,   748,   630,   487,    -1,   779,   486,    27,
     747,   630,   487,    -1,   779,   486,   129,   747,   630,   487,
      -1,   779,   486,   479,   487,    -1,   721,   725,   726,   730,
      -1,   724,    -1,   721,    -1,   724,    -1,    74,   162,   486,
     718,   487,    -1,    98,    -1,   101,    -1,   101,   486,   781,
     487,    -1,   102,    -1,   102,   486,   781,   487,    -1,   231,
      -1,   231,   486,   781,   487,    -1,   232,    -1,   232,   486,
     781,   487,    -1,    99,    -1,   103,    -1,   365,    -1,   428,
      -1,    97,    -1,   100,    -1,    61,   486,   718,    36,   688,
     487,    -1,   415,   486,   718,    36,   688,   487,    -1,   154,
     486,   750,   487,    -1,   291,   486,   752,   487,    -1,   305,
     486,   754,   487,    -1,   390,   486,   755,   487,    -1,   409,
     486,   718,    36,   688,   487,    -1,   411,   486,    53,   758,
     487,    -1,   411,   486,   222,   758,   487,    -1,   411,   486,
     406,   758,   487,    -1,   411,   486,   758,   487,    -1,   270,
     486,   718,   490,   718,   487,    -1,    72,   486,   746,   487,
      -1,   449,   176,   486,   631,   487,    -1,    -1,   158,   486,
     445,   718,   487,    -1,    -1,   447,   728,    -1,    -1,   729,
      -1,   728,   490,   729,    -1,   783,    36,   731,    -1,   289,
     731,    -1,   289,   783,    -1,    -1,   486,   732,   733,   630,
     734,   487,    -1,   783,    -1,    -1,   298,    54,   746,    -1,
      -1,   320,   735,    -1,   348,   735,    -1,    -1,   736,    -1,
      48,   736,    33,   736,    -1,   418,   307,    -1,   418,   161,
      -1,    96,   347,    -1,   718,   307,    -1,   718,   161,    -1,
     347,   486,   746,   487,    -1,   347,   486,   487,    -1,   737,
      -1,   486,   746,   490,   718,   487,    -1,    34,    -1,   376,
      -1,    27,    -1,     8,    -1,   741,    -1,   477,    -1,   478,
      -1,   479,    -1,   480,    -1,   481,    -1,   482,    -1,   473,
      -1,   474,    -1,   475,    -1,    16,    -1,    17,    -1,    18,
      -1,     8,    -1,   281,   486,   745,   487,    -1,   740,    -1,
     281,   486,   745,   487,    -1,   740,    -1,   281,   486,   745,
     487,    -1,   226,    -1,   470,   226,    -1,   172,    -1,   470,
     172,    -1,   186,    -1,   470,   186,    -1,   740,    -1,   783,
     488,   745,    -1,   718,    -1,   746,   490,   718,    -1,   748,
      -1,   747,   490,   748,    -1,   718,    -1,   791,    13,   718,
      -1,   791,    14,   718,    -1,   688,    -1,   749,   490,   688,
      -1,   751,   167,   718,    -1,    -1,     3,    -1,   709,    -1,
     710,    -1,   711,    -1,   712,    -1,   713,    -1,   714,    -1,
     715,    -1,   716,    -1,   782,    -1,   718,   753,   756,   757,
      -1,   718,   753,   756,    -1,   302,   718,    -1,   719,   191,
     719,    -1,    -1,   718,   756,   757,    -1,   718,   757,   756,
      -1,   718,   756,    -1,   718,   757,    -1,   746,    -1,    -1,
     167,   718,    -1,   162,   718,    -1,   718,   167,   746,    -1,
     167,   746,    -1,   746,    -1,   617,    -1,   486,   746,   487,
      -1,    60,   764,   761,   763,   140,    -1,   762,    -1,   761,
     762,    -1,   444,   718,   402,   718,    -1,   136,   718,    -1,
      -1,   718,    -1,    -1,   783,    -1,   783,   768,    -1,   488,
     778,    -1,   488,   479,    -1,   484,   718,   485,    -1,   484,
     767,   492,   767,   485,    -1,   718,    -1,    -1,   766,    -1,
     768,   766,    -1,    -1,   769,   766,    -1,    40,    -1,    -1,
     772,    -1,    -1,   773,    -1,   772,   490,   773,    -1,   718,
      36,   793,    -1,   718,     3,    -1,   718,    -1,   479,    -1,
     775,    -1,   774,   490,   775,    -1,   783,    -1,   783,   768,
      -1,   777,    -1,   776,   490,   777,    -1,   783,    -1,   792,
      -1,   786,    -1,   783,   768,    -1,   781,    -1,     4,    -1,
     782,    -1,     6,    -1,     7,    -1,   779,   782,    -1,   779,
     486,   747,   630,   487,   782,    -1,   691,   782,    -1,   707,
     486,   718,   487,   717,    -1,   707,   781,   717,    -1,   707,
     782,   717,    -1,   412,    -1,   155,    -1,   269,    -1,     9,
      -1,     5,    -1,     3,    -1,   852,    -1,   853,    -1,   783,
      -1,     5,    -1,     3,    -1,   852,    -1,   857,    -1,     3,
      -1,   852,    -1,   854,    -1,     3,    -1,   852,    -1,   855,
      -1,   783,    -1,   783,   789,    -1,   488,   778,    -1,   789,
     488,   778,    -1,   486,   776,   487,    -1,    -1,   785,    -1,
       3,    -1,   856,    -1,   852,    -1,   858,    -1,   792,    -1,
       5,    -1,   309,   777,   795,    36,   796,    -1,   486,   749,
     487,    -1,    -1,   616,    -1,   511,    -1,   598,    -1,   835,
      -1,    92,   352,   783,   798,    -1,    92,   352,   185,   264,
     149,   783,   798,    -1,   798,   799,    -1,    -1,   543,    -1,
     800,    -1,   530,    -1,   847,    -1,    92,   806,   194,   803,
     804,   279,   775,   802,   486,   527,   487,   805,   682,    -1,
      92,   806,   194,   803,   185,   264,   149,   571,   279,   775,
     802,   486,   527,   487,   805,   682,    -1,   783,    -1,   429,
     801,    -1,    -1,    81,    -1,    -1,   571,    -1,    -1,   448,
     556,    -1,    -1,   422,    -1,    -1,    29,   394,   676,   366,
     352,   777,    -1,    29,   394,   185,   149,   676,   366,   352,
     777,    -1,    29,   360,   775,   366,   352,   777,    -1,    29,
     360,   185,   149,   775,   366,   352,   777,    -1,    29,   441,
     775,   366,   352,   777,    -1,    29,   441,   185,   149,   775,
     366,   352,   777,    -1,   163,    68,    -1,    68,    -1,   151,
     107,   782,   606,    -1,   190,   107,   782,    -1,   150,   814,
      -1,   150,   818,   812,   814,    -1,   150,   439,   814,    -1,
     150,   486,   817,   487,   814,    -1,   439,    -1,    -1,   819,
      -1,   537,    -1,    -1,   616,    -1,   511,    -1,   598,    -1,
     835,    -1,   849,    -1,     3,    -1,   852,    -1,   856,    -1,
     815,    -1,   782,    -1,   820,    -1,   817,   490,   820,    -1,
      32,    -1,    31,    -1,   412,    -1,   155,    -1,   279,    -1,
     816,    -1,   821,   813,    -1,   815,    -1,   818,    -1,   366,
     823,    -1,   366,   230,   823,    -1,   366,   364,   823,    -1,
     824,    -1,   845,   167,    96,    -1,   403,   469,   826,    -1,
     352,   782,    -1,   845,   405,   827,    -1,   845,   475,   827,
      -1,   845,   405,   114,    -1,   845,   475,   114,    -1,   819,
      -1,   537,    -1,   782,    -1,     3,    -1,   707,   782,   717,
      -1,   707,   486,   781,   487,   782,    -1,   537,    -1,   114,
      -1,   230,    -1,   825,    -1,   827,   490,   825,    -1,   229,
     829,    -1,   782,    -1,   430,   832,   834,   812,    -1,   430,
     832,   834,   812,   775,    -1,   430,   832,   834,   812,   839,
      -1,   430,   486,   833,   487,    -1,   430,   486,   833,   487,
     775,   790,    -1,   818,    -1,   439,    -1,   166,    -1,   168,
      -1,     3,    -1,   168,    -1,    -1,   831,    -1,   833,   490,
     831,    -1,   166,    -1,    -1,   515,   119,   167,   836,   838,
     837,   520,    -1,   676,    -1,   676,   783,    -1,   676,    36,
     783,    -1,   445,   718,    -1,    -1,   429,   667,    -1,    -1,
     818,   812,    -1,   818,   812,   775,   790,    -1,   337,   842,
      -1,   845,    -1,    27,    -1,   841,    -1,   403,   469,    -1,
     407,   214,   225,    -1,   844,   616,    -1,   844,   845,    -1,
     844,   403,   469,    -1,   844,   407,   214,   225,    -1,   844,
      27,    -1,   370,    -1,   124,    -1,   783,    -1,   845,   488,
     783,    -1,    56,   721,    -1,    92,   587,   441,   775,   577,
     805,    36,   616,   848,    -1,    92,   284,   335,   587,   441,
     775,   577,   805,    36,   616,   848,    -1,    92,   587,   325,
     441,   775,   486,   581,   487,   805,    36,   616,   848,    -1,
      92,   284,   335,   587,   325,   441,   775,   486,   581,   487,
     805,    36,   616,   848,    -1,   448,    67,   282,    -1,   448,
      59,    67,   282,    -1,   448,   230,    67,   282,    -1,    -1,
      92,   587,   394,   851,    36,   616,   850,    -1,    92,   587,
     394,   185,   264,   149,   851,    36,   616,   850,    -1,   448,
     106,    -1,   448,   262,   106,    -1,    -1,   775,   577,   563,
     555,    -1,    19,    -1,    20,    -1,    21,    -1,    22,    -1,
      23,    -1,    24,    -1,    25,    -1,    26,    -1,    28,    -1,
      29,    -1,    30,    -1,    38,    -1,    39,    -1,    41,    -1,
      42,    -1,    43,    -1,    45,    -1,    46,    -1,    47,    -1,
      54,    -1,    55,    -1,    56,    -1,    57,    -1,    58,    -1,
      59,    -1,    62,    -1,    63,    -1,    66,    -1,    68,    -1,
      69,    -1,    70,    -1,    71,    -1,    76,    -1,    77,    -1,
      78,    -1,    79,    -1,    80,    -1,    82,    -1,    83,    -1,
      84,    -1,    86,    -1,    87,    -1,    88,    -1,    89,    -1,
      90,    -1,    91,    -1,    94,    -1,    95,    -1,    96,    -1,
     104,    -1,   105,    -1,   106,    -1,   107,    -1,   108,    -1,
     109,    -1,   110,    -1,   113,    -1,   115,    -1,   117,    -1,
     118,    -1,   119,    -1,   120,    -1,   121,    -1,   122,    -1,
     124,    -1,   125,    -1,   126,    -1,   127,    -1,   128,    -1,
     131,    -1,   132,    -1,   133,    -1,   134,    -1,   135,    -1,
     137,    -1,   138,    -1,   139,    -1,   141,    -1,   142,    -1,
     143,    -1,   145,    -1,   146,    -1,   147,    -1,   148,    -1,
     150,    -1,   151,    -1,   152,    -1,   153,    -1,   156,    -1,
     158,    -1,   159,    -1,   161,    -1,   163,    -1,   165,    -1,
     169,    -1,   170,    -1,   171,    -1,   173,    -1,   175,    -1,
     178,    -1,   180,    -1,   181,    -1,   182,    -1,   183,    -1,
     184,    -1,   185,    -1,   187,    -1,   188,    -1,   189,    -1,
     190,    -1,   192,    -1,   193,    -1,   194,    -1,   195,    -1,
     196,    -1,   197,    -1,   199,    -1,   202,    -1,   203,    -1,
     204,    -1,   205,    -1,   211,    -1,   214,    -1,   216,    -1,
     217,    -1,   218,    -1,   219,    -1,   220,    -1,   223,    -1,
     225,    -1,   228,    -1,   229,    -1,   230,    -1,   233,    -1,
     234,    -1,   235,    -1,   236,    -1,   237,    -1,   239,    -1,
     240,    -1,   241,    -1,   242,    -1,   243,    -1,   244,    -1,
     245,    -1,   246,    -1,   247,    -1,   248,    -1,   249,    -1,
     250,    -1,   251,    -1,   252,    -1,   253,    -1,   254,    -1,
     255,    -1,   256,    -1,   260,    -1,   261,    -1,   262,    -1,
     265,    -1,   266,    -1,   268,    -1,   271,    -1,   273,    -1,
     274,    -1,   275,    -1,   277,    -1,   278,    -1,   281,    -1,
     282,    -1,   283,    -1,   286,    -1,   289,    -1,   292,    -1,
     293,    -1,   294,    -1,   295,    -1,   296,    -1,   297,    -1,
     298,    -1,   299,    -1,   300,    -1,   301,    -1,   303,    -1,
     304,    -1,   306,    -1,   307,    -1,   309,    -1,   310,    -1,
     311,    -1,   313,    -1,   314,    -1,   315,    -1,   316,    -1,
     317,    -1,   318,    -1,   319,    -1,   320,    -1,   321,    -1,
     323,    -1,   324,    -1,   325,    -1,   326,    -1,   328,    -1,
     329,    -1,   330,    -1,   331,    -1,   332,    -1,   333,    -1,
     334,    -1,   335,    -1,   336,    -1,   337,    -1,   338,    -1,
     339,    -1,   341,    -1,   342,    -1,   344,    -1,   345,    -1,
     346,    -1,   348,    -1,   349,    -1,   350,    -1,   351,    -1,
     352,    -1,   353,    -1,   354,    -1,   355,    -1,   356,    -1,
     357,    -1,   358,    -1,   360,    -1,   361,    -1,   362,    -1,
     363,    -1,   364,    -1,   366,    -1,   368,    -1,   369,    -1,
     370,    -1,   372,    -1,   373,    -1,   375,    -1,   377,    -1,
     378,    -1,   379,    -1,   380,    -1,   381,    -1,   382,    -1,
     383,    -1,   384,    -1,   385,    -1,   386,    -1,   387,    -1,
     389,    -1,   392,    -1,   393,    -1,   395,    -1,   397,    -1,
     398,    -1,   399,    -1,   400,    -1,   401,    -1,   407,    -1,
     408,    -1,   410,    -1,   413,    -1,   414,    -1,   416,    -1,
     417,    -1,   418,    -1,   419,    -1,   420,    -1,   423,    -1,
     424,    -1,   425,    -1,   426,    -1,   427,    -1,   430,    -1,
     431,    -1,   432,    -1,   433,    -1,   434,    -1,   438,    -1,
     440,    -1,   441,    -1,   442,    -1,   443,    -1,   446,    -1,
     449,    -1,   450,    -1,   451,    -1,   452,    -1,   453,    -1,
     454,    -1,   466,    -1,   467,    -1,   468,    -1,   469,    -1,
      48,    -1,    49,    -1,    51,    -1,    52,    -1,    64,    -1,
      65,    -1,    72,    -1,   111,    -1,   112,    -1,   149,    -1,
     154,    -1,   160,    -1,   177,    -1,   201,    -1,   206,    -1,
     207,    -1,   209,    -1,   238,    -1,   257,    -1,   259,    -1,
     263,    -1,   270,    -1,   272,    -1,   287,    -1,   291,    -1,
     305,    -1,   308,    -1,   322,    -1,   347,    -1,   367,    -1,
     374,    -1,   388,    -1,   390,    -1,   403,    -1,   404,    -1,
     409,    -1,   411,    -1,   415,    -1,   435,    -1,   436,    -1,
     455,    -1,   456,    -1,   457,    -1,   458,    -1,   459,    -1,
     460,    -1,   461,    -1,   462,    -1,   463,    -1,   464,    -1,
     465,    -1,    44,    -1,    50,    -1,    74,    -1,    81,    -1,
      93,    -1,   100,    -1,   166,    -1,   168,    -1,   172,    -1,
     186,    -1,   200,    -1,   212,    -1,   213,    -1,   215,    -1,
     224,    -1,   226,    -1,   238,    -1,   258,    -1,   267,    -1,
     288,    -1,   290,    -1,   343,    -1,   371,    -1,   388,    -1,
     396,    -1,   439,    -1,    44,    -1,    50,    -1,    74,    -1,
      81,    -1,    93,    -1,   100,    -1,   166,    -1,   168,    -1,
     172,    -1,   186,    -1,   200,    -1,   212,    -1,   213,    -1,
     215,    -1,   224,    -1,   226,    -1,   258,    -1,   267,    -1,
     288,    -1,   290,    -1,   343,    -1,   371,    -1,   396,    -1,
     415,    -1,   439,    -1,    48,    -1,    49,    -1,    51,    -1,
      52,    -1,    65,    -1,    64,    -1,    72,    -1,   111,    -1,
     112,    -1,   149,    -1,   154,    -1,   160,    -1,   177,    -1,
     201,    -1,   207,    -1,   209,    -1,   206,    -1,   238,    -1,
     257,    -1,   259,    -1,   263,    -1,   270,    -1,   272,    -1,
     287,    -1,   291,    -1,   305,    -1,   308,    -1,   322,    -1,
     347,    -1,   367,    -1,   374,    -1,   388,    -1,   390,    -1,
     403,    -1,   404,    -1,   409,    -1,   411,    -1,   415,    -1,
     435,    -1,   436,    -1,   455,    -1,   456,    -1,   457,    -1,
     458,    -1,   459,    -1,   460,    -1,   461,    -1,   462,    -1,
     463,    -1,   464,    -1,   465,    -1,    44,    -1,    50,    -1,
      74,    -1,    81,    -1,    93,    -1,   100,    -1,   166,    -1,
     168,    -1,   172,    -1,   186,    -1,   200,    -1,   212,    -1,
     213,    -1,   215,    -1,   224,    -1,   226,    -1,   238,    -1,
     258,    -1,   267,    -1,   288,    -1,   290,    -1,   343,    -1,
     371,    -1,   388,    -1,   396,    -1,   415,    -1,   439,    -1,
      27,    -1,    31,    -1,    32,    -1,    33,    -1,    34,    -1,
      35,    -1,    36,    -1,    37,    -1,    40,    -1,    53,    -1,
      60,    -1,    61,    -1,    67,    -1,    73,    -1,    75,    -1,
      85,    -1,    92,    -1,    97,    -1,    98,    -1,    99,    -1,
     101,    -1,   102,    -1,   103,    -1,   114,    -1,   116,    -1,
     123,    -1,   129,    -1,   130,    -1,   136,    -1,   140,    -1,
     144,    -1,   155,    -1,   157,    -1,   162,    -1,   164,    -1,
     167,    -1,   174,    -1,   176,    -1,   179,    -1,   191,    -1,
     198,    -1,   208,    -1,   210,    -1,   221,    -1,   222,    -1,
     227,    -1,   231,    -1,   232,    -1,   264,    -1,   269,    -1,
     276,    -1,   279,    -1,   280,    -1,   284,    -1,   285,    -1,
     302,    -1,   312,    -1,   327,    -1,   340,    -1,   359,    -1,
     365,    -1,   376,    -1,   391,    -1,   394,    -1,   402,    -1,
     405,    -1,   406,    -1,   412,    -1,   421,    -1,   422,    -1,
     428,    -1,   429,    -1,   437,    -1,   444,    -1,   445,    -1,
     447,    -1,   448,    -1
};

/* YYRLINE[YYN] -- source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,   456,   456,   472,   484,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   527,     9,
      18,    27,    36,    45,    54,    63,    72,    85,    87,    93,
      94,    99,   103,   107,   118,   126,   130,   139,   148,   157,
     166,   175,   184,   192,   200,   209,   218,   227,   236,   253,
     262,   271,   280,   290,   303,   318,   327,   335,   350,   358,
     368,   378,   385,   392,   400,   407,   418,   419,   424,   428,
     433,   438,   446,   447,   452,   456,   457,     7,    13,    19,
      25,     6,    15,    25,    35,    45,    55,    65,    75,    85,
      95,   106,   117,   127,   140,   141,     8,    21,    27,    34,
      40,    47,    57,    61,    70,    79,    88,    95,    96,   101,
     113,   118,   143,   153,   163,   169,   180,   191,   206,   207,
     213,   214,   219,   220,   226,   227,   231,   232,   237,   239,
     245,   246,   250,   251,   256,     7,    14,    22,     9,    19,
      32,    33,     7,    14,    31,    51,    52,     9,    17,    29,
      30,    34,    35,    36,    41,    42,    43,    48,    52,    56,
      60,    64,    68,    72,    76,    80,    84,    88,    92,    97,
     101,   105,   112,   113,   117,   118,   119,     2,     9,    15,
      21,    28,    35,    45,    46,    47,     7,    21,    41,    42,
      69,    70,    71,    72,    73,    74,    78,    79,    84,    89,
      90,    91,    92,    93,    98,   105,   106,   107,   124,   131,
     138,   148,   158,   170,   179,   188,   207,   214,   219,   221,
     223,   225,   228,   233,   234,   238,   239,   240,   241,   246,
     250,   251,   256,   263,   268,   269,   270,   271,   272,   273,
     274,   275,   281,   282,   286,   291,   298,   305,   312,   324,
     325,   326,   327,   331,   336,   337,   338,   343,   348,   349,
     350,   351,   352,   353,   358,   381,   385,   392,   393,   397,
     401,   402,   403,   407,   411,   419,   420,   425,   426,   430,
     438,   439,   444,   445,   449,   454,   458,   462,   467,   475,
     476,   480,   481,   487,   498,   511,   525,   539,   553,   567,
     590,   594,   601,   605,   613,   618,   625,   635,   636,   637,
     638,   639,   646,   653,   654,   659,   660,     9,    19,    29,
      39,    49,    59,    73,    74,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    86,    87,    92,    93,
      94,    95,    96,    97,    98,   103,   104,   109,   110,   111,
     116,   117,   118,     7,    18,    19,    23,    27,     7,     1,
      30,    53,    54,    59,    63,    68,    72,    80,    81,    85,
      86,    91,    92,    96,    97,   102,   103,   104,   105,   106,
     111,   119,   123,   128,   129,   134,   138,   143,   147,   151,
     155,   159,   163,   167,   171,   175,   179,   183,   187,   191,
     195,   203,   209,   210,   211,   216,   220,    47,    48,    52,
      53,    68,    69,    76,    84,    92,   100,   108,   116,   127,
     128,   155,   170,   186,   187,   206,   210,   214,   231,   238,
     245,   255,   256,   259,   271,   282,   290,   295,   300,   305,
     310,   318,   326,   331,   336,   343,   344,   348,   349,   350,
     357,   358,   362,   363,   367,   368,   372,   376,   377,   380,
     389,   400,   401,   402,   405,   406,   407,   411,   412,   413,
     414,   418,   419,   423,   425,   441,   443,   448,   451,   459,
     463,   467,   471,   475,   479,   486,   491,   498,   499,   503,
     507,   511,   515,   522,   529,   530,   535,   536,   540,   541,
     549,   569,   570,   572,   577,   578,   582,   583,   586,   587,
     612,   613,   617,   618,   622,   623,   627,   640,   641,   645,
     646,   650,   651,   655,   656,   660,   671,   672,   673,   674,
     678,   679,   684,   685,   686,   695,   701,   719,   720,   724,
     725,   731,   737,   745,   753,   789,   815,   819,   845,   849,
     862,   876,   891,   903,   919,   925,   930,   936,   943,   944,
     952,   956,   960,   966,   973,   978,   979,   980,   981,   985,
     986,   998,   999,  1004,  1011,  1018,  1025,  1057,  1068,  1081,
    1086,  1087,  1090,  1091,  1094,  1095,  1100,  1101,  1106,  1110,
    1116,  1137,  1145,  1158,  1161,  1165,  1165,  1167,  1172,  1179,
    1184,  1190,  1195,  1201,  1206,  1214,  1216,  1219,  1223,  1224,
    1225,  1226,  1227,  1228,  1233,  1253,  1254,  1255,  1256,  1267,
    1281,  1282,  1288,  1293,  1298,  1303,  1308,  1313,  1318,  1323,
    1329,  1335,  1341,  1348,  1370,  1379,  1383,  1391,  1395,  1403,
    1415,  1436,  1440,  1446,  1450,  1463,  1471,  1481,  1483,  1485,
    1487,  1489,  1491,  1496,  1497,  1504,  1513,  1521,  1530,  1541,
    1549,  1550,  1551,  1555,  1555,  1558,  1558,  1561,  1561,  1564,
    1564,  1567,  1567,  1570,  1570,  1573,  1573,  1576,  1576,  1579,
    1581,  1583,  1585,  1587,  1589,  1591,  1593,  1595,  1600,  1605,
    1611,  1618,  1623,  1629,  1635,  1666,  1668,  1670,  1678,  1693,
    1695,  1697,  1699,  1701,  1703,  1705,  1707,  1709,  1711,  1713,
    1715,  1717,  1719,  1722,  1724,  1726,  1729,  1731,  1733,  1735,
    1738,  1743,  1748,  1755,  1760,  1767,  1772,  1780,  1785,  1794,
    1802,  1810,  1818,  1836,  1844,  1852,  1860,  1868,  1876,  1880,
    1888,  1896,  1912,  1920,  1928,  1936,  1944,  1952,  1960,  1964,
    1968,  1972,  1976,  1984,  1992,  2000,  2008,  2028,  2050,  2061,
    2068,  2093,  2095,  2097,  2099,  2101,  2103,  2105,  2107,  2109,
    2111,  2113,  2115,  2117,  2119,  2121,  2123,  2125,  2127,  2129,
    2131,  2135,  2139,  2143,  2157,  2158,  2159,  2171,  2186,  2198,
    2200,  2202,  2213,  2237,  2250,  2254,  2260,  2267,  2274,  2284,
    2291,  2319,  2354,  2365,  2366,  2373,  2379,  2383,  2387,  2391,
    2395,  2399,  2403,  2407,  2411,  2415,  2419,  2423,  2427,  2431,
    2435,  2439,  2441,  2443,  2447,  2456,  2461,  2468,  2483,  2490,
    2494,  2498,  2502,  2506,  2520,  2521,  2525,  2526,  2534,  2535,
    2539,  2540,  2545,  2553,  2555,  2569,  2572,  2599,  2600,  2603,
    2604,  2615,  2633,  2640,  2649,  2666,  2711,  2719,  2727,  2735,
    2743,  2764,  2765,  2768,  2769,  2772,  2773,  2774,  2777,  2778,
    2781,  2782,  2783,  2784,  2785,  2786,  2787,  2788,  2789,  2790,
    2791,  2792,  2795,  2797,  2802,  2804,  2809,  2811,  2813,  2815,
    2817,  2819,  2821,  2823,  2837,  2839,  2843,  2847,  2854,  2858,
    2864,  2868,  2877,  2888,  2889,  2893,  2897,  2904,  2905,  2906,
    2907,  2908,  2909,  2910,  2911,  2912,  2913,  2923,  2927,  2934,
    2941,  2942,  2958,  2962,  2967,  2971,  2986,  2991,  2995,  2998,
    3001,  3002,  3003,  3006,  3013,  3023,  3037,  3038,  3042,  3053,
    3054,  3057,  3058,  3061,  3065,  3072,  3076,  3080,  3088,  3099,
    3100,  3104,  3105,  3109,  3110,  3113,  3114,  3124,  3125,  3129,
    3130,  3133,  3149,  3157,  3165,  3187,  3188,  3199,  3203,  3230,
    3232,  3237,  3239,  3249,  3252,  3263,  3267,  3271,  3275,  3279,
    3288,  3295,  3327,  3331,  3335,  3339,  3343,  3347,  3351,  3357,
    3358,  3374,  3375,  3376,  3379,  3380,  3386,  3387,  3388,  3391,
    3392,  3393,  3396,  3397,  3398,  3401,  3402,  3405,  3407,  3412,
    3413,  3416,  3424,  3425,  3426,  3427,  3430,  3431,     7,    18,
      19,    23,    24,    25,    26,     7,    16,    34,    41,    46,
      47,    48,    49,     8,    33,    62,    66,    67,    72,    73,
      78,    79,    83,    84,    89,    90,     7,    16,    25,    34,
      43,    52,     5,    11,     7,    20,     9,    16,    26,    33,
      44,    45,    50,    51,    52,    57,    58,    59,    60,    61,
      65,    66,    67,    72,    73,    78,    82,    90,    91,    96,
      97,    98,   104,   109,   117,   118,    10,    16,    22,    32,
      33,    41,    52,    64,    72,    80,    87,    97,    99,   105,
     109,   113,   128,   135,   136,   137,   141,   142,     7,    16,
       8,    22,    36,    48,    56,    70,    71,    72,    73,    74,
      87,    88,    93,    94,    98,    99,     7,    21,    25,    32,
      43,    44,    50,    51,     9,    19,     2,     7,    14,    24,
      25,    32,     3,    10,    16,    22,    28,    37,    37,    39,
      40,     6,     8,    21,    34,    52,    74,    75,    76,    77,
      11,    24,    41,    42,    43,    48,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    63,    63,    63,    63,
      63,    63,    63,    63,    63,    63,    63,    63,    63,    63,
      63,    63,    63,    63,    63,    63,    63,    63,    63,    63,
      63,    63,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    65,    65,    65,
      65,    65,    65,    65,    65,    65,    65,    65,    65,    65,
      65,    65,    65,    65,    65,    65,    65,    65,    65,    65,
      65,    65,    65,    65,    65,    65,    65,    65,    65,    65,
      65,    65,    65,    65,    65,    65,    65,    65,    65,    65,
      65,    65,    65,    65,    65,    65,    65,    65,    66,    66,
      66,    66,    66,    66,    66,    66,    66,    66,    66,    66,
      66,    66,    66,    66,    66,    66,    66,    66,    66,    66,
      66,    66,    66,    66,    66,    67,    67,    67,    67,    67,
      67,    67,    67,    67,    67,    67,    67,    67,    67,    67,
      67,    67,    67,    67,    67,    67,    67,    67,    67,    67,
      67,    67,    67,    67,    67,    67,    67,    67,    67,    67,
      67,    67,    67,    67,    67,    67,    67,    67,    67,    67,
      67,    67,    67,    67,    67,    67,    67,    67,    67,    67,
      67,    67,    67,    67,    67,    67,    67,    67,    67,    67,
      67,    67,    67,    67,    67,    67,    67,    67,    67,    67,
      67,    67
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || YYTOKEN_TABLE
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "IDENT", "FCONST", "SCONST", "BCONST",
  "XCONST", "Op", "ICONST", "PARAM", "TYPECAST", "DOT_DOT", "COLON_EQUALS",
  "EQUALS_GREATER", "LAMBDA_ARROW", "LESS_EQUALS", "GREATER_EQUALS",
  "NOT_EQUALS", "ABORT_P", "ABSOLUTE_P", "ACCESS", "ACTION", "ADD_P",
  "ADMIN", "AFTER", "AGGREGATE", "ALL", "ALSO", "ALTER", "ALWAYS",
  "ANALYSE", "ANALYZE", "AND", "ANY", "ARRAY", "AS", "ASC_P", "ASSERTION",
  "ASSIGNMENT", "ASYMMETRIC", "AT", "ATTACH", "ATTRIBUTE", "AUTHORIZATION",
  "BACKWARD", "BEFORE", "BEGIN_P", "BETWEEN", "BIGINT", "BINARY", "BIT",
  "BOOLEAN_P", "BOTH", "BY", "CACHE", "CALL_P", "CALLED", "CASCADE",
  "CASCADED", "CASE", "CAST", "CATALOG_P", "CHAIN", "CHAR_P", "CHARACTER",
  "CHARACTERISTICS", "CHECK_P", "CHECKPOINT", "CLASS", "CLOSE", "CLUSTER",
  "COALESCE", "COLLATE", "COLLATION", "COLUMN", "COLUMNS", "COMMENT",
  "COMMENTS", "COMMIT", "COMMITTED", "CONCURRENTLY", "CONFIGURATION",
  "CONFLICT", "CONNECTION", "CONSTRAINT", "CONSTRAINTS", "CONTENT_P",
  "CONTINUE_P", "CONVERSION_P", "COPY", "COST", "CREATE_P", "CROSS", "CSV",
  "CUBE", "CURRENT_P", "CURRENT_CATALOG", "CURRENT_DATE", "CURRENT_ROLE",
  "CURRENT_SCHEMA", "CURRENT_TIME", "CURRENT_TIMESTAMP", "CURRENT_USER",
  "CURSOR", "CYCLE", "DATA_P", "DATABASE", "DAY_P", "DAYS_P", "DEALLOCATE",
  "DEC", "DECIMAL_P", "DECLARE", "DEFAULT", "DEFAULTS", "DEFERRABLE",
  "DEFERRED", "DEFINER", "DELETE_P", "DELIMITER", "DELIMITERS", "DEPENDS",
  "DESC_P", "DESCRIBE", "DETACH", "DICTIONARY", "DISABLE_P", "DISCARD",
  "DISTINCT", "DO", "DOCUMENT_P", "DOMAIN_P", "DOUBLE_P", "DROP", "EACH",
  "ELSE", "ENABLE_P", "ENCODING", "ENCRYPTED", "END_P", "ENUM_P", "ESCAPE",
  "EVENT", "EXCEPT", "EXCLUDE", "EXCLUDING", "EXCLUSIVE", "EXECUTE",
  "EXISTS", "EXPLAIN", "EXPORT_P", "EXTENSION", "EXTERNAL", "EXTRACT",
  "FALSE_P", "FAMILY", "FETCH", "FILTER", "FIRST_P", "FLOAT_P",
  "FOLLOWING", "FOR", "FORCE", "FOREIGN", "FORWARD", "FREEZE", "FROM",
  "FULL", "FUNCTION", "FUNCTIONS", "GENERATED", "GLOB", "GLOBAL", "GRANT",
  "GRANTED", "GROUP_P", "GROUPING", "HANDLER", "HAVING", "HEADER_P",
  "HOLD", "HOUR_P", "HOURS_P", "IDENTITY_P", "IF_P", "ILIKE", "IMMEDIATE",
  "IMMUTABLE", "IMPLICIT_P", "IMPORT_P", "IN_P", "INCLUDING", "INCREMENT",
  "INDEX", "INDEXES", "INHERIT", "INHERITS", "INITIALLY", "INLINE_P",
  "INNER_P", "INOUT", "INPUT_P", "INSENSITIVE", "INSERT", "INSTEAD",
  "INT_P", "INTEGER", "INTERSECT", "INTERVAL", "INTO", "INVOKER", "IS",
  "ISNULL", "ISOLATION", "JOIN", "KEY", "LABEL", "LANGUAGE", "LARGE_P",
  "LAST_P", "LATERAL_P", "LEADING", "LEAKPROOF", "LEFT", "LEVEL", "LIKE",
  "LIMIT", "LISTEN", "LOAD", "LOCAL", "LOCALTIME", "LOCALTIMESTAMP",
  "LOCATION", "LOCK_P", "LOCKED", "LOGGED", "MACRO", "MAP", "MAPPING",
  "MATCH", "MATERIALIZED", "MAXVALUE", "METHOD", "MICROSECOND_P",
  "MICROSECONDS_P", "MILLISECOND_P", "MILLISECONDS_P", "MINUTE_P",
  "MINUTES_P", "MINVALUE", "MODE", "MONTH_P", "MONTHS_P", "MOVE", "NAME_P",
  "NAMES", "NATIONAL", "NATURAL", "NCHAR", "NEW", "NEXT", "NO", "NONE",
  "NOT", "NOTHING", "NOTIFY", "NOTNULL", "NOWAIT", "NULL_P", "NULLIF",
  "NULLS_P", "NUMERIC", "OBJECT_P", "OF", "OFF", "OFFSET", "OIDS", "OLD",
  "ON", "ONLY", "OPERATOR", "OPTION", "OPTIONS", "OR", "ORDER",
  "ORDINALITY", "OUT_P", "OUTER_P", "OVER", "OVERLAPS", "OVERLAY",
  "OVERRIDING", "OWNED", "OWNER", "PARALLEL", "PARSER", "PARTIAL",
  "PARTITION", "PASSING", "PASSWORD", "PERCENT", "PLACING", "PLANS",
  "POLICY", "POSITION", "PRAGMA_P", "PRECEDING", "PRECISION", "PREPARE",
  "PREPARED", "PRESERVE", "PRIMARY", "PRIOR", "PRIVILEGES", "PROCEDURAL",
  "PROCEDURE", "PROGRAM", "PUBLICATION", "QUOTE", "RANGE", "READ_P",
  "REAL", "REASSIGN", "RECHECK", "RECURSIVE", "REF", "REFERENCES",
  "REFERENCING", "REFRESH", "REINDEX", "RELATIVE_P", "RELEASE", "RENAME",
  "REPEATABLE", "REPLACE", "REPLICA", "RESET", "RESTART", "RESTRICT",
  "RETURNING", "RETURNS", "REVOKE", "RIGHT", "ROLE", "ROLLBACK", "ROLLUP",
  "ROW", "ROWS", "RULE", "SAMPLE", "SAVEPOINT", "SCHEMA", "SCHEMAS",
  "SCROLL", "SEARCH", "SECOND_P", "SECONDS_P", "SECURITY", "SELECT",
  "SEQUENCE", "SEQUENCES", "SERIALIZABLE", "SERVER", "SESSION",
  "SESSION_USER", "SET", "SETOF", "SETS", "SHARE", "SHOW", "SIMILAR",
  "SIMPLE", "SKIP", "SMALLINT", "SNAPSHOT", "SOME", "SQL_P", "STABLE",
  "STANDALONE_P", "START", "STATEMENT", "STATISTICS", "STDIN", "STDOUT",
  "STORAGE", "STRICT_P", "STRIP_P", "STRUCT", "SUBSCRIPTION", "SUBSTRING",
  "SYMMETRIC", "SYSID", "SYSTEM_P", "TABLE", "TABLES", "TABLESAMPLE",
  "TABLESPACE", "TEMP", "TEMPLATE", "TEMPORARY", "TEXT_P", "THEN", "TIME",
  "TIMESTAMP", "TO", "TRAILING", "TRANSACTION", "TRANSFORM", "TREAT",
  "TRIGGER", "TRIM", "TRUE_P", "TRUNCATE", "TRUSTED", "TRY_CAST", "TYPE_P",
  "TYPES_P", "UNBOUNDED", "UNCOMMITTED", "UNENCRYPTED", "UNION", "UNIQUE",
  "UNKNOWN", "UNLISTEN", "UNLOGGED", "UNTIL", "UPDATE", "USER", "USING",
  "VACUUM", "VALID", "VALIDATE", "VALIDATOR", "VALUE_P", "VALUES",
  "VARCHAR", "VARIADIC", "VARYING", "VERBOSE", "VERSION_P", "VIEW",
  "VIEWS", "VOLATILE", "WHEN", "WHERE", "WHITESPACE_P", "WINDOW", "WITH",
  "WITHIN", "WITHOUT", "WORK", "WRAPPER", "WRITE_P", "XML_P",
  "XMLATTRIBUTES", "XMLCONCAT", "XMLELEMENT", "XMLEXISTS", "XMLFOREST",
  "XMLNAMESPACES", "XMLPARSE", "XMLPI", "XMLROOT", "XMLSERIALIZE",
  "XMLTABLE", "YEAR_P", "YEARS_P", "YES_P", "ZONE", "NOT_LA", "NULLS_LA",
  "WITH_LA", "'<'", "'>'", "'='", "POSTFIXOP", "'+'", "'-'", "'*'", "'/'",
  "'%'", "'^'", "UMINUS", "'['", "']'", "'('", "')'", "'.'", "';'", "','",
  "'?'", "':'", "$accept", "stmtblock", "stmtmulti", "stmt",
  "AlterTableStmt", "alter_identity_column_option_list",
  "alter_column_default", "alter_identity_column_option",
  "alter_generic_option_list", "alter_table_cmd", "alter_using",
  "alter_generic_option_elem", "alter_table_cmds", "alter_generic_options",
  "opt_set_data", "DeallocateStmt", "RenameStmt", "opt_column",
  "InsertStmt", "insert_rest", "insert_target", "opt_conf_expr",
  "opt_with_clause", "insert_column_item", "set_clause", "opt_on_conflict",
  "index_elem", "returning_clause", "override_kind", "set_target_list",
  "opt_collate", "opt_class", "insert_column_list", "set_clause_list",
  "index_params", "set_target", "PragmaStmt", "CreateSeqStmt",
  "OptSeqOptList", "ExecuteStmt", "execute_param_clause", "AlterSeqStmt",
  "SeqOptList", "opt_with", "NumericOnly", "SeqOptElem", "opt_by",
  "SignedIconst", "TransactionStmt", "opt_transaction", "CreateStmt",
  "ConstraintAttributeSpec", "def_arg", "OptParenthesizedSeqOptList",
  "generic_option_arg", "key_action", "ColConstraint", "ColConstraintElem",
  "generic_option_elem", "key_update", "key_actions",
  "create_generic_options", "OnCommitOption", "reloptions",
  "opt_no_inherit", "TableConstraint", "TableLikeOption", "reloption_list",
  "ExistingIndex", "ConstraintAttr", "OptWith", "definition",
  "TableLikeOptionList", "generic_option_name", "ConstraintAttributeElem",
  "columnDef", "generic_option_list", "def_list", "index_name",
  "TableElement", "def_elem", "opt_definition", "OptTableElementList",
  "columnElem", "opt_column_list", "ColQualList", "key_delete",
  "reloption_elem", "columnList", "func_type", "ConstraintElem",
  "TableElementList", "key_match", "TableLikeClause", "OptTemp",
  "generated_when", "DropStmt", "drop_type_any_name", "drop_type_name",
  "any_name_list", "opt_drop_behavior", "drop_type_name_on_any_name",
  "CreateFunctionStmt", "macro_alias", "param_list", "UpdateStmt",
  "CopyStmt", "copy_from", "copy_delimiter", "copy_generic_opt_arg_list",
  "opt_using", "opt_as", "opt_program", "copy_options",
  "copy_generic_opt_arg", "copy_generic_opt_elem", "opt_oids",
  "copy_opt_list", "opt_binary", "copy_opt_item",
  "copy_generic_opt_arg_list_item", "copy_file_name",
  "copy_generic_opt_list", "SelectStmt", "select_with_parens",
  "select_no_parens", "select_clause", "simple_select", "with_clause",
  "cte_list", "common_table_expr", "into_clause", "OptTempTableName",
  "opt_table", "all_or_distinct", "distinct_clause", "opt_all_clause",
  "opt_sort_clause", "sort_clause", "sortby_list", "sortby",
  "opt_asc_desc", "opt_nulls_order", "select_limit", "opt_select_limit",
  "limit_clause", "offset_clause", "sample_count", "sample_clause",
  "opt_sample_func", "tablesample_entry", "tablesample_clause",
  "opt_tablesample_clause", "opt_repeatable_clause", "select_limit_value",
  "select_offset_value", "select_fetch_first_value", "I_or_F_const",
  "row_or_rows", "first_or_next", "group_clause", "group_by_list",
  "group_by_item", "empty_grouping_set", "having_clause",
  "for_locking_clause", "opt_for_locking_clause", "for_locking_items",
  "for_locking_item", "for_locking_strength", "locked_rels_list",
  "opt_nowait_or_skip", "values_clause", "from_clause", "from_list",
  "table_ref", "joined_table", "alias_clause", "opt_alias_clause",
  "func_alias_clause", "join_type", "join_outer", "join_qual",
  "relation_expr", "func_table", "rowsfrom_item", "rowsfrom_list",
  "opt_col_def_list", "opt_ordinality", "where_clause",
  "TableFuncElementList", "TableFuncElement", "opt_collate_clause",
  "colid_type_list", "RowOrStruct", "Typename", "opt_array_bounds",
  "SimpleTypename", "ConstTypename", "GenericType", "opt_type_modifiers",
  "Numeric", "opt_float", "Bit", "ConstBit", "BitWithLength",
  "BitWithoutLength", "Character", "ConstCharacter", "CharacterWithLength",
  "CharacterWithoutLength", "character", "opt_varying", "ConstDatetime",
  "ConstInterval", "opt_timezone", "year_keyword", "month_keyword",
  "day_keyword", "hour_keyword", "minute_keyword", "second_keyword",
  "millisecond_keyword", "microsecond_keyword", "opt_interval", "a_expr",
  "b_expr", "c_expr", "func_application", "func_expr",
  "func_expr_windowless", "func_expr_common_subexpr",
  "within_group_clause", "filter_clause", "window_clause",
  "window_definition_list", "window_definition", "over_clause",
  "window_specification", "opt_existing_window_name",
  "opt_partition_clause", "opt_frame_clause", "frame_extent",
  "frame_bound", "qualified_row", "row", "sub_type", "all_Op", "MathOp",
  "qual_Op", "qual_all_Op", "subquery_Op", "any_operator", "expr_list",
  "func_arg_list", "func_arg_expr", "type_list", "extract_list",
  "extract_arg", "overlay_list", "overlay_placing", "position_list",
  "substr_list", "substr_from", "substr_for", "trim_list", "in_expr",
  "case_expr", "when_clause_list", "when_clause", "case_default",
  "case_arg", "columnref", "indirection_el", "opt_slice_bound",
  "indirection", "opt_indirection", "opt_asymmetric", "opt_target_list",
  "target_list", "target_el", "qualified_name_list", "qualified_name",
  "name_list", "name", "attr_name", "func_name", "AexprConst", "Iconst",
  "Sconst", "ColId", "ColIdOrString", "type_function_name",
  "function_name_token", "type_name_token", "any_name", "attrs",
  "opt_name_list", "param_name", "ColLabel", "ColLabelOrString",
  "PrepareStmt", "prep_type_clause", "PreparableStmt", "CreateSchemaStmt",
  "OptSchemaEltList", "schema_stmt", "IndexStmt", "access_method",
  "access_method_clause", "opt_concurrently", "opt_index_name",
  "opt_reloptions", "opt_unique", "AlterObjectSchemaStmt",
  "CheckPointStmt", "ExportStmt", "ImportStmt", "ExplainStmt",
  "opt_verbose", "explain_option_arg", "ExplainableStmt",
  "NonReservedWord", "NonReservedWord_or_Sconst", "explain_option_list",
  "analyze_keyword", "opt_boolean_or_string", "explain_option_elem",
  "explain_option_name", "VariableSetStmt", "set_rest", "generic_set",
  "var_value", "zone_value", "var_list", "LoadStmt", "file_name",
  "VacuumStmt", "vacuum_option_elem", "opt_full", "vacuum_option_list",
  "opt_freeze", "DeleteStmt", "relation_expr_opt_alias",
  "where_or_current_clause", "using_clause", "AnalyzeStmt",
  "VariableResetStmt", "generic_reset", "reset_rest", "VariableShowStmt",
  "show_or_describe", "var_name", "CallStmt", "ViewStmt",
  "opt_check_option", "CreateAsStmt", "opt_with_data", "create_as_target",
  "unreserved_keyword", "col_name_keyword", "func_name_keyword",
  "type_name_keyword", "other_keyword", "type_func_name_keyword",
  "reserved_keyword", 0
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[YYLEX-NUM] -- Internal token number corresponding to
   token YYLEX-NUM.  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,    60,    62,    61,   728,    43,    45,    42,
      47,    37,    94,   729,    91,    93,    40,    41,    46,    59,
      44,    63,    58
};
# endif

/* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   493,   494,   495,   495,   496,   496,   496,   496,   496,
     496,   496,   496,   496,   496,   496,   496,   496,   496,   496,
     496,   496,   496,   496,   496,   496,   496,   496,   496,   496,
     496,   496,   496,   496,   496,   496,   496,   496,   496,   497,
     497,   497,   497,   497,   497,   497,   497,   498,   498,   499,
     499,   500,   500,   500,   500,   501,   501,   502,   502,   502,
     502,   502,   502,   502,   502,   502,   502,   502,   502,   502,
     502,   502,   502,   502,   502,   502,   502,   502,   502,   502,
     502,   502,   502,   502,   502,   502,   503,   503,   504,   504,
     504,   504,   505,   505,   506,   507,   507,   508,   508,   508,
     508,   509,   509,   509,   509,   509,   509,   509,   509,   509,
     509,   509,   509,   509,   510,   510,   511,   512,   512,   512,
     512,   512,   513,   513,   514,   514,   514,   515,   515,   516,
     517,   517,   518,   518,   518,   519,   519,   519,   520,   520,
     521,   521,   522,   522,   523,   523,   524,   524,   525,   525,
     526,   526,   527,   527,   528,   529,   529,   529,   530,   530,
     531,   531,   532,   532,   532,   533,   533,   534,   534,   535,
     535,   536,   536,   536,   537,   537,   537,   537,   538,   538,
     538,   538,   538,   538,   538,   538,   538,   538,   538,   538,
     538,   538,   539,   539,   540,   540,   540,   541,   541,   541,
     541,   541,   541,   542,   542,   542,   543,   543,   544,   544,
     545,   545,   545,   545,   545,   545,   546,   546,   547,   548,
     548,   548,   548,   548,   549,   549,   549,   549,   550,   550,
     550,   550,   550,   550,   550,   550,   551,   552,   553,   553,
     553,   553,   553,   554,   554,   555,   555,   555,   555,   556,
     557,   557,   558,   558,   559,   559,   559,   559,   559,   559,
     559,   559,   560,   560,   561,   562,   562,   562,   562,   563,
     563,   563,   563,   564,   565,   565,   565,   566,   567,   567,
     567,   567,   567,   567,   568,   569,   569,   570,   570,   571,
     572,   572,   572,   573,   573,   574,   574,   575,   575,   576,
     577,   577,   578,   578,   579,   580,   580,   580,   580,   581,
     581,   582,   582,   582,   583,   583,   583,   583,   583,   583,
     584,   584,   585,   585,   585,   585,   586,   587,   587,   587,
     587,   587,   587,   587,   587,   588,   588,   589,   589,   589,
     589,   589,   589,   590,   590,   590,   590,   590,   590,   590,
     590,   590,   590,   590,   590,   590,   590,   590,   591,   591,
     591,   591,   591,   591,   591,   592,   592,   593,   593,   593,
     594,   594,   594,   595,   596,   596,   597,   597,   598,   599,
     599,   600,   600,   601,   601,   602,   602,   603,   603,   604,
     604,   605,   605,   606,   606,   607,   607,   607,   607,   607,
     608,   609,   609,   610,   610,   611,   611,   612,   612,   612,
     612,   612,   612,   612,   612,   612,   612,   612,   612,   612,
     612,   613,   614,   614,   614,   615,   615,   616,   616,   617,
     617,   618,   618,   618,   618,   618,   618,   618,   618,   619,
     619,   620,   620,   620,   620,   620,   620,   620,   621,   621,
     621,   622,   622,   623,   624,   624,   625,   625,   625,   625,
     625,   625,   625,   625,   625,   626,   626,   627,   627,   627,
     628,   628,   629,   629,   630,   630,   631,   632,   632,   633,
     633,   634,   634,   634,   635,   635,   635,   636,   636,   636,
     636,   637,   637,   638,   638,   638,   638,   639,   639,   640,
     640,   640,   640,   640,   640,   641,   641,   642,   642,   643,
     643,   643,   643,   644,   645,   645,   646,   646,   647,   647,
     648,   649,   649,   649,   650,   650,   651,   651,   652,   652,
     653,   653,   654,   654,   655,   655,   656,   657,   657,   658,
     658,   659,   659,   660,   660,   661,   662,   662,   662,   662,
     663,   663,   664,   664,   664,   665,   665,   666,   666,   667,
     667,   668,   668,   668,   668,   668,   668,   668,   669,   669,
     669,   669,   669,   669,   670,   670,   670,   670,   671,   671,
     672,   672,   672,   672,   672,   673,   673,   673,   673,   674,
     674,   675,   675,   676,   676,   676,   676,   677,   677,   678,
     679,   679,   680,   680,   681,   681,   682,   682,   683,   683,
     684,   685,   685,   686,   686,   687,   687,   688,   688,   688,
     688,   688,   688,   688,   688,   689,   689,   689,   690,   690,
     690,   690,   690,   690,   690,   691,   691,   691,   691,   692,
     693,   693,   694,   694,   694,   694,   694,   694,   694,   694,
     694,   694,   694,   695,   695,   696,   696,   697,   697,   698,
     699,   700,   700,   701,   701,   702,   703,   704,   704,   704,
     704,   704,   704,   705,   705,   706,   706,   706,   706,   707,
     708,   708,   708,   709,   709,   710,   710,   711,   711,   712,
     712,   713,   713,   714,   714,   715,   715,   716,   716,   717,
     717,   717,   717,   717,   717,   717,   717,   717,   717,   717,
     717,   717,   717,   717,   717,   718,   718,   718,   718,   718,
     718,   718,   718,   718,   718,   718,   718,   718,   718,   718,
     718,   718,   718,   718,   718,   718,   718,   718,   718,   718,
     718,   718,   718,   718,   718,   718,   718,   718,   718,   718,
     718,   718,   718,   718,   718,   718,   718,   718,   718,   718,
     718,   718,   718,   718,   718,   718,   718,   718,   718,   718,
     718,   718,   718,   718,   718,   718,   718,   718,   718,   718,
     718,   719,   719,   719,   719,   719,   719,   719,   719,   719,
     719,   719,   719,   719,   719,   719,   719,   719,   719,   719,
     719,   719,   719,   719,   720,   720,   720,   720,   720,   720,
     720,   720,   720,   720,   721,   721,   721,   721,   721,   721,
     721,   722,   722,   723,   723,   724,   724,   724,   724,   724,
     724,   724,   724,   724,   724,   724,   724,   724,   724,   724,
     724,   724,   724,   724,   724,   724,   724,   724,   724,   724,
     724,   724,   724,   724,   725,   725,   726,   726,   727,   727,
     728,   728,   729,   730,   730,   730,   731,   732,   732,   733,
     733,   734,   734,   734,   735,   735,   736,   736,   736,   736,
     736,   737,   737,   738,   738,   739,   739,   739,   740,   740,
     741,   741,   741,   741,   741,   741,   741,   741,   741,   741,
     741,   741,   742,   742,   743,   743,   744,   744,   744,   744,
     744,   744,   744,   744,   745,   745,   746,   746,   747,   747,
     748,   748,   748,   749,   749,   750,   750,   751,   751,   751,
     751,   751,   751,   751,   751,   751,   751,   752,   752,   753,
     754,   754,   755,   755,   755,   755,   755,   755,   756,   757,
     758,   758,   758,   759,   759,   760,   761,   761,   762,   763,
     763,   764,   764,   765,   765,   766,   766,   766,   766,   767,
     767,   768,   768,   769,   769,   770,   770,   771,   771,   772,
     772,   773,   773,   773,   773,   774,   774,   775,   775,   776,
     776,   777,   778,   779,   779,   780,   780,   780,   780,   780,
     780,   780,   780,   780,   780,   780,   780,   780,   780,   781,
     782,   783,   783,   783,   784,   784,   785,   785,   785,   786,
     786,   786,   787,   787,   787,   788,   788,   789,   789,   790,
     790,   791,   792,   792,   792,   792,   793,   793,   794,   795,
     795,   796,   796,   796,   796,   797,   797,   798,   798,   799,
     799,   799,   799,   800,   800,   801,   802,   802,   803,   803,
     804,   804,   805,   805,   806,   806,   807,   807,   807,   807,
     807,   807,   808,   808,   809,   810,   811,   811,   811,   811,
     812,   812,   813,   813,   813,   814,   814,   814,   814,   814,
     815,   815,   815,   816,   816,   817,   817,   818,   818,   819,
     819,   819,   819,   820,   821,   821,   822,   822,   822,   823,
     823,   823,   823,   824,   824,   824,   824,   825,   825,   826,
     826,   826,   826,   826,   826,   826,   827,   827,   828,   829,
     830,   830,   830,   830,   830,   831,   831,   831,   831,   831,
     832,   832,   833,   833,   834,   834,   835,   836,   836,   836,
     837,   837,   838,   838,   839,   839,   840,   841,   841,   842,
     842,   842,   843,   843,   843,   843,   843,   844,   844,   845,
     845,   846,   847,   847,   847,   847,   848,   848,   848,   848,
     849,   849,   850,   850,   850,   851,   852,   852,   852,   852,
     852,   852,   852,   852,   852,   852,   852,   852,   852,   852,
     852,   852,   852,   852,   852,   852,   852,   852,   852,   852,
     852,   852,   852,   852,   852,   852,   852,   852,   852,   852,
     852,   852,   852,   852,   852,   852,   852,   852,   852,   852,
     852,   852,   852,   852,   852,   852,   852,   852,   852,   852,
     852,   852,   852,   852,   852,   852,   852,   852,   852,   852,
     852,   852,   852,   852,   852,   852,   852,   852,   852,   852,
     852,   852,   852,   852,   852,   852,   852,   852,   852,   852,
     852,   852,   852,   852,   852,   852,   852,   852,   852,   852,
     852,   852,   852,   852,   852,   852,   852,   852,   852,   852,
     852,   852,   852,   852,   852,   852,   852,   852,   852,   852,
     852,   852,   852,   852,   852,   852,   852,   852,   852,   852,
     852,   852,   852,   852,   852,   852,   852,   852,   852,   852,
     852,   852,   852,   852,   852,   852,   852,   852,   852,   852,
     852,   852,   852,   852,   852,   852,   852,   852,   852,   852,
     852,   852,   852,   852,   852,   852,   852,   852,   852,   852,
     852,   852,   852,   852,   852,   852,   852,   852,   852,   852,
     852,   852,   852,   852,   852,   852,   852,   852,   852,   852,
     852,   852,   852,   852,   852,   852,   852,   852,   852,   852,
     852,   852,   852,   852,   852,   852,   852,   852,   852,   852,
     852,   852,   852,   852,   852,   852,   852,   852,   852,   852,
     852,   852,   852,   852,   852,   852,   852,   852,   852,   852,
     852,   852,   852,   852,   852,   852,   852,   852,   852,   852,
     852,   852,   852,   852,   852,   852,   852,   852,   852,   852,
     852,   852,   852,   852,   852,   852,   852,   852,   852,   852,
     852,   852,   852,   852,   852,   852,   852,   852,   852,   852,
     852,   852,   852,   852,   852,   852,   852,   852,   852,   852,
     852,   852,   852,   852,   852,   852,   852,   852,   852,   852,
     852,   852,   852,   852,   852,   852,   852,   852,   852,   852,
     852,   852,   852,   852,   852,   853,   853,   853,   853,   853,
     853,   853,   853,   853,   853,   853,   853,   853,   853,   853,
     853,   853,   853,   853,   853,   853,   853,   853,   853,   853,
     853,   853,   853,   853,   853,   853,   853,   853,   853,   853,
     853,   853,   853,   853,   853,   853,   853,   853,   853,   853,
     853,   853,   853,   853,   853,   853,   854,   854,   854,   854,
     854,   854,   854,   854,   854,   854,   854,   854,   854,   854,
     854,   854,   854,   854,   854,   854,   854,   854,   854,   854,
     854,   854,   855,   855,   855,   855,   855,   855,   855,   855,
     855,   855,   855,   855,   855,   855,   855,   855,   855,   855,
     855,   855,   855,   855,   855,   855,   855,   856,   856,   856,
     856,   856,   856,   856,   856,   856,   856,   856,   856,   856,
     856,   856,   856,   856,   856,   856,   856,   856,   856,   856,
     856,   856,   856,   856,   856,   856,   856,   856,   856,   856,
     856,   856,   856,   856,   856,   856,   856,   856,   856,   856,
     856,   856,   856,   856,   856,   856,   856,   856,   857,   857,
     857,   857,   857,   857,   857,   857,   857,   857,   857,   857,
     857,   857,   857,   857,   857,   857,   857,   857,   857,   857,
     857,   857,   857,   857,   857,   858,   858,   858,   858,   858,
     858,   858,   858,   858,   858,   858,   858,   858,   858,   858,
     858,   858,   858,   858,   858,   858,   858,   858,   858,   858,
     858,   858,   858,   858,   858,   858,   858,   858,   858,   858,
     858,   858,   858,   858,   858,   858,   858,   858,   858,   858,
     858,   858,   858,   858,   858,   858,   858,   858,   858,   858,
     858,   858,   858,   858,   858,   858,   858,   858,   858,   858,
     858,   858,   858,   858,   858,   858,   858,   858,   858,   858,
     858,   858
};

/* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     0,     4,
       6,     4,     6,     4,     6,     4,     6,     1,     2,     3,
       2,     1,     3,     2,     3,     1,     3,     2,     5,     3,
       6,     4,     6,     6,     6,     5,     5,     6,     9,     4,
       5,     7,     6,     4,     8,     4,     2,     4,     3,     6,
       4,     2,     2,     2,     2,     1,     2,     0,     1,     2,
       2,     2,     1,     3,     4,     2,     0,     2,     3,     2,
       3,     6,     6,     8,     6,     8,     6,     8,     6,     8,
       8,    10,     8,    10,     1,     0,     7,     1,     4,     4,
       7,     2,     1,     3,     4,     3,     0,     1,     0,     2,
       3,     5,     8,     5,     0,     5,     5,     7,     2,     0,
       1,     1,     1,     3,     2,     0,     1,     0,     1,     3,
       1,     3,     1,     3,     2,     2,     4,     5,     5,     8,
       1,     0,     3,     9,    12,     3,     0,     4,     6,     1,
       2,     1,     1,     0,     1,     2,     2,     1,     2,     2,
       1,     2,     3,     2,     2,     2,     2,     3,     3,     3,
       1,     3,     1,     0,     1,     2,     2,     2,     2,     2,
       2,     2,     2,     1,     1,     0,     9,    12,     0,     2,
       1,     1,     1,     1,     1,     1,     3,     0,     1,     2,
       1,     1,     2,     2,     3,     1,     1,     2,     2,     1,
       2,     3,     5,     2,     5,     5,     2,     3,     1,     1,
       2,     2,     0,     4,     0,     3,     4,     4,     0,     3,
       2,     0,     3,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     3,     3,     1,     2,     2,     2,     2,
       2,     2,     0,     3,     3,     3,     0,     1,     2,     1,
       2,     2,     2,     2,     4,     1,     3,     1,     3,     1,
       1,     1,     1,     3,     1,     2,     0,     1,     0,     1,
       3,     0,     2,     0,     3,     3,     1,     5,     3,     1,
       3,     1,     4,     5,     5,     6,     3,     7,     4,    11,
       1,     3,     2,     2,     2,     0,     3,     1,     1,     2,
       2,     2,     2,     1,     0,     1,     2,     6,     4,     6,
       4,     6,     8,     1,     1,     1,     1,     1,     2,     1,
       2,     1,     1,     1,     3,     3,     3,     3,     2,     2,
       1,     3,     1,     1,     1,     1,     3,     1,     1,     0,
       1,     1,     1,     6,     1,     1,     2,     3,     8,    11,
       9,     1,     1,     3,     0,     1,     3,     1,     0,     1,
       0,     1,     0,     1,     3,     1,     1,     1,     3,     0,
       2,     2,     0,     2,     0,     1,     0,     1,     1,     1,
       3,     3,     1,     1,     3,     3,     3,     3,     4,     3,
       2,     1,     1,     1,     1,     1,     3,     1,     1,     3,
       3,     1,     2,     4,     4,     2,     3,     5,     5,     1,
       1,    10,    10,     1,     2,     4,     4,     4,     2,     2,
       3,     1,     3,     6,     2,     0,     3,     3,     4,     4,
       4,     4,     3,     2,     1,     1,     0,     1,     1,     0,
       1,     5,     1,     0,     1,     0,     3,     1,     3,     4,
       3,     1,     1,     0,     2,     2,     0,     2,     2,     1,
       1,     1,     0,     2,     4,     5,     4,     2,     3,     2,
       2,     2,     2,     1,     2,     3,     0,     1,     0,     5,
       1,     4,     6,     2,     1,     0,     4,     0,     1,     1,
       1,     1,     2,     2,     1,     1,     1,     1,     1,     1,
       3,     0,     1,     3,     1,     1,     2,     2,     0,     1,
       3,     1,     0,     1,     2,     3,     2,     4,     2,     3,
       2,     0,     1,     2,     0,     4,     5,     2,     0,     1,
       3,     3,     3,     3,     3,     3,     1,     4,     3,     4,
       5,     4,     5,     4,     5,     2,     4,     1,     1,     0,
       1,     4,     5,     4,     0,     2,     2,     2,     1,     1,
       0,     4,     2,     1,     2,     2,     4,     2,     6,     2,
       1,     3,     4,     0,     2,     0,     2,     0,     1,     3,
       3,     2,     0,     2,     4,     1,     1,     2,     3,     5,
       6,     2,     3,     4,     4,     3,     4,     0,     1,     1,
       1,     1,     1,     2,     4,     1,     1,     1,     1,     2,
       3,     0,     1,     1,     1,     1,     1,     2,     2,     2,
       2,     2,     1,     3,     0,     1,     1,     1,     1,     5,
       2,     1,     1,     1,     1,     4,     1,     2,     2,     1,
       3,     3,     2,     1,     0,     5,     2,     5,     2,     1,
       3,     3,     0,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     3,     3,     3,
       3,     3,     3,     3,     0,     1,     3,     3,     5,     2,
       2,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     2,     2,     3,     3,     2,     2,
       3,     3,     5,     4,     6,     3,     5,     4,     6,     4,
       6,     5,     7,     3,     2,     4,     3,     2,     1,     3,
       3,     3,     3,     4,     3,     4,     3,     4,     5,     6,
       6,     7,     6,     7,     6,     7,     3,     4,     4,     6,
       1,     1,     3,     2,     2,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     2,     2,
       5,     6,     6,     7,     1,     1,     2,     2,     4,     1,
       1,     1,     2,     2,     3,     5,     6,     8,     6,     6,
       4,     4,     1,     1,     1,     5,     1,     1,     4,     1,
       4,     1,     4,     1,     4,     1,     1,     1,     1,     1,
       1,     6,     6,     4,     4,     4,     4,     6,     5,     5,
       5,     4,     6,     4,     5,     0,     5,     0,     2,     0,
       1,     3,     3,     2,     2,     0,     6,     1,     0,     3,
       0,     2,     2,     0,     1,     4,     2,     2,     2,     2,
       2,     4,     3,     1,     5,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     4,     1,     4,     1,     4,     1,     2,
       1,     2,     1,     2,     1,     3,     1,     3,     1,     3,
       1,     3,     3,     1,     3,     3,     0,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     4,     3,     2,
       3,     0,     3,     3,     2,     2,     1,     0,     2,     2,
       3,     2,     1,     1,     3,     5,     1,     2,     4,     2,
       0,     1,     0,     1,     2,     2,     2,     3,     5,     1,
       0,     1,     2,     0,     2,     1,     0,     1,     0,     1,
       3,     3,     2,     1,     1,     1,     3,     1,     2,     1,
       3,     1,     1,     1,     2,     1,     1,     1,     1,     1,
       2,     6,     2,     5,     3,     3,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     2,     2,     3,     3,
       0,     1,     1,     1,     1,     1,     1,     1,     5,     3,
       0,     1,     1,     1,     1,     4,     7,     2,     0,     1,
       1,     1,     1,    13,    16,     1,     2,     0,     1,     0,
       1,     0,     2,     0,     1,     0,     6,     8,     6,     8,
       6,     8,     2,     1,     4,     3,     2,     4,     3,     5,
       1,     0,     1,     1,     0,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     3,     1,     1,     1,
       1,     1,     1,     2,     1,     1,     2,     3,     3,     1,
       3,     3,     2,     3,     3,     3,     3,     1,     1,     1,
       1,     3,     5,     1,     1,     1,     1,     3,     2,     1,
       4,     5,     5,     4,     6,     1,     1,     1,     1,     1,
       1,     0,     1,     3,     1,     0,     7,     1,     2,     3,
       2,     0,     2,     0,     2,     4,     2,     1,     1,     1,
       2,     3,     2,     2,     3,     4,     2,     1,     1,     1,
       3,     2,     9,    11,    12,    14,     3,     4,     4,     0,
       7,    10,     2,     3,     0,     4,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1
};

/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
   means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
     128,   205,     0,  1098,  1097,   205,     0,  1073,   205,   406,
     334,     0,  1168,     0,   205,     0,   128,     0,     0,     0,
       0,     0,     0,     0,   205,   473,     0,  1167,   205,     0,
    1141,     0,     0,     0,     0,     0,     2,     4,     7,    17,
      29,    25,     0,    27,    15,    20,     6,    31,    16,    19,
      13,    32,    11,    30,   440,   427,   475,   439,   127,   443,
      28,    14,    24,     5,    10,    22,    23,    21,  1081,    35,
      26,    33,    18,     8,    34,    36,     0,     9,    37,    12,
     204,   203,   197,     0,     0,     0,     0,     0,   198,  1011,
    1186,  1187,  1188,  1189,  1190,  1191,  1192,  1193,  1194,  1195,
    1196,  1197,  1198,  1199,  1200,  1201,  1536,  1202,  1203,  1204,
    1485,  1486,  1537,  1487,  1488,  1205,  1206,  1207,  1208,  1209,
    1210,  1211,  1212,  1489,  1490,  1213,  1214,  1215,  1216,  1217,
    1491,  1538,  1218,  1219,  1220,  1221,  1222,  1539,  1223,  1224,
    1225,  1226,  1227,  1228,  1229,  1230,  1231,  1540,  1232,  1233,
    1234,  1541,  1235,  1236,  1237,  1238,  1239,  1240,  1241,  1492,
    1493,  1242,  1243,  1244,  1245,  1246,  1247,  1248,  1249,  1250,
    1251,  1252,  1253,  1254,  1255,  1256,  1257,  1258,  1259,  1260,
    1261,  1262,  1263,  1264,  1265,  1266,  1267,  1268,  1269,  1494,
    1270,  1271,  1272,  1273,  1495,  1274,  1275,  1276,  1496,  1277,
    1278,  1279,  1542,  1543,  1280,  1281,  1282,  1544,  1283,  1284,
    1497,  1285,  1286,  1287,  1288,  1289,  1290,  1291,  1545,  1292,
    1293,  1294,  1295,  1296,  1297,  1298,  1299,  1300,  1301,  1302,
    1546,  1498,  1303,  1304,  1305,  1306,  1499,  1500,  1501,  1307,
    1547,  1548,  1308,  1549,  1309,  1310,  1311,  1312,  1313,  1314,
    1550,  1315,  1551,  1316,  1317,  1318,  1319,  1320,  1321,  1322,
    1323,  1502,  1324,  1325,  1326,  1327,  1328,  1329,  1330,  1331,
    1332,  1333,  1334,  1335,  1336,  1337,  1338,  1339,  1340,  1341,
    1503,  1553,  1504,  1342,  1343,  1344,  1505,  1345,  1346,  1554,
    1347,  1506,  1348,  1507,  1349,  1350,  1351,  1352,  1353,  1354,
    1355,  1356,  1357,  1508,  1555,  1358,  1556,  1509,  1359,  1360,
    1361,  1362,  1363,  1364,  1365,  1366,  1367,  1368,  1369,  1370,
    1510,  1371,  1372,  1511,  1373,  1374,  1375,  1376,  1377,  1378,
    1379,  1380,  1381,  1382,  1383,  1384,  1512,  1385,  1386,  1387,
    1388,  1389,  1390,  1391,  1392,  1393,  1394,  1395,  1396,  1397,
    1398,  1399,  1400,  1401,  1402,  1557,  1403,  1404,  1405,  1513,
    1406,  1407,  1408,  1409,  1410,  1411,  1412,  1413,  1414,  1415,
    1416,  1417,  1418,  1419,  1420,  1421,  1422,  1514,  1423,  1424,
    1425,  1558,  1426,  1427,  1515,  1428,  1429,  1430,  1431,  1432,
    1433,  1434,  1435,  1436,  1437,  1438,  1439,  1516,  1440,  1517,
    1441,  1442,  1443,  1560,  1444,  1445,  1446,  1447,  1448,  1518,
    1519,  1449,  1450,  1520,  1451,  1521,  1452,  1453,  1522,  1454,
    1455,  1456,  1457,  1458,  1459,  1460,  1461,  1462,  1463,  1464,
    1465,  1466,  1467,  1468,  1523,  1524,  1469,  1561,  1470,  1471,
    1472,  1473,  1474,  1475,  1476,  1477,  1478,  1479,  1480,  1525,
    1526,  1527,  1528,  1529,  1530,  1531,  1532,  1533,  1534,  1535,
    1481,  1482,  1483,  1484,  1171,     0,     0,   993,  1012,  1013,
    1021,   200,   405,   128,     0,   374,     0,     0,   375,     0,
       0,   328,   327,  1064,   333,     0,     0,     0,  1011,    99,
    1502,  1373,  1516,    97,   991,  1012,     0,   351,   352,     0,
     360,     0,   345,   349,   346,     0,   370,   362,   371,   363,
     344,   364,   353,   343,     0,   372,   347,     0,     0,     0,
     201,   166,   334,   128,     0,  1086,  1087,  1085,  1076,  1081,
    1088,  1089,     0,  1072,     0,  1010,  1129,  1128,   155,  1040,
    1158,  1518,  1449,  1169,  1159,  1156,  1157,   202,   472,   470,
       0,   978,  1318,  1410,  1421,  1518,  1106,  1109,     0,   199,
       0,   444,   593,   987,  1140,     0,  1145,     0,  1387,   448,
     451,  1030,   449,   440,     0,     0,     1,   128,     0,     0,
       0,   469,   469,     0,   469,     0,   432,   440,   435,   439,
       0,  1080,  1154,  1166,  1518,  1449,  1523,  1162,  1163,  1291,
       0,     0,  1291,     0,  1291,     0,  1291,     0,     0,   970,
       0,   971,   994,  1042,  1043,  1041,     0,  1044,   301,   332,
     331,   330,   329,   334,  1291,  1048,     0,     0,     0,     0,
       0,  1059,   100,    98,   358,   359,     0,   350,   348,     0,
    1291,   369,  1025,   365,  1291,   369,   989,  1291,     0,     0,
     162,     0,  1078,  1090,  1587,  1588,  1589,  1590,  1592,  1591,
    1593,  1594,  1595,  1596,  1597,  1598,  1599,  1600,  1603,  1601,
    1602,  1604,  1605,  1606,  1607,  1608,  1609,  1610,  1611,  1612,
    1613,  1614,  1615,  1616,  1617,  1618,  1619,  1620,  1621,  1622,
    1623,  1624,  1625,  1626,  1627,  1628,  1629,  1630,  1631,  1632,
    1633,  1634,  1635,  1636,  1637,  1104,     0,  1105,  1095,  1084,
    1091,  1092,   128,   404,  1075,     0,     0,     0,     0,  1160,
       0,     0,     0,   996,   998,   999,   902,  1009,   973,  1486,
    1487,  1488,   962,     0,  1489,  1490,  1491,  1538,   839,   826,
     835,   840,   827,   829,   836,  1492,  1493,   780,  1257,  1494,
    1495,  1007,  1496,  1499,  1500,  1501,   831,   833,  1503,  1504,
       0,  1008,  1506,  1507,  1354,  1509,  1510,  1512,  1513,   837,
    1515,  1517,  1518,  1519,  1520,  1521,  1006,  1522,   838,  1524,
       0,     0,     0,   984,     0,   973,   811,     0,   635,   636,
     657,   658,   637,   663,   664,   666,   638,     0,   983,   715,
     855,   810,   822,   883,   758,     0,   809,   804,   455,   979,
       0,   805,   995,   997,   963,   455,   977,  1107,  1112,  1108,
       0,     0,     0,     0,     0,   595,   594,   988,  1139,  1137,
    1138,  1136,  1135,  1142,     0,  1144,  1081,   916,     0,   450,
       0,     0,     0,   430,   429,     3,     0,     0,  1147,     0,
     467,   468,     0,     0,     0,     0,     0,     0,     0,     0,
     542,   489,   490,   492,   539,   543,   551,     0,   436,     0,
    1030,  1164,     0,     0,     0,   115,   115,     0,     0,     0,
       0,     0,    92,    41,    85,     0,     0,     0,     0,   180,
     193,     0,     0,     0,     0,     0,   190,     0,     0,   173,
      43,   167,   169,     0,   115,     0,    39,     0,     0,     0,
      45,  1011,     0,  1536,  1537,  1538,  1539,  1540,   840,     0,
    1542,  1543,  1544,  1545,  1546,  1547,  1548,  1549,  1550,  1551,
    1502,  1553,  1554,  1555,  1556,  1557,  1558,  1516,  1560,  1522,
       0,  1561,     0,   814,   920,   475,   918,  1031,     0,  1012,
    1018,   969,     0,  1032,  1665,  1666,  1667,  1668,  1669,  1670,
    1671,  1672,  1673,  1674,  1675,  1676,  1677,  1678,  1679,  1680,
    1681,  1682,  1683,  1684,  1685,  1686,  1687,  1688,  1689,  1690,
    1691,  1692,  1693,  1694,  1695,  1696,  1697,  1698,  1699,  1700,
    1701,  1702,  1703,  1704,  1705,  1706,  1707,  1708,  1709,  1710,
    1711,  1712,  1713,  1714,  1715,  1716,  1717,  1718,  1719,  1720,
    1721,  1722,  1723,  1724,  1725,  1726,  1727,  1728,  1729,  1730,
    1731,  1732,  1733,  1734,  1735,  1736,  1625,  1737,  1738,  1739,
    1740,  1741,   966,   965,   992,  1034,  1033,  1035,   972,     0,
       0,   402,     0,     0,  1045,     0,  1291,   161,  1291,   301,
       0,   301,     0,     0,  1058,  1061,   361,   357,   355,   354,
     356,     0,   367,   368,     0,   338,     0,  1026,     0,     0,
     340,     0,     0,     0,     0,   128,     0,   174,  1100,  1101,
    1099,     0,     0,  1083,   177,   194,  1094,  1103,  1093,  1102,
    1082,  1077,     0,  1074,   393,  1118,  1117,  1126,   156,     0,
    1022,  1562,   645,  1563,   674,   652,   674,   674,  1564,  1565,
    1566,  1567,   641,   641,   654,  1568,  1569,  1570,  1571,  1572,
     642,   643,   679,  1573,  1574,  1575,  1576,  1577,     0,     0,
    1578,   674,  1579,   641,  1580,  1581,   646,  1582,   615,     0,
    1583,   644,   616,  1584,   682,   682,  1585,   669,  1586,     0,
     923,   627,   628,   629,   630,   655,   656,   631,   661,   662,
     632,   714,     0,   641,  1023,  1024,   128,  1161,  1170,     0,
     807,   673,   660,   961,     0,     0,   668,   667,     0,     0,
       0,     0,     0,   650,   649,   648,   813,   926,     0,   647,
       0,     0,   674,   674,   672,   738,     0,   651,     0,     0,
     941,     0,   947,     0,     0,     0,   678,     0,   676,     0,
       0,     0,   739,   719,   720,   811,   916,     0,   806,   812,
    1002,     0,     0,   714,   714,   982,   902,     0,   899,   900,
     901,     0,     0,     0,   976,     0,   910,   912,     0,     0,
     754,   908,     0,   757,     0,     0,     0,     0,   896,   897,
     898,   890,   891,   892,   893,   894,   895,   906,   889,   735,
       0,     0,   857,     0,     0,   734,     0,     0,     0,   558,
       0,  1000,   964,   558,  1120,  1124,  1125,  1123,     0,  1119,
    1111,  1110,  1115,  1113,  1116,  1114,     0,  1133,     0,  1130,
     555,     0,   452,     0,     0,  1153,     0,   122,     0,  1148,
       0,   447,   446,   476,   477,   483,   445,   528,   529,     0,
       0,     0,     0,   548,   546,   519,   493,   518,     0,     0,
     497,     0,   520,   715,   541,   434,   487,   488,   491,   433,
       0,   544,     0,   554,   542,   492,     0,  1155,  1165,     0,
       0,     0,     0,     0,  1291,     0,     0,    76,    57,   253,
       0,   114,     0,     0,     0,     0,     0,     0,     0,    84,
      81,    82,    83,     0,     0,     0,     0,   178,   179,   192,
       0,   183,   184,   181,   185,   186,     0,     0,   171,   172,
       0,     0,     0,     0,   170,     0,     0,     0,     0,     0,
       0,     0,     0,   475,   475,   475,   820,     0,     0,   474,
       0,     0,   967,   970,   392,   309,     0,   299,     0,     0,
       0,     0,     0,   334,  1051,  1049,  1047,  1050,  1052,     0,
       0,   158,   160,     0,   298,   272,     0,  1063,   376,     0,
       0,  1291,  1060,   289,     0,   369,   366,  1027,     0,   369,
     990,     0,   369,   165,  1291,   301,     0,  1079,  1096,   175,
     195,   176,   196,   425,     0,   399,   407,   412,   390,     0,
     390,     0,   409,   413,   390,   408,   390,   403,     0,   157,
       0,     0,   627,     0,   621,   617,   687,   688,   689,   690,
     697,   698,   695,   696,   691,   692,   685,   686,   693,   694,
     683,   684,     0,   699,   700,   701,   702,   703,   704,   705,
     706,   633,  1039,     0,   639,  1038,     0,   974,     0,     0,
     960,   956,     0,     0,     0,     0,     0,     0,   927,   928,
     929,   930,   931,   932,   933,   934,   935,     0,     0,   936,
       0,     0,     0,   671,   670,     0,   888,   899,   900,   901,
     896,   897,   898,   890,   891,   892,   893,   894,   895,   914,
       0,     0,     0,     0,     0,     0,     0,     0,   781,     0,
       0,   804,   882,     0,   916,   946,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   916,   952,     0,     0,
     973,     0,     0,     0,  1004,  1005,   716,   730,   731,   732,
     736,  1037,  1036,   981,     0,   975,     0,     0,   717,   740,
     745,     0,   953,   776,     0,   764,     0,   753,     0,   762,
     766,   741,   756,     0,   737,     0,   976,   911,   913,     0,
     909,     0,   727,   728,   729,   721,   722,   723,   724,   725,
     726,   733,   887,   885,   886,     0,     0,     0,   865,   759,
       0,     0,   761,   760,  1283,  1318,     0,   466,   466,   466,
     454,   464,   980,     0,   607,   475,   607,     0,   714,   596,
    1030,  1143,  1131,  1132,   917,  1029,   128,     0,  1151,     0,
       0,     0,   134,   117,     0,  1149,     0,   150,   558,     0,
     973,     0,   481,   482,     0,   486,  1513,  1406,     0,     0,
       0,     0,   521,   549,     0,   540,     0,   996,   522,   995,
     523,   526,   527,   498,   550,   985,   552,     0,   545,   438,
     437,   556,     0,    42,     0,  1291,    59,     0,     0,     0,
       0,     0,     0,   208,   244,   208,    96,  1291,   369,  1291,
     369,  1190,  1258,  1422,     0,    55,    88,     0,   277,   108,
       0,   262,   306,    78,    93,   101,     0,     0,    44,   168,
     182,   187,   104,   191,   188,  1068,   189,   115,     0,    40,
       0,   102,     0,  1066,     0,     0,    46,   106,  1070,     0,
       0,     0,     0,   919,   815,   921,   922,   969,     0,   391,
       0,   300,     0,   401,   381,   382,   392,     0,   301,  1048,
       0,     0,     0,     0,     0,   292,   290,   320,     0,   297,
     291,   299,     0,     0,   248,     0,  1184,     0,     0,   377,
     373,     0,     0,   337,  1028,   339,     0,   341,     0,     0,
     394,     0,   397,     0,   396,   400,   395,   389,     0,   420,
       0,     0,     0,     0,     0,     0,  1127,     0,   622,   618,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   924,
     471,     0,     0,     0,   957,     0,     0,   853,     0,   828,
     830,   640,   843,     0,   653,   832,   834,     0,   903,     0,
       0,     0,   844,   783,   784,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   799,   798,   845,   881,     0,     0,   944,   945,
     846,   681,   680,   682,   682,     0,     0,   951,     0,     0,
       0,   851,     0,   808,   917,   665,   714,     0,     0,     0,
       0,     0,     0,     0,   765,   755,     0,   763,   767,     0,
       0,     0,   749,     0,     0,   747,   777,   743,     0,     0,
     778,     0,     0,     0,   821,   466,   466,   466,   466,   463,
     465,     0,     0,     0,     0,  1406,     0,   579,   557,   559,
     566,   579,   584,   823,   605,   824,   987,     0,   531,     0,
     531,     0,  1121,  1134,     0,  1152,     0,   139,   121,   141,
     140,     0,   148,     0,   973,     0,   139,   123,     0,   142,
       0,  1151,     0,   154,   478,     0,   904,   486,     0,   480,
     525,   524,     0,   496,   547,   494,     0,   553,     0,     0,
       0,   252,     0,     0,     0,   208,     0,     0,   316,     0,
     303,    77,     0,     0,     0,    51,     0,    69,    61,    47,
      75,     0,     0,    80,     0,    73,    90,    91,    89,    94,
       0,   236,   218,   249,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   818,   819,   816,
     475,   968,   423,   424,   173,   422,   310,     0,     0,  1063,
    1046,     0,     0,   161,   301,     0,   276,   272,     0,   270,
     269,   271,     0,  1185,   166,     0,  1180,  1062,     0,     0,
    1057,   369,     0,   426,     0,   385,   421,   410,   415,     0,
     419,   417,   416,   411,   414,   624,     0,   623,     0,   613,
       0,   625,     0,   634,   707,   708,   709,   710,   711,   712,
     713,   659,     0,   959,   955,     0,   825,   925,     0,   915,
     939,   938,   782,   794,   795,   796,   940,     0,     0,     0,
     791,   792,   793,   785,   786,   787,   788,   789,   790,   797,
     949,   948,   942,   943,   677,   675,     0,   848,   849,   850,
     950,     0,   884,  1003,   718,     0,     0,   746,   954,   768,
       0,     0,     0,   742,   903,     0,     0,     0,     0,     0,
     751,     0,     0,     0,   868,   863,   864,     0,     0,     0,
       0,   457,   456,   462,   579,   584,     0,   440,     0,   566,
       0,   578,   515,   577,     0,     0,   590,   588,     0,   590,
       0,   590,     0,   515,     0,   580,   515,   577,     0,   597,
     988,   606,     0,   538,   815,   538,     0,   453,  1150,     0,
    1146,     0,     0,     0,   129,   126,   116,     0,     0,   151,
     139,   130,     0,   479,   484,   485,   495,   986,   109,   208,
       0,     0,    58,     0,   318,   264,   296,   279,     0,     0,
       0,   209,     0,   284,     0,    50,    70,     0,    66,     0,
      95,     0,     0,     0,     0,     0,    53,    65,     0,    48,
       0,   369,   369,    56,   263,  1022,  1562,  1563,  1564,  1565,
    1566,  1567,  1568,  1569,  1570,  1571,  1572,  1573,  1574,  1575,
    1576,  1577,  1654,  1578,   215,  1579,  1354,  1580,  1581,  1582,
       0,  1583,   616,  1584,  1585,  1586,   890,   891,   213,   305,
     210,   311,   212,   214,     0,  1023,   211,   308,   105,  1069,
       0,   103,     0,  1067,   112,   110,   107,  1071,     0,   404,
     384,     0,     0,  1291,     0,  1063,   159,   298,     0,   326,
     248,   321,     0,  1184,  1182,     0,  1179,     0,     0,     0,
     342,     0,   398,     0,   418,     0,     0,   619,   626,   958,
     841,   852,   937,     0,     0,     0,     0,   847,   842,   774,
     772,   769,     0,   770,   750,     0,     0,   748,   744,     0,
     779,   854,     0,   870,   867,   461,   460,   459,   458,   565,
     563,     0,   568,  1015,  1014,   575,   508,   514,   564,     0,
     560,     0,   589,   585,     0,   586,     0,     0,   587,     0,
     561,     0,  1014,   562,     0,   604,     0,     0,   859,  1001,
     859,  1122,   138,   118,     0,   119,   149,     0,     0,     0,
       0,   143,   378,     0,   314,    60,     0,   296,     0,   208,
     281,   280,   283,   278,   282,   285,     0,     0,     0,     0,
       0,   265,     0,     0,     0,   229,     0,     0,   296,   302,
     225,   226,   335,     0,     0,     0,    62,    52,    49,    54,
      63,     0,     0,    64,    67,   612,    79,    72,  1654,  1661,
       0,     0,     0,     0,     0,   817,   380,   387,   173,     0,
       0,     0,     0,   298,     0,     0,     0,  1184,     0,     0,
     206,     0,   245,     0,   163,  1183,     0,  1172,     0,  1055,
    1056,     0,     0,   386,   620,   614,   800,     0,     0,     0,
     771,   775,   773,   752,   856,     0,   475,   600,     0,   603,
     567,     0,     0,   503,   510,     0,   513,   507,     0,   569,
       0,     0,   571,   573,     0,     0,     0,   608,     0,     0,
       0,   991,     0,   530,   532,   535,   534,   537,     0,   506,
     506,     0,     0,     0,   152,     0,   145,   145,     0,   131,
     905,     0,   208,     0,   295,   315,   243,     0,     0,   227,
       0,   233,     0,   267,   268,   266,   228,   296,   301,   230,
     336,     0,    71,     0,    87,     0,     0,   307,   113,   111,
     404,     0,  1063,  1179,     0,     0,   272,   166,  1181,   261,
     254,   255,   256,   257,   258,   259,   260,   275,   274,   246,
     247,     0,     0,     0,  1057,     0,   801,     0,   802,     0,
     873,   605,     0,     0,   599,     0,   501,   499,   502,   504,
     500,     0,     0,   576,   592,     0,   572,   570,   581,     0,
     612,     0,   583,   536,     0,   858,   860,     0,     0,   442,
     441,     0,   125,     0,   607,     0,     0,   147,   147,   133,
       0,   301,   317,     0,   287,   294,   286,     0,     0,   224,
       0,   231,   325,   217,   611,     0,    74,     0,   312,   379,
     383,     0,  1173,     0,  1179,   248,  1184,     0,  1176,     0,
       0,  1063,   803,   869,     0,     0,     0,   598,   601,     0,
     574,     0,     0,     0,   609,   610,   582,   533,     0,     0,
     508,   120,   145,   124,   153,   144,   483,   146,   483,     0,
     325,   273,     0,     0,   251,   217,     0,   242,     0,    68,
      86,   313,     0,   298,  1174,   207,   164,  1177,  1178,     0,
     607,  1485,  1234,  1456,     0,   871,   874,   872,   866,     0,
     511,     0,   517,   591,   861,   862,   505,   147,   486,   486,
     607,   242,   288,   293,     0,   232,   234,   322,   323,   324,
       0,   238,   235,   239,     0,  1179,     0,  1053,     0,   878,
     877,   876,   880,   879,   602,     0,     0,   509,   483,   136,
     135,   132,   208,   250,     0,     0,     0,   240,     0,   241,
     216,  1175,  1063,     0,   512,     0,   486,   319,   221,     0,
     220,     0,   304,   237,   607,   875,     0,   137,   219,   223,
     222,  1054,   516
};

/* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    35,    36,    37,    38,  2027,  2028,  2029,  1734,   882,
    2696,  1735,   883,   884,  2031,    39,    40,  1353,   525,  1672,
    1296,  2439,    42,  1982,  1677,  1986,  2574,  2230,  1981,  1988,
    2677,  2736,  1983,  1678,  2575,  1679,    43,    44,  1421,    45,
     650,    46,  1422,  1380,  1095,   902,  1370,  1084,    47,    82,
      48,  2018,  2319,  2749,  2041,  2832,  2469,  2470,  1736,  2791,
    2792,  2020,  2083,  1362,  2785,  1795,  2627,  1740,  1723,  2471,
    1804,  2584,  2349,  1737,  2261,  1796,  2456,  2683,  1432,  1797,
    2684,  2449,  1798,  1405,  1425,  2263,  2793,  1741,  1406,  2320,
    1349,  1799,  2747,  1800,   485,  2474,    49,   517,   518,   641,
    1065,   519,    50,   486,  1053,   526,    52,  1786,  2498,  2094,
    2499,  1828,  1780,  1093,  1825,  1453,  1409,  1094,   474,  1467,
    2095,  2064,  1454,   527,   786,    55,    56,    57,   575,   569,
     570,  1269,  1650,  1951,   852,   550,   551,   585,  1399,  1303,
    1304,  1685,  1999,  1328,  1329,   861,   862,  2544,  2669,  2545,
    2546,  2407,  2408,  2807,  1316,  1320,  1321,  1698,  1691,  1309,
    2223,  2563,  2564,  2565,  2428,  1324,  1325,   864,   865,   866,
    1333,  1708,    59,  1654,  1958,  1959,  1960,  2201,  2202,  2216,
    2212,  2413,  2552,  1961,  1962,  2537,  2538,  2644,  2219,  1968,
    2556,  2557,  2604,  1840,  1149,  1150,  1475,  1151,   787,  1152,
    1183,   788,  1189,  1154,   789,   790,   791,  1157,   792,   793,
     794,   795,  1172,   796,   797,  1206,  1493,  1494,  1495,  1496,
    1497,  1498,  1499,  1500,  1501,   837,  1557,   799,   800,   801,
    1964,   802,  1262,  1638,  2569,  2665,  2666,  1944,  2185,  2393,
    2536,  2716,  2765,  2766,   803,   804,  1635,  1257,  1258,   805,
    2322,  1260,  1550,  1577,   945,   946,  1162,  1527,  1528,  1553,
    1871,  1560,  1566,  1898,  1899,  1578,  1603,   806,  1510,  1511,
    1855,  1174,   807,   611,   952,   612,  1170,  1597,   815,   808,
     809,  1704,   562,  2548,   646,  1033,   810,   811,   812,   813,
     814,  2405,   947,   467,  1163,  2737,  1067,   842,   948,  1738,
    1593,    60,   718,   616,    61,  1044,  1416,    62,  2520,  2359,
    1055,  1434,  1808,   487,    63,    64,    65,    66,    67,   592,
    1087,   528,  1088,  1089,   706,    68,  1096,   708,   709,    69,
     556,   557,  1097,  1280,  1098,    70,   537,    71,   833,   566,
     834,   836,   530,   849,  1977,  1668,    73,    74,   544,   545,
      75,    76,   558,    77,    78,  2517,   531,  2086,  1050,   495,
     469,   470,  1165,  1036,   950,  1037
};

/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
   STATE-NUM.  */
#define YYPACT_NINF -2474
static const int yypact[] =
{
    4005,  -115,   721, -2474, -2474,  -115, 30005, -2474,  -115,    37,
    2378, 33274, -2474,  5018,  -115, 37477,   639,   195,   280,   209,
     360, 37477, 37477, 33741,  -115,   245, 37944, -2474,  -115, 34208,
     -45,   -85, 38411, 37477,  1056,   418,   -21, -2474, -2474, -2474,
   -2474, -2474,    35, -2474, -2474, -2474, -2474, -2474, -2474, -2474,
   -2474, -2474, -2474, -2474,    81, -2474,    82,    84,  -113,    34,
   -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474,   166, -2474,
   -2474, -2474, -2474, -2474, -2474, -2474, 19632, -2474, -2474, -2474,
   -2474, -2474, -2474, 38878, 37477, 39345, 34675, 39812, -2474,   102,
   -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474,
   -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474,
   -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474,
   -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474,
   -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474,
   -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474,
   -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474,
   -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474,
   -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474,
   -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474,
   -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474,
   -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474,
   -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474,
   -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474,
   -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474,
   -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474,
   -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474,
   -2474,   103, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474,
   -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474,
   -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474,
   -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474,
   -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474,
   -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474,
   -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474,
   -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474,
   -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474,
   -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474,
   -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474,
   -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474,
   -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474,
   -2474, -2474, -2474, -2474, -2474, -2474, -2474,   120, -2474, -2474,
   -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474,
   -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474,
   -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474,
   -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474,
   -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474,
   -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474,
   -2474, -2474, -2474, -2474, -2474,   186,   448, -2474,   142, -2474,
   -2474, -2474, -2474,  1056, 37477, -2474,   744,   759, -2474,   345,
   40279, -2474, -2474, -2474, -2474,   825, 37477,   507, -2474, -2474,
   -2474, 35142, -2474, -2474, -2474, -2474,   471, -2474, -2474,   310,
   -2474,    44, -2474, -2474, -2474,   287, -2474, -2474, -2474, -2474,
   -2474, -2474, -2474, -2474,   381, -2474, -2474, 40746, 41213, 41680,
   -2474,   263,    28,   455, 19164, -2474, -2474, -2474, -2474,   166,
   -2474, -2474,   360, -2474,   360, -2474, -2474, -2474,  -169,   321,
   -2474,   304,   572, -2474, -2474, -2474,   357, -2474, -2474,   581,
    7580,  7580, 42147,   360, 42147,   415, -2474, -2474,   233, -2474,
   21036, -2474,   390,   448, -2474,    87,   726, 10514, 37477,   443,
   -2474,   454,   443,   470,   479,  -113, -2474,  4005,   804,   785,
   34208,   248,   248,   995,   248,   550,   873, -2474,   107, -2474,
     567, -2474, 37477, -2474,   607,   869,   -85, -2474,   357,   910,
     775,   766,   946,  3828,   954,   971,   960,   996,  5624, 10514,
   24510, -2474,   448, -2474, -2474, -2474,   630, -2474,   635, -2474,
   -2474, -2474, -2474,    28,   879, -2474,   758, 42614, 43081, 37477,
     702,  1127, -2474, -2474, -2474, -2474,   761, -2474, -2474,   622,
    1078,    72,   763, -2474,  1085,   105, -2474,  1133,  1005, 10514,
   -2474,   892, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474,
   -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474,
   -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474,
   -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474,
   -2474, -2474,   -85, -2474, -2474, -2474, -2474, -2474, -2474, -2474,
   -2474, -2474, -2474, -2474, -2474, -2474,  -119, -2474, -2474, 26378,
   -2474, -2474,   455,   808, -2474, 26378, 11003, 46817,  1263, -2474,
    1076, 37477,   820, -2474, -2474, -2474, -2474, -2474, -2474,  1305,
      99,  1321, 10514,   836,    99,    99,   853,  1186, -2474, -2474,
   -2474,   150,   868,   893, -2474,   151,   151, -2474,  1050,   921,
     926, -2474,   153,  1359,  1413,    80,   939,   951,   595,    99,
   10514, -2474,   973,   151,   975,   977,   989,  1426,  1015, -2474,
    1436,  1020,    93,   147,  1030,  1036, -2474,  1041, -2474,   156,
   10514, 10514, 10514, -2474,  6602, -2474,   448,   360, -2474, -2474,
   -2474, -2474, -2474, -2474, -2474,  1045, -2474,   148,  5016, -2474,
    1061, -2474, -2474, -2474,   155, 10514, -2474,  1467,     8, -2474,
     160, -2474, -2474, -2474,   448,  1331,  1054, -2474, -2474, -2474,
     185,  1450, 25444, 25911, 37477, -2474, -2474,   448, -2474, -2474,
   -2474, -2474, -2474, -2474,   421, -2474,   166, 27529,   564,   443,
   37477, 37477,  1528, -2474, -2474, -2474, 34208, 37477, 43548,  1193,
   -2474, -2474,  -113,  -113, 10514,  -113,   138,   729,  8069, 11492,
    1410,  1298,   129,   389,  1415, -2474,  1309,   550,   873, 10514,
     454, -2474,  1364, 37477, 30472,   717,   762,  1108,  1194,  1118,
     -49,  1532, -2474,  1123, -2474,  1203, 37477, 48188,   173, -2474,
    1568,   173,   173,   662,  1570,  1225,   228,  1381,   -27,  -140,
    1123,  1582, -2474, 34208,   146,   189,  1123, 37477,  1234,   445,
    1123,    83, 11003,   912,   994,   502,  1029,  1113,    98, 11003,
    1152,  1165,  1227,  1262,  1422,  1440,  1480,  1523,  1538,  1541,
     101,  1543,  1549,  1572,  1574,  1579,  1584,   108,  1589,    96,
   11003,  1593,  1157, -2474, 27529,   -73, -2474, -2474,  1597,   115,
   -2474, 24042,  1154, -2474, -2474, -2474, -2474, -2474, -2474, -2474,
   -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474,
   -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474,
   -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474,
   -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474,
   -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474,
   -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474,
   -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474,
   -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474,  1247,
   37477,  1205,   -83,  1507,  1567, 37477,  1396,  1582,  1399,  1179,
    1630,   635,  8558,  1633, -2474, 44015, -2474, -2474, -2474, -2474,
   -2474, 37477, -2474, -2474, 37477, -2474, 28604,  1180, 37477, 37477,
   -2474, 37477, 37477,   585, 44482,   455, 31873, -2474, -2474, -2474,
   -2474,   835,   855, -2474, -2474, -2474, -2474, -2474, -2474, -2474,
   -2474, -2474, 28604, -2474,  1529, -2474, -2474, -2474,  1182,   590,
   -2474, -2474, -2474, -2474,  1232, -2474,  1232,  1232, -2474, -2474,
   -2474, -2474,  1191,  1191,  1199, -2474, -2474, -2474, -2474, -2474,
   -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474,  1200,   595,
   -2474,  1232, -2474,  1191, -2474, -2474, -2474, -2474, -2474, 48188,
   -2474, -2474, -2474, -2474,   400,   424, -2474, -2474, -2474,  1202,
   -2474,  1644, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474,
   -2474,  2931,   623,  1191, -2474, -2474,  1056, -2474, -2474, 10514,
     448, -2474,  1207, 27529,  1250, 10514, -2474, -2474, 10514,  1210,
    1682,  1682, 10514, -2474, -2474, -2474, -2474,  4325,  1682, -2474,
    1682,  1682,  1232,  1232, -2474, 27626, 10514, -2474, 22911, 10514,
   13937,  9047, 10514,  1294,  1296,  1682, -2474,  1682, -2474, 10514,
    7091, 10514, 27626,  1689,  1689,  2284, 23386,  1211,   448,   448,
   -2474,  1682, 10514,  4504,  4504, -2474,   177, 46817, 10514, 10514,
   10514, 10514, 28137,  1299,   131, 37477, 10514, 10514,  1217,   999,
   -2474, 10514,  1435, -2474,  1219, 10514,  1302,   112, 10514, 10514,
   10514, 10514, 10514, 10514, 10514, 10514, 10514, -2474, -2474, 15882,
     188,  1534,  1553, 10514,  -106,   175, 10514, 35609,  7580,  1545,
    5624, -2474,    88,  1545, -2474, -2474, -2474, -2474,   161, -2474,
   -2474, -2474, -2474,  1182, -2474,  1182,  1229, 37477,    87, 32340,
   -2474, 10514, -2474,   632,  1228,  1291,   583,  1685, 37477, -2474,
   21504,  1514, -2474,  1233, -2474, 26841,  1514, -2474, -2474, 14415,
    1361,  1515,  1452, -2474, -2474, -2474,  1243, 27529, 11981, 11981,
   -2474,   447, 27529,   984, -2474, -2474, -2474, -2474, -2474, -2474,
     747, -2474, 37477,   -24,  1410,   389,   645, -2474, -2474,   997,
    1248, 44949, 37477,  1519,  1474,  1524,  -135, -2474, -2474, -2474,
   46817, -2474, 37477, 37477, 45416, 45883, 29071, 37477, 28604, -2474,
   -2474, -2474, -2474, 37477,   324, 37477,  5172, -2474, -2474, -2474,
     173, -2474, -2474, -2474, -2474, -2474, 37477, 37477, -2474, -2474,
     173, 37477, 37477,   173, -2474,  1317, 37477, 37477, 37477, 37477,
    1318, 37477, 37477,   -68,   -68,  1454, -2474,  9536,  1254, -2474,
   10514, 10514, -2474, 10514,  1425, -2474,   650, -2474,  1466,    56,
    1303, 37477, 37477,   945, -2474, -2474, -2474, -2474, -2474,  1259,
    1598, -2474,  1582,  1599, 30939,   371,   948,  1308, -2474,   661,
   10514,  1482, -2474, -2474,  1472,    72, -2474, -2474, 28604,   105,
   -2474,  1484,   110, -2474,  1504,   635,  1729, -2474, -2474, -2474,
   -2474, -2474, -2474, -2474,   680, 18696, -2474, -2474,  1733,   360,
    1733,   569, -2474, -2474,  1733, -2474,  1733, -2474, 26378, -2474,
   11003, 46817,  1736, 37477,  1292,  1295, -2474, -2474, -2474, -2474,
   -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474,
   -2474, -2474,  1682,  1373, -2474,  1375,  1382,  1385, -2474, -2474,
   -2474, -2474, -2474, 46817, -2474, -2474,   730, -2474, 10514, 10514,
      38, -2474, 26905,   746, 10514,  1304,  1310,   765, -2474, -2474,
   -2474, -2474, -2474, -2474, -2474, -2474, -2474,  1315,  1614, -2474,
    1322,  1324,  1325, -2474, -2474,  4791, -2474, -2474, -2474, -2474,
   -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474,
    1327,  1316, 26941,  1334, 13937, 13937,  6602,  1006, -2474, 13937,
    1335, -2474, -2474,   769, 26859,  1333,  1338,  1323,  1336,  1341,
    1342, 27025, 10025, 10514, 10025, 10025, 27257,  1333,  1343, 27392,
   -2474, 10514,  1344, 23404, -2474, -2474, -2474,  4240,  4240,  4240,
   27626, -2474, -2474, -2474,  1365, -2474, 13937, 13937, -2474,  4182,
    2502,  6602, -2474, -2474,  1666, -2474,   788, -2474,  1350, -2474,
   -2474,  3018, -2474, 22911, 27568, 10514,   159, -2474, 10514,  1217,
   10514,  1432,  4240,  4240,  4240,   187,   187,   167,   167,   167,
     289,   175, -2474, -2474, -2474,  1352,  1354,  1355,  1554, 27529,
    1015, 10514, -2474, 27529,   773,   789, 37477,  3531,  4338,  4527,
   -2474, -2474, -2474, 17292,  1397,   -73,  1397,  1682,  4504, -2474,
     454, -2474, -2474, -2474, 27529, -2474,  1056, 17292,  1401,  1414,
     285, 20100,  1573, -2474, 37477, -2474, 37477, -2474,   -33,  1378,
   -2474, 10514, -2474, -2474,  1522,  1383,  1578,  1583,   943,   943,
     447,  1585, -2474, -2474,  1428, -2474, 10514,  1268, -2474,  1279,
   -2474, -2474, -2474, -2474,  1372, -2474, -2474,  1631, -2474, -2474,
   -2474, -2474,  1463,  1123, 10514,  1612, -2474,    95,  1402,  1738,
    -122,  1695, 37477, -2474,  1611, -2474,   872,  1746,   110,  1747,
     110, 28604, 28604, 28604,   771, -2474, -2474,   360, -2474, -2474,
     787, -2474,  -179, -2474, -2474, -2474,  1492,   453,  1123,  1582,
   -2474, -2474, -2474, -2474, -2474, -2474, -2474,   181,   460,  1123,
    1493, -2474,  1495, -2474,  1496,   555,  1123, -2474, -2474,  1416,
    1420,  1423, 11003, -2474, -2474, 27529, 27529, 27529,  1427, -2474,
      97, -2474, 37477, -2474, -2474, -2474,  1425, 37477,   635, -2474,
     967, 37477, 37477, 37477, 37477, -2474, -2474, -2474,  1430,  1431,
   -2474, 46817,   -67,  1636,  1639, 37477,  1478,  1118,  1879, -2474,
   27529,  1773, 37477, -2474, -2474, -2474, 37477, -2474,  1781,  1056,
   -2474, 28604, -2474, 31406, -2474, -2474, -2474, -2474,   360, -2474,
     360,  1662, 37477, 24977,   360,   360, -2474,   791,  1451,  1295,
     803, 46817,  1682,    69,  1447,  1376,   845,    22,  1276, -2474,
   -2474,   829, 27438, 10514, -2474,  1797, 46817, -2474, 23422, -2474,
   -2474, -2474, -2474, 10514, -2474, -2474, -2474, 10514, -2474, 22911,
   10514,  1772, -2474,  1929,  1929, 23386, 46817, 13937, 13937, 13937,
   13937,   656,   975, 13937, 13937, 13937, 13937, 13937, 13937, 13937,
   13937, 13937, 14904,   302, -2474, -2474, 10514, 10514,  1779,  1772,
   -2474, -2474, -2474,  -149,  -149, 46817,  1458,  1333,  1459,  1460,
   10514, -2474, 46817,   448, 23450, -2474,  4504, 10514,  1501,  1756,
   10514,   831, 10514,  1777, -2474, -2474,  1468, -2474, -2474, 46817,
   10514,  1465,  3059, 13937, 13937,  3174, -2474,  3388, 10514,  6602,
   -2474,  1454,  1510, 21972, -2474,  1562,  1562,  1562,  1562, -2474,
   -2474, 37477, 37477, 37477, 17760,  1790, 16824, 36076,  1469,  1300,
   -2474, 36076, 36543, -2474,  1486, -2474,   448, 10514,  1784,  1476,
    1784,  1477, -2474, -2474,  1485,  1469, 10514,  1629, -2474, -2474,
   -2474,  1537, -2474,   833, -2474,  1890,  1629, -2474,   838, -2474,
   21504,  1401, 10514,   448, -2474,  1498, -2474,  1383,   123, -2474,
   -2474, -2474,  1705, -2474, -2474, -2474, 37477, -2474, 37477, 23468,
    1840, -2474, 37477, 37477, 37477, -2474, 37477,   848,   141,  1505,
   -2474,   141,  1819,   609,  1118,   228,  2232,   468, -2474, -2474,
   -2474,  1576, 37477, -2474, 37477, -2474, -2474, -2474, -2474, -2474,
   29071, -2474, -2474, -2474, 28604, 22443, 28604, 37477, 37477, 37477,
   37477, 37477, 37477, 37477, 37477, 37477, 37477, -2474, -2474, -2474,
    1454, -2474, -2474, -2474,  -140, -2474, -2474,    97,  1508,  1308,
    1567, 46350,   878,  1582,  1521,  1973, -2474,   371, 30939, -2474,
   -2474, -2474,  1931, -2474,   263,   128, -2474, -2474,  1056, 37477,
    1586,   110, 37477, -2474,   882, -2474, -2474, -2474, -2474, 37477,
    1526, -2474,  1526, -2474, -2474, -2474,  1682, -2474, 37477, -2474,
    1533, -2474,  1535, -2474, -2474, -2474, -2474, -2474, -2474, -2474,
   -2474, -2474, 10514, 27529, -2474,  1536, -2474, 27529, 23486, -2474,
   27529,  1779, -2474,  1802,  1802,  1802,  1280,  1844,   134,  1527,
    1802,  1802,  1802,   282,   282,    75,    75,    75,  1929,   302,
   27529, 27529, -2474, -2474, -2474, -2474,  1539, -2474, -2474, -2474,
    1333,  1542, -2474, -2474,   272, 10514, 10514,  4182, -2474, 27673,
   10514, 46817,   886,  4182,   220, 10514,  2383,  2870, 10514, 10514,
    4006, 23797,  1544, 10514, 47269, -2474, -2474, 37477, 37477, 37477,
   37477, -2474, -2474, -2474, 36076, 36543,  1546, 16355,  1300,  1548,
   37010, -2474,  1623,  1547, 17292,  1815,  1748, -2474, 17292,  1748,
     781,  1748,  1826,  1623, 20568, -2474,  1623,  1556,  1757, -2474,
     527, 27529,  1990,  1866,   360,  1866,   360, -2474, 27529,  7580,
   -2474,  1056,   562, 37477,   448,   -66, -2474,  1577, 37477, -2474,
    1629, 27529, 22911, -2474, -2474, -2474, -2474, -2474, -2474, -2474,
   37477,   890, -2474,   894,   141, -2474,  1600, -2474,   168,  1854,
      24, -2474, 28604,  2625,   281, -2474,  1868,  1782, -2474,   173,
   -2474, 10514,   281,  1786,    71, 37477, -2474, -2474,  1883, -2474,
   46817,   110,   110, -2474, -2474,  1569,  1571,  1580,  1581,  1587,
    1590,  1592,  1596,  1601,  1602,  1603,  1605,  1606,  1607,  1608,
    1613,  1617,  1200,  1619, -2474,  1620,  1498,  1621,  1622,  1624,
   47736,  1625,  1626,  1627,  1634,  1635,   835,   855, -2474, -2474,
   -2474, -2474, -2474, -2474,   763,  1638, -2474,  1588, -2474, -2474,
    1655, -2474,  1656, -2474, -2474, -2474, -2474, -2474,  1594,   808,
     104, 37477,  2026,  1800,  1591,  1308, -2474, 30939,  1457,   149,
    1639, -2474,   297,  1478, -2474,  1959,  1618,  1788, 37477,  1616,
   -2474,  2036, -2474, 31406,  1526,  1615, 46817, -2474, -2474, 27529,
   -2474, -2474, -2474, 13937,  1907,  1641, 46817, -2474, -2474,  4182,
    4182, 27673,   898, -2474,  4182, 10514, 10514,  4182,  4182, 10514,
   -2474, -2474, 23963,  1787, -2474, -2474, -2474, -2474, -2474, -2474,
   -2474, 29538, 36076, -2474,  1643, -2474, 32807, -2474, -2474, 37477,
    1300, 17292, -2474, -2474,   169, -2474, 17292,  1871, -2474, 17292,
   -2474, 37477,  1645, -2474, 37477, -2474, 12470, 10514,  1640, -2474,
    1640, -2474,  1054, -2474,   285, -2474, -2474,  2003, 18228,  1981,
   10514, -2474, -2474,  1637,   141, -2474,  1792,  1600,  1646, -2474,
   -2474, -2474, -2474, -2474, -2474, -2474,   900,  1648, 37477, 37477,
   13937, -2474,   281,   170,   127, -2474,  1901, 37477,  1600, -2474,
   -2474, -2474, -2474,  2006,  2085,  1986, -2474, -2474, 27529, -2474,
   -2474,  1682,  1682, -2474, -2474,  2057, -2474, -2474, -2474, -2474,
     763,   380, 22443, 37477, 37477, -2474, -2474, -2474,  -140,  2016,
     902,  1056,  1989, 30939,  2103,  1654, 37477,  1478,   887,   887,
   -2474,  1795, -2474,  1796, -2474, -2474,   322, -2474, 37477, -2474,
   -2474, 18228,  1056, -2474, -2474, -2474,  2453, 13937, 46817,   919,
   -2474,  4182,  4182,  4182, -2474,  2092,  1454, -2474,   927,  2112,
   -2474, 37477,   -77,   -99,  1667,  1668, -2474, -2474,   929, -2474,
   10514,  1670, -2474, -2474, 17292,   169,   936, -2474, 46817, 37477,
     955, 46817,  6113,  1672, -2474, -2474, 27529, 27529, 37477,  1728,
    1728,  1724, 37477, 10514, -2474,   956,  2093,    26,   -30, 27529,
   -2474, 37477, -2474, 28604, -2474,   141, -2474, 28604, 10514, -2474,
    1307,  1280,  2131, -2474, -2474, -2474, -2474,  1600,   635, -2474,
   -2474,  1984, -2474, 37477,  1741,   399,  1758, -2474, -2474, -2474,
     808,   360,  1308,  1618, 37477,  1056,   371,   263, -2474, -2474,
   -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474, -2474,
   -2474,  2111,  1897,  2114,  1586,   968,  2453,   970, -2474, 10514,
     300,  1486, 29538,  1696, -2474,   986, -2474, -2474, -2474, -2474,
   -2474, 37477,   944, -2474, 27529, 37477, -2474, -2474, -2474, 37477,
    2057,   987, -2474, -2474, 12470,  1693, -2474,  2155,  1843, -2474,
   -2474,  1056, -2474, 23981,  1397, 18228, 37477, 37477, 37477, -2474,
    1828,   635,   141,  1008, -2474,  1720, -2474, 24024,  1927, -2474,
    2013, -2474,  1960,  1715, -2474, 10514, -2474,  1791, -2474, -2474,
   -2474,  2168, -2474,  1722,  1618,  1639,  1478,  1924, -2474,  1928,
    1723,  1308, -2474,  1333, 12959, 12959,  1725, -2474, -2474, 37477,
   -2474,  1009,  1726,  1024, -2474, -2474, -2474, -2474, 37477,  1730,
   32807, -2474,  2093, -2474, -2474, -2474,   231, -2474,   231, 21504,
    1960, -2474, 28604, 22443,  1949,  1715,   238,  1935,  1582, -2474,
   27529, -2474,  1056, 30939, -2474, -2474, -2474, -2474, -2474, 18228,
    1397, 15393,  1870,    59, 26877, -2474, -2474, -2474, -2474,  1033,
   -2474,  2209,  1888, -2474, -2474, -2474, -2474, 37477,  1383,  1383,
    -180,  1935, -2474, -2474,  2029, -2474, -2474, -2474, -2474, -2474,
     100,  1947, -2474,  1948,  1109,  1618,  1039, -2474,  2195, -2474,
   -2474, -2474, -2474, -2474, -2474,  1745,  1753, -2474,   231, -2474,
   -2474, -2474, -2474, -2474,    90,    90,  2122, -2474,  1817, -2474,
   -2474, -2474,  1308, 13448, -2474,  2236,  1383,   141, -2474,  2224,
   -2474,   119, -2474, -2474,  1397, -2474,  1760, -2474, -2474, -2474,
   -2474, -2474, -2474
};

/* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -2474, -2474, -2474,  1671, -2474, -2474, -2474,   222, -2474,   888,
   -2474,   210,  -539,   528, -2474, -2474, -2474,  -833,    14, -2474,
   -2474, -2474, -2474,    29,   265, -2474,  -418, -1817,  -170, -2474,
   -2341, -2433, -2474,  -473, -2316, -1606, -2474, -1009,   194, -2474,
   -2002, -2474,  -601,  -873,  -685,  -892, -2474,    -4, -2474,   930,
   -1007, -1689, -2307,  -472, -2474,  -537, -2474,  -304, -1682,  -504,
    -493, -2474, -2214,  -840, -2474,  1417,  -219, -2474,   573, -2474,
   -2003, -2474, -2474,   565, -2474,  -845, -2474, -2474, -1749,   218,
    -444, -1678, -2252,   517,  -611, -2474,  -491,   257, -1653, -2474,
     586, -2474,  -438, -2474,  -484, -2020, -2474, -2474, -2474,  1251,
    -624, -2474, -2474, -2474, -2474,    16, -2474, -2474, -2474, -2474,
   -2474,  -477,   523, -2180, -2474,   490, -2474, -2474, -2474, -2474,
     -50,   250, -2474,    40,   117,   -31,   -12,     3,    15,    43,
    1475,  1509, -2474,  -547,   318, -2474, -2474,  -570,   -48, -2474,
     638, -2462, -1943,  -413,   985,  1461,  1471,  -330,  -244, -2474,
    -403, -2474,  -681, -2474, -2474,   637,  1019, -1170, -1221, -2474,
     373, -2474,  -317, -2474,   125,  -404,  1017, -2474,  1488, -2474,
   -2474, -2474, -2474, -1179,   686, -1877,   398, -1871, -1761,   163,
     145,  -944,  -199,    19,   405,  -281, -2474, -2474,  -279, -1622,
   -2280,  -296,  -294, -2474, -2474, -1183,   896,  -862, -2474, -2474,
    -376,  1552, -2474, -2474, -2474,  1575,  1761, -2474, -2474,  1809,
    1983, -2474,   164,  1987,  1192,  -743,  1184, -1120,  1185, -1122,
   -1128, -1131,  1187,  1188, -1161,  2526, -1413,   949,    -5, -2474,
   -1630, -1522, -2474, -2474,   -61, -2474,  -355, -2474,  -353, -2474,
   -2474, -2474,  -337, -2473, -2474,  1117, -2474, -1178, -2474,  3004,
     698, -2474, -1540,  -557,  -639,  -895, -1421, -2474, -2474, -2474,
   -2474, -2474, -2474, -1557, -1684,  -571,   767, -2474, -2474,   874,
   -2474, -2474, -1145,  -589,   982,  -536,  -752,   774, -2474,  -540,
    1119, -2474,  1632,  -513,   798,  -934,    11, -2474,  -696,   269,
     953, -2474, -1992, -2474, -2474,  -505, -2095,  -818, -2474,  -606,
   -2474, -2474, -2474, -1083, -2474,   600, -2474, -1003, -2474,  -242,
   -2474, -2474, -2012, -2474, -2474, -2474, -2474, -2474, -2474,  -386,
   -2474,  -451,  -449, -2474, -2474,    12,  -687,  1326, -2474, -2474,
     436, -2474,   925, -2474,   819, -2474, -2474, -2474,  1110, -2474,
   -2474, -2474,    32,  1551,   413, -2474,  1120, -2474, -2474, -2474,
   -2474, -2474,   296, -2474, -1002, -2383,    58, -2216, -1027,    -6,
   -2474, -2474, -2474,  -518, -2474, -1985
};

/* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
   positive, shift that token.  If negative, reduce the rule which
   number is the opposite.  If zero, do what YYDEFACT says.
   If YYTABLE_NINF, syntax error.  */
#define YYTABLE_NINF -1665
static const yytype_int16 yytable[] =
{
     468,   464,   901,   574,  1034,   645,   711,  1041,   586,  1384,
     838,   816,   643,  1085,    41,    58,    51,   465,   867,  1085,
    1549,  1070,  1090,  1038,  1083,  1367,  1383,   827,   529,  1348,
    1208,    58,    72,  1218,  1970,  1414,  2021,  1415,   651,  1359,
      53,  1417,  1418,  1355,  1586,  1395,   588,  1446,   561,  2036,
    1837,  2038,  1337,  2324,  2243,  1561,  1524,  2342,    79,  1523,
    2326,   589,  1584,  1585,   900,  1522,   906,  1520,   910,  2017,
    1989,  1388,   652,  1931,  2350,   705,   572,  1099,   727,  2198,
     727,  -428,  2353,  1505,  -431,  -679,  1876,   472, -1019,  -679,
     828,  2215,  1073,  -994,  1656,  2505, -1016, -1016,  -682,  2676,
    1703,  1223,   535, -1541,  -674,   605, -1552, -1019, -1552, -1663,
   -1663, -1643, -1643, -1559, -1654, -1654,   597,    54,     3,     4,
   -1020, -1661, -1661,   564,  1085, -1559,  1085,  1085, -1017, -1017,
    1062,  1965,  1437,    54,  1653,  1277,  2510,  2514,  2072,  1042,
    2453,  1873,  1874,   712,  2560,  1965,  1893, -1020,  2828,  1700,
     636,   573,  -682,   535,   578, -1541,  -641,   727,  -654,  2496,
    1616,  -669,  1340,  1062,  1561,   535,   535,  1724,  1062,  2236,
    1263,  1595,   860,  -428,  1853,   587,  -431,  1077,  1227,  2100,
    2102,   863,   727,  1918,  1919,  2607,  1227,  1360,  1274,  1077,
     535,   711,  1085,    54,   727,  1085,  1085,   711,  1227,  1595,
    2213,   476,  2648,  1368,  -888,  2635,  1371,  1372,  1233,  1360,
    2079,  -888,   583,  2437,  2152,  1632,  1233,   583,  1267,  2814,
    2800,  1351,  1633,  1784,  2646,  -388,   581,  1217,  1233,  2491,
    2702,  1386,  -173,  2839,  2354,  2679,  2678,  -173,  1038,   579,
    1235,  1640,  1410,  2595,  1706,  2738,    25,  -907,  1235,  2649,
    1219,   581,  2479,   829,  -907,   830,  1351,  2257,   477,  1343,
    1235,  1091,  2205,  2374,  -475,  1967,  2049,  2255,  1682,  -475,
    1484,  1485,   548,  1393,  2778,   850,  2779,  1472,  1272,  2661,
    1394,    29,  2244,  1227,  1617,  2450,   856,  2593,  2798,   536,
     582,  2618,    80,  1876,  1721,  2508,  2045,  1307,  1618,  1275,
    1227,  1203,   532,  1619,   711,   711,   715,  1721,  1378,  2046,
    1990,  2472,  1336,  1876,  2131,   582,   534,   716,  2490,   546,
    1849,  2754,    31,  1204,  2215,  1382,  2254,  2410,  1293,  2129,
    1233,  2414,  1379,  2504,  -475,  2473,    81,  2206,  1620,  2258,
    2357,  2509,  2153,  2245,  2808,  1235,  2826,   874,   533,  1707,
    2835,  1722,  2829,   875,  1683,  2451,   858,  2594,  1411,  2251,
    -428,  2253,  1235,  -431,  2014,   535,  2801,   583,  1075,  2207,
    1184,  1076,   598,    34,   549,  1398,  1361,   851,  1488,  1489,
    1641,  2631,  2650,  -475,  2208,  1450,  1452,  1197,  2840,  2632,
    2355,  2777,   583,  2209,  1122,  2605,  2596,  2680,  1361,  1308,
     821,   567,  1208,  2259,  2647,  2260,  2787,  1345,  2375,  1561,
    1561,  1063,  2821,  1429,  1561,  1276,  2511,  1397,   576,  1358,
    2438,  -428,  1470,  2442,  -431,  1360,   481,  2210,   482,  2830,
    2699,  2512,  1965,  2399,  1965,  1549,  2783,  1358,   637,  2769,
    1427,   565,  2592,  2796,  1063,  1264,  2364,  2372,  2550,  1063,
    1289,  1561,  1561,   484,  1334,  2454,  2831,  1990,   876,  1358,
    1034,  1785,   580,  1335,  2133,  2134,  2135,  2136,   577,  2002,
    2140,  2141,  2142,  2143,  2144,  2145,  2146,  2147,  2148,  2149,
    2062,  2063,  1509,  1621,  1515,  1516,  1455,   613,    58,   614,
    2756,  2755,  1530,   574,  1531,  1532,  1716,  1972,  1268,  1991,
    2324,  2505,  1773,   584,  1814,   617,  1996,  2326,  2172,  1569,
     609,  1570,  2211,   615,   610, -1640, -1640,  1346,   710,  1700,
    2176,  2177,  1596,   473,   590,  1582,   831,  2815,   584,  -428,
    1384,  2540,  -431,  2497,  2549,  2788,   707,  1171,    58,  2553,
     868,  1389,  2555,  1203,   468,   468,   856,   522,  2481,  2482,
    1933,  1387,  2633,  -888,  2111,  1439,   643,  1891,   711,  1436,
    2444,   468,  1064,   588,  1634,  1204,  -679,  1442,  -428, -1019,
    -428,  -431,   609,  -431,  -994,  1773,   610,   832,   589,  1205,
    2455,  1507,  1211,  1974, -1541,  -674,  2050, -1552, -1019, -1552,
      54,    41,    58,    51, -1559,  1069,  -907,  1203,  2551,   848,
    2701, -1020,   949,   468,  1035,   591, -1559,   877,  2513,    72,
    2789,   839,  1506,  2705,  1361,  2706,   858,    53,  1724,  1204,
    2714,  1513,  1699,  1699,  1447,  1517,  1592,   705, -1020,  1507,
    1038,  1655,  2441,  1207,  1222,    79, -1541,  1182,   822,  1188,
      54,   573,  -669,   468,  1563,  1565,  1270,  1657,  2715,  1256,
    1081,  1082,  1251,  1252,  1253,  1254,  1255,  1256,  2109,  1192,
    1193,   879,  1081,  1082,  1179,   859,  1253,  1254,  1255,  1256,
       3,     4,   608,  2125,  1085,  1358,  1378,  2656,  1979,  1219,
     623,  1360,  1965,  1038,  1085,  1750,  1965,  1085,  2500,  1360,
     880,  1549,   587,  2132,    54,  1753,  1360,  1669,  1756,  2760,
    1379,   631,  2443,   710,  1057,  -173,  -173,   856,   823,   710,
     949,  1164,   857,  1980,   634,  2117,  2119,  2120,  2116,  2118,
     635,   721,  2156,  2265,  2115,  2114,   468,    58,   638,  2161,
    1598,   522,  1561,  1561,  1561,  1561,   639,  1184,  1561,  1561,
    1561,  1561,  1561,  1561,  1561,  1561,  1561,  1561,  1058,   649,
    2382,  2324,  1742,   574,   468,  2163,   881,  1197,  2326,  1085,
    2585,  1888,  1889,  1890,  1891,  1749,  2075,  1373,  1826,  2582,
    1824,  2539,  1085,   719,   468,   468,   468,   858,   468,  1886,
    1887,  1888,  1889,  1890,  1891,  2137,   720,  1504,  1561,  1561,
    2599,  1360,  1351,  2266,  1701,  1702,  1844,  1392,   874,   468,
    1713,   713,  1352,   714,   875,  2048,  2025,   717,  2576,   493,
    2834,  1813,  2052,   521,    25,  1815,   710,   710,  1817,  1802,
     539,  1803,   818,  1769,  1770,  1771,   859,  1748,  1913,    54,
     571,   571,  1034,  1831,  2278,  2809,  2810,  1351,  1832,  1449,
    1301,  1302,  1973,  1306,   727,   721,  1759,  1354,   468,    29,
    1203,  1766,   468,   468,  2434,   589,   589,  1384,   589,  1451,
     722,  2606,  2321,   468,   727,   848,  1186,  1996,  1438,   826,
    1361,  1751,  1204,  2267,  1203,  1670,  1754,  2060,  1361,  1965,
    2697,  1164,   601,  2837,   820,  1361,  1205,  1438,  1833,  1965,
      31,  2576,   835,  2682,  1965,  2022,  1204,  1965,  1176,  1177,
     853,  1215,   855,    32,  1374,  2686,   949,  2056,  1287,   876,
    1207,  1288,  1375,   949,  2619,    83,  1965,  1923,  1059,  2691,
    2138,    25,  1385,  1194,  2051, -1638, -1638,    33,  1993,  1790,
    2139,  1358,   609,   840,   949,    88,   610,   711,   471,  1358,
     841,    34,    25,  1924,   520,  1310,  1358,  2000,  2542,  2206,
     711,  1851,   727,  2543,   547,  2529,    29,   843,   559,   466,
    2526,  1971,  2080,  1310,   494,  2620,   844,  2087,   494,   587,
     587,   846,   587,  2621,   538,   494,   543,    29,  1086,   543,
    1361,  2207,   563,  1830,  1086,   494,   494,  1834,   817,  1835,
     819,  1311,  2001,  2001,   874,   847,  2416,    31,    25,  1965,
     875,  1906,  2622,  1908,  1909,  2209,  2023, -1639, -1639,  1311,
      32,   609,  2539,  -994,   726,   610,  1907,  1876,    31,   874,
     874,  1060,  1877,  1878,  1879,   875,   875,  1478,  1479,   543,
    -474,    32,  1965,    29,    33,  -474,   563,   494,   563,   563,
     563,  1358, -1641, -1641,  1921,  2576,   949,  2591,    34,   854,
    1312,  1290,  2733,   869,  1291,    33,  1220,  1925,   877,   873,
    1035,  1414,  1926,  1415,  1549,  2361,  1224,  1417,  1418,  1671,
     710,  2623,  1443,    84,    31,  1291,   871,  1469,   523,  1271,
    1470,    85,  2624,   872,  1217,  1969,  1035,    32,   707,  1279,
      58,  1086,  1086,  1484,  1485,   886,  1805,  2485,  1313,   885,
    -474,  1952,  1953,   903,  2033,   876,  2035,  2637,   878,   907,
    1502,    33,   879,  1503,  2636,    86,  1313,  1039,   476,  1665,
    1965,  1040,  1069,  2827,  2211,   524, -1642, -1642,  1604,  2576,
     876,   876,  1711,  1164,  2276,  1291,  2096,  1781,  2797, -1065,
    1782,   880,   619,  1043,   620,   887,  2110,  2112,  1809,  -474,
     626,  1470,  2269,  1965,  1605,   877,  1314,   621,  2811,   622,
    2154,  2155,    87,   468,   888, -1644, -1644,  1820,  2252,   468,
    1821,  1945,   468,  1946,  1314,   477,   468,  2069, -1645, -1645,
     613,    58,   614,  2525,  2268,   627,  2277,  1947,  1052,  1948,
     468,  2339,    54,   468,   468,   468,   468,  1880,   617,  1045,
    1927,  1488,  1489,   468,   468,   468,   615,   881,  1054,  2024,
    2025,  1928,  2841,  1056,   889,  1455,   468,  1850,  1881,   628,
    1291,  1164,   468,   468,   468,   468,  1035,  1061,  1561,   479,
     468,   468,  2234,  1857,  1068,   468,  1291,  1965,  2026,   468,
   -1646, -1646,   468,   468,   468,   468,   468,   468,   468,   468,
     468,  1066,  1861,   468,   877,  1291,  1895,   468,  2039,  1291,
     468,  2040,   468,  1606,   949,  2415,   629,  2418,  1607,  2625,
    1176,  1177,  2626,  1608,  2043, -1647, -1647,  2044,  2105,   877,
     877,  1503,  1071,    54,  1072,   468,  1074,  1882,   726,   633,
    2107,  1876,   626,  2108,  1092,  1194,  1877,  1878,  1879,  1166,
     832,  1167,   890,   468,   904,   711,  1169,    25,   879,  2321,
    -645,  2091,   468,   468,  1996,  1561,  2121,   648,  2168,  1291,
    2232,  1291,  1175,  2233,  1507,  2237,  -652,   627,  2238,   908,
    1712,  -521,  -521,   879,   879,  2256,  1673,   905,  1782,  1178,
     874,   874,    29,   481,  1164,   482,   875,   875,  1179,  1085,
    1035,   891,  1035,  2160,  1180,  1602,  1533,  1534,  1185,   892,
    2318,  2071,   909,   880,  -642,  2345,   571,   483,  1782,  2362,
     484,   893,  2363,  2383,  2457,  2660,  1503,  2446,  2660,  1181,
    1782,  2447,  1561,    31,  1782,  2530,  2276,  2586,  1503,  2612,
    2587,   949,  1782,  2205,   468,   468,    32,   468,  2187,  2188,
    2189,  2190,   894,   881,  1507,  2445,  2638,    34,   629,  1503,
    2365,  1609,  1187,    54,  2641,    25,  2653,  2642,  -643,  1069,
      33,  2460,  1610,  2658,   468,  1190,  2659,   563,   881,   881,
    2220,  -646,  1035,   625,    34, -1648, -1648,  1191,  1742,   563,
    2327,  -644,  2662,  2674,   494,  2659,  2675,   896,  1472,   710,
      29,   876,   876, -1649, -1649,  2711,  1529,  2712,  2675,  1196,
    1503,  1198,   710,  1199,   949,  1164,  1806,  2360,  2206,   897,
     642,   494,   494,  2720,  2726,  1200,  1069,  2659,  2462,  1883,
    1884,  1885,  1266,  1886,  1887,  1888,  1889,  1890,  1891,   899,
    2338,    31,  1881, -1650, -1650,  2741,  2770,  1164,  2742,  2771,
    2207,  1201,   468,   468,    32,   543,  1202,   543,   468,   726,
    1261,  2773,  1876,   563,  1069,  2208,  1209,  1877,  1878,  1879,
    2804,   494,  1210,  2659,  2209,   574,  2822,  1211,    33,  2675,
    1536,  1221,  2420,   563,  2165,  2423, -1651, -1651,  1537,  1538,
    1539,  1267,    34,    54,  1268,   563,  1281,  1658,   468,   468,
     468, -1652, -1652,   468, -1653, -1653, -1655, -1655,  2210,  1300,
    2321,  1882, -1656, -1656,  1294,  1996,   468,   468,   468,   468,
     574,  2688,   857,  1085,   859,   468,  2465,  1330,  1085,  1456,
     563,   563,   563,  1332,  2477, -1657, -1657, -1658, -1658,  1338,
     468,   468, -1659, -1659,  1356,   468,  2820, -1660, -1660,  1357,
     877,   877, -1662, -1662,  1358,  2506, -1664, -1664,  1365,   468,
    1400,  1401,   468,  1364,   468,  -525,  -525,  1363,   887,  2466,
    1450,  1452,  1369,  1457,  1376,  2610,  -524,  -524,  1486,  1487,
    1377,  1038,  1488,  1489,  2467,   468,  1381,   888,   571,  1391,
     574,  1283,  1285,  2211,  1396,  1507,  1403,   468,  1963,  1458,
    1757,  1764,  1404,  1408,   879,   879,  1412,  2486,  2487,  1413,
    1420,   468,  1963,  1423,   465,  1424,  1426,  1459,  1438,  1430,
    1171,  1460,  1468,  1215,  1168,   468,  2096,  1182,   465,  1474,
     613,    58,   614,  1758,  1765,  1188,  1471,   889,  1473,  2432,
     468,   727,  1461,  1508,  1509,  1462,  1514,  1567,   617,  1568,
    1227,  1581,  1594,  1601,  1612,  1613,   615,  1615,   468,  1463,
    1636,  1637,  1653,  1881,  1666,   600,  1659,   603,  1215,   607,
    1667,  1674,   582,  1681,  1086,  1035,  1035,  1035,  1829,  2468,
    1693,  1694,  1695,  1696,  1714,  1718,  1602,  1086,  1719,   583,
    1720,  1774,  1779,  1783,  1787,  1791,  1811,  1792,  1793,   881,
     881,  1812,  1940,  1883,  1884,  1885,  1807,  1886,  1887,  1888,
    1889,  1890,  1891,  1816,   726,  1819,   949,  1876,  1818,  1827,
    1957,  1838,  1877,  1878,  1879,   890,  1842,   563,  1845,  1843,
    1846,  1863,  1882,    54,  1957,  1450,  1452,  1847,   573,  2166,
    1848,  1859,  1901,   494,   494,  1164,  1085,  1860,  1464,   563,
     563,  1299,  1862,  1995,  1869,  1902,  1465,  2318,  1323,  1864,
     726,  1865,  1866,  1876,  1868,  1035,    25,   710, -1665, -1665,
   -1665,  1872,  1894,  1291,   891,  1900,   563,  1350,  1903,  1904,
    1911,  1915,   892,  1922,  1917,  1164,  1929,  1938,  1939,   563,
    1941,  1942,  1967,  1943,   893,   711,  1976,   468,  1466,  1978,
    1164,    29,  1985,  1992,  1998,  2004,   563,   468,  -526,  1806,
     563,   468,  2006,  -527,   468,  2003,  2007,  1440,  2008,  1441,
    1164,   468,   468,   468,   468,   894,  2010,   468,   468,   468,
     468,   468,   468,   468,   468,   468,   468,  2013,  2012,  2016,
     468,   468,    31,  2182,  2019,  2032,  2034,  2047,  2053,  1164,
    2054,  2055,  1384,  2057,   468,    32,  1164,  2058,   574,  1161,
    2059,   468,  2061,  2081,   468,  2088,   468,  2077,  2082,   887,
     896,  2078,  2089,  1164,   468,   574,  2085,   468,   468,    33,
    2092,  2099,   468,   468,  2113,  2106,    54,  2124,   888,  1897,
    1876,  1896,   897,    34,  2170,  2157,  2158,  2159,   468,  1963,
     468,  1963,  2174,  2589,  2171,  2183,  1950,  2196,  2218,  2204,
    2222,   468,   899,  2224,  2226,   465,  2640,   465,  1881,  2229,
     468,  2231,  2227,  2235,  1883,  1884,  1885,  2685,  1886,  1887,
    1888,  1889,  1890,  1891,  2242,  2246,   468,  2692,   889,  2250,
    2264,  2262,  2280,  1407,  2341,  1540,  1541,  1542,   563,  1543,
    1544,  1545,  1546,  1547,  1548,  1217,  2042,  2347,  1433,  2348,
    2352,  2373,  1278,  2376,   642,  2358,  1782,   642,  2367,  2406,
    2368,   494,   494,  2370,   494,   642,  2377,   563,  2645,  2378,
    2411,  2391,  2401,  2409,  1035,  2402,  2412,  1882,  1035,  2325,
    1035,  2419,  2424,  2425,  2426,  2427,  2645,  1085,  2448,  2065,
    2452,  2476,  2440,  2475,  2272,  2480,  1215, -1016,  2318, -1638,
    2493,  2494,  2501,  2492,  2502,  2515,  2516,  2518, -1639, -1640,
    2740,  2194,  2522,  2197,  2527, -1641,   890,  2503, -1642,  1161,
   -1643,  2495,  2713,  1882, -1644,  2535,  2554,  2568,  2572, -1645,
   -1646, -1647,  1086, -1648, -1649, -1650, -1651,  2097,  2694,  2098,
    2524, -1652,  2521,  2103,  2104, -1653,   618, -1655, -1656, -1657,
   -1658,  2578, -1659, -1660, -1661, -1662,   468,  2597,   630,  2581,
    2600,  2601, -1663, -1664,  2580,   891, -1017,  2528,  2356,  2541,
    2603,  2559,  2583,   892,  2588,  2602,  2685,  2611,  2614,  2615,
    1717,  2616,  2723,  2629,  2630,   893,  2639,  2794,  2643,  1558,
    1725,  1551,  1728,  2651,  2652,  1739,  2655,  2668,  2671,   468,
     468,  1743,  2664,  1745,   468,  1164,  2676,  2690,  2693,   468,
    2695,  2735,   468,   468,  2698,  1752,   894,   468,  2707,  2708,
    1755,  2709,  2719,  2728,  1760,  1761,  1762,  1763,   642,  1767,
    1768,  2729,   825,  2730,  2739,  2743,  2596,  2745,   468,  1963,
    2746,  2748,   468,  1963,  2752,    54,  2757,  2751,  2753,  2759,
    2758,  2784,  2768,  2772,  2790,   465,  2184,  2799,  2805,   465,
     563,   896,  2806,   468,   870,  2813,  2816,  2818,  2823,  1883,
    1884,  1885,  2824,  1886,  1887,  1888,  1889,  1890,  1891,  2825,
     563,  2814,   563,   897,  2815,  2836,  2838,  2842,   845,  2279,
    2283,  1675,  1744,  1680,  2030,  2239,  1035,  2734,  1692,  1047,
    1049,  1051,  2436,   899,  2571,   468,  2780,  2346,   887,  1153,
    2483,  2433,  2435,  2786,  1164, -1665, -1665, -1665,  2833,  1886,
    1887,  1888,  1889,  1890,  1891,   563,  2689,   888,  2812,  2819,
    2628,  1347,  1155,  2015,  1350,   494,  2351,  2037,  2782,  2066,
    2817,  2284,  2781,  2011,  2325,   494,  1726,   494,  1730,  2067,
     494,  2093,  1435,  2523,  2323,  1292,   494,  2340,   494,  1994,
    1710,  1957,  2722,  1327,  1273,  1957,  2670,  2776,  1690,   642,
     494,  1161,  1326,  2005,   642,   494,  2065,   889,  2270,   494,
     494,   494,   494,  2225,   494,   494,  2271,  2727,    54,    54,
    2430,  1709,  1331,  1975,  2199,  2417,  2657,   710,  2400,  2195,
    1164,  2718,  2717,  2724,   563,  1789,  2725,   468,  1839,  2570,
    1164,  1519,  1521,  2774,  1525,  1526,  2775,  1801,  2767,   468,
     468,  1642,  1997,   468,  1854,  1778,  1936,  1652,  2507,  2070,
    1934,   726,  2710,  1836,  1876,   468,  1963,  1295,  1661,  1877,
    1878,  1879,  1448,  2272,  2240,   468,  1963,     0,     0,  1663,
     468,  1963,   465,   468,  1963,     0,  2385,     0,     0,  1161,
     468,   468,   465,     0,     0,   890,  1841,   465,  -440,     0,
     465,     0,   468,  1963,   468,     0,     0,     0,     0,  1153,
       0,  -440,     0,     0,     0,     0,  -440,     0,     0,   465,
       0,     0,     0,     0,   468,     0,  1286,     0,     0,     0,
       0,   726,  1155,     0,  1876,    54,     0,     0,     0,  1877,
    1878,  1879,     0,     0,   891,     0,     0,     0,  1156,  1297,
       0,     0,   892,     0,     0,     0,  2325,     0,     0,     0,
       0,     0,  -440,  2429,   893,  2431,  2273,     0,     0,     0,
       0,     0,     0,  1558,  1558,  1339,     0,     0,  1558,     0,
    1226,  -440,     0,  1227,     0,   468,  1963,     0,  1366,     0,
       0,   468,  1164,     0,     0,   894,  1158,     0,  1957,     0,
       0,   574,   465,  1957,     0,     0,  1957,     0,     0,  1390,
       0,  2613,  1161,  1233,   468,  1558,  1558,   475,   468,  1963,
   -1665,   476,  1164,     0,     0,  1164,   468,     0,     0,     0,
    -440,     0,  2507,     0,     0,   465,  1551,   468,     0,  -440,
     896,     0, -1065,     0,     0,  1235,     0,  1035,     0,     0,
       0,  1035,   468,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   897,     0,     0,  1881,     0,     0,     0,   563,
       0,     0,     0,  2084,     0,     0,  1966,     0,   477,     0,
       0,     0,   899,     0,  2274,   478,     0,  2275,    54,     0,
    1966,     0,     0,     0,  1984,     0,     0,  1987,     0,  1680,
       0,     0,  1086,   468,     0,     0,   468,  1963,     0,    54,
       0,     0,     0,     0,  1920,     0,     0,     0,  1156,     0,
       0,     0,     0,   465,     0,  2704,     0,     0,   468,     0,
       0,     0,   479,  1161,  1882, -1665,     0,     0,     0,   468,
    1963,  1957,     0,     0, -1665,  1407,     0,  1419,     0,  1215,
       0,     0,     0,     0,     0,     0,   465,     0, -1665,   468,
       0,  1153,  2457, -1665,     0,  1161,  1158,     0,  2458,     0,
    1159,     0,     0,     0,  1160,  -440,  1445,     0,   468,   468,
    2459,  2731,     0,     0,  1155,     0,     0,     0,  1358,     0,
       0,     0,     0,     0,     0,     0,     0,     0, -1665,     0,
     480,     0,    54,     0,  1882,  1407,  1035,  2325,     0,  2460,
     563,  2461,     0,     0,  1407,   563,   563,   563,     0,     0,
       0,     0,     0,   468,  1963,   468,     0,     0,   494,     0,
       0,  2323,     0,     0,     0,   563,     0,     0,   609,   642,
     465,   843,   610,     0,     0,     0,   481,     0,   482,  1153,
       0,     0,     0,  1244,     0,  1407,  1407,     0,    54,     0,
       0,     0,  2795,     0,     0,     0,  2462,     0,     0,     0,
     483,     0,  1155,   484,     0,     0,  2248,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   468,     0,     0,
       0,     0,  1551,  2463,     0,     0,  1558,  1558,  1558,  1558,
    2281,     0,  1558,  1558,  1558,  1558,  1558,  1558,  1558,  1558,
    1558,  1558,     0,     0,     0,  2328,  2329,  2330,  2331,  2332,
    2333,  2334,  2335,  2336,  2337,     0,  1883,  1884,  1885,     0,
    1886,  1887,  1888,  1889,  1890,  1891,     0,     0,     0,    54,
    1159,     0,     0, -1665,  1160,     0,     0,     0,   726,     0,
    2700,  1876,  1558,  1558,     0,     0,  1877,  1878,  1879,  2464,
       0,     0,     0,     0,  2465,     0,  2186,     0,     0,  1651,
    1156,     0,  1153,  2386,   563,   563,   563,   466,     0,  1966,
    2203,     0,     0,     0,  2203,  2217,     0,     0,     0,  1660,
       0,  1662,     0,     0,     0,  1155,  1883,  1884,  1885,     0,
    1886,  1887,  1888,  1889,  1890,  1891,     0,  2466,     0,     0,
       0,     0,     0,  1680,     0,     0,     0,     0,  1158,     0,
       0,     0,  2467,     0,     0,     0,     0,     0,     0,   563,
       0,   494,     0,     0,  1705,  1407,  1350,  1407,     0,  1433,
       0,     0, -1665,     0,     0,     0,     0,     0,     0,  1251,
    1252,  1253,  1254,  1255,  1256,   494,     0,  2282,  1156,     0,
       0,     0,     0,  1161,     0,     0,     0,     0,     0,     0,
     494,   494,   494,   494,   494,   494,   494,   494,   494,   494,
       0,     0,  2323,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1153,   563,     0,  1226,     0,     0,  1227,
       0,  1350,     0,  1161,     0,     0,  1158,     0,     0,  1476,
    1477,     0,  1433,  1788,     0,   563,  1155,  2468,  1161,     0,
       0,     0,  1407,     0,     0,  1153,     0,     0,     0,  1233,
       0,  2366,     0,     0,     0,     0, -1665,  1226,  1161,     0,
    1227,     0,     0,     0,     0,     0,   798,   798,  1155,     0,
       0,     0,  1881,     0,     0,     0,     0,     0,     0,     0,
       0,  1235,     0,     0,     0,     0,     0,  1161,     0,     0,
    1233,     0,     0,     0,  1161,     0,     0, -1665,     0,     0,
       0,  1156,     0,  1478,  1479,     0,     0,     0,     0,     0,
       0,  1161,  1159,     0,     0,     0,  1160,     0,     0,     0,
       0,     0,  1235,     0,   944,   951,     0,  2394,     0,     0,
     563,   563,   563,   563,     0,     0,     0,  2203,  2217,     0,
    2203,  1882,     0,  2404,     0,     0,     0,  1966,     0,  1158,
    1930,  1966,     0,     0,     0,     0,     0,  2422,     0,     0,
       0,     0,     0,     0,     0,  1480,  1481,  1482,  1483,  1484,
    1485,     0,  1226,  1486,  1487,  1227,  1984,     0,     0,     0,
   -1665,  1680,     0,     0,     0,  1551,     0,     0,     0,     0,
       0,  2175,     0,  1350, -1665,     0,     0,     0,     0, -1665,
    1159,     0,     0,     0,  1160,  1233,     0,     0,     0,     0,
       0,     0, -1665,     0,     0,     0,     0,     0,  2484,     0,
       0, -1665,  1156,     0,     0,     0,     0,  1161,     0,     0,
       0,     0,   944,     0, -1665, -1665,     0,  1235,     0,     0,
   -1665,     0,     0,     0,     0,     0,     0,  2590,  1173,     0,
       0,     0,     0,     0,  1156,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1949,     0,
    1158,     0,     0,     0,     0, -1665,  1195,  1488,  1489,     0,
       0,  2608,  2609,     0,  1407,     0,     0,     0,     0,  1244,
    1801,     0,     0,     0,  2617,     0,  1212,  1213,  1214,     0,
    1216,  2519,  1158,     0,     0,     0,  2178,     0,     0,     0,
       0,     0,  1558,     0,     0,     0,     0,     0,     0,     0,
       0,  1265,     0,  1159,     0,     0,     0,  1160,     0,     0,
    1244,     0,     0,  1883,  1884,  1885, -1665,  1886,  1887,  1888,
    1889,  1890,  1891,  1153,   466,  2203,     0,     0,     0,  2547,
   -1665,     0,   494,  1161,  1966, -1665,     0,     0,     0,  1966,
    2672,     0,  1966,     0,  2558,     0,  1155,  2561,     0,     0,
    1305,     0,     0,     0,  1317,  1322,     0,     0,     0, -1665,
       0,  2577,     0,  1153,     0,     0,  1226,  1490,  1491,  1227,
   -1665,     0,     0,     0,     0,     0,     0,     0,  1153,  1558,
       0,   642,   494,     0,     0,     0,  1155,  1492,     0,  2068,
     563,     0,     0,     0,  2073,  2074,  2076,     0,  1153,  1233,
   -1665,  1155,     0,     0,     0,     0, -1665,     0,   944,     0,
       0,     0,     0,     0,  2090,   944,   494,   494,     0,     0,
       0,  1155,     0,     0,  1159,  1244,  1350,  1153,  1160,   494,
       0,  1235,     0,     0,  1153,     0,   944,     0,     0,     0,
       0,   563,  1161,     0,  2577,     0,  1558,     0,     0,     0,
    1155,  1153,     0,     0,     0,     0,  1159,  1155, -1665,     0,
    1160,     0,     0,     0,   494,  1251,  1252,  1253,  1254,  1255,
    1256,     0,  1161,     0,  1155,     0,     0,  1966,     0,     0,
       0,     0,  2561,     0,     0,     0,     0,     0,     0,     0,
       0,  2667,     0,     0,     0,   494,     0,     0,     0, -1665,
    2179, -1445,     0,     0,   563,     0,  1251,  1252,  1253,  1254,
    1255,  1256,     0,     0,     0, -1665,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   642,     0,  1161,     0,
   -1665,     0,  1156,     0,     0,     0,     0,   563,  1161,     0,
       0,     0,     0,     0, -1665,     0,     0,     0,   944, -1665,
       0,     0,     0,  2191,  2192,  2193,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   466,     0,  1153,     0,     0,
       0,     0,  1156,     0,  2721,     0,     0,     0,   494,     0,
    1158,     0,  2558,     0, -1665,     0,     0,  1156,     0,     0,
    1155,     0,     0, -1445,     0,     0,     0,     0,  2577,   642,
     642,   642,     0,     0,     0,     0,     0,  1156,  2247,     0,
       0,     0,     0,     0, -1665,     0,     0,     0,     0,     0,
    1158,  1251,  1252,  1253,  1254,  1255,  1256,     0,     0,     0,
       0,     0,     0,     0,     0,  1158,  1156,     0,     0,  1244,
       0,     0,  2558,  1156,     0, -1445,     0,     0,     0,     0,
       0,  2667,     0,  2547,  1161,  1158,     0,     0, -1445,     0,
    1156,     0,  1680, -1445,     0,     0,     0,     0, -1445,     0,
       0,  1512,     0,  2344,     0,     0,  1350, -1445,     0,     0,
   -1445,     0,  2577,     0,  1158,     0,     0,     0,     0,     0,
    1161,  1158,  1535,  1153,  1445,  1552,     0,     0,  1564,     0,
     642,     0,     0,     0,     0,  1571,  1576,  1579,  1158, -1445,
       0,     0,     0,     0,     0,     0,  1155,     0,  1583,     0,
    1161,     0,     0,  1161,  1587,  1588,  1589,  1590, -1445, -1665,
       0,     0,  1599,  1600,     0,     0,     0,  1611,     0,     0,
       0,  1614,     0,     0,  1622,  1623,  1624,  1625,  1626,  1627,
    1628,  1629,  1630,     0,  1159,  1631,     0,     0,  1160,  1639,
       0,     0,  1643,     0,   798,     0,   944,     0,     0,     0,
       0,     0,  1259,     0,     0,     0,  1156, -1445,     0,     0,
   -1445,     0,     0,     0,     0,     0, -1445,  1664,     0,  2395,
    2396,  2397,  2398,     0,  1159,     0,     0,     0,  1160,     0,
       0,     0,  1153,     0,     0,     0,     0,     0,     0,  1159,
       0,  1259,     0,  1160,  1213,  1214,     0,     0,     0,     0,
       0,   874,     0,     0,  1158,  1155,     0,   875, -1665,  1159,
       0,     0,  1153,  1160,   887,  1251,  1252,  1253,  1254,  1255,
    1256, -1445,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   888,     0,  1155,     0,     0,  1159,     0,
       0,     0,  1160,     0,     0,  1159,     0,     0,     0,  1160,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1159,     0,     0,     0,  1160,     0,  1153,     0,
       0,     0,     0,   944,     0,  1950,  1775,  1776,  1153,  1777,
       0,     0,  1156,   889,     0,  1161,     0,     0,     0,     0,
       0,  1155,     0,     0,     0,     0,     0,     0,  1259,     0,
       0,  1155, -1445,     0,     0,  1259,  1810,     0,     0,     0,
   -1445,     0,   876,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0, -1445,     0, -1445, -1445,
    1158,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   944,     0,     0,     0,
       0,     0,     0,     0,     0,   -38,     0,     0,     0,     0,
       0,     0,     0,     0,  1226, -1445,     0,  1227, -1445, -1445,
   -1445,   890,     0,     0,     1,     0,     0,     0,  1159,     0,
       0,     0,  1160,     0,     2,  1852,     3,     4,     0,     0,
    1858,  1156,     0,     0,  1153,     0,     0,  1233,     0,     0,
       0,     0,     5,     0, -1665,     0,     0,     0,     0,     0,
       0,     6,     0,     0,     0,     0,     0,  1155,     0,     0,
     891,  1156,     0,     7,     0,     0,     0,     0,   892,  1235,
    1153,     0,  1875,     0,     8,     0,     0,     0,     0,  1158,
     893,     0,     0,     0,     0,     9,     0,    10,  1576,  2598,
    1576,  1576,     0,  1155,     0,     0,     0,  1914,     0,     0,
    1153,   877,     0,  1153,     0,    11,     0,     0,     0,  1158,
       0,   894,     0,     0,     0,     0,     0,  1156,     0,    12,
       0,     0,     0,  1155,     0,     0,  1155,  1156,     0,    13,
       0,  1932,     0,     0,  1935,    14,  1937,     0,  2389,     0,
    2634,     0,     0,    15,  1159,    16,    17,     0,  1160,     0,
       0,   895,     0,     0,     0,   879,   896,     0,    18,     0,
       0,     0,     0,     0,     0,  1158,     0,  1259, -1665,     0,
       0,     0,     0,     0,     0,  1158,     0,     0,   897,     0,
    1226,     0, -1665,  1227,   898,    19,     0, -1665,     0,  1259,
       0,     0,     0,     0,  1559,     0,     0,  1305,   899,     0,
       0,     0,     0,  2681,     0,     0,  1259,  1259,  1259,     0,
    1259,     0,  1322,  1233,     0,     0,     0,     0,     0,     0,
   -1665,     0, -1665,     0,    20,     0,     0,     0,     0,     0,
    2009,     0,     0,     0,     0,     0,  2703,     0,  1226,     0,
       0,  1227,     0,  1156,     0,  1235, -1665, -1665, -1665,     0,
     881,     0,     0,  1159,     0,     0,     0,  1160,     0,  1259,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1233,     0,     0,     0,     0,     0,  1244,  1234,  1156,
       0,     0,     0,  1159,     0,  1153,     0,  1160,   944,     0,
       0,  1158,     0,     0,     0,     0,     0,     0,     0,  1259,
       0,    21,     0,  1235,    22,     0,     0,     0,  1155,  1156,
       0,  1259,  1156,     0,     0,     0,  1259,     0,  1518,     0,
     535,     0,     0,     0,     0,     0,     0,  1158, -1447,     0,
       0,     0,    23,     0,     0,     0,     0,     0,     0,  1159,
      24,     0,     0,  1160, -1665,     0,     0,     0,     0,  1159,
       0,     0,     0,  1160,    25,     0,     0,  1158, -1665,     0,
    1158,    26,     0, -1665,     0,    27,     0, -1665,     0,  2123,
       0,     0,     0,     0,     0,    28,     0,     0,     0,  2127,
       0,     0,     0,  2128,     0,     0,  2130,     0,     0,    29,
       0,     0,     0,     0,     0,     0,     0,     0, -1665,     0,
       0,     0,  1236,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2150,  2151,     0,     0,  1237,     0,     0,     0,
   -1447,  1238,     0,  1476,  1477,    30,     0,     0,     0,     0,
      31,     0,     0,  2164,     0,     0,  2167,     0,  2169,     0,
       0,     0,     0,    32,     0,     0,  2173,     0,     0,     0,
       0,     0,     0,  1244,  2180,  2181,  1241,     0,     0,     0,
       0,     0,     0,     0,     0,  1159, -1665,    33,     0,  1160,
       0,     0, -1447,  1251,  1252,  1253,  1254,  1255,  1256,     0,
       0,    34,     0,  2221,   -38, -1447,     0,     0,     0,     0,
   -1447,     0,  2228,     0,  1156, -1447,     0,  1478,  1479,     0,
       0,  1159,     0,     0, -1447,  1160,  1259, -1447,  2241,     0,
       0,  1244,     0,     0,     0,     0,     0, -1461,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1259,
       0,  1159,     0,     0,  1159,  1160, -1447,     0,  1160,     0,
       0,     0,  1158, -1665,     0,     0,  1259,     0,  1559,  1559,
       0,  1892,     0,  1559,     0, -1447,     0,     0,  1259,  1480,
    1481,  1482,  1483,  1484,  1485,  1259,     0,  1486,  1487,     0,
    1259,     0,     0,  1259,     0,     0,     0,  1259,     0,     0,
       0,  1259,  1259,  1259,  1259,     0,     0,     0,     0,     0,
    1559,  1559,     0,  1259,  1259,     0,     0,     0,     0,     0,
       0,  1246,  1476,  1477, -1447,  1259,     0, -1447,  1259, -1461,
       0,     0,     0, -1447,     0,     0,  1259,  1259,  1259,  1259,
    1259,  1259,  1259,  1259,  1259,  1259,     0,     0,     0,     0,
       0,     0,     0,  1259,     0,     0,     0,  1259,  2369,     0,
       0,     0, -1665,     0,     0,     0,     0,     0,     0,  1251,
    1252,  1253,  1254,  1255,  1256,     0,     0,     0,  1259,     0,
       0, -1461,     0,     0,     0,     0,     0,     0, -1447,     0,
       0,  1488,  1489,     0, -1461,     0,  1478,  1479,     0, -1461,
       0,  2379,  2380,     0, -1461,     0,  2381,     0,     0,     0,
       0,  2384,     0, -1461,  2387,  2388, -1461,     0,     0,  2392,
    1247,     0,     0, -1665, -1665, -1665,     0,  1251,  1252,  1253,
    1254,  1255,  1256,     0,     0,     0,  1159,     0,     0,     0,
    1160,     0,  1950,     0,     0, -1461,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1480,  1481,
    1482,  1483,  1484,  1485, -1461,   798,  1486,  1487,     0, -1447,
       0,     0,     0,     0,     0,     0,     0, -1447,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1259,
    1259,  1259,     0, -1447,     0, -1447, -1447,     0,     0,     0,
       0,  1490,  1491,     0,     0,     0,     0,  2478,     0,  1226,
       0,     0,  1227, -1461,     0,     0, -1461,  1228,  1229,  1230,
       0,     0, -1461,     0,  1259,     0,     0,     0,     0,     0,
       0,     0, -1447,     0,  1231, -1447, -1447, -1447,     0,     0,
       0,     0,  1233,     0,     0,     0,     0,     0,     0,  1234,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1259,     0,     0,     0,
    1488,  1489,  1259,     0,  1235,     0,     0, -1461,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1892,  1892,  1259,
       0,  1559,  1559,  1559,  1559,     0,     0,  1559,  1559,  1559,
    1559,  1559,  1559,  1559,  1559,  1559,  1559,  1892,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2531,  2532,     0,     0,  2533,     0,     0,  1259,     0,
       0,  1950,  1892,  1892,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1259,  1559,  1559,  1259,
       0,  1259,     0,     0,     0,     0,     0,     0, -1461,     0,
       0,     0,  2566,  2567,     0,     0, -1461,     0,     0,     0,
       0,     0,     0,  1236,     0,     0,  2579,     0,     0,     0,
    1490,  1491, -1461,     0, -1461, -1461,     0,  1237,     0,     0,
       0,     0,  1238,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1239,  1240,     0,     0,     0,     0,     0,
       0, -1461,     0,  1259, -1461, -1461, -1461,  1241,     0,  1225,
       0,     0,     0,     0,  1226,     0,     0,  1227,     0,     0,
       0,     0,  1228,  1229,  1230,     0,     0,     0,     0,   496,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1231,
       0,     0,  1232,     0,     0,  1242,     0,  1233,  1243,     0,
       0,     0,     0,     0,  1234,     0,     0,     0,     0,     0,
       0,     0,  1244,     0,     0,  1245,  2654,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1216,  1235,
       0,     0,   497,     0,     0,     0,     0,     0,     0,  2673,
       0,     0,     0,     0,     0,     0,     0,   498,     0,     0,
       0,     0,     0,     0,  2687,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1259,     0,     0,
       0,  1259,  1259,     0,  1259,     0,     0,  1892,  1892,  1892,
    1892,     0,     0,     0,  1892,  1892,  1892,  1892,  1892,  1892,
    1892,  1892,  1892,  1892,  1259,  1259,     0,     0,     0,     0,
       0,   499,  1246,     0,     0,     0,     0,     0,  1259,     0,
     500,  1259,     0,  1259,     0,     0,     0,  1259,     0,     0,
    1892,  1892,   501,     0,  1259,  1259,     0,   502,  1236,     0,
    2566,     0,     0,     0,     0,   874,     0,     0,     0,     0,
       0,   875,  1237,     0,     0,     0,     0,  1238,   887,     0,
       0,     0,   503,     0,     0,     0,     0,     0,     0,     0,
       0,  2750,     0,     0,     0,  1259,     0,   888,  1239,  1240,
       0,     0,  1259,     0,     0,     0,     0,     0,     0,     0,
    2764,  2764,  1241,     0,     0,  1259,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   504,     0,     0,     0,   505,
       0,  1247,     0,     0,  1248,  1249,  1250,     0,  1251,  1252,
    1253,  1254,  1255,  1256,     0,     0,     0,   889,     0,     0,
    1242,  1867,     0,  1243,     0,     0,     0,  2764,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1244,     0,     0,
    1245,     0,     0,     0,     0,     0,   876,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   506,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   507,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2764,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   890,     0,   508,     0,     0,
     509,     0,     0,  1259,     0,     0,     0,  1559,   510,     0,
       0,   511,     0,  1259,  1259,  1259,     0,  1246,  1259,     0,
       0,  1259,  1259,     0,     0,     0,  1259,     0,     0,     0,
     512,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   513,     0,   891,     0,     0,     0,     0,   514,
       0,     0,   892,     0,     0,     0,     0,     0,   515,     0,
       0,     0,     0,     0,   893,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   877,     0,     0,     0,   516,
       0,     0,     0,     0,  1559,   894,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1259,     0,     0,     0,  1247,     0,     0,  1248,
    1249,  1250,     0,  1251,  1252,  1253,  1254,  1255,  1256,     0,
       0,     0,     0,     0,     0,  1746,     0,     0,     0,   879,
     896,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1892,  1559,   897,     0,     0,  1259,  1259,  1259,  1747,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   899,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1259,  1259,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1259,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1892,     0,     0,     0,     0,
       0,     0,     0,     0,   881,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   911,   723,   535,
     724,   725,   726,   727,   728,     0,     0,     0,     0,     0,
    1892,     0,     0,    90,    91,    92,    93,    94,    95,    96,
      97,   912,    98,    99,   100,     0,     0,     0,  1259,     0,
       0,     0,   101,   102,     0,   103,   104,   105,   913,   107,
     108,   109,   110,   729,   914,   730,   731,  1259,   115,   116,
     117,   118,   119,   120,   732,   733,   121,   122,   734,   735,
     125,  1259,   126,   127,   128,   129,   736,     0,   915,     0,
     132,   133,   134,   135,   136,   916,   138,   139,   140,     0,
     141,   142,   143,   144,   145,   146,     0,   917,   148,   149,
     150,   738,   739,   740,   918,   742,   743,   744,   152,   153,
     154,   155,   156,   157,   158,   745,   746,   161,   747,   162,
       0,   163,   164,   165,   166,   167,   168,     0,   169,   170,
     171,   172,   173,   919,  1259,   174,   175,   748,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,  1259,   185,
     186,   187,   188,   749,   190,   191,   192,   193,   750,   751,
     195,     0,   196,   197,   752,   199,     0,   200,     0,   201,
     920,     0,   921,   204,   205,   206,   922,   208,     0,   209,
       0,   210,   211,     0,   212,   213,   214,   215,   216,   217,
     923,   219,   220,   221,   222,     0,   223,   224,   225,   226,
     227,   228,     0,   229,   924,   231,   232,   233,   234,   235,
     753,   754,     0,   755,     0,   239,   925,   926,   242,   927,
     244,   245,   246,   247,   248,     0,     0,   249,   928,   251,
     929,     0,   253,   254,   255,   756,   757,   256,   257,   258,
     259,   260,   930,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   758,   931,   759,   283,   284,   285,   286,   760,   287,
     288,   932,   290,   761,   762,   292,   763,   294,   295,   296,
       0,   297,   298,     0,     0,   764,   300,   301,     0,     0,
     302,   303,   933,   305,   934,   765,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,     0,   318,   319,   766,
     321,   322,   323,   324,   325,   326,     0,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   767,   337,   338,   339,
     340,     0,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,     0,   353,   354,   935,   356,   357,
     358,   768,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,     0,   371,   372,   373,   374,   375,   769,
     376,   377,   378,   379,   380,   936,   382,   383,   770,   385,
       0,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   937,   398,   771,     0,   400,   401,     0,   402,
     938,   404,   405,   406,   407,   408,     0,   772,   773,     0,
       0,   411,   412,   774,   414,   775,   776,   416,   417,   939,
     419,   420,   421,   422,   423,     0,     0,   424,   425,   426,
     427,   428,   778,     0,   429,   430,   431,   432,   433,   434,
     779,   940,   436,   941,   438,   439,   440,   441,     0,     0,
     442,     0,     0,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   780,     0,     0,     0,     0,     0,
       0,   781,   782,   942,     0,     0,     0,     0,     0,     0,
     784,   943,     0,     0,     0,   785,    89,   723,   535,   724,
     725,   726,   727,   728,     0,     0,     0,     0,     0,     0,
       0,     0,    90,    91,    92,    93,    94,    95,    96,    97,
       0,    98,    99,   100,     0,     0,     0,     0,     0,     0,
       0,   101,   102,     0,   103,   104,   105,   106,   107,   108,
     109,   110,   729,   112,   730,   731,     0,   115,   116,   117,
     118,   119,   120,   732,   733,   121,   122,   734,   735,   125,
       0,   126,   127,   128,   129,   736,     0,   737,     0,   132,
     133,   134,   135,   136,   137,   138,   139,   140,     0,   141,
     142,   143,   144,   145,   146,     0,   147,   148,   149,   150,
     738,   739,   740,   741,   742,   743,   744,   152,   153,   154,
     155,   156,   157,   158,   745,   746,   161,   747,   162,     0,
     163,   164,   165,   166,   167,   168,     0,   169,   170,   171,
     172,   173,     0,     0,   174,   175,   748,   177,   178,     0,
     179,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,   188,   749,   190,   191,   192,   193,   750,   751,   195,
       0,   196,   197,   752,   199,     0,   200,     0,   201,   202,
       0,   203,   204,   205,   206,   207,   208,     0,   209,     0,
     210,   211,     0,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,   222,     0,   223,   224,   225,   226,   227,
     228,     0,   229,   230,   231,   232,   233,   234,   235,   753,
     754,     0,   755,     0,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,     0,     0,   249,   250,   251,   252,
       0,   253,   254,   255,   756,   757,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     758,   281,   759,   283,   284,   285,   286,   760,   287,   288,
     289,   290,   761,   762,   292,   763,   294,   295,   296,     0,
     297,   298,     0,     0,   764,   300,   301,     0,     0,   302,
     303,   304,   305,   306,   765,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,     0,   318,   319,   766,   321,
     322,   323,   324,   325,   326,     0,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   767,   337,   338,   339,   340,
       0,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,     0,   353,   354,   355,   356,   357,   358,
     768,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,    25,   371,   372,   373,   374,   375,   769,   376,
     377,   378,   379,   380,   381,   382,   383,   770,   385,     0,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   771,     0,   400,   401,    29,   402,   403,
     404,   405,   406,   407,   408,     0,   772,   773,     0,     0,
     411,   412,   774,   414,   775,   776,   416,   417,   777,   419,
     420,   421,   422,   423,     0,     0,   424,   425,   426,   427,
     428,   778,     0,   429,   430,   431,   432,   433,   596,   779,
       0,   436,   437,   438,   439,   440,   441,     0,     0,   442,
       0,    32,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   780,     0,    33,     0,     0,     0,     0,
     781,   782,     0,     0,     0,     0,     0,     0,     0,   784,
    2663,     0,     0,     0,   785,    89,   723,   535,   724,   725,
     726,   727,   728,     0,     0,     0,     0,     0,     0,     0,
       0,    90,    91,    92,    93,    94,    95,    96,    97,     0,
      98,    99,   100,     0,     0,     0,     0,     0,     0,     0,
     101,   102,     0,   103,   104,   105,   106,   107,   108,   109,
     110,   729,   112,   730,   731,     0,   115,   116,   117,   118,
     119,   120,   732,   733,   121,   122,   734,   735,   125,     0,
     126,   127,   128,   129,   736,     0,   737,     0,   132,   133,
     134,   135,   136,   137,   138,   139,   140,     0,   141,   142,
     143,   144,   145,   146,     0,   147,   148,   149,   150,   738,
     739,   740,   741,   742,   743,   744,   152,   153,   154,   155,
     156,   157,   158,   745,   746,   161,   747,   162,     0,   163,
     164,   165,   166,   167,   168,     0,   169,   170,   171,   172,
     173,     0,     0,   174,   175,   748,   177,   178,     0,   179,
     180,   181,     0,   182,   183,   184,     0,   185,   186,   187,
     188,   749,   190,   191,   192,   193,   750,   751,   195,     0,
     196,   197,   752,   199,     0,   200,     0,   201,   202,     0,
     203,   204,   205,   206,   207,   208,     0,   209,     0,   210,
     211,     0,   212,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,     0,   223,   224,   225,   226,   227,   228,
       0,   229,   230,   231,   232,   233,   234,   235,   753,   754,
       0,   755,     0,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,     0,     0,   249,   250,   251,   252,     0,
     253,   254,   255,   756,   757,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   758,
     281,   759,   283,   284,   285,   286,   760,   287,   288,   289,
     290,   761,   762,   292,   763,   294,   295,   296,     0,   297,
     298,     0,     0,   764,   300,   301,     0,     0,   302,   303,
     304,   305,   306,   765,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,     0,   318,   319,   766,   321,   322,
     323,   324,   325,   326,     0,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   767,   337,   338,   339,   340,     0,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,     0,   353,   354,   355,   356,   357,   358,   768,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,    25,   371,   372,   373,   374,   375,   769,   376,   377,
     378,   379,   380,   381,   382,   383,   770,   385,     0,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   771,     0,   400,   401,    29,   402,   403,   404,
     405,   406,   407,   408,     0,   772,   773,     0,     0,   411,
     412,   774,   414,   775,   776,   416,   417,   777,   419,   420,
     421,   422,   423,     0,     0,   424,   425,   426,   427,   428,
     778,     0,   429,   430,   431,   432,   433,   596,   779,     0,
     436,   437,   438,   439,   440,   441,     0,     0,   442,     0,
      32,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   780,     0,    33,     0,     0,     0,     0,   781,
     782,     0,     0,     0,     0,     0,     0,     0,   784,     0,
       0,     0,     0,   785,    89,   723,   535,   724,   725,   726,
     727,   728,     0,     0,     0,     0,     0,     0,     0,     0,
      90,    91,    92,    93,    94,    95,    96,    97,     0,    98,
      99,   100,     0,     0,     0,     0,     0,     0,     0,   101,
     102,     0,   103,   104,   105,   106,   107,   108,   109,   110,
     729,   112,   730,   731,  1572,   115,   116,   117,   118,   119,
     120,   732,   733,   121,   122,   734,   735,   125,     0,   126,
     127,   128,   129,   736,     0,   737,     0,   132,   133,   134,
     135,   136,   137,   138,   139,   140,     0,   141,   142,   143,
     144,   145,   146,     0,   147,   148,   149,   150,   738,   739,
     740,   741,   742,   743,   744,   152,   153,   154,   155,   156,
     157,   158,   745,   746,   161,   747,   162,     0,   163,   164,
     165,   166,   167,   168,     0,   169,   170,   171,   172,   173,
       0,     0,   174,   175,   748,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,     0,   185,   186,   187,   188,
     749,   190,   191,   192,   193,   750,   751,   195,     0,   196,
     197,   752,   199,     0,   200,     0,   201,   202,  1573,   203,
     204,   205,   206,   207,   208,     0,   209,     0,   210,   211,
       0,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   222,     0,   223,   224,   225,   226,   227,   228,     0,
     229,   230,   231,   232,   233,   234,   235,   753,   754,     0,
     755,     0,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,  1574,   249,   250,   251,   252,     0,   253,
     254,   255,   756,   757,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   758,   281,
     759,   283,   284,   285,   286,   760,   287,   288,   289,   290,
     761,   762,   292,   763,   294,   295,   296,     0,   297,   298,
       0,     0,   764,   300,   301,     0,     0,   302,   303,   304,
     305,   306,   765,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,     0,   318,   319,   766,   321,   322,   323,
     324,   325,   326,     0,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   767,   337,   338,   339,   340,     0,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,     0,   353,   354,   355,   356,   357,   358,   768,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
       0,   371,   372,   373,   374,   375,   769,   376,   377,   378,
     379,   380,   381,   382,   383,   770,   385,     0,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   771,     0,   400,   401,     0,   402,   403,   404,   405,
     406,   407,   408,     0,   772,   773,     0,  1575,   411,   412,
     774,   414,   775,   776,   416,   417,   777,   419,   420,   421,
     422,   423,     0,     0,   424,   425,   426,   427,   428,   778,
       0,   429,   430,   431,   432,   433,   434,   779,     0,   436,
     437,   438,   439,   440,   441,     0,     0,   442,     0,     0,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   780,     0,     0,     0,     0,     0,     0,   781,   782,
       0,     0,     0,     0,     0,     0,     0,   784,     0,     0,
       0,     0,   785,    89,   723,   535,   724,   725,   726,   727,
     728,     0,     0,     0,     0,     0,     0,     0,     0,    90,
      91,    92,    93,    94,    95,    96,    97,     0,    98,    99,
     100,     0,     0,     0,     0,     0,     0,     0,   101,   102,
       0,   103,   104,   105,   106,   107,   108,   109,   110,   729,
     112,   730,   731,     0,   115,   116,   117,   118,   119,   120,
     732,   733,   121,   122,   734,   735,   125,     0,   126,   127,
     128,   129,   736,     0,   737,     0,   132,   133,   134,   135,
     136,   137,   138,   139,   140,     0,   141,   142,   143,   144,
     145,   146,     0,   147,   148,   149,   150,   738,   739,   740,
     741,   742,   743,   744,   152,   153,   154,   155,   156,   157,
     158,   745,   746,   161,   747,   162,     0,   163,   164,   165,
     166,   167,   168,     0,   169,   170,   171,   172,   173,     0,
       0,   174,   175,   748,   177,   178,     0,   179,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,   188,   749,
     190,   191,   192,   193,   750,   751,   195,     0,   196,   197,
     752,   199,     0,   200,     0,   201,   202,     0,   203,   204,
     205,   206,   207,   208,     0,   209,     0,   210,   211,     0,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,     0,   223,   224,   225,   226,   227,   228,     0,   229,
     230,   231,   232,   233,   234,   235,   753,   754,     0,   755,
       0,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,     0,     0,   249,   250,   251,   252,     0,   253,   254,
     255,   756,   757,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   758,   281,   759,
     283,   284,   285,   286,   760,   287,   288,   289,   290,   761,
     762,   292,   763,   294,   295,   296,     0,   297,   298,     0,
       0,   764,   300,   301,     0,     0,   302,   303,   304,   305,
     306,   765,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,     0,   318,   319,   766,   321,   322,   323,   324,
     325,   326,     0,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   767,   337,   338,   339,   340,     0,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
       0,   353,   354,   355,   356,   357,   358,   768,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,     0,
     371,   372,   373,   374,   375,   769,   376,   377,   378,   379,
     380,   381,   382,   383,   770,   385,     0,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     771,     0,   400,   401,     0,   402,   403,   404,   405,   406,
     407,   408,     0,   772,   773,     0,     0,   411,   412,   774,
     414,   775,   776,   416,   417,   777,   419,   420,   421,   422,
     423,     0,     0,   424,   425,   426,   427,   428,   778,     0,
     429,   430,   431,   432,   433,   434,   779,     0,   436,   437,
     438,   439,   440,   441,     0,     0,   442,     0,     0,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     780,     0,     0,     0,     0,     0,     0,   781,   782,   783,
       0,     0,     0,     0,     0,     0,   784,     0,     0,     0,
       0,   785,    89,   723,   535,   724,   725,   726,   727,   728,
       0,     0,     0,     0,     0,     0,     0,     0,    90,    91,
      92,    93,    94,    95,    96,    97,  1315,    98,    99,   100,
       0,     0,     0,     0,     0,     0,     0,   101,   102,     0,
     103,   104,   105,   106,   107,   108,   109,   110,   729,   112,
     730,   731,     0,   115,   116,   117,   118,   119,   120,   732,
     733,   121,   122,   734,   735,   125,     0,   126,   127,   128,
     129,   736,     0,   737,     0,   132,   133,   134,   135,   136,
     137,   138,   139,   140,     0,   141,   142,   143,   144,   145,
     146,     0,   147,   148,   149,   150,   738,   739,   740,   741,
     742,   743,   744,   152,   153,   154,   155,   156,   157,   158,
     745,   746,   161,   747,   162,     0,   163,   164,   165,   166,
     167,   168,     0,   169,   170,   171,   172,   173,     0,     0,
     174,   175,   748,   177,   178,     0,   179,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,   188,   749,   190,
     191,   192,   193,   750,   751,   195,     0,   196,   197,   752,
     199,     0,   200,     0,   201,   202,     0,   203,   204,   205,
     206,   207,   208,     0,   209,     0,   210,   211,     0,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
       0,   223,   224,   225,   226,   227,   228,     0,   229,   230,
     231,   232,   233,   234,   235,   753,   754,     0,   755,     0,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
       0,     0,   249,   250,   251,   252,     0,   253,   254,   255,
     756,   757,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   758,   281,   759,   283,
     284,   285,   286,   760,   287,   288,   289,   290,   761,   762,
     292,   763,   294,   295,   296,     0,   297,   298,     0,     0,
     764,   300,   301,     0,     0,   302,   303,   304,   305,   306,
     765,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,     0,   318,   319,   766,   321,   322,   323,   324,   325,
     326,     0,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   767,   337,   338,   339,   340,     0,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,     0,
     353,   354,   355,   356,   357,   358,   768,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,     0,   371,
     372,   373,   374,   375,   769,   376,   377,   378,   379,   380,
     381,   382,   383,   770,   385,     0,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   771,
       0,   400,   401,     0,   402,   403,   404,   405,   406,   407,
     408,     0,   772,   773,     0,     0,   411,   412,   774,   414,
     775,   776,   416,   417,   777,   419,   420,   421,   422,   423,
       0,     0,   424,   425,   426,   427,   428,   778,     0,   429,
     430,   431,   432,   433,   434,   779,     0,   436,   437,   438,
     439,   440,   441,     0,     0,   442,     0,     0,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   780,
       0,     0,     0,     0,     0,     0,   781,   782,     0,     0,
       0,     0,     0,     0,     0,   784,     0,     0,     0,     0,
     785,   911,   723,   535,   724,   725,   726,   727,   728,     0,
       0,     0,     0,     0,     0,     0,     0,    90,    91,    92,
      93,    94,    95,    96,    97,     0,    98,    99,   100,     0,
       0,     0,     0,     0,     0,     0,   101,   102,     0,   103,
     104,   105,   913,   107,   108,   109,   110,   729,   914,   730,
     731,     0,   115,   116,   117,   118,   119,   120,   732,   733,
     121,   122,   734,   735,   125,     0,   126,   127,   128,   129,
     736,     0,   915,     0,   132,   133,   134,   135,   136,   916,
     138,   139,   140,     0,   141,   142,   143,   144,   145,   146,
       0,   917,   148,   149,   150,   738,   739,   740,   918,   742,
     743,   744,   152,   153,   154,   155,   156,   157,   158,   745,
     746,   161,   747,   162,     0,   163,   164,   165,   166,   167,
     168,     0,   169,   170,   171,   172,   173,     0,     0,   174,
     175,   748,   177,   178,     0,   179,   180,   181,     0,   182,
     183,   184,     0,   185,   186,   187,   188,   749,   190,   191,
     192,   193,   750,   751,   195,     0,   196,   197,   752,   199,
       0,   200,     0,   201,   920,     0,   921,   204,   205,   206,
     922,   208,     0,   209,     0,   210,   211,     0,   212,   213,
     214,   215,   216,   217,   923,   219,   220,   221,   222,     0,
     223,   224,   225,   226,   227,   228,     0,   229,   924,   231,
     232,   233,   234,   235,   753,   754,     0,   755,     0,   239,
     925,   926,   242,   927,   244,   245,   246,   247,   248,     0,
       0,   249,   928,   251,   929,     0,   253,   254,   255,   756,
     757,   256,   257,   258,   259,   260,   930,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   758,   931,   759,   283,   284,
     285,   286,   760,   287,   288,   932,   290,   761,   762,   292,
     763,   294,   295,   296,     0,   297,   298,     0,     0,   764,
     300,   301,     0,     0,   302,   303,   933,   305,   934,   765,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
       0,   318,   319,   766,   321,   322,   323,   324,   325,   326,
       0,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     767,   337,   338,   339,   340,     0,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,     0,   353,
     354,   935,   356,   357,   358,   768,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,     0,   371,   372,
     373,   374,   375,   769,   376,   377,   378,   379,   380,   936,
     382,   383,   770,   385,     0,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   937,   398,   771,     0,
     400,   401,     0,   402,   938,   404,   405,   406,   407,   408,
       0,   772,   773,     0,     0,   411,   412,   774,   414,   775,
     776,   416,   417,   939,   419,   420,   421,   422,   423,     0,
       0,   424,   425,   426,   427,   428,   778,     0,   429,   430,
     431,   432,   433,   434,   779,     0,   436,   941,   438,   439,
     440,   441,     0,     0,   442,     0,     0,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   780,     0,
       0,     0,     0,     0,     0,   781,   782,     0,     0,     0,
       0,     0,     0,     0,   784,  1428,     0,     0,     0,   785,
      89,   723,   535,   724,   725,   726,   727,   728,     0,     0,
       0,     0,     0,     0,     0,     0,    90,    91,    92,    93,
      94,    95,    96,    97,     0,    98,    99,   100,     0,     0,
       0,     0,     0,     0,     0,   101,   102,     0,   103,   104,
     105,   106,   107,   108,   109,   110,   729,   112,   730,   731,
       0,   115,   116,   117,   118,   119,   120,   732,   733,   121,
     122,   734,   735,   125,     0,   126,   127,   128,   129,   736,
       0,   737,     0,   132,   133,   134,   135,   136,   137,   138,
     139,   140,     0,   141,   142,   143,   144,   145,   146,     0,
     147,   148,   149,   150,   738,   739,   740,   741,   742,   743,
     744,   152,   153,   154,   155,   156,   157,   158,   745,   746,
     161,   747,   162,     0,   163,   164,   165,   166,   167,   168,
       0,   169,   170,   171,   172,   173,     0,     0,   174,   175,
     748,   177,   178,     0,   179,   180,   181,     0,   182,   183,
     184,     0,   185,   186,   187,   188,   749,   190,   191,   192,
     193,   750,   751,   195,     0,   196,   197,   752,   199,     0,
     200,     0,   201,   202,     0,   203,   204,   205,   206,   207,
     208,     0,   209,     0,   210,   211,     0,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,     0,   223,
     224,   225,   226,   227,   228,     0,   229,   230,   231,   232,
     233,   234,   235,   753,   754,     0,   755,     0,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,     0,     0,
     249,   250,   251,   252,     0,   253,   254,   255,   756,   757,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   758,   281,   759,   283,   284,   285,
     286,   760,   287,   288,   289,   290,   761,   762,   292,   763,
     294,   295,   296,     0,   297,   298,     0,     0,   764,   300,
     301,     0,     0,   302,   303,   304,   305,   306,   765,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,     0,
     318,   319,   766,   321,   322,   323,   324,   325,   326,     0,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   767,
     337,   338,   339,   340,     0,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,     0,   353,   354,
     355,   356,   357,   358,   768,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,     0,   371,   372,   373,
     374,   375,   769,   376,   377,   378,   379,   380,   381,   382,
     383,   770,   385,     0,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   771,     0,   400,
     401,     0,   402,   403,   404,   405,   406,   407,   408,     0,
     772,   773,     0,     0,   411,   412,   774,   414,   775,   776,
     416,   417,   777,   419,   420,   421,   422,   423,     0,     0,
     424,   425,   426,   427,   428,   778,     0,   429,   430,   431,
     432,   433,   434,   779,     0,   436,   437,   438,   439,   440,
     441,     0,     0,   442,     0,     0,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   780,     0,     0,
       0,     0,     0,     0,   781,   782,     0,     0,     0,     0,
       0,     0,     0,   784,  1562,     0,     0,     0,   785,   911,
     723,   535,   724,   725,   726,   727,   728,     0,     0,     0,
       0,     0,     0,     0,     0,    90,    91,    92,    93,    94,
      95,    96,    97,     0,    98,    99,   100,     0,     0,     0,
       0,     0,     0,     0,   101,   102,     0,   103,   104,   105,
     913,   107,   108,   109,   110,   729,   914,   730,   731,     0,
     115,   116,   117,   118,   119,   120,   732,   733,   121,   122,
     734,   735,   125,     0,   126,   127,   128,   129,   736,     0,
     915,     0,   132,   133,   134,   135,   136,   916,   138,   139,
     140,     0,   141,   142,   143,   144,   145,   146,     0,   917,
     148,   149,   150,   738,   739,   740,   918,   742,   743,   744,
     152,   153,   154,   155,   156,   157,   158,   745,   746,   161,
     747,   162,     0,   163,   164,   165,   166,   167,   168,     0,
     169,   170,   171,   172,   173,     0,     0,   174,   175,   748,
     177,   178,     0,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,   188,   749,   190,   191,   192,   193,
     750,   751,   195,     0,   196,   197,   752,   199,     0,   200,
       0,   201,   920,     0,   921,   204,   205,   206,   922,   208,
       0,   209,     0,   210,   211,     0,   212,   213,   214,   215,
     216,   217,   923,   219,   220,   221,   222,     0,   223,   224,
     225,   226,   227,   228,     0,   229,   924,   231,   232,   233,
     234,   235,   753,   754,     0,   755,     0,   239,   925,   926,
     242,   927,   244,   245,   246,   247,   248,     0,     0,   249,
     928,   251,   929,     0,   253,   254,   255,   756,   757,   256,
     257,   258,   259,   260,   930,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   758,   931,   759,   283,   284,   285,   286,
     760,   287,   288,   932,   290,   761,   762,   292,   763,   294,
     295,   296,     0,   297,   298,     0,     0,   764,   300,   301,
       0,     0,   302,   303,   933,   305,   934,   765,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,     0,   318,
     319,   766,   321,   322,   323,   324,   325,   326,     0,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   767,   337,
     338,   339,   340,     0,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,     0,   353,   354,   935,
     356,   357,   358,   768,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,     0,   371,   372,   373,   374,
     375,   769,   376,   377,   378,   379,   380,   936,   382,   383,
     770,   385,     0,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   937,   398,   771,     0,   400,   401,
       0,   402,   938,   404,   405,   406,   407,   408,     0,   772,
     773,     0,     0,   411,   412,   774,   414,   775,   776,   416,
     417,   939,   419,   420,   421,   422,   423,     0,     0,   424,
     425,   426,   427,   428,   778,     0,   429,   430,   431,   432,
     433,   434,   779,  1772,   436,   941,   438,   439,   440,   441,
       0,     0,   442,     0,     0,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   780,     0,     0,     0,
       0,     0,     0,   781,   782,     0,     0,     0,     0,     0,
       0,     0,   784,     0,     0,     0,     0,   785,    89,   723,
     535,   724,   725,   726,   727,   728,     0,     0,     0,     0,
       0,     0,     0,     0,    90,    91,    92,    93,    94,    95,
      96,    97,     0,    98,    99,   100,     0,     0,     0,     0,
       0,     0,     0,   101,   102,     0,   103,   104,   105,   106,
     107,   108,   109,   110,   729,   112,   730,   731,     0,   115,
     116,   117,   118,   119,   120,   732,   733,   121,   122,   734,
     735,   125,     0,   126,   127,   128,   129,   736,     0,   737,
       0,   132,   133,   134,   135,   136,   137,   138,   139,   140,
       0,   141,   142,   143,   144,   145,   146,     0,   147,   148,
     149,   150,   738,   739,   740,   741,   742,   743,   744,   152,
     153,   154,   155,   156,   157,   158,   745,   746,   161,   747,
     162,     0,   163,   164,   165,   166,   167,   168,     0,   169,
     170,   171,   172,   173,     0,     0,   174,   175,   748,   177,
     178,     0,   179,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,   188,   749,   190,   191,   192,   193,   750,
     751,   195,     0,   196,   197,   752,   199,     0,   200,     0,
     201,   202,  1573,   203,   204,   205,   206,   207,   208,     0,
     209,     0,   210,   211,     0,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,   222,     0,   223,   224,   225,
     226,   227,   228,     0,   229,   230,   231,   232,   233,   234,
     235,   753,   754,     0,   755,     0,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,     0,     0,   249,   250,
     251,   252,     0,   253,   254,   255,   756,   757,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   758,   281,   759,   283,   284,   285,   286,   760,
     287,   288,   289,   290,   761,   762,   292,   763,   294,   295,
     296,     0,   297,   298,     0,     0,   764,   300,   301,     0,
       0,   302,   303,   304,   305,   306,   765,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,     0,   318,   319,
     766,   321,   322,   323,   324,   325,   326,     0,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   767,   337,   338,
     339,   340,     0,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,     0,   353,   354,   355,   356,
     357,   358,   768,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,     0,   371,   372,   373,   374,   375,
     769,   376,   377,   378,   379,   380,   381,   382,   383,   770,
     385,     0,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   771,     0,   400,   401,     0,
     402,   403,   404,   405,   406,   407,   408,     0,   772,   773,
       0,     0,   411,   412,   774,   414,   775,   776,   416,   417,
     777,   419,   420,   421,   422,   423,     0,     0,   424,   425,
     426,   427,   428,   778,     0,   429,   430,   431,   432,   433,
     434,   779,     0,   436,   437,   438,   439,   440,   441,     0,
       0,   442,     0,     0,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   780,     0,     0,     0,     0,
       0,     0,   781,   782,     0,     0,     0,     0,     0,     0,
       0,   784,     0,     0,     0,     0,   785,    89,   723,   535,
     724,   725,   726,   727,   728,     0,     0,     0,     0,     0,
       0,     0,     0,    90,    91,    92,    93,    94,    95,    96,
      97,     0,    98,    99,   100,     0,     0,     0,     0,     0,
       0,     0,   101,   102,     0,   103,   104,   105,   106,   107,
     108,   109,   110,   729,   112,   730,   731,     0,   115,   116,
     117,   118,   119,   120,   732,   733,   121,   122,   734,   735,
     125,     0,   126,   127,   128,   129,   736,     0,   737,     0,
     132,   133,   134,   135,   136,   137,   138,   139,   140,     0,
     141,   142,   143,   144,   145,   146,     0,   147,   148,   149,
     150,   738,   739,   740,   741,   742,   743,   744,   152,   153,
     154,   155,   156,   157,   158,   745,   746,   161,   747,   162,
       0,   163,   164,   165,   166,   167,   168,     0,   169,   170,
     171,   172,   173,     0,     0,   174,   175,   748,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,   188,   749,   190,   191,   192,   193,   750,   751,
     195,     0,   196,   197,   752,   199,     0,   200,     0,   201,
     202,     0,   203,   204,   205,   206,   207,   208,     0,   209,
       0,   210,   211,     0,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,     0,   223,   224,   225,   226,
     227,   228,     0,   229,   230,   231,   232,   233,   234,   235,
     753,   754,     0,   755,     0,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,     0,     0,   249,   250,   251,
     252,     0,   253,   254,   255,   756,   757,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   758,   281,   759,   283,   284,   285,   286,   760,   287,
     288,   289,   290,   761,   762,   292,   763,   294,   295,   296,
       0,   297,   298,     0,     0,   764,   300,   301,     0,     0,
     302,   303,   304,   305,   306,   765,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,     0,   318,   319,   766,
     321,   322,   323,   324,   325,   326,     0,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   767,   337,   338,   339,
     340,     0,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,     0,   353,   354,   355,   356,   357,
     358,   768,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,     0,   371,   372,   373,   374,   375,   769,
     376,   377,   378,   379,   380,   381,   382,   383,   770,   385,
       0,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   771,     0,   400,   401,     0,   402,
     403,   404,   405,   406,   407,   408,     0,   772,   773,     0,
       0,   411,   412,   774,   414,   775,   776,   416,   417,   777,
     419,   420,   421,   422,   423,     0,     0,   424,   425,   426,
     427,   428,   778,     0,   429,   430,   431,   432,   433,   434,
     779,     0,   436,   437,   438,   439,   440,   441,     0,     0,
     442,     0,     0,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   780,     0,     0,     0,     0,     0,
       0,   781,   782,     0,     0,     0,     0,     0,     0,     0,
     784,     0,     0,     0,     0,   785,   911,   723,   535,   724,
     725,   726,   727,   728,     0,     0,     0,     0,     0,     0,
       0,     0,    90,    91,    92,    93,    94,    95,    96,    97,
       0,    98,    99,   100,     0,     0,     0,     0,     0,     0,
       0,   101,   102,     0,   103,   104,   105,   913,   107,   108,
     109,   110,   729,   914,   730,   731,     0,   115,   116,   117,
     118,   119,   120,   732,   733,   121,   122,   734,   735,   125,
       0,   126,   127,   128,   129,   736,     0,   915,     0,   132,
     133,   134,   135,   136,   916,   138,   139,   140,     0,   141,
     142,   143,   144,   145,   146,     0,   917,   148,   149,   150,
     738,   739,   740,   918,   742,   743,   744,   152,   153,   154,
     155,   156,   157,   158,   745,   746,   161,   747,   162,     0,
     163,   164,   165,   166,   167,   168,     0,   169,   170,   171,
     172,   173,     0,     0,   174,   175,   748,   177,   178,     0,
     179,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,   188,   749,   190,   191,   192,   193,   750,   751,   195,
       0,   196,   197,   752,   199,     0,   200,     0,   201,   920,
       0,   921,   204,   205,   206,   922,   208,     0,   209,     0,
     210,   211,     0,   212,   213,   214,   215,   216,   217,   923,
     219,   220,   221,   222,     0,   223,   224,   225,   226,   227,
     228,     0,   229,   924,   231,   232,   233,   234,   235,   753,
     754,     0,   755,     0,   239,   925,   926,   242,   927,   244,
     245,   246,   247,   248,     0,     0,   249,   928,   251,   929,
       0,   253,   254,   255,   756,   757,   256,   257,   258,   259,
     260,   930,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     758,   931,   759,   283,   284,   285,   286,   760,   287,   288,
     932,   290,   761,   762,   292,   763,   294,   295,   296,     0,
     297,   298,     0,     0,   764,   300,   301,     0,     0,   302,
     303,   933,   305,   934,   765,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,     0,   318,   319,   766,   321,
     322,   323,   324,   325,   326,     0,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   767,   337,   338,   339,   340,
       0,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,     0,   353,   354,   935,   356,   357,   358,
     768,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,     0,   371,   372,   373,   374,   375,   769,   376,
     377,   378,   379,   380,   936,   382,   383,   770,   385,     0,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   937,   398,   771,     0,   400,   401,     0,   402,   938,
     404,   405,   406,   407,   408,     0,   772,   773,     0,     0,
     411,   412,   774,   414,   775,   776,   416,   417,   939,   419,
     420,   421,   422,   423,     0,     0,   424,   425,   426,   427,
     428,   778,     0,   429,   430,   431,   432,   433,   434,   779,
       0,   436,   941,   438,   439,   440,   441,     0,     0,   442,
       0,     0,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   780,     0,     0,     0,     0,     0,     0,
     781,   782,     0,     0,     0,     0,     0,     0,     0,   784,
       0,     0,     0,     0,   785,    89,   723,   535,   724,   725,
     726,   727,   728,     0,     0,     0,     0,     0,     0,     0,
       0,    90,    91,    92,    93,    94,    95,    96,    97,     0,
      98,    99,   100,     0,     0,     0,     0,     0,     0,     0,
     101,   102,     0,   103,   104,   105,   106,   107,   108,   109,
     110,   729,   112,   730,   731,     0,   115,   116,   117,   118,
     119,   120,   732,   733,   121,   122,   734,   735,   125,     0,
     126,   127,   128,   129,   736,     0,   737,     0,   132,   133,
     134,   135,   136,   137,   138,   139,   140,     0,   141,   142,
     143,   144,   145,   146,     0,   147,   148,   149,   150,   738,
     739,   740,   741,   742,   743,   744,   152,   153,   154,   155,
     156,   157,   158,   745,   746,   161,   747,   162,     0,   163,
     164,   165,   166,   167,   168,     0,   169,   170,   171,   172,
     173,     0,     0,   174,   175,   748,   177,   178,     0,   179,
     180,   181,     0,   182,   183,   184,     0,   185,   186,   187,
     188,   749,   190,   191,   192,   193,   750,   751,   195,     0,
     196,   197,   752,   199,     0,   200,     0,   201,   202,     0,
     203,   204,   205,   206,   207,   208,     0,   209,     0,   210,
     211,     0,   212,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,     0,   223,   224,   225,   226,   227,   228,
       0,   229,   230,   231,   232,   233,   234,   235,   753,   754,
       0,   755,     0,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,     0,     0,   249,   250,   251,   252,     0,
     253,   254,   255,   756,   757,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   758,
     281,   759,   283,   284,   285,   286,   760,   287,   288,   289,
     290,   761,   762,   292,   763,   294,   295,   296,     0,   297,
     298,     0,     0,   764,   300,   301,     0,     0,   302,   303,
     304,   305,   306,   765,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,     0,   318,   319,   766,   321,   322,
     323,   324,   325,   326,     0,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   767,   337,   338,   339,   340,     0,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,     0,   353,   354,   355,   356,   357,   358,   768,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,     0,   371,   372,   373,   374,   375,   769,   376,   377,
     378,   379,   380,   381,   382,   383,   770,   385,     0,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   771,     0,   400,   401,     0,   402,   403,   404,
     405,   406,   407,   408,     0,   772,   773,     0,     0,   411,
     412,   774,   414,   775,   776,   416,   417,   777,   419,   420,
     421,   422,   423,     0,     0,   424,   425,   426,   427,   428,
     778,     0,   429,   430,   431,   432,   433,   434,   779,     0,
     436,   437,   438,   439,   440,   441,     0,     0,   442,     0,
       0,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   780,     0,     0,     0,     0,     0,     0,  1318,
    1319,     0,     0,     0,     0,     0,     0,     0,   784,     0,
       0,     0,     0,   785,    89,  1697,   535,   724,   725,   726,
     727,   728,     0,     0,     0,     0,     0,     0,     0,     0,
      90,    91,    92,    93,    94,    95,    96,    97,     0,    98,
      99,   100,     0,     0,     0,     0,     0,     0,     0,   101,
     102,     0,   103,   104,   105,   106,   107,   108,   109,   110,
     729,   112,   730,   731,     0,   115,   116,   117,   118,   119,
     120,   732,   733,   121,   122,   734,   735,   125,     0,   126,
     127,   128,   129,   736,     0,   737,     0,   132,   133,   134,
     135,   136,   137,   138,   139,   140,     0,   141,   142,   143,
     144,   145,   146,     0,   147,   148,   149,   150,   738,   739,
     740,   741,   742,   743,   744,   152,   153,   154,   155,   156,
     157,   158,   745,   746,   161,   747,   162,     0,   163,   164,
     165,   166,   167,   168,     0,   169,   170,   171,   172,   173,
       0,     0,   174,   175,   748,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,     0,   185,   186,   187,   188,
     749,   190,   191,   192,   193,   750,   751,   195,     0,   196,
     197,   752,   199,     0,   200,     0,   201,   202,     0,   203,
     204,   205,   206,   207,   208,     0,   209,     0,   210,   211,
       0,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   222,     0,   223,   224,   225,   226,   227,   228,     0,
     229,   230,   231,   232,   233,   234,   235,   753,   754,     0,
     755,     0,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,     0,   249,   250,   251,   252,     0,   253,
     254,   255,   756,   757,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   758,   281,
     759,   283,   284,   285,   286,   760,   287,   288,   289,   290,
     761,   762,   292,   763,   294,   295,   296,     0,   297,   298,
       0,     0,   764,   300,   301,     0,     0,   302,   303,   304,
     305,   306,   765,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,     0,   318,   319,   766,   321,   322,   323,
     324,   325,   326,     0,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   767,   337,   338,   339,   340,     0,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,     0,   353,   354,   355,   356,   357,   358,   768,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
       0,   371,   372,   373,   374,   375,   769,   376,   377,   378,
     379,   380,   381,   382,   383,   770,   385,     0,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   771,     0,   400,   401,     0,   402,   403,   404,   405,
     406,   407,   408,     0,   772,   773,     0,     0,   411,   412,
     774,   414,   775,   776,   416,   417,   777,   419,   420,   421,
     422,   423,     0,     0,   424,   425,   426,   427,   428,   778,
       0,   429,   430,   431,   432,   433,   434,   779,     0,   436,
     437,   438,   439,   440,   441,     0,     0,   442,     0,     0,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   780,     0,     0,     0,     0,     0,     0,   781,   782,
       0,     0,     0,     0,     0,     0,     0,   784,     0,     0,
       0,     0,   785,    89,   723,   535,   724,   725,   726,   727,
     728,     0,     0,     0,     0,     0,     0,     0,     0,    90,
      91,    92,    93,    94,    95,    96,    97,     0,    98,    99,
     100,     0,     0,     0,     0,     0,     0,     0,   101,   102,
       0,   103,   104,   105,   106,   107,   108,   109,   110,   729,
     112,   730,   731,     0,   115,   116,   117,   118,   119,   120,
     732,   733,   121,   122,   734,   735,   125,     0,   126,   127,
     128,   129,   736,     0,   737,     0,   132,   133,   134,   135,
     136,   137,   138,   139,   140,     0,   141,   142,   143,   144,
     145,   146,     0,   147,   148,   149,   150,   738,   739,   740,
     741,   742,   743,   744,   152,   153,   154,   155,   156,   157,
     158,   745,   746,   161,   747,   162,     0,   163,   164,   165,
     166,   167,   168,     0,   169,   170,   171,   172,   173,     0,
       0,   174,   175,   748,   177,   178,     0,   179,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,   188,   749,
     190,   191,   192,   193,   750,   751,   195,     0,   196,   197,
     752,   199,     0,   200,     0,   201,   202,     0,   203,   204,
     205,   206,   207,   208,     0,   209,     0,   210,   211,     0,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,     0,   223,   224,   225,   226,   227,   228,     0,   229,
     230,   231,   232,   233,   234,   235,   753,   754,     0,   755,
       0,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,     0,     0,   249,   250,   251,   252,     0,   253,   254,
     255,   756,   757,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   758,   281,   759,
     283,   284,   285,   286,   760,   287,   288,   289,   290,   761,
     762,   292,   763,   294,   295,   296,     0,   297,   298,     0,
       0,   764,   300,   301,     0,     0,   302,   303,   304,   305,
     306,   765,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,     0,   318,   319,   766,   321,   322,   323,   324,
     325,   326,     0,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   767,   337,   338,   339,   340,     0,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
       0,   353,   354,   355,   356,   357,   358,   768,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,     0,
     371,   372,   373,   374,   375,   769,   376,   377,   378,   379,
     380,   381,   382,   383,   770,   385,     0,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     771,     0,   400,   401,     0,   402,   403,   404,   405,   406,
     407,   408,     0,   772,   773,     0,     0,   411,   412,   774,
     414,   775,   776,   416,   417,   777,   419,   420,   421,   422,
     423,     0,     0,   424,   425,   426,   427,   428,   778,     0,
     429,   430,   431,   432,   433,   434,   779,     0,   436,   437,
     438,   439,   440,   441,     0,     0,   442,     0,     0,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     780,     0,     0,     0,     0,     0,     0,   781,   782,     0,
       0,     0,     0,     0,     0,     0,  2562,     0,     0,     0,
       0,   785,    89,   723,   535,   724,   725,   726,   727,   728,
       0,     0,     0,     0,     0,     0,     0,     0,    90,    91,
      92,    93,    94,    95,    96,    97,     0,    98,    99,   100,
       0,     0,     0,     0,     0,     0,     0,   101,   102,     0,
     103,   104,   105,   106,   107,   108,   109,  2761,   729,   112,
     730,   731,     0,   115,   116,   117,   118,   119,   120,   732,
     733,   121,   122,   734,   735,   125,     0,   126,   127,   128,
     129,   736,     0,   737,     0,   132,   133,   134,   135,   136,
     137,   138,   139,   140,     0,   141,   142,   143,   144,   145,
     146,     0,   147,   148,   149,  2762,   738,   739,   740,   741,
     742,   743,   744,   152,   153,   154,   155,   156,   157,   158,
     745,   746,   161,   747,   162,     0,   163,   164,   165,   166,
     167,   168,     0,   169,   170,   171,   172,   173,     0,     0,
     174,   175,   748,   177,   178,     0,   179,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,   188,   749,   190,
     191,   192,   193,   750,   751,   195,     0,   196,   197,   752,
     199,     0,   200,     0,   201,   202,     0,   203,   204,   205,
     206,   207,   208,     0,   209,     0,   210,   211,     0,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
       0,   223,   224,   225,   226,   227,   228,     0,   229,   230,
     231,   232,   233,   234,   235,   753,   754,     0,   755,     0,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
       0,     0,   249,   250,   251,   252,     0,   253,   254,   255,
     756,   757,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   758,   281,   759,   283,
     284,   285,   286,   760,   287,   288,   289,   290,   761,   762,
     292,   763,   294,   295,   296,     0,   297,   298,     0,     0,
     764,   300,   301,     0,     0,   302,   303,   304,   305,   306,
     765,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,     0,   318,   319,   766,   321,   322,   323,   324,   325,
     326,     0,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   767,   337,   338,   339,   340,     0,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,     0,
     353,   354,   355,   356,   357,   358,   768,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,     0,   371,
     372,   373,   374,   375,   769,   376,   377,   378,   379,   380,
     381,   382,   383,   770,   385,     0,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   771,
       0,   400,   401,     0,   402,   403,   404,   405,   406,   407,
     408,     0,   772,   773,     0,     0,   411,   412,   774,   414,
     775,   776,   416,   417,   777,   419,   420,  2763,   422,   423,
       0,     0,   424,   425,   426,   427,   428,   778,     0,   429,
     430,   431,   432,   433,   434,   779,     0,   436,   437,   438,
     439,   440,   441,     0,     0,   442,     0,     0,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   780,
       0,     0,     0,     0,     0,     0,   781,   782,     0,     0,
       0,     0,     0,     0,     0,   784,     0,     0,     0,     0,
     785,    89,   723,   535,   724,   725,   726,   727,   728,     0,
       0,     0,     0,     0,     0,     0,     0,    90,    91,    92,
      93,    94,    95,    96,    97,     0,    98,    99,   100,     0,
       0,     0,     0,     0,     0,     0,   101,   102,     0,   103,
     104,   105,   106,   107,   108,   109,   110,   729,   112,   730,
     731,     0,   115,   116,   117,   118,   119,   120,   732,   733,
     121,   122,   734,   735,   125,     0,   126,   127,   128,   129,
     736,     0,   737,     0,   132,   133,   134,   135,   136,   137,
     138,   139,   140,     0,   141,   142,   143,   144,   145,   146,
       0,   147,   148,   149,  2762,   738,   739,   740,   741,   742,
     743,   744,   152,   153,   154,   155,   156,   157,   158,   745,
     746,   161,   747,   162,     0,   163,   164,   165,   166,   167,
     168,     0,   169,   170,   171,   172,   173,     0,     0,   174,
     175,   748,   177,   178,     0,   179,   180,   181,     0,   182,
     183,   184,     0,   185,   186,   187,   188,   749,   190,   191,
     192,   193,   750,   751,   195,     0,   196,   197,   752,   199,
       0,   200,     0,   201,   202,     0,   203,   204,   205,   206,
     207,   208,     0,   209,     0,   210,   211,     0,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,     0,
     223,   224,   225,   226,   227,   228,     0,   229,   230,   231,
     232,   233,   234,   235,   753,   754,     0,   755,     0,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,     0,
       0,   249,   250,   251,   252,     0,   253,   254,   255,   756,
     757,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   758,   281,   759,   283,   284,
     285,   286,   760,   287,   288,   289,   290,   761,   762,   292,
     763,   294,   295,   296,     0,   297,   298,     0,     0,   764,
     300,   301,     0,     0,   302,   303,   304,   305,   306,   765,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
       0,   318,   319,   766,   321,   322,   323,   324,   325,   326,
       0,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     767,   337,   338,   339,   340,     0,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,     0,   353,
     354,   355,   356,   357,   358,   768,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,     0,   371,   372,
     373,   374,   375,   769,   376,   377,   378,   379,   380,   381,
     382,   383,   770,   385,     0,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   771,     0,
     400,   401,     0,   402,   403,   404,   405,   406,   407,   408,
       0,   772,   773,     0,     0,   411,   412,   774,   414,   775,
     776,   416,   417,   777,   419,   420,  2763,   422,   423,     0,
       0,   424,   425,   426,   427,   428,   778,     0,   429,   430,
     431,   432,   433,   434,   779,     0,   436,   437,   438,   439,
     440,   441,     0,     0,   442,     0,     0,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   780,     0,
       0,     0,     0,     0,     0,   781,   782,     0,     0,     0,
       0,     0,     0,     0,   784,     0,     0,     0,     0,   785,
      89,   723,   535,   724,   725,   726,   727,   728,     0,     0,
       0,     0,     0,     0,     0,     0,    90,    91,    92,    93,
      94,    95,    96,    97,     0,    98,    99,   100,     0,     0,
       0,     0,     0,     0,     0,   101,   102,     0,   103,   104,
     105,   106,   107,   108,   109,   110,   729,   112,   730,   731,
       0,   115,   116,   117,   118,   119,   120,   732,   733,   121,
     122,   734,   735,   125,     0,   126,   127,   128,   129,   736,
       0,   737,     0,   132,   133,   134,   135,   136,   137,   138,
     139,   140,     0,   141,   142,   143,   144,   145,   146,     0,
     147,   148,   149,   150,   738,   739,   740,   741,   742,   743,
     744,   152,   153,   154,   155,   156,   157,   158,   745,   746,
     161,     0,   162,     0,   163,   164,   165,   166,   167,   168,
       0,   169,   170,   171,   172,   173,     0,     0,   174,   175,
     748,   177,   178,     0,   179,   180,   181,     0,   182,   183,
     184,     0,   185,   186,   187,   188,   749,   190,   191,   192,
     193,   750,   751,   195,     0,   196,   197,   752,   199,     0,
     200,     0,   201,   202,     0,   203,   204,   205,   206,   207,
     208,     0,   209,     0,   210,   211,     0,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,     0,   223,
     224,   225,   226,   227,   228,     0,   229,   230,   231,   232,
     233,   234,   235,   753,   754,     0,   755,     0,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,     0,     0,
     249,   250,   251,   252,     0,   253,   254,   255,   756,   757,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   758,   281,   759,   283,   284,   285,
     286,     0,   287,   288,   289,   290,   761,   762,   292,   763,
     294,   295,   296,     0,   297,   298,     0,     0,   764,   300,
     301,     0,     0,   302,   303,   304,   305,   306,   765,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,     0,
     318,   319,   766,   321,   322,   323,   324,   325,   326,     0,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   767,
     337,   338,   339,   340,     0,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,     0,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,     0,   371,   372,   373,
     374,   375,   769,   376,   377,   378,   379,   380,   381,   382,
     383,   770,   385,     0,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   771,     0,   400,
     401,     0,   402,   403,   404,   405,   406,   407,   408,     0,
     772,   773,     0,     0,   411,   412,   774,   414,   775,   776,
     416,   417,   777,   419,   420,   421,   422,   423,     0,     0,
     424,   425,   426,   427,   428,   778,     0,   429,   430,   431,
     432,   433,   434,   779,     0,   436,   437,   438,   439,   440,
     441,     0,     0,   442,     0,     0,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,     0,     0,     0,
       0,     0,     0,     0,  1554,  1555,     0,     0,    89,   723,
     535,   724,   725,  1556,   727,   728,     0,     0,   785,     0,
       0,     0,     0,     0,    90,    91,    92,    93,    94,    95,
      96,    97,     0,    98,    99,   100,     0,     0,     0,     0,
       0,     0,     0,   101,   102,     0,   103,   104,   105,   106,
     107,   108,   109,   110,   729,   112,   730,   731,     0,   115,
     116,   117,   118,   119,   120,   732,   733,   121,   122,   734,
     735,   125,     0,   126,   127,   128,   129,   736,     0,   737,
       0,   132,   133,   134,   135,   136,   137,   138,   139,   140,
       0,   141,   142,   143,   144,   145,   146,     0,   147,   148,
     149,   150,   738,   739,   740,   741,   742,   743,   744,   152,
     153,   154,   155,   156,   157,   158,   745,   746,   161,     0,
     162,     0,   163,   164,   165,   166,   167,   168,     0,   169,
     170,   171,   172,   173,     0,     0,   174,   175,   748,   177,
     178,     0,   179,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,   188,   749,   190,   191,   192,   193,   750,
     751,   195,     0,   196,   197,   752,   199,     0,   200,     0,
     201,   202,     0,   203,   204,   205,   206,   207,   208,     0,
     209,     0,   210,   211,     0,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,   222,     0,   223,   224,   225,
     226,   227,   228,     0,   229,   230,   231,   232,   233,   234,
     235,   753,   754,     0,   755,     0,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,     0,     0,   249,   250,
     251,   252,     0,   253,   254,   255,   756,   757,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   758,   281,   759,   283,   284,   285,   286,     0,
     287,   288,   289,   290,   761,   762,   292,   763,   294,   295,
     296,     0,   297,   298,     0,     0,   299,   300,   301,     0,
       0,   302,   303,   304,   305,   306,   765,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,     0,   318,   319,
     766,   321,   322,   323,   324,   325,   326,     0,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   767,   337,   338,
     339,   340,     0,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,     0,   353,   354,   355,   356,
     357,   358,  1686,  1687,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,     0,   371,   372,   373,   374,   375,
     769,   376,   377,   378,   379,   380,   381,   382,   383,   770,
     385,     0,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   771,     0,   400,   401,     0,
     402,   403,   404,   405,   406,   407,   408,     0,   772,   773,
       0,     0,   411,   412,   774,   414,   775,   776,   416,   417,
     777,   419,   420,   421,   422,   423,     0,     0,   424,   425,
     426,   427,   428,   778,     0,   429,   430,   431,   432,   433,
     434,   779,     0,   436,   437,   438,   439,   440,   441,     0,
       0,   442,     0,     0,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,     0,     0,     0,     0,     0,
       0,     0,  1688,  1689,     0,     0,     0,     0,     0,     0,
       0,  1556,     0,     0,     0,     0,   785,    89,   723,   535,
     724,   725,   726,   727,   728,     0,     0,     0,     0,     0,
       0,     0,     0,    90,    91,    92,    93,    94,    95,    96,
      97,     0,    98,    99,   100,     0,     0,     0,     0,     0,
       0,     0,   101,   102,     0,   103,   104,   105,   106,   107,
     108,   109,   110,   729,   112,   730,   731,     0,   115,   116,
     117,   118,   119,   120,   732,   733,   121,   122,   734,   735,
     125,     0,   126,   127,   128,   129,   736,     0,   737,     0,
     132,   133,   134,   135,   136,   137,   138,   139,   140,     0,
     141,   142,   143,   144,   145,   146,     0,   147,   148,   149,
     150,   738,   739,   740,   741,   742,   743,   744,   152,   153,
     154,   155,   156,   157,   158,   745,   746,   161,     0,   162,
       0,   163,   164,   165,   166,   167,   168,     0,   169,   170,
     171,   172,   173,     0,     0,   174,   175,   748,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,   188,   749,   190,   191,   192,   193,   750,   751,
     195,     0,   196,   197,   752,   199,     0,   200,     0,   201,
     202,     0,   203,   204,   205,   206,   207,   208,     0,   209,
       0,   210,   211,     0,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,     0,   223,   224,   225,   226,
     227,   228,     0,   229,   230,   231,   232,   233,   234,   235,
     753,   754,     0,   755,     0,   239,     0,   241,   242,   243,
     244,   245,   246,   247,   248,     0,     0,   249,   250,   251,
     252,     0,   253,   254,   255,   756,   757,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   758,   281,   759,   283,   284,   285,   286,     0,   287,
     288,   289,   290,   761,   762,   292,   763,   294,   295,   296,
       0,   297,   298,     0,     0,   764,   300,   301,     0,     0,
     302,   303,   304,   305,   306,   765,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,     0,   318,   319,   766,
     321,   322,   323,   324,   325,   326,     0,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   767,   337,   338,   339,
     340,     0,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,     0,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,     0,   371,   372,   373,   374,   375,   769,
     376,   377,   378,   379,   380,   381,   382,   383,   770,   385,
       0,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   771,     0,   400,   401,     0,   402,
     403,   404,   405,   406,   407,   408,     0,   772,   773,     0,
       0,   411,   412,   774,   414,   775,   776,   416,   417,   777,
     419,   420,   421,   422,   423,     0,     0,   424,   425,   426,
     427,   428,   778,     0,   429,   430,   431,   432,   433,   434,
     779,     0,   436,   437,   438,   439,   440,   441,     0,     0,
     442,     0,     0,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,     0,     0,     0,     0,     0,     0,
       0,  1554,  1555,     0,     0,     0,     0,     0,     0,     0,
    1556,     0,     0,     0,     0,   785,    89,   723,   535,   724,
     725,   726,   727,   728,     0,     0,     0,     0,     0,     0,
       0,     0,    90,    91,    92,    93,    94,    95,    96,    97,
       0,    98,    99,   100,     0,     0,     0,     0,     0,     0,
       0,   101,   102,     0,   103,   104,   105,   106,   107,   108,
     109, -1665,   729,   112,   730,   731,     0,   115,   116,   117,
     118,   119,   120,   732,   733,   121,   122,   734,   735,   125,
       0,   126,   127,   128,   129,   736,     0,   737,     0,   132,
     133,   134,   135,   136,   137,   138,   139,   140,     0,   141,
     142,   143,   144,   145,   146,     0,   147,   148,   149,  2762,
     738,   739,   740,   741,   742,   743,   744,   152,   153,   154,
     155,   156,   157,   158,   745,   746,   161,   747,   162,     0,
     163,   164,   165,   166,   167,   168,     0,   169,   170,   171,
     172,   173,     0,     0,   174,   175,   748,   177,   178,     0,
     179,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,   188,   749,   190,   191,   192,   193,   750,   751,   195,
       0,   196,   197,   752,   199,     0,   200,     0,   201,   202,
       0,   203,   204,   205,   206, -1665,   208,     0,   209,     0,
     210,   211,     0,   212,   213,   214,   215,   216,   217, -1665,
     219,   220,   221,   222,     0,   223,   224,   225,   226,   227,
     228,     0,   229,   230,   231,   232,   233,   234,   235,   753,
     754,     0,   755,     0,   239,     0,     0,   242,   243,   244,
     245,   246,   247,   248,     0,     0,   249,   250,   251, -1665,
       0,   253,   254,   255,   756,   757,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     758,   281,   759,   283,   284,   285,   286,     0,   287,   288,
       0,   290,   761,   762,   292,   763,   294,   295,   296,     0,
     297,   298,     0,     0,   764,   300,   301,     0,     0,   302,
     303,   304,   305,   306,   765,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,     0,   318,   319,   766,   321,
     322,   323,   324,   325,   326,     0,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   767,   337,   338,   339,   340,
       0,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,     0,   353,   354,   355,   356,   357,   358,
     768,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,     0,   371,   372,   373,   374,   375,   769,   376,
     377,   378,   379,   380, -1665,   382,   383,   770,   385,     0,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   771,     0,   400,   401,     0,   402,   403,
     404,   405,   406,   407,   408,     0,   772,   773,     0,     0,
     411,   412,   774,   414,   775,   776,   416,   417,   777,   419,
     420,  2763,   422,   423,     0,     0,   424,   425,   426,   427,
     428,   778,     0,   429,   430,   431,   432,   433,   434,   779,
       0,   436,   437,   438,   439,   440,   441,     0,     0,   442,
       0,     0,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463, -1665,     0,     0,     0,     0,     0,     0,
     781,   782,     0,     0,     0,     0,     0,     0,     0,   784,
       0,     0,     0,     0,   785,    89,   723,   535,   724,   725,
     726,   727,   728,     0,     0,     0,     0,     0,     0,     0,
       0,    90,    91,    92,    93,    94,    95,    96,    97,     0,
      98,    99,   100,     0,     0,     0,     0,     0,     0,     0,
     101,   102,     0,   103,   104,   105,   106,   107,   108,   109,
       0,   729,   112,   730,   731,     0,   115,   116,   117,   118,
     119,   120,   732,   733,   121,   122,   734,   735,   125,     0,
     126,   127,   128,   129,   736,     0,   737,     0,   132,   133,
     134,   135,   136,   137,   138,   139,   140,     0,   141,   142,
     143,   144,   145,   146,     0,   147,   148,   149,   150,   738,
     739,   740,   741,   742,   743,   744,   152,   153,   154,   155,
     156,   157,   158,   745,   746,   161,   747,   162,     0,   163,
     164,   165,   166,   167,   168,     0,   169,   170,   171,   172,
     173,     0,     0,   174,   175,   748,   177,   178,     0,   179,
     180,   181,     0,   182,     0,   184,     0,   185,   186,   187,
     188,   749,   190,   191,   192,   193,   750,   751,   195,     0,
     196,   197,   752,   199,     0,   200,     0,   201,   202,     0,
     203,   204,   205,   206,     0,   208,     0,   209,     0,   210,
     211,     0,   212,   213,   214,   215,   216,   217,     0,   219,
     220,   221,   222,     0,   223,   224,   225,   226,   227,   228,
       0,   229,   230,   231,   232,   233,   234,   235,   753,   754,
       0,   755,     0,   239,     0,     0,   242,   243,   244,   245,
     246,   247,   248,     0,     0,   249,   250,   251,     0,     0,
     253,   254,   255,   756,   757,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   758,
     281,   759,   283,   284,   285,   286,     0,   287,   288,     0,
     290,   761,   762,   292,   763,   294,   295,   296,     0,   297,
     298,     0,     0,   764,   300,   301,     0,     0,   302,   303,
     304,   305,   306,   765,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,     0,   318,   319,   766,   321,   322,
     323,   324,   325,   326,     0,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   767,   337,   338,   339,   340,     0,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,     0,   353,   354,   355,   356,   357,   358,   768,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,     0,   371,   372,   373,   374,   375,   769,   376,   377,
     378,   379,   380,     0,   382,   383,   770,   385,     0,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   771,     0,   400,   401,     0,   402,   403,   404,
     405,   406,   407,   408,     0,   772,   773,     0,     0,   411,
     412,   774,   414,   775,   776,   416,   417,   777,   419,   420,
     421,   422,   423,     0,     0,   424,   425,   426,   427,   428,
     778,     0,   429,   430,   431,   432,   433,   434,   779,     0,
     436,   437,   438,   439,   440,   441,     0,     0,   442,     0,
       0,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,     0,     0,     0,     0,     0,     0,   488,   781,
     782,     0,     0,     0,     0,     0,     0,     0,   784,     0,
       0,     0,     0,   785,    90,    91,    92,    93,    94,    95,
      96,    97,     0,    98,    99,   100,     0,     0,     0,     0,
       0,  2200,     0,   101,   102,     0,   103,   104,   105,     0,
     107,   108,   109,   110,   111,     0,   113,   114,     0,   115,
     116,   117,   118,   119,   120,     0,     0,   121,   122,   123,
     124,   125,     0,   126,   127,   128,   129,   130,     0,     0,
       0,   132,   133,   134,   135,   136,     0,   138,   139,   140,
       0,   141,   142,   143,   144,   145,   146,     0,  -579,   148,
     149,   150,     0,     0,     0,     0,     0,     0,     0,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   161,     0,
     162,     0,   163,   164,   165,   166,   167,   168,     0,   169,
     170,   171,   172,   173,     0,     0,   174,   175,   176,   177,
     178,     0,   179,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
       0,   195,     0,   196,   197,   198,   199,     0,   200,     0,
     201,     0,     0,  -579,   204,   205,   206,     0,   208,     0,
     209,     0,   210,   211,     0,   212,   213,   214,   215,   216,
     217,     0,   219,   220,   221,   222,     0,   223,   224,   225,
     226,   227,   228,     0,   229,  -579,   231,   232,   233,   234,
     235,   236,   237,     0,   238,     0,   239,     0,     0,   242,
    -579,   244,   245,   246,   247,   248,     0,     0,   249,  -579,
     251,     0,     0,   253,   254,   255,     0,     0,   256,   257,
     258,   259,   260,   490,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,  -579,   282,   283,   284,   285,   286,     0,
     287,   288,     0,   290,     0,   291,   292,   293,   294,   295,
     296,     0,   297,   298,     0,     0,   299,   300,   301,     0,
       0,   302,   303,     0,   305,     0,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,     0,   318,   319,
     320,   321,   322,   323,   324,   325,   326,     0,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,     0,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,     0,   353,   354,  -579,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,     0,   371,   372,   373,   374,   375,
       0,   376,   377,   378,   379,   380,     0,   382,   383,   384,
     385,     0,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   492,   398,   399,     0,   400,   401,     0,
     402,  -579,   404,   405,   406,   407,   408,     0,   409,   410,
       0,     0,   411,   412,   413,   414,   415,     0,   416,   417,
     418,   419,   420,   421,   422,   423,     0,     0,   424,   425,
     426,   427,   428,     0,     0,   429,   430,   431,   432,   433,
     434,   435,     0,   436,     0,   438,   439,   440,   441,     0,
       0,   442,     0,     0,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,     0,     0,    89,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   843,    90,    91,    92,    93,    94,    95,    96,
      97,     0,    98,    99,   100,     0,     0,     0,     0,     0,
       0,     0,   101,   102,     0,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,     0,   115,   116,
     117,   118,   119,   120,     0,   733,   121,   122,   123,   124,
     125,     0,   126,   127,   128,   129,   736,     0,   737,     0,
     132,   133,   134,   135,   136,   137,   138,   139,   140,     0,
     141,   142,   143,   144,   145,   146,     0,   147,   148,   149,
     150,   738,   739,   740,   741,   742,   743,   744,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,     0,   162,
       0,   163,   164,   165,   166,   167,   168,     0,   169,   170,
     171,   172,   173,     0,     0,   174,   175,   176,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   750,     0,
     195,     0,   196,   197,   198,   199,     0,   200,     0,   201,
     202,     0,   203,   204,   205,   206,   207,   208,     0,   209,
       0,   210,   211,     0,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,     0,   223,   224,   225,   226,
     227,   228,     0,   229,   230,   231,   232,   233,   234,   235,
     236,   237,     0,   238,     0,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,  1954,     0,   249,   250,   251,
     252,     0,   253,   254,   255,   756,   757,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,     0,   287,
     288,   289,   290,     0,   762,   292,   293,   294,   295,   296,
       0,   297,   298,     0,   560,   299,   300,   301,     0,     0,
     302,   303,   304,   305,   306,   765,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,     0,   318,   319,   766,
     321,   322,   323,   324,   325,   326,     0,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,     0,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,     0,   353,   354,   355,   356,   357,
     358,   359,  1955,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,    25,   371,   372,   373,   374,   375,   769,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
       0,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   771,     0,   400,   401,    29,   402,
     403,   404,   405,   406,   407,   408,     0,   409,   410,     0,
       0,   411,   412,   774,   414,   775,     0,   416,   417,   777,
     419,   420,   421,   422,   423,     0,     0,   424,   425,   426,
     427,   428,   778,     0,   429,   430,   431,   432,   433,   596,
     435,     0,   436,   437,   438,   439,   440,   441,     0,     0,
     442,     0,    32,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,     0,    89,    33,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1956,    90,    91,    92,    93,    94,    95,    96,    97,     0,
      98,    99,   100,     0,     0,     0,     0,     0,     0,     0,
     101,   102,     0,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,     0,   115,   116,   117,   118,
     119,   120,     0,   733,   121,   122,   123,   124,   125,     0,
     126,   127,   128,   129,   736,     0,   737,     0,   132,   133,
     134,   135,   136,   137,   138,   139,   140,     0,   141,   142,
     143,   144,   145,   146,     0,   147,   148,   149,   150,   738,
     739,   740,   741,   742,   743,   744,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   161,     0,   162,     0,   163,
     164,   165,   166,   167,   168,     0,   169,   170,   171,   172,
     173,     0,     0,   174,   175,   176,   177,   178,     0,   179,
     180,   181,     0,   182,   183,   184,     0,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   750,     0,   195,     0,
     196,   197,   198,   199,     0,   200,     0,   201,   202,     0,
     203,   204,   205,   206,   207,   208,     0,   209,     0,   210,
     211,     0,   212,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,     0,   223,   224,   225,   226,   227,   228,
       0,   229,   230,   231,   232,   233,   234,   235,   236,   237,
       0,   238,     0,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,  1954,     0,   249,   250,   251,   252,     0,
     253,   254,   255,   756,   757,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,     0,   287,   288,   289,
     290,     0,   762,   292,   293,   294,   295,   296,     0,   297,
     298,     0,   560,   299,   300,   301,     0,     0,   302,   303,
     304,   305,   306,   765,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,     0,   318,   319,   766,   321,   322,
     323,   324,   325,   326,     0,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,     0,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,     0,   353,   354,   355,   356,   357,   358,   359,
    1955,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,     0,   371,   372,   373,   374,   375,   769,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,     0,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   771,     0,   400,   401,     0,   402,   403,   404,
     405,   406,   407,   408,     0,   409,   410,     0,     0,   411,
     412,   774,   414,   775,     0,   416,   417,   777,   419,   420,
     421,   422,   423,     0,     0,   424,   425,   426,   427,   428,
     778,     0,   429,   430,   431,   432,   433,   434,   435,     0,
     436,   437,   438,   439,   440,   441,     0,     0,   442,     0,
       0,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,     0,    89,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1956,    90,
      91,    92,    93,    94,    95,    96,    97,     0,    98,    99,
     100,     0,     0,     0,     0,     0,     0,     0,   101,   102,
       0,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,     0,   115,   116,   117,   118,   119,   120,
       0,   733,   121,   122,   123,   124,   125,     0,   126,   127,
     128,   129,   736,     0,   737,     0,   132,   133,   134,   135,
     136,   137,   138,   139,   140,     0,   141,   142,   143,   144,
     145,   146,     0,   147,   148,   149,   150,   738,   739,   740,
     741,   742,   743,   744,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   161,     0,   162,     0,   163,   164,   165,
     166,   167,   168,     0,   169,   170,   171,   172,   173,     0,
       0,   174,   175,   176,   177,   178,     0,   179,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   750,     0,   195,     0,   196,   197,
     198,   199,     0,   200,     0,   201,   202,     0,   203,   204,
     205,   206,   207,   208,     0,   209,     0,   210,   211,     0,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,     0,   223,   224,   225,   226,   227,   228,     0,   229,
     230,   231,   232,   233,   234,   235,   236,   237,     0,   238,
       0,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,     0,     0,   249,   250,   251,   252,     0,   253,   254,
     255,   756,   757,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,     0,   287,   288,   289,   290,     0,
     762,   292,   293,   294,   295,   296,     0,   297,   298,     0,
       0,   299,   300,   301,     0,     0,   302,   303,   304,   305,
     306,   765,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,     0,   318,   319,   766,   321,   322,   323,   324,
     325,   326,     0,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,     0,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
       0,   353,   354,   355,   356,   357,   358,   359,  1955,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,     0,
     371,   372,   373,   374,   375,   769,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,     0,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     771,     0,   400,   401,     0,   402,   403,   404,   405,   406,
     407,   408,     0,   409,   410,     0,     0,   411,   412,   774,
     414,   775,     0,   416,   417,   777,   419,   420,   421,   422,
     423,     0,     0,   424,   425,   426,   427,   428,   778,     0,
     429,   430,   431,   432,   433,   434,   435,     0,   436,   437,
     438,   439,   440,   441,     0,     0,   442,     0,     0,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
       0,    89,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    34,    90,    91,    92,
      93,    94,    95,    96,    97,     0,    98,    99,   100,     0,
       0,     0,     0,     0,     0,     0,   101,   102,     0,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,     0,   115,   116,   117,   118,   119,   120,     0,   733,
     121,   122,   123,   124,   125,     0,   126,   127,   128,   129,
     736,     0,   737,     0,   132,   133,   134,   135,   136,   137,
     138,   139,   140,     0,   141,   142,   143,   144,   145,   146,
       0,   147,   148,   149,   150,   738,   739,   740,   741,   742,
     743,   744,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   161,     0,   162,     0,   163,   164,   165,   166,   167,
     168,     0,   169,   170,   171,   172,   173,     0,     0,   174,
     175,   176,   177,   178,     0,   179,   180,   181,     0,   182,
     183,   184,     0,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   750,     0,   195,     0,   196,   197,   198,   199,
       0,   200,     0,   201,   202,     0,   203,   204,   205,   206,
     207,   208,     0,   209,     0,   210,   211,     0,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,     0,
     223,   224,   225,   226,   227,   228,     0,   229,   230,   231,
     232,   233,   234,   235,   236,   237,     0,   238,     0,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,     0,
       0,   249,   250,   251,   252,     0,   253,   254,   255,   756,
     757,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,     0,   287,   288,   289,   290,     0,   762,   292,
     293,   294,   295,   296,     0,   297,   298,     0,     0,   299,
     300,   301,     0,     0,   302,   303,   304,   305,   306,   765,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
       0,   318,   319,   766,   321,   322,   323,   324,   325,   326,
       0,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,     0,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,     0,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,     0,   371,   372,
     373,   374,   375,   769,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,     0,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   771,     0,
     400,   401,     0,   402,   403,   404,   405,   406,   407,   408,
       0,   409,   410,     0,     0,   411,   412,   774,   414,   775,
       0,   416,   417,   777,   419,   420,   421,   422,   423,     0,
       0,   424,   425,   426,   427,   428,   778,     0,   429,   430,
     431,   432,   433,   434,   435,     0,   436,   437,   438,   439,
     440,   441,     0,     0,   442,     0,     0,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,     0,   653,
    1077,   535,     0,     0,     0,   727,     0,     0,     0,     0,
       0,     0,     0,     0,  2573,    90,    91,    92,    93,    94,
      95,    96,    97,     0,    98,    99,   100,     0,     0,     0,
       0,     0,     0,     0,   101,   102,     0,   103,   104,   105,
       0,   107,   108,   109,   654,   655,     0,   656,   657,     0,
     115,   116,   117,   118,   119,   120,     0,     0,   121,   122,
     658,   659,   125,     0,   126,   127,   128,   129,   660,     0,
       0,     0,   132,   133,   134,   135,   136,     0,   138,   139,
     140,     0,   141,   142,   143,   144,   145,   146,     0,     0,
     148,   149,   150,     0,     0,     0,     0,     0,     0,     0,
     152,   153,   154,   155,   156,   157,   158,   661,   662,   161,
       0,   162,     0,   163,   164,   165,   166,   167,   168,     0,
     169,   170,   171,   172,   173,     0,     0,   174,   175,   176,
     177,   178,     0,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,   188,   663,   190,   191,   192,   193,
     664,  1078,   195,     0,   196,   197,   665,   199,     0,   200,
       0,   201,     0,     0,     0,   204,   205,   206,     0,   208,
       0,   209,     0,   666,   211,     0,   212,   213,   214,   215,
     216,   217,     0,   219,   220,   221,   222,     0,   223,   224,
     225,   226,   227,   228,     0,   229,     0,   667,   232,   233,
     234,   235,   668,   669,     0,   670,     0,   239,     0,     0,
     242,     0,   244,   245,   246,   247,   248,     0,     0,   249,
       0,   251,     0,     0,   253,   254,   255,     0,     0,   256,
     257,   258,   259,   260,   671,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   672,     0,   673,   283,   284,   285,   674,
       0,   287,   288,     0,   290,     0,   675,   292,   676,   294,
     295,   296,     0,   297,   298,  1079,     0,   299,   300,   301,
       0,     0,   302,   677,     0,   305,     0,   678,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,     0,   318,
     319,   679,   321,   322,   680,   324,   325,   326,     0,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   681,   337,
     338,   339,   340,     0,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,     0,   353,   354,     0,
     356,   357,   358,   682,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,     0,   371,   372,   373,   374,
     375,     0,   376,   683,   378,   379,   380,     0,   382,   383,
     684,   385,     0,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   685,   398,   686,     0,   400,   401,
       0,   402,     0,   404,   405,   406,   407,   408,     0,   687,
     688,     0,     0,   411,   412,   689,   414,   690,  1080,   416,
     417,   691,   419,   420,   421,   422,   423,     0,     0,   424,
     425,   426,   427,   428,     0,     0,   429,   430,   431,   432,
     433,  1026,   693,     0,   436,     0,   438,   439,   440,   441,
       0,     0,   442,     0,     0,   443,   444,   445,   446,   447,
     448,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   460,   461,   462,   463,     0,   653,     0,     0,
       0,     0,     0,  1081,  1082,  1822,     0,     0,     0,     0,
       0,     0,  1823,    90,    91,    92,    93,    94,    95,    96,
      97,     0,    98,    99,   100,     3,     4,     0,     0,     0,
       0,     0,   101,   102,     0,   103,   104,   105,     0,   107,
     108,   109,   654,   655,     0,   656,   657,     0,   115,   116,
     117,   118,   119,   120,     0,     0,   121,   122,   658,   659,
     125,     0,   126,   127,   128,   129,   660,     0,     0,     0,
     132,   133,   134,   135,   136,     0,   138,   139,   140,     0,
     141,   142,   143,   144,   145,   146,     0,     0,   148,   149,
     150,     0,     0,     0,     0,     0,     0,     0,   152,   153,
     154,   155,   156,   157,   158,   661,   662,   161,     0,   162,
       0,   163,   164,   165,   166,   167,   168,     0,   169,   170,
     171,   172,   173,     0,     0,   174,   175,   176,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,   188,   663,   190,   191,   192,   193,   664,     0,
     195,     0,   196,   197,   665,   199,     0,   200,     0,   201,
       0,     0,     0,   204,   205,   206,     0,   208,     0,   209,
       0,   666,   211,     0,   212,   213,   214,   215,   216,   217,
       0,   219,   220,   221,   222,     0,   223,   224,   225,   226,
     227,   228,     0,   229,     0,   667,   232,   233,   234,   235,
     668,   669,     0,   670,     0,   239,     0,     0,   242,     0,
     244,   245,   246,   247,   248,     0,     0,   249,     0,   251,
       0,     0,   253,   254,   255,     0,     0,   256,   257,   258,
     259,   260,   671,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   672,     0,   673,   283,   284,   285,   674,     0,   287,
     288,     0,   290,     0,   675,   292,   676,   294,   295,   296,
       0,   297,   298,     0,     0,   299,   300,   301,     0,     0,
     302,   677,     0,   305,     0,   678,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,     0,   318,   319,   679,
     321,   322,   680,   324,   325,   326,     0,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   681,   337,   338,   339,
     340,     0,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,     0,   353,   354,     0,   356,   357,
     358,   682,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,    25,   371,   372,   373,   374,   375,     0,
     376,   683,   378,   379,   380,     0,   382,   383,   684,   385,
       0,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   685,   398,   686,     0,   400,   401,    29,   402,
       0,   404,   405,   406,   407,   408,     0,   687,   688,     0,
       0,   411,   412,   689,   414,   690,     0,   416,   417,   691,
     419,   420,   421,   422,   423,     0,     0,   424,   425,   426,
     427,   428,     0,     0,   429,   430,   431,   432,   433,   692,
     693,     0,   436,     0,   438,   439,   440,   441,     0,     0,
     442,     0,    32,   443,   444,   445,   446,   447,   448,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     460,   461,   462,   463,     0,   488,    33,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      34,    90,    91,    92,    93,    94,    95,    96,    97,   593,
      98,    99,   100,     0,     0,     0,     0,     0,     0,     0,
     101,   102,     0,   103,   104,   105,     0,   107,   108,   109,
     110,   111,     0,   113,   114,     0,   115,   116,   117,   118,
     119,   120,     0,     0,   121,   122,   123,   124,   125,     0,
     126,   127,   128,   129,   130,     0,     0,     0,   132,   133,
     134,   135,   136,     0,   138,   139,   140,     0,   141,   142,
     143,   144,   145,   146,     0,     0,   148,   149,   150,     0,
       0,     0,     0,     0,     0,     0,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   161,     0,   162,     0,   163,
     164,   165,   166,   167,   168,     0,   169,   170,   171,   172,
     173,     0,     0,   174,   175,   176,   177,   178,     0,   179,
     180,   181,     0,   182,   183,   184,     0,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,     0,   195,     0,
     196,   197,   198,   199,     0,   200,     0,   201,     0,     0,
       0,   204,   205,   206,     0,   208,     0,   209,     0,   210,
     211,     0,   212,   213,   214,   215,   216,   217,     0,   219,
     220,   221,   222,     0,   223,   224,   225,   226,   227,   228,
       0,   229,     0,   231,   232,   233,   234,   235,   236,   237,
       0,   238,     0,   239,     0,     0,   242,     0,   244,   245,
     246,   247,   248,     0,     0,   249,     0,   251,     0,     0,
     253,   254,   255,     0,     0,   256,   257,   258,   259,   260,
     490,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
       0,   282,   283,   284,   285,   286,     0,   287,   288,     0,
     290,     0,   291,   292,   293,   294,   295,   296,     0,   297,
     298,     0,     0,   299,   300,   301,     0,     0,   302,   303,
       0,   305,     0,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,     0,   318,   319,   320,   321,   322,
     323,   324,   325,   326,     0,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,     0,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,     0,   353,   354,     0,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,    25,   371,   372,   373,   374,   375,     0,   376,   377,
     378,   379,   380,     0,   382,   383,   384,   385,     0,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     492,   398,   399,     0,   400,   401,    29,   402,     0,   404,
     405,   406,   407,   408,     0,   594,   410,     0,     0,   595,
     412,   413,   414,   415,     0,   416,   417,   418,   419,   420,
     421,   422,   423,     0,     0,   424,   425,   426,   427,   428,
       0,     0,   429,   430,   431,   432,   433,   596,   435,     0,
     436,     0,   438,   439,   440,   441,     0,     0,   442,     0,
      32,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,     0,   488,    33,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    34,    90,
      91,    92,    93,    94,    95,    96,    97,     0,    98,    99,
     100,     0,     0,     0,     0,     0,     0,     0,   101,   102,
       0,   103,   104,   105,     0,   107,   108,   109,   110,   111,
       0,   113,   114,     0,   115,   116,   117,   118,   119,   120,
       0,     0,   121,   122,   123,   124,   125,     0,   126,   127,
     128,   129,   130,     0,     0,     0,   132,   133,   134,   135,
     136,     0,   138,   139,   140,     0,   141,   142,   143,   144,
     145,   146,     0,     0,   148,   149,   150,     0,     0,     0,
       0,     0,     0,     0,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   161,     0,   162,     0,   163,   164,   165,
     166,   167,   168,     0,   169,   170,   171,   172,   173,     0,
       0,   174,   175,   176,   177,   178,     0,   179,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,     0,   195,     0,   196,   197,
     198,   199,     0,   200,     0,   201,     0,     0,     0,   204,
     205,   206,     0,   208,     0,   209,     0,   210,   211,     0,
     212,   213,   214,   215,   216,   217,     0,   219,   220,   221,
     222,     0,   223,   224,   225,   226,   227,   228,     0,   229,
       0,   231,   232,   233,   234,   235,   236,   237,     0,   238,
       0,   239,     0,     0,   242,     0,   244,   245,   246,   247,
     248,     0,     0,   249,     0,   251,     0,     0,   253,   254,
     255,     0,     0,   256,   257,   258,   259,   260,   490,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,     0,   282,
     283,   284,   285,   286,     0,   287,   288,     0,   290,     0,
     291,   292,   293,   294,   295,   296,     0,   297,   298,     0,
       0,   299,   300,   301,     0,     0,   302,   303,     0,   305,
       0,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,     0,   318,   319,   320,   321,   322,   323,   324,
     325,   326,     0,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,     0,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
       0,   353,   354,     0,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,    25,
     371,   372,   373,   374,   375,     0,   376,   377,   378,   379,
     380,     0,   382,   383,   384,   385,     0,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   492,   398,
     399,     0,   400,   401,    29,   402,     0,   404,   405,   406,
     407,   408,     0,   409,   410,     0,     0,   411,   412,   413,
     414,   415,     0,   416,   417,   418,   419,   420,   421,   422,
     423,     0,     0,   424,   425,   426,   427,   428,     0,     0,
     429,   430,   431,   432,   433,   596,   435,     0,   436,     0,
     438,   439,   440,   441,     0,     0,   442,     0,    32,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
       0,   488,    33,  2403,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    34,    90,    91,    92,
      93,    94,    95,    96,    97,     0,    98,    99,   100,     0,
       0,     0,     0,     0,     0,     0,   101,   102,     0,   103,
     104,   105,     0,   107,   108,   109,   110,   111,     0,   113,
     114,     0,   115,   116,   117,   118,   119,   120,     0,     0,
     121,   122,   123,   124,   125,     0,   126,   127,   128,   129,
     130,     0,     0,     0,   132,   133,   134,   135,   136,     0,
     138,   139,   140,     0,   141,   142,   143,   144,   145,   146,
       0,     0,   148,   149,   150,     0,     0,     0,     0,     0,
       0,     0,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   161,     0,   162,     0,   163,   164,   165,   166,   167,
     168,     0,   169,   170,   171,   172,   173,     0,     0,   174,
     175,   176,   177,   178,     0,   179,   180,   181,     0,   182,
     183,   184,     0,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,     0,   195,     0,   196,   197,   198,   199,
       0,   200,     0,   201,     0,     0,     0,   204,   205,   206,
       0,   208,     0,   209,     0,   210,   211,     0,   212,   213,
     214,   215,   216,   217,     0,   219,   220,   221,   222,     0,
     223,   224,   225,   226,   227,   228,     0,   229,     0,   231,
     232,   233,   234,   235,   236,   237,     0,   238,     0,   239,
       0,     0,   242,     0,   244,   245,   246,   247,   248,     0,
       0,   249,     0,   251,     0,     0,   253,   254,   255,     0,
       0,   256,   257,   258,   259,   260,   490,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,     0,   282,   283,   284,
     285,   286,     0,   287,   288,     0,   290,     0,   291,   292,
     293,   294,   295,   296,     0,   297,   298,     0,     0,   299,
     300,   301,     0,     0,   302,   303,     0,   305,     0,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
       0,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,     0,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,     0,   353,
     354,     0,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,     0,   371,   372,
     373,   374,   375,     0,   376,   377,   378,   379,   380,     0,
     382,   383,   384,   385,     0,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   492,   398,   399,     0,
     400,   401,     0,   402,     0,   404,   405,   406,   407,   408,
       0,   409,   410,     0,     0,   411,   412,   413,   414,   415,
       0,   416,   417,   418,   419,   420,   421,   422,   423,     0,
       0,   424,   425,   426,   427,   428,     0,     0,   429,   430,
     431,   432,   433,   434,   435,     0,   436,     0,   438,   439,
     440,   441,     0,     0,   442,     0,     0,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,     0,   488,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2421,    90,    91,    92,    93,    94,
      95,    96,    97,     0,    98,    99,   100,     0,     0,     0,
       0,     0,     0,     0,   101,   102,     0,   103,   104,   105,
       0,   107,   108,   109,   110,   111,     0,   113,   114,     0,
     115,   116,   117,   118,   119,   120,     0,     0,   121,   122,
     123,   124,   125,     0,   126,   127,   128,   129,   130,     0,
       0,     0,   132,   133,   134,   135,   136,     0,   138,   139,
     140,     0,   141,   142,   143,   144,   145,   146,     0,     0,
     148,   149,   150,     0,     0,     0,     0,     0,     0,     0,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   161,
       0,   162,     0,   163,   164,   165,   166,   167,   168,     0,
     169,   170,   171,   172,   173,     0,     0,   174,   175,   176,
     177,   178,     0,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,     0,   195,     0,   196,   197,   198,   199,     0,   200,
       0,   201,     0,     0,     0,   204,   205,   206,     0,   208,
       0,   209,     0,   210,   211,     0,   212,   213,   214,   215,
     216,   217,     0,   219,   220,   221,   222,     0,   223,   224,
     225,   226,   227,   228,     0,   229,     0,   231,   232,   233,
     234,   235,   236,   237,     0,   238,     0,   239,     0,     0,
     242,     0,   244,   245,   246,   247,   248,     0,     0,   249,
       0,   251,     0,     0,   253,   254,   255,     0,     0,   256,
     257,   258,   259,   260,   490,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,     0,   282,   283,   284,   285,   286,
       0,   287,   288,     0,   290,     0,   291,   292,   293,   294,
     295,   296,     0,   297,   298,     0,     0,   299,   300,   301,
       0,     0,   302,   303,     0,   305,     0,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,     0,   318,
     319,   320,   321,   322,   323,   324,   325,   326,     0,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,     0,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,     0,   353,   354,     0,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,     0,   371,   372,   373,   374,
     375,     0,   376,   377,   378,   379,   380,     0,   382,   383,
     384,   385,     0,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   492,   398,   399,     0,   400,   401,
       0,   402,     0,   404,   405,   406,   407,   408,     0,   409,
     410,     0,     0,   411,   412,   413,   414,   415,     0,   416,
     417,   418,   419,   420,   421,   422,   423,     0,     0,   424,
     425,   426,   427,   428,     0,     0,   429,   430,   431,   432,
     433,   434,   435,     0,   436,     0,   438,   439,   440,   441,
       0,     0,   442,     0,     0,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,     0,   488,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   824,    90,    91,    92,    93,    94,    95,    96,
      97,     0,    98,    99,   100,     0,     0,     0,     0,     0,
       0,     0,   101,   102,     0,   103,   104,   105,     0,   107,
     108,   109,   110,   111,     0,   113,   114,     0,   115,   116,
     117,   118,   119,   120,     0,     0,   121,   122,   123,   124,
     125,     0,   126,   127,   128,   129,   130,     0,     0,     0,
     132,   133,   134,   135,   136,     0,   138,   139,   140,     0,
     141,   142,   143,   144,   145,   146,     0,     0,   148,   149,
     150,     0,     0,     0,     0,     0,     0,     0,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,     0,   162,
       0,   163,   164,   165,   166,   167,   168,     0,   169,   170,
     171,   172,   173,     0,     0,   174,   175,   176,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,     0,
     195,     0,   196,   197,   198,   199,     0,   200,     0,   201,
       0,     0,     0,   204,   205,   206,     0,   208,     0,   209,
       0,   210,   211,     0,   212,   213,   214,   215,   216,   217,
       0,   219,   220,   221,   222,     0,   223,   224,   225,   226,
     227,   228,     0,   229,     0,   231,   232,   233,   234,   235,
     236,   237,     0,   238,     0,   239,     0,     0,   242,     0,
     244,   245,   246,   247,   248,     0,     0,   249,     0,   251,
       0,     0,   253,   254,   255,     0,     0,   256,   257,   258,
     259,   260,   490,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,     0,   282,   283,   284,   285,   286,     0,   287,
     288,     0,   290,     0,   291,   292,   293,   294,   295,   296,
       0,   297,   298,     0,     0,   299,   300,   301,     0,     0,
     302,   303,     0,   305,     0,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,     0,   318,   319,   320,
     321,   322,   323,   324,   325,   326,     0,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,     0,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,     0,   353,   354,     0,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,     0,   371,   372,   373,   374,   375,     0,
     376,   377,   378,   379,   380,     0,   382,   383,   384,   385,
       0,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   492,   398,   399,     0,   400,   401,     0,   402,
       0,   404,   405,   406,   407,   408,     0,   409,   410,     0,
       0,   411,   412,   413,   414,   415,     0,   416,   417,   418,
     419,   420,   421,   422,   423,     0,     0,   424,   425,   426,
     427,   428,     0,     0,   429,   430,   431,   432,   433,   434,
     435,     0,   436,     0,   438,   439,   440,   441,     0,     0,
     442,     0,     0,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,     0,   488,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1676,    90,    91,    92,    93,    94,    95,    96,    97,     0,
      98,    99,   100,     0,     0,     0,     0,     0,     0,     0,
     101,   102,     0,   103,   104,   105,     0,   107,   108,   109,
     110,   111,     0,   113,   114,     0,   115,   116,   117,   118,
     119,   120,     0,     0,   121,   122,   123,   124,   125,     0,
     126,   127,   128,   129,   130,     0,     0,     0,   132,   133,
     134,   135,   136,     0,   138,   139,   140,     0,   141,   142,
     143,   144,   145,   146,     0,     0,   148,   149,   150,     0,
       0,     0,     0,     0,     0,     0,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   161,     0,   162,     0,   163,
     164,   165,   166,   167,   168,     0,   169,   170,   171,   172,
     173,     0,     0,   174,   175,   176,   177,   178,     0,   179,
     180,   181,     0,   182,   183,   184,     0,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,     0,   195,     0,
     196,   197,   198,   199,     0,   200,     0,   201,     0,     0,
       0,   204,   205,   206,     0,   208,     0,   209,     0,   210,
     211,     0,   212,   213,   214,   215,   216,   217,     0,   219,
     220,   221,   222,     0,   223,   224,   225,   226,   227,   228,
       0,   229,     0,   231,   232,   233,   234,   235,   236,   237,
       0,   238,     0,   239,     0,     0,   242,     0,   244,   245,
     246,   247,   248,     0,     0,   249,     0,   251,     0,     0,
     253,   254,   255,     0,     0,   256,   257,   258,   259,   260,
     490,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
       0,   282,   283,   284,   285,   286,     0,   287,   288,     0,
     290,     0,   291,   292,   293,   294,   295,   296,     0,   297,
     298,     0,     0,   299,   300,   301,     0,     0,   302,   303,
       0,   305,     0,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,     0,   318,   319,   320,   321,   322,
     323,   324,   325,   326,     0,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,     0,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,     0,   353,   354,     0,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,     0,   371,   372,   373,   374,   375,     0,   376,   377,
     378,   379,   380,     0,   382,   383,   384,   385,     0,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     492,   398,   399,     0,   400,   401,     0,   402,     0,   404,
     405,   406,   407,   408,     0,   409,   410,     0,     0,   411,
     412,   413,   414,   415,     0,   416,   417,   418,   419,   420,
     421,   422,   423,     0,     0,   424,   425,   426,   427,   428,
       0,     0,   429,   430,   431,   432,   433,   434,   435,     0,
     436,     0,   438,   439,   440,   441,     0,     0,   442,     0,
       0,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,     0,     0,     0,     0,  2285,  1077,   535,     0,
       0,  1536,   727,     0,     0,     0,     0,     0,  2184,  1537,
    1538,  1539,    90,    91,    92,    93,    94,    95,    96,    97,
     954,    98,    99,   100,   955,   956,   957,   958,   959,   960,
     961,   101,   102,   962,   103,   104,   105,  2286,   107,   108,
     109,     0,  1102,  2287,  1104,  1105,   963,   115,   116,   117,
     118,   119,   120,   964,   965,   121,   122,  1106,  1107,   125,
     966,   126,   127,   128,   129,     0,   967,  2288,   968,   132,
     133,   134,   135,   136,  2289,   138,   139,   140,   969,   141,
     142,   143,   144,   145,   146,   970,  2290,   148,   149,   150,
     971,   972,   973,  2291,   974,   975,   976,   152,   153,   154,
     155,   156,   157,   158,  1112,  1113,   161,   977,   162,   978,
     163,   164,   165,   166,   167,   168,   979,   169,   170,   171,
     172,   173,   980,   981,   174,   175,   748,   177,   178,   982,
     179,   180,   181,   983,   182,   183,   184,   984,   185,   186,
     187,   188,     0,   190,   191,   192,   193,     0,   985,   195,
     986,   196,   197,  1114,   199,   987,   200,   988,   201,  2292,
     989,  2293,   204,   205,   206,  2294,   208,   990,   209,   991,
       0,   211,   992,   212,   213,   214,   215,   216,   217,  2295,
     219,   220,   221,   222,   993,   223,   224,   225,   226,   227,
     228,   994,   229,  2296,     0,   232,   233,   234,   235,  1120,
    1121,   995,  1122,   996,   239,  2297,  2298,   242,  2299,   244,
     245,   246,   247,   248,   997,   998,   249,  2300,   251,  2301,
     999,   253,   254,   255,  1000,  1001,   256,   257,   258,   259,
     260,  2302,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
    1129,  2303,  1131,   283,   284,   285,  2304,  1002,   287,   288,
    2305,   290,  1003,     0,   292,  1133,   294,   295,   296,  1004,
     297,   298,  1005,  1006,  2306,   300,   301,  1007,  1008,   302,
       0,  2307,   305,  2308,     0,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,  1009,   318,   319,     0,   321,
     322,     0,   324,   325,   326,  1010,   327,   328,   329,   330,
     331,   332,   333,   334,   335,  1136,   337,   338,   339,   340,
    1011,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,  1012,   353,   354,  2309,   356,   357,   358,
    1138,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,  1013,   371,   372,   373,   374,   375,  1014,   376,
    2310,   378,   379,   380,  2311,   382,   383,  1141,   385,  1015,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,  2312,   398,     0,  1016,   400,   401,  1017,   402,  2313,
     404,   405,   406,   407,   408,  1018,  1144,  1145,  1019,  1020,
     411,   412,     0,   414,     0,  1021,   416,   417,  2314,   419,
     420,   421,   422,   423,  1022,  1023,   424,   425,   426,   427,
     428,  1024,  1025,   429,   430,   431,   432,   433,     0,  1147,
    1027,   436,  2315,   438,   439,   440,   441,  1028,  1029,   442,
    1030,  1031,   443,   444,   445,   446,   447,   448,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   460,
     461,   462,   463,     0,   488,     0,  1540,  1541,  1542,  1536,
    2316,  2317,  1545,  1546,  1547,  1548,     0,  1537,  1538,  1539,
      90,    91,    92,    93,    94,    95,    96,    97,     0,    98,
      99,   100,     0,     0,     0,     0,     0,     0,     0,   101,
     102,     0,   103,   104,   105,     0,   107,   108,   109,   110,
     111,     0,   113,   114,     0,   115,   116,   117,   118,   119,
     120,     0,     0,   121,   122,   123,   124,   125,     0,   126,
     127,   128,   129,   130,     0,     0,     0,   132,   133,   134,
     135,   136,     0,   138,   139,   140,     0,   141,   142,   143,
     144,   145,   146,     0,     0,   148,   149,   150,     0,     0,
       0,     0,     0,     0,     0,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   161,     0,   162,     0,   163,   164,
     165,   166,   167,   168,     0,   169,   170,   171,   172,   173,
       0,     0,   174,   175,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,     0,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,     0,   195,     0,   196,
     197,   198,   199,     0,   200,     0,   201,     0,     0,     0,
     204,   205,   206,     0,   208,     0,   209,     0,   210,   211,
       0,   212,   213,   214,   215,   216,   217,     0,   219,   220,
     221,   222,     0,   223,   224,   225,   226,   227,   228,     0,
     229,     0,   231,   232,   233,   234,   235,   236,   237,     0,
     238,     0,   239,     0,     0,   242,     0,   244,   245,   246,
     247,   248,     0,     0,   249,     0,   251,     0,     0,   253,
     254,   255,     0,     0,   256,   257,   258,   259,   260,   490,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,     0,
     282,   283,   284,   285,   286,     0,   287,   288,     0,   290,
       0,   291,   292,   293,   294,   295,   296,     0,   297,   298,
       0,     0,   299,   300,   301,     0,     0,   302,   303,     0,
     305,     0,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,     0,   318,   319,   320,   321,   322,   323,
     324,   325,   326,     0,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,     0,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,     0,   353,   354,     0,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
       0,   371,   372,   373,   374,   375,     0,   376,   377,   378,
     379,   380,     0,   382,   383,   384,   385,     0,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   492,
     398,   399,     0,   400,   401,     0,   402,     0,   404,   405,
     406,   407,   408,     0,   409,   410,     0,     0,   411,   412,
     413,   414,   415,     0,   416,   417,   418,   419,   420,   421,
     422,   423,     0,     0,   424,   425,   426,   427,   428,     0,
       0,   429,   430,   431,   432,   433,   434,   435,     0,   436,
       0,   438,   439,   440,   441,     0,     0,   442,     0,     0,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,     0,     0,     0,  1540,  1541,  1542,     0,  1543,  1544,
    1545,  1546,  1547,  1548,  1226,     0,     0,  1227,     0,     0,
       0,     0,  1228,  1229,  1230,     0,     0,     0,     0,     0,
       0,     0,  1226,     0,     0,  1227,     0,     0,     0,  1231,
    1228,  1229,  1230,     0,     0,     0,     0,  1233,     0,     0,
    1226,     0,     0,  1227,  1234,     0,     0,  1231,  1228,  1229,
    1230,     0,     0,     0,     0,  1233,     0,     0,     0,     0,
       0,     0,  1234,     0,     0,  1231,     0,     0,  1226,  1235,
       0,  1227,     0,  1233,     0,     0,  1228,  1229,  1230,     0,
    1234,     0,     0,     0,     0,     0,  1226,  1235,     0,  1227,
       0,     0,     0,  1231,  1228,  1229,  1230,     0,     0,     0,
       0,  1233,     0,     0,  1226,  1235,     0,  1227,  1234,     0,
       0,  1231,  1228,  1229,  1230,     0,     0,     0,     0,  1233,
       0,     0,     0,     0,     0,     0,  1234,     0,     0,  1231,
       0,     0,     0,  1235,     0,     0,     0,  1233,     0,     0,
       0,     0,     0,     0,  1234,     0,     0,     0,     0,     0,
       0,  1235,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1236,  1235,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1237,     0,     0,     0,  1236,  1238,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1237,     0,     0,     0,  1236,  1238,     0,     0,  1239,  1240,
       0,     0,     0,     0,     0,     0,     0,     0,  1237,     0,
       0,     0,  1241,  1238,     0,     0,  1239,  1240,     0,     0,
       0,     0,  1236,     0,     0,     0,     0,     0,     0,     0,
    1241,     0,     0,     0,  1239,  1240,  1237,     0,     0,     0,
    1236,  1238,     0,     0,     0,     0,     0,     0,  1241,     0,
    1242,     0,     0,  1243,  1237,     0,     0,     0,  1236,  1238,
       0,     0,  1239,  1240,     0,     0,     0,  1244,  1242,     0,
    1245,  1243,  1237,     0,     0,     0,  1241,  1238,     0,     0,
    1239,  1240,     0,     0,     0,  1244,  1242,     0,  1245,  1243,
       0,     0,     0,     0,  1241,     0,     0,     0,  1239,  1240,
       0,     0,     0,  1244,     0,     0,  1245,     0,     0,     0,
       0,     0,  1241,     0,  1242,     0,     0,  1243,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1244,  1242,     0,  1245,  1243,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1244,
    1242,     0,  1245,  1243,     0,     0,     0,  1246,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1244,     0,     0,
    1245,     0,     0,     0,     0,  1246,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1246,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1226,     0,     0,  1227,     0,
       0,     0,     0,  1228,  1229,  1230,     0,     0,     0,     0,
       0,  1246,     0,     0,     0,     0,     0,     0,     0,     0,
    1231,     0,     0,     0,     0,     0,     0,     0,  1233,  1246,
       0,     0,     0,     0,     0,  1234,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1247,  1246,     0,  1248,
    1249,  1250,     0,  1251,  1252,  1253,  1254,  1255,  1256,     0,
    1235,     0,     0,  1580,  1247,     0,     0,  1248,  1249,  1250,
       0,  1251,  1252,  1253,  1254,  1255,  1256,     0,     0,     0,
       0,  1916,  1247,     0,     0,  1248,  1249,  1250,     0,  1251,
    1252,  1253,  1254,  1255,  1256,     0,     0,     0,     0,  2126,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1247,     0,     0,  1248,  1249,  1250,     0,  1251,  1252,  1253,
    1254,  1255,  1256,     0,     0,     0,     0,  2162,  1247,     0,
       0,  1248,  1249,  1250,     0,  1251,  1252,  1253,  1254,  1255,
    1256,     0,     0,     0,     0,  2249,  1247,     0,     0,  1248,
    1249,  1250,     0,  1251,  1252,  1253,  1254,  1255,  1256,  1236,
       0,  1226,     0,  2371,  1227,     0,     0,     0,     0,  1228,
    1229,  1230,     0,  1237,     0,     0,     0,     0,  1238,  1226,
       0,     0,  1227,     0,     0,     0,  1231,  1228,  1229,  1230,
       0,     0,     0,     0,  1233,     0,     0,     0,     0,  1239,
    1240,  1234,     0,     0,  1231,     0,     0,     0,     0,     0,
       0,     0,  1233,  1241,     0,     0,     0,     0,     0,  1234,
       0,     0,  1226,     0,     0,  1227,  1235,     0,     0,     0,
    1228,  1229,  1230,     0,     0,     0,     0,     0,     0,     0,
    1226,     0,     0,  1227,  1235,     0,     0,  1231,  1228,  1229,
    1230,  1242,     0,     0,  1243,  1233,     0,     0,     0,     0,
       0,     0,  1234,     0,     0,  1231,     0,     0,  1244,     0,
       0,  1245,     0,  1233,     0,     0,     0,     0,     0,     0,
    1234,     0,     0,     0,     0,     0,     0,  1235,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1235,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1236,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1237,
       0,     0,     0,  1236,  1238,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1237,  1246,     0,
       0,     0,  1238,     0,     0,  1239,  1240,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1241,
       0,     0,     0,  1239,  1240,     0,  1236,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1241,     0,     0,
    1237,     0,     0,     0,  1236,  1238,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1242,  1237,     0,
    1243,     0,     0,  1238,     0,     0,  1239,  1240,     0,     0,
       0,     0,     0,     0,  1244,  1242,     0,  1245,  1243,     0,
    1241,     0,     0,     0,  1239,  1240,     0,     0,     0,     0,
       0,     0,  1244,     0,     0,  1245,     0,  1247,  1241,     0,
    1248,  1249,  1250,     0,  1251,  1252,  1253,  1254,  1255,  1256,
       0,     0,     0,     0,  2390,     0,     0,     0,  1242,     0,
       0,  1243,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1244,  1242,     0,  1245,  1243,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1244,     0,     0,  1245,     0,     0,     0,
       0,     0,     0,     0,  1246,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1246,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1246,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1246,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1247,     0,     0,  1248,  1249,  1250,     0,
    1251,  1252,  1253,  1254,  1255,  1256,     0,     0,     0,     0,
    2534,  1247,     0,     0,  1248,  1249,  1250,     0,  1251,  1252,
    1253,  1254,  1255,  1256,     0,     0,     0,     0,  2732,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1247,     0,     0,  1248,  1249,  1250,
       0,  1251,  1252,  1253,  1254,  1255,  1256,     0,     0,     0,
       0,  2744,  1247,   953,     0,  1248,  1249,  1250,     0,  1251,
    1252,  1253,  1254,  1255,  1256,     0,     0,  1402,     0,    90,
      91,    92,    93,    94,    95,    96,    97,   954,    98,    99,
     100,   955,   956,   957,   958,   959,   960,   961,   101,   102,
     962,   103,   104,   105,     0,   107,   108,   109,   654,   655,
       0,   656,   657,   963,   115,   116,   117,   118,   119,   120,
     964,   965,   121,   122,   658,   659,   125,   966,   126,   127,
     128,   129,   660,   967,     0,   968,   132,   133,   134,   135,
     136,     0,   138,   139,   140,   969,   141,   142,   143,   144,
     145,   146,   970,     0,   148,   149,   150,   971,   972,   973,
       0,   974,   975,   976,   152,   153,   154,   155,   156,   157,
     158,   661,   662,   161,   977,   162,   978,   163,   164,   165,
     166,   167,   168,   979,   169,   170,   171,   172,   173,   980,
     981,   174,   175,   176,   177,   178,   982,   179,   180,   181,
     983,   182,   183,   184,   984,   185,   186,   187,   188,   663,
     190,   191,   192,   193,   664,   985,   195,   986,   196,   197,
     665,   199,   987,   200,   988,   201,     0,   989,     0,   204,
     205,   206,     0,   208,   990,   209,   991,   666,   211,   992,
     212,   213,   214,   215,   216,   217,     0,   219,   220,   221,
     222,   993,   223,   224,   225,   226,   227,   228,   994,   229,
       0,   667,   232,   233,   234,   235,   668,   669,   995,   670,
     996,   239,     0,     0,   242,     0,   244,   245,   246,   247,
     248,   997,   998,   249,     0,   251,     0,   999,   253,   254,
     255,  1000,  1001,   256,   257,   258,   259,   260,   671,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   672,     0,   673,
     283,   284,   285,   674,  1002,   287,   288,     0,   290,  1003,
     675,   292,   676,   294,   295,   296,  1004,   297,   298,  1005,
    1006,   299,   300,   301,  1007,  1008,   302,   677,     0,   305,
       0,   678,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,  1009,   318,   319,   679,   321,   322,   680,   324,
     325,   326,  1010,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   681,   337,   338,   339,   340,  1011,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
    1012,   353,   354,     0,   356,   357,   358,   682,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,  1013,
     371,   372,   373,   374,   375,  1014,   376,   683,   378,   379,
     380,     0,   382,   383,   684,   385,  1015,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   685,   398,
     686,  1016,   400,   401,  1017,   402,     0,   404,   405,   406,
     407,   408,  1018,   687,   688,  1019,  1020,   411,   412,   689,
     414,   690,  1021,   416,   417,   691,   419,   420,   421,   422,
     423,  1022,  1023,   424,   425,   426,   427,   428,  1024,  1025,
     429,   430,   431,   432,   433,  1026,   693,  1027,   436,     0,
     438,   439,   440,   441,  1028,  1029,   442,  1030,  1031,   443,
     444,   445,   446,   447,   448,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   460,   461,   462,   463,
     488,     0,     0,     0,     0,     0,     0,     0,     0,  1032,
       0,     0,     0,     0,     0,     0,    90,    91,    92,    93,
      94,    95,    96,    97,     0,    98,    99,   100,     0,     0,
       0,     0,     0,     0,     0,   101,   102,     0,   103,   104,
     105,     0,   107,   108,   109,   110,   111,     0,   113,   114,
       0,   115,   116,   117,   118,   119,   120,     0,     0,   121,
     122,   123,   124,   125,     0,   126,   127,   128,   129,   130,
       0,     0,     0,   132,   133,   134,   135,   136,     0,   138,
     139,   140,     0,   141,   142,   143,   144,   145,   146,     0,
       0,   148,   149,   150,     0,     0,     0,     0,     0,     0,
       0,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     161,     0,   162,     0,   163,   164,   165,   166,   167,   168,
       0,   169,   170,   171,   172,   173,     0,     0,   174,   175,
     176,   177,   178,     0,   179,   180,   181,     0,   182,   183,
     184,     0,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,     0,   195,     0,   196,   197,   198,   199,     0,
     200,     0,   201,     0,     0,     0,   204,   205,   206,     0,
     208,     0,   209,     0,   210,   211,     0,   212,   213,   214,
     215,   216,   217,     0,   219,   220,   221,   222,     0,   223,
     224,   225,   226,   227,   228,     0,   229,     0,   231,   232,
     233,   234,   235,   236,   237,     0,   238,     0,   239,     0,
       0,   242,     0,   244,   245,   246,   247,   248,     0,     0,
     249,     0,   251,     0,     0,   253,   254,   255,     0,     0,
     256,   257,   258,   259,   260,   490,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,     0,   282,   283,   284,   285,
     286,     0,   287,   288,     0,   290,     0,   291,   292,   293,
     294,   295,   296,     0,   297,   298,     0,     0,   299,   300,
     301,     0,     0,   302,   303,     0,   305,     0,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,     0,
     318,   319,   320,   321,   322,   323,   324,   325,   326,     0,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,     0,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,     0,   353,   354,
       0,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,     0,   371,   372,   373,
     374,   375,     0,   376,   377,   378,   379,   380,     0,   382,
     383,   384,   385,     0,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   492,   398,   399,     0,   400,
     401,     0,   402,     0,   404,   405,   406,   407,   408,     0,
     409,   410,     0,     0,   411,   412,   413,   414,   415,     0,
     416,   417,   418,   419,   420,   421,   422,   423,     0,     0,
     424,   425,   426,   427,   428,     0,     0,   429,   430,   431,
     432,   433,   434,   435,     0,   436,     0,   438,   439,   440,
     441,     0,     0,   442,     0,     0,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   653,  1077,   535,
       0,     0,     0,   727,     0,     0,  2101,     0,     0,     0,
       0,     0,     0,    90,    91,    92,    93,    94,    95,    96,
      97,     0,    98,    99,   100,     0,     0,     0,     0,     0,
       0,     0,   101,   102,     0,   103,   104,   105,     0,   107,
     108,   109,   654,   655,     0,   656,   657,     0,   115,   116,
     117,   118,   119,   120,     0,     0,   121,   122,   658,   659,
     125,     0,   126,   127,   128,   129,   660,     0,     0,     0,
     132,   133,   134,   135,   136,     0,   138,   139,   140,     0,
     141,   142,   143,   144,   145,   146,     0,     0,   148,   149,
     150,     0,     0,     0,     0,     0,     0,     0,   152,   153,
     154,   155,   156,   157,   158,   661,   662,   161,  1282,   162,
       0,   163,   164,   165,   166,   167,   168,     0,   169,   170,
     171,   172,   173,     0,     0,   174,   175,   176,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,   188,   663,   190,   191,   192,   193,   664,  1078,
     195,     0,   196,   197,   665,   199,     0,   200,     0,   201,
       0,     0,     0,   204,   205,   206,     0,   208,     0,   209,
       0,   666,   211,     0,   212,   213,   214,   215,   216,   217,
       0,   219,   220,   221,   222,     0,   223,   224,   225,   226,
     227,   228,     0,   229,     0,   667,   232,   233,   234,   235,
     668,   669,     0,   670,     0,   239,     0,     0,   242,     0,
     244,   245,   246,   247,   248,     0,     0,   249,     0,   251,
       0,     0,   253,   254,   255,     0,     0,   256,   257,   258,
     259,   260,   671,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   672,     0,   673,   283,   284,   285,   674,     0,   287,
     288,     0,   290,     0,   675,   292,   676,   294,   295,   296,
       0,   297,   298,  1079,     0,   299,   300,   301,     0,     0,
     302,   677,     0,   305,     0,   678,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,     0,   318,   319,   679,
     321,   322,   680,   324,   325,   326,     0,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   681,   337,   338,   339,
     340,     0,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,     0,   353,   354,     0,   356,   357,
     358,   682,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,     0,   371,   372,   373,   374,   375,     0,
     376,   683,   378,   379,   380,     0,   382,   383,   684,   385,
       0,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   685,   398,   686,     0,   400,   401,     0,   402,
       0,   404,   405,   406,   407,   408,     0,   687,   688,     0,
       0,   411,   412,   689,   414,   690,  1080,   416,   417,   691,
     419,   420,   421,   422,   423,     0,     0,   424,   425,   426,
     427,   428,     0,     0,   429,   430,   431,   432,   433,  1026,
     693,     0,   436,     0,   438,   439,   440,   441,     0,     0,
     442,     0,     0,   443,   444,   445,   446,   447,   448,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     460,   461,   462,   463,   653,  1077,   535,     0,     0,     0,
     727,  1081,  1082,     0,     0,     0,     0,     0,     0,     0,
      90,    91,    92,    93,    94,    95,    96,    97,     0,    98,
      99,   100,     0,     0,     0,     0,     0,     0,     0,   101,
     102,     0,   103,   104,   105,     0,   107,   108,   109,   654,
     655,     0,   656,   657,     0,   115,   116,   117,   118,   119,
     120,     0,     0,   121,   122,   658,   659,   125,     0,   126,
     127,   128,   129,   660,     0,     0,     0,   132,   133,   134,
     135,   136,     0,   138,   139,   140,     0,   141,   142,   143,
     144,   145,   146,     0,     0,   148,   149,   150,     0,     0,
       0,     0,     0,     0,     0,   152,   153,   154,   155,   156,
     157,   158,   661,   662,   161,  1284,   162,     0,   163,   164,
     165,   166,   167,   168,     0,   169,   170,   171,   172,   173,
       0,     0,   174,   175,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,     0,   185,   186,   187,   188,
     663,   190,   191,   192,   193,   664,  1078,   195,     0,   196,
     197,   665,   199,     0,   200,     0,   201,     0,     0,     0,
     204,   205,   206,     0,   208,     0,   209,     0,   666,   211,
       0,   212,   213,   214,   215,   216,   217,     0,   219,   220,
     221,   222,     0,   223,   224,   225,   226,   227,   228,     0,
     229,     0,   667,   232,   233,   234,   235,   668,   669,     0,
     670,     0,   239,     0,     0,   242,     0,   244,   245,   246,
     247,   248,     0,     0,   249,     0,   251,     0,     0,   253,
     254,   255,     0,     0,   256,   257,   258,   259,   260,   671,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   672,     0,
     673,   283,   284,   285,   674,     0,   287,   288,     0,   290,
       0,   675,   292,   676,   294,   295,   296,     0,   297,   298,
    1079,     0,   299,   300,   301,     0,     0,   302,   677,     0,
     305,     0,   678,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,     0,   318,   319,   679,   321,   322,   680,
     324,   325,   326,     0,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   681,   337,   338,   339,   340,     0,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,     0,   353,   354,     0,   356,   357,   358,   682,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
       0,   371,   372,   373,   374,   375,     0,   376,   683,   378,
     379,   380,     0,   382,   383,   684,   385,     0,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   685,
     398,   686,     0,   400,   401,     0,   402,     0,   404,   405,
     406,   407,   408,     0,   687,   688,     0,     0,   411,   412,
     689,   414,   690,  1080,   416,   417,   691,   419,   420,   421,
     422,   423,     0,     0,   424,   425,   426,   427,   428,     0,
       0,   429,   430,   431,   432,   433,  1026,   693,     0,   436,
       0,   438,   439,   440,   441,     0,     0,   442,     0,     0,
     443,   444,   445,   446,   447,   448,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   460,   461,   462,
     463,   653,  1077,   535,     0,     0,     0,   727,  1081,  1082,
       0,     0,     0,     0,     0,     0,     0,    90,    91,    92,
      93,    94,    95,    96,    97,     0,    98,    99,   100,     0,
       0,     0,     0,     0,     0,     0,   101,   102,     0,   103,
     104,   105,     0,   107,   108,   109,   654,   655,     0,   656,
     657,     0,   115,   116,   117,   118,   119,   120,     0,     0,
     121,   122,   658,   659,   125,     0,   126,   127,   128,   129,
     660,     0,     0,     0,   132,   133,   134,   135,   136,     0,
     138,   139,   140,     0,   141,   142,   143,   144,   145,   146,
       0,     0,   148,   149,   150,     0,     0,     0,     0,     0,
       0,     0,   152,   153,   154,   155,   156,   157,   158,   661,
     662,   161,     0,   162,     0,   163,   164,   165,   166,   167,
     168,     0,   169,   170,   171,   172,   173,     0,     0,   174,
     175,   176,   177,   178,     0,   179,   180,   181,     0,   182,
     183,   184,     0,   185,   186,   187,   188,   663,   190,   191,
     192,   193,   664,  1078,   195,     0,   196,   197,   665,   199,
       0,   200,     0,   201,     0,     0,     0,   204,   205,   206,
       0,   208,     0,   209,     0,   666,   211,     0,   212,   213,
     214,   215,   216,   217,     0,   219,   220,   221,   222,     0,
     223,   224,   225,   226,   227,   228,     0,   229,     0,   667,
     232,   233,   234,   235,   668,   669,     0,   670,     0,   239,
       0,     0,   242,     0,   244,   245,   246,   247,   248,     0,
       0,   249,     0,   251,     0,     0,   253,   254,   255,     0,
       0,   256,   257,   258,   259,   260,   671,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   672,     0,   673,   283,   284,
     285,   674,     0,   287,   288,     0,   290,     0,   675,   292,
     676,   294,   295,   296,     0,   297,   298,  1079,     0,   299,
     300,   301,     0,     0,   302,   677,     0,   305,     0,   678,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
       0,   318,   319,   679,   321,   322,   680,   324,   325,   326,
       0,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     681,   337,   338,   339,   340,     0,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,     0,   353,
     354,     0,   356,   357,   358,   682,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,     0,   371,   372,
     373,   374,   375,     0,   376,   683,   378,   379,   380,     0,
     382,   383,   684,   385,     0,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   685,   398,   686,     0,
     400,   401,     0,   402,     0,   404,   405,   406,   407,   408,
       0,   687,   688,     0,     0,   411,   412,   689,   414,   690,
    1080,   416,   417,   691,   419,   420,   421,   422,   423,     0,
       0,   424,   425,   426,   427,   428,     0,     0,   429,   430,
     431,   432,   433,  1026,   693,     0,   436,     0,   438,   439,
     440,   441,     0,     0,   442,     0,     0,   443,   444,   445,
     446,   447,   448,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   460,   461,   462,   463,     0,  1226,
       0,     0,  1227,     0,     0,  1081,  1082,  1228,  1229,  1230,
       0,     0,     0,     0,     0,     0,     0,  1226,     0,     0,
    1227,     0,     0,     0,  1231,  1228,  1229,  1230,  1682,     0,
       0,     0,  1233,     0,     0,  1226,     0,     0,  1227,  1234,
       0,     0,  1231,  1228,  1229,  1230,     0,     0,     0,     0,
    1233,     0,     0,     0,     0,     0,     0,  1234,     0,     0,
    1231,     0,     0,  1226,  1235,     0,  1227,     0,  1233,     0,
       0,  1228,  1229,  1230,     0,  1234,     0,     0,     0,     0,
       0,     0,  1235,     0,     0,     0,     0,     0,  1231,     0,
       0,  1856,     0,     0,     0,     0,  1233,     0,     0,  1226,
    1235,     0,  1227,  1234,     0,     0,     0,  1228,  1229,  1230,
       0,     0,     0,     0,  1683,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1231,     0,     0,     0,  1235,     0,
       0,     0,  1233,     0,     0,     0,     0,     0,     0,  1234,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1236,  1235,     0,     0,     0,     0,     0,
       0,  1896,     0,     0,     0,     0,  1897,  1237,     0,     0,
       0,  1236,  1238,  1226,     0,     0,  1227,     0,  2802,     0,
       0,  1228,  1229,  1230,     0,  1237,     0,     0,     0,  1236,
    1238,     0,     0,  1239,  1240,     0,     0,     0,  1231,     0,
       0,  1905,     0,  1237,     0,     0,  1233,  1241,  1238,     0,
       0,  1239,  1240,  1234,     0,     0,     0,  1236,     0,     0,
       0,     0,     0,     0,     0,  1241,     0,     0,     0,  1239,
    1240,  1237,     0,     0,     0,     0,  1238,     0,  1235,     0,
       0,     0,     0,  1241,     0,  1242,     0,     0,  1243,     0,
       0,     0,     0,  1236,     0,     0,     0,  1239,  1240,     0,
       0,     0,  1244,  1242,     0,  1245,  1243,  1237,     0,     0,
       0,  1241,  1238,     0,     0,     0,     0,     0,     0,     0,
    1244,  1242,     0,  1245,  1243,     0,     0,     0,     0,     0,
       0,     0,     0,  1239,  1240,     0,     0,     0,  1244,     0,
       0,  1245,     0,     0,     0,     0,     0,  1241,     0,  1242,
       0,     0,  1243,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2803,     0,  1244,     0,     0,  1245,
       0,     0,     0,     0,     0,     0,     0,  1236,     0,     0,
       0,     0,     0,     0,     0,  1242,     0,     0,  1243,     0,
       0,  1237,  1246,     0,     0,     0,  1238,     0,     0,     0,
       0,     0,  1244,     0,     0,  1245,     0,     0,     0,     0,
    1246,     0,     0,     0,     0,     0,     0,  1239,  1240,     0,
       0,     0,     0,  1870,     0,     0,     0,     0,  1246,     0,
       0,  1241,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1226,     0,     0,  1227,     0,
    1684,     0,     0,  1228,  1229,  1230,  1246,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1242,
    1231,     0,  1243,     0,     0,     0,     0,     0,  1233,     0,
       0,     0,     0,     0,     0,  1234,  1244,     0,     0,  1245,
       0,  1247,  1246,     0,  1248,  1249,  1250,     0,  1251,  1252,
    1253,  1254,  1255,  1256,     0,     0,     0,     0,     0,  1247,
    1235,     0,  1248,  1249,  1250,     0,  1251,  1252,  1253,  1254,
    1255,  1256,     0,     0,     0,     0,     0,  1247,     0,     0,
    1248,  1249,  1250,     0,  1251,  1252,  1253,  1254,  1255,  1256,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1247,     0,     0,  1248,  1249,
    1250,     0,  1251,  1252,  1253,  1254,  1255,  1256,     0,     0,
       0,     0,     0,     0,     0,     0,  1246,     0,     0,     0,
    1226,     0,     0,  1227,     0,     0,     0,     0,  1228,  1229,
    1230,  1247,     0,     0,  1248,  1249,  1250,     0,  1251,  1252,
    1253,  1254,  1255,  1256,  1910,  1231,     0,     0,  1912,  1236,
       0,     0,     0,  1233,     0,     0,     0,     0,     0,     0,
    1234,     0,     0,  1237,     0,     0,  1226,     0,  1238,  1227,
       0,     0,     0,     0,  1228,  1229,  1230,     0,     0,     0,
       0,     0,     0,     0,     0,  1235,     0,     0,     0,  1239,
    1240,  1231,     0,     0,     0,     0,     0,     0,     0,  1233,
       0,     0,     0,  1241,     0,     0,  1234,     0,     0,     0,
       0,     0,     0,     0,     0,  1247,     0,     0,  1248,  1249,
    1250,     0,  1251,  1252,  1253,  1254,  1255,  1256,     0,     0,
       0,  1235,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1242,     0,     0,  1243,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1226,  1244,     0,
    1227,  1245,     0,     0,     0,  1228,  1229,  1230,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1231,     0,  1236,     0,     0,     0,     0,     0,
    1233,     0,     0,     0,     0,     0,  1226,  1234,  1237,  1227,
       0,     0,     0,  1238,  1228,  1229,  1230,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1231,  1235,     0,  1239,  1240,     0,     0,     0,  1233,
    1236,     0,     0,     0,     0,     0,  1234,     0,  1241,     0,
       0,     0,     0,     0,  1237,     0,     0,     0,  1246,  1238,
       0,     0,     0,     0,  1226,     0,     0,  1227,     0,     0,
       0,  1235,  1228,  1229,  1230,     0,     0,     0,     0,     0,
    1239,  1240,     0,     0,     0,     0,  1242,     0,     0,  1243,
       0,     0,     0,     0,  1241,     0,     0,  1233,     0,     0,
       0,     0,     0,  1244,  1234,     0,  1245,     0,     0,     0,
       0,  1226,     0,     0,  1227,     0,     0,     0,     0,  1228,
    1229,  1230,     0,     0,     0,     0,     0,     0,     0,  1235,
       0,  1236,  1242,     0,     0,  1243,     0,     0,     0,     0,
       0,     0,     0,     0,  1233,  1237,     0,     0,     0,  1244,
    1238,  1234,  1245,     0,     0,     0,     0,  1247,     0,     0,
    1248,  1249,  1250,     0,  1251,  1252,  1253,  1254,  1255,  1256,
    1236,  1239,  1240,     0,     0,     0,  1235,     0,     0,     0,
       0,     0,     0,     0,  1237,  1241,     0,     0,     0,  1238,
       0,     0,     0,  1246,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1239,  1240,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1242,  1241,     0,  1243,     0,  1236,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1246,
    1244,     0,  1237,  1245,     0,     0,     0,  1238,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1242,     0,     0,  1243,     0,     0,  1239,  1240,
    2122,     0,     0,     0,     0,  1236,     0,     0,     0,  1244,
       0,     0,  1241,     0,     0,     0,     0,     0,     0,  1237,
       0,     0,  1247,     0,  1238,  1248,  1249,  1250,     0,  1251,
    1252,  1253,  1254,  1255,  1256,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0, -1665, -1665,     0,     0,     0,
    1242,     0,     0,  1243,     0,     0,     0,     0,     0,  1241,
    1246,     0,     0,     0,     0,     0,     0,  1244,  1247,     0,
       0,  1248,  1249,  1250,     0,  1251,  1252,  1253,  1254,  1255,
    1256,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1246,
   -1665,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1244,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1246,     0,  1247,
       0,     0,  1248,  1249,  1250,     0,  1251,  1252,  1253,  1254,
    1255,  1256,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1247,     0,
       0,  1248,  1249,  1250,  1246,  1251,  1252,  1253,  1254,  1255,
    1256,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1247,     0,     0,  1248,
    1249,  1250,     0,  1251,  1252,  1253,  1254,  1255,  1256,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     953,     0,  1591,  1247,     0,     0,  1248,  1249,  1250,     0,
    1251,  1252,  1253,  1254,  1255,  1256,    90,    91,    92,    93,
      94,    95,    96,    97,   954,    98,    99,   100,   955,   956,
     957,   958,   959,   960,   961,   101,   102,   962,   103,   104,
     105,     0,   107,   108,   109,   654,   655,     0,   656,   657,
     963,   115,   116,   117,   118,   119,   120,   964,   965,   121,
     122,   658,   659,   125,   966,   126,   127,   128,   129,   660,
     967,     0,   968,   132,   133,   134,   135,   136,     0,   138,
     139,   140,   969,   141,   142,   143,   144,   145,   146,   970,
       0,   148,   149,   150,   971,   972,   973,     0,   974,   975,
     976,   152,   153,   154,   155,   156,   157,   158,   661,   662,
     161,   977,   162,   978,   163,   164,   165,   166,   167,   168,
     979,   169,   170,   171,   172,   173,   980,   981,   174,   175,
     176,   177,   178,   982,   179,   180,   181,   983,   182,   183,
     184,   984,   185,   186,   187,   188,   663,   190,   191,   192,
     193,   664,   985,   195,   986,   196,   197,   665,   199,   987,
     200,   988,   201,     0,   989,     0,   204,   205,   206,     0,
     208,   990,   209,   991,   666,   211,   992,   212,   213,   214,
     215,   216,   217,     0,   219,   220,   221,   222,   993,   223,
     224,   225,   226,   227,   228,   994,   229,     0,   667,   232,
     233,   234,   235,   668,   669,   995,   670,   996,   239,     0,
       0,   242,     0,   244,   245,   246,   247,   248,   997,   998,
     249,     0,   251,     0,   999,   253,   254,   255,  1000,  1001,
     256,   257,   258,   259,   260,   671,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   672,     0,   673,   283,   284,   285,
     674,  1002,   287,   288,     0,   290,  1003,   675,   292,   676,
     294,   295,   296,  1004,   297,   298,  1005,  1006,   299,   300,
     301,  1007,  1008,   302,   677,     0,   305,     0,   678,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,  1009,
     318,   319,   679,   321,   322,   680,   324,   325,   326,  1010,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   681,
     337,   338,   339,   340,  1011,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,  1012,   353,   354,
       0,   356,   357,   358,   682,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,  1013,   371,   372,   373,
     374,   375,  1014,   376,   683,   378,   379,   380,     0,   382,
     383,   684,   385,  1015,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   685,   398,   686,  1016,   400,
     401,  1017,   402,     0,   404,   405,   406,   407,   408,  1018,
     687,   688,  1019,  1020,   411,   412,   689,   414,   690,  1021,
     416,   417,   691,   419,   420,   421,   422,   423,  1022,  1023,
     424,   425,   426,   427,   428,  1024,  1025,   429,   430,   431,
     432,   433,  1026,   693,  1027,   436,     0,   438,   439,   440,
     441,  1028,  1029,   442,  1030,  1031,   443,   444,   445,   446,
     447,   448,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   460,   461,   462,   463,   953,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    90,    91,    92,    93,    94,    95,    96,
      97,   954,    98,    99,   100,   955,   956,   957,   958,   959,
     960,   961,   101,   102,   962,   103,   104,   105,     0,   107,
     108,   109,   654,   655,     0,   656,   657,   963,   115,   116,
     117,   118,   119,   120,   964,   965,   121,   122,   658,   659,
     125,   966,   126,   127,   128,   129,   660,   967,     0,   968,
     132,   133,   134,   135,   136,     0,   138,   139,   140,   969,
     141,   142,   143,   144,   145,   146,   970,     0,   148,   149,
     150,   971,   972,   973,     0,   974,   975,   976,   152,   153,
     154,   155,   156,   157,   158,   661,   662,   161,   977,   162,
     978,   163,   164,   165,   166,   167,   168,   979,   169,   170,
     171,   172,   173,   980,   981,   174,   175,   176,   177,   178,
     982,   179,   180,   181,   983,   182,   183,   184,   984,   185,
     186,   187,   188,   663,   190,   191,   192,   193,   664,   985,
     195,   986,   196,   197,   665,   199,   987,   200,   988,   201,
       0,   989,     0,   204,   205,   206,     0,   208,   990,   209,
     991,   666,   211,   992,   212,   213,   214,   215,   216,   217,
       0,   219,   220,   221,   222,   993,   223,   224,   225,   226,
     227,   228,   994,   229,     0,   667,   232,   233,   234,   235,
     668,   669,   995,   670,   996,   239,     0,     0,   242,     0,
     244,   245,   246,   247,   248,   997,   998,   249,     0,   251,
       0,   999,   253,   254,   255,  1000,  1001,   256,   257,   258,
     259,   260,   671,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   672,     0,   673,   283,   284,   285,   674,  1002,   287,
     288,     0,   290,  1003,   675,   292,   676,   294,   295,   296,
    1004,   297,   298,  1005,  1006,   299,   300,   301,  1007,  1008,
     302,   677,     0,   305,     0,   678,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,  1009,   318,   319,   679,
     321,   322,   680,   324,   325,   326,  1010,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   681,   337,   338,   339,
     340,  1011,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,  1012,   353,   354,     0,   356,   357,
     358,   682,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,  1013,   371,   372,   373,   374,   375,  1014,
     376,   683,   378,   379,   380,     0,   382,   383,   684,   385,
    1015,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   685,   398,   686,  1016,   400,   401,  1017,   402,
       0,   404,   405,   406,   407,   408,  1018,   687,   688,  1019,
    1020,   411,   412,   689,   414,   690,  1021,   416,   417,   691,
     419,   420,   421,   422,   423,  1022,  1023,   424,   425,   426,
     427,   428,  1024,  1025,   429,   430,   431,   432,   433,  1026,
     693,  1027,   436,     0,   438,   439,   440,   441,  1028,  1029,
     442,  1030,  1031,   443,   444,   445,   446,   447,   448,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     460,   461,   462,   463,   953,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      90,    91,    92,    93,  1731,    95,    96,    97,   954,    98,
      99,   100,   955,   956,   957,   958,   959,   960,   961,   101,
     102,   962,   103,   104,   105,     0,   107,   108,   109,   654,
     655,     0,   656,   657,   963,   115,   116,   117,   118,   119,
     120,   964,   965,   121,   122,   658,   659,   125,   966,   126,
     127,   128,   129,   660,   967,     0,   968,   132,   133,   134,
     135,   136,     0,   138,   139,   140,   969,   141,   142,   143,
     144,   145,   146,   970,     0,   148,   149,   150,   971,   972,
     973,     0,   974,   975,   976,   152,   153,   154,   155,   156,
     157,   158,   661,   662,   161,   977,   162,   978,   163,   164,
     165,   166,   167,   168,   979,   169,   170,   171,   172,   173,
     980,   981,   174,   175,   176,  1732,   178,   982,   179,   180,
     181,   983,   182,   183,   184,   984,   185,   186,   187,   188,
     663,   190,   191,   192,   193,   664,   985,   195,   986,   196,
     197,   665,   199,   987,   200,   988,   201,     0,   989,     0,
     204,   205,   206,     0,   208,   990,   209,   991,   666,   211,
     992,   212,   213,   214,   215,   216,   217,     0,   219,   220,
     221,   222,   993,   223,   224,   225,   226,   227,   228,   994,
     229,     0,   667,   232,   233,   234,   235,   668,   669,   995,
     670,   996,   239,     0,     0,   242,     0,   244,   245,   246,
     247,   248,   997,   998,   249,     0,   251,     0,   999,   253,
     254,   255,  1000,  1001,   256,   257,   258,   259,   260,   671,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   672,     0,
     673,   283,   284,   285,   674,  1002,   287,   288,     0,   290,
    1003,   675,   292,   676,   294,   295,   296,  1004,   297,   298,
    1005,  1006,   299,   300,   301,  1007,  1008,   302,   677,     0,
     305,     0,   678,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,  1009,   318,   319,   679,   321,   322,   680,
     324,   325,   326,  1010,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   681,   337,   338,   339,   340,  1011,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,  1012,   353,   354,     0,   356,   357,   358,   682,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
    1013,   371,   372,   373,   374,   375,  1014,  1733,   683,   378,
     379,   380,     0,   382,   383,   684,   385,  1015,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   685,
     398,   686,  1016,   400,   401,  1017,   402,     0,   404,   405,
     406,   407,   408,  1018,   687,   688,  1019,  1020,   411,   412,
     689,   414,   690,  1021,   416,   417,   691,   419,   420,   421,
     422,   423,  1022,  1023,   424,   425,   426,   427,   428,  1024,
    1025,   429,   430,   431,   432,   433,  1026,   693,  1027,   436,
       0,   438,   439,   440,   441,  1028,  1029,   442,  1030,  1031,
     443,   444,   445,   446,   447,   448,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   460,   461,   462,
     463,    89,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    90,    91,    92,
      93,    94,    95,    96,    97,     0,    98,    99,   100,     0,
       0,     0,     0,     0,     0,     0,   101,   102,     0,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,     0,   115,   116,   117,   118,   119,   120,     0,   733,
     121,   122,   123,   124,   125,     0,   126,   127,   128,   129,
     736,     0,   737,     0,   132,   133,   134,   135,   136,   137,
     138,   139,   140,     0,   141,   142,   143,   144,   145,   146,
       0,   147,   148,   149,   150,   738,   739,   740,   741,   742,
     743,   744,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   161,     0,   162,     0,   163,   164,   165,   166,   167,
     168,     0,   169,   170,   171,   172,   173,     0,     0,   174,
     175,   176,   177,   178,     0,   179,   180,   181,     0,   182,
     183,   184,     0,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   750,     0,   195,     0,   196,   197,   198,   199,
       0,   200,     0,   201,   202,     0,   203,   204,   205,   206,
     207,   208,     0,   209,     0,   210,   211,     0,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,     0,
     223,   224,   225,   226,   227,   228,     0,   229,   230,   231,
     232,   233,   234,   235,   236,   237,     0,   238,     0,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,     0,
       0,   249,   250,   251,   252,     0,   253,   254,   255,   756,
     757,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,     0,   287,   288,   289,   290,     0,   762,   292,
     293,   294,   295,   296,     0,   297,   298,     0,     0,   299,
     300,   301,     0,     0,   302,   303,   304,   305,   306,   765,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
       0,   318,   319,   766,   321,   322,   323,   324,   325,   326,
       0,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,     0,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,     0,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,     0,   371,   372,
     373,   374,   375,   769,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,     0,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   771,     0,
     400,   401,     0,   402,   403,   404,   405,   406,   407,   408,
       0,   409,   410,     0,     0,   411,   412,   774,   414,   775,
       0,   416,   417,   777,   419,   420,   421,   422,   423,     0,
       0,   424,   425,   426,   427,   428,   778,     0,   429,   430,
     431,   432,   433,   434,   435,     0,   436,   437,   438,   439,
     440,   441,     0,     0,   442,     0,     0,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,    89,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    90,    91,    92,    93,    94,    95,
      96,    97,     0,    98,    99,   100,     0,     0,     0,     0,
       0,     0,     0,   101,   102,     0,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,     0,   115,
     116,   117,   118,   119,   120,     0,     0,   121,   122,   123,
     124,   125,     0,   126,   127,   128,   129,   130,     0,   131,
       0,   132,   133,   134,   135,   136,   137,   138,   139,   140,
       0,   141,   142,   143,   144,   145,   146,     0,   147,   148,
     149,   150,     0,     0,     0,   151,     0,     0,     0,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   161,     0,
     162,     0,   163,   164,   165,   166,   167,   168,     0,   169,
     170,   171,   172,   173,     0,     0,   174,   175,   176,   177,
     178,     0,   179,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
       0,   195,     0,   196,   197,   198,   199,     0,   200,     0,
     201,   202,     0,   203,   204,   205,   206,   207,   208,     0,
     209,     0,   210,   211,     0,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,   222,     0,   223,   224,   225,
     226,   227,   228,     0,   229,   230,   231,   232,   233,   234,
     235,   236,   237,     0,   238,     0,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,     0,     0,   249,   250,
     251,   252,     0,   253,   254,   255,     0,     0,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,     0,
     287,   288,   289,   290,     0,   291,   292,   293,   294,   295,
     296,     0,   297,   298,     0,     0,   299,   300,   301,     0,
       0,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,     0,   318,   319,
     320,   321,   322,   323,   324,   325,   326,     0,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,     0,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,     0,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,     0,   371,   372,   373,   374,   375,
       0,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,     0,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,     0,   400,   401,     0,
     402,   403,   404,   405,   406,   407,   408,     0,   409,   410,
       0,     0,   411,   412,   413,   414,   415,     0,   416,   417,
     418,   419,   420,   421,   422,   423,     0,     0,   424,   425,
     426,   427,   428,     0,     0,   429,   430,   431,   432,   433,
     434,   435,     0,   436,   437,   438,   439,   440,   441,     0,
       0,   442,     0,     0,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   488,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    90,    91,    92,    93,    94,    95,    96,    97,     0,
      98,    99,   100,     0,     0,     0,     0,     0,     0,     0,
     101,   102,     0,   103,   104,   105,     0,   107,   108,   109,
     110,   111,     0,   113,   114,     0,   115,   116,   117,   118,
     119,   120,     0,     0,   121,   122,   123,   124,   125,  1340,
     126,   127,   128,   129,   130,     0,     0,  1341,   132,   133,
     134,   135,   136,     0,   138,   139,   140,  1342,   141,   142,
     143,   144,   145,   146,     0,     0,   148,   149,   150,     0,
       0,     0,     0,     0,     0,     0,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   161,     0,   162,     0,   163,
     164,   165,   166,   167,   168,     0,   169,   170,   171,   172,
     173,     0,     0,   174,   175,   176,   177,   178,     0,   179,
     180,   181,     0,   182,   183,   184,     0,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,     0,   195,     0,
     196,   197,   198,   199,     0,   200,  1343,   201,     0,     0,
       0,   204,   205,   206,     0,   208,     0,   209,     0,   210,
     211,     0,   212,   213,   214,   215,   216,  1344,     0,   219,
     220,   221,   222,     0,   223,   224,   225,   226,   227,   228,
       0,   229,     0,   231,   232,   233,   234,   235,   236,   237,
       0,   238,     0,   239,     0,     0,   242,     0,   244,   245,
     246,   247,   248,     0,     0,   249,     0,   251,     0,     0,
     253,   254,   255,     0,     0,   256,   257,   258,   259,   260,
     490,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
       0,   282,   283,   284,   285,   286,     0,   287,   288,     0,
     290,     0,   291,   292,   293,   294,   295,   296,     0,   297,
     298,     0,     0,   299,   300,   301,     0,     0,   302,   303,
       0,   305,     0,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,     0,   318,   319,   320,   321,   322,
     323,   324,   325,   326,  1345,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,     0,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,     0,   353,   354,     0,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,     0,   371,   372,   373,   374,   375,     0,   376,   377,
     378,   379,   380,     0,   382,   383,   384,   385,     0,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     492,   398,   399,     0,   400,   401,     0,   402,     0,   404,
     405,   406,   407,   408,     0,   409,   410,     0,     0,   411,
     412,   413,   414,   415,     0,   416,   417,   418,   419,   420,
     421,   422,   423,     0,  1346,   424,   425,   426,   427,   428,
       0,     0,   429,   430,   431,   432,   433,   434,   435,     0,
     436,     0,   438,   439,   440,   441,     0,     0,   442,     0,
       0,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   488,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    90,    91,
      92,    93,    94,    95,    96,    97,     0,    98,    99,   100,
       0,     0,     0,     0,     0,     0,     0,   101,   102,     0,
     103,   104,   105,     0,   107,   108,   109,   110,   111,     0,
     113,   114,     0,   115,   116,   117,   118,   119,   120,     0,
       0,   121,   122,   123,   124,   125,  1340,   126,   127,   128,
     129,   130,     0,     0,     0,   132,   133,   134,   135,   136,
       0,   138,   139,   140,  1342,   141,   142,   143,   144,   145,
     146,     0,     0,   148,   149,   150,     0,     0,     0,     0,
       0,     0,     0,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   161,     0,   162,     0,   163,   164,   165,   166,
     167,   168,     0,   169,   170,   171,   172,   173,     0,     0,
     174,   175,   176,   177,   178,     0,   179,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   194,     0,   195,     0,   196,   197,   198,
     199,     0,   200,  1343,   201,     0,     0,     0,   204,   205,
     206,     0,   208,     0,   209,     0,   210,   211,     0,   212,
     213,   214,   215,   216,   217,     0,   219,   220,   221,   222,
       0,   223,   224,   225,   226,   227,   228,     0,   229,     0,
     231,   232,   233,   234,   235,   236,   237,     0,   238,     0,
     239,     0,     0,   242,     0,   244,   245,   246,   247,   248,
       0,     0,   249,     0,   251,  1794,     0,   253,   254,   255,
       0,     0,   256,   257,   258,   259,   260,   490,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,     0,   282,   283,
     284,   285,   286,     0,   287,   288,     0,   290,     0,   291,
     292,   293,   294,   295,   296,     0,   297,   298,     0,     0,
     299,   300,   301,     0,     0,   302,   303,     0,   305,     0,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,     0,   318,   319,   320,   321,   322,   323,   324,   325,
     326,  1345,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,     0,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,     0,
     353,   354,     0,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,     0,   371,
     372,   373,   374,   375,     0,   376,   377,   378,   379,   380,
       0,   382,   383,   384,   385,     0,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   492,   398,   399,
       0,   400,   401,     0,   402,     0,   404,   405,   406,   407,
     408,     0,   409,   410,     0,     0,   411,   412,   413,   414,
     415,     0,   416,   417,   418,   419,   420,   421,   422,   423,
       0,  1346,   424,   425,   426,   427,   428,     0,     0,   429,
     430,   431,   432,   433,   434,   435,     0,   436,     0,   438,
     439,   440,   441,     0,     0,   442,     0,     0,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   653,
       0,   535,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    90,    91,    92,    93,    94,
      95,    96,    97,     0,    98,    99,   100,     0,     0,     0,
       0,     0,     0,     0,   101,   102,     0,   103,   104,   105,
       0,   107,   108,   109,   654,   655,     0,   656,   657,     0,
     115,   116,   117,   118,   119,   120,     0,     0,   121,   122,
     658,   659,   125,     0,   126,   127,   128,   129,   660,     0,
       0,     0,   132,   133,   134,   135,   136,     0,   138,   139,
     140,     0,   141,   142,   143,   144,   145,   146,     0,     0,
     148,   149,   150,     0,     0,     0,     0,     0,     0,     0,
     152,   153,   154,   155,   156,   157,   158,   661,   662,   161,
       0,   162,     0,   163,   164,   165,   166,   167,   168,     0,
     169,   170,   171,   172,   173,     0,     0,   174,   175,   176,
     177,   178,     0,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,   188,   663,   190,   191,   192,   193,
     664,  1078,   195,     0,   196,   197,   665,   199,     0,   200,
       0,   201,     0,     0,     0,   204,   205,   206,     0,   208,
       0,   209,     0,   666,   211,     0,   212,   213,   214,   215,
     216,   217,     0,   219,   220,   221,   222,     0,   223,   224,
     225,   226,   227,   228,     0,   229,     0,   667,   232,   233,
     234,   235,   668,   669,     0,   670,     0,   239,     0,     0,
     242,     0,   244,   245,   246,   247,   248,     0,     0,   249,
       0,   251,     0,     0,   253,   254,   255,     0,     0,   256,
     257,   258,   259,   260,   671,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   672,     0,   673,   283,   284,   285,   674,
       0,   287,   288,     0,   290,     0,   675,   292,   676,   294,
     295,   296,     0,   297,   298,  1079,     0,   299,   300,   301,
       0,     0,   302,   677,     0,   305,     0,   678,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,     0,   318,
     319,   679,   321,   322,   680,   324,   325,   326,     0,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   681,   337,
     338,   339,   340,     0,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,     0,   353,   354,     0,
     356,   357,   358,   682,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,     0,   371,   372,   373,   374,
     375,     0,   376,   683,   378,   379,   380,     0,   382,   383,
     684,   385,     0,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   685,   398,   686,     0,   400,   401,
       0,   402,     0,   404,   405,   406,   407,   408,     0,   687,
     688,     0,     0,   411,   412,   689,   414,   690,  1080,   416,
     417,   691,   419,   420,   421,   422,   423,     0,     0,   424,
     425,   426,   427,   428,     0,     0,   429,   430,   431,   432,
     433,  1026,   693,     0,   436,     0,   438,   439,   440,   441,
       0,     0,   442,     0,     0,   443,   444,   445,   446,   447,
     448,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   460,   461,   462,   463,   653,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    90,    91,    92,    93,    94,    95,    96,    97,
       0,    98,    99,   100,     3,     4,     0,     0,     0,     0,
       0,   101,   102,     0,   103,   104,   105,     0,   107,   108,
     109,   654,   655,     0,   656,   657,     0,   115,   116,   117,
     118,   119,   120,     0,     0,   121,   122,   658,   659,   125,
       0,   126,   127,   128,   129,   660,     0,     0,     0,   132,
     133,   134,   135,   136,     0,   138,   139,   140,     0,   141,
     142,   143,   144,   145,   146,     0,     0,   148,   149,   150,
       0,     0,     0,     0,     0,     0,     0,   152,   153,   154,
     155,   156,   157,   158,   661,   662,   161,     0,   162,     0,
     163,   164,   165,   166,   167,   168,     0,   169,   170,   171,
     172,   173,     0,     0,   174,   175,   176,   177,   178,     0,
     179,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,   188,   663,   190,   191,   192,   193,   664,     0,   195,
       0,   196,   197,   665,   199,     0,   200,     0,   201,     0,
       0,     0,   204,   205,   206,     0,   208,     0,   209,     0,
     666,   211,     0,   212,   213,   214,   215,   216,   217,     0,
     219,   220,   221,   222,     0,   223,   224,   225,   226,   227,
     228,     0,   229,     0,   667,   232,   233,   234,   235,   668,
     669,     0,   670,     0,   239,     0,     0,   242,     0,   244,
     245,   246,   247,   248,     0,     0,   249,     0,   251,     0,
       0,   253,   254,   255,     0,     0,   256,   257,   258,   259,
     260,   671,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     672,     0,   673,   283,   284,   285,   674,     0,   287,   288,
       0,   290,     0,   675,   292,   676,   294,   295,   296,     0,
     297,   298,     0,     0,   299,   300,   301,     0,     0,   302,
     677,     0,   305,     0,   678,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,     0,   318,   319,   679,   321,
     322,   680,   324,   325,   326,     0,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   681,   337,   338,   339,   340,
       0,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,     0,   353,   354,     0,   356,   357,   358,
     682,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,     0,   371,   372,   373,   374,   375,     0,   376,
     683,   378,   379,   380,     0,   382,   383,   684,   385,     0,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   685,   398,   686,     0,   400,   401,     0,   402,     0,
     404,   405,   406,   407,   408,     0,   687,   688,     0,     0,
     411,   412,   689,   414,   690,     0,   416,   417,   691,   419,
     420,   421,   422,   423,     0,     0,   424,   425,   426,   427,
     428,     0,     0,   429,   430,   431,   432,   433,  1026,   693,
       0,   436,     0,   438,   439,   440,   441,     0,     0,   442,
       0,     0,   443,   444,   445,   446,   447,   448,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   460,
     461,   462,   463,   488,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    90,
      91,    92,    93,    94,    95,    96,    97,     0,    98,    99,
     100,     3,     4,     0,     0,     0,     0,     0,   101,   102,
       0,   103,   104,   105,     0,   107,   108,   109,   110,   111,
       0,   113,   114,     0,   115,   116,   117,   118,   119,   120,
       0,     0,   121,   122,   123,   124,   125,     0,   126,   127,
     128,   129,   130,     0,     0,     0,   132,   133,   134,   135,
     136,     0,   138,   139,   140,     0,   141,   142,   143,   144,
     145,   146,     0,     0,   148,   149,   150,     0,     0,     0,
       0,     0,     0,     0,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   161,     0,   162,     0,   163,   164,   165,
     166,   167,   168,     0,   169,   170,   171,   172,   173,     0,
       0,   174,   175,   176,   177,   178,     0,   179,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,     0,   195,     0,   196,   197,
     198,   199,     0,   200,     0,   201,     0,     0,     0,   204,
     205,   206,     0,   208,     0,   209,     0,   210,   211,     0,
     212,   213,   214,   215,   216,   217,     0,   219,   220,   221,
     222,     0,   223,   224,   225,   226,   227,   228,     0,   229,
       0,   231,   232,   233,   234,   235,   236,   237,     0,   238,
       0,   239,     0,     0,   242,     0,   244,   245,   246,   247,
     248,     0,     0,   249,     0,   251,     0,     0,   253,   254,
     255,     0,     0,   256,   257,   258,   259,   260,   490,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,     0,   282,
     283,   284,   285,   286,     0,   287,   288,     0,   290,     0,
     291,   292,   293,   294,   295,   296,     0,   297,   298,     0,
       0,   299,   300,   301,     0,     0,   302,   303,     0,   305,
       0,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,     0,   318,   319,   320,   321,   322,   323,   324,
     325,   326,     0,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,     0,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
       0,   353,   354,     0,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,     0,
     371,   372,   373,   374,   375,     0,   376,   377,   378,   379,
     380,     0,   382,   383,   384,   385,     0,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   492,   398,
     399,     0,   400,   401,     0,   402,     0,   404,   405,   406,
     407,   408,     0,   409,   410,     0,     0,   411,   412,   413,
     414,   415,     0,   416,   417,   418,   419,   420,   421,   422,
     423,     0,     0,   424,   425,   426,   427,   428,     0,     0,
     429,   430,   431,   432,   433,   434,   435,     0,   436,     0,
     438,   439,   440,   441,     0,     0,   442,     0,     0,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     488,  2542,     0,     0,     0,     0,  2543,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    90,    91,    92,    93,
      94,    95,    96,    97,     0,    98,    99,   100,     0,     0,
       0,     0,     0,     0,     0,   101,   102,     0,   103,   104,
     105,     0,   107,   108,   109,   110,   111,     0,   113,   114,
       0,   115,   116,   117,   118,   119,   120,     0,     0,   121,
     122,   123,   124,   125,     0,   126,   127,   128,   129,   130,
       0,     0,     0,   132,   133,   134,   135,   136,     0,   138,
     139,   140,     0,   141,   142,   143,   144,   145,   146,     0,
       0,   148,   149,   150,     0,     0,     0,     0,     0,     0,
       0,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     161,     0,   162,     0,   163,   164,   165,   166,   167,   168,
       0,   169,   170,   171,   172,   173,     0,     0,   174,   175,
     176,   177,   178,     0,   179,   180,   181,     0,   182,   183,
     184,     0,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,     0,   195,     0,   196,   197,   198,   199,     0,
     200,     0,   201,     0,     0,     0,   204,   205,   206,     0,
     208,     0,   209,     0,   210,   211,     0,   212,   213,   214,
     215,   216,   217,     0,   219,   220,   221,   222,     0,   223,
     224,   225,   226,   227,   228,     0,   229,     0,   231,   232,
     233,   234,   235,   236,   237,     0,   238,     0,   239,     0,
       0,   242,     0,   244,   245,   246,   247,   248,     0,     0,
     249,     0,   251,     0,     0,   253,   254,   255,     0,     0,
     256,   257,   258,   259,   260,   490,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,     0,   282,   283,   284,   285,
     286,     0,   287,   288,     0,   290,     0,   291,   292,   293,
     294,   295,   296,     0,   297,   298,     0,     0,   299,   300,
     301,     0,     0,   302,   303,     0,   305,     0,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,     0,
     318,   319,   320,   321,   322,   323,   324,   325,   326,     0,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,     0,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,     0,   353,   354,
       0,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,     0,   371,   372,   373,
     374,   375,     0,   376,   377,   378,   379,   380,     0,   382,
     383,   384,   385,     0,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   492,   398,   399,     0,   400,
     401,     0,   402,     0,   404,   405,   406,   407,   408,     0,
     409,   410,     0,     0,   411,   412,   413,   414,   415,     0,
     416,   417,   418,   419,   420,   421,   422,   423,     0,     0,
     424,   425,   426,   427,   428,     0,     0,   429,   430,   431,
     432,   433,   434,   435,     0,   436,     0,   438,   439,   440,
     441,     0,     0,   442,     0,     0,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   488,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    90,    91,    92,    93,    94,    95,    96,
      97,   489,    98,    99,   100,     0,     0,     0,     0,     0,
       0,     0,   101,   102,     0,   103,   104,   105,     0,   107,
     108,   109,   110,   111,     0,   113,   114,     0,   115,   116,
     117,   118,   119,   120,     0,     0,   121,   122,   123,   124,
     125,     0,   126,   127,   128,   129,   130,     0,     0,     0,
     132,   133,   134,   135,   136,     0,   138,   139,   140,     0,
     141,   142,   143,   144,   145,   146,     0,     0,   148,   149,
     150,     0,     0,     0,     0,     0,     0,     0,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,     0,   162,
       0,   163,   164,   165,   166,   167,   168,     0,   169,   170,
     171,   172,   173,     0,     0,   174,   175,   176,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,     0,
     195,     0,   196,   197,   198,   199,     0,   200,     0,   201,
       0,     0,     0,   204,   205,   206,     0,   208,     0,   209,
       0,   210,   211,     0,   212,   213,   214,   215,   216,   217,
       0,   219,   220,   221,   222,     0,   223,   224,   225,   226,
     227,   228,     0,   229,     0,   231,   232,   233,   234,   235,
     236,   237,     0,   238,     0,   239,     0,     0,   242,     0,
     244,   245,   246,   247,   248,     0,     0,   249,     0,   251,
       0,     0,   253,   254,   255,     0,     0,   256,   257,   258,
     259,   260,   490,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,     0,   282,   283,   284,   285,   286,     0,   287,
     288,     0,   290,     0,   291,   292,   293,   294,   295,   296,
       0,   297,   298,     0,     0,   299,   300,   301,     0,     0,
     302,   303,     0,   305,     0,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,     0,   318,   319,   320,
     321,   322,   323,   491,   325,   326,     0,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,     0,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,     0,   353,   354,     0,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,     0,   371,   372,   373,   374,   375,     0,
     376,   377,   378,   379,   380,     0,   382,   383,   384,   385,
       0,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   492,   398,   399,     0,   400,   401,     0,   402,
       0,   404,   405,   406,   407,   408,     0,   409,   410,     0,
       0,   411,   412,   413,   414,   415,     0,   416,   417,   418,
     419,   420,   421,   422,   423,     0,     0,   424,   425,   426,
     427,   428,     0,     0,   429,   430,   431,   432,   433,   434,
     435,     0,   436,     0,   438,   439,   440,   441,     0,     0,
     442,     0,     0,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   488,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      90,    91,    92,    93,    94,    95,    96,    97,   540,    98,
      99,   100,     0,     0,     0,     0,     0,     0,     0,   101,
     102,     0,   103,   104,   105,     0,   107,   108,   109,   110,
     111,     0,   113,   114,     0,   115,   116,   117,   118,   119,
     120,     0,     0,   121,   122,   123,   124,   125,     0,   126,
     127,   128,   129,   130,     0,     0,     0,   132,   133,   134,
     135,   136,     0,   138,   139,   140,     0,   141,   142,   143,
     144,   145,   146,     0,     0,   148,   149,   150,     0,     0,
       0,     0,     0,     0,     0,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   161,     0,   162,     0,   163,   164,
     165,   166,   167,   168,     0,   169,   170,   171,   172,   173,
       0,     0,   174,   175,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,     0,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,     0,   195,     0,   196,
     197,   198,   199,     0,   200,     0,   201,     0,     0,     0,
     204,   205,   206,     0,   208,     0,   209,     0,   210,   211,
       0,   212,   213,   214,   215,   216,   217,     0,   219,   220,
     221,   222,     0,   223,   224,   225,   226,   227,   228,     0,
     229,     0,   231,   232,   233,   234,   235,   236,   237,     0,
     238,     0,   239,     0,     0,   242,     0,   244,   245,   246,
     247,   248,     0,     0,   249,     0,   251,     0,     0,   253,
     254,   255,     0,     0,   256,   257,   258,   259,   260,   490,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,     0,
     282,   283,   284,   285,   286,     0,   287,   288,     0,   290,
       0,   291,   292,   293,   294,   295,   296,     0,   297,   298,
       0,     0,   299,   300,   301,     0,     0,   302,   303,     0,
     305,     0,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,     0,   318,   319,   320,   321,   322,   323,
     324,   325,   326,     0,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,     0,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,     0,   353,   354,     0,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
       0,   371,   372,   373,   374,   375,     0,   376,   377,   378,
     379,   380,     0,   382,   383,   384,   385,     0,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   492,
     398,   399,     0,   400,   401,     0,   402,     0,   404,   405,
     406,   407,   408,     0,   541,   410,     0,     0,   542,   412,
     413,   414,   415,     0,   416,   417,   418,   419,   420,   421,
     422,   423,     0,     0,   424,   425,   426,   427,   428,     0,
       0,   429,   430,   431,   432,   433,   434,   435,     0,   436,
       0,   438,   439,   440,   441,     0,     0,   442,     0,     0,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   488,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    90,    91,    92,
      93,    94,    95,    96,    97,     0,    98,    99,   100,     0,
       0,     0,     0,     0,     0,     0,   101,   102,     0,   103,
     104,   105,     0,   107,   108,   109,   110,   111,     0,   113,
     114,     0,   115,   116,   117,   118,   119,   120,     0,     0,
     121,   122,   123,   124,   125,     0,   126,   127,   128,   129,
     130,     0,     0,     0,   132,   133,   134,   135,   136,     0,
     138,   139,   140,     0,   141,   142,   143,   144,   145,   146,
       0,     0,   148,   149,   150,     0,     0,     0,     0,     0,
       0,     0,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   161,     0,   162,     0,   163,   164,   165,   166,   167,
     168,     0,   169,   170,   171,   172,   173,     0,     0,   174,
     175,   176,   177,   178,     0,   179,   180,   181,     0,   182,
     183,   184,     0,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,     0,   195,     0,   196,   197,   198,   199,
       0,   200,     0,   201,     0,     0,     0,   204,   205,   206,
       0,   208,     0,   209,     0,   210,   211,     0,   212,   213,
     214,   215,   216,   217,     0,   219,   220,   221,   222,     0,
     223,   224,   225,   226,   227,   228,     0,   229,     0,   231,
     232,   233,   234,   235,   236,   237,     0,   238,     0,   239,
       0,     0,   242,     0,   244,   245,   246,   247,   248,     0,
       0,   249,     0,   251,     0,     0,   253,   254,   255,     0,
       0,   256,   257,   258,   259,   260,   490,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,     0,   282,   283,   284,
     285,   286,     0,   287,   288,     0,   290,     0,   291,   292,
     293,   294,   295,   296,     0,   297,   298,     0,   560,   299,
     300,   301,     0,     0,   302,   303,     0,   305,     0,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
       0,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,     0,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,     0,   353,
     354,     0,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,     0,   371,   372,
     373,   374,   375,     0,   376,   377,   378,   379,   380,     0,
     382,   383,   384,   385,     0,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   492,   398,   399,     0,
     400,   401,     0,   402,     0,   404,   405,   406,   407,   408,
       0,   409,   410,     0,     0,   411,   412,   413,   414,   415,
       0,   416,   417,   418,   419,   420,   421,   422,   423,     0,
       0,   424,   425,   426,   427,   428,     0,     0,   429,   430,
     431,   432,   433,   434,   435,     0,   436,     0,   438,   439,
     440,   441,     0,     0,   442,     0,     0,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   488,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    90,    91,    92,    93,    94,    95,
      96,    97,     0,    98,    99,   100,     0,     0,     0,     0,
       0,     0,     0,   101,   102,     0,   103,   104,   105,     0,
     107,   108,   109,   110,   111,     0,   113,   114,     0,   115,
     116,   117,   118,   119,   120,     0,     0,   121,   122,   123,
     124,   125,     0,   126,   127,   128,   129,   130,     0,     0,
       0,   132,   133,   134,   135,   136,     0,   138,   139,   140,
       0,   141,   142,   143,   144,   145,   146,     0,     0,   148,
     149,   150,     0,     0,     0,     0,     0,     0,     0,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   161,     0,
     162,     0,   163,   164,   165,   166,   167,   168,     0,   169,
     170,   171,   172,   173,     0,     0,   174,   175,   176,   177,
     178,     0,   179,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
       0,   195,     0,   196,   197,   198,   199,     0,   200,     0,
     201,     0,     0,     0,   204,   205,   206,     0,   208,     0,
     209,     0,   210,   211,     0,   212,   213,   214,   215,   216,
     604,     0,   219,   220,   221,   222,     0,   223,   224,   225,
     226,   227,   228,     0,   229,     0,   231,   232,   233,   234,
     235,   236,   237,     0,   238,     0,   239,     0,     0,   242,
       0,   244,   245,   246,   247,   248,     0,     0,   249,     0,
     251,     0,     0,   253,   254,   255,     0,     0,   256,   257,
     258,   259,   260,   490,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,     0,   282,   283,   284,   285,   286,     0,
     287,   288,     0,   290,     0,   291,   292,   293,   294,   295,
     296,     0,   297,   298,     0,   560,   299,   300,   301,     0,
       0,   302,   303,     0,   305,     0,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,     0,   318,   319,
     320,   321,   322,   323,   324,   325,   326,     0,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,     0,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,     0,   353,   354,     0,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,     0,   371,   372,   373,   374,   375,
       0,   376,   377,   378,   379,   380,     0,   382,   383,   384,
     385,     0,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   492,   398,   399,     0,   400,   401,     0,
     402,     0,   404,   405,   406,   407,   408,     0,   409,   410,
       0,     0,   411,   412,   413,   414,   415,     0,   416,   417,
     418,   419,   420,   421,   422,   423,     0,     0,   424,   425,
     426,   427,   428,     0,     0,   429,   430,   431,   432,   433,
     434,   435,     0,   436,     0,   438,   439,   440,   441,     0,
       0,   442,     0,     0,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   488,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    90,    91,    92,    93,    94,    95,    96,    97,   632,
      98,    99,   100,     0,     0,     0,     0,     0,     0,     0,
     101,   102,     0,   103,   104,   105,     0,   107,   108,   109,
     110,   111,     0,   113,   114,     0,   115,   116,   117,   118,
     119,   120,     0,     0,   121,   122,   123,   124,   125,     0,
     126,   127,   128,   129,   130,     0,     0,     0,   132,   133,
     134,   135,   136,     0,   138,   139,   140,     0,   141,   142,
     143,   144,   145,   146,     0,     0,   148,   149,   150,     0,
       0,     0,     0,     0,     0,     0,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   161,     0,   162,     0,   163,
     164,   165,   166,   167,   168,     0,   169,   170,   171,   172,
     173,     0,     0,   174,   175,   176,   177,   178,     0,   179,
     180,   181,     0,   182,   183,   184,     0,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,     0,   195,     0,
     196,   197,   198,   199,     0,   200,     0,   201,     0,     0,
       0,   204,   205,   206,     0,   208,     0,   209,     0,   210,
     211,     0,   212,   213,   214,   215,   216,   217,     0,   219,
     220,   221,   222,     0,   223,   224,   225,   226,   227,   228,
       0,   229,     0,   231,   232,   233,   234,   235,   236,   237,
       0,   238,     0,   239,     0,     0,   242,     0,   244,   245,
     246,   247,   248,     0,     0,   249,     0,   251,     0,     0,
     253,   254,   255,     0,     0,   256,   257,   258,   259,   260,
     490,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
       0,   282,   283,   284,   285,   286,     0,   287,   288,     0,
     290,     0,   291,   292,   293,   294,   295,   296,     0,   297,
     298,     0,     0,   299,   300,   301,     0,     0,   302,   303,
       0,   305,     0,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,     0,   318,   319,   320,   321,   322,
     323,   324,   325,   326,     0,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,     0,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,     0,   353,   354,     0,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,     0,   371,   372,   373,   374,   375,     0,   376,   377,
     378,   379,   380,     0,   382,   383,   384,   385,     0,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     492,   398,   399,     0,   400,   401,     0,   402,     0,   404,
     405,   406,   407,   408,     0,   409,   410,     0,     0,   411,
     412,   413,   414,   415,     0,   416,   417,   418,   419,   420,
     421,   422,   423,     0,     0,   424,   425,   426,   427,   428,
       0,     0,   429,   430,   431,   432,   433,   434,   435,     0,
     436,     0,   438,   439,   440,   441,     0,     0,   442,     0,
       0,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   488,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    90,    91,
      92,    93,    94,    95,    96,    97,     0,    98,    99,   100,
       0,     0,     0,     0,     0,     0,     0,   101,   102,     0,
     103,   104,   105,     0,   107,   108,   109,   110,   111,     0,
     113,   114,     0,   115,   116,   117,   118,   119,   120,     0,
       0,   121,   122,   123,   124,   125,     0,   126,   127,   128,
     129,   130,     0,     0,     0,   132,   133,   134,   135,   136,
       0,   138,   139,   140,     0,   141,   142,   143,   144,   145,
     146,     0,     0,   148,   149,   150,     0,     0,     0,     0,
       0,     0,     0,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   161,     0,   162,     0,   163,   164,   165,   166,
     167,   168,     0,   169,   170,   171,   172,   173,     0,     0,
     174,   175,   176,   177,   178,     0,   179,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   194,     0,   195,     0,   196,   197,   198,
     199,     0,   200,     0,   201,     0,     0,     0,   204,   205,
     206,     0,  1644,     0,   209,     0,   210,   211,     0,   212,
     213,   214,   215,   216,   217,     0,   219,   220,   221,   222,
       0,   223,   224,   225,   226,   227,   228,     0,   229,     0,
     231,   232,   233,   234,   235,   236,   237,     0,   238,     0,
     239,     0,     0,   242,     0,   244,   245,   246,   247,   248,
       0,     0,   249,     0,   251,     0,     0,   253,   254,  1645,
       0,     0,   256,   257,   258,   259,   260,   490,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,     0,   282,   283,
     284,   285,   286,     0,   287,   288,     0,   290,     0,   291,
     292,   293,   294,   295,   296,     0,   297,   298,     0,     0,
     299,   300,   301,     0,     0,   302,   303,     0,   305,     0,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,     0,   318,   319,   320,   321,   322,   323,   324,   325,
     326,     0,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,     0,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,     0,
     353,   354,     0,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,     0,   371,
     372,   373,   374,   375,     0,   376,   377,   378,   379,   380,
       0,   382,   383,   384,   385,     0,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   492,   398,   399,
       0,   400,   401,  1646,   402,     0,   404,  1647,   406,  1648,
     408,     0,   409,   410,     0,     0,   411,   412,   413,   414,
     415,     0,   416,   417,   418,   419,   420,   421,   422,   423,
       0,     0,   424,   425,  1649,   427,   428,     0,     0,   429,
     430,   431,   432,   433,   434,   435,     0,   436,     0,   438,
     439,   440,   441,     0,     0,   442,     0,     0,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   488,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    90,    91,    92,    93,    94,
      95,    96,    97,     0,    98,    99,   100,     0,     0,     0,
       0,     0,  2200,     0,   101,   102,     0,   103,   104,   105,
       0,   107,   108,   109,   110,   111,     0,   113,   114,     0,
     115,   116,   117,   118,   119,   120,     0,     0,   121,   122,
     123,   124,   125,     0,   126,   127,   128,   129,   130,     0,
       0,     0,   132,   133,   134,   135,   136,     0,   138,   139,
     140,     0,   141,   142,   143,   144,   145,   146,     0,     0,
     148,   149,   150,     0,     0,     0,     0,     0,     0,     0,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   161,
       0,   162,     0,   163,   164,   165,   166,   167,   168,     0,
     169,   170,   171,   172,   173,     0,     0,   174,   175,   176,
     177,   178,     0,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,     0,   195,     0,   196,   197,   198,   199,     0,   200,
       0,   201,     0,     0,     0,   204,   205,   206,     0,   208,
       0,   209,     0,   210,   211,     0,   212,   213,   214,   215,
     216,   217,     0,   219,   220,   221,   222,     0,   223,   224,
     225,   226,   227,   228,     0,   229,     0,   231,   232,   233,
     234,   235,   236,   237,     0,   238,     0,   239,     0,     0,
     242,     0,   244,   245,   246,   247,   248,     0,     0,   249,
       0,   251,     0,     0,   253,   254,   255,     0,     0,   256,
     257,   258,   259,   260,   490,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,     0,   282,   283,   284,   285,   286,
       0,   287,   288,     0,   290,     0,   291,   292,   293,   294,
     295,   296,     0,   297,   298,     0,     0,   299,   300,   301,
       0,     0,   302,   303,     0,   305,     0,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,     0,   318,
     319,   320,   321,   322,   323,   324,   325,   326,     0,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,     0,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,     0,   353,   354,     0,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,     0,   371,   372,   373,   374,
     375,     0,   376,   377,   378,   379,   380,     0,   382,   383,
     384,   385,     0,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   492,   398,   399,     0,   400,   401,
       0,   402,     0,   404,   405,   406,   407,   408,     0,   409,
     410,     0,     0,   411,   412,   413,   414,   415,     0,   416,
     417,   418,   419,   420,   421,   422,   423,     0,     0,   424,
     425,   426,   427,   428,     0,     0,   429,   430,   431,   432,
     433,   434,   435,     0,   436,     0,   438,   439,   440,   441,
       0,     0,   442,     0,     0,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   488,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    90,    91,    92,    93,    94,    95,    96,    97,
       0,    98,    99,   100,     0,     0,     0,     0,     0,  2214,
       0,   101,   102,     0,   103,   104,   105,     0,   107,   108,
     109,   110,   111,     0,   113,   114,     0,   115,   116,   117,
     118,   119,   120,     0,     0,   121,   122,   123,   124,   125,
       0,   126,   127,   128,   129,   130,     0,     0,     0,   132,
     133,   134,   135,   136,     0,   138,   139,   140,     0,   141,
     142,   143,   144,   145,   146,     0,     0,   148,   149,   150,
       0,     0,     0,     0,     0,     0,     0,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,     0,   162,     0,
     163,   164,   165,   166,   167,   168,     0,   169,   170,   171,
     172,   173,     0,     0,   174,   175,   176,   177,   178,     0,
     179,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   194,     0,   195,
       0,   196,   197,   198,   199,     0,   200,     0,   201,     0,
       0,     0,   204,   205,   206,     0,   208,     0,   209,     0,
     210,   211,     0,   212,   213,   214,   215,   216,   217,     0,
     219,   220,   221,   222,     0,   223,   224,   225,   226,   227,
     228,     0,   229,     0,   231,   232,   233,   234,   235,   236,
     237,     0,   238,     0,   239,     0,     0,   242,     0,   244,
     245,   246,   247,   248,     0,     0,   249,     0,   251,     0,
       0,   253,   254,   255,     0,     0,   256,   257,   258,   259,
     260,   490,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,     0,   282,   283,   284,   285,   286,     0,   287,   288,
       0,   290,     0,   291,   292,   293,   294,   295,   296,     0,
     297,   298,     0,     0,   299,   300,   301,     0,     0,   302,
     303,     0,   305,     0,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,     0,   318,   319,   320,   321,
     322,   323,   324,   325,   326,     0,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
       0,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,     0,   353,   354,     0,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,     0,   371,   372,   373,   374,   375,     0,   376,
     377,   378,   379,   380,     0,   382,   383,   384,   385,     0,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   492,   398,   399,     0,   400,   401,     0,   402,     0,
     404,   405,   406,   407,   408,     0,   409,   410,     0,     0,
     411,   412,   413,   414,   415,     0,   416,   417,   418,   419,
     420,   421,   422,   423,     0,     0,   424,   425,   426,   427,
     428,     0,     0,   429,   430,   431,   432,   433,   434,   435,
       0,   436,     0,   438,   439,   440,   441,     0,     0,   442,
       0,     0,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   488,     0,  2403,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    90,
      91,    92,    93,    94,    95,    96,    97,     0,    98,    99,
     100,     0,     0,     0,     0,     0,     0,     0,   101,   102,
       0,   103,   104,   105,     0,   107,   108,   109,   110,   111,
       0,   113,   114,     0,   115,   116,   117,   118,   119,   120,
       0,     0,   121,   122,   123,   124,   125,     0,   126,   127,
     128,   129,   130,     0,     0,     0,   132,   133,   134,   135,
     136,     0,   138,   139,   140,     0,   141,   142,   143,   144,
     145,   146,     0,     0,   148,   149,   150,     0,     0,     0,
       0,     0,     0,     0,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   161,     0,   162,     0,   163,   164,   165,
     166,   167,   168,     0,   169,   170,   171,   172,   173,     0,
       0,   174,   175,   176,   177,   178,     0,   179,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,     0,   195,     0,   196,   197,
     198,   199,     0,   200,     0,   201,     0,     0,     0,   204,
     205,   206,     0,   208,     0,   209,     0,   210,   211,     0,
     212,   213,   214,   215,   216,   217,     0,   219,   220,   221,
     222,     0,   223,   224,   225,   226,   227,   228,     0,   229,
       0,   231,   232,   233,   234,   235,   236,   237,     0,   238,
       0,   239,     0,     0,   242,     0,   244,   245,   246,   247,
     248,     0,     0,   249,     0,   251,     0,     0,   253,   254,
     255,     0,     0,   256,   257,   258,   259,   260,   490,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,     0,   282,
     283,   284,   285,   286,     0,   287,   288,     0,   290,     0,
     291,   292,   293,   294,   295,   296,     0,   297,   298,     0,
       0,   299,   300,   301,     0,     0,   302,   303,     0,   305,
       0,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,     0,   318,   319,   320,   321,   322,   323,   324,
     325,   326,     0,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,     0,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
       0,   353,   354,     0,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,     0,
     371,   372,   373,   374,   375,     0,   376,   377,   378,   379,
     380,     0,   382,   383,   384,   385,     0,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   492,   398,
     399,     0,   400,   401,     0,   402,     0,   404,   405,   406,
     407,   408,     0,   409,   410,     0,     0,   411,   412,   413,
     414,   415,     0,   416,   417,   418,   419,   420,   421,   422,
     423,     0,     0,   424,   425,   426,   427,   428,     0,     0,
     429,   430,   431,   432,   433,   434,   435,     0,   436,     0,
     438,   439,   440,   441,     0,     0,   442,     0,     0,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     488,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    90,    91,    92,    93,
      94,    95,    96,    97,     0,    98,    99,   100,     0,     0,
       0,     0,     0,     0,     0,   101,   102,     0,   103,   104,
     105,     0,   107,   108,   109,   110,   111,     0,   113,   114,
       0,   115,   116,   117,   118,   119,   120,     0,     0,   121,
     122,   123,   124,   125,     0,   126,   127,   128,   129,   130,
       0,     0,     0,   132,   133,   134,   135,   136,     0,   138,
     139,   140,     0,   141,   142,   143,   144,   145,   146,     0,
       0,   148,   149,   150,     0,     0,     0,     0,     0,     0,
       0,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     161,     0,   162,     0,   163,   164,   165,   166,   167,   168,
       0,   169,   170,   171,   172,   173,     0,     0,   174,   175,
     176,   177,   178,     0,   179,   180,   181,     0,   182,   183,
     184,     0,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,     0,   195,     0,   196,   197,   198,   199,     0,
     200,     0,   201,     0,     0,     0,   204,   205,   206,     0,
     208,     0,   209,     0,   210,   211,     0,   212,   213,   214,
     215,   216,   217,     0,   219,   220,   221,   222,     0,   223,
     224,   225,   226,   227,   228,     0,   229,     0,   231,   232,
     233,   234,   235,   236,   237,     0,   238,     0,   239,     0,
       0,   242,     0,   244,   245,   246,   247,   248,     0,     0,
     249,     0,   251,     0,     0,   253,   254,   255,     0,     0,
     256,   257,   258,   259,   260,   490,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,     0,   282,   283,   284,   285,
     286,     0,   287,   288,     0,   290,     0,   291,   292,   293,
     294,   295,   296,     0,   297,   298,     0,     0,   299,   300,
     301,     0,     0,   302,   303,     0,   305,     0,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,     0,
     318,   319,   320,   321,   322,   323,   324,   325,   326,     0,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,     0,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,     0,   353,   354,
       0,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,     0,   371,   372,   373,
     374,   375,     0,   376,   377,   378,   379,   380,     0,   382,
     383,   384,   385,     0,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   492,   398,   399,     0,   400,
     401,     0,   402,     0,   404,   405,   406,   407,   408,     0,
     409,   410,     0,     0,   411,   412,   413,   414,   415,     0,
     416,   417,   418,   419,   420,   421,   422,   423,     0,     0,
     424,   425,   426,   427,   428,     0,     0,   429,   430,   431,
     432,   433,   434,   435,     0,   436,     0,   438,   439,   440,
     441,     0,     0,   442,     0,     0,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   488,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    90,    91,    92,    93,    94,    95,    96,
      97,     0,    98,    99,   100,     0,     0,     0,     0,     0,
       0,     0,   101,   102,     0,   103,   104,   105,     0,   107,
     108,   109,   110,   111,     0,   113,   114,     0,   115,   116,
     117,   118,   119,   120,     0,     0,   121,   122,   123,   124,
     125,     0,   126,   127,   128,   129,   130,     0,     0,     0,
     132,   133,   134,   135,   136,     0,   138,   139,   140,     0,
     141,   142,   143,   144,   145,   146,     0,     0,   148,   149,
     150,     0,     0,     0,     0,     0,     0,     0,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,     0,   162,
       0,   163,   164,   165,   166,   167,   168,     0,   169,   170,
     171,   172,   173,     0,     0,   174,   175,   176,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,     0,
     195,     0,   196,   197,   198,   199,     0,   200,     0,   201,
       0,     0,     0,   204,   205,   206,     0,   208,     0,   209,
       0,   210,   211,     0,   212,   213,   214,   215,   216,   217,
       0,   219,   220,   221,   222,     0,   223,   224,   225,   226,
     227,   228,     0,   229,     0,   231,   232,   233,   234,   235,
     236,   237,     0,   238,     0,   239,     0,     0,   242,     0,
     244,   245,   246,   247,   248,     0,     0,   249,     0,   251,
       0,     0,   253,   254,   552,     0,     0,   256,   257,   258,
     259,   260,   490,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,     0,   282,   283,   284,   285,   286,     0,   287,
     288,     0,   290,     0,   291,   292,   293,   294,   295,   296,
       0,   297,   298,     0,     0,   299,   300,   301,     0,     0,
     302,   303,     0,   305,     0,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,     0,   318,   319,   320,
     321,   322,   323,   324,   325,   326,     0,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,     0,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,     0,   353,   354,     0,   356,   357,
     358,   359,   360,   361,   362,   363,   553,   365,   366,   367,
     368,   369,   370,     0,   371,   372,   373,   374,   554,     0,
     376,   377,   378,   379,   380,     0,   382,   383,   384,   385,
       0,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   492,   398,   399,     0,   400,   401,     0,   402,
       0,   404,   405,   406,   407,   408,     0,   555,   410,     0,
       0,   411,   412,   413,   414,   415,     0,   416,   417,   418,
     419,   420,   421,   422,   423,     0,     0,   424,   425,   426,
     427,   428,     0,     0,   429,   430,   431,   432,   433,   434,
     435,     0,   436,     0,   438,   439,   440,   441,     0,     0,
     442,     0,     0,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   488,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      90,    91,    92,    93,    94,    95,    96,    97,     0,    98,
      99,   100,     0,     0,     0,     0,     0,     0,     0,   101,
     102,     0,   103,   104,   105,     0,   107,   108,   109,   110,
     111,     0,   113,   114,     0,   115,   116,   117,   118,   119,
     120,     0,     0,   121,   122,   123,   124,   125,     0,   126,
     127,   128,   129,   130,     0,     0,     0,   132,   133,   134,
     135,   136,     0,   138,   139,   140,     0,   141,   142,   143,
     144,   145,   146,     0,     0,   148,   149,   150,     0,     0,
       0,     0,     0,     0,     0,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   161,     0,   162,     0,   163,   164,
     165,   166,   167,   168,     0,   169,   170,   171,   172,   173,
       0,     0,   174,   175,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,     0,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,     0,   195,     0,   196,
     197,   198,   199,     0,   200,     0,   201,     0,     0,     0,
     204,   205,   206,     0,   208,     0,   209,     0,   210,   211,
       0,   212,   213,   214,   215,   216,   217,     0,   219,   220,
     221,   222,     0,   223,   224,   225,   226,   227,   228,     0,
     229,     0,   231,   232,   233,   234,   235,   236,   237,     0,
     238,     0,   239,     0,     0,   242,     0,   244,   245,   246,
     247,   248,     0,     0,   249,     0,   251,     0,     0,   253,
     254,   255,     0,     0,   256,   257,   258,   259,   260,   490,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,     0,
     282,   283,   284,   285,   286,     0,   287,   288,     0,   290,
       0,   291,   292,   293,   294,   295,   296,     0,   297,   298,
       0,     0,   299,   300,   301,     0,     0,   302,   303,     0,
     305,     0,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,     0,   318,   319,   320,   321,   322,   323,
     324,   325,   326,     0,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   568,   340,     0,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,     0,   353,   354,     0,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
       0,   371,   372,   373,   374,   375,     0,   376,   377,   378,
     379,   380,     0,   382,   383,   384,   385,     0,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   492,
     398,   399,     0,   400,   401,     0,   402,     0,   404,   405,
     406,   407,   408,     0,   409,   410,     0,     0,   411,   412,
     413,   414,   415,     0,   416,   417,   418,   419,   420,   421,
     422,   423,     0,     0,   424,   425,   426,   427,   428,     0,
       0,   429,   430,   431,   432,   433,   434,   435,     0,   436,
       0,   438,   439,   440,   441,     0,     0,   442,     0,     0,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   488,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    90,    91,    92,
      93,    94,    95,    96,    97,     0,    98,    99,   100,     0,
       0,     0,     0,     0,     0,     0,   101,   102,     0,   103,
     104,   105,     0,   107,   108,   109,   110,   111,     0,   113,
     114,     0,   115,   116,   117,   118,   119,   120,     0,     0,
     121,   122,   123,   124,   125,     0,   126,   127,   128,   129,
     130,     0,     0,     0,   132,   133,   134,   135,   136,     0,
     138,   139,   140,     0,   141,   142,   143,   144,   145,   146,
       0,     0,   148,   149,   150,     0,     0,     0,     0,     0,
       0,     0,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   161,     0,   162,     0,   163,   164,   165,   166,   167,
     168,     0,   169,   170,   171,   172,   173,     0,     0,   174,
     175,   176,   177,   178,     0,   179,   180,   181,     0,   182,
     183,   184,     0,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,     0,   195,     0,   196,   197,   198,   199,
       0,   200,     0,   201,     0,     0,     0,   204,   205,   206,
       0,   208,     0,   209,     0,   210,   211,     0,   212,   213,
     214,   215,   216,   599,     0,   219,   220,   221,   222,     0,
     223,   224,   225,   226,   227,   228,     0,   229,     0,   231,
     232,   233,   234,   235,   236,   237,     0,   238,     0,   239,
       0,     0,   242,     0,   244,   245,   246,   247,   248,     0,
       0,   249,     0,   251,     0,     0,   253,   254,   255,     0,
       0,   256,   257,   258,   259,   260,   490,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,     0,   282,   283,   284,
     285,   286,     0,   287,   288,     0,   290,     0,   291,   292,
     293,   294,   295,   296,     0,   297,   298,     0,     0,   299,
     300,   301,     0,     0,   302,   303,     0,   305,     0,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
       0,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,     0,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,     0,   353,
     354,     0,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,     0,   371,   372,
     373,   374,   375,     0,   376,   377,   378,   379,   380,     0,
     382,   383,   384,   385,     0,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   492,   398,   399,     0,
     400,   401,     0,   402,     0,   404,   405,   406,   407,   408,
       0,   409,   410,     0,     0,   411,   412,   413,   414,   415,
       0,   416,   417,   418,   419,   420,   421,   422,   423,     0,
       0,   424,   425,   426,   427,   428,     0,     0,   429,   430,
     431,   432,   433,   434,   435,     0,   436,     0,   438,   439,
     440,   441,     0,     0,   442,     0,     0,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   488,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    90,    91,    92,    93,    94,    95,
      96,    97,     0,    98,    99,   100,     0,     0,     0,     0,
       0,     0,     0,   101,   102,     0,   103,   104,   105,     0,
     107,   108,   109,   110,   111,     0,   113,   114,     0,   115,
     116,   117,   118,   119,   120,     0,     0,   121,   122,   123,
     124,   125,     0,   126,   127,   128,   129,   130,     0,     0,
       0,   132,   133,   134,   135,   136,     0,   138,   139,   140,
       0,   141,   142,   143,   144,   145,   146,     0,     0,   148,
     149,   150,     0,     0,     0,     0,     0,     0,     0,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   161,     0,
     162,     0,   163,   164,   165,   166,   167,   168,     0,   169,
     170,   171,   172,   173,     0,     0,   174,   175,   176,   177,
     178,     0,   179,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
       0,   195,     0,   196,   197,   198,   199,     0,   200,     0,
     201,     0,     0,     0,   204,   205,   206,     0,   208,     0,
     209,     0,   210,   211,     0,   212,   213,   214,   215,   216,
     602,     0,   219,   220,   221,   222,     0,   223,   224,   225,
     226,   227,   228,     0,   229,     0,   231,   232,   233,   234,
     235,   236,   237,     0,   238,     0,   239,     0,     0,   242,
       0,   244,   245,   246,   247,   248,     0,     0,   249,     0,
     251,     0,     0,   253,   254,   255,     0,     0,   256,   257,
     258,   259,   260,   490,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,     0,   282,   283,   284,   285,   286,     0,
     287,   288,     0,   290,     0,   291,   292,   293,   294,   295,
     296,     0,   297,   298,     0,     0,   299,   300,   301,     0,
       0,   302,   303,     0,   305,     0,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,     0,   318,   319,
     320,   321,   322,   323,   324,   325,   326,     0,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,     0,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,     0,   353,   354,     0,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,     0,   371,   372,   373,   374,   375,
       0,   376,   377,   378,   379,   380,     0,   382,   383,   384,
     385,     0,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   492,   398,   399,     0,   400,   401,     0,
     402,     0,   404,   405,   406,   407,   408,     0,   409,   410,
       0,     0,   411,   412,   413,   414,   415,     0,   416,   417,
     418,   419,   420,   421,   422,   423,     0,     0,   424,   425,
     426,   427,   428,     0,     0,   429,   430,   431,   432,   433,
     434,   435,     0,   436,     0,   438,   439,   440,   441,     0,
       0,   442,     0,     0,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   488,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    90,    91,    92,    93,    94,    95,    96,    97,     0,
      98,    99,   100,     0,     0,     0,     0,     0,     0,     0,
     101,   102,     0,   103,   104,   105,     0,   107,   108,   109,
     110,   111,     0,   113,   114,     0,   115,   116,   117,   118,
     119,   120,     0,     0,   121,   122,   123,   124,   125,     0,
     126,   127,   128,   129,   130,     0,     0,     0,   132,   133,
     134,   135,   136,     0,   138,   139,   140,     0,   141,   142,
     143,   144,   145,   146,     0,     0,   148,   149,   150,     0,
       0,     0,     0,     0,     0,     0,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   161,     0,   162,     0,   163,
     164,   165,   166,   167,   168,     0,   169,   170,   171,   172,
     173,     0,     0,   174,   175,   176,   177,   178,     0,   179,
     180,   181,     0,   182,   183,   184,     0,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,     0,   195,     0,
     196,   197,   198,   199,     0,   200,     0,   201,     0,     0,
       0,   204,   205,   206,     0,   208,     0,   209,     0,   210,
     211,     0,   212,   213,   214,   215,   216,   606,     0,   219,
     220,   221,   222,     0,   223,   224,   225,   226,   227,   228,
       0,   229,     0,   231,   232,   233,   234,   235,   236,   237,
       0,   238,     0,   239,     0,     0,   242,     0,   244,   245,
     246,   247,   248,     0,     0,   249,     0,   251,     0,     0,
     253,   254,   255,     0,     0,   256,   257,   258,   259,   260,
     490,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
       0,   282,   283,   284,   285,   286,     0,   287,   288,     0,
     290,     0,   291,   292,   293,   294,   295,   296,     0,   297,
     298,     0,     0,   299,   300,   301,     0,     0,   302,   303,
       0,   305,     0,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,     0,   318,   319,   320,   321,   322,
     323,   324,   325,   326,     0,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,     0,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,     0,   353,   354,     0,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,     0,   371,   372,   373,   374,   375,     0,   376,   377,
     378,   379,   380,     0,   382,   383,   384,   385,     0,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     492,   398,   399,     0,   400,   401,     0,   402,     0,   404,
     405,   406,   407,   408,     0,   409,   410,     0,     0,   411,
     412,   413,   414,   415,     0,   416,   417,   418,   419,   420,
     421,   422,   423,     0,     0,   424,   425,   426,   427,   428,
       0,     0,   429,   430,   431,   432,   433,   434,   435,     0,
     436,     0,   438,   439,   440,   441,     0,     0,   442,     0,
       0,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   488,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    90,    91,
      92,    93,    94,    95,    96,    97,     0,    98,    99,   100,
       0,     0,     0,     0,     0,     0,     0,   101,   102,     0,
     103,   104,   105,     0,   107,   108,   109,   110,   111,     0,
     113,   114,     0,   115,   116,   117,   118,   119,   120,     0,
       0,   121,   122,   123,   124,   125,     0,   126,   127,   128,
     129,   130,     0,     0,     0,   132,   133,   134,   135,   136,
       0,   138,   139,   140,     0,   141,   142,   143,   144,   145,
     146,     0,     0,   148,   149,   150,     0,     0,     0,     0,
       0,     0,     0,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   161,     0,   162,     0,   163,   164,   165,   166,
     167,   168,     0,   169,   170,   171,   172,   173,     0,     0,
     174,   175,   176,   177,   178,     0,   179,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   194,     0,   195,     0,   196,   197,   198,
     199,     0,   200,     0,   201,     0,     0,     0,   204,   205,
     206,     0,   208,     0,   209,     0,   210,   211,     0,   212,
     213,   214,   215,   216,   624,     0,   219,   220,   221,   222,
       0,   223,   224,   225,   226,   227,   228,     0,   229,     0,
     231,   232,   233,   234,   235,   236,   237,     0,   238,     0,
     239,     0,     0,   242,     0,   244,   245,   246,   247,   248,
       0,     0,   249,     0,   251,     0,     0,   253,   254,   255,
       0,     0,   256,   257,   258,   259,   260,   490,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,     0,   282,   283,
     284,   285,   286,     0,   287,   288,     0,   290,     0,   291,
     292,   293,   294,   295,   296,     0,   297,   298,     0,     0,
     299,   300,   301,     0,     0,   302,   303,     0,   305,     0,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,     0,   318,   319,   320,   321,   322,   323,   324,   325,
     326,     0,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,     0,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,     0,
     353,   354,     0,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,     0,   371,
     372,   373,   374,   375,     0,   376,   377,   378,   379,   380,
       0,   382,   383,   384,   385,     0,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   492,   398,   399,
       0,   400,   401,     0,   402,     0,   404,   405,   406,   407,
     408,     0,   409,   410,     0,     0,   411,   412,   413,   414,
     415,     0,   416,   417,   418,   419,   420,   421,   422,   423,
       0,     0,   424,   425,   426,   427,   428,     0,     0,   429,
     430,   431,   432,   433,   434,   435,     0,   436,     0,   438,
     439,   440,   441,     0,     0,   442,     0,     0,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   488,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    90,    91,    92,    93,    94,
      95,    96,    97,     0,    98,    99,   100,     0,     0,     0,
       0,     0,     0,     0,   101,   102,     0,   103,   104,   105,
       0,   107,   108,   109,   110,   111,     0,   113,   114,     0,
     115,   116,   117,   118,   119,   120,     0,     0,   121,   122,
     123,   124,   125,     0,   126,   127,   128,   129,   130,     0,
       0,     0,   132,   133,   134,   135,   136,     0,   138,   139,
     140,     0,   141,   142,   143,   144,   145,   146,     0,     0,
     148,   149,   150,     0,     0,     0,     0,     0,     0,     0,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   161,
       0,   162,     0,   163,   164,   165,   166,   167,   168,     0,
     169,   170,   171,   172,   173,     0,     0,   174,   175,   176,
     177,   178,     0,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,     0,   195,     0,   196,   197,   198,   199,     0,   200,
       0,   201,     0,     0,     0,   204,   205,   206,     0,   208,
       0,   209,     0,   210,   211,     0,   212,   213,   214,   215,
     216,   640,     0,   219,   220,   221,   222,     0,   223,   224,
     225,   226,   227,   228,     0,   229,     0,   231,   232,   233,
     234,   235,   236,   237,     0,   238,     0,   239,     0,     0,
     242,     0,   244,   245,   246,   247,   248,     0,     0,   249,
       0,   251,     0,     0,   253,   254,   255,     0,     0,   256,
     257,   258,   259,   260,   490,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,     0,   282,   283,   284,   285,   286,
       0,   287,   288,     0,   290,     0,   291,   292,   293,   294,
     295,   296,     0,   297,   298,     0,     0,   299,   300,   301,
       0,     0,   302,   303,     0,   305,     0,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,     0,   318,
     319,   320,   321,   322,   323,   324,   325,   326,     0,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,     0,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,     0,   353,   354,     0,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,     0,   371,   372,   373,   374,
     375,     0,   376,   377,   378,   379,   380,     0,   382,   383,
     384,   385,     0,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   492,   398,   399,     0,   400,   401,
       0,   402,     0,   404,   405,   406,   407,   408,     0,   409,
     410,     0,     0,   411,   412,   413,   414,   415,     0,   416,
     417,   418,   419,   420,   421,   422,   423,     0,     0,   424,
     425,   426,   427,   428,     0,     0,   429,   430,   431,   432,
     433,   434,   435,     0,   436,     0,   438,   439,   440,   441,
       0,     0,   442,     0,     0,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   488,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    90,    91,    92,    93,    94,    95,    96,    97,
       0,    98,    99,   100,     0,     0,     0,     0,     0,     0,
       0,   101,   102,     0,   103,   104,   105,     0,   107,   108,
     109,   110,   111,     0,   113,   114,     0,   115,   116,   117,
     118,   119,   120,     0,     0,   121,   122,   123,   124,   125,
       0,   126,   127,   128,   129,   130,     0,     0,     0,   132,
     133,   134,   135,   136,     0,   138,   139,   140,     0,   141,
     142,   143,   144,   145,   146,     0,     0,   148,   149,   150,
       0,     0,     0,     0,     0,     0,     0,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,     0,   162,     0,
     163,   164,   165,   166,   167,   168,     0,   169,   170,   171,
     172,   173,     0,     0,   174,   175,   176,   177,   178,     0,
     179,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   194,     0,   195,
       0,   196,   197,   198,   199,     0,   200,     0,   201,     0,
       0,     0,   204,   205,   206,     0,   208,     0,   209,     0,
     210,   211,     0,   212,   213,   214,   215,   216,   644,     0,
     219,   220,   221,   222,     0,   223,   224,   225,   226,   227,
     228,     0,   229,     0,   231,   232,   233,   234,   235,   236,
     237,     0,   238,     0,   239,     0,     0,   242,     0,   244,
     245,   246,   247,   248,     0,     0,   249,     0,   251,     0,
       0,   253,   254,   255,     0,     0,   256,   257,   258,   259,
     260,   490,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,     0,   282,   283,   284,   285,   286,     0,   287,   288,
       0,   290,     0,   291,   292,   293,   294,   295,   296,     0,
     297,   298,     0,     0,   299,   300,   301,     0,     0,   302,
     303,     0,   305,     0,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,     0,   318,   319,   320,   321,
     322,   323,   324,   325,   326,     0,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
       0,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,     0,   353,   354,     0,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,     0,   371,   372,   373,   374,   375,     0,   376,
     377,   378,   379,   380,     0,   382,   383,   384,   385,     0,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   492,   398,   399,     0,   400,   401,     0,   402,     0,
     404,   405,   406,   407,   408,     0,   409,   410,     0,     0,
     411,   412,   413,   414,   415,     0,   416,   417,   418,   419,
     420,   421,   422,   423,     0,     0,   424,   425,   426,   427,
     428,     0,     0,   429,   430,   431,   432,   433,   434,   435,
       0,   436,     0,   438,   439,   440,   441,     0,     0,   442,
       0,     0,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   488,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    90,
      91,    92,    93,    94,    95,    96,    97,     0,    98,    99,
     100,     0,     0,     0,     0,     0,     0,     0,   101,   102,
       0,   103,   104,   105,     0,   107,   108,   109,   110,   111,
       0,   113,   114,     0,   115,   116,   117,   118,   119,   120,
       0,     0,   121,   122,   123,   124,   125,     0,   126,   127,
     128,   129,   130,     0,     0,     0,   132,   133,   134,   135,
     136,     0,   138,   139,   140,     0,   141,   142,   143,   144,
     145,   146,     0,     0,   148,   149,   150,     0,     0,     0,
       0,     0,     0,     0,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   161,     0,   162,     0,   163,   164,   165,
     166,   167,   168,     0,   169,   170,   171,   172,   173,     0,
       0,   174,   175,   176,   177,   178,     0,   179,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,     0,   195,     0,   196,   197,
     198,   199,     0,   200,     0,   201,     0,     0,     0,   204,
     205,   206,     0,   208,     0,   209,     0,   210,   211,     0,
     212,   213,   214,   215,   216,   647,     0,   219,   220,   221,
     222,     0,   223,   224,   225,   226,   227,   228,     0,   229,
       0,   231,   232,   233,   234,   235,   236,   237,     0,   238,
       0,   239,     0,     0,   242,     0,   244,   245,   246,   247,
     248,     0,     0,   249,     0,   251,     0,     0,   253,   254,
     255,     0,     0,   256,   257,   258,   259,   260,   490,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,     0,   282,
     283,   284,   285,   286,     0,   287,   288,     0,   290,     0,
     291,   292,   293,   294,   295,   296,     0,   297,   298,     0,
       0,   299,   300,   301,     0,     0,   302,   303,     0,   305,
       0,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,     0,   318,   319,   320,   321,   322,   323,   324,
     325,   326,     0,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,     0,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
       0,   353,   354,     0,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,     0,
     371,   372,   373,   374,   375,     0,   376,   377,   378,   379,
     380,     0,   382,   383,   384,   385,     0,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   492,   398,
     399,     0,   400,   401,     0,   402,     0,   404,   405,   406,
     407,   408,     0,   409,   410,     0,     0,   411,   412,   413,
     414,   415,     0,   416,   417,   418,   419,   420,   421,   422,
     423,     0,     0,   424,   425,   426,   427,   428,     0,     0,
     429,   430,   431,   432,   433,   434,   435,     0,   436,     0,
     438,   439,   440,   441,     0,     0,   442,     0,     0,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     488,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    90,    91,    92,    93,
      94,    95,    96,    97,     0,    98,    99,   100,     0,     0,
       0,     0,     0,     0,     0,   101,   102,     0,   103,   104,
     105,     0,   107,   108,   109,   110,   111,     0,   113,   114,
       0,   115,   116,   117,   118,   119,   120,     0,     0,   121,
     122,   123,   124,   125,     0,   126,   127,   128,   129,   130,
       0,     0,     0,   132,   133,   134,   135,   136,     0,   138,
     139,   140,     0,   141,   142,   143,   144,   145,   146,     0,
       0,   148,   149,   150,     0,     0,     0,     0,     0,     0,
       0,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     161,     0,   162,     0,   163,   164,   165,   166,   167,   168,
       0,   169,   170,   171,   172,   173,     0,     0,   174,   175,
     176,   177,   178,     0,   179,   180,   181,     0,   182,   183,
     184,     0,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,     0,   195,     0,   196,   197,   198,   199,     0,
     200,     0,   201,     0,     0,     0,   204,   205,   206,     0,
     208,     0,   209,     0,   210,   211,     0,   212,   213,   214,
     215,   216,   217,     0,   219,   220,   221,   222,     0,   223,
     224,   225,   226,   227,   228,     0,   229,     0,   231,   232,
     233,   234,   235,   236,   237,     0,   238,     0,   239,     0,
       0,   242,     0,   244,   245,   246,   247,   248,     0,     0,
     249,     0,   251,     0,     0,   253,   254,   255,     0,     0,
     256,   257,   258,   259,   260,   490,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,     0,   282,   283,   284,   285,
     286,     0,   287,   288,     0,   290,     0,   291,   292,   293,
     294,   295,   296,     0,   297,   298,     0,     0,   299,   300,
     301,     0,     0,   302,   303,     0,   305,     0,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,     0,
     318,   319,   320,   321,   322,   323,   324,   325,   326,     0,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,     0,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,     0,   353,   354,
       0,   356,   357,   358,   359,   360,   361,   362,   363,   553,
     365,   366,   367,   368,   369,   370,     0,   371,   372,   373,
     374,   375,     0,   376,   377,   378,   379,   380,     0,   382,
     383,   384,   385,     0,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   492,   398,   399,     0,   400,
     401,     0,   402,     0,   404,   405,   406,   407,   408,     0,
     555,   410,     0,     0,   411,   412,   413,   414,   415,     0,
     416,   417,   418,   419,   420,   421,   422,   423,     0,     0,
     424,   425,   426,   427,   428,     0,     0,   429,   430,   431,
     432,   433,   434,   435,     0,   436,     0,   438,   439,   440,
     441,     0,     0,   442,     0,     0,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   488,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    90,    91,    92,    93,    94,    95,    96,
      97,     0,    98,    99,   100,     0,     0,     0,     0,     0,
       0,     0,   101,   102,     0,   103,   104,   105,     0,   107,
     108,   109,   110,   111,     0,   113,   114,     0,   115,   116,
     117,   118,   119,   120,     0,     0,   121,   122,   123,   124,
     125,     0,   126,   127,   128,   129,   130,     0,     0,     0,
     132,   133,   134,   135,   136,     0,   138,   139,   140,     0,
     141,   142,   143,   144,   145,   146,     0,     0,   148,   149,
     150,     0,     0,     0,     0,     0,     0,     0,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,     0,   162,
       0,   163,   164,   165,   166,   167,   168,     0,   169,   170,
     171,   172,   173,     0,     0,   174,   175,   176,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,     0,
     195,     0,   196,   197,   198,   199,     0,   200,     0,   201,
       0,     0,     0,   204,   205,   206,     0,   208,     0,   209,
       0,   210,   211,     0,   212,   213,   214,   215,   216,  1046,
       0,   219,   220,   221,   222,     0,   223,   224,   225,   226,
     227,   228,     0,   229,     0,   231,   232,   233,   234,   235,
     236,   237,     0,   238,     0,   239,     0,     0,   242,     0,
     244,   245,   246,   247,   248,     0,     0,   249,     0,   251,
       0,     0,   253,   254,   255,     0,     0,   256,   257,   258,
     259,   260,   490,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,     0,   282,   283,   284,   285,   286,     0,   287,
     288,     0,   290,     0,   291,   292,   293,   294,   295,   296,
       0,   297,   298,     0,     0,   299,   300,   301,     0,     0,
     302,   303,     0,   305,     0,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,     0,   318,   319,   320,
     321,   322,   323,   324,   325,   326,     0,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,     0,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,     0,   353,   354,     0,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,     0,   371,   372,   373,   374,   375,     0,
     376,   377,   378,   379,   380,     0,   382,   383,   384,   385,
       0,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   492,   398,   399,     0,   400,   401,     0,   402,
       0,   404,   405,   406,   407,   408,     0,   409,   410,     0,
       0,   411,   412,   413,   414,   415,     0,   416,   417,   418,
     419,   420,   421,   422,   423,     0,     0,   424,   425,   426,
     427,   428,     0,     0,   429,   430,   431,   432,   433,   434,
     435,     0,   436,     0,   438,   439,   440,   441,     0,     0,
     442,     0,     0,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   488,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      90,    91,    92,    93,    94,    95,    96,    97,     0,    98,
      99,   100,     0,     0,     0,     0,     0,     0,     0,   101,
     102,     0,   103,   104,   105,     0,   107,   108,   109,   110,
     111,     0,   113,   114,     0,   115,   116,   117,   118,   119,
     120,     0,     0,   121,   122,   123,   124,   125,     0,   126,
     127,   128,   129,   130,     0,     0,     0,   132,   133,   134,
     135,   136,     0,   138,   139,   140,     0,   141,   142,   143,
     144,   145,   146,     0,     0,   148,   149,   150,     0,     0,
       0,     0,     0,     0,     0,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   161,     0,   162,     0,   163,   164,
     165,   166,   167,   168,     0,   169,   170,   171,   172,   173,
       0,     0,   174,   175,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,     0,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,     0,   195,     0,   196,
     197,   198,   199,     0,   200,     0,   201,     0,     0,     0,
     204,   205,   206,     0,   208,     0,   209,     0,   210,   211,
       0,   212,   213,   214,   215,   216,  1048,     0,   219,   220,
     221,   222,     0,   223,   224,   225,   226,   227,   228,     0,
     229,     0,   231,   232,   233,   234,   235,   236,   237,     0,
     238,     0,   239,     0,     0,   242,     0,   244,   245,   246,
     247,   248,     0,     0,   249,     0,   251,     0,     0,   253,
     254,   255,     0,     0,   256,   257,   258,   259,   260,   490,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,     0,
     282,   283,   284,   285,   286,     0,   287,   288,     0,   290,
       0,   291,   292,   293,   294,   295,   296,     0,   297,   298,
       0,     0,   299,   300,   301,     0,     0,   302,   303,     0,
     305,     0,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,     0,   318,   319,   320,   321,   322,   323,
     324,   325,   326,     0,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,     0,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,     0,   353,   354,     0,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
       0,   371,   372,   373,   374,   375,     0,   376,   377,   378,
     379,   380,     0,   382,   383,   384,   385,     0,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   492,
     398,   399,     0,   400,   401,     0,   402,     0,   404,   405,
     406,   407,   408,     0,   409,   410,     0,     0,   411,   412,
     413,   414,   415,     0,   416,   417,   418,   419,   420,   421,
     422,   423,     0,     0,   424,   425,   426,   427,   428,     0,
       0,   429,   430,   431,   432,   433,   434,   435,     0,   436,
       0,   438,   439,   440,   441,     0,     0,   442,     0,     0,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   488,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    90,    91,    92,
      93,    94,    95,    96,    97,     0,    98,    99,   100,     0,
       0,     0,     0,     0,  1298,     0,   101,   102,     0,   103,
     104,   105,     0,   107,   108,   109,   110,   111,     0,   113,
     114,     0,   115,   116,   117,   118,   119,   120,     0,     0,
     121,   122,   123,   124,   125,     0,   126,   127,   128,   129,
     130,     0,     0,     0,   132,   133,   134,   135,   136,     0,
     138,   139,   140,     0,   141,   142,   143,   144,   145,   146,
       0,     0,   148,   149,   150,     0,     0,     0,     0,     0,
       0,     0,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   161,     0,   162,     0,   163,   164,   165,   166,   167,
     168,     0,   169,   170,   171,   172,   173,     0,     0,   174,
     175,   176,   177,   178,     0,   179,   180,   181,     0,   182,
     183,   184,     0,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,     0,   195,     0,   196,   197,   198,   199,
       0,   200,     0,   201,     0,     0,     0,   204,   205,   206,
       0,   208,     0,   209,     0,   210,   211,     0,   212,   213,
     214,   215,   216,   217,     0,   219,   220,   221,   222,     0,
     223,   224,   225,   226,   227,   228,     0,   229,     0,   231,
     232,   233,   234,   235,   236,   237,     0,   238,     0,   239,
       0,     0,   242,     0,   244,   245,   246,   247,   248,     0,
       0,   249,     0,   251,     0,     0,   253,   254,   255,     0,
       0,   256,   257,   258,   259,   260,   490,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,     0,   282,   283,   284,
     285,   286,     0,   287,   288,     0,   290,     0,   291,   292,
     293,   294,   295,   296,     0,   297,   298,     0,     0,   299,
     300,   301,     0,     0,   302,   303,     0,   305,     0,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
       0,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,     0,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,     0,   353,
     354,     0,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,     0,   371,   372,
     373,   374,   375,     0,     0,   377,   378,   379,   380,     0,
     382,   383,   384,   385,     0,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   492,   398,   399,     0,
     400,   401,     0,   402,     0,   404,   405,   406,   407,   408,
       0,   409,   410,     0,     0,   411,   412,   413,   414,   415,
       0,   416,   417,   418,   419,   420,   421,   422,   423,     0,
       0,   424,   425,   426,   427,   428,     0,     0,   429,   430,
     431,   432,   433,   434,   435,     0,   436,     0,   438,   439,
     440,   441,     0,     0,   442,     0,     0,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   488,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    90,    91,    92,    93,    94,    95,
      96,    97,     0,    98,    99,   100,     0,     0,     0,     0,
       0,     0,     0,   101,   102,     0,   103,   104,   105,     0,
     107,   108,   109,   110,   111,     0,   113,   114,     0,   115,
     116,   117,   118,   119,   120,     0,     0,   121,   122,   123,
     124,   125,     0,   126,   127,   128,   129,   130,     0,     0,
       0,   132,   133,   134,   135,   136,     0,   138,   139,   140,
       0,   141,   142,   143,   144,   145,   146,     0,     0,   148,
     149,   150,     0,     0,     0,     0,     0,     0,     0,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   161,     0,
     162,     0,   163,   164,   165,   166,   167,   168,     0,   169,
     170,   171,   172,   173,     0,     0,   174,   175,   176,   177,
     178,     0,   179,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
       0,   195,     0,   196,   197,   198,   199,     0,   200,     0,
     201,     0,     0,     0,   204,   205,   206,     0,   208,     0,
     209,     0,   210,   211,     0,   212,   213,   214,   215,   216,
    1431,     0,   219,   220,   221,   222,     0,   223,   224,   225,
     226,   227,   228,     0,   229,     0,   231,   232,   233,   234,
     235,   236,   237,     0,   238,     0,   239,     0,     0,   242,
       0,   244,   245,   246,   247,   248,     0,     0,   249,     0,
     251,     0,     0,   253,   254,   255,     0,     0,   256,   257,
     258,   259,   260,   490,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,     0,   282,   283,   284,   285,   286,     0,
     287,   288,     0,   290,     0,   291,   292,   293,   294,   295,
     296,     0,   297,   298,     0,     0,   299,   300,   301,     0,
       0,   302,   303,     0,   305,     0,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,     0,   318,   319,
     320,   321,   322,   323,   324,   325,   326,     0,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,     0,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,     0,   353,   354,     0,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,     0,   371,   372,   373,   374,   375,
       0,   376,   377,   378,   379,   380,     0,   382,   383,   384,
     385,     0,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   492,   398,   399,     0,   400,   401,     0,
     402,     0,   404,   405,   406,   407,   408,     0,   409,   410,
       0,     0,   411,   412,   413,   414,   415,     0,   416,   417,
     418,   419,   420,   421,   422,   423,     0,     0,   424,   425,
     426,   427,   428,     0,     0,   429,   430,   431,   432,   433,
     434,   435,     0,   436,     0,   438,   439,   440,   441,     0,
       0,   442,     0,     0,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   488,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    90,    91,    92,    93,    94,    95,    96,    97,     0,
      98,    99,   100,     0,     0,     0,     0,     0,     0,     0,
     101,   102,     0,   103,   104,   105,     0,   107,   108,   109,
     110,   111,     0,   113,   114,     0,   115,   116,   117,   118,
     119,   120,     0,     0,   121,   122,   123,   124,   125,     0,
     126,   127,   128,   129,   130,     0,     0,     0,   132,   133,
     134,   135,   136,     0,   138,   139,   140,     0,   141,   142,
     143,   144,   145,   146,     0,     0,   148,   149,   150,     0,
       0,     0,     0,     0,     0,     0,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   161,     0,   162,     0,   163,
     164,   165,   166,   167,   168,     0,   169,   170,   171,   172,
     173,     0,     0,   174,   175,   176,   177,   178,     0,   179,
     180,   181,     0,   182,   183,   184,     0,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,     0,   195,     0,
     196,   197,   198,   199,     0,   200,     0,   201,     0,     0,
       0,   204,   205,   206,     0,   208,     0,   209,     0,   210,
     211,     0,   212,   213,   214,   215,   216,  1444,     0,   219,
     220,   221,   222,     0,   223,   224,   225,   226,   227,   228,
       0,   229,     0,   231,   232,   233,   234,   235,   236,   237,
       0,   238,     0,   239,     0,     0,   242,     0,   244,   245,
     246,   247,   248,     0,     0,   249,     0,   251,     0,     0,
     253,   254,   255,     0,     0,   256,   257,   258,   259,   260,
     490,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
       0,   282,   283,   284,   285,   286,     0,   287,   288,     0,
     290,     0,   291,   292,   293,   294,   295,   296,     0,   297,
     298,     0,     0,   299,   300,   301,     0,     0,   302,   303,
       0,   305,     0,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,     0,   318,   319,   320,   321,   322,
     323,   324,   325,   326,     0,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,     0,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,     0,   353,   354,     0,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,     0,   371,   372,   373,   374,   375,     0,   376,   377,
     378,   379,   380,     0,   382,   383,   384,   385,     0,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     492,   398,   399,     0,   400,   401,     0,   402,     0,   404,
     405,   406,   407,   408,     0,   409,   410,     0,     0,   411,
     412,   413,   414,   415,     0,   416,   417,   418,   419,   420,
     421,   422,   423,     0,     0,   424,   425,   426,   427,   428,
       0,     0,   429,   430,   431,   432,   433,   434,   435,     0,
     436,     0,   438,   439,   440,   441,     0,     0,   442,     0,
       0,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   488,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    90,    91,
      92,    93,    94,    95,    96,    97,     0,    98,    99,   100,
       0,     0,     0,     0,     0,     0,     0,   101,   102,     0,
     103,   104,   105,     0,   107,   108,   109,   110,   111,     0,
     113,   114,     0,   115,   116,   117,   118,   119,   120,     0,
       0,   121,   122,   123,   124,   125,     0,   126,   127,   128,
     129,   130,     0,     0,     0,   132,   133,   134,   135,   136,
       0,   138,   139,   140,     0,   141,   142,   143,   144,   145,
     146,     0,     0,   148,   149,   150,     0,     0,     0,     0,
       0,     0,     0,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   161,     0,   162,     0,   163,   164,   165,   166,
     167,   168,     0,   169,   170,   171,   172,   173,     0,     0,
     174,   175,   176,   177,   178,     0,   179,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   194,     0,   195,     0,   196,   197,   198,
     199,     0,   200,     0,   201,     0,     0,     0,   204,   205,
     206,     0,   208,     0,   209,     0,   210,   211,     0,   212,
     213,   214,   215,   216,  1715,     0,   219,   220,   221,   222,
       0,   223,   224,   225,   226,   227,   228,     0,   229,     0,
     231,   232,   233,   234,   235,   236,   237,     0,   238,     0,
     239,     0,     0,   242,     0,   244,   245,   246,   247,   248,
       0,     0,   249,     0,   251,     0,     0,   253,   254,   255,
       0,     0,   256,   257,   258,   259,   260,   490,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,     0,   282,   283,
     284,   285,   286,     0,   287,   288,     0,   290,     0,   291,
     292,   293,   294,   295,   296,     0,   297,   298,     0,     0,
     299,   300,   301,     0,     0,   302,   303,     0,   305,     0,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,     0,   318,   319,   320,   321,   322,   323,   324,   325,
     326,     0,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,     0,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,     0,
     353,   354,     0,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,     0,   371,
     372,   373,   374,   375,     0,   376,   377,   378,   379,   380,
       0,   382,   383,   384,   385,     0,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   492,   398,   399,
       0,   400,   401,     0,   402,     0,   404,   405,   406,   407,
     408,     0,   409,   410,     0,     0,   411,   412,   413,   414,
     415,     0,   416,   417,   418,   419,   420,   421,   422,   423,
       0,     0,   424,   425,   426,   427,   428,     0,     0,   429,
     430,   431,   432,   433,   434,   435,     0,   436,     0,   438,
     439,   440,   441,     0,     0,   442,     0,     0,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   488,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    90,    91,    92,    93,    94,
      95,    96,    97,     0,    98,    99,   100,     0,     0,     0,
       0,     0,     0,     0,   101,   102,     0,   103,   104,   105,
       0,   107,   108,   109,   110,   111,     0,   113,   114,     0,
     115,   116,   117,   118,   119,   120,     0,     0,   121,   122,
     123,   124,   125,     0,   126,   127,   128,   129,   130,     0,
       0,     0,   132,   133,   134,   135,   136,     0,   138,   139,
     140,     0,   141,   142,   143,   144,   145,   146,     0,     0,
     148,   149,   150,     0,     0,     0,     0,     0,     0,     0,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   161,
       0,   162,     0,   163,   164,   165,   166,   167,   168,     0,
     169,   170,   171,   172,   173,     0,     0,   174,   175,   176,
     177,   178,     0,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,     0,   195,     0,   196,   197,   198,   199,     0,   200,
       0,   201,     0,     0,     0,   204,   205,   206,     0,   208,
       0,   209,     0,   210,   211,     0,   212,   213,   214,   215,
     216,  1727,     0,   219,   220,   221,   222,     0,   223,   224,
     225,   226,   227,   228,     0,   229,     0,   231,   232,   233,
     234,   235,   236,   237,     0,   238,     0,   239,     0,     0,
     242,     0,   244,   245,   246,   247,   248,     0,     0,   249,
       0,   251,     0,     0,   253,   254,   255,     0,     0,   256,
     257,   258,   259,   260,   490,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,     0,   282,   283,   284,   285,   286,
       0,   287,   288,     0,   290,     0,   291,   292,   293,   294,
     295,   296,     0,   297,   298,     0,     0,   299,   300,   301,
       0,     0,   302,   303,     0,   305,     0,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,     0,   318,
     319,   320,   321,   322,   323,   324,   325,   326,     0,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,     0,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,     0,   353,   354,     0,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,     0,   371,   372,   373,   374,
     375,     0,   376,   377,   378,   379,   380,     0,   382,   383,
     384,   385,     0,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   492,   398,   399,     0,   400,   401,
       0,   402,     0,   404,   405,   406,   407,   408,     0,   409,
     410,     0,     0,   411,   412,   413,   414,   415,     0,   416,
     417,   418,   419,   420,   421,   422,   423,     0,     0,   424,
     425,   426,   427,   428,     0,     0,   429,   430,   431,   432,
     433,   434,   435,     0,   436,     0,   438,   439,   440,   441,
       0,     0,   442,     0,     0,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   488,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    90,    91,    92,    93,    94,    95,    96,    97,
       0,    98,    99,   100,     0,     0,     0,     0,     0,     0,
       0,   101,   102,     0,   103,   104,   105,     0,   107,   108,
     109,   110,   111,     0,   113,   114,     0,   115,   116,   117,
     118,   119,   120,     0,     0,   121,   122,   123,   124,   125,
       0,   126,   127,   128,   129,   130,     0,     0,     0,   132,
     133,   134,   135,   136,     0,   138,   139,   140,     0,   141,
     142,   143,   144,   145,   146,     0,     0,   148,   149,   150,
       0,     0,     0,     0,     0,     0,     0,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,     0,   162,     0,
     163,   164,   165,   166,   167,   168,     0,   169,   170,   171,
     172,   173,     0,     0,   174,   175,   176,   177,   178,     0,
     179,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   194,     0,   195,
       0,   196,   197,   198,   199,     0,   200,     0,   201,     0,
       0,     0,   204,   205,   206,     0,   208,     0,   209,     0,
     210,   211,     0,   212,   213,   214,   215,   216,  1729,     0,
     219,   220,   221,   222,     0,   223,   224,   225,   226,   227,
     228,     0,   229,     0,   231,   232,   233,   234,   235,   236,
     237,     0,   238,     0,   239,     0,     0,   242,     0,   244,
     245,   246,   247,   248,     0,     0,   249,     0,   251,     0,
       0,   253,   254,   255,     0,     0,   256,   257,   258,   259,
     260,   490,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,     0,   282,   283,   284,   285,   286,     0,   287,   288,
       0,   290,     0,   291,   292,   293,   294,   295,   296,     0,
     297,   298,     0,     0,   299,   300,   301,     0,     0,   302,
     303,     0,   305,     0,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,     0,   318,   319,   320,   321,
     322,   323,   324,   325,   326,     0,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
       0,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,     0,   353,   354,     0,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,     0,   371,   372,   373,   374,   375,     0,   376,
     377,   378,   379,   380,     0,   382,   383,   384,   385,     0,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   492,   398,   399,     0,   400,   401,     0,   402,     0,
     404,   405,   406,   407,   408,     0,   409,   410,     0,     0,
     411,   412,   413,   414,   415,     0,   416,   417,   418,   419,
     420,   421,   422,   423,     0,     0,   424,   425,   426,   427,
     428,     0,     0,   429,   430,   431,   432,   433,   434,   435,
       0,   436,     0,   438,   439,   440,   441,     0,     0,   442,
       0,     0,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   488,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    90,
      91,    92,    93,    94,    95,    96,    97,     0,    98,    99,
     100,     0,     0,     0,     0,     0,     0,     0,   101,   102,
       0,   103,   104,   105,     0,   107,   108,   109,   110,   111,
       0,   113,   114,     0,   115,   116,   117,   118,   119,   120,
       0,     0,   121,   122,   123,   124,   125,     0,   126,   127,
     128,   129,   130,     0,     0,     0,   132,   133,   134,   135,
     136,     0,   138,   139,   140,     0,   141,   142,   143,   144,
     145,   146,     0,     0,   148,   149,   150,     0,     0,     0,
       0,     0,     0,     0,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   161,     0,   162,     0,   163,   164,   165,
     166,   167,   168,     0,   169,   170,   171,   172,   173,     0,
       0,   174,   175,   176,   177,   178,     0,   179,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,     0,   195,     0,   196,   197,
     198,   199,     0,   200,     0,   201,     0,     0,     0,   204,
     205,   206,     0,   208,     0,   209,     0,   210,   211,     0,
     212,   213,   214,   215,   216,  2343,     0,   219,   220,   221,
     222,     0,   223,   224,   225,   226,   227,   228,     0,   229,
       0,   231,   232,   233,   234,   235,   236,   237,     0,   238,
       0,   239,     0,     0,   242,     0,   244,   245,   246,   247,
     248,     0,     0,   249,     0,   251,     0,     0,   253,   254,
     255,     0,     0,   256,   257,   258,   259,   260,   490,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,     0,   282,
     283,   284,   285,   286,     0,   287,   288,     0,   290,     0,
     291,   292,   293,   294,   295,   296,     0,   297,   298,     0,
       0,   299,   300,   301,     0,     0,   302,   303,     0,   305,
       0,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,     0,   318,   319,   320,   321,   322,   323,   324,
     325,   326,     0,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,     0,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
       0,   353,   354,     0,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,     0,
     371,   372,   373,   374,   375,     0,   376,   377,   378,   379,
     380,     0,   382,   383,   384,   385,     0,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   492,   398,
     399,     0,   400,   401,     0,   402,     0,   404,   405,   406,
     407,   408,     0,   409,   410,     0,     0,   411,   412,   413,
     414,   415,     0,   416,   417,   418,   419,   420,   421,   422,
     423,     0,     0,   424,   425,   426,   427,   428,     0,     0,
     429,   430,   431,   432,   433,   434,   435,     0,   436,     0,
     438,   439,   440,   441,     0,     0,   442,     0,     0,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
    1100,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    90,    91,    92,    93,
      94,    95,    96,    97,     0,    98,    99,   100,     0,     0,
       0,     0,     0,     0,     0,   101,   102,     0,   103,   104,
     105,  1101,   107,   108,   109,     0,  1102,  1103,  1104,  1105,
       0,   115,   116,   117,   118,   119,   120,     0,     0,   121,
     122,  1106,  1107,   125,     0,   126,   127,   128,   129,     0,
       0,  1108,     0,   132,   133,   134,   135,   136,  1109,   138,
     139,   140,     0,   141,   142,   143,   144,   145,   146,     0,
    1110,   148,   149,   150,     0,     0,     0,  1111,     0,     0,
       0,   152,   153,   154,   155,   156,   157,   158,  1112,  1113,
     161,     0,   162,     0,   163,   164,   165,   166,   167,   168,
       0,   169,   170,   171,   172,   173,     0,     0,   174,   175,
     748,   177,   178,     0,   179,   180,   181,     0,   182,   183,
     184,     0,   185,   186,   187,   188,     0,   190,   191,   192,
     193,     0,     0,   195,     0,   196,   197,  1114,   199,     0,
     200,     0,   201,  1115,     0,  1116,   204,   205,   206,  1117,
     208,     0,   209,     0,     0,   211,     0,   212,   213,   214,
     215,   216,   217,  1118,   219,   220,   221,   222,     0,   223,
     224,   225,   226,   227,   228,     0,   229,  1119,     0,   232,
     233,   234,   235,  1120,  1121,     0,  1122,     0,   239,  1123,
    1124,   242,  1125,   244,   245,   246,   247,   248,     0,     0,
     249,  1126,   251,  1127,     0,   253,   254,   255,     0,     0,
     256,   257,   258,   259,   260,  1128,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,  1129,  1130,  1131,   283,   284,   285,
       0,     0,   287,   288,  1132,   290,     0,     0,   292,  1133,
     294,   295,   296,     0,   297,   298,     0,     0,   299,   300,
     301,     0,     0,   302,     0,  1134,   305,  1135,     0,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,     0,
     318,   319,     0,   321,   322,     0,   324,   325,   326,     0,
     327,   328,   329,   330,   331,   332,   333,   334,   335,  1136,
     337,   338,   339,   340,     0,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,     0,   353,   354,
    1137,   356,   357,   358,  1138,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,     0,   371,   372,   373,
     374,   375,     0,   376,  1139,   378,   379,   380,  1140,   382,
     383,  1141,   385,     0,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,  1142,   398,     0,     0,   400,
     401,     0,   402,  1143,   404,   405,   406,   407,   408,     0,
    1144,  1145,     0,     0,   411,   412,     0,   414,     0,     0,
     416,   417,  1146,   419,   420,   421,   422,   423,     0,     0,
     424,   425,   426,   427,   428,     0,     0,   429,   430,   431,
     432,   433,     0,  1147,     0,   436,  1148,   438,   439,   440,
     441,     0,     0,   442,     0,     0,   443,   444,   445,   446,
     447,   448,   488,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   460,   461,   462,   463,     0,    90,    91,
      92,    93,    94,    95,    96,    97,     0,    98,    99,   100,
       0,     0,     0,     0,     0,     0,     0,   101,   102,     0,
     103,   104,   105,     0,   107,   108,   109,   110,   111,     0,
     113,   114,     0,   115,   116,   117,   118,   119,   120,     0,
       0,   121,   122,   123,   124,   125,     0,   126,   127,   128,
     129,   130,     0,     0,     0,   132,   133,   134,   135,   136,
       0,   138,   139,   140,     0,   141,   142,   143,   144,   145,
     146,     0,     0,   148,   149,   150,     0,     0,     0,     0,
       0,     0,     0,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   161,     0,   162,     0,   163,   164,   165,   166,
     167,   168,     0,   169,   170,   171,   172,   173,     0,     0,
     174,   175,   176,   177,   178,     0,   179,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   194,     0,   195,     0,   196,   197,   198,
     199,     0,   200,     0,   201,     0,     0,     0,   204,   205,
     206,     0,   208,     0,   209,     0,   210,   211,     0,   212,
     213,   214,   215,   216,   217,     0,   219,   220,   221,   222,
       0,   223,   224,   225,   226,   227,   228,     0,   229,     0,
     231,   232,   233,   234,   235,   236,   237,     0,   238,     0,
     239,     0,     0,   242,     0,   244,   245,   246,   247,   248,
       0,     0,   249,     0,   251,     0,     0,   253,   254,   255,
       0,     0,   256,   257,   258,   259,   260,   490,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,     0,   282,   283,
     284,   285,   286,     0,   287,   288,     0,   290,     0,   291,
     292,   293,   294,   295,   296,     0,   297,   298,     0,     0,
     299,   300,   301,     0,     0,   302,   303,     0,   305,     0,
     307,   308,   309,   310,   311,   312,   313,     0,   315,   316,
     317,     0,   318,   319,   320,   321,   322,   323,   324,   325,
     326,     0,   327,   328,   329,   330,   331,   332,   333,     0,
     335,   336,   337,   338,   339,   340,     0,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,     0,
     353,   354,     0,   356,   357,   358,   359,     0,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,     0,   371,
     372,   373,   374,   375,     0,   376,   377,   378,   379,   380,
       0,   382,   383,   384,   385,     0,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   492,   398,   399,
       0,   400,   401,     0,   402,     0,   404,   405,   406,   407,
     408,     0,   409,   410,     0,     0,   411,   412,   413,   414,
     415,     0,   416,   417,   418,   419,   420,   421,   422,   423,
       0,     0,   424,   425,   426,   427,   428,     0,     0,   429,
     430,   431,   432,   433,   434,   435,     0,   436,     0,   438,
     439,   440,   441,     0,     0,   442,     0,     0,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,  2285,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    90,    91,    92,    93,    94,
      95,    96,    97,     0,    98,    99,   100,     0,     0,     0,
       0,     0,     0,     0,   101,   102,     0,   103,   104,   105,
    2286,   107,   108,   109,     0,  1102,  2287,  1104,  1105,     0,
     115,   116,   117,   118,   119,   120,     0,     0,   121,   122,
    1106,  1107,   125,     0,   126,   127,   128,   129,     0,     0,
    2288,     0,   132,   133,   134,   135,   136,  2289,   138,   139,
     140,     0,   141,   142,   143,   144,   145,   146,     0,  2290,
     148,   149,   150,     0,     0,     0,  2291,     0,     0,     0,
     152,   153,   154,   155,   156,   157,   158,  1112,  1113,   161,
       0,   162,     0,   163,   164,   165,   166,   167,   168,     0,
     169,   170,   171,   172,   173,     0,     0,   174,   175,   748,
     177,   178,     0,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,   188,     0,   190,   191,   192,   193,
       0,     0,   195,     0,   196,   197,  1114,   199,     0,   200,
       0,   201,  2292,     0,  2293,   204,   205,   206,  2294,   208,
       0,   209,     0,     0,   211,     0,   212,   213,   214,   215,
     216,   217,  2295,   219,   220,   221,   222,     0,   223,   224,
     225,   226,   227,   228,     0,   229,  2296,     0,   232,   233,
     234,   235,  1120,  1121,     0,  1122,     0,   239,  2297,  2298,
     242,  2299,   244,   245,   246,   247,   248,     0,     0,   249,
    2300,   251,  2301,     0,   253,   254,   255,     0,     0,   256,
     257,   258,   259,   260,  2488,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,  1129,  2303,  1131,   283,   284,   285,     0,
       0,   287,   288,  2305,   290,     0,     0,   292,  1133,   294,
     295,   296,     0,   297,   298,     0,     0,   299,   300,   301,
       0,     0,   302,     0,  2307,   305,  2308,     0,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,     0,   318,
     319,     0,   321,   322,     0,   324,   325,   326,     0,   327,
     328,   329,   330,   331,   332,   333,   334,   335,  1136,   337,
     338,   339,   340,     0,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,     0,   353,   354,  2309,
     356,   357,   358,     0,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,     0,   371,   372,   373,   374,
     375,     0,   376,     0,   378,   379,   380,  2311,   382,   383,
    1141,   385,     0,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,  2489,   398,     0,     0,   400,   401,
       0,   402,  2313,   404,   405,   406,   407,   408,     0,  1144,
    1145,     0,     0,   411,   412,     0,   414,     0,     0,   416,
     417,  2314,   419,   420,   421,   422,   423,     0,     0,   424,
     425,   426,   427,   428,     0,     0,   429,   430,   431,   432,
     433,     0,  1147,     0,   436,  2315,   438,   439,   440,   441,
       0,     0,   442,     0,     0,   443,   444,   445,   446,   447,
     448,  1100,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   460,   461,   462,   463,     0,    90,    91,    92,
      93,    94,    95,    96,    97,     0,    98,    99,   100,     0,
       0,     0,     0,     0,     0,     0,   101,   102,     0,   103,
     104,   105,  1101,   107,   108,   109,     0,  1102,  1103,  1104,
    1105,     0,   115,   116,   117,   118,   119,   120,     0,     0,
     121,   122,  1106,  1107,   125,     0,   126,   127,   128,   129,
       0,     0,  1108,     0,   132,   133,   134,   135,   136,  1109,
     138,   139,   140,     0,   141,   142,   143,   144,   145,   146,
       0,  1110,   148,   149,   150,     0,     0,     0,  1111,     0,
       0,     0,   152,   153,   154,   155,   156,   157,   158,  1112,
    1113,   161,     0,   162,     0,   163,   164,   165,   166,   167,
     168,     0,   169,   170,   171,   172,   173,     0,     0,   174,
     175,   748,   177,   178,     0,   179,   180,   181,     0,   182,
     183,   184,     0,   185,   186,   187,   188,     0,   190,   191,
     192,   193,     0,     0,   195,     0,   196,   197,  1114,   199,
       0,   200,     0,   201,  1115,     0,  1116,   204,   205,   206,
    1117,   208,     0,   209,     0,     0,   211,     0,   212,   213,
     214,   215,   216,   217,  1118,   219,   220,   221,   222,     0,
     223,   224,   225,   226,   227,   228,     0,   229,  1119,     0,
     232,   233,   234,   235,  1120,  1121,     0,  1122,     0,   239,
    1123,  1124,   242,  1125,   244,   245,   246,   247,   248,     0,
       0,   249,  1126,   251,  1127,     0,   253,   254,   255,     0,
       0,   256,   257,   258,   259,   260,     0,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,  1129,  1130,  1131,   283,   284,
     285,     0,     0,   287,   288,  1132,   290,     0,     0,   292,
    1133,   294,   295,   296,     0,   297,   298,     0,     0,   299,
     300,   301,     0,     0,   302,     0,  1134,   305,  1135,     0,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
       0,   318,   319,     0,   321,   322,     0,   324,   325,   326,
       0,   327,   328,   329,   330,   331,   332,   333,   334,   335,
    1136,   337,   338,   339,   340,     0,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,     0,   353,
     354,  1137,   356,   357,   358,     0,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,     0,   371,   372,
     373,   374,   375,     0,   376,     0,   378,   379,   380,  1140,
     382,   383,  1141,   385,     0,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,     0,   398,     0,     0,
     400,   401,     0,   402,  1143,   404,   405,   406,   407,   408,
       0,  1144,  1145,     0,     0,   411,   412,     0,   414,     0,
       0,   416,   417,  1146,   419,   420,   421,   422,   423,     0,
       0,   424,   425,   426,   427,   428,     0,     0,   429,   430,
     431,   432,   433,     0,  1147,     0,   436,  1148,   438,   439,
     440,   441,     0,     0,   442,     0,     0,   443,   444,   445,
     446,   447,   448,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   460,   461,   462,   463
};

static const yytype_int16 yycheck[] =
{
       6,     6,   603,    34,   610,   518,   524,   618,    56,   901,
     567,   551,   517,   709,     0,     0,     0,     6,   588,   715,
    1198,   645,   709,   612,   709,   887,   899,   563,    16,   874,
     773,    16,     0,   785,  1656,  1044,  1725,  1044,   522,   879,
       0,  1044,  1044,   876,  1227,   940,    58,  1074,    29,  1731,
    1471,  1733,   870,  2045,  1997,  1200,  1187,  2069,     0,  1187,
    2045,    58,  1223,  1224,   603,  1187,   605,  1187,   607,  1722,
    1676,   904,   523,  1613,  2077,   524,    33,   716,     9,  1956,
       9,     0,  2084,  1166,     0,     5,    11,    50,     5,     9,
       3,  1962,   649,     5,  1273,  2347,    13,    14,     5,    73,
    1321,   797,     5,     5,     5,    86,     5,     5,     5,    13,
      14,    13,    14,     5,    13,    14,    76,     0,    31,    32,
       5,    13,    14,   168,   820,     5,   822,   823,    13,    14,
      58,  1653,  1066,    16,   167,   820,  2350,  2353,  1791,   623,
     116,  1554,  1555,   529,  2424,  1667,  1559,     5,    58,  1319,
     106,    34,     5,     5,   119,     5,     5,     9,     5,  2339,
      48,     5,    67,    58,  1309,     5,     5,  1350,    58,  1986,
      15,    40,   585,    92,   136,    58,    92,     4,    11,  1832,
    1833,   585,     9,  1596,  1597,  2492,    11,   236,     3,     4,
       5,   709,   888,    76,     9,   891,   892,   715,    11,    40,
    1961,   173,   301,   888,    27,  2521,   891,   892,    41,   236,
     277,    34,   285,   279,  1898,    27,    41,   285,   210,   119,
     161,    75,    34,   167,   301,   121,   144,   784,    41,  2324,
    2613,    85,     4,   114,   106,   265,  2577,     9,   827,   204,
      73,   347,   325,   116,   268,  2678,   359,    27,    73,   348,
     786,   144,  2272,   166,    34,   168,    75,   116,   230,   164,
      73,   712,    93,   129,   157,   445,    85,  2016,    37,   162,
     248,   249,    27,   912,  2736,    27,  2738,  1139,   814,  2559,
     919,   394,   159,    11,   172,   117,   157,   117,  2761,    20,
     208,  2507,   407,    11,   429,   146,   475,   159,   186,   114,
      11,   450,   107,   191,   822,   823,   475,   429,   448,   488,
     490,    30,   869,    11,  1871,   208,   107,   486,  2310,    23,
    1503,  2704,   435,   472,  2195,   352,  2015,  2204,   841,  1869,
      41,  2208,   472,  2345,   227,    54,   451,   168,   226,   198,
    2089,   192,  1899,   220,  2777,    73,  2808,    23,    68,   373,
    2823,   486,   262,    29,   123,   187,   227,   187,   441,  2012,
     279,  2014,    73,   279,   486,     5,   307,   285,   487,   200,
     746,   490,    76,   486,   129,   945,   425,   129,   356,   357,
     486,    59,   481,   276,   215,  1081,  1082,   763,   269,    67,
     262,  2732,   285,   224,   209,  2490,   269,   427,   425,   261,
     167,   486,  1145,   262,   481,   264,   168,   312,   274,  1554,
    1555,   339,  2795,  1052,  1559,   230,   119,   490,     0,   486,
     486,   340,   490,  2240,   340,   236,   398,   258,   400,   339,
    2610,   134,  1954,  2194,  1956,  1613,  2743,   486,   394,  2719,
    1051,   486,  2462,  2759,   339,   290,  2099,  2131,   279,   339,
     836,  1596,  1597,   425,   867,   431,   366,   490,   134,   486,
    1066,   405,   427,   867,  1877,  1878,  1879,  1880,   489,  1690,
    1883,  1884,  1885,  1886,  1887,  1888,  1889,  1890,  1891,  1892,
     383,   384,   444,   371,  1180,  1181,  1092,   473,   473,   473,
    2706,  2705,  1188,   524,  1190,  1191,  1341,  1658,   490,  1678,
    2492,  2753,  1397,   421,  1438,   473,  1684,  2492,  1929,  1205,
     484,  1207,   343,   473,   488,    13,    14,   422,   524,  1689,
    1933,  1934,   391,   486,   490,  1221,   439,   427,   421,   448,
    1422,  2402,   448,   429,  2411,   297,   524,   438,   523,  2416,
     588,   352,  2419,   450,   550,   551,   157,    92,   477,   478,
     391,   405,   230,   376,   485,  1068,  1061,   482,  1076,  1064,
    2249,   567,   490,   575,   376,   472,   486,  1072,   487,   486,
     489,   487,   484,   489,   486,  1470,   488,   565,   575,   486,
    2262,  1170,   486,  1666,   486,   486,   405,   486,   486,   486,
     473,   577,   577,   577,   486,   490,   376,   450,   429,   580,
    2612,   486,   608,   609,   610,   439,   486,   283,   311,   577,
     372,   568,  1169,  2616,   425,  2617,   227,   577,  1801,   472,
     320,  1178,  1318,  1319,  1075,  1182,  1232,  1076,   486,  1218,
    1219,  1270,  2238,   486,   486,   577,   486,   486,   405,   486,
     523,   524,   486,   649,  1201,  1202,   486,   486,   348,   482,
     477,   478,   477,   478,   479,   480,   481,   482,  1841,    64,
      65,   337,   477,   478,   162,   276,   479,   480,   481,   482,
      31,    32,   486,  1856,  1370,   486,   448,  2554,   393,  1215,
     335,   236,  2204,  1272,  1380,  1370,  2208,  1383,  2341,   236,
     366,  1869,   575,  1876,   577,  1380,   236,   114,  1383,  2711,
     472,   194,  2242,   709,    82,   477,   478,   157,   475,   715,
     716,   717,   162,   428,   243,  1846,  1847,  1848,  1846,  1847,
     410,   488,  1905,   114,  1846,  1845,   732,   712,   441,  1912,
    1235,    92,  1877,  1878,  1879,  1880,   355,  1113,  1883,  1884,
    1885,  1886,  1887,  1888,  1889,  1890,  1891,  1892,   126,   486,
    2171,  2743,  1358,   784,   760,  1916,   432,  1133,  2743,  1455,
    2449,   479,   480,   481,   482,  1366,  1793,   105,  1455,  2447,
    1455,  2401,  1468,   469,   780,   781,   782,   227,   784,   477,
     478,   479,   480,   481,   482,   129,   214,  1163,  1933,  1934,
    2468,   236,    75,   184,   347,   348,  1492,   352,    23,   805,
    1339,   532,    85,   534,    29,   352,   338,   486,  2438,    11,
    2822,  1435,   352,    15,   359,  1439,   822,   823,  1442,   448,
      22,   450,   553,  1393,  1394,  1395,   276,  1366,  1580,   712,
      32,    33,  1438,   264,   366,  2778,  2779,    75,   269,     4,
     852,   853,  1660,   855,     9,   488,  1385,    85,   854,   394,
     450,  1390,   858,   859,   292,   852,   853,  1749,   855,     4,
     279,   481,  2045,   869,     9,   846,   749,  2045,   488,   479,
     425,  1376,   472,   264,   450,   292,  1381,  1772,   425,  2401,
     481,   887,    84,  2826,   469,   425,   486,   488,   319,  2411,
     435,  2521,   166,  2582,  2416,    23,   472,  2419,   734,   735,
     582,   784,   584,   448,   242,  2587,   912,   352,   487,   134,
     486,   490,   250,   919,    27,   194,  2438,   129,   296,  2597,
     264,   359,   903,   759,  1757,    13,    14,   472,  1680,  1413,
     274,   486,   484,   490,   940,     5,   488,  1455,     8,   486,
     486,   486,   359,   155,    14,   216,   486,     4,     4,   168,
    1468,  1508,     9,     9,    24,  2376,   394,   487,    28,     6,
    2373,  1657,  1802,   216,    11,    78,   487,  1807,    15,   852,
     853,   167,   855,    86,    21,    22,    23,   394,   709,    26,
     425,   200,    29,  1460,   715,    32,    33,  1464,   552,  1466,
     554,   262,  1688,  1689,    23,   210,   215,   435,   359,  2521,
      29,  1572,   115,  1574,  1575,   224,   134,    13,    14,   262,
     448,   484,  2642,   486,     8,   488,  1573,    11,   435,    23,
      23,   399,    16,    17,    18,    29,    29,   182,   183,    76,
     157,   448,  2554,   394,   472,   162,    83,    84,    85,    86,
      87,   486,    13,    14,  1601,  2675,  1052,  2460,   486,    54,
     321,   487,  2674,   486,   490,   472,   787,   269,   283,   149,
    1066,  2070,   274,  2070,  2242,  2092,   797,  2070,  2070,   486,
    1076,   184,   487,   352,   435,   490,   469,   487,   439,   810,
     490,   360,   195,   214,  1641,  1655,  1092,   448,  1076,   820,
    1075,   822,   823,   248,   249,   149,   148,  2280,   369,   333,
     227,  1648,  1649,   149,  1728,   134,  1730,  2528,   333,   149,
     487,   472,   337,   490,  2527,   394,   369,   487,   173,   487,
    2642,   486,   490,  2812,   343,   486,    13,    14,   129,  2759,
     134,   134,   487,  1139,  2026,   490,  1823,   487,  2760,   194,
     490,   366,   398,   264,   400,    36,  1842,  1843,   487,   276,
     325,   490,  2025,  2675,   155,   283,   427,   398,  2780,   400,
    1903,  1904,   441,  1169,    55,    13,    14,   487,  2013,  1175,
     490,   398,  1178,   400,   427,   230,  1182,  1788,    13,    14,
    1166,  1166,  1166,  2366,  2024,   360,  2026,   398,   486,   400,
    1196,  2064,  1075,  1199,  1200,  1201,  1202,   191,  1166,   441,
     412,   356,   357,  1209,  1210,  1211,  1166,   432,    81,   337,
     338,   423,  2834,   452,   105,  1821,  1222,   487,   212,   394,
     490,  1227,  1228,  1229,  1230,  1231,  1232,   149,  2373,   284,
    1236,  1237,  1984,   487,   149,  1241,   490,  2759,   366,  1245,
      13,    14,  1248,  1249,  1250,  1251,  1252,  1253,  1254,  1255,
    1256,   488,   487,  1259,   283,   490,   487,  1263,   487,   490,
    1266,   490,  1268,   264,  1270,  2209,   441,  2211,   269,   382,
    1106,  1107,   385,   274,   487,    13,    14,   490,   487,   283,
     283,   490,   149,  1166,   279,  1291,   394,   281,     8,   491,
     487,    11,   325,   490,   486,  1131,    16,    17,    18,    36,
    1288,   225,   193,  1309,   333,  1823,   486,   359,   337,  2492,
       5,  1816,  1318,  1319,  2492,  2460,   487,   519,   487,   490,
     487,   490,   486,   490,  1913,   487,     5,   360,   490,   333,
     333,   347,   348,   337,   337,   487,  1296,   366,   490,   486,
      23,    23,   394,   398,  1350,   400,    29,    29,   162,  2045,
    1356,   242,  1358,  1910,   486,  1238,  1192,  1193,   308,   250,
    2045,   394,   366,   366,     5,   487,   568,   422,   490,   487,
     425,   262,   490,   487,    67,  2558,   490,   487,  2561,   486,
     490,   487,  2527,   435,   490,   487,  2278,   487,   490,   487,
     490,  1397,   490,    93,  1400,  1401,   448,  1403,  1945,  1946,
    1947,  1948,   293,   432,  1993,  2250,   487,   486,   441,   490,
    2106,   412,   486,  1296,   487,   359,   487,   490,     5,   490,
     472,   114,   423,   487,  1430,   486,   490,   474,   432,   432,
    1966,     5,  1438,   480,   486,    13,    14,   486,  2044,   486,
    2046,     5,   487,   487,   491,   490,   490,   338,  2310,  1455,
     394,   134,   134,    13,    14,   487,  1187,   487,   490,   486,
     490,   486,  1468,   486,  1470,  1471,  1426,  2091,   168,   360,
     517,   518,   519,   487,   487,   486,   490,   490,   171,   473,
     474,   475,    15,   477,   478,   479,   480,   481,   482,   380,
    2060,   435,   212,    13,    14,   487,   487,  1503,   490,   490,
     200,   486,  1508,  1509,   448,   552,   486,   554,  1514,     8,
     449,   487,    11,   560,   490,   215,   486,    16,    17,    18,
     487,   568,   486,   490,   224,  1556,   487,   486,   472,   490,
       8,   486,  2213,   580,    33,  2216,    13,    14,    16,    17,
      18,   210,   486,  1426,   490,   592,    96,  1278,  1554,  1555,
    1556,    13,    14,  1559,    13,    14,    13,    14,   258,   366,
    2743,   281,    13,    14,    36,  2743,  1572,  1573,  1574,  1575,
    1601,   264,   162,  2269,   276,  1581,   269,   162,  2274,    50,
     627,   628,   629,   274,  2269,    13,    14,    13,    14,   225,
    1596,  1597,    13,    14,   486,  1601,   487,    13,    14,   405,
     283,   283,    13,    14,   486,   148,    13,    14,   405,  1615,
      13,    14,  1618,   490,  1620,   347,   348,    85,    36,   312,
    2316,  2317,    54,    94,    54,  2498,   347,   348,   252,   253,
     405,  2220,   356,   357,   327,  1641,   255,    55,   840,   405,
    1671,   822,   823,   343,   487,  2234,   492,  1653,  1653,   120,
     333,   333,   405,   448,   337,   337,   149,  2281,  2282,    92,
     264,  1667,  1667,   264,  1653,   486,    36,   138,   488,    36,
     438,   142,   490,  1556,   721,  1681,  2363,   486,  1667,    35,
    1666,  1666,  1666,   366,   366,   486,   486,   105,   486,  2229,
    1696,     9,   163,   486,   444,   166,   486,   403,  1666,   403,
      11,   490,   403,   486,   269,   486,  1666,   405,  1714,   180,
     176,   158,   167,   212,   486,    83,   487,    85,  1601,    87,
     429,    36,   208,   490,  1455,  1731,  1732,  1733,  1459,   422,
     369,   216,   280,   490,   486,   216,  1619,  1468,   264,   285,
     216,   487,   317,   277,   441,   486,   264,   149,   149,   432,
     432,   279,  1635,   473,   474,   475,   448,   477,   478,   479,
     480,   481,   482,   279,     8,    36,  1772,    11,   264,    36,
    1653,    35,    16,    17,    18,   193,   484,   824,   405,   484,
     405,   167,   281,  1666,  1667,  2481,  2482,   405,  1671,    33,
     405,   487,   469,   840,   841,  1801,  2492,   487,   269,   846,
     847,   848,   487,   281,   488,   469,   277,  2492,   859,   487,
       8,   487,   487,    11,   487,  1821,   359,  1823,    16,    17,
      18,   487,   487,   490,   242,   487,   873,   874,   487,   487,
     487,   487,   250,   167,   469,  1841,   486,   405,   486,   886,
     486,   486,   445,   289,   262,  2363,   445,  1853,   319,   435,
    1856,   394,   279,   475,   471,   427,   903,  1863,   280,  1819,
     907,  1867,   490,   280,  1870,   280,   235,  1069,   405,  1071,
    1876,  1877,  1878,  1879,  1880,   293,   264,  1883,  1884,  1885,
    1886,  1887,  1888,  1889,  1890,  1891,  1892,   149,   486,   194,
    1896,  1897,   435,  1941,   283,   149,   149,   405,   405,  1905,
     405,   405,  2794,   487,  1910,   448,  1912,   487,  1939,   717,
     487,  1917,   485,   277,  1920,    36,  1922,   487,   279,    36,
     338,   490,   149,  1929,  1930,  1956,   448,  1933,  1934,   472,
     149,   269,  1938,  1939,   487,   484,  1819,   140,    55,   167,
      11,   162,   360,   486,   167,   487,   487,   487,  1954,  1954,
    1956,  1956,   487,  2458,   486,   445,   394,   167,   472,   490,
     176,  1967,   380,   487,   487,  1954,  2536,  1956,   212,   340,
    1976,   434,   487,    83,   473,   474,   475,  2583,   477,   478,
     479,   480,   481,   482,   486,   280,  1992,  2598,   105,   149,
     171,   486,   416,  1040,   486,   473,   474,   475,  1045,   477,
     478,   479,   480,   481,   482,  2562,  1737,   486,  1055,    36,
      79,   167,   820,   486,  1061,   429,   490,  1064,   485,   396,
     485,  1068,  1069,   487,  1071,  1072,   487,  1074,  2541,   487,
     215,   487,   486,   486,  2040,   487,   288,   281,  2044,  2045,
    2046,   215,   486,   286,    54,   179,  2559,  2743,   448,  1780,
     196,   269,   475,   185,   171,   269,  1939,   488,  2743,   488,
     405,   405,    36,   475,   264,   106,   448,   279,   488,   488,
    2681,  1954,    36,  1956,   167,   488,   193,   486,   488,   887,
     488,   487,  2639,   281,   488,   298,   215,   447,    85,   488,
     488,   488,  1823,   488,   488,   488,   488,  1828,  2603,  1830,
     485,   488,   486,  1834,  1835,   488,   474,   488,   488,   488,
     488,   130,   488,   488,   488,   488,  2122,   216,   486,   327,
     114,    36,   488,   488,   487,   242,   488,   486,  2088,   486,
      73,   486,   486,   250,   486,   149,  2742,   121,   149,    36,
    1342,   487,  2655,   348,   348,   262,    54,  2748,    36,  1200,
    1352,  1198,  1354,   486,   486,  1357,   486,   429,   434,  2165,
    2166,  1363,   490,  1365,  2170,  2171,    73,    36,   184,  2175,
     429,  2676,  2178,  2179,   416,  1377,   293,  2183,    67,   282,
    1382,    67,   486,   490,  1386,  1387,  1388,  1389,  1235,  1391,
    1392,    36,   560,   350,   366,   475,   269,   184,  2204,  2204,
     240,   486,  2208,  2208,    36,  2088,   282,   416,   486,   486,
     282,   262,   487,   487,   279,  2204,   486,   347,     9,  2208,
    1267,   338,   334,  2229,   592,   196,   279,   279,    33,   473,
     474,   475,   487,   477,   478,   479,   480,   481,   482,   486,
    1287,   119,  1289,   360,   427,     9,    22,   487,   577,  2027,
    2040,  1298,  1364,  1300,  1726,  1990,  2262,  2675,  1309,   627,
     628,   629,  2233,   380,  2434,  2271,  2739,  2073,    36,   717,
    2274,  2231,  2232,  2745,  2280,   473,   474,   475,  2815,   477,
     478,   479,   480,   481,   482,  1332,  2590,    55,  2781,  2793,
    2509,   874,   717,  1720,  1341,  1342,  2078,  1732,  2742,  1782,
    2791,  2044,  2740,  1717,  2310,  1352,  1353,  1354,  1355,  1786,
    1357,  1821,  1061,  2363,  2045,   840,  1363,  2067,  1365,  1681,
    1335,  2204,  2652,   862,   815,  2208,  2570,  2730,  1309,  1376,
    1377,  1139,   861,  1696,  1381,  1382,  2067,   105,   106,  1386,
    1387,  1388,  1389,  1970,  1391,  1392,   114,  2664,  2231,  2232,
    2225,  1334,   864,  1667,  1956,  2210,  2555,  2363,  2195,  1954,
    2366,  2642,  2641,  2659,  1411,  1412,  2660,  2373,  1472,  2430,
    2376,  1187,  1187,  2728,  1187,  1187,  2729,  1424,  2715,  2385,
    2386,  1264,  1684,  2389,  1510,  1403,  1619,  1268,  2348,  1789,
    1616,     8,  2634,  1468,    11,  2401,  2401,   846,  1288,    16,
      17,    18,  1076,   171,  1991,  2411,  2411,    -1,    -1,  1289,
    2416,  2416,  2401,  2419,  2419,    -1,    33,    -1,    -1,  1227,
    2426,  2427,  2411,    -1,    -1,   193,  1473,  2416,   144,    -1,
    2419,    -1,  2438,  2438,  2440,    -1,    -1,    -1,    -1,   887,
      -1,   157,    -1,    -1,    -1,    -1,   162,    -1,    -1,  2438,
      -1,    -1,    -1,    -1,  2460,    -1,   824,    -1,    -1,    -1,
      -1,     8,   887,    -1,    11,  2348,    -1,    -1,    -1,    16,
      17,    18,    -1,    -1,   242,    -1,    -1,    -1,   717,   847,
      -1,    -1,   250,    -1,    -1,    -1,  2492,    -1,    -1,    -1,
      -1,    -1,   208,  2224,   262,  2226,   264,    -1,    -1,    -1,
      -1,    -1,    -1,  1554,  1555,   873,    -1,    -1,  1559,    -1,
       8,   227,    -1,    11,    -1,  2521,  2521,    -1,   886,    -1,
      -1,  2527,  2528,    -1,    -1,   293,   717,    -1,  2411,    -1,
      -1,  2562,  2521,  2416,    -1,    -1,  2419,    -1,    -1,   907,
      -1,  2501,  1350,    41,  2550,  1596,  1597,   169,  2554,  2554,
      48,   173,  2558,    -1,    -1,  2561,  2562,    -1,    -1,    -1,
     276,    -1,  2522,    -1,    -1,  2554,  1613,  2573,    -1,   285,
     338,    -1,   194,    -1,    -1,    73,    -1,  2583,    -1,    -1,
      -1,  2587,  2588,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   360,    -1,    -1,   212,    -1,    -1,    -1,  1646,
      -1,    -1,    -1,  1805,    -1,    -1,  1653,    -1,   230,    -1,
      -1,    -1,   380,    -1,   382,   237,    -1,   385,  2501,    -1,
    1667,    -1,    -1,    -1,  1671,    -1,    -1,  1674,    -1,  1676,
      -1,    -1,  2363,  2639,    -1,    -1,  2642,  2642,    -1,  2522,
      -1,    -1,    -1,    -1,   142,    -1,    -1,    -1,   887,    -1,
      -1,    -1,    -1,  2642,    -1,  2615,    -1,    -1,  2664,    -1,
      -1,    -1,   284,  1471,   281,   212,    -1,    -1,    -1,  2675,
    2675,  2554,    -1,    -1,   172,  1722,    -1,  1045,    -1,  2562,
      -1,    -1,    -1,    -1,    -1,    -1,  2675,    -1,   186,  2695,
      -1,  1139,    67,   191,    -1,  1503,   887,    -1,    73,    -1,
     717,    -1,    -1,    -1,   717,   421,  1074,    -1,  2714,  2715,
      85,  2671,    -1,    -1,  1139,    -1,    -1,    -1,   486,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   226,    -1,
     352,    -1,  2615,    -1,   281,  1782,  2742,  2743,    -1,   114,
    1787,   116,    -1,    -1,  1791,  1792,  1793,  1794,    -1,    -1,
      -1,    -1,    -1,  2759,  2759,  2761,    -1,    -1,  1805,    -1,
      -1,  2492,    -1,    -1,    -1,  1812,    -1,    -1,   484,  1816,
    2759,   487,   488,    -1,    -1,    -1,   398,    -1,   400,  1227,
      -1,    -1,    -1,   281,    -1,  1832,  1833,    -1,  2671,    -1,
      -1,    -1,  2752,    -1,    -1,    -1,   171,    -1,    -1,    -1,
     422,    -1,  1227,   425,    -1,    -1,  2008,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2823,    -1,    -1,
      -1,    -1,  1869,   198,    -1,    -1,  1877,  1878,  1879,  1880,
    2032,    -1,  1883,  1884,  1885,  1886,  1887,  1888,  1889,  1890,
    1891,  1892,    -1,    -1,    -1,  2047,  2048,  2049,  2050,  2051,
    2052,  2053,  2054,  2055,  2056,    -1,   473,   474,   475,    -1,
     477,   478,   479,   480,   481,   482,    -1,    -1,    -1,  2752,
     887,    -1,    -1,   371,   887,    -1,    -1,    -1,     8,    -1,
    2611,    11,  1933,  1934,    -1,    -1,    16,    17,    18,   264,
      -1,    -1,    -1,    -1,   269,    -1,  1943,    -1,    -1,  1267,
    1139,    -1,  1350,    33,  1951,  1952,  1953,  1954,    -1,  1956,
    1957,    -1,    -1,    -1,  1961,  1962,    -1,    -1,    -1,  1287,
      -1,  1289,    -1,    -1,    -1,  1350,   473,   474,   475,    -1,
     477,   478,   479,   480,   481,   482,    -1,   312,    -1,    -1,
      -1,    -1,    -1,  1990,    -1,    -1,    -1,    -1,  1139,    -1,
      -1,    -1,   327,    -1,    -1,    -1,    -1,    -1,    -1,  2006,
      -1,  2008,    -1,    -1,  1332,  2012,  2013,  2014,    -1,  2016,
      -1,    -1,   470,    -1,    -1,    -1,    -1,    -1,    -1,   477,
     478,   479,   480,   481,   482,  2032,    -1,  2034,  1227,    -1,
      -1,    -1,    -1,  1801,    -1,    -1,    -1,    -1,    -1,    -1,
    2047,  2048,  2049,  2050,  2051,  2052,  2053,  2054,  2055,  2056,
      -1,    -1,  2743,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1471,  2071,    -1,     8,    -1,    -1,    11,
      -1,  2078,    -1,  1841,    -1,    -1,  1227,    -1,    -1,   108,
     109,    -1,  2089,  1411,    -1,  2092,  1471,   422,  1856,    -1,
      -1,    -1,  2099,    -1,    -1,  1503,    -1,    -1,    -1,    41,
      -1,  2108,    -1,    -1,    -1,    -1,    48,     8,  1876,    -1,
      11,    -1,    -1,    -1,    -1,    -1,   550,   551,  1503,    -1,
      -1,    -1,   212,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    73,    -1,    -1,    -1,    -1,    -1,  1905,    -1,    -1,
      41,    -1,    -1,    -1,  1912,    -1,    -1,    48,    -1,    -1,
      -1,  1350,    -1,   182,   183,    -1,    -1,    -1,    -1,    -1,
      -1,  1929,  1139,    -1,    -1,    -1,  1139,    -1,    -1,    -1,
      -1,    -1,    73,    -1,   608,   609,    -1,  2184,    -1,    -1,
    2187,  2188,  2189,  2190,    -1,    -1,    -1,  2194,  2195,    -1,
    2197,   281,    -1,  2200,    -1,    -1,    -1,  2204,    -1,  1350,
     142,  2208,    -1,    -1,    -1,    -1,    -1,  2214,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   244,   245,   246,   247,   248,
     249,    -1,     8,   252,   253,    11,  2233,    -1,    -1,    -1,
     172,  2238,    -1,    -1,    -1,  2242,    -1,    -1,    -1,    -1,
      -1,   142,    -1,  2250,   186,    -1,    -1,    -1,    -1,   191,
    1227,    -1,    -1,    -1,  1227,    41,    -1,    -1,    -1,    -1,
      -1,    -1,    48,    -1,    -1,    -1,    -1,    -1,  2275,    -1,
      -1,   172,  1471,    -1,    -1,    -1,    -1,  2045,    -1,    -1,
      -1,    -1,   716,    -1,   226,   186,    -1,    73,    -1,    -1,
     191,    -1,    -1,    -1,    -1,    -1,    -1,  2459,   732,    -1,
      -1,    -1,    -1,    -1,  1503,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1646,    -1,
    1471,    -1,    -1,    -1,    -1,   226,   760,   356,   357,    -1,
      -1,  2493,  2494,    -1,  2341,    -1,    -1,    -1,    -1,   281,
    2347,    -1,    -1,    -1,  2506,    -1,   780,   781,   782,    -1,
     784,  2358,  1503,    -1,    -1,    -1,   142,    -1,    -1,    -1,
      -1,    -1,  2373,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   805,    -1,  1350,    -1,    -1,    -1,  1350,    -1,    -1,
     281,    -1,    -1,   473,   474,   475,   172,   477,   478,   479,
     480,   481,   482,  1801,  2401,  2402,    -1,    -1,    -1,  2406,
     186,    -1,  2409,  2171,  2411,   191,    -1,    -1,    -1,  2416,
    2572,    -1,  2419,    -1,  2421,    -1,  1801,  2424,    -1,    -1,
     854,    -1,    -1,    -1,   858,   859,    -1,    -1,    -1,   371,
      -1,  2438,    -1,  1841,    -1,    -1,     8,   466,   467,    11,
     226,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1856,  2460,
      -1,  2458,  2459,    -1,    -1,    -1,  1841,   486,    -1,  1787,
    2467,    -1,    -1,    -1,  1792,  1793,  1794,    -1,  1876,    41,
     371,  1856,    -1,    -1,    -1,    -1,    48,    -1,   912,    -1,
      -1,    -1,    -1,    -1,  1812,   919,  2493,  2494,    -1,    -1,
      -1,  1876,    -1,    -1,  1471,   281,  2503,  1905,  1471,  2506,
      -1,    73,    -1,    -1,  1912,    -1,   940,    -1,    -1,    -1,
      -1,  2518,  2280,    -1,  2521,    -1,  2527,    -1,    -1,    -1,
    1905,  1929,    -1,    -1,    -1,    -1,  1503,  1912,   470,    -1,
    1503,    -1,    -1,    -1,  2541,   477,   478,   479,   480,   481,
     482,    -1,  2310,    -1,  1929,    -1,    -1,  2554,    -1,    -1,
      -1,    -1,  2559,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2568,    -1,    -1,    -1,  2572,    -1,    -1,    -1,   470,
     142,     0,    -1,    -1,  2581,    -1,   477,   478,   479,   480,
     481,   482,    -1,    -1,    -1,   371,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2603,    -1,  2366,    -1,
     172,    -1,  1801,    -1,    -1,    -1,    -1,  2614,  2376,    -1,
      -1,    -1,    -1,    -1,   186,    -1,    -1,    -1,  1052,   191,
      -1,    -1,    -1,  1951,  1952,  1953,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2642,    -1,  2045,    -1,    -1,
      -1,    -1,  1841,    -1,  2651,    -1,    -1,    -1,  2655,    -1,
    1801,    -1,  2659,    -1,   226,    -1,    -1,  1856,    -1,    -1,
    2045,    -1,    -1,    92,    -1,    -1,    -1,    -1,  2675,  2676,
    2677,  2678,    -1,    -1,    -1,    -1,    -1,  1876,  2006,    -1,
      -1,    -1,    -1,    -1,   470,    -1,    -1,    -1,    -1,    -1,
    1841,   477,   478,   479,   480,   481,   482,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1856,  1905,    -1,    -1,   281,
      -1,    -1,  2719,  1912,    -1,   144,    -1,    -1,    -1,    -1,
      -1,  2728,    -1,  2730,  2492,  1876,    -1,    -1,   157,    -1,
    1929,    -1,  2739,   162,    -1,    -1,    -1,    -1,   167,    -1,
      -1,  1175,    -1,  2071,    -1,    -1,  2753,   176,    -1,    -1,
     179,    -1,  2759,    -1,  1905,    -1,    -1,    -1,    -1,    -1,
    2528,  1912,  1196,  2171,  2092,  1199,    -1,    -1,  1202,    -1,
    2777,    -1,    -1,    -1,    -1,  1209,  1210,  1211,  1929,   208,
      -1,    -1,    -1,    -1,    -1,    -1,  2171,    -1,  1222,    -1,
    2558,    -1,    -1,  2561,  1228,  1229,  1230,  1231,   227,   371,
      -1,    -1,  1236,  1237,    -1,    -1,    -1,  1241,    -1,    -1,
      -1,  1245,    -1,    -1,  1248,  1249,  1250,  1251,  1252,  1253,
    1254,  1255,  1256,    -1,  1801,  1259,    -1,    -1,  1801,  1263,
      -1,    -1,  1266,    -1,  1268,    -1,  1270,    -1,    -1,    -1,
      -1,    -1,   798,    -1,    -1,    -1,  2045,   276,    -1,    -1,
     279,    -1,    -1,    -1,    -1,    -1,   285,  1291,    -1,  2187,
    2188,  2189,  2190,    -1,  1841,    -1,    -1,    -1,  1841,    -1,
      -1,    -1,  2280,    -1,    -1,    -1,    -1,    -1,    -1,  1856,
      -1,   837,    -1,  1856,  1318,  1319,    -1,    -1,    -1,    -1,
      -1,    23,    -1,    -1,  2045,  2280,    -1,    29,   470,  1876,
      -1,    -1,  2310,  1876,    36,   477,   478,   479,   480,   481,
     482,   340,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    55,    -1,  2310,    -1,    -1,  1905,    -1,
      -1,    -1,  1905,    -1,    -1,  1912,    -1,    -1,    -1,  1912,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1929,    -1,    -1,    -1,  1929,    -1,  2366,    -1,
      -1,    -1,    -1,  1397,    -1,   394,  1400,  1401,  2376,  1403,
      -1,    -1,  2171,   105,    -1,  2743,    -1,    -1,    -1,    -1,
      -1,  2366,    -1,    -1,    -1,    -1,    -1,    -1,   944,    -1,
      -1,  2376,   421,    -1,    -1,   951,  1430,    -1,    -1,    -1,
     429,    -1,   134,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   445,    -1,   447,   448,
    2171,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1470,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,     0,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,     8,   484,    -1,    11,   487,   488,
     489,   193,    -1,    -1,    19,    -1,    -1,    -1,  2045,    -1,
      -1,    -1,  2045,    -1,    29,  1509,    31,    32,    -1,    -1,
    1514,  2280,    -1,    -1,  2492,    -1,    -1,    41,    -1,    -1,
      -1,    -1,    47,    -1,    48,    -1,    -1,    -1,    -1,    -1,
      -1,    56,    -1,    -1,    -1,    -1,    -1,  2492,    -1,    -1,
     242,  2310,    -1,    68,    -1,    -1,    -1,    -1,   250,    73,
    2528,    -1,  1556,    -1,    79,    -1,    -1,    -1,    -1,  2280,
     262,    -1,    -1,    -1,    -1,    90,    -1,    92,  1572,  2467,
    1574,  1575,    -1,  2528,    -1,    -1,    -1,  1581,    -1,    -1,
    2558,   283,    -1,  2561,    -1,   110,    -1,    -1,    -1,  2310,
      -1,   293,    -1,    -1,    -1,    -1,    -1,  2366,    -1,   124,
      -1,    -1,    -1,  2558,    -1,    -1,  2561,  2376,    -1,   134,
      -1,  1615,    -1,    -1,  1618,   140,  1620,    -1,   142,    -1,
    2518,    -1,    -1,   148,  2171,   150,   151,    -1,  2171,    -1,
      -1,   333,    -1,    -1,    -1,   337,   338,    -1,   163,    -1,
      -1,    -1,    -1,    -1,    -1,  2366,    -1,  1173,   172,    -1,
      -1,    -1,    -1,    -1,    -1,  2376,    -1,    -1,   360,    -1,
       8,    -1,   186,    11,   366,   190,    -1,   191,    -1,  1195,
      -1,    -1,    -1,    -1,  1200,    -1,    -1,  1681,   380,    -1,
      -1,    -1,    -1,  2581,    -1,    -1,  1212,  1213,  1214,    -1,
    1216,    -1,  1696,    41,    -1,    -1,    -1,    -1,    -1,    -1,
      48,    -1,   226,    -1,   229,    -1,    -1,    -1,    -1,    -1,
    1714,    -1,    -1,    -1,    -1,    -1,  2614,    -1,     8,    -1,
      -1,    11,    -1,  2492,    -1,    73,    16,    17,    18,    -1,
     432,    -1,    -1,  2280,    -1,    -1,    -1,  2280,    -1,  1265,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    41,    -1,    -1,    -1,    -1,    -1,   281,    48,  2528,
      -1,    -1,    -1,  2310,    -1,  2743,    -1,  2310,  1772,    -1,
      -1,  2492,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1305,
      -1,   306,    -1,    73,   309,    -1,    -1,    -1,  2743,  2558,
      -1,  1317,  2561,    -1,    -1,    -1,  1322,    -1,     3,    -1,
       5,    -1,    -1,    -1,    -1,    -1,    -1,  2528,     0,    -1,
      -1,    -1,   337,    -1,    -1,    -1,    -1,    -1,    -1,  2366,
     345,    -1,    -1,  2366,   172,    -1,    -1,    -1,    -1,  2376,
      -1,    -1,    -1,  2376,   359,    -1,    -1,  2558,   186,    -1,
    2561,   366,    -1,   191,    -1,   370,    -1,   371,    -1,  1853,
      -1,    -1,    -1,    -1,    -1,   380,    -1,    -1,    -1,  1863,
      -1,    -1,    -1,  1867,    -1,    -1,  1870,    -1,    -1,   394,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   226,    -1,
      -1,    -1,   172,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1896,  1897,    -1,    -1,   186,    -1,    -1,    -1,
      92,   191,    -1,   108,   109,   430,    -1,    -1,    -1,    -1,
     435,    -1,    -1,  1917,    -1,    -1,  1920,    -1,  1922,    -1,
      -1,    -1,    -1,   448,    -1,    -1,  1930,    -1,    -1,    -1,
      -1,    -1,    -1,   281,  1938,  1939,   226,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2492,   470,   472,    -1,  2492,
      -1,    -1,   144,   477,   478,   479,   480,   481,   482,    -1,
      -1,   486,    -1,  1967,   489,   157,    -1,    -1,    -1,    -1,
     162,    -1,  1976,    -1,  2743,   167,    -1,   182,   183,    -1,
      -1,  2528,    -1,    -1,   176,  2528,  1512,   179,  1992,    -1,
      -1,   281,    -1,    -1,    -1,    -1,    -1,     0,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1535,
      -1,  2558,    -1,    -1,  2561,  2558,   208,    -1,  2561,    -1,
      -1,    -1,  2743,   371,    -1,    -1,  1552,    -1,  1554,  1555,
      -1,  1557,    -1,  1559,    -1,   227,    -1,    -1,  1564,   244,
     245,   246,   247,   248,   249,  1571,    -1,   252,   253,    -1,
    1576,    -1,    -1,  1579,    -1,    -1,    -1,  1583,    -1,    -1,
      -1,  1587,  1588,  1589,  1590,    -1,    -1,    -1,    -1,    -1,
    1596,  1597,    -1,  1599,  1600,    -1,    -1,    -1,    -1,    -1,
      -1,   371,   108,   109,   276,  1611,    -1,   279,  1614,    92,
      -1,    -1,    -1,   285,    -1,    -1,  1622,  1623,  1624,  1625,
    1626,  1627,  1628,  1629,  1630,  1631,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1639,    -1,    -1,    -1,  1643,  2122,    -1,
      -1,    -1,   470,    -1,    -1,    -1,    -1,    -1,    -1,   477,
     478,   479,   480,   481,   482,    -1,    -1,    -1,  1664,    -1,
      -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,   340,    -1,
      -1,   356,   357,    -1,   157,    -1,   182,   183,    -1,   162,
      -1,  2165,  2166,    -1,   167,    -1,  2170,    -1,    -1,    -1,
      -1,  2175,    -1,   176,  2178,  2179,   179,    -1,    -1,  2183,
     470,    -1,    -1,   473,   474,   475,    -1,   477,   478,   479,
     480,   481,   482,    -1,    -1,    -1,  2743,    -1,    -1,    -1,
    2743,    -1,   394,    -1,    -1,   208,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   244,   245,
     246,   247,   248,   249,   227,  2229,   252,   253,    -1,   421,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   429,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1775,
    1776,  1777,    -1,   445,    -1,   447,   448,    -1,    -1,    -1,
      -1,   466,   467,    -1,    -1,    -1,    -1,  2271,    -1,     8,
      -1,    -1,    11,   276,    -1,    -1,   279,    16,    17,    18,
      -1,    -1,   285,    -1,  1810,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   484,    -1,    33,   487,   488,   489,    -1,    -1,
      -1,    -1,    41,    -1,    -1,    -1,    -1,    -1,    -1,    48,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1852,    -1,    -1,    -1,
     356,   357,  1858,    -1,    73,    -1,    -1,   340,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1873,  1874,  1875,
      -1,  1877,  1878,  1879,  1880,    -1,    -1,  1883,  1884,  1885,
    1886,  1887,  1888,  1889,  1890,  1891,  1892,  1893,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2385,  2386,    -1,    -1,  2389,    -1,    -1,  1914,    -1,
      -1,   394,  1918,  1919,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1932,  1933,  1934,  1935,
      -1,  1937,    -1,    -1,    -1,    -1,    -1,    -1,   421,    -1,
      -1,    -1,  2426,  2427,    -1,    -1,   429,    -1,    -1,    -1,
      -1,    -1,    -1,   172,    -1,    -1,  2440,    -1,    -1,    -1,
     466,   467,   445,    -1,   447,   448,    -1,   186,    -1,    -1,
      -1,    -1,   191,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   212,   213,    -1,    -1,    -1,    -1,    -1,
      -1,   484,    -1,  2009,   487,   488,   489,   226,    -1,     3,
      -1,    -1,    -1,    -1,     8,    -1,    -1,    11,    -1,    -1,
      -1,    -1,    16,    17,    18,    -1,    -1,    -1,    -1,    21,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,
      -1,    -1,    36,    -1,    -1,   264,    -1,    41,   267,    -1,
      -1,    -1,    -1,    -1,    48,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   281,    -1,    -1,   284,  2550,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2562,    73,
      -1,    -1,    74,    -1,    -1,    -1,    -1,    -1,    -1,  2573,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    89,    -1,    -1,
      -1,    -1,    -1,    -1,  2588,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2123,    -1,    -1,
      -1,  2127,  2128,    -1,  2130,    -1,    -1,  2133,  2134,  2135,
    2136,    -1,    -1,    -1,  2140,  2141,  2142,  2143,  2144,  2145,
    2146,  2147,  2148,  2149,  2150,  2151,    -1,    -1,    -1,    -1,
      -1,   143,   371,    -1,    -1,    -1,    -1,    -1,  2164,    -1,
     152,  2167,    -1,  2169,    -1,    -1,    -1,  2173,    -1,    -1,
    2176,  2177,   164,    -1,  2180,  2181,    -1,   169,   172,    -1,
    2664,    -1,    -1,    -1,    -1,    23,    -1,    -1,    -1,    -1,
      -1,    29,   186,    -1,    -1,    -1,    -1,   191,    36,    -1,
      -1,    -1,   194,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2695,    -1,    -1,    -1,  2221,    -1,    55,   212,   213,
      -1,    -1,  2228,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2714,  2715,   226,    -1,    -1,  2241,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   237,    -1,    -1,    -1,   241,
      -1,   470,    -1,    -1,   473,   474,   475,    -1,   477,   478,
     479,   480,   481,   482,    -1,    -1,    -1,   105,    -1,    -1,
     264,   490,    -1,   267,    -1,    -1,    -1,  2761,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   281,    -1,    -1,
     284,    -1,    -1,    -1,    -1,    -1,   134,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   304,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   318,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2823,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   193,    -1,   349,    -1,    -1,
     352,    -1,    -1,  2369,    -1,    -1,    -1,  2373,   360,    -1,
      -1,   363,    -1,  2379,  2380,  2381,    -1,   371,  2384,    -1,
      -1,  2387,  2388,    -1,    -1,    -1,  2392,    -1,    -1,    -1,
     382,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,    -1,   242,    -1,    -1,    -1,    -1,   401,
      -1,    -1,   250,    -1,    -1,    -1,    -1,    -1,   410,    -1,
      -1,    -1,    -1,    -1,   262,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   283,    -1,    -1,    -1,   441,
      -1,    -1,    -1,    -1,  2460,   293,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2478,    -1,    -1,    -1,   470,    -1,    -1,   473,
     474,   475,    -1,   477,   478,   479,   480,   481,   482,    -1,
      -1,    -1,    -1,    -1,    -1,   333,    -1,    -1,    -1,   337,
     338,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2526,  2527,   360,    -1,    -1,  2531,  2532,  2533,   366,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   380,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2566,  2567,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2579,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2591,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   432,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
    2636,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    27,    28,    29,    30,    -1,    -1,    -1,  2654,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,  2673,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,  2687,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,   129,  2750,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,  2764,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
     166,    -1,   168,   169,   170,   171,   172,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,   200,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,    -1,    -1,   223,   224,   225,
     226,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,    -1,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,    -1,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,    -1,   392,   393,    -1,   395,
     396,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
      -1,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,    -1,    -1,   423,   424,   425,
     426,   427,   428,    -1,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,    -1,    -1,
     446,    -1,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,    -1,    -1,    -1,    -1,    -1,
      -1,   477,   478,   479,    -1,    -1,    -1,    -1,    -1,    -1,
     486,   487,    -1,    -1,    -1,   491,     3,     4,     5,     6,
       7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    74,    -1,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    -1,    86,
      87,    88,    89,    90,    91,    -1,    93,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,    -1,
     117,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
     127,   128,    -1,    -1,   131,   132,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,    -1,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
      -1,   158,   159,   160,   161,    -1,   163,    -1,   165,   166,
      -1,   168,   169,   170,   171,   172,   173,    -1,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,   193,   194,   195,   196,
     197,    -1,   199,   200,   201,   202,   203,   204,   205,   206,
     207,    -1,   209,    -1,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,    -1,    -1,   223,   224,   225,   226,
      -1,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,    -1,
     277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,    -1,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,    -1,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,    -1,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,    -1,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,    -1,   403,   404,    -1,    -1,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,    -1,    -1,   423,   424,   425,   426,
     427,   428,    -1,   430,   431,   432,   433,   434,   435,   436,
      -1,   438,   439,   440,   441,   442,   443,    -1,    -1,   446,
      -1,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,    -1,   472,    -1,    -1,    -1,    -1,
     477,   478,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   486,
     487,    -1,    -1,    -1,   491,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,   166,    -1,
     168,   169,   170,   171,   172,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,   200,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,    -1,    -1,   223,   224,   225,   226,    -1,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,    -1,   277,
     278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,    -1,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,    -1,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,    -1,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,    -1,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,    -1,   403,   404,    -1,    -1,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,    -1,    -1,   423,   424,   425,   426,   427,
     428,    -1,   430,   431,   432,   433,   434,   435,   436,    -1,
     438,   439,   440,   441,   442,   443,    -1,    -1,   446,    -1,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,    -1,   472,    -1,    -1,    -1,    -1,   477,
     478,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   486,    -1,
      -1,    -1,    -1,   491,     3,     4,     5,     6,     7,     8,
       9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    74,    -1,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    -1,    86,    87,    88,
      89,    90,    91,    -1,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,    -1,   117,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,   127,   128,
      -1,    -1,   131,   132,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,    -1,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,    -1,   158,
     159,   160,   161,    -1,   163,    -1,   165,   166,   167,   168,
     169,   170,   171,   172,   173,    -1,   175,    -1,   177,   178,
      -1,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,   193,   194,   195,   196,   197,    -1,
     199,   200,   201,   202,   203,   204,   205,   206,   207,    -1,
     209,    -1,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,    -1,   222,   223,   224,   225,   226,    -1,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,    -1,   277,   278,
      -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,    -1,   303,   304,   305,   306,   307,   308,
     309,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,    -1,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,    -1,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,    -1,   392,   393,    -1,   395,   396,   397,   398,
     399,   400,   401,    -1,   403,   404,    -1,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,    -1,    -1,   423,   424,   425,   426,   427,   428,
      -1,   430,   431,   432,   433,   434,   435,   436,    -1,   438,
     439,   440,   441,   442,   443,    -1,    -1,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,    -1,    -1,    -1,    -1,    -1,    -1,   477,   478,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   486,    -1,    -1,
      -1,    -1,   491,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    74,    -1,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    -1,    86,    87,    88,    89,
      90,    91,    -1,    93,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,    -1,   117,   118,   119,
     120,   121,   122,    -1,   124,   125,   126,   127,   128,    -1,
      -1,   131,   132,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,    -1,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,    -1,   158,   159,
     160,   161,    -1,   163,    -1,   165,   166,    -1,   168,   169,
     170,   171,   172,   173,    -1,   175,    -1,   177,   178,    -1,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
     190,    -1,   192,   193,   194,   195,   196,   197,    -1,   199,
     200,   201,   202,   203,   204,   205,   206,   207,    -1,   209,
      -1,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,    -1,    -1,   223,   224,   225,   226,    -1,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,    -1,   277,   278,    -1,
      -1,   281,   282,   283,    -1,    -1,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,    -1,   303,   304,   305,   306,   307,   308,   309,
     310,   311,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
      -1,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,    -1,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,    -1,   392,   393,    -1,   395,   396,   397,   398,   399,
     400,   401,    -1,   403,   404,    -1,    -1,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,    -1,    -1,   423,   424,   425,   426,   427,   428,    -1,
     430,   431,   432,   433,   434,   435,   436,    -1,   438,   439,
     440,   441,   442,   443,    -1,    -1,   446,    -1,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,    -1,    -1,    -1,    -1,    -1,    -1,   477,   478,   479,
      -1,    -1,    -1,    -1,    -1,    -1,   486,    -1,    -1,    -1,
      -1,   491,     3,     4,     5,     6,     7,     8,     9,    10,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    27,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    -1,    86,    87,    88,    89,    90,
      91,    -1,    93,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,    -1,   117,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,   127,   128,    -1,    -1,
     131,   132,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,    -1,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,    -1,   158,   159,   160,
     161,    -1,   163,    -1,   165,   166,    -1,   168,   169,   170,
     171,   172,   173,    -1,   175,    -1,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,   196,   197,    -1,   199,   200,
     201,   202,   203,   204,   205,   206,   207,    -1,   209,    -1,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
      -1,    -1,   223,   224,   225,   226,    -1,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,    -1,   277,   278,    -1,    -1,
     281,   282,   283,    -1,    -1,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,    -1,   303,   304,   305,   306,   307,   308,   309,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,    -1,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,    -1,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
      -1,   392,   393,    -1,   395,   396,   397,   398,   399,   400,
     401,    -1,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
      -1,    -1,   423,   424,   425,   426,   427,   428,    -1,   430,
     431,   432,   433,   434,   435,   436,    -1,   438,   439,   440,
     441,   442,   443,    -1,    -1,   446,    -1,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
      -1,    -1,    -1,    -1,    -1,    -1,   477,   478,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   486,    -1,    -1,    -1,    -1,
     491,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    74,    -1,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    -1,    86,    87,    88,    89,    90,    91,
      -1,    93,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,    -1,   117,   118,   119,   120,   121,
     122,    -1,   124,   125,   126,   127,   128,    -1,    -1,   131,
     132,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
     142,   143,    -1,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,    -1,   158,   159,   160,   161,
      -1,   163,    -1,   165,   166,    -1,   168,   169,   170,   171,
     172,   173,    -1,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,   190,    -1,
     192,   193,   194,   195,   196,   197,    -1,   199,   200,   201,
     202,   203,   204,   205,   206,   207,    -1,   209,    -1,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,    -1,
      -1,   223,   224,   225,   226,    -1,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,    -1,   277,   278,    -1,    -1,   281,
     282,   283,    -1,    -1,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
      -1,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,    -1,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,    -1,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,    -1,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,    -1,
     392,   393,    -1,   395,   396,   397,   398,   399,   400,   401,
      -1,   403,   404,    -1,    -1,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,    -1,
      -1,   423,   424,   425,   426,   427,   428,    -1,   430,   431,
     432,   433,   434,   435,   436,    -1,   438,   439,   440,   441,
     442,   443,    -1,    -1,   446,    -1,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,    -1,
      -1,    -1,    -1,    -1,    -1,   477,   478,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   486,   487,    -1,    -1,    -1,   491,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,   166,    -1,   168,   169,   170,   171,   172,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,   200,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,    -1,    -1,
     223,   224,   225,   226,    -1,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,    -1,   277,   278,    -1,    -1,   281,   282,
     283,    -1,    -1,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,    -1,
     303,   304,   305,   306,   307,   308,   309,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,    -1,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,    -1,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,    -1,   392,
     393,    -1,   395,   396,   397,   398,   399,   400,   401,    -1,
     403,   404,    -1,    -1,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,    -1,    -1,
     423,   424,   425,   426,   427,   428,    -1,   430,   431,   432,
     433,   434,   435,   436,    -1,   438,   439,   440,   441,   442,
     443,    -1,    -1,   446,    -1,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,    -1,    -1,
      -1,    -1,    -1,    -1,   477,   478,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   486,   487,    -1,    -1,    -1,   491,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      74,    -1,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    -1,    86,    87,    88,    89,    90,    91,    -1,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,    -1,   117,   118,   119,   120,   121,   122,    -1,
     124,   125,   126,   127,   128,    -1,    -1,   131,   132,   133,
     134,   135,    -1,   137,   138,   139,    -1,   141,   142,   143,
      -1,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,    -1,   158,   159,   160,   161,    -1,   163,
      -1,   165,   166,    -1,   168,   169,   170,   171,   172,   173,
      -1,   175,    -1,   177,   178,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,   190,    -1,   192,   193,
     194,   195,   196,   197,    -1,   199,   200,   201,   202,   203,
     204,   205,   206,   207,    -1,   209,    -1,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,    -1,    -1,   223,
     224,   225,   226,    -1,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,    -1,   277,   278,    -1,    -1,   281,   282,   283,
      -1,    -1,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,    -1,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,    -1,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,    -1,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,    -1,   392,   393,
      -1,   395,   396,   397,   398,   399,   400,   401,    -1,   403,
     404,    -1,    -1,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,    -1,    -1,   423,
     424,   425,   426,   427,   428,    -1,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
      -1,    -1,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,    -1,    -1,    -1,
      -1,    -1,    -1,   477,   478,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   486,    -1,    -1,    -1,    -1,   491,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    74,
      -1,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      -1,    86,    87,    88,    89,    90,    91,    -1,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,    -1,   117,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,   127,   128,    -1,    -1,   131,   132,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,    -1,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,    -1,   158,   159,   160,   161,    -1,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,   172,   173,    -1,
     175,    -1,   177,   178,    -1,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,   193,   194,
     195,   196,   197,    -1,   199,   200,   201,   202,   203,   204,
     205,   206,   207,    -1,   209,    -1,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,    -1,    -1,   223,   224,
     225,   226,    -1,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,    -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,
      -1,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,    -1,   303,   304,
     305,   306,   307,   308,   309,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,    -1,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,    -1,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,    -1,   392,   393,    -1,
     395,   396,   397,   398,   399,   400,   401,    -1,   403,   404,
      -1,    -1,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,    -1,    -1,   423,   424,
     425,   426,   427,   428,    -1,   430,   431,   432,   433,   434,
     435,   436,    -1,   438,   439,   440,   441,   442,   443,    -1,
      -1,   446,    -1,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,    -1,    -1,    -1,    -1,
      -1,    -1,   477,   478,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   486,    -1,    -1,    -1,    -1,   491,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
     166,    -1,   168,   169,   170,   171,   172,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,   200,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,    -1,    -1,   223,   224,   225,
     226,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,    -1,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,    -1,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,    -1,   392,   393,    -1,   395,
     396,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
      -1,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,    -1,    -1,   423,   424,   425,
     426,   427,   428,    -1,   430,   431,   432,   433,   434,   435,
     436,    -1,   438,   439,   440,   441,   442,   443,    -1,    -1,
     446,    -1,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,    -1,    -1,    -1,    -1,    -1,
      -1,   477,   478,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     486,    -1,    -1,    -1,    -1,   491,     3,     4,     5,     6,
       7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    74,    -1,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    -1,    86,
      87,    88,    89,    90,    91,    -1,    93,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,    -1,
     117,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
     127,   128,    -1,    -1,   131,   132,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,    -1,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
      -1,   158,   159,   160,   161,    -1,   163,    -1,   165,   166,
      -1,   168,   169,   170,   171,   172,   173,    -1,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,   193,   194,   195,   196,
     197,    -1,   199,   200,   201,   202,   203,   204,   205,   206,
     207,    -1,   209,    -1,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,    -1,    -1,   223,   224,   225,   226,
      -1,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,    -1,
     277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,    -1,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,    -1,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,    -1,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,    -1,   392,   393,    -1,   395,   396,
     397,   398,   399,   400,   401,    -1,   403,   404,    -1,    -1,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,    -1,    -1,   423,   424,   425,   426,
     427,   428,    -1,   430,   431,   432,   433,   434,   435,   436,
      -1,   438,   439,   440,   441,   442,   443,    -1,    -1,   446,
      -1,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,    -1,    -1,    -1,    -1,    -1,    -1,
     477,   478,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   486,
      -1,    -1,    -1,    -1,   491,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,   166,    -1,
     168,   169,   170,   171,   172,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,   200,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,    -1,    -1,   223,   224,   225,   226,    -1,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,    -1,   277,
     278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,    -1,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,    -1,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,    -1,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,    -1,   392,   393,    -1,   395,   396,   397,
     398,   399,   400,   401,    -1,   403,   404,    -1,    -1,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,    -1,    -1,   423,   424,   425,   426,   427,
     428,    -1,   430,   431,   432,   433,   434,   435,   436,    -1,
     438,   439,   440,   441,   442,   443,    -1,    -1,   446,    -1,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,    -1,    -1,    -1,    -1,    -1,    -1,   477,
     478,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   486,    -1,
      -1,    -1,    -1,   491,     3,     4,     5,     6,     7,     8,
       9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    74,    -1,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    -1,    86,    87,    88,
      89,    90,    91,    -1,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,    -1,   117,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,   127,   128,
      -1,    -1,   131,   132,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,    -1,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,    -1,   158,
     159,   160,   161,    -1,   163,    -1,   165,   166,    -1,   168,
     169,   170,   171,   172,   173,    -1,   175,    -1,   177,   178,
      -1,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,   193,   194,   195,   196,   197,    -1,
     199,   200,   201,   202,   203,   204,   205,   206,   207,    -1,
     209,    -1,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,    -1,    -1,   223,   224,   225,   226,    -1,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,    -1,   277,   278,
      -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,    -1,   303,   304,   305,   306,   307,   308,
     309,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,    -1,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,    -1,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,    -1,   392,   393,    -1,   395,   396,   397,   398,
     399,   400,   401,    -1,   403,   404,    -1,    -1,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,    -1,    -1,   423,   424,   425,   426,   427,   428,
      -1,   430,   431,   432,   433,   434,   435,   436,    -1,   438,
     439,   440,   441,   442,   443,    -1,    -1,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,    -1,    -1,    -1,    -1,    -1,    -1,   477,   478,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   486,    -1,    -1,
      -1,    -1,   491,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    74,    -1,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    -1,    86,    87,    88,    89,
      90,    91,    -1,    93,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,    -1,   117,   118,   119,
     120,   121,   122,    -1,   124,   125,   126,   127,   128,    -1,
      -1,   131,   132,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,    -1,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,    -1,   158,   159,
     160,   161,    -1,   163,    -1,   165,   166,    -1,   168,   169,
     170,   171,   172,   173,    -1,   175,    -1,   177,   178,    -1,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
     190,    -1,   192,   193,   194,   195,   196,   197,    -1,   199,
     200,   201,   202,   203,   204,   205,   206,   207,    -1,   209,
      -1,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,    -1,    -1,   223,   224,   225,   226,    -1,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,    -1,   277,   278,    -1,
      -1,   281,   282,   283,    -1,    -1,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,    -1,   303,   304,   305,   306,   307,   308,   309,
     310,   311,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
      -1,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,    -1,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,    -1,   392,   393,    -1,   395,   396,   397,   398,   399,
     400,   401,    -1,   403,   404,    -1,    -1,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,    -1,    -1,   423,   424,   425,   426,   427,   428,    -1,
     430,   431,   432,   433,   434,   435,   436,    -1,   438,   439,
     440,   441,   442,   443,    -1,    -1,   446,    -1,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,    -1,    -1,    -1,    -1,    -1,    -1,   477,   478,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   486,    -1,    -1,    -1,
      -1,   491,     3,     4,     5,     6,     7,     8,     9,    10,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    -1,    86,    87,    88,    89,    90,
      91,    -1,    93,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,    -1,   117,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,   127,   128,    -1,    -1,
     131,   132,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,    -1,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,    -1,   158,   159,   160,
     161,    -1,   163,    -1,   165,   166,    -1,   168,   169,   170,
     171,   172,   173,    -1,   175,    -1,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,   196,   197,    -1,   199,   200,
     201,   202,   203,   204,   205,   206,   207,    -1,   209,    -1,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
      -1,    -1,   223,   224,   225,   226,    -1,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,    -1,   277,   278,    -1,    -1,
     281,   282,   283,    -1,    -1,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,    -1,   303,   304,   305,   306,   307,   308,   309,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,    -1,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,    -1,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
      -1,   392,   393,    -1,   395,   396,   397,   398,   399,   400,
     401,    -1,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
      -1,    -1,   423,   424,   425,   426,   427,   428,    -1,   430,
     431,   432,   433,   434,   435,   436,    -1,   438,   439,   440,
     441,   442,   443,    -1,    -1,   446,    -1,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
      -1,    -1,    -1,    -1,    -1,    -1,   477,   478,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   486,    -1,    -1,    -1,    -1,
     491,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    74,    -1,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    -1,    86,    87,    88,    89,    90,    91,
      -1,    93,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,    -1,   117,   118,   119,   120,   121,
     122,    -1,   124,   125,   126,   127,   128,    -1,    -1,   131,
     132,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
     142,   143,    -1,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,    -1,   158,   159,   160,   161,
      -1,   163,    -1,   165,   166,    -1,   168,   169,   170,   171,
     172,   173,    -1,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,   190,    -1,
     192,   193,   194,   195,   196,   197,    -1,   199,   200,   201,
     202,   203,   204,   205,   206,   207,    -1,   209,    -1,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,    -1,
      -1,   223,   224,   225,   226,    -1,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,    -1,   277,   278,    -1,    -1,   281,
     282,   283,    -1,    -1,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
      -1,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,    -1,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,    -1,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,    -1,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,    -1,
     392,   393,    -1,   395,   396,   397,   398,   399,   400,   401,
      -1,   403,   404,    -1,    -1,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,    -1,
      -1,   423,   424,   425,   426,   427,   428,    -1,   430,   431,
     432,   433,   434,   435,   436,    -1,   438,   439,   440,   441,
     442,   443,    -1,    -1,   446,    -1,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,    -1,
      -1,    -1,    -1,    -1,    -1,   477,   478,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   486,    -1,    -1,    -1,    -1,   491,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,   166,    -1,   168,   169,   170,   171,   172,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,   200,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,    -1,    -1,
     223,   224,   225,   226,    -1,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,    -1,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,    -1,   277,   278,    -1,    -1,   281,   282,
     283,    -1,    -1,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,    -1,
     303,   304,   305,   306,   307,   308,   309,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,    -1,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,    -1,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,    -1,   392,
     393,    -1,   395,   396,   397,   398,   399,   400,   401,    -1,
     403,   404,    -1,    -1,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,    -1,    -1,
     423,   424,   425,   426,   427,   428,    -1,   430,   431,   432,
     433,   434,   435,   436,    -1,   438,   439,   440,   441,   442,
     443,    -1,    -1,   446,    -1,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   477,   478,    -1,    -1,     3,     4,
       5,     6,     7,   486,     9,    10,    -1,    -1,   491,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    74,
      -1,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      -1,    86,    87,    88,    89,    90,    91,    -1,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,    -1,
     115,    -1,   117,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,   127,   128,    -1,    -1,   131,   132,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,    -1,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,    -1,   158,   159,   160,   161,    -1,   163,    -1,
     165,   166,    -1,   168,   169,   170,   171,   172,   173,    -1,
     175,    -1,   177,   178,    -1,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,   193,   194,
     195,   196,   197,    -1,   199,   200,   201,   202,   203,   204,
     205,   206,   207,    -1,   209,    -1,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,    -1,    -1,   223,   224,
     225,   226,    -1,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,    -1,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,    -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,
      -1,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,    -1,   303,   304,
     305,   306,   307,   308,   309,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,    -1,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,    -1,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,    -1,   392,   393,    -1,
     395,   396,   397,   398,   399,   400,   401,    -1,   403,   404,
      -1,    -1,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,    -1,    -1,   423,   424,
     425,   426,   427,   428,    -1,   430,   431,   432,   433,   434,
     435,   436,    -1,   438,   439,   440,   441,   442,   443,    -1,
      -1,   446,    -1,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   477,   478,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   486,    -1,    -1,    -1,    -1,   491,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,    -1,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
     166,    -1,   168,   169,   170,   171,   172,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,   200,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,   213,   214,   215,
     216,   217,   218,   219,   220,    -1,    -1,   223,   224,   225,
     226,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,    -1,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,    -1,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,    -1,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,    -1,   392,   393,    -1,   395,
     396,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
      -1,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,    -1,    -1,   423,   424,   425,
     426,   427,   428,    -1,   430,   431,   432,   433,   434,   435,
     436,    -1,   438,   439,   440,   441,   442,   443,    -1,    -1,
     446,    -1,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   477,   478,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     486,    -1,    -1,    -1,    -1,   491,     3,     4,     5,     6,
       7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    74,    -1,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    -1,    86,
      87,    88,    89,    90,    91,    -1,    93,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,    -1,
     117,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
     127,   128,    -1,    -1,   131,   132,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,    -1,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
      -1,   158,   159,   160,   161,    -1,   163,    -1,   165,   166,
      -1,   168,   169,   170,   171,   172,   173,    -1,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,   193,   194,   195,   196,
     197,    -1,   199,   200,   201,   202,   203,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,   214,   215,   216,
     217,   218,   219,   220,    -1,    -1,   223,   224,   225,   226,
      -1,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,    -1,   265,   266,
      -1,   268,   269,   270,   271,   272,   273,   274,   275,    -1,
     277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,    -1,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,    -1,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,    -1,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,    -1,   392,   393,    -1,   395,   396,
     397,   398,   399,   400,   401,    -1,   403,   404,    -1,    -1,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,    -1,    -1,   423,   424,   425,   426,
     427,   428,    -1,   430,   431,   432,   433,   434,   435,   436,
      -1,   438,   439,   440,   441,   442,   443,    -1,    -1,   446,
      -1,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,    -1,    -1,    -1,    -1,    -1,    -1,
     477,   478,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   486,
      -1,    -1,    -1,    -1,   491,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      -1,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,    -1,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,   166,    -1,
     168,   169,   170,   171,    -1,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,   200,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,   214,   215,   216,   217,
     218,   219,   220,    -1,    -1,   223,   224,   225,    -1,    -1,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,    -1,   265,   266,    -1,
     268,   269,   270,   271,   272,   273,   274,   275,    -1,   277,
     278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,    -1,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,    -1,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,    -1,   372,   373,   374,   375,    -1,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,    -1,   392,   393,    -1,   395,   396,   397,
     398,   399,   400,   401,    -1,   403,   404,    -1,    -1,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,    -1,    -1,   423,   424,   425,   426,   427,
     428,    -1,   430,   431,   432,   433,   434,   435,   436,    -1,
     438,   439,   440,   441,   442,   443,    -1,    -1,   446,    -1,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,    -1,    -1,    -1,    -1,    -1,    -1,     3,   477,
     478,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   486,    -1,
      -1,    -1,    -1,   491,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    36,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    -1,    82,    83,    84,
      -1,    86,    87,    88,    89,    90,    91,    -1,    93,    94,
      95,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,    -1,
     115,    -1,   117,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,   127,   128,    -1,    -1,   131,   132,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,    -1,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
      -1,   156,    -1,   158,   159,   160,   161,    -1,   163,    -1,
     165,    -1,    -1,   168,   169,   170,   171,    -1,   173,    -1,
     175,    -1,   177,   178,    -1,   180,   181,   182,   183,   184,
     185,    -1,   187,   188,   189,   190,    -1,   192,   193,   194,
     195,   196,   197,    -1,   199,   200,   201,   202,   203,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,
     215,   216,   217,   218,   219,   220,    -1,    -1,   223,   224,
     225,    -1,    -1,   228,   229,   230,    -1,    -1,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,    -1,
     265,   266,    -1,   268,    -1,   270,   271,   272,   273,   274,
     275,    -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,
      -1,   286,   287,    -1,   289,    -1,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,    -1,   303,   304,
     305,   306,   307,   308,   309,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,    -1,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
      -1,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,    -1,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,    -1,   392,   393,    -1,
     395,   396,   397,   398,   399,   400,   401,    -1,   403,   404,
      -1,    -1,   407,   408,   409,   410,   411,    -1,   413,   414,
     415,   416,   417,   418,   419,   420,    -1,    -1,   423,   424,
     425,   426,   427,    -1,    -1,   430,   431,   432,   433,   434,
     435,   436,    -1,   438,    -1,   440,   441,   442,   443,    -1,
      -1,   446,    -1,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,    -1,    -1,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   487,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,    -1,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,    -1,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
     166,    -1,   168,   169,   170,   171,   172,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,   200,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,    -1,   223,   224,   225,
     226,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,    -1,   265,
     266,   267,   268,    -1,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,    -1,   280,   281,   282,   283,    -1,    -1,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,    -1,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,    -1,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,    -1,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
      -1,   407,   408,   409,   410,   411,    -1,   413,   414,   415,
     416,   417,   418,   419,   420,    -1,    -1,   423,   424,   425,
     426,   427,   428,    -1,   430,   431,   432,   433,   434,   435,
     436,    -1,   438,   439,   440,   441,   442,   443,    -1,    -1,
     446,    -1,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,    -1,     3,   472,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     486,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    61,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,    -1,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,    -1,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,   166,    -1,
     168,   169,   170,   171,   172,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,   200,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,    -1,   223,   224,   225,   226,    -1,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,    -1,   265,   266,   267,
     268,    -1,   270,   271,   272,   273,   274,   275,    -1,   277,
     278,    -1,   280,   281,   282,   283,    -1,    -1,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,    -1,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,    -1,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,    -1,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,    -1,   392,   393,    -1,   395,   396,   397,
     398,   399,   400,   401,    -1,   403,   404,    -1,    -1,   407,
     408,   409,   410,   411,    -1,   413,   414,   415,   416,   417,
     418,   419,   420,    -1,    -1,   423,   424,   425,   426,   427,
     428,    -1,   430,   431,   432,   433,   434,   435,   436,    -1,
     438,   439,   440,   441,   442,   443,    -1,    -1,   446,    -1,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,    -1,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   486,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    61,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    74,    -1,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    -1,    86,    87,    88,    89,
      90,    91,    -1,    93,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,    -1,   115,    -1,   117,   118,   119,
     120,   121,   122,    -1,   124,   125,   126,   127,   128,    -1,
      -1,   131,   132,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,    -1,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,    -1,   156,    -1,   158,   159,
     160,   161,    -1,   163,    -1,   165,   166,    -1,   168,   169,
     170,   171,   172,   173,    -1,   175,    -1,   177,   178,    -1,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
     190,    -1,   192,   193,   194,   195,   196,   197,    -1,   199,
     200,   201,   202,   203,   204,   205,   206,   207,    -1,   209,
      -1,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,    -1,    -1,   223,   224,   225,   226,    -1,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,    -1,   265,   266,   267,   268,    -1,
     270,   271,   272,   273,   274,   275,    -1,   277,   278,    -1,
      -1,   281,   282,   283,    -1,    -1,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,    -1,   303,   304,   305,   306,   307,   308,   309,
     310,   311,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
      -1,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,    -1,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,    -1,   392,   393,    -1,   395,   396,   397,   398,   399,
     400,   401,    -1,   403,   404,    -1,    -1,   407,   408,   409,
     410,   411,    -1,   413,   414,   415,   416,   417,   418,   419,
     420,    -1,    -1,   423,   424,   425,   426,   427,   428,    -1,
     430,   431,   432,   433,   434,   435,   436,    -1,   438,   439,
     440,   441,   442,   443,    -1,    -1,   446,    -1,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
      -1,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   486,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    61,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    74,    -1,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    -1,    86,    87,    88,    89,    90,    91,
      -1,    93,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,    -1,   115,    -1,   117,   118,   119,   120,   121,
     122,    -1,   124,   125,   126,   127,   128,    -1,    -1,   131,
     132,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
     142,   143,    -1,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,    -1,   156,    -1,   158,   159,   160,   161,
      -1,   163,    -1,   165,   166,    -1,   168,   169,   170,   171,
     172,   173,    -1,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,   190,    -1,
     192,   193,   194,   195,   196,   197,    -1,   199,   200,   201,
     202,   203,   204,   205,   206,   207,    -1,   209,    -1,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,    -1,
      -1,   223,   224,   225,   226,    -1,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,    -1,   265,   266,   267,   268,    -1,   270,   271,
     272,   273,   274,   275,    -1,   277,   278,    -1,    -1,   281,
     282,   283,    -1,    -1,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
      -1,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,    -1,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,    -1,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,    -1,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,    -1,
     392,   393,    -1,   395,   396,   397,   398,   399,   400,   401,
      -1,   403,   404,    -1,    -1,   407,   408,   409,   410,   411,
      -1,   413,   414,   415,   416,   417,   418,   419,   420,    -1,
      -1,   423,   424,   425,   426,   427,   428,    -1,   430,   431,
     432,   433,   434,   435,   436,    -1,   438,   439,   440,   441,
     442,   443,    -1,    -1,   446,    -1,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,    -1,     3,
       4,     5,    -1,    -1,    -1,     9,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   486,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    -1,    82,    83,
      84,    -1,    86,    87,    88,    89,    90,    91,    -1,    -1,
      94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
      -1,   115,    -1,   117,   118,   119,   120,   121,   122,    -1,
     124,   125,   126,   127,   128,    -1,    -1,   131,   132,   133,
     134,   135,    -1,   137,   138,   139,    -1,   141,   142,   143,
      -1,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,    -1,   158,   159,   160,   161,    -1,   163,
      -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,   173,
      -1,   175,    -1,   177,   178,    -1,   180,   181,   182,   183,
     184,   185,    -1,   187,   188,   189,   190,    -1,   192,   193,
     194,   195,   196,   197,    -1,   199,    -1,   201,   202,   203,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
     214,    -1,   216,   217,   218,   219,   220,    -1,    -1,   223,
      -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,    -1,   259,   260,   261,   262,   263,
      -1,   265,   266,    -1,   268,    -1,   270,   271,   272,   273,
     274,   275,    -1,   277,   278,   279,    -1,   281,   282,   283,
      -1,    -1,   286,   287,    -1,   289,    -1,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,    -1,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,    -1,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,    -1,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,   375,    -1,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,    -1,   392,   393,
      -1,   395,    -1,   397,   398,   399,   400,   401,    -1,   403,
     404,    -1,    -1,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,    -1,    -1,   423,
     424,   425,   426,   427,    -1,    -1,   430,   431,   432,   433,
     434,   435,   436,    -1,   438,    -1,   440,   441,   442,   443,
      -1,    -1,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,    -1,     3,    -1,    -1,
      -1,    -1,    -1,   477,   478,   479,    -1,    -1,    -1,    -1,
      -1,    -1,   486,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    31,    32,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    -1,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    -1,    94,    95,
      96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,    -1,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,    -1,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
      -1,    -1,    -1,   169,   170,   171,    -1,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
      -1,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,    -1,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,    -1,
     216,   217,   218,   219,   220,    -1,    -1,   223,    -1,   225,
      -1,    -1,   228,   229,   230,    -1,    -1,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,    -1,   259,   260,   261,   262,   263,    -1,   265,
     266,    -1,   268,    -1,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,
     286,   287,    -1,   289,    -1,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,    -1,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,    -1,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,    -1,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,    -1,   392,   393,   394,   395,
      -1,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
      -1,   407,   408,   409,   410,   411,    -1,   413,   414,   415,
     416,   417,   418,   419,   420,    -1,    -1,   423,   424,   425,
     426,   427,    -1,    -1,   430,   431,   432,   433,   434,   435,
     436,    -1,   438,    -1,   440,   441,   442,   443,    -1,    -1,
     446,    -1,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,    -1,     3,   472,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     486,    19,    20,    21,    22,    23,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    -1,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    -1,    94,    95,    96,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,    -1,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,    -1,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,
      -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,    -1,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,
     218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,
     228,   229,   230,    -1,    -1,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
      -1,   259,   260,   261,   262,   263,    -1,   265,   266,    -1,
     268,    -1,   270,   271,   272,   273,   274,   275,    -1,   277,
     278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,
      -1,   289,    -1,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,    -1,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,    -1,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,    -1,   366,   367,
     368,   369,   370,    -1,   372,   373,   374,   375,    -1,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,    -1,   392,   393,   394,   395,    -1,   397,
     398,   399,   400,   401,    -1,   403,   404,    -1,    -1,   407,
     408,   409,   410,   411,    -1,   413,   414,   415,   416,   417,
     418,   419,   420,    -1,    -1,   423,   424,   425,   426,   427,
      -1,    -1,   430,   431,   432,   433,   434,   435,   436,    -1,
     438,    -1,   440,   441,   442,   443,    -1,    -1,   446,    -1,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,    -1,     3,   472,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   486,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    -1,    82,    83,    84,    -1,    86,    87,    88,    89,
      90,    91,    -1,    -1,    94,    95,    96,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,    -1,   115,    -1,   117,   118,   119,
     120,   121,   122,    -1,   124,   125,   126,   127,   128,    -1,
      -1,   131,   132,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,    -1,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,    -1,   156,    -1,   158,   159,
     160,   161,    -1,   163,    -1,   165,    -1,    -1,    -1,   169,
     170,   171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,
     180,   181,   182,   183,   184,   185,    -1,   187,   188,   189,
     190,    -1,   192,   193,   194,   195,   196,   197,    -1,   199,
      -1,   201,   202,   203,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,   214,    -1,   216,   217,   218,   219,
     220,    -1,    -1,   223,    -1,   225,    -1,    -1,   228,   229,
     230,    -1,    -1,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,    -1,   259,
     260,   261,   262,   263,    -1,   265,   266,    -1,   268,    -1,
     270,   271,   272,   273,   274,   275,    -1,   277,   278,    -1,
      -1,   281,   282,   283,    -1,    -1,   286,   287,    -1,   289,
      -1,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,    -1,   303,   304,   305,   306,   307,   308,   309,
     310,   311,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
      -1,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,    -1,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,   375,    -1,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,    -1,   392,   393,   394,   395,    -1,   397,   398,   399,
     400,   401,    -1,   403,   404,    -1,    -1,   407,   408,   409,
     410,   411,    -1,   413,   414,   415,   416,   417,   418,   419,
     420,    -1,    -1,   423,   424,   425,   426,   427,    -1,    -1,
     430,   431,   432,   433,   434,   435,   436,    -1,   438,    -1,
     440,   441,   442,   443,    -1,    -1,   446,    -1,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
      -1,     3,   472,     5,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   486,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,
      82,    83,    84,    -1,    86,    87,    88,    89,    90,    91,
      -1,    -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,    -1,   115,    -1,   117,   118,   119,   120,   121,
     122,    -1,   124,   125,   126,   127,   128,    -1,    -1,   131,
     132,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
     142,   143,    -1,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,    -1,   156,    -1,   158,   159,   160,   161,
      -1,   163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,
      -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,   190,    -1,
     192,   193,   194,   195,   196,   197,    -1,   199,    -1,   201,
     202,   203,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,   214,    -1,   216,   217,   218,   219,   220,    -1,
      -1,   223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,
      -1,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,    -1,   259,   260,   261,
     262,   263,    -1,   265,   266,    -1,   268,    -1,   270,   271,
     272,   273,   274,   275,    -1,   277,   278,    -1,    -1,   281,
     282,   283,    -1,    -1,   286,   287,    -1,   289,    -1,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
      -1,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,    -1,   341,
     342,    -1,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,    -1,   360,   361,
     362,   363,   364,    -1,   366,   367,   368,   369,   370,    -1,
     372,   373,   374,   375,    -1,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,    -1,
     392,   393,    -1,   395,    -1,   397,   398,   399,   400,   401,
      -1,   403,   404,    -1,    -1,   407,   408,   409,   410,   411,
      -1,   413,   414,   415,   416,   417,   418,   419,   420,    -1,
      -1,   423,   424,   425,   426,   427,    -1,    -1,   430,   431,
     432,   433,   434,   435,   436,    -1,   438,    -1,   440,   441,
     442,   443,    -1,    -1,   446,    -1,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,    -1,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   486,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    -1,    82,    83,
      84,    -1,    86,    87,    88,    89,    90,    91,    -1,    -1,
      94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
      -1,   115,    -1,   117,   118,   119,   120,   121,   122,    -1,
     124,   125,   126,   127,   128,    -1,    -1,   131,   132,   133,
     134,   135,    -1,   137,   138,   139,    -1,   141,   142,   143,
      -1,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,    -1,   156,    -1,   158,   159,   160,   161,    -1,   163,
      -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,   173,
      -1,   175,    -1,   177,   178,    -1,   180,   181,   182,   183,
     184,   185,    -1,   187,   188,   189,   190,    -1,   192,   193,
     194,   195,   196,   197,    -1,   199,    -1,   201,   202,   203,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
     214,    -1,   216,   217,   218,   219,   220,    -1,    -1,   223,
      -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,    -1,   259,   260,   261,   262,   263,
      -1,   265,   266,    -1,   268,    -1,   270,   271,   272,   273,
     274,   275,    -1,   277,   278,    -1,    -1,   281,   282,   283,
      -1,    -1,   286,   287,    -1,   289,    -1,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,    -1,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,    -1,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,    -1,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,   375,    -1,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,    -1,   392,   393,
      -1,   395,    -1,   397,   398,   399,   400,   401,    -1,   403,
     404,    -1,    -1,   407,   408,   409,   410,   411,    -1,   413,
     414,   415,   416,   417,   418,   419,   420,    -1,    -1,   423,
     424,   425,   426,   427,    -1,    -1,   430,   431,   432,   433,
     434,   435,   436,    -1,   438,    -1,   440,   441,   442,   443,
      -1,    -1,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,    -1,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   486,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    -1,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    -1,    94,    95,
      96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,    -1,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,    -1,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
      -1,    -1,    -1,   169,   170,   171,    -1,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
      -1,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,    -1,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,    -1,
     216,   217,   218,   219,   220,    -1,    -1,   223,    -1,   225,
      -1,    -1,   228,   229,   230,    -1,    -1,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,    -1,   259,   260,   261,   262,   263,    -1,   265,
     266,    -1,   268,    -1,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,
     286,   287,    -1,   289,    -1,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,    -1,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,    -1,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,    -1,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,    -1,   392,   393,    -1,   395,
      -1,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
      -1,   407,   408,   409,   410,   411,    -1,   413,   414,   415,
     416,   417,   418,   419,   420,    -1,    -1,   423,   424,   425,
     426,   427,    -1,    -1,   430,   431,   432,   433,   434,   435,
     436,    -1,   438,    -1,   440,   441,   442,   443,    -1,    -1,
     446,    -1,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,    -1,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     486,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    -1,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    -1,    94,    95,    96,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,    -1,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,    -1,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,
      -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,    -1,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,
     218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,
     228,   229,   230,    -1,    -1,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
      -1,   259,   260,   261,   262,   263,    -1,   265,   266,    -1,
     268,    -1,   270,   271,   272,   273,   274,   275,    -1,   277,
     278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,
      -1,   289,    -1,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,    -1,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,    -1,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,    -1,   366,   367,
     368,   369,   370,    -1,   372,   373,   374,   375,    -1,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,    -1,   392,   393,    -1,   395,    -1,   397,
     398,   399,   400,   401,    -1,   403,   404,    -1,    -1,   407,
     408,   409,   410,   411,    -1,   413,   414,   415,   416,   417,
     418,   419,   420,    -1,    -1,   423,   424,   425,   426,   427,
      -1,    -1,   430,   431,   432,   433,   434,   435,   436,    -1,
     438,    -1,   440,   441,   442,   443,    -1,    -1,   446,    -1,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,    -1,    -1,    -1,    -1,     3,     4,     5,    -1,
      -1,     8,     9,    -1,    -1,    -1,    -1,    -1,   486,    16,
      17,    18,    19,    20,    21,    22,    23,    24,    25,    26,
      27,    28,    29,    30,    31,    32,    33,    34,    35,    36,
      37,    38,    39,    40,    41,    42,    43,    44,    45,    46,
      47,    -1,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    -1,    73,    74,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    86,
      87,    88,    89,    90,    91,    92,    93,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,   129,   130,   131,   132,   133,   134,   135,   136,
     137,   138,   139,   140,   141,   142,   143,   144,   145,   146,
     147,   148,    -1,   150,   151,   152,   153,    -1,   155,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   169,   170,   171,   172,   173,   174,   175,   176,
      -1,   178,   179,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,    -1,   202,   203,   204,   205,   206,
     207,   208,   209,   210,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,    -1,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
      -1,   288,   289,   290,    -1,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,    -1,   306,
     307,    -1,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,    -1,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,    -1,   410,    -1,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,    -1,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   466,
     467,   468,   469,    -1,     3,    -1,   473,   474,   475,     8,
     477,   478,   479,   480,   481,   482,    -1,    16,    17,    18,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    -1,    82,    83,    84,    -1,    86,    87,    88,
      89,    90,    91,    -1,    -1,    94,    95,    96,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,    -1,   115,    -1,   117,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,   127,   128,
      -1,    -1,   131,   132,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,    -1,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,    -1,   156,    -1,   158,
     159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,    -1,
     169,   170,   171,    -1,   173,    -1,   175,    -1,   177,   178,
      -1,   180,   181,   182,   183,   184,   185,    -1,   187,   188,
     189,   190,    -1,   192,   193,   194,   195,   196,   197,    -1,
     199,    -1,   201,   202,   203,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,   218,
     219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,   228,
     229,   230,    -1,    -1,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,    -1,
     259,   260,   261,   262,   263,    -1,   265,   266,    -1,   268,
      -1,   270,   271,   272,   273,   274,   275,    -1,   277,   278,
      -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,    -1,
     289,    -1,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,    -1,   303,   304,   305,   306,   307,   308,
     309,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,    -1,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,    -1,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,    -1,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,    -1,   392,   393,    -1,   395,    -1,   397,   398,
     399,   400,   401,    -1,   403,   404,    -1,    -1,   407,   408,
     409,   410,   411,    -1,   413,   414,   415,   416,   417,   418,
     419,   420,    -1,    -1,   423,   424,   425,   426,   427,    -1,
      -1,   430,   431,   432,   433,   434,   435,   436,    -1,   438,
      -1,   440,   441,   442,   443,    -1,    -1,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,    -1,    -1,    -1,   473,   474,   475,    -1,   477,   478,
     479,   480,   481,   482,     8,    -1,    -1,    11,    -1,    -1,
      -1,    -1,    16,    17,    18,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,     8,    -1,    -1,    11,    -1,    -1,    -1,    33,
      16,    17,    18,    -1,    -1,    -1,    -1,    41,    -1,    -1,
       8,    -1,    -1,    11,    48,    -1,    -1,    33,    16,    17,
      18,    -1,    -1,    -1,    -1,    41,    -1,    -1,    -1,    -1,
      -1,    -1,    48,    -1,    -1,    33,    -1,    -1,     8,    73,
      -1,    11,    -1,    41,    -1,    -1,    16,    17,    18,    -1,
      48,    -1,    -1,    -1,    -1,    -1,     8,    73,    -1,    11,
      -1,    -1,    -1,    33,    16,    17,    18,    -1,    -1,    -1,
      -1,    41,    -1,    -1,     8,    73,    -1,    11,    48,    -1,
      -1,    33,    16,    17,    18,    -1,    -1,    -1,    -1,    41,
      -1,    -1,    -1,    -1,    -1,    -1,    48,    -1,    -1,    33,
      -1,    -1,    -1,    73,    -1,    -1,    -1,    41,    -1,    -1,
      -1,    -1,    -1,    -1,    48,    -1,    -1,    -1,    -1,    -1,
      -1,    73,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   172,    73,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   186,    -1,    -1,    -1,   172,   191,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     186,    -1,    -1,    -1,   172,   191,    -1,    -1,   212,   213,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   186,    -1,
      -1,    -1,   226,   191,    -1,    -1,   212,   213,    -1,    -1,
      -1,    -1,   172,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     226,    -1,    -1,    -1,   212,   213,   186,    -1,    -1,    -1,
     172,   191,    -1,    -1,    -1,    -1,    -1,    -1,   226,    -1,
     264,    -1,    -1,   267,   186,    -1,    -1,    -1,   172,   191,
      -1,    -1,   212,   213,    -1,    -1,    -1,   281,   264,    -1,
     284,   267,   186,    -1,    -1,    -1,   226,   191,    -1,    -1,
     212,   213,    -1,    -1,    -1,   281,   264,    -1,   284,   267,
      -1,    -1,    -1,    -1,   226,    -1,    -1,    -1,   212,   213,
      -1,    -1,    -1,   281,    -1,    -1,   284,    -1,    -1,    -1,
      -1,    -1,   226,    -1,   264,    -1,    -1,   267,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   281,   264,    -1,   284,   267,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   281,
     264,    -1,   284,   267,    -1,    -1,    -1,   371,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   281,    -1,    -1,
     284,    -1,    -1,    -1,    -1,   371,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   371,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,     8,    -1,    -1,    11,    -1,
      -1,    -1,    -1,    16,    17,    18,    -1,    -1,    -1,    -1,
      -1,   371,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    41,   371,
      -1,    -1,    -1,    -1,    -1,    48,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   470,   371,    -1,   473,
     474,   475,    -1,   477,   478,   479,   480,   481,   482,    -1,
      73,    -1,    -1,   487,   470,    -1,    -1,   473,   474,   475,
      -1,   477,   478,   479,   480,   481,   482,    -1,    -1,    -1,
      -1,   487,   470,    -1,    -1,   473,   474,   475,    -1,   477,
     478,   479,   480,   481,   482,    -1,    -1,    -1,    -1,   487,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     470,    -1,    -1,   473,   474,   475,    -1,   477,   478,   479,
     480,   481,   482,    -1,    -1,    -1,    -1,   487,   470,    -1,
      -1,   473,   474,   475,    -1,   477,   478,   479,   480,   481,
     482,    -1,    -1,    -1,    -1,   487,   470,    -1,    -1,   473,
     474,   475,    -1,   477,   478,   479,   480,   481,   482,   172,
      -1,     8,    -1,   487,    11,    -1,    -1,    -1,    -1,    16,
      17,    18,    -1,   186,    -1,    -1,    -1,    -1,   191,     8,
      -1,    -1,    11,    -1,    -1,    -1,    33,    16,    17,    18,
      -1,    -1,    -1,    -1,    41,    -1,    -1,    -1,    -1,   212,
     213,    48,    -1,    -1,    33,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    41,   226,    -1,    -1,    -1,    -1,    -1,    48,
      -1,    -1,     8,    -1,    -1,    11,    73,    -1,    -1,    -1,
      16,    17,    18,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
       8,    -1,    -1,    11,    73,    -1,    -1,    33,    16,    17,
      18,   264,    -1,    -1,   267,    41,    -1,    -1,    -1,    -1,
      -1,    -1,    48,    -1,    -1,    33,    -1,    -1,   281,    -1,
      -1,   284,    -1,    41,    -1,    -1,    -1,    -1,    -1,    -1,
      48,    -1,    -1,    -1,    -1,    -1,    -1,    73,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    73,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   172,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   186,
      -1,    -1,    -1,   172,   191,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   186,   371,    -1,
      -1,    -1,   191,    -1,    -1,   212,   213,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   226,
      -1,    -1,    -1,   212,   213,    -1,   172,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   226,    -1,    -1,
     186,    -1,    -1,    -1,   172,   191,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   264,   186,    -1,
     267,    -1,    -1,   191,    -1,    -1,   212,   213,    -1,    -1,
      -1,    -1,    -1,    -1,   281,   264,    -1,   284,   267,    -1,
     226,    -1,    -1,    -1,   212,   213,    -1,    -1,    -1,    -1,
      -1,    -1,   281,    -1,    -1,   284,    -1,   470,   226,    -1,
     473,   474,   475,    -1,   477,   478,   479,   480,   481,   482,
      -1,    -1,    -1,    -1,   487,    -1,    -1,    -1,   264,    -1,
      -1,   267,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   281,   264,    -1,   284,   267,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   281,    -1,    -1,   284,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   371,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   371,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   371,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   371,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   470,    -1,    -1,   473,   474,   475,    -1,
     477,   478,   479,   480,   481,   482,    -1,    -1,    -1,    -1,
     487,   470,    -1,    -1,   473,   474,   475,    -1,   477,   478,
     479,   480,   481,   482,    -1,    -1,    -1,    -1,   487,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   470,    -1,    -1,   473,   474,   475,
      -1,   477,   478,   479,   480,   481,   482,    -1,    -1,    -1,
      -1,   487,   470,     3,    -1,   473,   474,   475,    -1,   477,
     478,   479,   480,   481,   482,    -1,    -1,   485,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    31,    32,    33,    34,    35,    36,    37,    38,    39,
      40,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,    71,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    -1,    82,    83,    84,    85,    86,    87,    88,    89,
      90,    91,    92,    -1,    94,    95,    96,    97,    98,    99,
      -1,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,   116,   117,   118,   119,
     120,   121,   122,   123,   124,   125,   126,   127,   128,   129,
     130,   131,   132,   133,   134,   135,   136,   137,   138,   139,
     140,   141,   142,   143,   144,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,    -1,   167,    -1,   169,
     170,   171,    -1,   173,   174,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,   185,    -1,   187,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
      -1,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     210,   211,    -1,    -1,   214,    -1,   216,   217,   218,   219,
     220,   221,   222,   223,    -1,   225,    -1,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,    -1,   259,
     260,   261,   262,   263,   264,   265,   266,    -1,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,    -1,   289,
      -1,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,    -1,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,    -1,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   479,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,    -1,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,   214,    -1,   216,   217,   218,   219,   220,    -1,    -1,
     223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,    -1,   259,   260,   261,   262,
     263,    -1,   265,   266,    -1,   268,    -1,   270,   271,   272,
     273,   274,   275,    -1,   277,   278,    -1,    -1,   281,   282,
     283,    -1,    -1,   286,   287,    -1,   289,    -1,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,    -1,
     303,   304,   305,   306,   307,   308,   309,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,    -1,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,    -1,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,   375,    -1,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,    -1,   392,
     393,    -1,   395,    -1,   397,   398,   399,   400,   401,    -1,
     403,   404,    -1,    -1,   407,   408,   409,   410,   411,    -1,
     413,   414,   415,   416,   417,   418,   419,   420,    -1,    -1,
     423,   424,   425,   426,   427,    -1,    -1,   430,   431,   432,
     433,   434,   435,   436,    -1,   438,    -1,   440,   441,   442,
     443,    -1,    -1,   446,    -1,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,     3,     4,     5,
      -1,    -1,    -1,     9,    -1,    -1,   479,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    -1,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    -1,    94,    95,
      96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
      -1,    -1,    -1,   169,   170,   171,    -1,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
      -1,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,    -1,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,    -1,
     216,   217,   218,   219,   220,    -1,    -1,   223,    -1,   225,
      -1,    -1,   228,   229,   230,    -1,    -1,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,    -1,   259,   260,   261,   262,   263,    -1,   265,
     266,    -1,   268,    -1,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,   279,    -1,   281,   282,   283,    -1,    -1,
     286,   287,    -1,   289,    -1,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,    -1,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,    -1,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,    -1,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,    -1,   392,   393,    -1,   395,
      -1,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
      -1,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,    -1,    -1,   423,   424,   425,
     426,   427,    -1,    -1,   430,   431,   432,   433,   434,   435,
     436,    -1,   438,    -1,   440,   441,   442,   443,    -1,    -1,
     446,    -1,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,     3,     4,     5,    -1,    -1,    -1,
       9,   477,   478,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    -1,    82,    83,    84,    -1,    86,    87,    88,
      89,    90,    91,    -1,    -1,    94,    95,    96,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,    -1,   117,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,   127,   128,
      -1,    -1,   131,   132,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,    -1,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,    -1,   158,
     159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,    -1,
     169,   170,   171,    -1,   173,    -1,   175,    -1,   177,   178,
      -1,   180,   181,   182,   183,   184,   185,    -1,   187,   188,
     189,   190,    -1,   192,   193,   194,   195,   196,   197,    -1,
     199,    -1,   201,   202,   203,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,   218,
     219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,   228,
     229,   230,    -1,    -1,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,    -1,
     259,   260,   261,   262,   263,    -1,   265,   266,    -1,   268,
      -1,   270,   271,   272,   273,   274,   275,    -1,   277,   278,
     279,    -1,   281,   282,   283,    -1,    -1,   286,   287,    -1,
     289,    -1,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,    -1,   303,   304,   305,   306,   307,   308,
     309,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,    -1,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,    -1,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,    -1,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,    -1,   392,   393,    -1,   395,    -1,   397,   398,
     399,   400,   401,    -1,   403,   404,    -1,    -1,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,    -1,    -1,   423,   424,   425,   426,   427,    -1,
      -1,   430,   431,   432,   433,   434,   435,   436,    -1,   438,
      -1,   440,   441,   442,   443,    -1,    -1,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,     3,     4,     5,    -1,    -1,    -1,     9,   477,   478,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,
      82,    83,    84,    -1,    86,    87,    88,    89,    90,    91,
      -1,    -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,    -1,   115,    -1,   117,   118,   119,   120,   121,
     122,    -1,   124,   125,   126,   127,   128,    -1,    -1,   131,
     132,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
     142,   143,    -1,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,    -1,   158,   159,   160,   161,
      -1,   163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,
      -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,   190,    -1,
     192,   193,   194,   195,   196,   197,    -1,   199,    -1,   201,
     202,   203,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,   214,    -1,   216,   217,   218,   219,   220,    -1,
      -1,   223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,
      -1,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,    -1,   259,   260,   261,
     262,   263,    -1,   265,   266,    -1,   268,    -1,   270,   271,
     272,   273,   274,   275,    -1,   277,   278,   279,    -1,   281,
     282,   283,    -1,    -1,   286,   287,    -1,   289,    -1,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
      -1,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,    -1,   341,
     342,    -1,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,    -1,   360,   361,
     362,   363,   364,    -1,   366,   367,   368,   369,   370,    -1,
     372,   373,   374,   375,    -1,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,    -1,
     392,   393,    -1,   395,    -1,   397,   398,   399,   400,   401,
      -1,   403,   404,    -1,    -1,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,    -1,
      -1,   423,   424,   425,   426,   427,    -1,    -1,   430,   431,
     432,   433,   434,   435,   436,    -1,   438,    -1,   440,   441,
     442,   443,    -1,    -1,   446,    -1,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,    -1,     8,
      -1,    -1,    11,    -1,    -1,   477,   478,    16,    17,    18,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,     8,    -1,    -1,
      11,    -1,    -1,    -1,    33,    16,    17,    18,    37,    -1,
      -1,    -1,    41,    -1,    -1,     8,    -1,    -1,    11,    48,
      -1,    -1,    33,    16,    17,    18,    -1,    -1,    -1,    -1,
      41,    -1,    -1,    -1,    -1,    -1,    -1,    48,    -1,    -1,
      33,    -1,    -1,     8,    73,    -1,    11,    -1,    41,    -1,
      -1,    16,    17,    18,    -1,    48,    -1,    -1,    -1,    -1,
      -1,    -1,    73,    -1,    -1,    -1,    -1,    -1,    33,    -1,
      -1,    36,    -1,    -1,    -1,    -1,    41,    -1,    -1,     8,
      73,    -1,    11,    48,    -1,    -1,    -1,    16,    17,    18,
      -1,    -1,    -1,    -1,   123,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    33,    -1,    -1,    -1,    73,    -1,
      -1,    -1,    41,    -1,    -1,    -1,    -1,    -1,    -1,    48,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   172,    73,    -1,    -1,    -1,    -1,    -1,
      -1,   162,    -1,    -1,    -1,    -1,   167,   186,    -1,    -1,
      -1,   172,   191,     8,    -1,    -1,    11,    -1,   161,    -1,
      -1,    16,    17,    18,    -1,   186,    -1,    -1,    -1,   172,
     191,    -1,    -1,   212,   213,    -1,    -1,    -1,    33,    -1,
      -1,    36,    -1,   186,    -1,    -1,    41,   226,   191,    -1,
      -1,   212,   213,    48,    -1,    -1,    -1,   172,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   226,    -1,    -1,    -1,   212,
     213,   186,    -1,    -1,    -1,    -1,   191,    -1,    73,    -1,
      -1,    -1,    -1,   226,    -1,   264,    -1,    -1,   267,    -1,
      -1,    -1,    -1,   172,    -1,    -1,    -1,   212,   213,    -1,
      -1,    -1,   281,   264,    -1,   284,   267,   186,    -1,    -1,
      -1,   226,   191,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     281,   264,    -1,   284,   267,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   212,   213,    -1,    -1,    -1,   281,    -1,
      -1,   284,    -1,    -1,    -1,    -1,    -1,   226,    -1,   264,
      -1,    -1,   267,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   307,    -1,   281,    -1,    -1,   284,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   172,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   264,    -1,    -1,   267,    -1,
      -1,   186,   371,    -1,    -1,    -1,   191,    -1,    -1,    -1,
      -1,    -1,   281,    -1,    -1,   284,    -1,    -1,    -1,    -1,
     371,    -1,    -1,    -1,    -1,    -1,    -1,   212,   213,    -1,
      -1,    -1,    -1,   302,    -1,    -1,    -1,    -1,   371,    -1,
      -1,   226,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,     8,    -1,    -1,    11,    -1,
     429,    -1,    -1,    16,    17,    18,   371,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   264,
      33,    -1,   267,    -1,    -1,    -1,    -1,    -1,    41,    -1,
      -1,    -1,    -1,    -1,    -1,    48,   281,    -1,    -1,   284,
      -1,   470,   371,    -1,   473,   474,   475,    -1,   477,   478,
     479,   480,   481,   482,    -1,    -1,    -1,    -1,    -1,   470,
      73,    -1,   473,   474,   475,    -1,   477,   478,   479,   480,
     481,   482,    -1,    -1,    -1,    -1,    -1,   470,    -1,    -1,
     473,   474,   475,    -1,   477,   478,   479,   480,   481,   482,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   470,    -1,    -1,   473,   474,
     475,    -1,   477,   478,   479,   480,   481,   482,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   371,    -1,    -1,    -1,
       8,    -1,    -1,    11,    -1,    -1,    -1,    -1,    16,    17,
      18,   470,    -1,    -1,   473,   474,   475,    -1,   477,   478,
     479,   480,   481,   482,   167,    33,    -1,    -1,    36,   172,
      -1,    -1,    -1,    41,    -1,    -1,    -1,    -1,    -1,    -1,
      48,    -1,    -1,   186,    -1,    -1,     8,    -1,   191,    11,
      -1,    -1,    -1,    -1,    16,    17,    18,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    73,    -1,    -1,    -1,   212,
     213,    33,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    41,
      -1,    -1,    -1,   226,    -1,    -1,    48,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   470,    -1,    -1,   473,   474,
     475,    -1,   477,   478,   479,   480,   481,   482,    -1,    -1,
      -1,    73,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   264,    -1,    -1,   267,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,     8,   281,    -1,
      11,   284,    -1,    -1,    -1,    16,    17,    18,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    33,    -1,   172,    -1,    -1,    -1,    -1,    -1,
      41,    -1,    -1,    -1,    -1,    -1,     8,    48,   186,    11,
      -1,    -1,    -1,   191,    16,    17,    18,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    33,    73,    -1,   212,   213,    -1,    -1,    -1,    41,
     172,    -1,    -1,    -1,    -1,    -1,    48,    -1,   226,    -1,
      -1,    -1,    -1,    -1,   186,    -1,    -1,    -1,   371,   191,
      -1,    -1,    -1,    -1,     8,    -1,    -1,    11,    -1,    -1,
      -1,    73,    16,    17,    18,    -1,    -1,    -1,    -1,    -1,
     212,   213,    -1,    -1,    -1,    -1,   264,    -1,    -1,   267,
      -1,    -1,    -1,    -1,   226,    -1,    -1,    41,    -1,    -1,
      -1,    -1,    -1,   281,    48,    -1,   284,    -1,    -1,    -1,
      -1,     8,    -1,    -1,    11,    -1,    -1,    -1,    -1,    16,
      17,    18,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    73,
      -1,   172,   264,    -1,    -1,   267,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    41,   186,    -1,    -1,    -1,   281,
     191,    48,   284,    -1,    -1,    -1,    -1,   470,    -1,    -1,
     473,   474,   475,    -1,   477,   478,   479,   480,   481,   482,
     172,   212,   213,    -1,    -1,    -1,    73,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   186,   226,    -1,    -1,    -1,   191,
      -1,    -1,    -1,   371,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     212,   213,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   264,   226,    -1,   267,    -1,   172,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   371,
     281,    -1,   186,   284,    -1,    -1,    -1,   191,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   264,    -1,    -1,   267,    -1,    -1,   212,   213,
     402,    -1,    -1,    -1,    -1,   172,    -1,    -1,    -1,   281,
      -1,    -1,   226,    -1,    -1,    -1,    -1,    -1,    -1,   186,
      -1,    -1,   470,    -1,   191,   473,   474,   475,    -1,   477,
     478,   479,   480,   481,   482,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   212,   213,    -1,    -1,    -1,
     264,    -1,    -1,   267,    -1,    -1,    -1,    -1,    -1,   226,
     371,    -1,    -1,    -1,    -1,    -1,    -1,   281,   470,    -1,
      -1,   473,   474,   475,    -1,   477,   478,   479,   480,   481,
     482,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   371,
     267,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   281,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   371,    -1,   470,
      -1,    -1,   473,   474,   475,    -1,   477,   478,   479,   480,
     481,   482,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   470,    -1,
      -1,   473,   474,   475,   371,   477,   478,   479,   480,   481,
     482,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   470,    -1,    -1,   473,
     474,   475,    -1,   477,   478,   479,   480,   481,   482,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
       3,    -1,     5,   470,    -1,    -1,   473,   474,   475,    -1,
     477,   478,   479,   480,   481,   482,    19,    20,    21,    22,
      23,    24,    25,    26,    27,    28,    29,    30,    31,    32,
      33,    34,    35,    36,    37,    38,    39,    40,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    -1,    82,
      83,    84,    85,    86,    87,    88,    89,    90,    91,    92,
      -1,    94,    95,    96,    97,    98,    99,    -1,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   129,   130,   131,   132,
     133,   134,   135,   136,   137,   138,   139,   140,   141,   142,
     143,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,    -1,   167,    -1,   169,   170,   171,    -1,
     173,   174,   175,   176,   177,   178,   179,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   210,   211,    -1,
      -1,   214,    -1,   216,   217,   218,   219,   220,   221,   222,
     223,    -1,   225,    -1,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,    -1,   259,   260,   261,   262,
     263,   264,   265,   266,    -1,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,    -1,   289,    -1,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,    -1,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,    -1,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    27,    28,    29,    30,    31,    32,    33,    34,    35,
      36,    37,    38,    39,    40,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    -1,    82,    83,    84,    85,
      86,    87,    88,    89,    90,    91,    92,    -1,    94,    95,
      96,    97,    98,    99,    -1,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
     136,   137,   138,   139,   140,   141,   142,   143,   144,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
      -1,   167,    -1,   169,   170,   171,    -1,   173,   174,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
      -1,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,    -1,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   210,   211,    -1,    -1,   214,    -1,
     216,   217,   218,   219,   220,   221,   222,   223,    -1,   225,
      -1,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,    -1,   259,   260,   261,   262,   263,   264,   265,
     266,    -1,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,    -1,   289,    -1,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
      -1,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,    -1,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    27,    28,
      29,    30,    31,    32,    33,    34,    35,    36,    37,    38,
      39,    40,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    -1,    82,    83,    84,    85,    86,    87,    88,
      89,    90,    91,    92,    -1,    94,    95,    96,    97,    98,
      99,    -1,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     129,   130,   131,   132,   133,   134,   135,   136,   137,   138,
     139,   140,   141,   142,   143,   144,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,    -1,   167,    -1,
     169,   170,   171,    -1,   173,   174,   175,   176,   177,   178,
     179,   180,   181,   182,   183,   184,   185,    -1,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,    -1,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   210,   211,    -1,    -1,   214,    -1,   216,   217,   218,
     219,   220,   221,   222,   223,    -1,   225,    -1,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,    -1,
     259,   260,   261,   262,   263,   264,   265,   266,    -1,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,    -1,
     289,    -1,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,    -1,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
      -1,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    61,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    74,    -1,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    -1,    86,    87,    88,    89,    90,    91,
      -1,    93,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,    -1,   115,    -1,   117,   118,   119,   120,   121,
     122,    -1,   124,   125,   126,   127,   128,    -1,    -1,   131,
     132,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
     142,   143,    -1,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,    -1,   156,    -1,   158,   159,   160,   161,
      -1,   163,    -1,   165,   166,    -1,   168,   169,   170,   171,
     172,   173,    -1,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,   190,    -1,
     192,   193,   194,   195,   196,   197,    -1,   199,   200,   201,
     202,   203,   204,   205,   206,   207,    -1,   209,    -1,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,    -1,
      -1,   223,   224,   225,   226,    -1,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,    -1,   265,   266,   267,   268,    -1,   270,   271,
     272,   273,   274,   275,    -1,   277,   278,    -1,    -1,   281,
     282,   283,    -1,    -1,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
      -1,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,    -1,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,    -1,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,    -1,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,    -1,
     392,   393,    -1,   395,   396,   397,   398,   399,   400,   401,
      -1,   403,   404,    -1,    -1,   407,   408,   409,   410,   411,
      -1,   413,   414,   415,   416,   417,   418,   419,   420,    -1,
      -1,   423,   424,   425,   426,   427,   428,    -1,   430,   431,
     432,   433,   434,   435,   436,    -1,   438,   439,   440,   441,
     442,   443,    -1,    -1,   446,    -1,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    74,
      -1,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      -1,    86,    87,    88,    89,    90,    91,    -1,    93,    94,
      95,    96,    -1,    -1,    -1,   100,    -1,    -1,    -1,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,    -1,
     115,    -1,   117,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,   127,   128,    -1,    -1,   131,   132,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,    -1,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
      -1,   156,    -1,   158,   159,   160,   161,    -1,   163,    -1,
     165,   166,    -1,   168,   169,   170,   171,   172,   173,    -1,
     175,    -1,   177,   178,    -1,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,   193,   194,
     195,   196,   197,    -1,   199,   200,   201,   202,   203,   204,
     205,   206,   207,    -1,   209,    -1,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,    -1,    -1,   223,   224,
     225,   226,    -1,   228,   229,   230,    -1,    -1,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,    -1,
     265,   266,   267,   268,    -1,   270,   271,   272,   273,   274,
     275,    -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,
      -1,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,    -1,   303,   304,
     305,   306,   307,   308,   309,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,    -1,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
      -1,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,    -1,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,    -1,   392,   393,    -1,
     395,   396,   397,   398,   399,   400,   401,    -1,   403,   404,
      -1,    -1,   407,   408,   409,   410,   411,    -1,   413,   414,
     415,   416,   417,   418,   419,   420,    -1,    -1,   423,   424,
     425,   426,   427,    -1,    -1,   430,   431,   432,   433,   434,
     435,   436,    -1,   438,   439,   440,   441,   442,   443,    -1,
      -1,   446,    -1,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    67,
      68,    69,    70,    71,    72,    -1,    -1,    75,    76,    77,
      78,    79,    80,    -1,    82,    83,    84,    85,    86,    87,
      88,    89,    90,    91,    -1,    -1,    94,    95,    96,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,    -1,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,    -1,   156,    -1,
     158,   159,   160,   161,    -1,   163,   164,   165,    -1,    -1,
      -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,    -1,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,
     218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,
     228,   229,   230,    -1,    -1,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
      -1,   259,   260,   261,   262,   263,    -1,   265,   266,    -1,
     268,    -1,   270,   271,   272,   273,   274,   275,    -1,   277,
     278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,
      -1,   289,    -1,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,    -1,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,    -1,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,    -1,   366,   367,
     368,   369,   370,    -1,   372,   373,   374,   375,    -1,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,    -1,   392,   393,    -1,   395,    -1,   397,
     398,   399,   400,   401,    -1,   403,   404,    -1,    -1,   407,
     408,   409,   410,   411,    -1,   413,   414,   415,   416,   417,
     418,   419,   420,    -1,   422,   423,   424,   425,   426,   427,
      -1,    -1,   430,   431,   432,   433,   434,   435,   436,    -1,
     438,    -1,   440,   441,   442,   443,    -1,    -1,   446,    -1,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      -1,    82,    83,    84,    85,    86,    87,    88,    89,    90,
      91,    -1,    -1,    94,    95,    96,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,    -1,   115,    -1,   117,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,   127,   128,    -1,    -1,
     131,   132,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,    -1,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,    -1,   156,    -1,   158,   159,   160,
     161,    -1,   163,   164,   165,    -1,    -1,    -1,   169,   170,
     171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,    -1,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,   196,   197,    -1,   199,    -1,
     201,   202,   203,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,   214,    -1,   216,   217,   218,   219,   220,
      -1,    -1,   223,    -1,   225,   226,    -1,   228,   229,   230,
      -1,    -1,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,    -1,   259,   260,
     261,   262,   263,    -1,   265,   266,    -1,   268,    -1,   270,
     271,   272,   273,   274,   275,    -1,   277,   278,    -1,    -1,
     281,   282,   283,    -1,    -1,   286,   287,    -1,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,    -1,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,    -1,
     341,   342,    -1,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,    -1,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,    -1,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
      -1,   392,   393,    -1,   395,    -1,   397,   398,   399,   400,
     401,    -1,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,    -1,   413,   414,   415,   416,   417,   418,   419,   420,
      -1,   422,   423,   424,   425,   426,   427,    -1,    -1,   430,
     431,   432,   433,   434,   435,   436,    -1,   438,    -1,   440,
     441,   442,   443,    -1,    -1,   446,    -1,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,     3,
      -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    -1,    82,    83,
      84,    -1,    86,    87,    88,    89,    90,    91,    -1,    -1,
      94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
      -1,   115,    -1,   117,   118,   119,   120,   121,   122,    -1,
     124,   125,   126,   127,   128,    -1,    -1,   131,   132,   133,
     134,   135,    -1,   137,   138,   139,    -1,   141,   142,   143,
      -1,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,    -1,   158,   159,   160,   161,    -1,   163,
      -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,   173,
      -1,   175,    -1,   177,   178,    -1,   180,   181,   182,   183,
     184,   185,    -1,   187,   188,   189,   190,    -1,   192,   193,
     194,   195,   196,   197,    -1,   199,    -1,   201,   202,   203,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
     214,    -1,   216,   217,   218,   219,   220,    -1,    -1,   223,
      -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,    -1,   259,   260,   261,   262,   263,
      -1,   265,   266,    -1,   268,    -1,   270,   271,   272,   273,
     274,   275,    -1,   277,   278,   279,    -1,   281,   282,   283,
      -1,    -1,   286,   287,    -1,   289,    -1,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,    -1,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,    -1,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,    -1,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,   375,    -1,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,    -1,   392,   393,
      -1,   395,    -1,   397,   398,   399,   400,   401,    -1,   403,
     404,    -1,    -1,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,    -1,    -1,   423,
     424,   425,   426,   427,    -1,    -1,   430,   431,   432,   433,
     434,   435,   436,    -1,   438,    -1,   440,   441,   442,   443,
      -1,    -1,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    31,    32,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    -1,    82,    83,    84,    -1,    86,
      87,    88,    89,    90,    91,    -1,    -1,    94,    95,    96,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,    -1,   115,    -1,
     117,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
     127,   128,    -1,    -1,   131,   132,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,    -1,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,    -1,   156,
      -1,   158,   159,   160,   161,    -1,   163,    -1,   165,    -1,
      -1,    -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,    -1,
     187,   188,   189,   190,    -1,   192,   193,   194,   195,   196,
     197,    -1,   199,    -1,   201,   202,   203,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,
     217,   218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,
      -1,   228,   229,   230,    -1,    -1,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,    -1,   259,   260,   261,   262,   263,    -1,   265,   266,
      -1,   268,    -1,   270,   271,   272,   273,   274,   275,    -1,
     277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,
     287,    -1,   289,    -1,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,    -1,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,    -1,   341,   342,    -1,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,    -1,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,   375,    -1,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,    -1,   392,   393,    -1,   395,    -1,
     397,   398,   399,   400,   401,    -1,   403,   404,    -1,    -1,
     407,   408,   409,   410,   411,    -1,   413,   414,   415,   416,
     417,   418,   419,   420,    -1,    -1,   423,   424,   425,   426,
     427,    -1,    -1,   430,   431,   432,   433,   434,   435,   436,
      -1,   438,    -1,   440,   441,   442,   443,    -1,    -1,   446,
      -1,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    31,    32,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    -1,    82,    83,    84,    -1,    86,    87,    88,    89,
      90,    91,    -1,    -1,    94,    95,    96,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,    -1,   115,    -1,   117,   118,   119,
     120,   121,   122,    -1,   124,   125,   126,   127,   128,    -1,
      -1,   131,   132,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,    -1,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,    -1,   156,    -1,   158,   159,
     160,   161,    -1,   163,    -1,   165,    -1,    -1,    -1,   169,
     170,   171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,
     180,   181,   182,   183,   184,   185,    -1,   187,   188,   189,
     190,    -1,   192,   193,   194,   195,   196,   197,    -1,   199,
      -1,   201,   202,   203,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,   214,    -1,   216,   217,   218,   219,
     220,    -1,    -1,   223,    -1,   225,    -1,    -1,   228,   229,
     230,    -1,    -1,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,    -1,   259,
     260,   261,   262,   263,    -1,   265,   266,    -1,   268,    -1,
     270,   271,   272,   273,   274,   275,    -1,   277,   278,    -1,
      -1,   281,   282,   283,    -1,    -1,   286,   287,    -1,   289,
      -1,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,    -1,   303,   304,   305,   306,   307,   308,   309,
     310,   311,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
      -1,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,    -1,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,   375,    -1,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,    -1,   392,   393,    -1,   395,    -1,   397,   398,   399,
     400,   401,    -1,   403,   404,    -1,    -1,   407,   408,   409,
     410,   411,    -1,   413,   414,   415,   416,   417,   418,   419,
     420,    -1,    -1,   423,   424,   425,   426,   427,    -1,    -1,
     430,   431,   432,   433,   434,   435,   436,    -1,   438,    -1,
     440,   441,   442,   443,    -1,    -1,   446,    -1,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
       3,     4,    -1,    -1,    -1,    -1,     9,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,    -1,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,   214,    -1,   216,   217,   218,   219,   220,    -1,    -1,
     223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,    -1,   259,   260,   261,   262,
     263,    -1,   265,   266,    -1,   268,    -1,   270,   271,   272,
     273,   274,   275,    -1,   277,   278,    -1,    -1,   281,   282,
     283,    -1,    -1,   286,   287,    -1,   289,    -1,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,    -1,
     303,   304,   305,   306,   307,   308,   309,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,    -1,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,    -1,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,   375,    -1,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,    -1,   392,
     393,    -1,   395,    -1,   397,   398,   399,   400,   401,    -1,
     403,   404,    -1,    -1,   407,   408,   409,   410,   411,    -1,
     413,   414,   415,   416,   417,   418,   419,   420,    -1,    -1,
     423,   424,   425,   426,   427,    -1,    -1,   430,   431,   432,
     433,   434,   435,   436,    -1,   438,    -1,   440,   441,   442,
     443,    -1,    -1,   446,    -1,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    27,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    -1,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    -1,    94,    95,
      96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,    -1,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,    -1,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
      -1,    -1,    -1,   169,   170,   171,    -1,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
      -1,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,    -1,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,    -1,
     216,   217,   218,   219,   220,    -1,    -1,   223,    -1,   225,
      -1,    -1,   228,   229,   230,    -1,    -1,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,    -1,   259,   260,   261,   262,   263,    -1,   265,
     266,    -1,   268,    -1,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,
     286,   287,    -1,   289,    -1,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,    -1,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,    -1,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,    -1,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,    -1,   392,   393,    -1,   395,
      -1,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
      -1,   407,   408,   409,   410,   411,    -1,   413,   414,   415,
     416,   417,   418,   419,   420,    -1,    -1,   423,   424,   425,
     426,   427,    -1,    -1,   430,   431,   432,   433,   434,   435,
     436,    -1,   438,    -1,   440,   441,   442,   443,    -1,    -1,
     446,    -1,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    27,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    -1,    82,    83,    84,    -1,    86,    87,    88,
      89,    90,    91,    -1,    -1,    94,    95,    96,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,    -1,   115,    -1,   117,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,   127,   128,
      -1,    -1,   131,   132,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,    -1,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,    -1,   156,    -1,   158,
     159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,    -1,
     169,   170,   171,    -1,   173,    -1,   175,    -1,   177,   178,
      -1,   180,   181,   182,   183,   184,   185,    -1,   187,   188,
     189,   190,    -1,   192,   193,   194,   195,   196,   197,    -1,
     199,    -1,   201,   202,   203,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,   218,
     219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,   228,
     229,   230,    -1,    -1,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,    -1,
     259,   260,   261,   262,   263,    -1,   265,   266,    -1,   268,
      -1,   270,   271,   272,   273,   274,   275,    -1,   277,   278,
      -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,    -1,
     289,    -1,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,    -1,   303,   304,   305,   306,   307,   308,
     309,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,    -1,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,    -1,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,    -1,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,    -1,   392,   393,    -1,   395,    -1,   397,   398,
     399,   400,   401,    -1,   403,   404,    -1,    -1,   407,   408,
     409,   410,   411,    -1,   413,   414,   415,   416,   417,   418,
     419,   420,    -1,    -1,   423,   424,   425,   426,   427,    -1,
      -1,   430,   431,   432,   433,   434,   435,   436,    -1,   438,
      -1,   440,   441,   442,   443,    -1,    -1,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,
      82,    83,    84,    -1,    86,    87,    88,    89,    90,    91,
      -1,    -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,    -1,   115,    -1,   117,   118,   119,   120,   121,
     122,    -1,   124,   125,   126,   127,   128,    -1,    -1,   131,
     132,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
     142,   143,    -1,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,    -1,   156,    -1,   158,   159,   160,   161,
      -1,   163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,
      -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,   190,    -1,
     192,   193,   194,   195,   196,   197,    -1,   199,    -1,   201,
     202,   203,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,   214,    -1,   216,   217,   218,   219,   220,    -1,
      -1,   223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,
      -1,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,    -1,   259,   260,   261,
     262,   263,    -1,   265,   266,    -1,   268,    -1,   270,   271,
     272,   273,   274,   275,    -1,   277,   278,    -1,   280,   281,
     282,   283,    -1,    -1,   286,   287,    -1,   289,    -1,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
      -1,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,    -1,   341,
     342,    -1,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,    -1,   360,   361,
     362,   363,   364,    -1,   366,   367,   368,   369,   370,    -1,
     372,   373,   374,   375,    -1,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,    -1,
     392,   393,    -1,   395,    -1,   397,   398,   399,   400,   401,
      -1,   403,   404,    -1,    -1,   407,   408,   409,   410,   411,
      -1,   413,   414,   415,   416,   417,   418,   419,   420,    -1,
      -1,   423,   424,   425,   426,   427,    -1,    -1,   430,   431,
     432,   433,   434,   435,   436,    -1,   438,    -1,   440,   441,
     442,   443,    -1,    -1,   446,    -1,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    -1,    82,    83,    84,
      -1,    86,    87,    88,    89,    90,    91,    -1,    -1,    94,
      95,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,    -1,
     115,    -1,   117,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,   127,   128,    -1,    -1,   131,   132,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,    -1,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
      -1,   156,    -1,   158,   159,   160,   161,    -1,   163,    -1,
     165,    -1,    -1,    -1,   169,   170,   171,    -1,   173,    -1,
     175,    -1,   177,   178,    -1,   180,   181,   182,   183,   184,
     185,    -1,   187,   188,   189,   190,    -1,   192,   193,   194,
     195,   196,   197,    -1,   199,    -1,   201,   202,   203,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,
      -1,   216,   217,   218,   219,   220,    -1,    -1,   223,    -1,
     225,    -1,    -1,   228,   229,   230,    -1,    -1,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,    -1,   259,   260,   261,   262,   263,    -1,
     265,   266,    -1,   268,    -1,   270,   271,   272,   273,   274,
     275,    -1,   277,   278,    -1,   280,   281,   282,   283,    -1,
      -1,   286,   287,    -1,   289,    -1,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,    -1,   303,   304,
     305,   306,   307,   308,   309,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,    -1,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
      -1,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,    -1,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,    -1,   392,   393,    -1,
     395,    -1,   397,   398,   399,   400,   401,    -1,   403,   404,
      -1,    -1,   407,   408,   409,   410,   411,    -1,   413,   414,
     415,   416,   417,   418,   419,   420,    -1,    -1,   423,   424,
     425,   426,   427,    -1,    -1,   430,   431,   432,   433,   434,
     435,   436,    -1,   438,    -1,   440,   441,   442,   443,    -1,
      -1,   446,    -1,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    -1,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    -1,    94,    95,    96,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,    -1,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,    -1,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,
      -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,    -1,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,
     218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,
     228,   229,   230,    -1,    -1,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
      -1,   259,   260,   261,   262,   263,    -1,   265,   266,    -1,
     268,    -1,   270,   271,   272,   273,   274,   275,    -1,   277,
     278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,
      -1,   289,    -1,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,    -1,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,    -1,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,    -1,   366,   367,
     368,   369,   370,    -1,   372,   373,   374,   375,    -1,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,    -1,   392,   393,    -1,   395,    -1,   397,
     398,   399,   400,   401,    -1,   403,   404,    -1,    -1,   407,
     408,   409,   410,   411,    -1,   413,   414,   415,   416,   417,
     418,   419,   420,    -1,    -1,   423,   424,   425,   426,   427,
      -1,    -1,   430,   431,   432,   433,   434,   435,   436,    -1,
     438,    -1,   440,   441,   442,   443,    -1,    -1,   446,    -1,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      -1,    82,    83,    84,    -1,    86,    87,    88,    89,    90,
      91,    -1,    -1,    94,    95,    96,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,    -1,   115,    -1,   117,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,   127,   128,    -1,    -1,
     131,   132,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,    -1,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,    -1,   156,    -1,   158,   159,   160,
     161,    -1,   163,    -1,   165,    -1,    -1,    -1,   169,   170,
     171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,    -1,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,   196,   197,    -1,   199,    -1,
     201,   202,   203,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,   214,    -1,   216,   217,   218,   219,   220,
      -1,    -1,   223,    -1,   225,    -1,    -1,   228,   229,   230,
      -1,    -1,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,    -1,   259,   260,
     261,   262,   263,    -1,   265,   266,    -1,   268,    -1,   270,
     271,   272,   273,   274,   275,    -1,   277,   278,    -1,    -1,
     281,   282,   283,    -1,    -1,   286,   287,    -1,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,    -1,   303,   304,   305,   306,   307,   308,   309,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,    -1,
     341,   342,    -1,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,    -1,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,    -1,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
      -1,   392,   393,   394,   395,    -1,   397,   398,   399,   400,
     401,    -1,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,    -1,   413,   414,   415,   416,   417,   418,   419,   420,
      -1,    -1,   423,   424,   425,   426,   427,    -1,    -1,   430,
     431,   432,   433,   434,   435,   436,    -1,   438,    -1,   440,
     441,   442,   443,    -1,    -1,   446,    -1,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    36,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    -1,    82,    83,
      84,    -1,    86,    87,    88,    89,    90,    91,    -1,    -1,
      94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
      -1,   115,    -1,   117,   118,   119,   120,   121,   122,    -1,
     124,   125,   126,   127,   128,    -1,    -1,   131,   132,   133,
     134,   135,    -1,   137,   138,   139,    -1,   141,   142,   143,
      -1,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,    -1,   156,    -1,   158,   159,   160,   161,    -1,   163,
      -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,   173,
      -1,   175,    -1,   177,   178,    -1,   180,   181,   182,   183,
     184,   185,    -1,   187,   188,   189,   190,    -1,   192,   193,
     194,   195,   196,   197,    -1,   199,    -1,   201,   202,   203,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
     214,    -1,   216,   217,   218,   219,   220,    -1,    -1,   223,
      -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,    -1,   259,   260,   261,   262,   263,
      -1,   265,   266,    -1,   268,    -1,   270,   271,   272,   273,
     274,   275,    -1,   277,   278,    -1,    -1,   281,   282,   283,
      -1,    -1,   286,   287,    -1,   289,    -1,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,    -1,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,    -1,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,    -1,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,   375,    -1,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,    -1,   392,   393,
      -1,   395,    -1,   397,   398,   399,   400,   401,    -1,   403,
     404,    -1,    -1,   407,   408,   409,   410,   411,    -1,   413,
     414,   415,   416,   417,   418,   419,   420,    -1,    -1,   423,
     424,   425,   426,   427,    -1,    -1,   430,   431,   432,   433,
     434,   435,   436,    -1,   438,    -1,   440,   441,   442,   443,
      -1,    -1,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    36,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    -1,    82,    83,    84,    -1,    86,
      87,    88,    89,    90,    91,    -1,    -1,    94,    95,    96,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,    -1,   115,    -1,
     117,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
     127,   128,    -1,    -1,   131,   132,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,    -1,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,    -1,   156,
      -1,   158,   159,   160,   161,    -1,   163,    -1,   165,    -1,
      -1,    -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,    -1,
     187,   188,   189,   190,    -1,   192,   193,   194,   195,   196,
     197,    -1,   199,    -1,   201,   202,   203,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,
     217,   218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,
      -1,   228,   229,   230,    -1,    -1,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,    -1,   259,   260,   261,   262,   263,    -1,   265,   266,
      -1,   268,    -1,   270,   271,   272,   273,   274,   275,    -1,
     277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,
     287,    -1,   289,    -1,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,    -1,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,    -1,   341,   342,    -1,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,    -1,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,   375,    -1,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,    -1,   392,   393,    -1,   395,    -1,
     397,   398,   399,   400,   401,    -1,   403,   404,    -1,    -1,
     407,   408,   409,   410,   411,    -1,   413,   414,   415,   416,
     417,   418,   419,   420,    -1,    -1,   423,   424,   425,   426,
     427,    -1,    -1,   430,   431,   432,   433,   434,   435,   436,
      -1,   438,    -1,   440,   441,   442,   443,    -1,    -1,   446,
      -1,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,     3,    -1,     5,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    -1,    82,    83,    84,    -1,    86,    87,    88,    89,
      90,    91,    -1,    -1,    94,    95,    96,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,    -1,   115,    -1,   117,   118,   119,
     120,   121,   122,    -1,   124,   125,   126,   127,   128,    -1,
      -1,   131,   132,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,    -1,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,    -1,   156,    -1,   158,   159,
     160,   161,    -1,   163,    -1,   165,    -1,    -1,    -1,   169,
     170,   171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,
     180,   181,   182,   183,   184,   185,    -1,   187,   188,   189,
     190,    -1,   192,   193,   194,   195,   196,   197,    -1,   199,
      -1,   201,   202,   203,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,   214,    -1,   216,   217,   218,   219,
     220,    -1,    -1,   223,    -1,   225,    -1,    -1,   228,   229,
     230,    -1,    -1,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,    -1,   259,
     260,   261,   262,   263,    -1,   265,   266,    -1,   268,    -1,
     270,   271,   272,   273,   274,   275,    -1,   277,   278,    -1,
      -1,   281,   282,   283,    -1,    -1,   286,   287,    -1,   289,
      -1,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,    -1,   303,   304,   305,   306,   307,   308,   309,
     310,   311,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
      -1,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,    -1,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,   375,    -1,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,    -1,   392,   393,    -1,   395,    -1,   397,   398,   399,
     400,   401,    -1,   403,   404,    -1,    -1,   407,   408,   409,
     410,   411,    -1,   413,   414,   415,   416,   417,   418,   419,
     420,    -1,    -1,   423,   424,   425,   426,   427,    -1,    -1,
     430,   431,   432,   433,   434,   435,   436,    -1,   438,    -1,
     440,   441,   442,   443,    -1,    -1,   446,    -1,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,    -1,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,   214,    -1,   216,   217,   218,   219,   220,    -1,    -1,
     223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,    -1,   259,   260,   261,   262,
     263,    -1,   265,   266,    -1,   268,    -1,   270,   271,   272,
     273,   274,   275,    -1,   277,   278,    -1,    -1,   281,   282,
     283,    -1,    -1,   286,   287,    -1,   289,    -1,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,    -1,
     303,   304,   305,   306,   307,   308,   309,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,    -1,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,    -1,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,   375,    -1,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,    -1,   392,
     393,    -1,   395,    -1,   397,   398,   399,   400,   401,    -1,
     403,   404,    -1,    -1,   407,   408,   409,   410,   411,    -1,
     413,   414,   415,   416,   417,   418,   419,   420,    -1,    -1,
     423,   424,   425,   426,   427,    -1,    -1,   430,   431,   432,
     433,   434,   435,   436,    -1,   438,    -1,   440,   441,   442,
     443,    -1,    -1,   446,    -1,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    -1,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    -1,    94,    95,
      96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,    -1,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,    -1,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
      -1,    -1,    -1,   169,   170,   171,    -1,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
      -1,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,    -1,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,    -1,
     216,   217,   218,   219,   220,    -1,    -1,   223,    -1,   225,
      -1,    -1,   228,   229,   230,    -1,    -1,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,    -1,   259,   260,   261,   262,   263,    -1,   265,
     266,    -1,   268,    -1,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,
     286,   287,    -1,   289,    -1,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,    -1,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,    -1,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,    -1,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,    -1,   392,   393,    -1,   395,
      -1,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
      -1,   407,   408,   409,   410,   411,    -1,   413,   414,   415,
     416,   417,   418,   419,   420,    -1,    -1,   423,   424,   425,
     426,   427,    -1,    -1,   430,   431,   432,   433,   434,   435,
     436,    -1,   438,    -1,   440,   441,   442,   443,    -1,    -1,
     446,    -1,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    -1,    82,    83,    84,    -1,    86,    87,    88,
      89,    90,    91,    -1,    -1,    94,    95,    96,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,    -1,   115,    -1,   117,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,   127,   128,
      -1,    -1,   131,   132,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,    -1,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,    -1,   156,    -1,   158,
     159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,    -1,
     169,   170,   171,    -1,   173,    -1,   175,    -1,   177,   178,
      -1,   180,   181,   182,   183,   184,   185,    -1,   187,   188,
     189,   190,    -1,   192,   193,   194,   195,   196,   197,    -1,
     199,    -1,   201,   202,   203,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,   218,
     219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,   228,
     229,   230,    -1,    -1,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,    -1,
     259,   260,   261,   262,   263,    -1,   265,   266,    -1,   268,
      -1,   270,   271,   272,   273,   274,   275,    -1,   277,   278,
      -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,    -1,
     289,    -1,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,    -1,   303,   304,   305,   306,   307,   308,
     309,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,    -1,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,    -1,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,    -1,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,    -1,   392,   393,    -1,   395,    -1,   397,   398,
     399,   400,   401,    -1,   403,   404,    -1,    -1,   407,   408,
     409,   410,   411,    -1,   413,   414,   415,   416,   417,   418,
     419,   420,    -1,    -1,   423,   424,   425,   426,   427,    -1,
      -1,   430,   431,   432,   433,   434,   435,   436,    -1,   438,
      -1,   440,   441,   442,   443,    -1,    -1,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,
      82,    83,    84,    -1,    86,    87,    88,    89,    90,    91,
      -1,    -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,    -1,   115,    -1,   117,   118,   119,   120,   121,
     122,    -1,   124,   125,   126,   127,   128,    -1,    -1,   131,
     132,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
     142,   143,    -1,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,    -1,   156,    -1,   158,   159,   160,   161,
      -1,   163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,
      -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,   190,    -1,
     192,   193,   194,   195,   196,   197,    -1,   199,    -1,   201,
     202,   203,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,   214,    -1,   216,   217,   218,   219,   220,    -1,
      -1,   223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,
      -1,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,    -1,   259,   260,   261,
     262,   263,    -1,   265,   266,    -1,   268,    -1,   270,   271,
     272,   273,   274,   275,    -1,   277,   278,    -1,    -1,   281,
     282,   283,    -1,    -1,   286,   287,    -1,   289,    -1,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
      -1,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,    -1,   341,
     342,    -1,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,    -1,   360,   361,
     362,   363,   364,    -1,   366,   367,   368,   369,   370,    -1,
     372,   373,   374,   375,    -1,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,    -1,
     392,   393,    -1,   395,    -1,   397,   398,   399,   400,   401,
      -1,   403,   404,    -1,    -1,   407,   408,   409,   410,   411,
      -1,   413,   414,   415,   416,   417,   418,   419,   420,    -1,
      -1,   423,   424,   425,   426,   427,    -1,    -1,   430,   431,
     432,   433,   434,   435,   436,    -1,   438,    -1,   440,   441,
     442,   443,    -1,    -1,   446,    -1,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    -1,    82,    83,    84,
      -1,    86,    87,    88,    89,    90,    91,    -1,    -1,    94,
      95,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,    -1,
     115,    -1,   117,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,   127,   128,    -1,    -1,   131,   132,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,    -1,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
      -1,   156,    -1,   158,   159,   160,   161,    -1,   163,    -1,
     165,    -1,    -1,    -1,   169,   170,   171,    -1,   173,    -1,
     175,    -1,   177,   178,    -1,   180,   181,   182,   183,   184,
     185,    -1,   187,   188,   189,   190,    -1,   192,   193,   194,
     195,   196,   197,    -1,   199,    -1,   201,   202,   203,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,
      -1,   216,   217,   218,   219,   220,    -1,    -1,   223,    -1,
     225,    -1,    -1,   228,   229,   230,    -1,    -1,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,    -1,   259,   260,   261,   262,   263,    -1,
     265,   266,    -1,   268,    -1,   270,   271,   272,   273,   274,
     275,    -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,
      -1,   286,   287,    -1,   289,    -1,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,    -1,   303,   304,
     305,   306,   307,   308,   309,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,    -1,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
      -1,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,    -1,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,    -1,   392,   393,    -1,
     395,    -1,   397,   398,   399,   400,   401,    -1,   403,   404,
      -1,    -1,   407,   408,   409,   410,   411,    -1,   413,   414,
     415,   416,   417,   418,   419,   420,    -1,    -1,   423,   424,
     425,   426,   427,    -1,    -1,   430,   431,   432,   433,   434,
     435,   436,    -1,   438,    -1,   440,   441,   442,   443,    -1,
      -1,   446,    -1,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    -1,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    -1,    94,    95,    96,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,    -1,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,    -1,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,
      -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,    -1,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,
     218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,
     228,   229,   230,    -1,    -1,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
      -1,   259,   260,   261,   262,   263,    -1,   265,   266,    -1,
     268,    -1,   270,   271,   272,   273,   274,   275,    -1,   277,
     278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,
      -1,   289,    -1,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,    -1,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,    -1,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,    -1,   366,   367,
     368,   369,   370,    -1,   372,   373,   374,   375,    -1,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,    -1,   392,   393,    -1,   395,    -1,   397,
     398,   399,   400,   401,    -1,   403,   404,    -1,    -1,   407,
     408,   409,   410,   411,    -1,   413,   414,   415,   416,   417,
     418,   419,   420,    -1,    -1,   423,   424,   425,   426,   427,
      -1,    -1,   430,   431,   432,   433,   434,   435,   436,    -1,
     438,    -1,   440,   441,   442,   443,    -1,    -1,   446,    -1,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      -1,    82,    83,    84,    -1,    86,    87,    88,    89,    90,
      91,    -1,    -1,    94,    95,    96,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,    -1,   115,    -1,   117,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,   127,   128,    -1,    -1,
     131,   132,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,    -1,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,    -1,   156,    -1,   158,   159,   160,
     161,    -1,   163,    -1,   165,    -1,    -1,    -1,   169,   170,
     171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,    -1,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,   196,   197,    -1,   199,    -1,
     201,   202,   203,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,   214,    -1,   216,   217,   218,   219,   220,
      -1,    -1,   223,    -1,   225,    -1,    -1,   228,   229,   230,
      -1,    -1,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,    -1,   259,   260,
     261,   262,   263,    -1,   265,   266,    -1,   268,    -1,   270,
     271,   272,   273,   274,   275,    -1,   277,   278,    -1,    -1,
     281,   282,   283,    -1,    -1,   286,   287,    -1,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,    -1,   303,   304,   305,   306,   307,   308,   309,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,    -1,
     341,   342,    -1,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,    -1,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,    -1,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
      -1,   392,   393,    -1,   395,    -1,   397,   398,   399,   400,
     401,    -1,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,    -1,   413,   414,   415,   416,   417,   418,   419,   420,
      -1,    -1,   423,   424,   425,   426,   427,    -1,    -1,   430,
     431,   432,   433,   434,   435,   436,    -1,   438,    -1,   440,
     441,   442,   443,    -1,    -1,   446,    -1,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    -1,    82,    83,
      84,    -1,    86,    87,    88,    89,    90,    91,    -1,    -1,
      94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
      -1,   115,    -1,   117,   118,   119,   120,   121,   122,    -1,
     124,   125,   126,   127,   128,    -1,    -1,   131,   132,   133,
     134,   135,    -1,   137,   138,   139,    -1,   141,   142,   143,
      -1,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,    -1,   156,    -1,   158,   159,   160,   161,    -1,   163,
      -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,   173,
      -1,   175,    -1,   177,   178,    -1,   180,   181,   182,   183,
     184,   185,    -1,   187,   188,   189,   190,    -1,   192,   193,
     194,   195,   196,   197,    -1,   199,    -1,   201,   202,   203,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
     214,    -1,   216,   217,   218,   219,   220,    -1,    -1,   223,
      -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,    -1,   259,   260,   261,   262,   263,
      -1,   265,   266,    -1,   268,    -1,   270,   271,   272,   273,
     274,   275,    -1,   277,   278,    -1,    -1,   281,   282,   283,
      -1,    -1,   286,   287,    -1,   289,    -1,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,    -1,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,    -1,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,    -1,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,   375,    -1,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,    -1,   392,   393,
      -1,   395,    -1,   397,   398,   399,   400,   401,    -1,   403,
     404,    -1,    -1,   407,   408,   409,   410,   411,    -1,   413,
     414,   415,   416,   417,   418,   419,   420,    -1,    -1,   423,
     424,   425,   426,   427,    -1,    -1,   430,   431,   432,   433,
     434,   435,   436,    -1,   438,    -1,   440,   441,   442,   443,
      -1,    -1,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    -1,    82,    83,    84,    -1,    86,
      87,    88,    89,    90,    91,    -1,    -1,    94,    95,    96,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,    -1,   115,    -1,
     117,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
     127,   128,    -1,    -1,   131,   132,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,    -1,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,    -1,   156,
      -1,   158,   159,   160,   161,    -1,   163,    -1,   165,    -1,
      -1,    -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,    -1,
     187,   188,   189,   190,    -1,   192,   193,   194,   195,   196,
     197,    -1,   199,    -1,   201,   202,   203,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,
     217,   218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,
      -1,   228,   229,   230,    -1,    -1,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,    -1,   259,   260,   261,   262,   263,    -1,   265,   266,
      -1,   268,    -1,   270,   271,   272,   273,   274,   275,    -1,
     277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,
     287,    -1,   289,    -1,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,    -1,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,    -1,   341,   342,    -1,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,    -1,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,   375,    -1,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,    -1,   392,   393,    -1,   395,    -1,
     397,   398,   399,   400,   401,    -1,   403,   404,    -1,    -1,
     407,   408,   409,   410,   411,    -1,   413,   414,   415,   416,
     417,   418,   419,   420,    -1,    -1,   423,   424,   425,   426,
     427,    -1,    -1,   430,   431,   432,   433,   434,   435,   436,
      -1,   438,    -1,   440,   441,   442,   443,    -1,    -1,   446,
      -1,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    -1,    82,    83,    84,    -1,    86,    87,    88,    89,
      90,    91,    -1,    -1,    94,    95,    96,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,    -1,   115,    -1,   117,   118,   119,
     120,   121,   122,    -1,   124,   125,   126,   127,   128,    -1,
      -1,   131,   132,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,    -1,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,    -1,   156,    -1,   158,   159,
     160,   161,    -1,   163,    -1,   165,    -1,    -1,    -1,   169,
     170,   171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,
     180,   181,   182,   183,   184,   185,    -1,   187,   188,   189,
     190,    -1,   192,   193,   194,   195,   196,   197,    -1,   199,
      -1,   201,   202,   203,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,   214,    -1,   216,   217,   218,   219,
     220,    -1,    -1,   223,    -1,   225,    -1,    -1,   228,   229,
     230,    -1,    -1,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,    -1,   259,
     260,   261,   262,   263,    -1,   265,   266,    -1,   268,    -1,
     270,   271,   272,   273,   274,   275,    -1,   277,   278,    -1,
      -1,   281,   282,   283,    -1,    -1,   286,   287,    -1,   289,
      -1,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,    -1,   303,   304,   305,   306,   307,   308,   309,
     310,   311,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
      -1,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,    -1,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,   375,    -1,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,    -1,   392,   393,    -1,   395,    -1,   397,   398,   399,
     400,   401,    -1,   403,   404,    -1,    -1,   407,   408,   409,
     410,   411,    -1,   413,   414,   415,   416,   417,   418,   419,
     420,    -1,    -1,   423,   424,   425,   426,   427,    -1,    -1,
     430,   431,   432,   433,   434,   435,   436,    -1,   438,    -1,
     440,   441,   442,   443,    -1,    -1,   446,    -1,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,    -1,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,   214,    -1,   216,   217,   218,   219,   220,    -1,    -1,
     223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,    -1,   259,   260,   261,   262,
     263,    -1,   265,   266,    -1,   268,    -1,   270,   271,   272,
     273,   274,   275,    -1,   277,   278,    -1,    -1,   281,   282,
     283,    -1,    -1,   286,   287,    -1,   289,    -1,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,    -1,
     303,   304,   305,   306,   307,   308,   309,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,    -1,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,    -1,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,   375,    -1,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,    -1,   392,
     393,    -1,   395,    -1,   397,   398,   399,   400,   401,    -1,
     403,   404,    -1,    -1,   407,   408,   409,   410,   411,    -1,
     413,   414,   415,   416,   417,   418,   419,   420,    -1,    -1,
     423,   424,   425,   426,   427,    -1,    -1,   430,   431,   432,
     433,   434,   435,   436,    -1,   438,    -1,   440,   441,   442,
     443,    -1,    -1,   446,    -1,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    -1,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    -1,    94,    95,
      96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,    -1,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,    -1,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
      -1,    -1,    -1,   169,   170,   171,    -1,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
      -1,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,    -1,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,    -1,
     216,   217,   218,   219,   220,    -1,    -1,   223,    -1,   225,
      -1,    -1,   228,   229,   230,    -1,    -1,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,    -1,   259,   260,   261,   262,   263,    -1,   265,
     266,    -1,   268,    -1,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,
     286,   287,    -1,   289,    -1,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,    -1,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,    -1,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,    -1,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,    -1,   392,   393,    -1,   395,
      -1,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
      -1,   407,   408,   409,   410,   411,    -1,   413,   414,   415,
     416,   417,   418,   419,   420,    -1,    -1,   423,   424,   425,
     426,   427,    -1,    -1,   430,   431,   432,   433,   434,   435,
     436,    -1,   438,    -1,   440,   441,   442,   443,    -1,    -1,
     446,    -1,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    -1,    82,    83,    84,    -1,    86,    87,    88,
      89,    90,    91,    -1,    -1,    94,    95,    96,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,    -1,   115,    -1,   117,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,   127,   128,
      -1,    -1,   131,   132,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,    -1,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,    -1,   156,    -1,   158,
     159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,    -1,
     169,   170,   171,    -1,   173,    -1,   175,    -1,   177,   178,
      -1,   180,   181,   182,   183,   184,   185,    -1,   187,   188,
     189,   190,    -1,   192,   193,   194,   195,   196,   197,    -1,
     199,    -1,   201,   202,   203,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,   218,
     219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,   228,
     229,   230,    -1,    -1,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,    -1,
     259,   260,   261,   262,   263,    -1,   265,   266,    -1,   268,
      -1,   270,   271,   272,   273,   274,   275,    -1,   277,   278,
      -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,    -1,
     289,    -1,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,    -1,   303,   304,   305,   306,   307,   308,
     309,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,    -1,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,    -1,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,    -1,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,    -1,   392,   393,    -1,   395,    -1,   397,   398,
     399,   400,   401,    -1,   403,   404,    -1,    -1,   407,   408,
     409,   410,   411,    -1,   413,   414,   415,   416,   417,   418,
     419,   420,    -1,    -1,   423,   424,   425,   426,   427,    -1,
      -1,   430,   431,   432,   433,   434,   435,   436,    -1,   438,
      -1,   440,   441,   442,   443,    -1,    -1,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    36,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,
      82,    83,    84,    -1,    86,    87,    88,    89,    90,    91,
      -1,    -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,    -1,   115,    -1,   117,   118,   119,   120,   121,
     122,    -1,   124,   125,   126,   127,   128,    -1,    -1,   131,
     132,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
     142,   143,    -1,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,    -1,   156,    -1,   158,   159,   160,   161,
      -1,   163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,
      -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,   190,    -1,
     192,   193,   194,   195,   196,   197,    -1,   199,    -1,   201,
     202,   203,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,   214,    -1,   216,   217,   218,   219,   220,    -1,
      -1,   223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,
      -1,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,    -1,   259,   260,   261,
     262,   263,    -1,   265,   266,    -1,   268,    -1,   270,   271,
     272,   273,   274,   275,    -1,   277,   278,    -1,    -1,   281,
     282,   283,    -1,    -1,   286,   287,    -1,   289,    -1,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
      -1,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,    -1,   341,
     342,    -1,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,    -1,   360,   361,
     362,   363,   364,    -1,    -1,   367,   368,   369,   370,    -1,
     372,   373,   374,   375,    -1,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,    -1,
     392,   393,    -1,   395,    -1,   397,   398,   399,   400,   401,
      -1,   403,   404,    -1,    -1,   407,   408,   409,   410,   411,
      -1,   413,   414,   415,   416,   417,   418,   419,   420,    -1,
      -1,   423,   424,   425,   426,   427,    -1,    -1,   430,   431,
     432,   433,   434,   435,   436,    -1,   438,    -1,   440,   441,
     442,   443,    -1,    -1,   446,    -1,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    -1,    82,    83,    84,
      -1,    86,    87,    88,    89,    90,    91,    -1,    -1,    94,
      95,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,    -1,
     115,    -1,   117,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,   127,   128,    -1,    -1,   131,   132,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,    -1,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
      -1,   156,    -1,   158,   159,   160,   161,    -1,   163,    -1,
     165,    -1,    -1,    -1,   169,   170,   171,    -1,   173,    -1,
     175,    -1,   177,   178,    -1,   180,   181,   182,   183,   184,
     185,    -1,   187,   188,   189,   190,    -1,   192,   193,   194,
     195,   196,   197,    -1,   199,    -1,   201,   202,   203,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,
      -1,   216,   217,   218,   219,   220,    -1,    -1,   223,    -1,
     225,    -1,    -1,   228,   229,   230,    -1,    -1,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,    -1,   259,   260,   261,   262,   263,    -1,
     265,   266,    -1,   268,    -1,   270,   271,   272,   273,   274,
     275,    -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,
      -1,   286,   287,    -1,   289,    -1,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,    -1,   303,   304,
     305,   306,   307,   308,   309,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,    -1,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
      -1,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,    -1,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,    -1,   392,   393,    -1,
     395,    -1,   397,   398,   399,   400,   401,    -1,   403,   404,
      -1,    -1,   407,   408,   409,   410,   411,    -1,   413,   414,
     415,   416,   417,   418,   419,   420,    -1,    -1,   423,   424,
     425,   426,   427,    -1,    -1,   430,   431,   432,   433,   434,
     435,   436,    -1,   438,    -1,   440,   441,   442,   443,    -1,
      -1,   446,    -1,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    -1,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    -1,    94,    95,    96,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,    -1,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,    -1,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,
      -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,    -1,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,
     218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,
     228,   229,   230,    -1,    -1,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
      -1,   259,   260,   261,   262,   263,    -1,   265,   266,    -1,
     268,    -1,   270,   271,   272,   273,   274,   275,    -1,   277,
     278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,
      -1,   289,    -1,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,    -1,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,    -1,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,    -1,   366,   367,
     368,   369,   370,    -1,   372,   373,   374,   375,    -1,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,    -1,   392,   393,    -1,   395,    -1,   397,
     398,   399,   400,   401,    -1,   403,   404,    -1,    -1,   407,
     408,   409,   410,   411,    -1,   413,   414,   415,   416,   417,
     418,   419,   420,    -1,    -1,   423,   424,   425,   426,   427,
      -1,    -1,   430,   431,   432,   433,   434,   435,   436,    -1,
     438,    -1,   440,   441,   442,   443,    -1,    -1,   446,    -1,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      -1,    82,    83,    84,    -1,    86,    87,    88,    89,    90,
      91,    -1,    -1,    94,    95,    96,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,    -1,   115,    -1,   117,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,   127,   128,    -1,    -1,
     131,   132,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,    -1,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,    -1,   156,    -1,   158,   159,   160,
     161,    -1,   163,    -1,   165,    -1,    -1,    -1,   169,   170,
     171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,    -1,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,   196,   197,    -1,   199,    -1,
     201,   202,   203,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,   214,    -1,   216,   217,   218,   219,   220,
      -1,    -1,   223,    -1,   225,    -1,    -1,   228,   229,   230,
      -1,    -1,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,    -1,   259,   260,
     261,   262,   263,    -1,   265,   266,    -1,   268,    -1,   270,
     271,   272,   273,   274,   275,    -1,   277,   278,    -1,    -1,
     281,   282,   283,    -1,    -1,   286,   287,    -1,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,    -1,   303,   304,   305,   306,   307,   308,   309,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,    -1,
     341,   342,    -1,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,    -1,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,    -1,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
      -1,   392,   393,    -1,   395,    -1,   397,   398,   399,   400,
     401,    -1,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,    -1,   413,   414,   415,   416,   417,   418,   419,   420,
      -1,    -1,   423,   424,   425,   426,   427,    -1,    -1,   430,
     431,   432,   433,   434,   435,   436,    -1,   438,    -1,   440,
     441,   442,   443,    -1,    -1,   446,    -1,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    -1,    82,    83,
      84,    -1,    86,    87,    88,    89,    90,    91,    -1,    -1,
      94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
      -1,   115,    -1,   117,   118,   119,   120,   121,   122,    -1,
     124,   125,   126,   127,   128,    -1,    -1,   131,   132,   133,
     134,   135,    -1,   137,   138,   139,    -1,   141,   142,   143,
      -1,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,    -1,   156,    -1,   158,   159,   160,   161,    -1,   163,
      -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,   173,
      -1,   175,    -1,   177,   178,    -1,   180,   181,   182,   183,
     184,   185,    -1,   187,   188,   189,   190,    -1,   192,   193,
     194,   195,   196,   197,    -1,   199,    -1,   201,   202,   203,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
     214,    -1,   216,   217,   218,   219,   220,    -1,    -1,   223,
      -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,    -1,   259,   260,   261,   262,   263,
      -1,   265,   266,    -1,   268,    -1,   270,   271,   272,   273,
     274,   275,    -1,   277,   278,    -1,    -1,   281,   282,   283,
      -1,    -1,   286,   287,    -1,   289,    -1,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,    -1,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,    -1,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,    -1,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,   375,    -1,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,    -1,   392,   393,
      -1,   395,    -1,   397,   398,   399,   400,   401,    -1,   403,
     404,    -1,    -1,   407,   408,   409,   410,   411,    -1,   413,
     414,   415,   416,   417,   418,   419,   420,    -1,    -1,   423,
     424,   425,   426,   427,    -1,    -1,   430,   431,   432,   433,
     434,   435,   436,    -1,   438,    -1,   440,   441,   442,   443,
      -1,    -1,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    -1,    82,    83,    84,    -1,    86,
      87,    88,    89,    90,    91,    -1,    -1,    94,    95,    96,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,    -1,   115,    -1,
     117,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
     127,   128,    -1,    -1,   131,   132,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,    -1,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,    -1,   156,
      -1,   158,   159,   160,   161,    -1,   163,    -1,   165,    -1,
      -1,    -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,    -1,
     187,   188,   189,   190,    -1,   192,   193,   194,   195,   196,
     197,    -1,   199,    -1,   201,   202,   203,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,
     217,   218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,
      -1,   228,   229,   230,    -1,    -1,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,    -1,   259,   260,   261,   262,   263,    -1,   265,   266,
      -1,   268,    -1,   270,   271,   272,   273,   274,   275,    -1,
     277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,
     287,    -1,   289,    -1,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,    -1,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,    -1,   341,   342,    -1,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,    -1,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,   375,    -1,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,    -1,   392,   393,    -1,   395,    -1,
     397,   398,   399,   400,   401,    -1,   403,   404,    -1,    -1,
     407,   408,   409,   410,   411,    -1,   413,   414,   415,   416,
     417,   418,   419,   420,    -1,    -1,   423,   424,   425,   426,
     427,    -1,    -1,   430,   431,   432,   433,   434,   435,   436,
      -1,   438,    -1,   440,   441,   442,   443,    -1,    -1,   446,
      -1,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    -1,    82,    83,    84,    -1,    86,    87,    88,    89,
      90,    91,    -1,    -1,    94,    95,    96,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,    -1,   115,    -1,   117,   118,   119,
     120,   121,   122,    -1,   124,   125,   126,   127,   128,    -1,
      -1,   131,   132,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,    -1,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,    -1,   156,    -1,   158,   159,
     160,   161,    -1,   163,    -1,   165,    -1,    -1,    -1,   169,
     170,   171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,
     180,   181,   182,   183,   184,   185,    -1,   187,   188,   189,
     190,    -1,   192,   193,   194,   195,   196,   197,    -1,   199,
      -1,   201,   202,   203,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,   214,    -1,   216,   217,   218,   219,
     220,    -1,    -1,   223,    -1,   225,    -1,    -1,   228,   229,
     230,    -1,    -1,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,    -1,   259,
     260,   261,   262,   263,    -1,   265,   266,    -1,   268,    -1,
     270,   271,   272,   273,   274,   275,    -1,   277,   278,    -1,
      -1,   281,   282,   283,    -1,    -1,   286,   287,    -1,   289,
      -1,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,    -1,   303,   304,   305,   306,   307,   308,   309,
     310,   311,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
      -1,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,    -1,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,   375,    -1,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,    -1,   392,   393,    -1,   395,    -1,   397,   398,   399,
     400,   401,    -1,   403,   404,    -1,    -1,   407,   408,   409,
     410,   411,    -1,   413,   414,   415,   416,   417,   418,   419,
     420,    -1,    -1,   423,   424,   425,   426,   427,    -1,    -1,
     430,   431,   432,   433,   434,   435,   436,    -1,   438,    -1,
     440,   441,   442,   443,    -1,    -1,   446,    -1,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    44,    45,    46,    47,    -1,    49,    50,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    -1,
      -1,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      93,    94,    95,    96,    -1,    -1,    -1,   100,    -1,    -1,
      -1,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,    -1,   150,   151,   152,
     153,    -1,    -1,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,   166,    -1,   168,   169,   170,   171,   172,
     173,    -1,   175,    -1,    -1,   178,    -1,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,   200,    -1,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,    -1,    -1,
     223,   224,   225,   226,    -1,   228,   229,   230,    -1,    -1,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
      -1,    -1,   265,   266,   267,   268,    -1,    -1,   271,   272,
     273,   274,   275,    -1,   277,   278,    -1,    -1,   281,   282,
     283,    -1,    -1,   286,    -1,   288,   289,   290,    -1,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,    -1,
     303,   304,    -1,   306,   307,    -1,   309,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,    -1,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,    -1,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,    -1,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,    -1,    -1,   392,
     393,    -1,   395,   396,   397,   398,   399,   400,   401,    -1,
     403,   404,    -1,    -1,   407,   408,    -1,   410,    -1,    -1,
     413,   414,   415,   416,   417,   418,   419,   420,    -1,    -1,
     423,   424,   425,   426,   427,    -1,    -1,   430,   431,   432,
     433,   434,    -1,   436,    -1,   438,   439,   440,   441,   442,
     443,    -1,    -1,   446,    -1,    -1,   449,   450,   451,   452,
     453,   454,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   466,   467,   468,   469,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      -1,    82,    83,    84,    -1,    86,    87,    88,    89,    90,
      91,    -1,    -1,    94,    95,    96,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,    -1,   115,    -1,   117,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,   127,   128,    -1,    -1,
     131,   132,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,    -1,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,    -1,   156,    -1,   158,   159,   160,
     161,    -1,   163,    -1,   165,    -1,    -1,    -1,   169,   170,
     171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,    -1,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,   196,   197,    -1,   199,    -1,
     201,   202,   203,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,   214,    -1,   216,   217,   218,   219,   220,
      -1,    -1,   223,    -1,   225,    -1,    -1,   228,   229,   230,
      -1,    -1,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,    -1,   259,   260,
     261,   262,   263,    -1,   265,   266,    -1,   268,    -1,   270,
     271,   272,   273,   274,   275,    -1,   277,   278,    -1,    -1,
     281,   282,   283,    -1,    -1,   286,   287,    -1,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,    -1,   299,   300,
     301,    -1,   303,   304,   305,   306,   307,   308,   309,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,    -1,
     321,   322,   323,   324,   325,   326,    -1,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,    -1,
     341,   342,    -1,   344,   345,   346,   347,    -1,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,    -1,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,    -1,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
      -1,   392,   393,    -1,   395,    -1,   397,   398,   399,   400,
     401,    -1,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,    -1,   413,   414,   415,   416,   417,   418,   419,   420,
      -1,    -1,   423,   424,   425,   426,   427,    -1,    -1,   430,
     431,   432,   433,   434,   435,   436,    -1,   438,    -1,   440,
     441,   442,   443,    -1,    -1,   446,    -1,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      44,    45,    46,    47,    -1,    49,    50,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    -1,    -1,
      74,    -1,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    -1,    86,    87,    88,    89,    90,    91,    -1,    93,
      94,    95,    96,    -1,    -1,    -1,   100,    -1,    -1,    -1,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
      -1,   115,    -1,   117,   118,   119,   120,   121,   122,    -1,
     124,   125,   126,   127,   128,    -1,    -1,   131,   132,   133,
     134,   135,    -1,   137,   138,   139,    -1,   141,   142,   143,
      -1,   145,   146,   147,   148,    -1,   150,   151,   152,   153,
      -1,    -1,   156,    -1,   158,   159,   160,   161,    -1,   163,
      -1,   165,   166,    -1,   168,   169,   170,   171,   172,   173,
      -1,   175,    -1,    -1,   178,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,   190,    -1,   192,   193,
     194,   195,   196,   197,    -1,   199,   200,    -1,   202,   203,
     204,   205,   206,   207,    -1,   209,    -1,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,    -1,    -1,   223,
     224,   225,   226,    -1,   228,   229,   230,    -1,    -1,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,    -1,
      -1,   265,   266,   267,   268,    -1,    -1,   271,   272,   273,
     274,   275,    -1,   277,   278,    -1,    -1,   281,   282,   283,
      -1,    -1,   286,    -1,   288,   289,   290,    -1,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,    -1,   303,
     304,    -1,   306,   307,    -1,   309,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,    -1,   341,   342,   343,
     344,   345,   346,    -1,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,    -1,   366,    -1,   368,   369,   370,   371,   372,   373,
     374,   375,    -1,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,    -1,    -1,   392,   393,
      -1,   395,   396,   397,   398,   399,   400,   401,    -1,   403,
     404,    -1,    -1,   407,   408,    -1,   410,    -1,    -1,   413,
     414,   415,   416,   417,   418,   419,   420,    -1,    -1,   423,
     424,   425,   426,   427,    -1,    -1,   430,   431,   432,   433,
     434,    -1,   436,    -1,   438,   439,   440,   441,   442,   443,
      -1,    -1,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   466,   467,   468,   469,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    44,    45,    46,    47,    -1,    49,    50,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      -1,    -1,    74,    -1,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    -1,    86,    87,    88,    89,    90,    91,
      -1,    93,    94,    95,    96,    -1,    -1,    -1,   100,    -1,
      -1,    -1,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,    -1,   115,    -1,   117,   118,   119,   120,   121,
     122,    -1,   124,   125,   126,   127,   128,    -1,    -1,   131,
     132,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
     142,   143,    -1,   145,   146,   147,   148,    -1,   150,   151,
     152,   153,    -1,    -1,   156,    -1,   158,   159,   160,   161,
      -1,   163,    -1,   165,   166,    -1,   168,   169,   170,   171,
     172,   173,    -1,   175,    -1,    -1,   178,    -1,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,   190,    -1,
     192,   193,   194,   195,   196,   197,    -1,   199,   200,    -1,
     202,   203,   204,   205,   206,   207,    -1,   209,    -1,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,    -1,
      -1,   223,   224,   225,   226,    -1,   228,   229,   230,    -1,
      -1,   233,   234,   235,   236,   237,    -1,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,    -1,    -1,   265,   266,   267,   268,    -1,    -1,   271,
     272,   273,   274,   275,    -1,   277,   278,    -1,    -1,   281,
     282,   283,    -1,    -1,   286,    -1,   288,   289,   290,    -1,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
      -1,   303,   304,    -1,   306,   307,    -1,   309,   310,   311,
      -1,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,    -1,   341,
     342,   343,   344,   345,   346,    -1,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,    -1,   360,   361,
     362,   363,   364,    -1,   366,    -1,   368,   369,   370,   371,
     372,   373,   374,   375,    -1,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,    -1,   389,    -1,    -1,
     392,   393,    -1,   395,   396,   397,   398,   399,   400,   401,
      -1,   403,   404,    -1,    -1,   407,   408,    -1,   410,    -1,
      -1,   413,   414,   415,   416,   417,   418,   419,   420,    -1,
      -1,   423,   424,   425,   426,   427,    -1,    -1,   430,   431,
     432,   433,   434,    -1,   436,    -1,   438,   439,   440,   441,
     442,   443,    -1,    -1,   446,    -1,    -1,   449,   450,   451,
     452,   453,   454,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   466,   467,   468,   469
};

/* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
   symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,    19,    29,    31,    32,    47,    56,    68,    79,    90,
      92,   110,   124,   134,   140,   148,   150,   151,   163,   190,
     229,   306,   309,   337,   345,   359,   366,   370,   380,   394,
     430,   435,   448,   472,   486,   494,   495,   496,   497,   508,
     509,   511,   515,   529,   530,   532,   534,   541,   543,   589,
     595,   598,   599,   616,   617,   618,   619,   620,   621,   665,
     794,   797,   800,   807,   808,   809,   810,   811,   818,   822,
     828,   830,   835,   839,   840,   843,   844,   846,   847,   849,
     407,   451,   542,   194,   352,   360,   394,   441,   542,     3,
      19,    20,    21,    22,    23,    24,    25,    26,    28,    29,
      30,    38,    39,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    54,    55,    56,    57,    58,
      59,    62,    63,    64,    65,    66,    68,    69,    70,    71,
      72,    74,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    86,    87,    88,    89,    90,    91,    93,    94,    95,
      96,   100,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   115,   117,   118,   119,   120,   121,   122,   124,
     125,   126,   127,   128,   131,   132,   133,   134,   135,   137,
     138,   139,   141,   142,   143,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   156,   158,   159,   160,   161,
     163,   165,   166,   168,   169,   170,   171,   172,   173,   175,
     177,   178,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   192,   193,   194,   195,   196,   197,   199,
     200,   201,   202,   203,   204,   205,   206,   207,   209,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   223,
     224,   225,   226,   228,   229,   230,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   265,   266,   267,
     268,   270,   271,   272,   273,   274,   275,   277,   278,   281,
     282,   283,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   360,   361,   362,   363,   364,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     392,   393,   395,   396,   397,   398,   399,   400,   401,   403,
     404,   407,   408,   409,   410,   411,   413,   414,   415,   416,
     417,   418,   419,   420,   423,   424,   425,   426,   427,   430,
     431,   432,   433,   434,   435,   436,   438,   439,   440,   441,
     442,   443,   446,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   721,   779,   783,   786,   852,   853,
     854,   542,    50,   486,   611,   169,   173,   230,   237,   284,
     352,   398,   400,   422,   425,   587,   596,   806,     3,    27,
     238,   309,   388,   777,   783,   852,    21,    74,    89,   143,
     152,   164,   169,   194,   237,   241,   304,   318,   349,   352,
     360,   363,   382,   394,   401,   410,   441,   590,   591,   594,
     542,   777,    92,   439,   486,   511,   598,   616,   814,   818,
     835,   849,   107,    68,   107,     5,   782,   829,   783,   777,
      27,   403,   407,   783,   841,   842,   845,   542,    27,   129,
     628,   629,   230,   352,   364,   403,   823,   824,   845,   542,
     280,   676,   775,   783,   168,   486,   832,   486,   325,   622,
     623,   777,   622,   617,   618,   621,     0,   489,   119,   204,
     427,   144,   208,   285,   421,   630,   631,   617,   619,   620,
     490,   439,   812,    27,   403,   407,   435,   616,   845,   185,
     775,   777,   185,   775,   185,   676,   185,   775,   486,   484,
     488,   766,   768,   511,   598,   616,   796,   835,   775,   398,
     400,   398,   400,   335,   185,   783,   325,   360,   394,   441,
     775,   194,    27,   777,   243,   410,   106,   394,   441,   355,
     185,   592,   783,   788,   185,   776,   777,   185,   777,   486,
     533,   587,   814,     3,    48,    49,    51,    52,    64,    65,
      72,   111,   112,   149,   154,   160,   177,   201,   206,   207,
     209,   238,   257,   259,   263,   270,   272,   287,   291,   305,
     308,   322,   347,   367,   374,   388,   390,   403,   404,   409,
     411,   415,   435,   436,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   815,   817,   818,   820,   821,
     852,   856,   812,   782,   782,   475,   486,   486,   795,   469,
     214,   488,   279,     4,     6,     7,     8,     9,    10,    49,
      51,    52,    60,    61,    64,    65,    72,    74,    97,    98,
      99,   100,   101,   102,   103,   111,   112,   114,   133,   149,
     154,   155,   160,   206,   207,   209,   231,   232,   257,   259,
     264,   269,   270,   272,   281,   291,   305,   322,   347,   365,
     374,   390,   403,   404,   409,   411,   412,   415,   428,   436,
     470,   477,   478,   479,   486,   491,   617,   691,   694,   697,
     698,   699,   701,   702,   703,   704,   706,   707,   718,   720,
     721,   722,   724,   737,   738,   742,   760,   765,   772,   773,
     779,   780,   781,   782,   783,   771,   772,   823,   782,   823,
     469,   167,   405,   475,   486,   775,   479,   768,     3,   166,
     168,   439,   818,   831,   833,   166,   834,   718,   746,   622,
     490,   486,   790,   487,   487,   496,   167,   210,   676,   836,
      27,   129,   627,   627,    54,   627,   157,   162,   227,   276,
     636,   638,   639,   658,   660,   661,   662,   630,   631,   486,
     775,   469,   214,   149,    23,    29,   134,   283,   333,   337,
     366,   432,   502,   505,   506,   333,   149,    36,    55,   105,
     193,   242,   250,   262,   293,   333,   338,   360,   366,   380,
     505,   535,   538,   149,   333,   366,   505,   149,   333,   366,
     505,     3,    27,    44,    50,    74,    81,    93,   100,   129,
     166,   168,   172,   186,   200,   212,   213,   215,   224,   226,
     238,   258,   267,   288,   290,   343,   371,   388,   396,   415,
     437,   439,   479,   487,   718,   747,   748,   785,   791,   852,
     857,   718,   767,     3,    27,    31,    32,    33,    34,    35,
      36,    37,    40,    53,    60,    61,    67,    73,    75,    85,
      92,    97,    98,    99,   101,   102,   103,   114,   116,   123,
     129,   130,   136,   140,   144,   155,   157,   162,   164,   167,
     174,   176,   179,   191,   198,   208,   210,   221,   222,   227,
     231,   232,   264,   269,   276,   279,   280,   284,   285,   302,
     312,   327,   340,   359,   365,   376,   391,   394,   402,   405,
     406,   412,   421,   422,   428,   429,   435,   437,   444,   445,
     447,   448,   479,   778,   792,   852,   856,   858,   766,   487,
     486,   577,   587,   264,   798,   441,   185,   775,   185,   775,
     851,   775,   486,   597,    81,   803,   452,    82,   126,   296,
     399,   149,    58,   339,   490,   593,   488,   789,   149,   490,
     593,   149,   279,   746,   394,   487,   490,     4,   155,   279,
     412,   477,   478,   537,   540,   781,   782,   813,   815,   816,
     819,   814,   486,   606,   610,   537,   819,   825,   827,   747,
       3,    44,    49,    50,    51,    52,    64,    65,    74,    81,
      93,   100,   111,   112,   160,   166,   168,   172,   186,   200,
     206,   207,   209,   212,   213,   215,   224,   226,   238,   257,
     258,   259,   267,   272,   288,   290,   322,   343,   347,   367,
     371,   374,   388,   396,   403,   404,   415,   436,   439,   687,
     688,   690,   692,   694,   696,   698,   699,   700,   702,   703,
     706,   707,   749,   787,   852,   855,    36,   225,   783,   486,
     769,   438,   705,   718,   764,   486,   705,   705,   486,   162,
     486,   486,   486,   693,   693,   308,   617,   486,   486,   695,
     486,   486,    64,    65,   705,   718,   486,   693,   486,   486,
     486,   486,   486,   450,   472,   486,   708,   486,   708,   486,
     486,   486,   718,   718,   718,   617,   718,   746,   769,   768,
     782,   486,   486,   781,   782,     3,     8,    11,    16,    17,
      18,    33,    36,    41,    48,    73,   172,   186,   191,   212,
     213,   226,   264,   267,   281,   284,   371,   470,   473,   474,
     475,   477,   478,   479,   480,   481,   482,   740,   741,   742,
     744,   449,   725,    15,   290,   718,    15,   210,   490,   624,
     486,   782,   768,   624,     3,   114,   230,   537,   707,   782,
     826,    96,   114,   827,   114,   827,   775,   487,   490,   812,
     487,   490,   623,   776,    36,   836,   513,   775,    36,   783,
     366,   619,   619,   632,   633,   718,   619,   159,   261,   652,
     216,   262,   321,   369,   427,    27,   647,   718,   477,   478,
     648,   649,   718,   720,   658,   659,   639,   638,   636,   637,
     162,   661,   274,   663,   636,   658,   746,   790,   225,   775,
      67,    75,    85,   164,   185,   312,   422,   558,   568,   583,
     783,    75,    85,   510,    85,   510,   486,   405,   486,   556,
     236,   425,   556,    85,   490,   405,   775,   690,   537,    54,
     539,   537,   537,   105,   242,   250,    54,   405,   448,   472,
     536,   255,   352,   536,   538,   676,    85,   405,   510,   352,
     775,   405,   352,   747,   747,   748,   487,   490,   630,   631,
      13,    14,   485,   492,   405,   576,   581,   783,   448,   609,
     325,   441,   149,    92,   530,   543,   799,   800,   847,   775,
     264,   531,   535,   264,   486,   577,    36,   577,   487,   747,
      36,   185,   571,   783,   804,   592,   788,   778,   488,   776,
     777,   777,   788,   487,   185,   775,   851,   814,   820,     4,
     781,     4,   781,   608,   615,   792,    50,    94,   120,   138,
     142,   163,   166,   180,   269,   277,   319,   612,   490,   487,
     490,   486,   690,   486,    35,   689,   108,   109,   182,   183,
     244,   245,   246,   247,   248,   249,   252,   253,   356,   357,
     466,   467,   486,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   487,   490,   693,   796,   746,   766,   486,   444,
     761,   762,   718,   746,   486,   781,   781,   746,     3,   709,
     710,   711,   712,   713,   714,   715,   716,   750,   751,   782,
     781,   781,   781,   705,   705,   718,     8,    16,    17,    18,
     473,   474,   475,   477,   478,   479,   480,   481,   482,   740,
     745,   783,   718,   752,   477,   478,   486,   719,   720,   742,
     754,   765,   487,   746,   718,   746,   755,   403,   403,   781,
     781,   718,    53,   167,   222,   406,   718,   746,   758,   718,
     487,   490,   781,   718,   717,   717,   688,   718,   718,   718,
     718,     5,   792,   793,   403,    40,   391,   770,   788,   718,
     718,   486,   617,   759,   129,   155,   264,   269,   274,   412,
     423,   718,   269,   486,   718,   405,    48,   172,   186,   191,
     226,   371,   718,   718,   718,   718,   718,   718,   718,   718,
     718,   718,    27,    34,   376,   739,   176,   158,   726,   718,
     347,   486,   738,   718,   173,   230,   394,   398,   400,   425,
     625,   775,   773,   167,   666,   747,   666,   486,   782,   487,
     775,   831,   775,   839,   718,   487,   486,   429,   838,   114,
     292,   486,   512,   616,    36,   783,   486,   517,   526,   528,
     783,   490,    37,   123,   429,   634,   347,   348,   477,   478,
     649,   651,   720,   369,   216,   280,   490,     4,   650,   781,
     650,   347,   348,   651,   774,   775,   268,   373,   664,   659,
     637,   487,   333,   505,   486,   185,   568,   777,   216,   264,
     216,   429,   486,   561,   688,   777,   783,   185,   777,   185,
     783,    23,   134,   366,   501,   504,   551,   566,   792,   777,
     560,   580,   792,   777,   502,   777,   333,   366,   505,   535,
     537,   788,   777,   537,   788,   777,   537,   333,   366,   505,
     777,   777,   777,   777,   333,   366,   505,   777,   777,   630,
     630,   630,   437,   748,   487,   718,   718,   718,   767,   317,
     605,   487,   490,   277,   167,   405,   600,   441,   775,   783,
     587,   486,   149,   149,   226,   558,   568,   572,   575,   584,
     586,   783,   448,   450,   563,   148,   616,   448,   805,   487,
     718,   264,   279,   593,   778,   593,   279,   593,   264,    36,
     487,   490,   479,   486,   537,   607,   819,    36,   604,   782,
     604,   264,   269,   319,   604,   604,   825,   749,    35,   689,
     686,   783,   484,   484,   781,   405,   405,   405,   405,   688,
     487,   746,   718,   136,   762,   763,    36,   487,   718,   487,
     487,   487,   487,   167,   487,   487,   487,   490,   487,   488,
     302,   753,   487,   719,   719,   718,    11,    16,    17,    18,
     191,   212,   281,   473,   474,   475,   477,   478,   479,   480,
     481,   482,   742,   719,   487,   487,   162,   167,   756,   757,
     487,   469,   469,   487,   487,    36,   758,   746,   758,   758,
     167,   487,    36,   769,   718,   487,   487,   469,   719,   719,
     142,   746,   167,   129,   155,   269,   274,   412,   423,   486,
     142,   745,   718,   391,   770,   718,   759,   718,   405,   486,
     617,   486,   486,   289,   730,   398,   400,   398,   400,   775,
     394,   626,   626,   626,   221,   348,   486,   617,   667,   668,
     669,   676,   677,   721,   723,   724,   783,   445,   682,   630,
     682,   781,   717,   790,   796,   667,   445,   837,   435,   393,
     428,   521,   516,   525,   783,   279,   518,   783,   522,   528,
     490,   666,   475,   769,   633,   281,   740,   743,   471,   635,
       4,   781,   651,   280,   427,   648,   490,   235,   405,   718,
     264,   583,   486,   149,   486,   561,   194,   581,   544,   283,
     554,   544,    23,   134,   337,   338,   366,   498,   499,   500,
     506,   507,   149,   593,   149,   593,   551,   566,   551,   487,
     490,   547,   782,   487,   490,   475,   488,   405,   352,    85,
     405,   510,   352,   405,   405,   405,   352,   487,   487,   487,
     748,   485,   383,   384,   614,   782,   576,   605,   775,   577,
     798,   394,   581,   775,   775,   851,   775,   487,   490,   277,
     556,   277,   279,   555,   777,   448,   850,   556,    36,   149,
     775,   788,   149,   608,   602,   613,   819,   782,   782,   269,
     581,   479,   581,   782,   782,   487,   484,   487,   490,   688,
     781,   485,   781,   487,   710,   712,   713,   714,   713,   714,
     714,   487,   402,   718,   140,   688,   487,   718,   718,   745,
     718,   756,   688,   719,   719,   719,   719,   129,   264,   274,
     719,   719,   719,   719,   719,   719,   719,   719,   719,   719,
     718,   718,   757,   756,   708,   708,   688,   487,   487,   487,
     746,   688,   487,   717,   718,    33,    33,   718,   487,   718,
     167,   486,   749,   718,   487,   142,   719,   719,   142,   142,
     718,   718,   631,   445,   486,   731,   783,   626,   626,   626,
     626,   775,   775,   775,   617,   677,   167,   617,   668,   669,
      36,   670,   671,   783,   490,    93,   168,   200,   215,   224,
     258,   343,   673,   671,    36,   670,   672,   783,   472,   681,
     768,   718,   176,   653,   487,   653,   487,   487,   718,   340,
     520,   434,   487,   490,   769,    83,   520,   487,   490,   517,
     837,   718,   486,   635,   159,   220,   280,   775,   777,   487,
     149,   581,   568,   581,   544,   571,   487,   116,   198,   262,
     264,   567,   486,   578,   171,   114,   184,   264,   556,   536,
     106,   114,   171,   264,   382,   385,   538,   556,   366,   500,
     416,   777,   783,   504,   580,     3,    44,    50,    74,    81,
      93,   100,   166,   168,   172,   186,   200,   212,   213,   215,
     224,   226,   238,   258,   263,   267,   281,   288,   290,   343,
     367,   371,   388,   396,   415,   439,   477,   478,   537,   545,
     582,   688,   743,   782,   785,   852,   858,   792,   777,   777,
     777,   777,   777,   777,   777,   777,   777,   777,   630,   536,
     614,   486,   805,   185,   775,   487,   531,   486,    36,   565,
     563,   572,    79,   533,   106,   262,   616,   571,   429,   802,
     593,   851,   487,   490,   581,   781,   783,   485,   485,   718,
     487,   487,   757,   167,   129,   274,   486,   487,   487,   718,
     718,   718,   749,   487,   718,    33,    33,   718,   718,   142,
     487,   487,   718,   732,   783,   775,   775,   775,   775,   671,
     672,   486,   487,     5,   783,   784,   396,   644,   645,   486,
     668,   215,   288,   674,   668,   674,   215,   673,   674,   215,
     645,   486,   783,   645,   486,   286,    54,   179,   657,   782,
     657,   782,   772,   616,   292,   616,   516,   279,   486,   514,
     475,   528,   520,   745,   544,   568,   487,   487,   448,   574,
     117,   187,   196,   116,   431,   551,   569,    67,    73,    85,
     114,   116,   171,   198,   264,   269,   312,   327,   422,   549,
     550,   562,    30,    54,   588,   185,   269,   537,   718,   588,
     269,   477,   478,   540,   783,   688,   593,   593,   238,   388,
     785,   789,   475,   405,   405,   487,   606,   429,   601,   603,
     581,    36,   264,   486,   805,   575,   148,   616,   146,   192,
     555,   119,   134,   311,   850,   106,   448,   848,   279,   783,
     801,   486,    36,   613,   485,   688,   719,   167,   486,   749,
     487,   718,   718,   718,   487,   298,   733,   678,   679,   723,
     670,   486,     4,     9,   640,   642,   643,   783,   776,   668,
     279,   429,   675,   668,   215,   668,   683,   684,   783,   486,
     683,   783,   486,   654,   655,   656,   718,   718,   447,   727,
     727,   521,    85,   486,   519,   527,   723,   783,   130,   718,
     487,   327,   574,   486,   564,   544,   487,   490,   486,   788,
     777,   719,   588,   117,   187,   116,   269,   216,   775,   574,
     114,    36,   149,    73,   685,   789,   481,   545,   777,   777,
     536,   121,   487,   616,   149,    36,   487,   777,   850,    27,
      78,    86,   115,   184,   195,   382,   385,   559,   559,   348,
     348,    59,    67,   230,   775,   527,   719,   749,   487,    54,
     630,   487,   490,    36,   680,   776,   301,   481,   301,   348,
     481,   486,   486,   487,   718,   486,   668,   675,   487,   490,
     688,   683,   487,   487,   490,   728,   729,   783,   429,   641,
     641,   434,   777,   718,   487,   490,    73,   523,   523,   265,
     427,   775,   544,   570,   573,   792,   551,   718,   264,   550,
      36,   574,   577,   184,   788,   429,   503,   481,   416,   606,
     782,   805,   848,   775,   616,   563,   533,    67,   282,    67,
     802,   487,   487,   746,   320,   348,   734,   681,   678,   486,
     487,   783,   640,   776,   684,   685,   487,   655,   490,    36,
     350,   616,   487,   682,   519,   788,   524,   788,   524,   366,
     577,   487,   490,   475,   487,   184,   240,   585,   486,   546,
     718,   416,    36,   486,   848,   555,   850,   282,   282,   486,
     805,    48,    96,   418,   718,   735,   736,   735,   487,   683,
     487,   490,   487,   487,   729,   731,   643,   523,   634,   634,
     526,   585,   573,   545,   262,   557,   546,   168,   297,   372,
     279,   552,   553,   579,   535,   616,   527,   682,   736,   347,
     161,   307,   161,   307,   487,     9,   334,   646,   524,   635,
     635,   682,   553,   196,   119,   427,   279,   579,   279,   552,
     487,   848,   487,    33,   487,   486,   634,   544,    58,   262,
     339,   366,   548,   548,   805,   736,     9,   635,    22,   114,
     269,   682,   487
};

#define yyerrok		(yyerrstatus = 0)
#define yyclearin	(yychar = YYEMPTY)
#define YYEMPTY		(-2)
#define YYEOF		0

#define YYACCEPT	goto yyacceptlab
#define YYABORT		goto yyabortlab
#define YYERROR		goto yyerrorlab


/* Like YYERROR except do call yyerror.  This remains here temporarily
   to ease the transition to the new meaning of YYERROR, for GCC.
   Once GCC version 2 has supplanted version 1, this can go.  */

#define YYFAIL		goto yyerrlab

#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)					\
do								\
  if (yychar == YYEMPTY && yylen == 1)				\
    {								\
      yychar = (Token);						\
      yylval = (Value);						\
      yytoken = YYTRANSLATE (yychar);				\
      YYPOPSTACK (1);						\
      goto yybackup;						\
    }								\
  else								\
    {								\
      yyerror (&yylloc, yyscanner, YY_("syntax error: cannot back up")); \
      YYERROR;							\
    }								\
while (YYID (0))


#define YYTERROR	1
#define YYERRCODE	256


/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#define YYRHSLOC(Rhs, K) ((Rhs)[K])
#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)				\
    do									\
      if (YYID (N))                                                    \
	{								\
	  (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;	\
	  (Current).first_column = YYRHSLOC (Rhs, 1).first_column;	\
	  (Current).last_line    = YYRHSLOC (Rhs, N).last_line;		\
	  (Current).last_column  = YYRHSLOC (Rhs, N).last_column;	\
	}								\
      else								\
	{								\
	  (Current).first_line   = (Current).last_line   =		\
	    YYRHSLOC (Rhs, 0).last_line;				\
	  (Current).first_column = (Current).last_column =		\
	    YYRHSLOC (Rhs, 0).last_column;				\
	}								\
    while (YYID (0))
#endif


/* YY_LOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

#ifndef YY_LOCATION_PRINT
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
#  define YY_LOCATION_PRINT(File, Loc)			\
     fprintf (File, "%d.%d-%d.%d",			\
	      (Loc).first_line, (Loc).first_column,	\
	      (Loc).last_line,  (Loc).last_column)
# else
#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
# endif
#endif


/* YYLEX -- calling `yylex' with the right arguments.  */

#ifdef YYLEX_PARAM
# define YYLEX yylex (&yylval, &yylloc, YYLEX_PARAM)
#else
# define YYLEX yylex (&yylval, &yylloc, yyscanner)
#endif

/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)			\
do {						\
  if (yydebug)					\
    YYFPRINTF Args;				\
} while (YYID (0))

# define YY_SYMBOL_PRINT(Title, Type, Value, Location)			  \
do {									  \
  if (yydebug)								  \
    {									  \
      YYFPRINTF (stderr, "%s ", Title);					  \
      yy_symbol_print (stderr,						  \
		  Type, Value, Location, yyscanner); \
      YYFPRINTF (stderr, "\n");						  \
    }									  \
} while (YYID (0))


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
#else
static void
yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  if (!yyvaluep)
    return;
  YYUSE (yylocationp);
  YYUSE (yyscanner);
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# else
  YYUSE (yyoutput);
# endif
  switch (yytype)
    {
      default:
	break;
    }
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
#else
static void
yy_symbol_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  if (yytype < YYNTOKENS)
    YYFPRINTF (yyoutput, "token %s (", yytname[yytype]);
  else
    YYFPRINTF (yyoutput, "nterm %s (", yytname[yytype]);

  YY_LOCATION_PRINT (yyoutput, *yylocationp);
  YYFPRINTF (yyoutput, ": ");
  yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_stack_print (yytype_int16 *bottom, yytype_int16 *top)
#else
static void
yy_stack_print (bottom, top)
    yytype_int16 *bottom;
    yytype_int16 *top;
#endif
{
  YYFPRINTF (stderr, "Stack now");
  for (; bottom <= top; ++bottom)
    YYFPRINTF (stderr, " %d", *bottom);
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)				\
do {								\
  if (yydebug)							\
    yy_stack_print ((Bottom), (Top));				\
} while (YYID (0))


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_reduce_print (YYSTYPE *yyvsp, YYLTYPE *yylsp, int yyrule, core_yyscan_t yyscanner)
#else
static void
yy_reduce_print (yyvsp, yylsp, yyrule, yyscanner)
    YYSTYPE *yyvsp;
    YYLTYPE *yylsp;
    int yyrule;
    core_yyscan_t yyscanner;
#endif
{
  int yynrhs = yyr2[yyrule];
  int yyi;
  unsigned long int yylno = yyrline[yyrule];
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
	     yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      fprintf (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
		       &(yyvsp[(yyi + 1) - (yynrhs)])
		       , &(yylsp[(yyi + 1) - (yynrhs)])		       , yyscanner);
      fprintf (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)		\
do {					\
  if (yydebug)				\
    yy_reduce_print (yyvsp, yylsp, Rule, yyscanner); \
} while (YYID (0))

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef	YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif



#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static YYSIZE_T
yystrlen (const char *yystr)
#else
static YYSIZE_T
yystrlen (yystr)
    const char *yystr;
#endif
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static char *
yystpcpy (char *yydest, const char *yysrc)
#else
static char *
yystpcpy (yydest, yysrc)
    char *yydest;
    const char *yysrc;
#endif
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
	switch (*++yyp)
	  {
	  case '\'':
	  case ',':
	    goto do_not_strip_quotes;

	  case '\\':
	    if (*++yyp != '\\')
	      goto do_not_strip_quotes;
	    /* Fall through.  */
	  default:
	    if (yyres)
	      yyres[yyn] = *yyp;
	    yyn++;
	    break;

	  case '"':
	    if (yyres)
	      yyres[yyn] = '\0';
	    return yyn;
	  }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into YYRESULT an error message about the unexpected token
   YYCHAR while in state YYSTATE.  Return the number of bytes copied,
   including the terminating null byte.  If YYRESULT is null, do not
   copy anything; just return the number of bytes that would be
   copied.  As a special case, return 0 if an ordinary "syntax error"
   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
   size calculation.  */
static YYSIZE_T
yysyntax_error (char *yyresult, int yystate, int yychar)
{
  int yyn = yypact[yystate];

  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
    return 0;
  else
    {
      int yytype = YYTRANSLATE (yychar);
      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
      YYSIZE_T yysize = yysize0;
      YYSIZE_T yysize1;
      int yysize_overflow = 0;
      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
      int yyx;

# if 0
      /* This is so xgettext sees the translatable formats that are
	 constructed on the fly.  */
      YY_("syntax error, unexpected %s");
      YY_("syntax error, unexpected %s, expecting %s");
      YY_("syntax error, unexpected %s, expecting %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
# endif
      char *yyfmt;
      char const *yyf;
      static char const yyunexpected[] = "syntax error, unexpected %s";
      static char const yyexpecting[] = ", expecting %s";
      static char const yyor[] = " or %s";
      char yyformat[sizeof yyunexpected
		    + sizeof yyexpecting - 1
		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
		       * (sizeof yyor - 1))];
      char const *yyprefix = yyexpecting;

      /* Start YYX at -YYN if negative to avoid negative indexes in
	 YYCHECK.  */
      int yyxbegin = yyn < 0 ? -yyn : 0;

      /* Stay within bounds of both yycheck and yytname.  */
      int yychecklim = YYLAST - yyn + 1;
      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
      int yycount = 1;

      yyarg[0] = yytname[yytype];
      yyfmt = yystpcpy (yyformat, yyunexpected);

      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
	  {
	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
	      {
		yycount = 1;
		yysize = yysize0;
		yyformat[sizeof yyunexpected - 1] = '\0';
		break;
	      }
	    yyarg[yycount++] = yytname[yyx];
	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
	    yysize_overflow |= (yysize1 < yysize);
	    yysize = yysize1;
	    yyfmt = yystpcpy (yyfmt, yyprefix);
	    yyprefix = yyor;
	  }

      yyf = YY_(yyformat);
      yysize1 = yysize + yystrlen (yyf);
      yysize_overflow |= (yysize1 < yysize);
      yysize = yysize1;

      if (yysize_overflow)
	return YYSIZE_MAXIMUM;

      if (yyresult)
	{
	  /* Avoid sprintf, as that infringes on the user's name space.
	     Don't have undefined behavior even if the translation
	     produced a string with the wrong number of "%s"s.  */
	  char *yyp = yyresult;
	  int yyi = 0;
	  while ((*yyp = *yyf) != '\0')
	    {
	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
		{
		  yyp += yytnamerr (yyp, yyarg[yyi++]);
		  yyf += 2;
		}
	      else
		{
		  yyp++;
		  yyf++;
		}
	    }
	}
      return yysize;
    }
}
#endif /* YYERROR_VERBOSE */


/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, YYLTYPE *yylocationp, core_yyscan_t yyscanner)
#else
static void
yydestruct (yymsg, yytype, yyvaluep, yylocationp, yyscanner)
    const char *yymsg;
    int yytype;
    YYSTYPE *yyvaluep;
    YYLTYPE *yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  YYUSE (yyvaluep);
  YYUSE (yylocationp);
  YYUSE (yyscanner);

  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  switch (yytype)
    {

      default:
	break;
    }
}


/* Prevent warnings from -Wmissing-prototypes.  */

#ifdef YYPARSE_PARAM
#if defined __STDC__ || defined __cplusplus
int yyparse (void *YYPARSE_PARAM);
#else
int yyparse ();
#endif
#else /* ! YYPARSE_PARAM */
#if defined __STDC__ || defined __cplusplus
int yyparse (core_yyscan_t yyscanner);
#else
int yyparse ();
#endif
#endif /* ! YYPARSE_PARAM */






/*----------.
| yyparse.  |
`----------*/

#ifdef YYPARSE_PARAM
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (void *YYPARSE_PARAM)
#else
int
yyparse (YYPARSE_PARAM)
    void *YYPARSE_PARAM;
#endif
#else /* ! YYPARSE_PARAM */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (core_yyscan_t yyscanner)
#else
int
yyparse (yyscanner)
    core_yyscan_t yyscanner;
#endif
#endif
{
  /* The look-ahead symbol.  */
int yychar;

/* The semantic value of the look-ahead symbol.  */
YYSTYPE yylval;

/* Number of syntax errors so far.  */
int yynerrs;
/* Location data for the look-ahead symbol.  */
YYLTYPE yylloc;

  int yystate;
  int yyn;
  int yyresult;
  /* Number of tokens to shift before error messages enabled.  */
  int yyerrstatus;
  /* Look-ahead token as an internal (translated) token number.  */
  int yytoken = 0;
#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

  /* Three stacks and their tools:
     `yyss': related to states,
     `yyvs': related to semantic values,
     `yyls': related to locations.

     Refer to the stacks thru separate pointers, to allow yyoverflow
     to reallocate them elsewhere.  */

  /* The state stack.  */
  yytype_int16 yyssa[YYINITDEPTH];
  yytype_int16 *yyss = yyssa;
  yytype_int16 *yyssp;

  /* The semantic value stack.  */
  YYSTYPE yyvsa[YYINITDEPTH];
  YYSTYPE *yyvs = yyvsa;
  YYSTYPE *yyvsp;

  /* The location stack.  */
  YYLTYPE yylsa[YYINITDEPTH];
  YYLTYPE *yyls = yylsa;
  YYLTYPE *yylsp;
  /* The locations where the error started and ended.  */
  YYLTYPE yyerror_range[2];

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))

  YYSIZE_T yystacksize = YYINITDEPTH;

  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;
  YYLTYPE yyloc;

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY;		/* Cause a token to be read.  */

  /* Initialize stack pointers.
     Waste one element of value and location stack
     so that they stay on the same level as the state stack.
     The wasted elements are never initialized.  */

  yyssp = yyss;
  yyvsp = yyvs;
  yylsp = yyls;
#if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
  /* Initialize the default location before parsing starts.  */
  yylloc.first_line   = yylloc.last_line   = 1;
  yylloc.first_column = yylloc.last_column = 0;
#endif

  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
	/* Give user a chance to reallocate the stack.  Use copies of
	   these so that the &'s don't force the real ones into
	   memory.  */
	YYSTYPE *yyvs1 = yyvs;
	yytype_int16 *yyss1 = yyss;
	YYLTYPE *yyls1 = yyls;

	/* Each stack pointer address is followed by the size of the
	   data in use in that stack, in bytes.  This used to be a
	   conditional around just the two extra args, but that might
	   be undefined if yyoverflow is a macro.  */
	yyoverflow (YY_("memory exhausted"),
		    &yyss1, yysize * sizeof (*yyssp),
		    &yyvs1, yysize * sizeof (*yyvsp),
		    &yyls1, yysize * sizeof (*yylsp),
		    &yystacksize);
	yyls = yyls1;
	yyss = yyss1;
	yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
	goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
	yystacksize = YYMAXDEPTH;

      {
	yytype_int16 *yyss1 = yyss;
	union yyalloc *yyptr =
	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
	if (! yyptr)
	  goto yyexhaustedlab;
	YYSTACK_RELOCATE (yyss);
	YYSTACK_RELOCATE (yyvs);
	YYSTACK_RELOCATE (yyls);
#  undef YYSTACK_RELOCATE
	if (yyss1 != yyssa)
	  YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;
      yylsp = yyls + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
		  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
	YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     look-ahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to look-ahead token.  */
  yyn = yypact[yystate];
  if (yyn == YYPACT_NINF)
    goto yydefault;

  /* Not known => get a look-ahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid look-ahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = YYLEX;
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yyn == 0 || yyn == YYTABLE_NINF)
	goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the look-ahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token unless it is eof.  */
  if (yychar != YYEOF)
    yychar = YYEMPTY;

  yystate = yyn;
  *++yyvsp = yylval;
  *++yylsp = yylloc;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     `$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];

  /* Default location.  */
  YYLLOC_DEFAULT (yyloc, (yylsp - yylen), yylen);
  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 2:
#line 457 "third_party/libpg_query/grammar/grammar.y"
    {
				pg_yyget_extra(yyscanner)->parsetree = (yyvsp[(1) - (1)].list);
			;}
    break;

  case 3:
#line 473 "third_party/libpg_query/grammar/grammar.y"
    {
					if ((yyvsp[(1) - (3)].list) != NIL)
					{
						/* update length of previous stmt */
						updateRawStmtEnd(llast_node(PGRawStmt, (yyvsp[(1) - (3)].list)), (yylsp[(2) - (3)]));
					}
					if ((yyvsp[(3) - (3)].node) != NULL)
						(yyval.list) = lappend((yyvsp[(1) - (3)].list), makeRawStmt((yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]) + 1));
					else
						(yyval.list) = (yyvsp[(1) - (3)].list);
				;}
    break;

  case 4:
#line 485 "third_party/libpg_query/grammar/grammar.y"
    {
					if ((yyvsp[(1) - (1)].node) != NULL)
						(yyval.list) = list_make1(makeRawStmt((yyvsp[(1) - (1)].node), 0));
					else
						(yyval.list) = NIL;
				;}
    break;

  case 38:
#line 527 "third_party/libpg_query/grammar/grammar.y"
    { (yyval.node) = NULL; ;}
    break;

  case 39:
#line 10 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_TABLE;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 40:
#line 19 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_TABLE;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 41:
#line 28 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_INDEX;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 42:
#line 37 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_INDEX;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 43:
#line 46 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_SEQUENCE;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 44:
#line 55 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_SEQUENCE;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 45:
#line 64 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_VIEW;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 46:
#line 73 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_VIEW;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 47:
#line 86 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 48:
#line 88 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 49:
#line 93 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = (yyvsp[(3) - (3)].node); ;}
    break;

  case 50:
#line 94 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = NULL; ;}
    break;

  case 51:
#line 100 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 52:
#line 104 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 53:
#line 108 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					if (strcmp((yyvsp[(2) - (2)].defelt)->defname, "as") == 0 ||
						strcmp((yyvsp[(2) - (2)].defelt)->defname, "restart") == 0 ||
						strcmp((yyvsp[(2) - (2)].defelt)->defname, "owned_by") == 0)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("sequence option \"%s\" not supported here", (yyvsp[(2) - (2)].defelt)->defname),
								 parser_errposition((yylsp[(2) - (2)]))));
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
				;}
    break;

  case 54:
#line 119 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("generated", (PGNode *) makeInteger((yyvsp[(3) - (3)].ival)), (yylsp[(1) - (3)]));
				;}
    break;

  case 55:
#line 127 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 56:
#line 131 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 57:
#line 140 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(2) - (2)].node);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 58:
#line 149 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(5) - (5)].node);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 59:
#line 158 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(3) - (3)].node);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 60:
#line 167 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(6) - (6)].node);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 61:
#line 176 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ColumnDefault;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (yyvsp[(4) - (4)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 62:
#line 185 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropNotNull;
					n->name = (yyvsp[(3) - (6)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 63:
#line 193 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetNotNull;
					n->name = (yyvsp[(3) - (6)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 64:
#line 201 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetStatistics;
					n->name = (yyvsp[(3) - (6)].str);
					n->def = (PGNode *) makeInteger((yyvsp[(6) - (6)].ival));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 65:
#line 210 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetOptions;
					n->name = (yyvsp[(3) - (5)].str);
					n->def = (PGNode *) (yyvsp[(5) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 66:
#line 219 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ResetOptions;
					n->name = (yyvsp[(3) - (5)].str);
					n->def = (PGNode *) (yyvsp[(5) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 67:
#line 228 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetStorage;
					n->name = (yyvsp[(3) - (6)].str);
					n->def = (PGNode *) makeString((yyvsp[(6) - (6)].str));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 68:
#line 237 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGConstraint *c = makeNode(PGConstraint);

					c->contype = PG_CONSTR_IDENTITY;
					c->generated_when = (yyvsp[(6) - (9)].ival);
					c->options = (yyvsp[(9) - (9)].list);
					c->location = (yylsp[(5) - (9)]);

					n->subtype = PG_AT_AddIdentity;
					n->name = (yyvsp[(3) - (9)].str);
					n->def = (PGNode *) c;

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 69:
#line 254 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetIdentity;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (PGNode *) (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 70:
#line 263 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = AT_DropIdentity;
					n->name = (yyvsp[(3) - (5)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 71:
#line 272 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = AT_DropIdentity;
					n->name = (yyvsp[(3) - (7)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 72:
#line 281 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropColumn;
					n->name = (yyvsp[(5) - (6)].str);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 73:
#line 291 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropColumn;
					n->name = (yyvsp[(3) - (4)].str);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 74:
#line 304 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGColumnDef *def = makeNode(PGColumnDef);
					n->subtype = PG_AT_AlterColumnType;
					n->name = (yyvsp[(3) - (8)].str);
					n->def = (PGNode *) def;
					/* We only use these fields of the PGColumnDef node */
					def->typeName = (yyvsp[(6) - (8)].typnam);
					def->collClause = (PGCollateClause *) (yyvsp[(7) - (8)].node);
					def->raw_default = (yyvsp[(8) - (8)].node);
					def->location = (yylsp[(3) - (8)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 75:
#line 319 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AlterColumnGenericOptions;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (PGNode *) (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 76:
#line 328 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddConstraint;
					n->def = (yyvsp[(2) - (2)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 77:
#line 336 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGConstraint *c = makeNode(PGConstraint);
					n->subtype = PG_AT_AlterConstraint;
					n->def = (PGNode *) c;
					c->contype = PG_CONSTR_FOREIGN; /* others not supported, yet */
					c->conname = (yyvsp[(3) - (4)].str);
					processCASbits((yyvsp[(4) - (4)].ival), (yylsp[(4) - (4)]), "ALTER CONSTRAINT statement",
									&c->deferrable,
									&c->initdeferred,
									NULL, NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 78:
#line 351 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ValidateConstraint;
					n->name = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 79:
#line 359 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropConstraint;
					n->name = (yyvsp[(5) - (6)].str);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 80:
#line 369 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropConstraint;
					n->name = (yyvsp[(3) - (4)].str);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 81:
#line 379 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetLogged;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 82:
#line 386 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetUnLogged;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 83:
#line 393 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetRelOptions;
					n->def = (PGNode *)(yyvsp[(2) - (2)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 84:
#line 401 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ResetRelOptions;
					n->def = (PGNode *)(yyvsp[(2) - (2)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 85:
#line 408 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_GenericOptions;
					n->def = (PGNode *)(yyvsp[(1) - (1)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 86:
#line 418 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 87:
#line 419 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = NULL; ;}
    break;

  case 88:
#line 425 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(1) - (1)].defelt);
				;}
    break;

  case 89:
#line 429 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
					(yyval.defelt)->defaction = PG_DEFELEM_SET;
				;}
    break;

  case 90:
#line 434 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
					(yyval.defelt)->defaction = PG_DEFELEM_ADD;
				;}
    break;

  case 91:
#line 439 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElemExtended(NULL, (yyvsp[(2) - (2)].str), NULL, DEFELEM_DROP, (yylsp[(2) - (2)]));
				;}
    break;

  case 92:
#line 446 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 93:
#line 447 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 94:
#line 452 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 95:
#line 456 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 1; ;}
    break;

  case 96:
#line 457 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 0; ;}
    break;

  case 97:
#line 8 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = (yyvsp[(2) - (2)].str);
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 98:
#line 14 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = (yyvsp[(3) - (3)].str);
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 99:
#line 20 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = NULL;
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 100:
#line 26 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = NULL;
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 101:
#line 7 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SCHEMA;
					n->subname = (yyvsp[(3) - (6)].str);
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 102:
#line 16 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 103:
#line 26 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 104:
#line 36 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 105:
#line 46 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 106:
#line 56 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 107:
#line 66 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 108:
#line 76 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_INDEX;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 109:
#line 86 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_INDEX;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 110:
#line 96 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_COLUMN;
					n->relationType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (8)].range);
					n->subname = (yyvsp[(6) - (8)].str);
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 111:
#line 107 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_COLUMN;
					n->relationType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (10)].range);
					n->subname = (yyvsp[(8) - (10)].str);
					n->newname = (yyvsp[(10) - (10)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 112:
#line 118 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABCONSTRAINT;
					n->relation = (yyvsp[(3) - (8)].range);
					n->subname = (yyvsp[(6) - (8)].str);
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 113:
#line 128 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABCONSTRAINT;
					n->relation = (yyvsp[(5) - (10)].range);
					n->subname = (yyvsp[(8) - (10)].str);
					n->newname = (yyvsp[(10) - (10)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 114:
#line 140 "third_party/libpg_query/grammar/statements/rename.y"
    { (yyval.ival) = COLUMN; ;}
    break;

  case 115:
#line 141 "third_party/libpg_query/grammar/statements/rename.y"
    { (yyval.ival) = 0; ;}
    break;

  case 116:
#line 10 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(5) - (7)].istmt)->relation = (yyvsp[(4) - (7)].range);
					(yyvsp[(5) - (7)].istmt)->onConflictClause = (yyvsp[(6) - (7)].onconflict);
					(yyvsp[(5) - (7)].istmt)->returningList = (yyvsp[(7) - (7)].list);
					(yyvsp[(5) - (7)].istmt)->withClause = (yyvsp[(1) - (7)].with);
					(yyval.node) = (PGNode *) (yyvsp[(5) - (7)].istmt);
				;}
    break;

  case 117:
#line 22 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = (yyvsp[(1) - (1)].node);
				;}
    break;

  case 118:
#line 28 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->override = (yyvsp[(2) - (4)].override);
					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
				;}
    break;

  case 119:
#line 35 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = (yyvsp[(2) - (4)].list);
					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
				;}
    break;

  case 120:
#line 41 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = (yyvsp[(2) - (7)].list);
					(yyval.istmt)->override = (yyvsp[(5) - (7)].override);
					(yyval.istmt)->selectStmt = (yyvsp[(7) - (7)].node);
				;}
    break;

  case 121:
#line 48 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = NULL;
				;}
    break;

  case 122:
#line 58 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
				;}
    break;

  case 123:
#line 62 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(1) - (3)].range)->alias = makeAlias((yyvsp[(3) - (3)].str), NIL);
					(yyval.range) = (yyvsp[(1) - (3)].range);
				;}
    break;

  case 124:
#line 71 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = makeNode(PGInferClause);
					(yyval.infer)->indexElems = (yyvsp[(2) - (4)].list);
					(yyval.infer)->whereClause = (yyvsp[(4) - (4)].node);
					(yyval.infer)->conname = NULL;
					(yyval.infer)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 125:
#line 80 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = makeNode(PGInferClause);
					(yyval.infer)->indexElems = NIL;
					(yyval.infer)->whereClause = NULL;
					(yyval.infer)->conname = (yyvsp[(3) - (3)].str);
					(yyval.infer)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 126:
#line 88 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = NULL;
				;}
    break;

  case 127:
#line 95 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.with) = (yyvsp[(1) - (1)].with); ;}
    break;

  case 128:
#line 96 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.with) = NULL; ;}
    break;

  case 129:
#line 102 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(1) - (2)].str);
					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.target)->val = NULL;
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 130:
#line 114 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(1) - (3)].target)->val = (PGNode *) (yyvsp[(3) - (3)].node);
					(yyval.list) = list_make1((yyvsp[(1) - (3)].target));
				;}
    break;

  case 131:
#line 119 "third_party/libpg_query/grammar/statements/insert.y"
    {
					int ncolumns = list_length((yyvsp[(2) - (5)].list));
					int i = 1;
					PGListCell *col_cell;

					/* Create a PGMultiAssignRef source for each target */
					foreach(col_cell, (yyvsp[(2) - (5)].list))
					{
						PGResTarget *res_col = (PGResTarget *) lfirst(col_cell);
						PGMultiAssignRef *r = makeNode(PGMultiAssignRef);

						r->source = (PGNode *) (yyvsp[(5) - (5)].node);
						r->colno = i;
						r->ncolumns = ncolumns;
						res_col->val = (PGNode *) r;
						i++;
					}

					(yyval.list) = (yyvsp[(2) - (5)].list);
				;}
    break;

  case 132:
#line 144 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = makeNode(PGOnConflictClause);
					(yyval.onconflict)->action = PG_ONCONFLICT_UPDATE;
					(yyval.onconflict)->infer = (yyvsp[(3) - (8)].infer);
					(yyval.onconflict)->targetList = (yyvsp[(7) - (8)].list);
					(yyval.onconflict)->whereClause = (yyvsp[(8) - (8)].node);
					(yyval.onconflict)->location = (yylsp[(1) - (8)]);
				;}
    break;

  case 133:
#line 154 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = makeNode(PGOnConflictClause);
					(yyval.onconflict)->action = PG_ONCONFLICT_NOTHING;
					(yyval.onconflict)->infer = (yyvsp[(3) - (5)].infer);
					(yyval.onconflict)->targetList = NIL;
					(yyval.onconflict)->whereClause = NULL;
					(yyval.onconflict)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 134:
#line 163 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = NULL;
				;}
    break;

  case 135:
#line 170 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = (yyvsp[(1) - (5)].str);
					(yyval.ielem)->expr = NULL;
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(2) - (5)].list);
					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].nullorder);
				;}
    break;

  case 136:
#line 181 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[(1) - (5)].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(2) - (5)].list);
					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].nullorder);
				;}
    break;

  case 137:
#line 192 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[(2) - (7)].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(4) - (7)].list);
					(yyval.ielem)->opclass = (yyvsp[(5) - (7)].list);
					(yyval.ielem)->ordering = (yyvsp[(6) - (7)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(7) - (7)].nullorder);
				;}
    break;

  case 138:
#line 206 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 139:
#line 207 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 140:
#line 213 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.override) = PG_OVERRIDING_USER_VALUE; ;}
    break;

  case 141:
#line 214 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.override) = OVERRIDING_SYSTEM_VALUE; ;}
    break;

  case 142:
#line 219 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 143:
#line 220 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].target)); ;}
    break;

  case 144:
#line 226 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 145:
#line 227 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 146:
#line 231 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 147:
#line 232 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 148:
#line 238 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 149:
#line 240 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
    break;

  case 150:
#line 245 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 151:
#line 246 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_concat((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].list)); ;}
    break;

  case 152:
#line 250 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].ielem)); ;}
    break;

  case 153:
#line 251 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].ielem)); ;}
    break;

  case 154:
#line 257 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(1) - (2)].str);
					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.target)->val = NULL;	/* upper production sets this */
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 155:
#line 8 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_NOTHING;
					n->name = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 156:
#line 15 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_ASSIGNMENT;
					n->name = (yyvsp[(2) - (4)].str);
					n->args = (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 157:
#line 23 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_CALL;
					n->name = (yyvsp[(2) - (5)].str);
					n->args = (yyvsp[(4) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 158:
#line 10 "third_party/libpg_query/grammar/statements/create_sequence.y"
    {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[(4) - (5)].range)->relpersistence = (yyvsp[(2) - (5)].ival);
					n->sequence = (yyvsp[(4) - (5)].range);
					n->options = (yyvsp[(5) - (5)].list);
					n->ownerId = InvalidOid;
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 159:
#line 20 "third_party/libpg_query/grammar/statements/create_sequence.y"
    {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[(7) - (8)].range)->relpersistence = (yyvsp[(2) - (8)].ival);
					n->sequence = (yyvsp[(7) - (8)].range);
					n->options = (yyvsp[(8) - (8)].list);
					n->ownerId = InvalidOid;
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 160:
#line 32 "third_party/libpg_query/grammar/statements/create_sequence.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 161:
#line 33 "third_party/libpg_query/grammar/statements/create_sequence.y"
    { (yyval.list) = NIL; ;}
    break;

  case 162:
#line 8 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(2) - (3)].str);
					n->params = (yyvsp[(3) - (3)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 163:
#line 16 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(7) - (9)].str);
					n->params = (yyvsp[(8) - (9)].list);
					ctas->query = (PGNode *) n;
					ctas->into = (yyvsp[(4) - (9)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = false;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(4) - (9)].into)->rel->relpersistence = (yyvsp[(2) - (9)].ival);
					(yyvsp[(4) - (9)].into)->skipData = !((yyvsp[(9) - (9)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 164:
#line 33 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(10) - (12)].str);
					n->params = (yyvsp[(11) - (12)].list);
					ctas->query = (PGNode *) n;
					ctas->into = (yyvsp[(7) - (12)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = true;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(7) - (12)].into)->rel->relpersistence = (yyvsp[(2) - (12)].ival);
					(yyvsp[(7) - (12)].into)->skipData = !((yyvsp[(12) - (12)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 165:
#line 51 "third_party/libpg_query/grammar/statements/execute.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 166:
#line 52 "third_party/libpg_query/grammar/statements/execute.y"
    { (yyval.list) = NIL; ;}
    break;

  case 167:
#line 10 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
					n->sequence = (yyvsp[(3) - (4)].range);
					n->options = (yyvsp[(4) - (4)].list);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 168:
#line 18 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
					n->sequence = (yyvsp[(5) - (6)].range);
					n->options = (yyvsp[(6) - (6)].list);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 169:
#line 29 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 170:
#line 30 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 171:
#line 34 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 172:
#line 35 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 173:
#line 36 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 174:
#line 41 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeFloat((yyvsp[(1) - (1)].str)); ;}
    break;

  case 175:
#line 42 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeFloat((yyvsp[(2) - (2)].str)); ;}
    break;

  case 176:
#line 44 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.value) = makeFloat((yyvsp[(2) - (2)].str));
					doNegateFloat((yyval.value));
				;}
    break;

  case 177:
#line 48 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeInteger((yyvsp[(1) - (1)].ival)); ;}
    break;

  case 178:
#line 53 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("as", (PGNode *)(yyvsp[(2) - (2)].typnam), (yylsp[(1) - (2)]));
				;}
    break;

  case 179:
#line 57 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cache", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 180:
#line 61 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 181:
#line 65 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(false), (yylsp[(1) - (2)]));
				;}
    break;

  case 182:
#line 69 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("increment", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 183:
#line 73 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("maxvalue", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 184:
#line 77 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("minvalue", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 185:
#line 81 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("maxvalue", NULL, (yylsp[(1) - (2)]));
				;}
    break;

  case 186:
#line 85 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("minvalue", NULL, (yylsp[(1) - (2)]));
				;}
    break;

  case 187:
#line 89 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("owned_by", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 188:
#line 93 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					/* not documented, only used by pg_dump */
					(yyval.defelt) = makeDefElem("sequence_name", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 189:
#line 98 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("start", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 190:
#line 102 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 191:
#line 106 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 192:
#line 112 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 193:
#line 113 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 194:
#line 117 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 195:
#line 118 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = + (yyvsp[(2) - (2)].ival); ;}
    break;

  case 196:
#line 119 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = - (yyvsp[(2) - (2)].ival); ;}
    break;

  case 197:
#line 3 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 198:
#line 10 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_BEGIN;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 199:
#line 16 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_START;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 200:
#line 22 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 201:
#line 29 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 202:
#line 36 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 203:
#line 45 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 204:
#line 46 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 205:
#line 47 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 206:
#line 9 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(4) - (9)].range)->relpersistence = (yyvsp[(2) - (9)].ival);
					n->relation = (yyvsp[(4) - (9)].range);
					n->tableElts = (yyvsp[(6) - (9)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(8) - (9)].list);
					n->oncommit = (yyvsp[(9) - (9)].oncommit);
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 207:
#line 24 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(7) - (12)].range)->relpersistence = (yyvsp[(2) - (12)].ival);
					n->relation = (yyvsp[(7) - (12)].range);
					n->tableElts = (yyvsp[(9) - (12)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(11) - (12)].list);
					n->oncommit = (yyvsp[(12) - (12)].oncommit);
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 208:
#line 41 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = 0; ;}
    break;

  case 209:
#line 43 "third_party/libpg_query/grammar/statements/create.y"
    {
					/*
					 * We must complain about conflicting options.
					 * We could, but choose not to, complain about redundant
					 * options (ie, where $2's bit is already set in $1).
					 */
					int		newspec = (yyvsp[(1) - (2)].ival) | (yyvsp[(2) - (2)].ival);

					/* special message for this case */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED)) == (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("constraint declared INITIALLY DEFERRED must be DEFERRABLE"),
								 parser_errposition((yylsp[(2) - (2)]))));
					/* generic message for other conflicts */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE)) == (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE) ||
						(newspec & (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED)) == (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("conflicting constraint properties"),
								 parser_errposition((yylsp[(2) - (2)]))));
					(yyval.ival) = newspec;
				;}
    break;

  case 210:
#line 69 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].typnam); ;}
    break;

  case 211:
#line 70 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
    break;

  case 212:
#line 71 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].list); ;}
    break;

  case 213:
#line 72 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].value); ;}
    break;

  case 214:
#line 73 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 215:
#line 74 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
    break;

  case 216:
#line 78 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 217:
#line 79 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 218:
#line 84 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 219:
#line 89 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_NOACTION; ;}
    break;

  case 220:
#line 90 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_RESTRICT; ;}
    break;

  case 221:
#line 91 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_CASCADE; ;}
    break;

  case 222:
#line 92 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_SETNULL; ;}
    break;

  case 223:
#line 93 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_SETDEFAULT; ;}
    break;

  case 224:
#line 99 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = castNode(PGConstraint, (yyvsp[(3) - (3)].node));
					n->conname = (yyvsp[(2) - (3)].str);
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 225:
#line 105 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 226:
#line 106 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 227:
#line 108 "third_party/libpg_query/grammar/statements/create.y"
    {
					/*
					 * Note: the PGCollateClause is momentarily included in
					 * the list built by ColQualList, but we split it out
					 * again in SplitColQualList.
					 */
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[(2) - (2)].list);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 228:
#line 125 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_NOTNULL;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 229:
#line 132 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_NULL;
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 230:
#line 139 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (2)]);
					n->keys = NULL;
					n->options = (yyvsp[(2) - (2)].list);
					n->indexname = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 231:
#line 149 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (3)]);
					n->keys = NULL;
					n->options = (yyvsp[(3) - (3)].list);
					n->indexname = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 232:
#line 159 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_CHECK;
					n->location = (yylsp[(1) - (5)]);
					n->is_no_inherit = (yyvsp[(5) - (5)].boolean);
					n->raw_expr = (yyvsp[(3) - (5)].node);
					n->cooked_expr = NULL;
					n->skip_validation = false;
					n->initially_valid = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 233:
#line 171 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_DEFAULT;
					n->location = (yylsp[(1) - (2)]);
					n->raw_expr = (yyvsp[(2) - (2)].node);
					n->cooked_expr = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 234:
#line 180 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_IDENTITY;
					n->generated_when = (yyvsp[(2) - (5)].ival);
					n->options = (yyvsp[(5) - (5)].list);
					n->location = (yylsp[(1) - (5)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 235:
#line 189 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_FOREIGN;
					n->location = (yylsp[(1) - (5)]);
					n->pktable			= (yyvsp[(2) - (5)].range);
					n->fk_attrs			= NIL;
					n->pk_attrs			= (yyvsp[(3) - (5)].list);
					n->fk_matchtype		= (yyvsp[(4) - (5)].ival);
					n->fk_upd_action	= (char) ((yyvsp[(5) - (5)].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[(5) - (5)].ival) & 0xFF);
					n->skip_validation  = false;
					n->initially_valid  = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 236:
#line 208 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 237:
#line 214 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
    break;

  case 238:
#line 220 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(1) - (1)].ival) << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); ;}
    break;

  case 239:
#line 222 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | ((yyvsp[(1) - (1)].ival) & 0xFF); ;}
    break;

  case 240:
#line 224 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(1) - (2)].ival) << 8) | ((yyvsp[(2) - (2)].ival) & 0xFF); ;}
    break;

  case 241:
#line 226 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(2) - (2)].ival) << 8) | ((yyvsp[(1) - (2)].ival) & 0xFF); ;}
    break;

  case 242:
#line 228 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); ;}
    break;

  case 243:
#line 233 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 244:
#line 234 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 245:
#line 238 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = ONCOMMIT_DROP; ;}
    break;

  case 246:
#line 239 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_DELETE_ROWS; ;}
    break;

  case 247:
#line 240 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_PRESERVE_ROWS; ;}
    break;

  case 248:
#line 241 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_NOOP; ;}
    break;

  case 249:
#line 246 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 250:
#line 250 "third_party/libpg_query/grammar/statements/create.y"
    {  (yyval.boolean) = true; ;}
    break;

  case 251:
#line 251 "third_party/libpg_query/grammar/statements/create.y"
    {  (yyval.boolean) = false; ;}
    break;

  case 252:
#line 257 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = castNode(PGConstraint, (yyvsp[(3) - (3)].node));
					n->conname = (yyvsp[(2) - (3)].str);
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 253:
#line 263 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 254:
#line 268 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_COMMENTS; ;}
    break;

  case 255:
#line 269 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_CONSTRAINTS; ;}
    break;

  case 256:
#line 270 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_DEFAULTS; ;}
    break;

  case 257:
#line 271 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_IDENTITY; ;}
    break;

  case 258:
#line 272 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_INDEXES; ;}
    break;

  case 259:
#line 273 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_STATISTICS; ;}
    break;

  case 260:
#line 274 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_STORAGE; ;}
    break;

  case 261:
#line 275 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_ALL; ;}
    break;

  case 262:
#line 281 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 263:
#line 282 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
    break;

  case 264:
#line 286 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(3) - (3)].str); ;}
    break;

  case 265:
#line 292 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_DEFERRABLE;
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 266:
#line 299 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_NOT_DEFERRABLE;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 267:
#line 306 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_DEFERRED;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 268:
#line 313 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_IMMEDIATE;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 269:
#line 324 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 270:
#line 325 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(true), (yylsp[(1) - (2)]))); ;}
    break;

  case 271:
#line 326 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(false), (yylsp[(1) - (2)]))); ;}
    break;

  case 272:
#line 327 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 273:
#line 331 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 274:
#line 336 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
    break;

  case 275:
#line 337 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) & ~(yyvsp[(3) - (3)].ival); ;}
    break;

  case 276:
#line 338 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = 0; ;}
    break;

  case 277:
#line 343 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 278:
#line 348 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NOT_DEFERRABLE; ;}
    break;

  case 279:
#line 349 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_DEFERRABLE; ;}
    break;

  case 280:
#line 350 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_INITIALLY_IMMEDIATE; ;}
    break;

  case 281:
#line 351 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_INITIALLY_DEFERRED; ;}
    break;

  case 282:
#line 352 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NOT_VALID; ;}
    break;

  case 283:
#line 353 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NO_INHERIT; ;}
    break;

  case 284:
#line 359 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->colname = (yyvsp[(1) - (4)].str);
					n->typeName = (yyvsp[(2) - (4)].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collOid = InvalidOid;
					n->fdwoptions = (yyvsp[(3) - (4)].list);
					SplitColQualList((yyvsp[(4) - (4)].list), &n->constraints, &n->collClause,
									 yyscanner);
					n->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 285:
#line 382 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 286:
#line 386 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 287:
#line 392 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 288:
#line 393 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
    break;

  case 289:
#line 397 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 290:
#line 401 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 291:
#line 402 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 292:
#line 403 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 293:
#line 408 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (PGNode *) (yyvsp[(3) - (3)].node), (yylsp[(1) - (3)]));
				;}
    break;

  case 294:
#line 412 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 295:
#line 419 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 296:
#line 420 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 297:
#line 425 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 298:
#line 426 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 299:
#line 431 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str));
				;}
    break;

  case 300:
#line 438 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 301:
#line 439 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 302:
#line 444 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 303:
#line 445 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 304:
#line 449 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
    break;

  case 305:
#line 455 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (PGNode *) (yyvsp[(3) - (3)].node), (yylsp[(1) - (3)]));
				;}
    break;

  case 306:
#line 459 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 307:
#line 463 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (5)].str), (yyvsp[(3) - (5)].str), (PGNode *) (yyvsp[(5) - (5)].node),
											 PG_DEFELEM_UNSPEC, (yylsp[(1) - (5)]));
				;}
    break;

  case 308:
#line 468 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str), NULL, PG_DEFELEM_UNSPEC, (yylsp[(1) - (3)]));
				;}
    break;

  case 309:
#line 475 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 310:
#line 476 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 311:
#line 480 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 312:
#line 482 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(1) - (4)].str)), (yyvsp[(2) - (4)].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 313:
#line 488 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(2) - (5)].str)), (yyvsp[(3) - (5)].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->setof = true;
					(yyval.typnam)->location = (yylsp[(2) - (5)]);
				;}
    break;

  case 314:
#line 499 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_CHECK;
					n->location = (yylsp[(1) - (5)]);
					n->raw_expr = (yyvsp[(3) - (5)].node);
					n->cooked_expr = NULL;
					processCASbits((yyvsp[(5) - (5)].ival), (yylsp[(5) - (5)]), "CHECK",
								   NULL, NULL, &n->skip_validation,
								   &n->is_no_inherit, yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 315:
#line 513 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (6)]);
					n->keys = (yyvsp[(3) - (6)].list);
					n->options = (yyvsp[(5) - (6)].list);
					n->indexname = NULL;
					processCASbits((yyvsp[(6) - (6)].ival), (yylsp[(6) - (6)]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 316:
#line 526 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (3)]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[(2) - (3)].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[(3) - (3)].ival), (yylsp[(3) - (3)]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 317:
#line 541 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (7)]);
					n->keys = (yyvsp[(4) - (7)].list);
					n->options = (yyvsp[(6) - (7)].list);
					n->indexname = NULL;
					processCASbits((yyvsp[(7) - (7)].ival), (yylsp[(7) - (7)]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 318:
#line 554 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (4)]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[(3) - (4)].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[(4) - (4)].ival), (yylsp[(4) - (4)]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 319:
#line 569 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_FOREIGN;
					n->location = (yylsp[(1) - (11)]);
					n->pktable			= (yyvsp[(7) - (11)].range);
					n->fk_attrs			= (yyvsp[(4) - (11)].list);
					n->pk_attrs			= (yyvsp[(8) - (11)].list);
					n->fk_matchtype		= (yyvsp[(9) - (11)].ival);
					n->fk_upd_action	= (char) ((yyvsp[(10) - (11)].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[(10) - (11)].ival) & 0xFF);
					processCASbits((yyvsp[(11) - (11)].ival), (yylsp[(11) - (11)]), "FOREIGN KEY",
								   &n->deferrable, &n->initdeferred,
								   &n->skip_validation, NULL,
								   yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 320:
#line 591 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 321:
#line 595 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 322:
#line 602 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_FULL;
			;}
    break;

  case 323:
#line 606 "third_party/libpg_query/grammar/statements/create.y"
    {
				ereport(ERROR,
						(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
						 errmsg("MATCH PARTIAL not yet implemented"),
						 parser_errposition((yylsp[(1) - (2)]))));
				(yyval.ival) = PG_FKCONSTR_MATCH_PARTIAL;
			;}
    break;

  case 324:
#line 614 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
			;}
    break;

  case 325:
#line 618 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
			;}
    break;

  case 326:
#line 626 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGTableLikeClause *n = makeNode(PGTableLikeClause);
					n->relation = (yyvsp[(2) - (3)].range);
					n->options = (yyvsp[(3) - (3)].ival);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 327:
#line 635 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 328:
#line 636 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 329:
#line 637 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 330:
#line 638 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 331:
#line 640 "third_party/libpg_query/grammar/statements/create.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 332:
#line 647 "third_party/libpg_query/grammar/statements/create.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 333:
#line 653 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_UNLOGGED; ;}
    break;

  case 334:
#line 654 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = RELPERSISTENCE_PERMANENT; ;}
    break;

  case 335:
#line 659 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_ATTRIBUTE_IDENTITY_ALWAYS; ;}
    break;

  case 336:
#line 660 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ATTRIBUTE_IDENTITY_BY_DEFAULT; ;}
    break;

  case 337:
#line 10 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 338:
#line 20 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (4)].objtype);
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 339:
#line 30 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 340:
#line 40 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (4)].objtype);
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 341:
#line 50 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->objects = list_make1(lappend((yyvsp[(5) - (6)].list), makeString((yyvsp[(3) - (6)].str))));
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = false;
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 342:
#line 60 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (8)].objtype);
					n->objects = list_make1(lappend((yyvsp[(7) - (8)].list), makeString((yyvsp[(5) - (8)].str))));
					n->behavior = (yyvsp[(8) - (8)].dbehavior);
					n->missing_ok = true;
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 343:
#line 73 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TABLE; ;}
    break;

  case 344:
#line 74 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_SEQUENCE; ;}
    break;

  case 345:
#line 75 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FUNCTION; ;}
    break;

  case 346:
#line 76 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FUNCTION; ;}
    break;

  case 347:
#line 77 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_VIEW; ;}
    break;

  case 348:
#line 78 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_MATVIEW; ;}
    break;

  case 349:
#line 79 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_INDEX; ;}
    break;

  case 350:
#line 80 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FOREIGN_TABLE; ;}
    break;

  case 351:
#line 81 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_COLLATION; ;}
    break;

  case 352:
#line 82 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_CONVERSION; ;}
    break;

  case 353:
#line 83 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_STATISTIC_EXT; ;}
    break;

  case 354:
#line 84 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSPARSER; ;}
    break;

  case 355:
#line 85 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSDICTIONARY; ;}
    break;

  case 356:
#line 86 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSTEMPLATE; ;}
    break;

  case 357:
#line 87 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSCONFIGURATION; ;}
    break;

  case 358:
#line 92 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_ACCESS_METHOD; ;}
    break;

  case 359:
#line 93 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_EVENT_TRIGGER; ;}
    break;

  case 360:
#line 94 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_EXTENSION; ;}
    break;

  case 361:
#line 95 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FDW; ;}
    break;

  case 362:
#line 96 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_PUBLICATION; ;}
    break;

  case 363:
#line 97 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_SCHEMA; ;}
    break;

  case 364:
#line 98 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FOREIGN_SERVER; ;}
    break;

  case 365:
#line 103 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 366:
#line 104 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 367:
#line 109 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_CASCADE; ;}
    break;

  case 368:
#line 110 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_RESTRICT; ;}
    break;

  case 369:
#line 111 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_RESTRICT; /* default */ ;}
    break;

  case 370:
#line 116 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_POLICY; ;}
    break;

  case 371:
#line 117 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_RULE; ;}
    break;

  case 372:
#line 118 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TRIGGER; ;}
    break;

  case 373:
#line 8 "third_party/libpg_query/grammar/statements/create_function.y"
    {
					PGCreateFunctionStmt *n = makeNode(PGCreateFunctionStmt);
					n->name = (yyvsp[(3) - (6)].range);
					n->params = (yyvsp[(4) - (6)].list);
					n->function = (yyvsp[(6) - (6)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 376:
#line 24 "third_party/libpg_query/grammar/statements/create_function.y"
    {
				(yyval.list) = NIL;
			;}
    break;

  case 377:
#line 28 "third_party/libpg_query/grammar/statements/create_function.y"
    {
				(yyval.list) = (yyvsp[(2) - (3)].list);
			;}
    break;

  case 378:
#line 12 "third_party/libpg_query/grammar/statements/update.y"
    {
					PGUpdateStmt *n = makeNode(PGUpdateStmt);
					n->relation = (yyvsp[(3) - (8)].range);
					n->targetList = (yyvsp[(5) - (8)].list);
					n->fromClause = (yyvsp[(6) - (8)].list);
					n->whereClause = (yyvsp[(7) - (8)].node);
					n->returningList = (yyvsp[(8) - (8)].list);
					n->withClause = (yyvsp[(1) - (8)].with);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 379:
#line 3 "third_party/libpg_query/grammar/statements/copy.y"
    {
					PGCopyStmt *n = makeNode(PGCopyStmt);
					n->relation = (yyvsp[(3) - (11)].range);
					n->query = NULL;
					n->attlist = (yyvsp[(4) - (11)].list);
					n->is_from = (yyvsp[(6) - (11)].boolean);
					n->is_program = (yyvsp[(7) - (11)].boolean);
					n->filename = (yyvsp[(8) - (11)].str);

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[(8) - (11)]))));

					n->options = NIL;
					/* Concatenate user-supplied flags */
					if ((yyvsp[(2) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(2) - (11)].defelt));
					if ((yyvsp[(5) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(5) - (11)].defelt));
					if ((yyvsp[(9) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(9) - (11)].defelt));
					if ((yyvsp[(11) - (11)].list))
						n->options = list_concat(n->options, (yyvsp[(11) - (11)].list));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 380:
#line 31 "third_party/libpg_query/grammar/statements/copy.y"
    {
					PGCopyStmt *n = makeNode(PGCopyStmt);
					n->relation = NULL;
					n->query = (yyvsp[(3) - (9)].node);
					n->attlist = NIL;
					n->is_from = false;
					n->is_program = (yyvsp[(6) - (9)].boolean);
					n->filename = (yyvsp[(7) - (9)].str);
					n->options = (yyvsp[(9) - (9)].list);

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[(5) - (9)]))));

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 381:
#line 53 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = true; ;}
    break;

  case 382:
#line 54 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = false; ;}
    break;

  case 383:
#line 60 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(2) - (3)]));
				;}
    break;

  case 384:
#line 63 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 385:
#line 69 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 386:
#line 73 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 387:
#line 80 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 388:
#line 81 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 389:
#line 85 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 390:
#line 86 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 391:
#line 91 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = true; ;}
    break;

  case 392:
#line 92 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = false; ;}
    break;

  case 393:
#line 96 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 394:
#line 97 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 395:
#line 102 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 396:
#line 103 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].value); ;}
    break;

  case 397:
#line 104 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeNode(PGAStar); ;}
    break;

  case 398:
#line 105 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) (yyvsp[(2) - (3)].list); ;}
    break;

  case 399:
#line 106 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = NULL; ;}
    break;

  case 400:
#line 112 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 401:
#line 120 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[(1) - (2)]));
				;}
    break;

  case 402:
#line 123 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 403:
#line 128 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 404:
#line 129 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = NIL; ;}
    break;

  case 405:
#line 135 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[(1) - (1)]));
				;}
    break;

  case 406:
#line 138 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 407:
#line 144 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[(1) - (1)]));
				;}
    break;

  case 408:
#line 148 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 409:
#line 152 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("freeze", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 410:
#line 156 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 411:
#line 160 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("null", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 412:
#line 164 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("csv"), (yylsp[(1) - (1)]));
				;}
    break;

  case 413:
#line 168 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("header", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 414:
#line 172 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("quote", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 415:
#line 176 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("escape", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 416:
#line 180 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 417:
#line 184 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)makeNode(PGAStar), (yylsp[(1) - (3)]));
				;}
    break;

  case 418:
#line 188 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_not_null", (PGNode *)(yyvsp[(4) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 419:
#line 192 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_null", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 420:
#line 196 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("encoding", (PGNode *)makeString((yyvsp[(2) - (2)].str)), (yylsp[(1) - (2)]));
				;}
    break;

  case 421:
#line 203 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 422:
#line 209 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 423:
#line 210 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = NULL; ;}
    break;

  case 424:
#line 211 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = NULL; ;}
    break;

  case 425:
#line 217 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 426:
#line 221 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 429:
#line 52 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 430:
#line 53 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 431:
#line 68 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 432:
#line 70 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list), NIL,
										NULL, NULL, NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (2)].node);
				;}
    break;

  case 433:
#line 77 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(3) - (4)].list),
										(PGNode*) list_nth((yyvsp[(4) - (4)].list), 0), (PGNode*) list_nth((yyvsp[(4) - (4)].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (4)].node);
				;}
    break;

  case 434:
#line 85 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(4) - (4)].list),
										(PGNode*) list_nth((yyvsp[(3) - (4)].list), 0), (PGNode*) list_nth((yyvsp[(3) - (4)].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (4)].node);
				;}
    break;

  case 435:
#line 93 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (2)].node), NULL, NIL,
										NULL, NULL,
										(yyvsp[(1) - (2)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (2)].node);
				;}
    break;

  case 436:
#line 101 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].list), NIL,
										NULL, NULL,
										(yyvsp[(1) - (3)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (3)].node);
				;}
    break;

  case 437:
#line 109 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(4) - (5)].list),
										(PGNode*) list_nth((yyvsp[(5) - (5)].list), 0), (PGNode*) list_nth((yyvsp[(5) - (5)].list), 1),
										(yyvsp[(1) - (5)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (5)].node);
				;}
    break;

  case 438:
#line 117 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(5) - (5)].list),
										(PGNode*) list_nth((yyvsp[(4) - (5)].list), 0), (PGNode*) list_nth((yyvsp[(4) - (5)].list), 1),
										(yyvsp[(1) - (5)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (5)].node);
				;}
    break;

  case 439:
#line 127 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 440:
#line 128 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 441:
#line 158 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->targetList = (yyvsp[(3) - (10)].list);
					n->intoClause = (yyvsp[(4) - (10)].into);
					n->fromClause = (yyvsp[(5) - (10)].list);
					n->whereClause = (yyvsp[(6) - (10)].node);
					n->groupClause = (yyvsp[(7) - (10)].list);
					n->havingClause = (yyvsp[(8) - (10)].node);
					n->windowClause = (yyvsp[(9) - (10)].list);
					n->sampleOptions = (yyvsp[(10) - (10)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 442:
#line 173 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->distinctClause = (yyvsp[(2) - (10)].list);
					n->targetList = (yyvsp[(3) - (10)].list);
					n->intoClause = (yyvsp[(4) - (10)].into);
					n->fromClause = (yyvsp[(5) - (10)].list);
					n->whereClause = (yyvsp[(6) - (10)].node);
					n->groupClause = (yyvsp[(7) - (10)].list);
					n->havingClause = (yyvsp[(8) - (10)].node);
					n->windowClause = (yyvsp[(9) - (10)].list);
					n->sampleOptions = (yyvsp[(10) - (10)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 443:
#line 186 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 444:
#line 188 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* same as SELECT * FROM relation_expr */
					PGColumnRef *cr = makeNode(PGColumnRef);
					PGResTarget *rt = makeNode(PGResTarget);
					PGSelectStmt *n = makeNode(PGSelectStmt);

					cr->fields = list_make1(makeNode(PGAStar));
					cr->location = -1;

					rt->name = NULL;
					rt->indirection = NIL;
					rt->val = (PGNode *)cr;
					rt->location = -1;

					n->targetList = list_make1(rt);
					n->fromClause = list_make1((yyvsp[(2) - (2)].range));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 445:
#line 207 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_UNION, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 446:
#line 211 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_INTERSECT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 447:
#line 215 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_EXCEPT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 448:
#line 232 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[(1) - (2)]);
			;}
    break;

  case 449:
#line 239 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[(1) - (2)]);
			;}
    break;

  case 450:
#line 246 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(3) - (3)].list);
				(yyval.with)->recursive = true;
				(yyval.with)->location = (yylsp[(1) - (3)]);
			;}
    break;

  case 451:
#line 255 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 452:
#line 256 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 453:
#line 260 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGCommonTableExpr *n = makeNode(PGCommonTableExpr);
				n->ctename = (yyvsp[(1) - (6)].str);
				n->aliascolnames = (yyvsp[(2) - (6)].list);
				n->ctequery = (yyvsp[(5) - (6)].node);
				n->location = (yylsp[(1) - (6)]);
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 454:
#line 272 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.into) = makeNode(PGIntoClause);
					(yyval.into)->rel = (yyvsp[(2) - (2)].range);
					(yyval.into)->colNames = NIL;
					(yyval.into)->options = NIL;
					(yyval.into)->onCommit = PG_ONCOMMIT_NOOP;
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;
				;}
    break;

  case 455:
#line 282 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.into) = NULL; ;}
    break;

  case 456:
#line 291 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 457:
#line 296 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 458:
#line 301 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 459:
#line 306 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 460:
#line 311 "third_party/libpg_query/grammar/statements/select.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (4)]))));
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 461:
#line 319 "third_party/libpg_query/grammar/statements/select.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (4)]))));
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 462:
#line 327 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_UNLOGGED;
				;}
    break;

  case 463:
#line 332 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(2) - (2)].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				;}
    break;

  case 464:
#line 337 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				;}
    break;

  case 465:
#line 343 "third_party/libpg_query/grammar/statements/select.y"
    {;}
    break;

  case 466:
#line 344 "third_party/libpg_query/grammar/statements/select.y"
    {;}
    break;

  case 467:
#line 348 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 468:
#line 349 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 469:
#line 350 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 470:
#line 357 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(NIL); ;}
    break;

  case 471:
#line 358 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
    break;

  case 472:
#line 362 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL;;}
    break;

  case 473:
#line 363 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 474:
#line 367 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list);;}
    break;

  case 475:
#line 368 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 476:
#line 372 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 477:
#line 376 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].sortby)); ;}
    break;

  case 478:
#line 377 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].sortby)); ;}
    break;

  case 479:
#line 381 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.sortby) = makeNode(PGSortBy);
					(yyval.sortby)->node = (yyvsp[(1) - (4)].node);
					(yyval.sortby)->sortby_dir = SORTBY_USING;
					(yyval.sortby)->sortby_nulls = (yyvsp[(4) - (4)].nullorder);
					(yyval.sortby)->useOp = (yyvsp[(3) - (4)].list);
					(yyval.sortby)->location = (yylsp[(3) - (4)]);
				;}
    break;

  case 480:
#line 390 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.sortby) = makeNode(PGSortBy);
					(yyval.sortby)->node = (yyvsp[(1) - (3)].node);
					(yyval.sortby)->sortby_dir = (yyvsp[(2) - (3)].sortorder);
					(yyval.sortby)->sortby_nulls = (yyvsp[(3) - (3)].nullorder);
					(yyval.sortby)->useOp = NIL;
					(yyval.sortby)->location = -1;		/* no operator */
				;}
    break;

  case 481:
#line 400 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_ASC; ;}
    break;

  case 482:
#line 401 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_DESC; ;}
    break;

  case 483:
#line 402 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_DEFAULT; ;}
    break;

  case 484:
#line 405 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_FIRST; ;}
    break;

  case 485:
#line 406 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_LAST; ;}
    break;

  case 486:
#line 407 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_DEFAULT; ;}
    break;

  case 487:
#line 411 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(2) - (2)].node), (yyvsp[(1) - (2)].node)); ;}
    break;

  case 488:
#line 412 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 489:
#line 413 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2(NULL, (yyvsp[(1) - (1)].node)); ;}
    break;

  case 490:
#line 414 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (1)].node), NULL); ;}
    break;

  case 491:
#line 418 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 492:
#line 419 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2(NULL,NULL); ;}
    break;

  case 493:
#line 424 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 494:
#line 426 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* Disabled because it was too confusing, bjm 2002-02-18 */
					ereport(ERROR,
							(errcode(PG_ERRCODE_SYNTAX_ERROR),
							 errmsg("LIMIT #,# syntax is not supported"),
							 errhint("Use separate LIMIT and OFFSET clauses."),
							 parser_errposition((yylsp[(1) - (4)]))));
				;}
    break;

  case 495:
#line 442 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(3) - (5)].node); ;}
    break;

  case 496:
#line 444 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeIntConst(1, -1); ;}
    break;

  case 497:
#line 449 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 498:
#line 452 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 499:
#line 460 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeFloat((yyvsp[(1) - (2)].str)), true);
		;}
    break;

  case 500:
#line 464 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), true);
		;}
    break;

  case 501:
#line 468 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeFloat((yyvsp[(1) - (2)].str)), true);
		;}
    break;

  case 502:
#line 472 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), true);
		;}
    break;

  case 503:
#line 476 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (1)].ival)), false);
		;}
    break;

  case 504:
#line 480 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), false);
		;}
    break;

  case 505:
#line 487 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(3) - (3)].node);
				;}
    break;

  case 506:
#line 491 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 507:
#line 498 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 508:
#line 499 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = NULL; ;}
    break;

  case 509:
#line 504 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSampleOptions((yyvsp[(3) - (5)].node), (yyvsp[(1) - (5)].str), (yyvsp[(5) - (5)].ival), (yylsp[(1) - (5)]));
				;}
    break;

  case 510:
#line 508 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (1)].node), NULL, -1, (yylsp[(1) - (1)]));
		;}
    break;

  case 511:
#line 512 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (4)].node), (yyvsp[(3) - (4)].str), -1, (yylsp[(1) - (4)]));
		;}
    break;

  case 512:
#line 516 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (6)].node), (yyvsp[(3) - (6)].str), (yyvsp[(5) - (6)].ival), (yylsp[(1) - (6)]));
		;}
    break;

  case 513:
#line 523 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(2) - (2)].node);
				;}
    break;

  case 514:
#line 529 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 515:
#line 530 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 516:
#line 535 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = (yyvsp[(3) - (4)].ival); ;}
    break;

  case 517:
#line 536 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = -1; ;}
    break;

  case 518:
#line 540 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 519:
#line 542 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* LIMIT ALL is represented as a NULL constant */
					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
				;}
    break;

  case 520:
#line 549 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 521:
#line 569 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 522:
#line 571 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 523:
#line 573 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 524:
#line 577 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival),(yylsp[(1) - (1)])); ;}
    break;

  case 525:
#line 578 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str),(yylsp[(1) - (1)])); ;}
    break;

  case 526:
#line 582 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 527:
#line 583 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 528:
#line 586 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 529:
#line 587 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 530:
#line 612 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 531:
#line 613 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 532:
#line 617 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 533:
#line 618 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].node)); ;}
    break;

  case 534:
#line 622 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 535:
#line 623 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 536:
#line 628 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_EMPTY, NIL, (yylsp[(1) - (2)]));
				;}
    break;

  case 537:
#line 640 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 538:
#line 641 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 539:
#line 645 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 540:
#line 646 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 541:
#line 650 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 542:
#line 651 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 543:
#line 655 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 544:
#line 656 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 545:
#line 661 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGLockingClause *n = makeNode(PGLockingClause);
					n->lockedRels = (yyvsp[(2) - (3)].list);
					n->strength = (yyvsp[(1) - (3)].lockstrength);
					n->waitPolicy = (yyvsp[(3) - (3)].lockwaitpolicy);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 546:
#line 671 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = LCS_FORUPDATE; ;}
    break;

  case 547:
#line 672 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORNOKEYUPDATE; ;}
    break;

  case 548:
#line 673 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORSHARE; ;}
    break;

  case 549:
#line 674 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORKEYSHARE; ;}
    break;

  case 550:
#line 678 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 551:
#line 679 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 552:
#line 684 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = LockWaitError; ;}
    break;

  case 553:
#line 685 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = PGLockWaitSkip; ;}
    break;

  case 554:
#line 686 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = PGLockWaitBlock; ;}
    break;

  case 555:
#line 696 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->valuesLists = list_make1((yyvsp[(3) - (4)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 556:
#line 702 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = (PGSelectStmt *) (yyvsp[(1) - (5)].node);
					n->valuesLists = lappend(n->valuesLists, (yyvsp[(4) - (5)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 557:
#line 719 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 558:
#line 720 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 559:
#line 724 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 560:
#line 725 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 561:
#line 732 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyvsp[(1) - (3)].range)->alias = (yyvsp[(2) - (3)].alias);
					(yyvsp[(1) - (3)].range)->sample = (yyvsp[(3) - (3)].node);
					(yyval.node) = (PGNode *) (yyvsp[(1) - (3)].range);
				;}
    break;

  case 562:
#line 738 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[(1) - (3)].node);
					n->alias = (PGAlias*) linitial((yyvsp[(2) - (3)].list));
					n->coldeflist = (PGList*) lsecond((yyvsp[(2) - (3)].list));
					n->sample = (yyvsp[(3) - (3)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 563:
#line 746 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[(2) - (3)].node);
					n->lateral = true;
					n->alias = (PGAlias*) linitial((yyvsp[(3) - (3)].list));
					n->coldeflist = (PGList*) lsecond((yyvsp[(3) - (3)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 564:
#line 754 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeSubselect *n = makeNode(PGRangeSubselect);
					n->lateral = false;
					n->subquery = (yyvsp[(1) - (3)].node);
					n->alias = (yyvsp[(2) - (3)].alias);
					n->sample = (yyvsp[(3) - (3)].node);
					/*
					 * The SQL spec does not permit a subselect
					 * (<derived_table>) without an alias clause,
					 * so we don't either.  This avoids the problem
					 * of needing to invent a unique refname for it.
					 * That could be surmounted if there's sufficient
					 * popular demand, but for now let's just implement
					 * the spec and see if anyone complains.
					 * However, it does seem like a good idea to emit
					 * an error message that's better than "syntax error".
					 */
					if ((yyvsp[(2) - (3)].alias) == NULL)
					{
						if (IsA((yyvsp[(1) - (3)].node), PGSelectStmt) &&
							((PGSelectStmt *) (yyvsp[(1) - (3)].node))->valuesLists)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("VALUES in FROM must have an alias"),
									 errhint("For example, FROM (VALUES ...) [AS] foo."),
									 parser_errposition((yylsp[(1) - (3)]))));
						else
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("subquery in FROM must have an alias"),
									 errhint("For example, FROM (SELECT ...) [AS] foo."),
									 parser_errposition((yylsp[(1) - (3)]))));
					}
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 565:
#line 790 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeSubselect *n = makeNode(PGRangeSubselect);
					n->lateral = true;
					n->subquery = (yyvsp[(2) - (3)].node);
					n->alias = (yyvsp[(3) - (3)].alias);
					n->sample = NULL;
					/* same comment as above */
					if ((yyvsp[(3) - (3)].alias) == NULL)
					{
						if (IsA((yyvsp[(2) - (3)].node), PGSelectStmt) &&
							((PGSelectStmt *) (yyvsp[(2) - (3)].node))->valuesLists)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("VALUES in FROM must have an alias"),
									 errhint("For example, FROM (VALUES ...) [AS] foo."),
									 parser_errposition((yylsp[(2) - (3)]))));
						else
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("subquery in FROM must have an alias"),
									 errhint("For example, FROM (SELECT ...) [AS] foo."),
									 parser_errposition((yylsp[(2) - (3)]))));
					}
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 566:
#line 816 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) (yyvsp[(1) - (1)].jexpr);
				;}
    break;

  case 567:
#line 820 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyvsp[(2) - (4)].jexpr)->alias = (yyvsp[(4) - (4)].alias);
					(yyval.node) = (PGNode *) (yyvsp[(2) - (4)].jexpr);
				;}
    break;

  case 568:
#line 846 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.jexpr) = (yyvsp[(2) - (3)].jexpr);
				;}
    break;

  case 569:
#line 850 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* CROSS JOIN is same as unqualified inner join */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(4) - (4)].node);
					n->usingClause = NIL;
					n->quals = NULL;
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 570:
#line 863 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[(2) - (5)].jtype);
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (5)].node);
					n->rarg = (yyvsp[(4) - (5)].node);
					if ((yyvsp[(5) - (5)].node) != NULL && IsA((yyvsp[(5) - (5)].node), PGList))
						n->usingClause = (PGList *) (yyvsp[(5) - (5)].node); /* USING clause */
					else
						n->quals = (yyvsp[(5) - (5)].node); /* ON clause */
					n->location = (yylsp[(2) - (5)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 571:
#line 877 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* letting join_type reduce to empty doesn't work */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(3) - (4)].node);
					if ((yyvsp[(4) - (4)].node) != NULL && IsA((yyvsp[(4) - (4)].node), PGList))
						n->usingClause = (PGList *) (yyvsp[(4) - (4)].node); /* USING clause */
					else
						n->quals = (yyvsp[(4) - (4)].node); /* ON clause */
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 572:
#line 892 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[(3) - (5)].jtype);
					n->isNatural = true;
					n->larg = (yyvsp[(1) - (5)].node);
					n->rarg = (yyvsp[(5) - (5)].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					n->location = (yylsp[(2) - (5)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 573:
#line 904 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* letting join_type reduce to empty doesn't work */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = true;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(4) - (4)].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 574:
#line 920 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(2) - (5)].str);
					(yyval.alias)->colnames = (yyvsp[(4) - (5)].list);
				;}
    break;

  case 575:
#line 926 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(2) - (2)].str);
				;}
    break;

  case 576:
#line 931 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(1) - (4)].str);
					(yyval.alias)->colnames = (yyvsp[(3) - (4)].list);
				;}
    break;

  case 577:
#line 937 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(1) - (1)].str);
				;}
    break;

  case 578:
#line 943 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.alias) = (yyvsp[(1) - (1)].alias); ;}
    break;

  case 579:
#line 944 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.alias) = NULL; ;}
    break;

  case 580:
#line 953 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2((yyvsp[(1) - (1)].alias), NIL);
				;}
    break;

  case 581:
#line 957 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(NULL, (yyvsp[(3) - (4)].list));
				;}
    break;

  case 582:
#line 961 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAlias *a = makeNode(PGAlias);
					a->aliasname = (yyvsp[(2) - (5)].str);
					(yyval.list) = list_make2(a, (yyvsp[(4) - (5)].list));
				;}
    break;

  case 583:
#line 967 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAlias *a = makeNode(PGAlias);
					a->aliasname = (yyvsp[(1) - (4)].str);
					(yyval.list) = list_make2(a, (yyvsp[(3) - (4)].list));
				;}
    break;

  case 584:
#line 973 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(NULL, NIL);
				;}
    break;

  case 585:
#line 978 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_FULL; ;}
    break;

  case 586:
#line 979 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_LEFT; ;}
    break;

  case 587:
#line 980 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_RIGHT; ;}
    break;

  case 588:
#line 981 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_INNER; ;}
    break;

  case 589:
#line 985 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 590:
#line 986 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 591:
#line 998 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) (yyvsp[(3) - (4)].list); ;}
    break;

  case 592:
#line 999 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 593:
#line 1005 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* inheritance query, implicitly */
					(yyval.range) = (yyvsp[(1) - (1)].range);
					(yyval.range)->inh = true;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 594:
#line 1012 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* inheritance query, explicitly */
					(yyval.range) = (yyvsp[(1) - (2)].range);
					(yyval.range)->inh = true;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 595:
#line 1019 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* no inheritance */
					(yyval.range) = (yyvsp[(2) - (2)].range);
					(yyval.range)->inh = false;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 596:
#line 1026 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* no inheritance, SQL99-style syntax */
					(yyval.range) = (yyvsp[(3) - (4)].range);
					(yyval.range)->inh = false;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 597:
#line 1058 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = makeNode(PGRangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[(2) - (2)].boolean);
					n->is_rowsfrom = false;
					n->functions = list_make1(list_make2((yyvsp[(1) - (2)].node), NIL));
					n->sample = NULL;
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 598:
#line 1069 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = makeNode(PGRangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[(6) - (6)].boolean);
					n->is_rowsfrom = true;
					n->functions = (yyvsp[(4) - (6)].list);
					n->sample = NULL;
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 599:
#line 1082 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list)); ;}
    break;

  case 600:
#line 1086 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 601:
#line 1087 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 602:
#line 1090 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 603:
#line 1091 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 604:
#line 1094 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 605:
#line 1095 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 606:
#line 1100 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 607:
#line 1101 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 608:
#line 1107 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 609:
#line 1111 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 610:
#line 1117 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->colname = (yyvsp[(1) - (3)].str);
					n->typeName = (yyvsp[(2) - (3)].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collClause = (PGCollateClause *) (yyvsp[(3) - (3)].node);
					n->collOid = InvalidOid;
					n->constraints = NIL;
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 611:
#line 1138 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[(2) - (2)].list);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 612:
#line 1145 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 613:
#line 1158 "third_party/libpg_query/grammar/statements/select.y"
    {
             (yyval.list) = list_make1(list_make2(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].typnam)));
            ;}
    break;

  case 614:
#line 1161 "third_party/libpg_query/grammar/statements/select.y"
    {
             (yyval.list) = lappend((yyvsp[(1) - (4)].list), list_make2(makeString((yyvsp[(3) - (4)].str)), (yyvsp[(4) - (4)].typnam)));
            ;}
    break;

  case 617:
#line 1168 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[(2) - (2)].list);
				;}
    break;

  case 618:
#line 1173 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[(3) - (3)].list);
					(yyval.typnam)->setof = true;
				;}
    break;

  case 619:
#line 1180 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (5)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(4) - (5)].ival)));
				;}
    break;

  case 620:
#line 1185 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (6)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(5) - (6)].ival)));
					(yyval.typnam)->setof = true;
				;}
    break;

  case 621:
#line 1191 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
				;}
    break;

  case 622:
#line 1196 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
					(yyval.typnam)->setof = true;
				;}
    break;

  case 623:
#line 1201 "third_party/libpg_query/grammar/statements/select.y"
    {
               (yyval.typnam) = SystemTypeName("struct");
               (yyval.typnam)->typmods = (yyvsp[(3) - (4)].list);
               (yyval.typnam)->location = (yylsp[(1) - (4)]);
               ;}
    break;

  case 624:
#line 1206 "third_party/libpg_query/grammar/statements/select.y"
    {
               (yyval.typnam) = SystemTypeName("map");
               (yyval.typnam)->typmods = (yyvsp[(3) - (4)].list);
               (yyval.typnam)->location = (yylsp[(1) - (4)]);
			;}
    break;

  case 625:
#line 1215 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeInteger(-1)); ;}
    break;

  case 626:
#line 1217 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = lappend((yyvsp[(1) - (4)].list), makeInteger((yyvsp[(3) - (4)].ival))); ;}
    break;

  case 627:
#line 1219 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = NIL; ;}
    break;

  case 628:
#line 1223 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 629:
#line 1224 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 630:
#line 1225 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 631:
#line 1226 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 632:
#line 1227 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 633:
#line 1229 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
				;}
    break;

  case 634:
#line 1234 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (4)].typnam);
					(yyval.typnam)->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											 makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
				;}
    break;

  case 635:
#line 1253 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 636:
#line 1254 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 637:
#line 1255 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 638:
#line 1256 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 639:
#line 1268 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = makeTypeName((yyvsp[(1) - (2)].str));
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 640:
#line 1281 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 641:
#line 1282 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 642:
#line 1289 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 643:
#line 1294 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 644:
#line 1299 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int2");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 645:
#line 1304 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int8");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 646:
#line 1309 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 647:
#line 1314 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (2)].typnam);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 648:
#line 1319 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float8");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 649:
#line 1324 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 650:
#line 1330 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 651:
#line 1336 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 652:
#line 1342 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("bool");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 653:
#line 1349 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Check FLOAT() precision limits assuming IEEE floating
					 * types - thomas 1997-09-18
					 */
					if ((yyvsp[(2) - (3)].ival) < 1)
						ereport(ERROR,
								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be at least 1 bit"),
								 parser_errposition((yylsp[(2) - (3)]))));
					else if ((yyvsp[(2) - (3)].ival) <= 24)
						(yyval.typnam) = SystemTypeName("float4");
					else if ((yyvsp[(2) - (3)].ival) <= 53)
						(yyval.typnam) = SystemTypeName("float8");
					else
						ereport(ERROR,
								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be less than 54 bits"),
								 parser_errposition((yylsp[(2) - (3)]))));
				;}
    break;

  case 654:
#line 1370 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float4");
				;}
    break;

  case 655:
#line 1380 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 656:
#line 1384 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 657:
#line 1392 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 658:
#line 1396 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
					(yyval.typnam)->typmods = NIL;
				;}
    break;

  case 659:
#line 1404 "third_party/libpg_query/grammar/statements/select.y"
    {
					const char *typname;

					typname = (yyvsp[(2) - (5)].boolean) ? "varbit" : "bit";
					(yyval.typnam) = SystemTypeName(typname);
					(yyval.typnam)->typmods = (yyvsp[(4) - (5)].list);
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 660:
#line 1416 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* bit defaults to bit(1), varbit to no limit */
					if ((yyvsp[(2) - (2)].boolean))
					{
						(yyval.typnam) = SystemTypeName("varbit");
					}
					else
					{
						(yyval.typnam) = SystemTypeName("bit");
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					}
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 661:
#line 1437 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 662:
#line 1441 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 663:
#line 1447 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 664:
#line 1451 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* Length was not specified so allow to be unrestricted.
					 * This handles problems with fixed-length (bpchar) strings
					 * which in column definitions must default to a length
					 * of one, but should not be constrained if the length
					 * was not specified.
					 */
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
					(yyval.typnam)->typmods = NIL;
				;}
    break;

  case 665:
#line 1464 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (4)].conststr));
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
					(yyval.typnam)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 666:
#line 1472 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (1)].conststr));
					/* char defaults to char(1), varchar to no limit */
					if (strcmp((yyvsp[(1) - (1)].conststr), "bpchar") == 0)
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 667:
#line 1482 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 668:
#line 1484 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 669:
#line 1486 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "varchar"; ;}
    break;

  case 670:
#line 1488 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 671:
#line 1490 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 672:
#line 1492 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 673:
#line 1496 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 674:
#line 1497 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 675:
#line 1505 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(5) - (5)].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 676:
#line 1514 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 677:
#line 1522 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(5) - (5)].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 678:
#line 1531 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 679:
#line 1542 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("interval");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 680:
#line 1549 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 681:
#line 1550 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 682:
#line 1551 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 699:
#line 1580 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR), (yylsp[(1) - (1)]))); ;}
    break;

  case 700:
#line 1582 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MONTH), (yylsp[(1) - (1)]))); ;}
    break;

  case 701:
#line 1584 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY), (yylsp[(1) - (1)]))); ;}
    break;

  case 702:
#line 1586 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR), (yylsp[(1) - (1)]))); ;}
    break;

  case 703:
#line 1588 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MINUTE), (yylsp[(1) - (1)]))); ;}
    break;

  case 704:
#line 1590 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(SECOND), (yylsp[(1) - (1)]))); ;}
    break;

  case 705:
#line 1592 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MILLISECOND), (yylsp[(1) - (1)]))); ;}
    break;

  case 706:
#line 1594 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MICROSECOND), (yylsp[(1) - (1)]))); ;}
    break;

  case 707:
#line 1596 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR) |
												 INTERVAL_MASK(MONTH), (yylsp[(1) - (3)])));
				;}
    break;

  case 708:
#line 1601 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR), (yylsp[(1) - (3)])));
				;}
    break;

  case 709:
#line 1606 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
				;}
    break;

  case 710:
#line 1612 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
				;}
    break;

  case 711:
#line 1619 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
				;}
    break;

  case 712:
#line 1624 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
				;}
    break;

  case 713:
#line 1630 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
				;}
    break;

  case 714:
#line 1635 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 715:
#line 1666 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 716:
#line 1669 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), 0, (yylsp[(2) - (3)])); ;}
    break;

  case 717:
#line 1671 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = (yyvsp[(1) - (3)].node);
					n->collname = (yyvsp[(3) - (3)].list);
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 718:
#line 1679 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("timezone"),
											   list_make2((yyvsp[(5) - (5)].node), (yyvsp[(1) - (5)].node)),
											   (yylsp[(2) - (5)]));
				;}
    break;

  case 719:
#line 1694 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 720:
#line 1696 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 721:
#line 1698 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 722:
#line 1700 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 723:
#line 1702 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 724:
#line 1704 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 725:
#line 1706 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 726:
#line 1708 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 727:
#line 1710 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 728:
#line 1712 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 729:
#line 1714 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 730:
#line 1716 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 731:
#line 1718 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 732:
#line 1720 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 733:
#line 1723 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 734:
#line 1725 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 735:
#line 1727 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
    break;

  case 736:
#line 1730 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeAndExpr((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 737:
#line 1732 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeOrExpr((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 738:
#line 1734 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeNotExpr((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 739:
#line 1736 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeNotExpr((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 740:
#line 1739 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_GLOB, "~~~",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 741:
#line 1744 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "~~",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 742:
#line 1749 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make3((yyvsp[(1) - (5)].node), (yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 743:
#line 1756 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "!~~",
												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
				;}
    break;

  case 744:
#line 1761 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("not_like_escape"),
											   list_make3((yyvsp[(1) - (6)].node), (yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 745:
#line 1768 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "~~*",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 746:
#line 1773 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make2((yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "~~*",
												   (yyvsp[(1) - (5)].node), (PGNode *) n, (yylsp[(2) - (5)]));
				;}
    break;

  case 747:
#line 1781 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "!~~*",
												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
				;}
    break;

  case 748:
#line 1786 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("not_like_escape"),
											   list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "!~~*",
												   (yyvsp[(1) - (6)].node), (PGNode *) n, (yylsp[(2) - (6)]));
				;}
    break;

  case 749:
#line 1795 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(4) - (4)].node), makeNullAConst(-1)),
											   (yylsp[(2) - (4)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
												   (yyvsp[(1) - (4)].node), (PGNode *) n, (yylsp[(2) - (4)]));
				;}
    break;

  case 750:
#line 1803 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
												   (yyvsp[(1) - (6)].node), (PGNode *) n, (yylsp[(2) - (6)]));
				;}
    break;

  case 751:
#line 1811 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(5) - (5)].node), makeNullAConst(-1)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
												   (yyvsp[(1) - (5)].node), (PGNode *) n, (yylsp[(2) - (5)]));
				;}
    break;

  case 752:
#line 1819 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
											   (yylsp[(2) - (7)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
												   (yyvsp[(1) - (7)].node), (PGNode *) n, (yylsp[(2) - (7)]));
				;}
    break;

  case 753:
#line 1837 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					n->nulltesttype = PG_IS_NULL;
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 754:
#line 1845 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
					n->nulltesttype = PG_IS_NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 755:
#line 1853 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 756:
#line 1861 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 757:
#line 1869 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 758:
#line 1876 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGFuncCall *n = makeFuncCall(SystemFuncName("row"), (yyvsp[(1) - (1)].list), (yylsp[(1) - (1)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 759:
#line 1881 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGLambdaFunction *n = makeNode(PGLambdaFunction);
				n->parameters = (yyvsp[(1) - (3)].list);
				n->function = (yyvsp[(3) - (3)].node);
				n->location = (yylsp[(2) - (3)]);
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 760:
#line 1889 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGLambdaFunction *n = makeNode(PGLambdaFunction);
				n->parameters = list_make1((yyvsp[(1) - (3)].node));
				n->function = (yyvsp[(3) - (3)].node);
				n->location = (yylsp[(2) - (3)]);
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 761:
#line 1897 "third_party/libpg_query/grammar/statements/select.y"
    {
					if (list_length((yyvsp[(1) - (3)].list)) != 2)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on left side of OVERLAPS expression"),
								 parser_errposition((yylsp[(1) - (3)]))));
					if (list_length((yyvsp[(3) - (3)].list)) != 2)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on right side of OVERLAPS expression"),
								 parser_errposition((yylsp[(3) - (3)]))));
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlaps"),
											   list_concat((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)),
											   (yylsp[(2) - (3)]));
				;}
    break;

  case 762:
#line 1913 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = PG_IS_TRUE;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 763:
#line 1921 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_TRUE;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 764:
#line 1929 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = IS_FALSE;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 765:
#line 1937 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_FALSE;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 766:
#line 1945 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = IS_UNKNOWN;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 767:
#line 1953 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_UNKNOWN;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 768:
#line 1961 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
				;}
    break;

  case 769:
#line 1965 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 770:
#line 1969 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
				;}
    break;

  case 771:
#line 1973 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
				;}
    break;

  case 772:
#line 1977 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN,
												   "BETWEEN",
												   (yyvsp[(1) - (6)].node),
												   (PGNode *) list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
												   (yylsp[(2) - (6)]));
				;}
    break;

  case 773:
#line 1985 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN,
												   "NOT BETWEEN",
												   (yyvsp[(1) - (7)].node),
												   (PGNode *) list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
												   (yylsp[(2) - (7)]));
				;}
    break;

  case 774:
#line 1993 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN_SYM,
												   "BETWEEN SYMMETRIC",
												   (yyvsp[(1) - (6)].node),
												   (PGNode *) list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
												   (yylsp[(2) - (6)]));
				;}
    break;

  case 775:
#line 2001 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN_SYM,
												   "NOT BETWEEN SYMMETRIC",
												   (yyvsp[(1) - (7)].node),
												   (PGNode *) list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
												   (yylsp[(2) - (7)]));
				;}
    break;

  case 776:
#line 2009 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* in_expr returns a PGSubLink or a list of a_exprs */
					if (IsA((yyvsp[(3) - (3)].node), PGSubLink))
					{
						/* generate foo = ANY (subquery) */
						PGSubLink *n = (PGSubLink *) (yyvsp[(3) - (3)].node);
						n->subLinkType = PG_ANY_SUBLINK;
						n->subLinkId = 0;
						n->testexpr = (yyvsp[(1) - (3)].node);
						n->operName = NIL;		/* show it's IN not = ANY */
						n->location = (yylsp[(2) - (3)]);
						(yyval.node) = (PGNode *)n;
					}
					else
					{
						/* generate scalar IN expression */
						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
					}
				;}
    break;

  case 777:
#line 2029 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* in_expr returns a PGSubLink or a list of a_exprs */
					if (IsA((yyvsp[(4) - (4)].node), PGSubLink))
					{
						/* generate NOT (foo = ANY (subquery)) */
						/* Make an = ANY node */
						PGSubLink *n = (PGSubLink *) (yyvsp[(4) - (4)].node);
						n->subLinkType = PG_ANY_SUBLINK;
						n->subLinkId = 0;
						n->testexpr = (yyvsp[(1) - (4)].node);
						n->operName = NIL;		/* show it's IN not = ANY */
						n->location = (yylsp[(2) - (4)]);
						/* Stick a NOT on top; must have same parse location */
						(yyval.node) = makeNotExpr((PGNode *) n, (yylsp[(2) - (4)]));
					}
					else
					{
						/* generate scalar NOT IN expression */
						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "<>", (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
					}
				;}
    break;

  case 778:
#line 2051 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = (yyvsp[(3) - (4)].subquerytype);
					n->subLinkId = 0;
					n->testexpr = (yyvsp[(1) - (4)].node);
					n->operName = (yyvsp[(2) - (4)].list);
					n->subselect = (yyvsp[(4) - (4)].node);
					n->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 779:
#line 2062 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(3) - (6)].subquerytype) == PG_ANY_SUBLINK)
						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ANY, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
					else
						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ALL, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 780:
#line 2069 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * The SQL spec only allows DEFAULT in "contextually typed
					 * expressions", but for us, it's easier to allow it in
					 * any a_expr and then throw error during parse analysis
					 * if it's in an inappropriate context.  This way also
					 * lets us say something smarter than "syntax error".
					 */
					PGSetToDefault *n = makeNode(PGSetToDefault);
					/* parse analysis will fill in the rest */
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 781:
#line 2094 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 782:
#line 2096 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), 0, (yylsp[(2) - (3)])); ;}
    break;

  case 783:
#line 2098 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 784:
#line 2100 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 785:
#line 2102 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 786:
#line 2104 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 787:
#line 2106 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 788:
#line 2108 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 789:
#line 2110 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 790:
#line 2112 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 791:
#line 2114 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 792:
#line 2116 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 793:
#line 2118 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 794:
#line 2120 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 795:
#line 2122 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 796:
#line 2124 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 797:
#line 2126 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 798:
#line 2128 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 799:
#line 2130 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
    break;

  case 800:
#line 2132 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
				;}
    break;

  case 801:
#line 2136 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 802:
#line 2140 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
				;}
    break;

  case 803:
#line 2144 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
				;}
    break;

  case 804:
#line 2157 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 805:
#line 2158 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 806:
#line 2160 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = makeParamRef(0, (yylsp[(1) - (2)]));
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = makeParamRef(0, (yylsp[(1) - (2)]));
				;}
    break;

  case 807:
#line 2172 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGParamRef *p = makeNode(PGParamRef);
					p->number = (yyvsp[(1) - (2)].ival);
					p->location = (yylsp[(1) - (2)]);
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (PGNode *) p;
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = (PGNode *) p;
				;}
    break;

  case 808:
#line 2187 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(4) - (4)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (yyvsp[(2) - (4)].node);
						n->indirection = check_indirection((yyvsp[(4) - (4)].list), yyscanner);
						(yyval.node) = (PGNode *)n;
					}
					else
						(yyval.node) = (yyvsp[(2) - (4)].node);
				;}
    break;

  case 809:
#line 2199 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 810:
#line 2201 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 811:
#line 2203 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_EXPR_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(1) - (1)].node);
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 812:
#line 2214 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Because the select_with_parens nonterminal is designed
					 * to "eat" as many levels of parens as possible, the
					 * '(' a_expr ')' opt_indirection production above will
					 * fail to match a sub-SELECT with indirection decoration;
					 * the sub-SELECT won't be regarded as an a_expr as long
					 * as there are parens around it.  To support applying
					 * subscripting or field selection to a sub-SELECT result,
					 * we need this redundant-looking production.
					 */
					PGSubLink *n = makeNode(PGSubLink);
					PGAIndirection *a = makeNode(PGAIndirection);
					n->subLinkType = PG_EXPR_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(1) - (2)].node);
					n->location = (yylsp[(1) - (2)]);
					a->arg = (PGNode *)n;
					a->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.node) = (PGNode *)a;
				;}
    break;

  case 813:
#line 2238 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_EXISTS_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(2) - (2)].node);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 814:
#line 2251 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall((yyvsp[(1) - (3)].list), NIL, (yylsp[(1) - (3)]));
				;}
    break;

  case 815:
#line 2255 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (5)].list), (yyvsp[(3) - (5)].list), (yylsp[(1) - (5)]));
					n->agg_order = (yyvsp[(4) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 816:
#line 2261 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), list_make1((yyvsp[(4) - (6)].node)), (yylsp[(1) - (6)]));
					n->func_variadic = true;
					n->agg_order = (yyvsp[(5) - (6)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 817:
#line 2268 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (8)].list), lappend((yyvsp[(3) - (8)].list), (yyvsp[(6) - (8)].node)), (yylsp[(1) - (8)]));
					n->func_variadic = true;
					n->agg_order = (yyvsp[(7) - (8)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 818:
#line 2275 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), (yyvsp[(4) - (6)].list), (yylsp[(1) - (6)]));
					n->agg_order = (yyvsp[(5) - (6)].list);
					/* Ideally we'd mark the PGFuncCall node to indicate
					 * "must be an aggregate", but there's no provision
					 * for that in PGFuncCall at the moment.
					 */
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 819:
#line 2285 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), (yyvsp[(4) - (6)].list), (yylsp[(1) - (6)]));
					n->agg_order = (yyvsp[(5) - (6)].list);
					n->agg_distinct = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 820:
#line 2292 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * We consider AGGREGATE(*) to invoke a parameterless
					 * aggregate.  This does the right thing for COUNT(*),
					 * and there are no other aggregates in SQL that accept
					 * '*' as parameter.
					 *
					 * The PGFuncCall node is also marked agg_star = true,
					 * so that later processing can detect what the argument
					 * really was.
					 */
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (4)].list), NIL, (yylsp[(1) - (4)]));
					n->agg_star = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 821:
#line 2320 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = (PGFuncCall *) (yyvsp[(1) - (4)].node);
					/*
					 * The order clause for WITHIN GROUP and the one for
					 * plain-aggregate ORDER BY share a field, so we have to
					 * check here that at most one is present.  We also check
					 * for DISTINCT and VARIADIC here to give a better error
					 * location.  Other consistency checks are deferred to
					 * parse analysis.
					 */
					if ((yyvsp[(2) - (4)].list) != NIL)
					{
						if (n->agg_order != NIL)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use multiple ORDER BY clauses with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						if (n->agg_distinct)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use DISTINCT with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						if (n->func_variadic)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use VARIADIC with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						n->agg_order = (yyvsp[(2) - (4)].list);
						n->agg_within_group = true;
					}
					n->agg_filter = (yyvsp[(3) - (4)].node);
					n->over = (yyvsp[(4) - (4)].windef);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 822:
#line 2355 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 823:
#line 2365 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 824:
#line 2366 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 825:
#line 2374 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("pg_collation_for"),
											   list_make1((yyvsp[(4) - (5)].node)),
											   (yylsp[(1) - (5)]));
				;}
    break;

  case 826:
#line 2380 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_DATE, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 827:
#line 2384 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIME, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 828:
#line 2388 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIME_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 829:
#line 2392 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIMESTAMP, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 830:
#line 2396 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIMESTAMP_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 831:
#line 2400 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIME, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 832:
#line 2404 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIME_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 833:
#line 2408 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIMESTAMP, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 834:
#line 2412 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIMESTAMP_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 835:
#line 2416 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_ROLE, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 836:
#line 2420 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 837:
#line 2424 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_SESSION_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 838:
#line 2428 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 839:
#line 2432 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_CATALOG, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 840:
#line 2436 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_SCHEMA, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 841:
#line 2440 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].typnam), 0, (yylsp[(1) - (6)])); ;}
    break;

  case 842:
#line 2442 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].typnam), 1, (yylsp[(1) - (6)])); ;}
    break;

  case 843:
#line 2444 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("date_part"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 844:
#line 2448 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* overlay(A PLACING B FROM C FOR D) is converted to
					 * overlay(A, B, C, D)
					 * overlay(A PLACING B FROM C) is converted to
					 * overlay(A, B, C)
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlay"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 845:
#line 2457 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* position(A in B) is converted to position(B, A) */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("position"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 846:
#line 2462 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* substring(A from B for C) is converted to
					 * substring(A, B, C) - thomas 2000-11-28
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("substring"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 847:
#line 2469 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* TREAT(expr AS target) converts expr of a particular type to target,
					 * which is defined to be a subtype of the original expression.
					 * In SQL99, this is intended for use with structured UDTs,
					 * but let's make this a generally useful form allowing stronger
					 * coercions than are handled by implicit casting.
					 *
					 * Convert SystemTypeName() to SystemFuncName() even though
					 * at the moment they result in the same thing.
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName(((PGValue *)llast((yyvsp[(5) - (6)].typnam)->names))->val.str),
												list_make1((yyvsp[(3) - (6)].node)),
												(yylsp[(1) - (6)]));
				;}
    break;

  case 848:
#line 2484 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* various trim expressions are defined in SQL
					 * - thomas 1997-07-19
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("trim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 849:
#line 2491 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("ltrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 850:
#line 2495 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("rtrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 851:
#line 2499 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("trim"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 852:
#line 2503 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NULLIF, "=", (yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(1) - (6)]));
				;}
    break;

  case 853:
#line 2507 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCoalesceExpr *c = makeNode(PGCoalesceExpr);
					c->args = (yyvsp[(3) - (4)].list);
					c->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)c;
				;}
    break;

  case 854:
#line 2520 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
    break;

  case 855:
#line 2521 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 856:
#line 2525 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(4) - (5)].node); ;}
    break;

  case 857:
#line 2526 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 858:
#line 2534 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 859:
#line 2535 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 860:
#line 2539 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].windef)); ;}
    break;

  case 861:
#line 2541 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].windef)); ;}
    break;

  case 862:
#line 2546 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(3) - (3)].windef);
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.windef) = n;
				;}
    break;

  case 863:
#line 2554 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.windef) = (yyvsp[(2) - (2)].windef); ;}
    break;

  case 864:
#line 2556 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->name = (yyvsp[(2) - (2)].str);
					n->refname = NULL;
					n->partitionClause = NIL;
					n->orderClause = NIL;
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.windef) = n;
				;}
    break;

  case 865:
#line 2569 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.windef) = NULL; ;}
    break;

  case 866:
#line 2574 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->name = NULL;
					n->refname = (yyvsp[(2) - (6)].str);
					n->partitionClause = (yyvsp[(3) - (6)].list);
					n->orderClause = (yyvsp[(4) - (6)].list);
					/* copy relevant fields of opt_frame_clause */
					n->frameOptions = (yyvsp[(5) - (6)].windef)->frameOptions;
					n->startOffset = (yyvsp[(5) - (6)].windef)->startOffset;
					n->endOffset = (yyvsp[(5) - (6)].windef)->endOffset;
					n->location = (yylsp[(1) - (6)]);
					(yyval.windef) = n;
				;}
    break;

  case 867:
#line 2599 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 868:
#line 2600 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = NULL; ;}
    break;

  case 869:
#line 2603 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 870:
#line 2604 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 871:
#line 2616 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(2) - (2)].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_RANGE;
					if (n->frameOptions & (FRAMEOPTION_START_VALUE_PRECEDING |
										   FRAMEOPTION_END_VALUE_PRECEDING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("RANGE PRECEDING is only supported with UNBOUNDED"),
								 parser_errposition((yylsp[(1) - (2)]))));
					if (n->frameOptions & (FRAMEOPTION_START_VALUE_FOLLOWING |
										   FRAMEOPTION_END_VALUE_FOLLOWING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("RANGE FOLLOWING is only supported with UNBOUNDED"),
								 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.windef) = n;
				;}
    break;

  case 872:
#line 2634 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(2) - (2)].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_ROWS;
					(yyval.windef) = n;
				;}
    break;

  case 873:
#line 2640 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 874:
#line 2650 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(1) - (1)].windef);
					/* reject invalid cases */
					if (n->frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[(1) - (1)]))));
					if (n->frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot end with current row"),
								 parser_errposition((yylsp[(1) - (1)]))));
					n->frameOptions |= FRAMEOPTION_END_CURRENT_ROW;
					(yyval.windef) = n;
				;}
    break;

  case 875:
#line 2667 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n1 = (yyvsp[(2) - (4)].windef);
					PGWindowDef *n2 = (yyvsp[(4) - (4)].windef);
					/* form merged options */
					int		frameOptions = n1->frameOptions;
					/* shift converts START_ options to END_ options */
					frameOptions |= n2->frameOptions << 1;
					frameOptions |= FRAMEOPTION_BETWEEN;
					/* reject invalid cases */
					if (frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[(2) - (4)]))));
					if (frameOptions & FRAMEOPTION_END_UNBOUNDED_PRECEDING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame end cannot be UNBOUNDED PRECEDING"),
								 parser_errposition((yylsp[(4) - (4)]))));
					if ((frameOptions & FRAMEOPTION_START_CURRENT_ROW) &&
						(frameOptions & FRAMEOPTION_END_VALUE_PRECEDING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from current row cannot have preceding rows"),
								 parser_errposition((yylsp[(4) - (4)]))));
					if ((frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING) &&
						(frameOptions & (FRAMEOPTION_END_VALUE_PRECEDING |
										 FRAMEOPTION_END_CURRENT_ROW)))
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot have preceding rows"),
								 parser_errposition((yylsp[(4) - (4)]))));
					n1->frameOptions = frameOptions;
					n1->endOffset = n2->startOffset;
					(yyval.windef) = n1;
				;}
    break;

  case 876:
#line 2712 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_PRECEDING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 877:
#line 2720 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_FOLLOWING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 878:
#line 2728 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_CURRENT_ROW;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 879:
#line 2736 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_PRECEDING;
					n->startOffset = (yyvsp[(1) - (2)].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 880:
#line 2744 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_FOLLOWING;
					n->startOffset = (yyvsp[(1) - (2)].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 881:
#line 2764 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 882:
#line 2765 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 883:
#line 2768 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list);;}
    break;

  case 884:
#line 2769 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(2) - (5)].list), (yyvsp[(4) - (5)].node)); ;}
    break;

  case 885:
#line 2772 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
    break;

  case 886:
#line 2773 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
    break;

  case 887:
#line 2774 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ALL_SUBLINK; ;}
    break;

  case 888:
#line 2777 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 889:
#line 2778 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) (yyvsp[(1) - (1)].conststr); ;}
    break;

  case 890:
#line 2781 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "+"; ;}
    break;

  case 891:
#line 2782 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "-"; ;}
    break;

  case 892:
#line 2783 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "*"; ;}
    break;

  case 893:
#line 2784 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "/"; ;}
    break;

  case 894:
#line 2785 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "%"; ;}
    break;

  case 895:
#line 2786 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "^"; ;}
    break;

  case 896:
#line 2787 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<"; ;}
    break;

  case 897:
#line 2788 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = ">"; ;}
    break;

  case 898:
#line 2789 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "="; ;}
    break;

  case 899:
#line 2790 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<="; ;}
    break;

  case 900:
#line 2791 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = ">="; ;}
    break;

  case 901:
#line 2792 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<>"; ;}
    break;

  case 902:
#line 2796 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 903:
#line 2798 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 904:
#line 2803 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 905:
#line 2805 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 906:
#line 2810 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 907:
#line 2812 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 908:
#line 2814 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~")); ;}
    break;

  case 909:
#line 2816 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~")); ;}
    break;

  case 910:
#line 2818 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~~")); ;}
    break;

  case 911:
#line 2820 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~~")); ;}
    break;

  case 912:
#line 2822 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~*")); ;}
    break;

  case 913:
#line 2824 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~*")); ;}
    break;

  case 914:
#line 2838 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 915:
#line 2840 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lcons(makeString((yyvsp[(1) - (3)].str)), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 916:
#line 2844 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 917:
#line 2848 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 918:
#line 2855 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 919:
#line 2859 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 920:
#line 2865 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(1) - (1)].node);
				;}
    break;

  case 921:
#line 2869 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[(1) - (3)].str);
					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) na;
				;}
    break;

  case 922:
#line 2878 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[(1) - (3)].str);
					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) na;
				;}
    break;

  case 923:
#line 2888 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].typnam)); ;}
    break;

  case 924:
#line 2889 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].typnam)); ;}
    break;

  case 925:
#line 2894 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(makeStringConst((yyvsp[(1) - (3)].str), (yylsp[(1) - (3)])), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 926:
#line 2897 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 927:
#line 2904 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 928:
#line 2905 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "year"; ;}
    break;

  case 929:
#line 2906 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "month"; ;}
    break;

  case 930:
#line 2907 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "day"; ;}
    break;

  case 931:
#line 2908 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "hour"; ;}
    break;

  case 932:
#line 2909 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "minute"; ;}
    break;

  case 933:
#line 2910 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "second"; ;}
    break;

  case 934:
#line 2911 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "millisecond"; ;}
    break;

  case 935:
#line 2912 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "microsecond"; ;}
    break;

  case 936:
#line 2913 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 937:
#line 2924 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make4((yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].node), (yyvsp[(3) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 938:
#line 2928 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 939:
#line 2935 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 940:
#line 2941 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(3) - (3)].node), (yyvsp[(1) - (3)].node)); ;}
    break;

  case 941:
#line 2942 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 942:
#line 2959 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 943:
#line 2963 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* not legal per SQL99, but might as well allow it */
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yyvsp[(2) - (3)].node));
				;}
    break;

  case 944:
#line 2968 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node));
				;}
    break;

  case 945:
#line 2972 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Since there are no cases where this syntax allows
					 * a textual FOR value, we forcibly cast the argument
					 * to int4.  The possible matches in pg_proc are
					 * substring(text,int4) and substring(text,text),
					 * and we don't want the parser to choose the latter,
					 * which it is likely to do if the second argument
					 * is unknown or doesn't have an implicit cast to int4.
					 */
					(yyval.list) = list_make3((yyvsp[(1) - (2)].node), makeIntConst(1, -1),
									makeTypeCast((yyvsp[(2) - (2)].node),
												 SystemTypeName("int4"), 0, -1));
				;}
    break;

  case 946:
#line 2987 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(1) - (1)].list);
				;}
    break;

  case 947:
#line 2991 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 948:
#line 2995 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 949:
#line 2998 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 950:
#line 3001 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(3) - (3)].list), (yyvsp[(1) - (3)].node)); ;}
    break;

  case 951:
#line 3002 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 952:
#line 3003 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 953:
#line 3007 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subselect = (yyvsp[(1) - (1)].node);
					/* other fields will be filled later */
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 954:
#line 3013 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *)(yyvsp[(2) - (3)].list); ;}
    break;

  case 955:
#line 3024 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCaseExpr *c = makeNode(PGCaseExpr);
					c->casetype = InvalidOid; /* not analyzed yet */
					c->arg = (PGExpr *) (yyvsp[(2) - (5)].node);
					c->args = (yyvsp[(3) - (5)].list);
					c->defresult = (PGExpr *) (yyvsp[(4) - (5)].node);
					c->location = (yylsp[(1) - (5)]);
					(yyval.node) = (PGNode *)c;
				;}
    break;

  case 956:
#line 3037 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 957:
#line 3038 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 958:
#line 3043 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCaseWhen *w = makeNode(PGCaseWhen);
					w->expr = (PGExpr *) (yyvsp[(2) - (4)].node);
					w->result = (PGExpr *) (yyvsp[(4) - (4)].node);
					w->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)w;
				;}
    break;

  case 959:
#line 3053 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 960:
#line 3054 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 961:
#line 3057 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 962:
#line 3058 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 963:
#line 3062 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeColumnRef((yyvsp[(1) - (1)].str), NIL, (yylsp[(1) - (1)]), yyscanner);
				;}
    break;

  case 964:
#line 3066 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeColumnRef((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].list), (yylsp[(1) - (2)]), yyscanner);
				;}
    break;

  case 965:
#line 3073 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeString((yyvsp[(2) - (2)].str));
				;}
    break;

  case 966:
#line 3077 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeNode(PGAStar);
				;}
    break;

  case 967:
#line 3081 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = false;
					ai->lidx = NULL;
					ai->uidx = (yyvsp[(2) - (3)].node);
					(yyval.node) = (PGNode *) ai;
				;}
    break;

  case 968:
#line 3089 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = true;
					ai->lidx = (yyvsp[(2) - (5)].node);
					ai->uidx = (yyvsp[(4) - (5)].node);
					(yyval.node) = (PGNode *) ai;
				;}
    break;

  case 969:
#line 3099 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 970:
#line 3100 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 971:
#line 3104 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 972:
#line 3105 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 973:
#line 3109 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 974:
#line 3110 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 977:
#line 3124 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 978:
#line 3125 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 979:
#line 3129 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 980:
#line 3130 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
    break;

  case 981:
#line 3134 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(3) - (3)].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (3)].node);
					(yyval.target)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 982:
#line 3150 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(2) - (2)].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (2)].node);
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 983:
#line 3158 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (1)].node);
					(yyval.target)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 984:
#line 3166 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnRef *n = makeNode(PGColumnRef);
					n->fields = list_make1(makeNode(PGAStar));
					n->location = (yylsp[(1) - (1)]);

					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)n;
					(yyval.target)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 985:
#line 3187 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].range)); ;}
    break;

  case 986:
#line 3188 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].range)); ;}
    break;

  case 987:
#line 3200 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = makeRangeVar(NULL, (yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 988:
#line 3204 "third_party/libpg_query/grammar/statements/select.y"
    {
					check_qualified_name((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.range) = makeRangeVar(NULL, NULL, (yylsp[(1) - (2)]));
					switch (list_length((yyvsp[(2) - (2)].list)))
					{
						case 1:
							(yyval.range)->catalogname = NULL;
							(yyval.range)->schemaname = (yyvsp[(1) - (2)].str);
							(yyval.range)->relname = strVal(linitial((yyvsp[(2) - (2)].list)));
							break;
						case 2:
							(yyval.range)->catalogname = (yyvsp[(1) - (2)].str);
							(yyval.range)->schemaname = strVal(linitial((yyvsp[(2) - (2)].list)));
							(yyval.range)->relname = strVal(lsecond((yyvsp[(2) - (2)].list)));
							break;
						default:
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("improper qualified name (too many dotted names): %s",
											NameListToString(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)))),
									 parser_errposition((yylsp[(1) - (2)]))));
							break;
					}
				;}
    break;

  case 989:
#line 3231 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 990:
#line 3233 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 991:
#line 3237 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 992:
#line 3239 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 993:
#line 3250 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 994:
#line 3253 "third_party/libpg_query/grammar/statements/select.y"
    {
						(yyval.list) = check_func_name(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)),
											 yyscanner);
					;}
    break;

  case 995:
#line 3264 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival), (yylsp[(1) - (1)]));
				;}
    break;

  case 996:
#line 3268 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 997:
#line 3272 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 998:
#line 3276 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 999:
#line 3280 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* This is a bit constant per SQL99:
					 * Without Feature F511, "BIT data type",
					 * a <general literal> shall not be a
					 * <bit string literal> or a <hex string literal>.
					 */
					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1000:
#line 3289 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* generic type 'literal' syntax */
					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (2)].list));
					t->location = (yylsp[(1) - (2)]);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), t);
				;}
    break;

  case 1001:
#line 3296 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* generic syntax with a type modifier */
					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (6)].list));
					PGListCell *lc;

					/*
					 * We must use func_arg_list and opt_sort_clause in the
					 * production to avoid reduce/reduce conflicts, but we
					 * don't actually wish to allow PGNamedArgExpr in this
					 * context, nor ORDER BY.
					 */
					foreach(lc, (yyvsp[(3) - (6)].list))
					{
						PGNamedArgExpr *arg = (PGNamedArgExpr *) lfirst(lc);

						if (IsA(arg, PGNamedArgExpr))
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have parameter name"),
									 parser_errposition(arg->location)));
					}
					if ((yyvsp[(4) - (6)].list) != NIL)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have ORDER BY"),
									 parser_errposition((yylsp[(4) - (6)]))));

					t->typmods = (yyvsp[(3) - (6)].list);
					t->location = (yylsp[(1) - (6)]);
					(yyval.node) = makeStringConstCast((yyvsp[(6) - (6)].str), (yylsp[(6) - (6)]), t);
				;}
    break;

  case 1002:
#line 3328 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), (yyvsp[(1) - (2)].typnam));
				;}
    break;

  case 1003:
#line 3332 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(3) - (5)].node), (yylsp[(3) - (5)]), (yyvsp[(5) - (5)].list));
				;}
    break;

  case 1004:
#line 3336 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(2) - (3)].ival), (yylsp[(2) - (3)]), (yyvsp[(3) - (3)].list));
				;}
    break;

  case 1005:
#line 3340 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), (yyvsp[(3) - (3)].list));
				;}
    break;

  case 1006:
#line 3344 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBoolAConst(true, (yylsp[(1) - (1)]));
				;}
    break;

  case 1007:
#line 3348 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBoolAConst(false, (yylsp[(1) - (1)]));
				;}
    break;

  case 1008:
#line 3352 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
				;}
    break;

  case 1009:
#line 3357 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 1010:
#line 3358 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1011:
#line 3374 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1012:
#line 3375 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1013:
#line 3376 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1014:
#line 3379 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1015:
#line 3380 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1016:
#line 3386 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1017:
#line 3387 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1018:
#line 3388 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1019:
#line 3391 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1020:
#line 3392 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1021:
#line 3393 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1022:
#line 3396 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1023:
#line 3397 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1024:
#line 3398 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1025:
#line 3401 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 1026:
#line 3402 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)); ;}
    break;

  case 1027:
#line 3406 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(2) - (2)].str))); ;}
    break;

  case 1028:
#line 3408 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 1029:
#line 3412 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 1030:
#line 3413 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1032:
#line 3424 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1033:
#line 3425 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1034:
#line 3426 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1035:
#line 3427 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1036:
#line 3430 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1037:
#line 3431 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1038:
#line 8 "third_party/libpg_query/grammar/statements/prepare.y"
    {
					PGPrepareStmt *n = makeNode(PGPrepareStmt);
					n->name = (yyvsp[(2) - (5)].str);
					n->argtypes = (yyvsp[(3) - (5)].list);
					n->query = (yyvsp[(5) - (5)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1039:
#line 18 "third_party/libpg_query/grammar/statements/prepare.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 1040:
#line 19 "third_party/libpg_query/grammar/statements/prepare.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1045:
#line 8 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					/* ...but not both */
					n->schemaname = (yyvsp[(3) - (4)].str);
					n->schemaElts = (yyvsp[(4) - (4)].list);
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1046:
#line 17 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					/* ...but not here */
					n->schemaname = (yyvsp[(6) - (7)].str);
					if ((yyvsp[(7) - (7)].list) != NIL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("CREATE SCHEMA IF NOT EXISTS cannot include schema elements"),
								 parser_errposition((yylsp[(7) - (7)]))));
					n->schemaElts = (yyvsp[(7) - (7)].list);
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1047:
#line 35 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					if ((yyloc) < 0)			/* see comments for YYLLOC_DEFAULT */
						(yyloc) = (yylsp[(2) - (2)]);
					(yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node));
				;}
    break;

  case 1048:
#line 41 "third_party/libpg_query/grammar/statements/create_schema.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1053:
#line 11 "third_party/libpg_query/grammar/statements/index.y"
    {
					PGIndexStmt *n = makeNode(PGIndexStmt);
					n->unique = (yyvsp[(2) - (13)].boolean);
					n->concurrent = (yyvsp[(4) - (13)].boolean);
					n->idxname = (yyvsp[(5) - (13)].str);
					n->relation = (yyvsp[(7) - (13)].range);
					n->accessMethod = (yyvsp[(8) - (13)].str);
					n->indexParams = (yyvsp[(10) - (13)].list);
					n->options = (yyvsp[(12) - (13)].list);
					n->whereClause = (yyvsp[(13) - (13)].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;
					n->transformed = false;
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1054:
#line 36 "third_party/libpg_query/grammar/statements/index.y"
    {
					PGIndexStmt *n = makeNode(PGIndexStmt);
					n->unique = (yyvsp[(2) - (16)].boolean);
					n->concurrent = (yyvsp[(4) - (16)].boolean);
					n->idxname = (yyvsp[(8) - (16)].str);
					n->relation = (yyvsp[(10) - (16)].range);
					n->accessMethod = (yyvsp[(11) - (16)].str);
					n->indexParams = (yyvsp[(13) - (16)].list);
					n->options = (yyvsp[(15) - (16)].list);
					n->whereClause = (yyvsp[(16) - (16)].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;
					n->transformed = false;
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1055:
#line 62 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1056:
#line 66 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
    break;

  case 1057:
#line 67 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (char*) DEFAULT_INDEX_TYPE; ;}
    break;

  case 1058:
#line 72 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1059:
#line 73 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1060:
#line 78 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1061:
#line 79 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = NULL; ;}
    break;

  case 1062:
#line 83 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1063:
#line 84 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1064:
#line 89 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1065:
#line 90 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1066:
#line 8 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1067:
#line 17 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1068:
#line 26 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1069:
#line 35 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1070:
#line 44 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1071:
#line 53 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1072:
#line 6 "third_party/libpg_query/grammar/statements/checkpoint.y"
    {
					PGCheckPointStmt *n = makeNode(PGCheckPointStmt);
					n->force = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1073:
#line 12 "third_party/libpg_query/grammar/statements/checkpoint.y"
    {
					PGCheckPointStmt *n = makeNode(PGCheckPointStmt);
					n->force = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1074:
#line 8 "third_party/libpg_query/grammar/statements/export.y"
    {
					PGExportStmt *n = makeNode(PGExportStmt);
					n->filename = (yyvsp[(3) - (4)].str);
					n->options = NIL;
					if ((yyvsp[(4) - (4)].list)) {
						n->options = list_concat(n->options, (yyvsp[(4) - (4)].list));
					}
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1075:
#line 21 "third_party/libpg_query/grammar/statements/export.y"
    {
					PGImportStmt *n = makeNode(PGImportStmt);
					n->filename = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1076:
#line 10 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(2) - (2)].node);
					n->options = NIL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1077:
#line 17 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(4) - (4)].node);
					n->options = list_make1(makeDefElem("analyze", NULL, (yylsp[(2) - (4)])));
					if ((yyvsp[(3) - (4)].boolean))
						n->options = lappend(n->options,
											 makeDefElem("verbose", NULL, (yylsp[(3) - (4)])));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1078:
#line 27 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(3) - (3)].node);
					n->options = list_make1(makeDefElem("verbose", NULL, (yylsp[(2) - (3)])));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1079:
#line 34 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(5) - (5)].node);
					n->options = (yyvsp[(3) - (5)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1080:
#line 44 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1081:
#line 45 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1082:
#line 50 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 1083:
#line 51 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].value); ;}
    break;

  case 1084:
#line 52 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1090:
#line 65 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1091:
#line 66 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1092:
#line 67 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1093:
#line 72 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1094:
#line 73 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1095:
#line 79 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 1096:
#line 83 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 1097:
#line 90 "third_party/libpg_query/grammar/statements/explain.y"
    {;}
    break;

  case 1098:
#line 91 "third_party/libpg_query/grammar/statements/explain.y"
    {;}
    break;

  case 1099:
#line 96 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "true"; ;}
    break;

  case 1100:
#line 97 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "false"; ;}
    break;

  case 1101:
#line 98 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "on"; ;}
    break;

  case 1102:
#line 104 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1103:
#line 110 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 1104:
#line 117 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1105:
#line 118 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "analyze"; ;}
    break;

  case 1106:
#line 11 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(2) - (2)].vsetstmt);
					n->is_local = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1107:
#line 17 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->is_local = true;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1108:
#line 23 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->is_local = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1109:
#line 32 "third_party/libpg_query/grammar/statements/variable_set.y"
    {(yyval.vsetstmt) = (yyvsp[(1) - (1)].vsetstmt);;}
    break;

  case 1110:
#line 34 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_CURRENT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1111:
#line 42 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (char*) "timezone";
					if ((yyvsp[(3) - (3)].node) != NULL)
						n->args = list_make1((yyvsp[(3) - (3)].node));
					else
						n->kind = VAR_SET_DEFAULT;
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1112:
#line 53 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (char*) "search_path";
					n->args = list_make1(makeStringConst((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)])));
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1113:
#line 65 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[(1) - (3)].str);
					n->args = (yyvsp[(3) - (3)].list);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1114:
#line 73 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[(1) - (3)].str);
					n->args = (yyvsp[(3) - (3)].list);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1115:
#line 81 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1116:
#line 88 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1117:
#line 98 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)])); ;}
    break;

  case 1118:
#line 100 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
    break;

  case 1119:
#line 106 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1120:
#line 110 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1121:
#line 114 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGTypeName *t = (yyvsp[(1) - (3)].typnam);
					if ((yyvsp[(3) - (3)].list) != NIL)
					{
						PGAConst *n = (PGAConst *) linitial((yyvsp[(3) - (3)].list));
						if ((n->val.val.ival & ~(INTERVAL_MASK(HOUR) | INTERVAL_MASK(MINUTE))) != 0)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("time zone interval must be HOUR or HOUR TO MINUTE"),
									 parser_errposition((yylsp[(3) - (3)]))));
					}
					t->typmods = (yyvsp[(3) - (3)].list);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), t);
				;}
    break;

  case 1122:
#line 129 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGTypeName *t = (yyvsp[(1) - (5)].typnam);
					t->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.node) = makeStringConstCast((yyvsp[(5) - (5)].str), (yylsp[(5) - (5)]), t);
				;}
    break;

  case 1123:
#line 135 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
    break;

  case 1124:
#line 136 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1125:
#line 137 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1126:
#line 141 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 1127:
#line 142 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 1128:
#line 8 "third_party/libpg_query/grammar/statements/load.y"
    {
					PGLoadStmt *n = makeNode(PGLoadStmt);
					n->filename = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1129:
#line 16 "third_party/libpg_query/grammar/statements/load.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1130:
#line 9 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (4)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (4)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (4)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1131:
#line 23 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (5)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (5)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (5)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = (yyvsp[(5) - (5)].range);
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1132:
#line 37 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = (PGVacuumStmt *) (yyvsp[(5) - (5)].node);
					n->options |= PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (5)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (5)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (5)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1133:
#line 49 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM | (yyvsp[(3) - (4)].ival);
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1134:
#line 57 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM | (yyvsp[(3) - (6)].ival);
					n->relation = (yyvsp[(5) - (6)].range);
					n->va_cols = (yyvsp[(6) - (6)].list);
					if (n->va_cols != NIL)	/* implies analyze */
						n->options |= PG_VACOPT_ANALYZE;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1135:
#line 70 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_ANALYZE; ;}
    break;

  case 1136:
#line 71 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_VERBOSE; ;}
    break;

  case 1137:
#line 72 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_FREEZE; ;}
    break;

  case 1138:
#line 73 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_FULL; ;}
    break;

  case 1139:
#line 75 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					if (strcmp((yyvsp[(1) - (1)].str), "disable_page_skipping") == 0)
						(yyval.ival) = PG_VACOPT_DISABLE_PAGE_SKIPPING;
					else
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
							 errmsg("unrecognized VACUUM option \"%s\"", (yyvsp[(1) - (1)].str)),
									 parser_errposition((yylsp[(1) - (1)]))));
				;}
    break;

  case 1140:
#line 87 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1141:
#line 88 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1142:
#line 93 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 1143:
#line 94 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
    break;

  case 1144:
#line 98 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1145:
#line 99 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1146:
#line 9 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGDeleteStmt *n = makeNode(PGDeleteStmt);
					n->relation = (yyvsp[(4) - (7)].range);
					n->usingClause = (yyvsp[(5) - (7)].list);
					n->whereClause = (yyvsp[(6) - (7)].node);
					n->returningList = (yyvsp[(7) - (7)].list);
					n->withClause = (yyvsp[(1) - (7)].with);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1147:
#line 22 "third_party/libpg_query/grammar/statements/delete.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
				;}
    break;

  case 1148:
#line 26 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGAlias *alias = makeNode(PGAlias);
					alias->aliasname = (yyvsp[(2) - (2)].str);
					(yyvsp[(1) - (2)].range)->alias = alias;
					(yyval.range) = (yyvsp[(1) - (2)].range);
				;}
    break;

  case 1149:
#line 33 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGAlias *alias = makeNode(PGAlias);
					alias->aliasname = (yyvsp[(3) - (3)].str);
					(yyvsp[(1) - (3)].range)->alias = alias;
					(yyval.range) = (yyvsp[(1) - (3)].range);
				;}
    break;

  case 1150:
#line 43 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 1151:
#line 44 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1152:
#line 50 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1153:
#line 51 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1154:
#line 10 "third_party/libpg_query/grammar/statements/analyze.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_ANALYZE;
					if ((yyvsp[(2) - (2)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1155:
#line 20 "third_party/libpg_query/grammar/statements/analyze.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_ANALYZE;
					if ((yyvsp[(2) - (4)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = (yyvsp[(3) - (4)].range);
					n->va_cols = (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1156:
#line 2 "third_party/libpg_query/grammar/statements/variable_reset.y"
    { (yyval.node) = (PGNode *) (yyvsp[(2) - (2)].vsetstmt); ;}
    break;

  case 1157:
#line 8 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (yyvsp[(1) - (1)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1158:
#line 15 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET_ALL;
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1159:
#line 24 "third_party/libpg_query/grammar/statements/variable_reset.y"
    { (yyval.vsetstmt) = (yyvsp[(1) - (1)].vsetstmt); ;}
    break;

  case 1160:
#line 26 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (char*) "timezone";
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1161:
#line 33 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (char*) "transaction_isolation";
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1162:
#line 3 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowSelectStmt *n = makeNode(PGVariableShowSelectStmt);
				n->stmt = (yyvsp[(2) - (2)].node);
				n->name = (char*) "select";
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1163:
#line 11 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1164:
#line 17 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (char*) "timezone";
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1165:
#line 23 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (char*) "transaction_isolation";
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1166:
#line 29 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (char*) "all";
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1169:
#line 39 "third_party/libpg_query/grammar/statements/variable_show.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1170:
#line 41 "third_party/libpg_query/grammar/statements/variable_show.y"
    { (yyval.str) = psprintf("%s.%s", (yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str)); ;}
    break;

  case 1171:
#line 7 "third_party/libpg_query/grammar/statements/call.y"
    {
					PGCallStmt *n = makeNode(PGCallStmt);
					n->func = (yyvsp[(2) - (2)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1172:
#line 10 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(4) - (9)].range);
					n->view->relpersistence = (yyvsp[(2) - (9)].ival);
					n->aliases = (yyvsp[(5) - (9)].list);
					n->query = (yyvsp[(8) - (9)].node);
					n->replace = false;
					n->options = (yyvsp[(6) - (9)].list);
					n->withCheckOption = (yyvsp[(9) - (9)].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1173:
#line 23 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(6) - (11)].range);
					n->view->relpersistence = (yyvsp[(4) - (11)].ival);
					n->aliases = (yyvsp[(7) - (11)].list);
					n->query = (yyvsp[(10) - (11)].node);
					n->replace = true;
					n->options = (yyvsp[(8) - (11)].list);
					n->withCheckOption = (yyvsp[(11) - (11)].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1174:
#line 36 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(5) - (12)].range);
					n->view->relpersistence = (yyvsp[(2) - (12)].ival);
					n->aliases = (yyvsp[(7) - (12)].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[(11) - (12)].node));
					n->replace = false;
					n->options = (yyvsp[(9) - (12)].list);
					n->withCheckOption = (yyvsp[(12) - (12)].viewcheckoption);
					if (n->withCheckOption != PG_NO_CHECK_OPTION)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[(12) - (12)]))));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1175:
#line 54 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(7) - (14)].range);
					n->view->relpersistence = (yyvsp[(4) - (14)].ival);
					n->aliases = (yyvsp[(9) - (14)].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[(13) - (14)].node));
					n->replace = true;
					n->options = (yyvsp[(11) - (14)].list);
					n->withCheckOption = (yyvsp[(14) - (14)].viewcheckoption);
					if (n->withCheckOption != PG_NO_CHECK_OPTION)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[(14) - (14)]))));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1176:
#line 74 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; ;}
    break;

  case 1177:
#line 75 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; ;}
    break;

  case 1178:
#line 76 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = PG_LOCAL_CHECK_OPTION; ;}
    break;

  case 1179:
#line 77 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = PG_NO_CHECK_OPTION; ;}
    break;

  case 1180:
#line 12 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(6) - (7)].node);
					ctas->into = (yyvsp[(4) - (7)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = false;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(4) - (7)].into)->rel->relpersistence = (yyvsp[(2) - (7)].ival);
					(yyvsp[(4) - (7)].into)->skipData = !((yyvsp[(7) - (7)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1181:
#line 25 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(9) - (10)].node);
					ctas->into = (yyvsp[(7) - (10)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = true;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(7) - (10)].into)->rel->relpersistence = (yyvsp[(2) - (10)].ival);
					(yyvsp[(7) - (10)].into)->skipData = !((yyvsp[(10) - (10)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1182:
#line 41 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1183:
#line 42 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1184:
#line 43 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1185:
#line 49 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					(yyval.into) = makeNode(PGIntoClause);
					(yyval.into)->rel = (yyvsp[(1) - (4)].range);
					(yyval.into)->colNames = (yyvsp[(2) - (4)].list);
					(yyval.into)->options = (yyvsp[(3) - (4)].list);
					(yyval.into)->onCommit = (yyvsp[(4) - (4)].oncommit);
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;		/* might get changed later */
				;}
    break;


/* Line 1267 of yacc.c.  */
#line 23261 "third_party/libpg_query/grammar/grammar_out.cpp"
      default: break;
    }
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;
  *++yylsp = yyloc;

  /* Now `shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*------------------------------------.
| yyerrlab -- here on detecting error |
`------------------------------------*/
yyerrlab:
  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (&yylloc, yyscanner, YY_("syntax error"));
#else
      {
	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
	  {
	    YYSIZE_T yyalloc = 2 * yysize;
	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
	    if (yymsg != yymsgbuf)
	      YYSTACK_FREE (yymsg);
	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
	    if (yymsg)
	      yymsg_alloc = yyalloc;
	    else
	      {
		yymsg = yymsgbuf;
		yymsg_alloc = sizeof yymsgbuf;
	      }
	  }

	if (0 < yysize && yysize <= yymsg_alloc)
	  {
	    (void) yysyntax_error (yymsg, yystate, yychar);
	    yyerror (&yylloc, yyscanner, yymsg);
	  }
	else
	  {
	    yyerror (&yylloc, yyscanner, YY_("syntax error"));
	    if (yysize != 0)
	      goto yyexhaustedlab;
	  }
      }
#endif
    }

  yyerror_range[0] = yylloc;

  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse look-ahead token after an
	 error, discard it.  */

      if (yychar <= YYEOF)
	{
	  /* Return failure if at end of input.  */
	  if (yychar == YYEOF)
	    YYABORT;
	}
      else
	{
	  yydestruct ("Error: discarding",
		      yytoken, &yylval, &yylloc, yyscanner);
	  yychar = YYEMPTY;
	}
    }

  /* Else will try to reuse look-ahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  yyerror_range[0] = yylsp[1-yylen];
  /* Do not reclaim the symbols of the rule which action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;	/* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (yyn != YYPACT_NINF)
	{
	  yyn += YYTERROR;
	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
	    {
	      yyn = yytable[yyn];
	      if (0 < yyn)
		break;
	    }
	}

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
	YYABORT;

      yyerror_range[0] = *yylsp;
      yydestruct ("Error: popping",
		  yystos[yystate], yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  *++yyvsp = yylval;

  yyerror_range[1] = yylloc;
  /* Using YYLLOC is tempting, but would change the location of
     the look-ahead.  YYLOC is available though.  */
  YYLLOC_DEFAULT (yyloc, (yyerror_range - 1), 2);
  *++yylsp = yyloc;

  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#ifndef yyoverflow
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (&yylloc, yyscanner, YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEOF && yychar != YYEMPTY)
     yydestruct ("Cleanup: discarding lookahead",
		 yytoken, &yylval, &yylloc, yyscanner);
  /* Do not reclaim the symbols of the rule which action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
		  yystos[*yyssp], yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  /* Make sure YYID is used.  */
  return YYID (yyresult);
}


#line 70 "third_party/libpg_query/grammar/statements/create_as.y"


#line 1 "third_party/libpg_query/grammar/grammar.cpp"
/*
 * The signature of this function is required by bison.  However, we
 * ignore the passed yylloc and instead use the last token position
 * available from the scanner.
 */
static void
base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner, const char *msg)
{
	parser_yyerror(msg);
}

static PGRawStmt *
makeRawStmt(PGNode *stmt, int stmt_location)
{
	PGRawStmt    *rs = makeNode(PGRawStmt);

	rs->stmt = stmt;
	rs->stmt_location = stmt_location;
	rs->stmt_len = 0;			/* might get changed later */
	return rs;
}

/* Adjust a PGRawStmt to reflect that it doesn't run to the end of the string */
static void
updateRawStmtEnd(PGRawStmt *rs, int end_location)
{
	/*
	 * If we already set the length, don't change it.  This is for situations
	 * like "select foo ;; select bar" where the same statement will be last
	 * in the string for more than one semicolon.
	 */
	if (rs->stmt_len > 0)
		return;

	/* OK, update length of PGRawStmt */
	rs->stmt_len = end_location - rs->stmt_location;
}

static PGNode *
makeColumnRef(char *colname, PGList *indirection,
			  int location, core_yyscan_t yyscanner)
{
	/*
	 * Generate a PGColumnRef node, with an PGAIndirection node added if there
	 * is any subscripting in the specified indirection list.  However,
	 * any field selection at the start of the indirection list must be
	 * transposed into the "fields" part of the PGColumnRef node.
	 */
	PGColumnRef  *c = makeNode(PGColumnRef);
	int		nfields = 0;
	PGListCell *l;

	c->location = location;
	foreach(l, indirection)
	{
		if (IsA(lfirst(l), PGAIndices))
		{
			PGAIndirection *i = makeNode(PGAIndirection);

			if (nfields == 0)
			{
				/* easy case - all indirection goes to PGAIndirection */
				c->fields = list_make1(makeString(colname));
				i->indirection = check_indirection(indirection, yyscanner);
			}
			else
			{
				/* got to split the list in two */
				i->indirection = check_indirection(list_copy_tail(indirection,
																  nfields),
												   yyscanner);
				indirection = list_truncate(indirection, nfields);
				c->fields = lcons(makeString(colname), indirection);
			}
			i->arg = (PGNode *) c;
			return (PGNode *) i;
		}
		else if (IsA(lfirst(l), PGAStar))
		{
			/* We only allow '*' at the end of a PGColumnRef */
			if (lnext(l) != NULL)
				parser_yyerror("improper use of \"*\"");
		}
		nfields++;
	}
	/* No subscripting, so all indirection gets added to field list */
	c->fields = lcons(makeString(colname), indirection);
	return (PGNode *) c;
}

static PGNode *
makeTypeCast(PGNode *arg, PGTypeName *tpname, int trycast, int location)
{
	PGTypeCast *n = makeNode(PGTypeCast);
	n->arg = arg;
	n->typeName = tpname;
	n->tryCast = trycast;
	n->location = location;
	return (PGNode *) n;
}

static PGNode *
makeStringConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGString;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeStringConstCast(char *str, int location, PGTypeName *tpname)
{
	PGNode *s = makeStringConst(str, location);

	return makeTypeCast(s, tpname, 0, -1);
}

static PGNode *
makeIntervalNode(char *str, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGString;
	n->sval = str;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;

}

static PGNode *
makeIntervalNode(int val, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGInteger;
	n->ival = val;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;
}

static PGNode *
makeIntervalNode(PGNode *arg, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGAExpr;
	n->eval = arg;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;
}

static PGNode *
makeSampleSize(PGValue *sample_size, bool is_percentage) {
	PGSampleSize *n = makeNode(PGSampleSize);

	n->sample_size = *sample_size;
	n->is_percentage = is_percentage;

	return (PGNode *)n;
}

static PGNode *
makeSampleOptions(PGNode *sample_size, char *method, int seed, int location) {
	PGSampleOptions *n = makeNode(PGSampleOptions);

	n->sample_size = sample_size;
	n->method = method;
	n->seed = seed;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeIntConst(int val, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGInteger;
	n->val.val.ival = val;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeFloatConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGFloat;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeBitStringConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGBitString;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeNullAConst(int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGNull;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeAConst(PGValue *v, int location)
{
	PGNode *n;

	switch (v->type)
	{
		case T_PGFloat:
			n = makeFloatConst(v->val.str, location);
			break;

		case T_PGInteger:
			n = makeIntConst(v->val.ival, location);
			break;

		case T_PGString:
		default:
			n = makeStringConst(v->val.str, location);
			break;
	}

	return n;
}

/* makeBoolAConst()
 * Create an PGAConst string node and put it inside a boolean cast.
 */
static PGNode *
makeBoolAConst(bool state, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGString;
	n->val.val.str = (state ? (char*) "t" : (char*) "f");
	n->location = location;

	return makeTypeCast((PGNode *)n, SystemTypeName("bool"), 0, -1);
}

/* check_qualified_name --- check the result of qualified_name production
 *
 * It's easiest to let the grammar production for qualified_name allow
 * subscripts and '*', which we then must reject here.
 */
static void
check_qualified_name(PGList *names, core_yyscan_t yyscanner)
{
	PGListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), PGString))
			parser_yyerror("syntax error");
	}
}

/* check_func_name --- check the result of func_name production
 *
 * It's easiest to let the grammar production for func_name allow subscripts
 * and '*', which we then must reject here.
 */
static PGList *
check_func_name(PGList *names, core_yyscan_t yyscanner)
{
	PGListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), PGString))
			parser_yyerror("syntax error");
	}
	return names;
}

/* check_indirection --- check the result of indirection production
 *
 * We only allow '*' at the end of the list, but it's hard to enforce that
 * in the grammar, so do it here.
 */
static PGList *
check_indirection(PGList *indirection, core_yyscan_t yyscanner)
{
	PGListCell *l;

	foreach(l, indirection)
	{
		if (IsA(lfirst(l), PGAStar))
		{
			if (lnext(l) != NULL)
				parser_yyerror("improper use of \"*\"");
		}
	}
	return indirection;
}

/* makeParamRef
 * Creates a new PGParamRef node
 */
static PGNode* makeParamRef(int number, int location)
{
	PGParamRef *p = makeNode(PGParamRef);
	p->number = number;
	p->location = location;
	return (PGNode *) p;
}

static PGNode *
makeParamRefCast(int number, int location, PGTypeName *tpname)
{
	PGNode *p = makeParamRef(number, location);
	return makeTypeCast(p, tpname, 0, -1);
}

/* insertSelectOptions()
 * Insert ORDER BY, etc into an already-constructed SelectStmt.
 *
 * This routine is just to avoid duplicating code in PGSelectStmt productions.
 */
static void
insertSelectOptions(PGSelectStmt *stmt,
					PGList *sortClause, PGList *lockingClause,
					PGNode *limitOffset, PGNode *limitCount,
					PGWithClause *withClause,
					core_yyscan_t yyscanner)
{
	Assert(IsA(stmt, PGSelectStmt));

	/*
	 * Tests here are to reject constructs like
	 *	(SELECT foo ORDER BY bar) ORDER BY baz
	 */
	if (sortClause)
	{
		if (stmt->sortClause)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple ORDER BY clauses not allowed"),
					 parser_errposition(exprLocation((PGNode *) sortClause))));
		stmt->sortClause = sortClause;
	}
	/* We can handle multiple locking clauses, though */
	stmt->lockingClause = list_concat(stmt->lockingClause, lockingClause);
	if (limitOffset)
	{
		if (stmt->limitOffset)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple OFFSET clauses not allowed"),
					 parser_errposition(exprLocation(limitOffset))));
		stmt->limitOffset = limitOffset;
	}
	if (limitCount)
	{
		if (stmt->limitCount)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple LIMIT clauses not allowed"),
					 parser_errposition(exprLocation(limitCount))));
		stmt->limitCount = limitCount;
	}
	if (withClause)
	{
		if (stmt->withClause)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple WITH clauses not allowed"),
					 parser_errposition(exprLocation((PGNode *) withClause))));
		stmt->withClause = withClause;
	}
}

static PGNode *
makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg)
{
	PGSelectStmt *n = makeNode(PGSelectStmt);

	n->op = op;
	n->all = all;
	n->larg = (PGSelectStmt *) larg;
	n->rarg = (PGSelectStmt *) rarg;
	return (PGNode *) n;
}

/* SystemFuncName()
 * Build a properly-qualified reference to a built-in function.
 */
PGList *
SystemFuncName(const char *name)
{
	return list_make2(makeString(DEFAULT_SCHEMA), makeString(name));
}

/* SystemTypeName()
 * Build a properly-qualified reference to a built-in type.
 *
 * typmod is defaulted, but may be changed afterwards by caller.
 * Likewise for the location.
 */
PGTypeName *
SystemTypeName(const char *name)
{
	return makeTypeNameFromNameList(list_make2(makeString(DEFAULT_SCHEMA),
											   makeString(name)));
}

/* doNegate()
 * Handle negation of a numeric constant.
 *
 * Formerly, we did this here because the optimizer couldn't cope with
 * indexquals that looked like "var = -4" --- it wants "var = const"
 * and a unary minus operator applied to a constant didn't qualify.
 * As of Postgres 7.0, that problem doesn't exist anymore because there
 * is a constant-subexpression simplifier in the optimizer.  However,
 * there's still a good reason for doing this here, which is that we can
 * postpone committing to a particular internal representation for simple
 * negative constants.	It's better to leave "-123.456" in string form
 * until we know what the desired type is.
 */
static PGNode *
doNegate(PGNode *n, int location)
{
	if (IsA(n, PGAConst))
	{
		PGAConst *con = (PGAConst *)n;

		/* report the constant's location as that of the '-' sign */
		con->location = location;

		if (con->val.type == T_PGInteger)
		{
			con->val.val.ival = -con->val.val.ival;
			return n;
		}
		if (con->val.type == T_PGFloat)
		{
			doNegateFloat(&con->val);
			return n;
		}
	}

	return (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", NULL, n, location);
}

static void
doNegateFloat(PGValue *v)
{
	char   *oldval = v->val.str;

	Assert(IsA(v, PGFloat));
	if (*oldval == '+')
		oldval++;
	if (*oldval == '-')
		v->val.str = oldval+1;	/* just strip the '-' */
	else
		v->val.str = psprintf("-%s", oldval);
}

static PGNode *
makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location)
{
	PGNode	   *lexp = lexpr;

	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
	while (IsA(lexp, PGAExpr) &&
		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
		lexp = ((PGAExpr *) lexp)->lexpr;
	/* Flatten "a AND b AND c ..." to a single PGBoolExpr on sight */
	if (IsA(lexp, PGBoolExpr))
	{
		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;

		if (blexpr->boolop == PG_AND_EXPR)
		{
			blexpr->args = lappend(blexpr->args, rexpr);
			return (PGNode *) blexpr;
		}
	}
	return (PGNode *) makeBoolExpr(PG_AND_EXPR, list_make2(lexpr, rexpr), location);
}

static PGNode *
makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location)
{
	PGNode	   *lexp = lexpr;

	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
	while (IsA(lexp, PGAExpr) &&
		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
		lexp = ((PGAExpr *) lexp)->lexpr;
	/* Flatten "a OR b OR c ..." to a single PGBoolExpr on sight */
	if (IsA(lexp, PGBoolExpr))
	{
		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;

		if (blexpr->boolop == PG_OR_EXPR)
		{
			blexpr->args = lappend(blexpr->args, rexpr);
			return (PGNode *) blexpr;
		}
	}
	return (PGNode *) makeBoolExpr(PG_OR_EXPR, list_make2(lexpr, rexpr), location);
}

static PGNode *
makeNotExpr(PGNode *expr, int location)
{
	return (PGNode *) makeBoolExpr(PG_NOT_EXPR, list_make1(expr), location);
}

static PGNode *
makeSQLValueFunction(PGSQLValueFunctionOp op, int32_t typmod, int location)
{
	PGSQLValueFunction *svf = makeNode(PGSQLValueFunction);

	svf->op = op;
	/* svf->type will be filled during parse analysis */
	svf->typmod = typmod;
	svf->location = location;
	return (PGNode *) svf;
}

/* Separate PGConstraint nodes from COLLATE clauses in a */
static void
SplitColQualList(PGList *qualList,
				 PGList **constraintList, PGCollateClause **collClause,
				 core_yyscan_t yyscanner)
{
	PGListCell   *cell;
	PGListCell   *prev;
	PGListCell   *next;

	*collClause = NULL;
	prev = NULL;
	for (cell = list_head(qualList); cell; cell = next)
	{
		PGNode   *n = (PGNode *) lfirst(cell);

		next = lnext(cell);
		if (IsA(n, PGConstraint))
		{
			/* keep it in list */
			prev = cell;
			continue;
		}
		if (IsA(n, PGCollateClause))
		{
			PGCollateClause *c = (PGCollateClause *) n;

			if (*collClause)
				ereport(ERROR,
						(errcode(PG_ERRCODE_SYNTAX_ERROR),
						 errmsg("multiple COLLATE clauses not allowed"),
						 parser_errposition(c->location)));
			*collClause = c;
		}
		else
			elog(ERROR, "unexpected node type %d", (int) n->type);
		/* remove non-Constraint nodes from qualList */
		qualList = list_delete_cell(qualList, cell, prev);
	}
	*constraintList = qualList;
}

/*
 * Process result of ConstraintAttributeSpec, and set appropriate bool flags
 * in the output command node.  Pass NULL for any flags the particular
 * command doesn't support.
 */
static void
processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner)
{
	/* defaults */
	if (deferrable)
		*deferrable = false;
	if (initdeferred)
		*initdeferred = false;
	if (not_valid)
		*not_valid = false;

	if (cas_bits & (CAS_DEFERRABLE | CAS_INITIALLY_DEFERRED))
	{
		if (deferrable)
			*deferrable = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_INITIALLY_DEFERRED)
	{
		if (initdeferred)
			*initdeferred = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_NOT_VALID)
	{
		if (not_valid)
			*not_valid = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NOT VALID",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_NO_INHERIT)
	{
		if (no_inherit)
			*no_inherit = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NO INHERIT",
							constrType),
					 parser_errposition(location)));
	}
}

/*----------
 * Recursive view transformation
 *
 * Convert
 *
 *     CREATE RECURSIVE VIEW relname (aliases) AS query
 *
 * to
 *
 *     CREATE VIEW relname (aliases) AS
 *         WITH RECURSIVE relname (aliases) AS (query)
 *         SELECT aliases FROM relname
 *
 * Actually, just the WITH ... part, which is then inserted into the original
 * view as the query.
 * ----------
 */
static PGNode *
makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query)
{
	PGSelectStmt *s = makeNode(PGSelectStmt);
	PGWithClause *w = makeNode(PGWithClause);
	PGCommonTableExpr *cte = makeNode(PGCommonTableExpr);
	PGList	   *tl = NIL;
	PGListCell   *lc;

	/* create common table expression */
	cte->ctename = relname;
	cte->aliascolnames = aliases;
	cte->ctequery = query;
	cte->location = -1;

	/* create WITH clause and attach CTE */
	w->recursive = true;
	w->ctes = list_make1(cte);
	w->location = -1;

	/* create target list for the new SELECT from the alias list of the
	 * recursive view specification */
	foreach (lc, aliases)
	{
		PGResTarget *rt = makeNode(PGResTarget);

		rt->name = NULL;
		rt->indirection = NIL;
		rt->val = makeColumnRef(strVal(lfirst(lc)), NIL, -1, 0);
		rt->location = -1;

		tl = lappend(tl, rt);
	}

	/* create new SELECT combining WITH clause, target list, and fake FROM
	 * clause */
	s->withClause = w;
	s->targetList = tl;
	s->fromClause = list_make1(makeRangeVar(NULL, relname, -1));

	return (PGNode *) s;
}

/* parser_init()
 * Initialize to parse one query string
 */
void
parser_init(base_yy_extra_type *yyext)
{
	yyext->parsetree = NIL;		/* in case grammar forgets to set it */
}

#undef yyparse
#undef yylex
#undef yyerror
#undef yylval
#undef yychar
#undef yydebug
#undef yynerrs
#undef yylloc

} // namespace duckdb_libpgquery
