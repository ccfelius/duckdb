/* A Bison parser, made by GNU Bison 2.3.  */

/* Skeleton implementation for Bison's Yacc-like parsers in C

   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
   Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street, Fifth Floor,
   Boston, MA 02110-1301, USA.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "2.3"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Using locations.  */
#define YYLSP_NEEDED 1

/* Substitute the variable and function names.  */
#define yyparse base_yyparse
#define yylex   base_yylex
#define yyerror base_yyerror
#define yylval  base_yylval
#define yychar  base_yychar
#define yydebug base_yydebug
#define yynerrs base_yynerrs
#define yylloc base_yylloc

/* Tokens.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
   /* Put the tokens into the symbol table, so that GDB and other debuggers
      know about them.  */
   enum yytokentype {
     IDENT = 258,
     FCONST = 259,
     SCONST = 260,
     BCONST = 261,
     XCONST = 262,
     Op = 263,
     ICONST = 264,
     PARAM = 265,
     TYPECAST = 266,
     DOT_DOT = 267,
     COLON_EQUALS = 268,
     EQUALS_GREATER = 269,
     LAMBDA_ARROW = 270,
     LESS_EQUALS = 271,
     GREATER_EQUALS = 272,
     NOT_EQUALS = 273,
     ABORT_P = 274,
     ABSOLUTE_P = 275,
     ACCESS = 276,
     ACTION = 277,
     ADD_P = 278,
     ADMIN = 279,
     AFTER = 280,
     AGGREGATE = 281,
     ALL = 282,
     ALSO = 283,
     ALTER = 284,
     ALWAYS = 285,
     ANALYSE = 286,
     ANALYZE = 287,
     AND = 288,
     ANY = 289,
     ARRAY = 290,
     AS = 291,
     ASC_P = 292,
     ASSERTION = 293,
     ASSIGNMENT = 294,
     ASYMMETRIC = 295,
     AT = 296,
     ATTACH = 297,
     ATTRIBUTE = 298,
     AUTHORIZATION = 299,
     BACKWARD = 300,
     BEFORE = 301,
     BEGIN_P = 302,
     BETWEEN = 303,
     BIGINT = 304,
     BINARY = 305,
     BIT = 306,
     BOOLEAN_P = 307,
     BOTH = 308,
     BY = 309,
     CACHE = 310,
     CALL_P = 311,
     CALLED = 312,
     CASCADE = 313,
     CASCADED = 314,
     CASE = 315,
     CAST = 316,
     CATALOG_P = 317,
     CHAIN = 318,
     CHAR_P = 319,
     CHARACTER = 320,
     CHARACTERISTICS = 321,
     CHECK_P = 322,
     CHECKPOINT = 323,
     CLASS = 324,
     CLOSE = 325,
     CLUSTER = 326,
     COALESCE = 327,
     COLLATE = 328,
     COLLATION = 329,
     COLUMN = 330,
     COLUMNS = 331,
     COMMENT = 332,
     COMMENTS = 333,
     COMMIT = 334,
     COMMITTED = 335,
     CONCURRENTLY = 336,
     CONFIGURATION = 337,
     CONFLICT = 338,
     CONNECTION = 339,
     CONSTRAINT = 340,
     CONSTRAINTS = 341,
     CONTENT_P = 342,
     CONTINUE_P = 343,
     CONVERSION_P = 344,
     COPY = 345,
     COST = 346,
     CREATE_P = 347,
     CROSS = 348,
     CSV = 349,
     CUBE = 350,
     CURRENT_P = 351,
     CURRENT_CATALOG = 352,
     CURRENT_DATE = 353,
     CURRENT_ROLE = 354,
     CURRENT_SCHEMA = 355,
     CURRENT_TIME = 356,
     CURRENT_TIMESTAMP = 357,
     CURRENT_USER = 358,
     CURSOR = 359,
     CYCLE = 360,
     DATA_P = 361,
     DATABASE = 362,
     DAY_P = 363,
     DAYS_P = 364,
     DEALLOCATE = 365,
     DEC = 366,
     DECIMAL_P = 367,
     DECLARE = 368,
     DEFAULT = 369,
     DEFAULTS = 370,
     DEFERRABLE = 371,
     DEFERRED = 372,
     DEFINER = 373,
     DELETE_P = 374,
     DELIMITER = 375,
     DELIMITERS = 376,
     DEPENDS = 377,
     DESC_P = 378,
     DESCRIBE = 379,
     DETACH = 380,
     DICTIONARY = 381,
     DISABLE_P = 382,
     DISCARD = 383,
     DISTINCT = 384,
     DO = 385,
     DOCUMENT_P = 386,
     DOMAIN_P = 387,
     DOUBLE_P = 388,
     DROP = 389,
     EACH = 390,
     ELSE = 391,
     ENABLE_P = 392,
     ENCODING = 393,
     ENCRYPTED = 394,
     END_P = 395,
     ENUM_P = 396,
     ESCAPE = 397,
     EVENT = 398,
     EXCEPT = 399,
     EXCLUDE = 400,
     EXCLUDING = 401,
     EXCLUSIVE = 402,
     EXECUTE = 403,
     EXISTS = 404,
     EXPLAIN = 405,
     EXPORT_P = 406,
     EXTENSION = 407,
     EXTERNAL = 408,
     EXTRACT = 409,
     FALSE_P = 410,
     FAMILY = 411,
     FETCH = 412,
     FILTER = 413,
     FIRST_P = 414,
     FLOAT_P = 415,
     FOLLOWING = 416,
     FOR = 417,
     FORCE = 418,
     FOREIGN = 419,
     FORWARD = 420,
     FREEZE = 421,
     FROM = 422,
     FULL = 423,
     FUNCTION = 424,
     FUNCTIONS = 425,
     GENERATED = 426,
     GLOB = 427,
     GLOBAL = 428,
     GRANT = 429,
     GRANTED = 430,
     GROUP_P = 431,
     GROUPING = 432,
     HANDLER = 433,
     HAVING = 434,
     HEADER_P = 435,
     HOLD = 436,
     HOUR_P = 437,
     HOURS_P = 438,
     IDENTITY_P = 439,
     IF_P = 440,
     ILIKE = 441,
     IMMEDIATE = 442,
     IMMUTABLE = 443,
     IMPLICIT_P = 444,
     IMPORT_P = 445,
     IN_P = 446,
     INCLUDING = 447,
     INCREMENT = 448,
     INDEX = 449,
     INDEXES = 450,
     INHERIT = 451,
     INHERITS = 452,
     INITIALLY = 453,
     INLINE_P = 454,
     INNER_P = 455,
     INOUT = 456,
     INPUT_P = 457,
     INSENSITIVE = 458,
     INSERT = 459,
     INSTEAD = 460,
     INT_P = 461,
     INTEGER = 462,
     INTERSECT = 463,
     INTERVAL = 464,
     INTO = 465,
     INVOKER = 466,
     IS = 467,
     ISNULL = 468,
     ISOLATION = 469,
     JOIN = 470,
     KEY = 471,
     LABEL = 472,
     LANGUAGE = 473,
     LARGE_P = 474,
     LAST_P = 475,
     LATERAL_P = 476,
     LEADING = 477,
     LEAKPROOF = 478,
     LEFT = 479,
     LEVEL = 480,
     LIKE = 481,
     LIMIT = 482,
     LISTEN = 483,
     LOAD = 484,
     LOCAL = 485,
     LOCALTIME = 486,
     LOCALTIMESTAMP = 487,
     LOCATION = 488,
     LOCK_P = 489,
     LOCKED = 490,
     LOGGED = 491,
     MACRO = 492,
     MAPPING = 493,
     MATCH = 494,
     MATERIALIZED = 495,
     MAXVALUE = 496,
     METHOD = 497,
     MICROSECOND_P = 498,
     MICROSECONDS_P = 499,
     MILLISECOND_P = 500,
     MILLISECONDS_P = 501,
     MINUTE_P = 502,
     MINUTES_P = 503,
     MINVALUE = 504,
     MODE = 505,
     MONTH_P = 506,
     MONTHS_P = 507,
     MOVE = 508,
     NAME_P = 509,
     NAMES = 510,
     NATIONAL = 511,
     NATURAL = 512,
     NCHAR = 513,
     NEW = 514,
     NEXT = 515,
     NO = 516,
     NONE = 517,
     NOT = 518,
     NOTHING = 519,
     NOTIFY = 520,
     NOTNULL = 521,
     NOWAIT = 522,
     NULL_P = 523,
     NULLIF = 524,
     NULLS_P = 525,
     NUMERIC = 526,
     OBJECT_P = 527,
     OF = 528,
     OFF = 529,
     OFFSET = 530,
     OIDS = 531,
     OLD = 532,
     ON = 533,
     ONLY = 534,
     OPERATOR = 535,
     OPTION = 536,
     OPTIONS = 537,
     OR = 538,
     ORDER = 539,
     ORDINALITY = 540,
     OUT_P = 541,
     OUTER_P = 542,
     OVER = 543,
     OVERLAPS = 544,
     OVERLAY = 545,
     OVERRIDING = 546,
     OWNED = 547,
     OWNER = 548,
     PARALLEL = 549,
     PARSER = 550,
     PARTIAL = 551,
     PARTITION = 552,
     PASSING = 553,
     PASSWORD = 554,
     PERCENT = 555,
     PLACING = 556,
     PLANS = 557,
     POLICY = 558,
     POSITION = 559,
     PRAGMA_P = 560,
     PRECEDING = 561,
     PRECISION = 562,
     PREPARE = 563,
     PREPARED = 564,
     PRESERVE = 565,
     PRIMARY = 566,
     PRIOR = 567,
     PRIVILEGES = 568,
     PROCEDURAL = 569,
     PROCEDURE = 570,
     PROGRAM = 571,
     PUBLICATION = 572,
     QUOTE = 573,
     RANGE = 574,
     READ_P = 575,
     REAL = 576,
     REASSIGN = 577,
     RECHECK = 578,
     RECURSIVE = 579,
     REF = 580,
     REFERENCES = 581,
     REFERENCING = 582,
     REFRESH = 583,
     REINDEX = 584,
     RELATIVE_P = 585,
     RELEASE = 586,
     RENAME = 587,
     REPEATABLE = 588,
     REPLACE = 589,
     REPLICA = 590,
     RESET = 591,
     RESTART = 592,
     RESTRICT = 593,
     RETURNING = 594,
     RETURNS = 595,
     REVOKE = 596,
     RIGHT = 597,
     ROLE = 598,
     ROLLBACK = 599,
     ROLLUP = 600,
     ROW = 601,
     ROWS = 602,
     RULE = 603,
     SAMPLE = 604,
     SAVEPOINT = 605,
     SCHEMA = 606,
     SCHEMAS = 607,
     SCROLL = 608,
     SEARCH = 609,
     SECOND_P = 610,
     SECONDS_P = 611,
     SECURITY = 612,
     SELECT = 613,
     SEQUENCE = 614,
     SEQUENCES = 615,
     SERIALIZABLE = 616,
     SERVER = 617,
     SESSION = 618,
     SESSION_USER = 619,
     SET = 620,
     SETOF = 621,
     SETS = 622,
     SHARE = 623,
     SHOW = 624,
     SIMILAR = 625,
     SIMPLE = 626,
     SKIP = 627,
     SMALLINT = 628,
     SNAPSHOT = 629,
     SOME = 630,
     SQL_P = 631,
     STABLE = 632,
     STANDALONE_P = 633,
     START = 634,
     STATEMENT = 635,
     STATISTICS = 636,
     STDIN = 637,
     STDOUT = 638,
     STORAGE = 639,
     STRICT_P = 640,
     STRIP_P = 641,
     SUBSCRIPTION = 642,
     SUBSTRING = 643,
     SYMMETRIC = 644,
     SYSID = 645,
     SYSTEM_P = 646,
     TABLE = 647,
     TABLES = 648,
     TABLESAMPLE = 649,
     TABLESPACE = 650,
     TEMP = 651,
     TEMPLATE = 652,
     TEMPORARY = 653,
     TEXT_P = 654,
     THEN = 655,
     TIME = 656,
     TIMESTAMP = 657,
     TO = 658,
     TRAILING = 659,
     TRANSACTION = 660,
     TRANSFORM = 661,
     TREAT = 662,
     TRIGGER = 663,
     TRIM = 664,
     TRUE_P = 665,
     TRUNCATE = 666,
     TRUSTED = 667,
     TYPE_P = 668,
     TYPES_P = 669,
     UNBOUNDED = 670,
     UNCOMMITTED = 671,
     UNENCRYPTED = 672,
     UNION = 673,
     UNIQUE = 674,
     UNKNOWN = 675,
     UNLISTEN = 676,
     UNLOGGED = 677,
     UNTIL = 678,
     UPDATE = 679,
     USER = 680,
     USING = 681,
     VACUUM = 682,
     VALID = 683,
     VALIDATE = 684,
     VALIDATOR = 685,
     VALUE_P = 686,
     VALUES = 687,
     VARCHAR = 688,
     VARIADIC = 689,
     VARYING = 690,
     VERBOSE = 691,
     VERSION_P = 692,
     VIEW = 693,
     VIEWS = 694,
     VOLATILE = 695,
     WHEN = 696,
     WHERE = 697,
     WHITESPACE_P = 698,
     WINDOW = 699,
     WITH = 700,
     WITHIN = 701,
     WITHOUT = 702,
     WORK = 703,
     WRAPPER = 704,
     WRITE_P = 705,
     XML_P = 706,
     XMLATTRIBUTES = 707,
     XMLCONCAT = 708,
     XMLELEMENT = 709,
     XMLEXISTS = 710,
     XMLFOREST = 711,
     XMLNAMESPACES = 712,
     XMLPARSE = 713,
     XMLPI = 714,
     XMLROOT = 715,
     XMLSERIALIZE = 716,
     XMLTABLE = 717,
     YEAR_P = 718,
     YEARS_P = 719,
     YES_P = 720,
     ZONE = 721,
     NOT_LA = 722,
     NULLS_LA = 723,
     WITH_LA = 724,
     POSTFIXOP = 725,
     UMINUS = 726
   };
#endif
/* Tokens.  */
#define IDENT 258
#define FCONST 259
#define SCONST 260
#define BCONST 261
#define XCONST 262
#define Op 263
#define ICONST 264
#define PARAM 265
#define TYPECAST 266
#define DOT_DOT 267
#define COLON_EQUALS 268
#define EQUALS_GREATER 269
#define LAMBDA_ARROW 270
#define LESS_EQUALS 271
#define GREATER_EQUALS 272
#define NOT_EQUALS 273
#define ABORT_P 274
#define ABSOLUTE_P 275
#define ACCESS 276
#define ACTION 277
#define ADD_P 278
#define ADMIN 279
#define AFTER 280
#define AGGREGATE 281
#define ALL 282
#define ALSO 283
#define ALTER 284
#define ALWAYS 285
#define ANALYSE 286
#define ANALYZE 287
#define AND 288
#define ANY 289
#define ARRAY 290
#define AS 291
#define ASC_P 292
#define ASSERTION 293
#define ASSIGNMENT 294
#define ASYMMETRIC 295
#define AT 296
#define ATTACH 297
#define ATTRIBUTE 298
#define AUTHORIZATION 299
#define BACKWARD 300
#define BEFORE 301
#define BEGIN_P 302
#define BETWEEN 303
#define BIGINT 304
#define BINARY 305
#define BIT 306
#define BOOLEAN_P 307
#define BOTH 308
#define BY 309
#define CACHE 310
#define CALL_P 311
#define CALLED 312
#define CASCADE 313
#define CASCADED 314
#define CASE 315
#define CAST 316
#define CATALOG_P 317
#define CHAIN 318
#define CHAR_P 319
#define CHARACTER 320
#define CHARACTERISTICS 321
#define CHECK_P 322
#define CHECKPOINT 323
#define CLASS 324
#define CLOSE 325
#define CLUSTER 326
#define COALESCE 327
#define COLLATE 328
#define COLLATION 329
#define COLUMN 330
#define COLUMNS 331
#define COMMENT 332
#define COMMENTS 333
#define COMMIT 334
#define COMMITTED 335
#define CONCURRENTLY 336
#define CONFIGURATION 337
#define CONFLICT 338
#define CONNECTION 339
#define CONSTRAINT 340
#define CONSTRAINTS 341
#define CONTENT_P 342
#define CONTINUE_P 343
#define CONVERSION_P 344
#define COPY 345
#define COST 346
#define CREATE_P 347
#define CROSS 348
#define CSV 349
#define CUBE 350
#define CURRENT_P 351
#define CURRENT_CATALOG 352
#define CURRENT_DATE 353
#define CURRENT_ROLE 354
#define CURRENT_SCHEMA 355
#define CURRENT_TIME 356
#define CURRENT_TIMESTAMP 357
#define CURRENT_USER 358
#define CURSOR 359
#define CYCLE 360
#define DATA_P 361
#define DATABASE 362
#define DAY_P 363
#define DAYS_P 364
#define DEALLOCATE 365
#define DEC 366
#define DECIMAL_P 367
#define DECLARE 368
#define DEFAULT 369
#define DEFAULTS 370
#define DEFERRABLE 371
#define DEFERRED 372
#define DEFINER 373
#define DELETE_P 374
#define DELIMITER 375
#define DELIMITERS 376
#define DEPENDS 377
#define DESC_P 378
#define DESCRIBE 379
#define DETACH 380
#define DICTIONARY 381
#define DISABLE_P 382
#define DISCARD 383
#define DISTINCT 384
#define DO 385
#define DOCUMENT_P 386
#define DOMAIN_P 387
#define DOUBLE_P 388
#define DROP 389
#define EACH 390
#define ELSE 391
#define ENABLE_P 392
#define ENCODING 393
#define ENCRYPTED 394
#define END_P 395
#define ENUM_P 396
#define ESCAPE 397
#define EVENT 398
#define EXCEPT 399
#define EXCLUDE 400
#define EXCLUDING 401
#define EXCLUSIVE 402
#define EXECUTE 403
#define EXISTS 404
#define EXPLAIN 405
#define EXPORT_P 406
#define EXTENSION 407
#define EXTERNAL 408
#define EXTRACT 409
#define FALSE_P 410
#define FAMILY 411
#define FETCH 412
#define FILTER 413
#define FIRST_P 414
#define FLOAT_P 415
#define FOLLOWING 416
#define FOR 417
#define FORCE 418
#define FOREIGN 419
#define FORWARD 420
#define FREEZE 421
#define FROM 422
#define FULL 423
#define FUNCTION 424
#define FUNCTIONS 425
#define GENERATED 426
#define GLOB 427
#define GLOBAL 428
#define GRANT 429
#define GRANTED 430
#define GROUP_P 431
#define GROUPING 432
#define HANDLER 433
#define HAVING 434
#define HEADER_P 435
#define HOLD 436
#define HOUR_P 437
#define HOURS_P 438
#define IDENTITY_P 439
#define IF_P 440
#define ILIKE 441
#define IMMEDIATE 442
#define IMMUTABLE 443
#define IMPLICIT_P 444
#define IMPORT_P 445
#define IN_P 446
#define INCLUDING 447
#define INCREMENT 448
#define INDEX 449
#define INDEXES 450
#define INHERIT 451
#define INHERITS 452
#define INITIALLY 453
#define INLINE_P 454
#define INNER_P 455
#define INOUT 456
#define INPUT_P 457
#define INSENSITIVE 458
#define INSERT 459
#define INSTEAD 460
#define INT_P 461
#define INTEGER 462
#define INTERSECT 463
#define INTERVAL 464
#define INTO 465
#define INVOKER 466
#define IS 467
#define ISNULL 468
#define ISOLATION 469
#define JOIN 470
#define KEY 471
#define LABEL 472
#define LANGUAGE 473
#define LARGE_P 474
#define LAST_P 475
#define LATERAL_P 476
#define LEADING 477
#define LEAKPROOF 478
#define LEFT 479
#define LEVEL 480
#define LIKE 481
#define LIMIT 482
#define LISTEN 483
#define LOAD 484
#define LOCAL 485
#define LOCALTIME 486
#define LOCALTIMESTAMP 487
#define LOCATION 488
#define LOCK_P 489
#define LOCKED 490
#define LOGGED 491
#define MACRO 492
#define MAPPING 493
#define MATCH 494
#define MATERIALIZED 495
#define MAXVALUE 496
#define METHOD 497
#define MICROSECOND_P 498
#define MICROSECONDS_P 499
#define MILLISECOND_P 500
#define MILLISECONDS_P 501
#define MINUTE_P 502
#define MINUTES_P 503
#define MINVALUE 504
#define MODE 505
#define MONTH_P 506
#define MONTHS_P 507
#define MOVE 508
#define NAME_P 509
#define NAMES 510
#define NATIONAL 511
#define NATURAL 512
#define NCHAR 513
#define NEW 514
#define NEXT 515
#define NO 516
#define NONE 517
#define NOT 518
#define NOTHING 519
#define NOTIFY 520
#define NOTNULL 521
#define NOWAIT 522
#define NULL_P 523
#define NULLIF 524
#define NULLS_P 525
#define NUMERIC 526
#define OBJECT_P 527
#define OF 528
#define OFF 529
#define OFFSET 530
#define OIDS 531
#define OLD 532
#define ON 533
#define ONLY 534
#define OPERATOR 535
#define OPTION 536
#define OPTIONS 537
#define OR 538
#define ORDER 539
#define ORDINALITY 540
#define OUT_P 541
#define OUTER_P 542
#define OVER 543
#define OVERLAPS 544
#define OVERLAY 545
#define OVERRIDING 546
#define OWNED 547
#define OWNER 548
#define PARALLEL 549
#define PARSER 550
#define PARTIAL 551
#define PARTITION 552
#define PASSING 553
#define PASSWORD 554
#define PERCENT 555
#define PLACING 556
#define PLANS 557
#define POLICY 558
#define POSITION 559
#define PRAGMA_P 560
#define PRECEDING 561
#define PRECISION 562
#define PREPARE 563
#define PREPARED 564
#define PRESERVE 565
#define PRIMARY 566
#define PRIOR 567
#define PRIVILEGES 568
#define PROCEDURAL 569
#define PROCEDURE 570
#define PROGRAM 571
#define PUBLICATION 572
#define QUOTE 573
#define RANGE 574
#define READ_P 575
#define REAL 576
#define REASSIGN 577
#define RECHECK 578
#define RECURSIVE 579
#define REF 580
#define REFERENCES 581
#define REFERENCING 582
#define REFRESH 583
#define REINDEX 584
#define RELATIVE_P 585
#define RELEASE 586
#define RENAME 587
#define REPEATABLE 588
#define REPLACE 589
#define REPLICA 590
#define RESET 591
#define RESTART 592
#define RESTRICT 593
#define RETURNING 594
#define RETURNS 595
#define REVOKE 596
#define RIGHT 597
#define ROLE 598
#define ROLLBACK 599
#define ROLLUP 600
#define ROW 601
#define ROWS 602
#define RULE 603
#define SAMPLE 604
#define SAVEPOINT 605
#define SCHEMA 606
#define SCHEMAS 607
#define SCROLL 608
#define SEARCH 609
#define SECOND_P 610
#define SECONDS_P 611
#define SECURITY 612
#define SELECT 613
#define SEQUENCE 614
#define SEQUENCES 615
#define SERIALIZABLE 616
#define SERVER 617
#define SESSION 618
#define SESSION_USER 619
#define SET 620
#define SETOF 621
#define SETS 622
#define SHARE 623
#define SHOW 624
#define SIMILAR 625
#define SIMPLE 626
#define SKIP 627
#define SMALLINT 628
#define SNAPSHOT 629
#define SOME 630
#define SQL_P 631
#define STABLE 632
#define STANDALONE_P 633
#define START 634
#define STATEMENT 635
#define STATISTICS 636
#define STDIN 637
#define STDOUT 638
#define STORAGE 639
#define STRICT_P 640
#define STRIP_P 641
#define SUBSCRIPTION 642
#define SUBSTRING 643
#define SYMMETRIC 644
#define SYSID 645
#define SYSTEM_P 646
#define TABLE 647
#define TABLES 648
#define TABLESAMPLE 649
#define TABLESPACE 650
#define TEMP 651
#define TEMPLATE 652
#define TEMPORARY 653
#define TEXT_P 654
#define THEN 655
#define TIME 656
#define TIMESTAMP 657
#define TO 658
#define TRAILING 659
#define TRANSACTION 660
#define TRANSFORM 661
#define TREAT 662
#define TRIGGER 663
#define TRIM 664
#define TRUE_P 665
#define TRUNCATE 666
#define TRUSTED 667
#define TYPE_P 668
#define TYPES_P 669
#define UNBOUNDED 670
#define UNCOMMITTED 671
#define UNENCRYPTED 672
#define UNION 673
#define UNIQUE 674
#define UNKNOWN 675
#define UNLISTEN 676
#define UNLOGGED 677
#define UNTIL 678
#define UPDATE 679
#define USER 680
#define USING 681
#define VACUUM 682
#define VALID 683
#define VALIDATE 684
#define VALIDATOR 685
#define VALUE_P 686
#define VALUES 687
#define VARCHAR 688
#define VARIADIC 689
#define VARYING 690
#define VERBOSE 691
#define VERSION_P 692
#define VIEW 693
#define VIEWS 694
#define VOLATILE 695
#define WHEN 696
#define WHERE 697
#define WHITESPACE_P 698
#define WINDOW 699
#define WITH 700
#define WITHIN 701
#define WITHOUT 702
#define WORK 703
#define WRAPPER 704
#define WRITE_P 705
#define XML_P 706
#define XMLATTRIBUTES 707
#define XMLCONCAT 708
#define XMLELEMENT 709
#define XMLEXISTS 710
#define XMLFOREST 711
#define XMLNAMESPACES 712
#define XMLPARSE 713
#define XMLPI 714
#define XMLROOT 715
#define XMLSERIALIZE 716
#define XMLTABLE 717
#define YEAR_P 718
#define YEARS_P 719
#define YES_P 720
#define ZONE 721
#define NOT_LA 722
#define NULLS_LA 723
#define WITH_LA 724
#define POSTFIXOP 725
#define UMINUS 726




/* Copy the first part of user declarations.  */
#line 1 "third_party/libpg_query/grammar/grammar.y.tmp"

#line 1 "third_party/libpg_query/grammar/grammar.hpp"
/*#define YYDEBUG 1*/
/*-------------------------------------------------------------------------
 *
 * gram.y
 *	  POSTGRESQL BISON rules/actions
 *
 * Portions Copyright (c) 1996-2017, PostgreSQL Global Development PGGroup
 * Portions Copyright (c) 1994, Regents of the University of California
 *
 *
 * IDENTIFICATION
 *	  src/backend/parser/gram.y
 *
 * HISTORY
 *	  AUTHOR			DATE			MAJOR EVENT
 *	  Andrew Yu			Sept, 1994		POSTQUEL to SQL conversion
 *	  Andrew Yu			Oct, 1994		lispy code conversion
 *
 * NOTES
 *	  CAPITALS are used to represent terminal symbols.
 *	  non-capitals are used to represent non-terminals.
 *
 *	  In general, nothing in this file should initiate database accesses
 *	  nor depend on changeable state (such as SET variables).  If you do
 *	  database accesses, your code will fail when we have aborted the
 *	  current transaction and are just parsing commands to find the next
 *	  ROLLBACK or COMMIT.  If you make use of SET variables, then you
 *	  will do the wrong thing in multi-query strings like this:
 *			SET constraint_exclusion TO off; SELECT * FROM foo;
 *	  because the entire string is parsed by gram.y before the SET gets
 *	  executed.  Anything that depends on the database or changeable state
 *	  should be handled during parse analysis so that it happens at the
 *	  right time not the wrong time.
 *
 * WARNINGS
 *	  If you use a list, make sure the datum is a node so that the printing
 *	  routines work.
 *
 *	  Sometimes we assign constants to makeStrings. Make sure we don't free
 *	  those.
 *
 *-------------------------------------------------------------------------
 */
#include "pg_functions.hpp"
#include <string.h>

#include <ctype.h>
#include <limits.h>

#include "nodes/makefuncs.hpp"
#include "nodes/nodeFuncs.hpp"
#include "parser/gramparse.hpp"
#include "parser/parser.hpp"
#include "utils/datetime.hpp"

namespace duckdb_libpgquery {
#define DEFAULT_SCHEMA "main"

/*
 * Location tracking support --- simpler than bison's default, since we only
 * want to track the start position not the end position of each nonterminal.
 */
#define YYLLOC_DEFAULT(Current, Rhs, N) \
	do { \
		if ((N) > 0) \
			(Current) = (Rhs)[1]; \
		else \
			(Current) = (-1); \
	} while (0)

/*
 * The above macro assigns -1 (unknown) as the parse location of any
 * nonterminal that was reduced from an empty rule, or whose leftmost
 * component was reduced from an empty rule.  This is problematic
 * for nonterminals defined like
 *		OptFooList: / * EMPTY * / { ... } | OptFooList Foo { ... } ;
 * because we'll set -1 as the location during the first reduction and then
 * copy it during each subsequent reduction, leaving us with -1 for the
 * location even when the list is not empty.  To fix that, do this in the
 * action for the nonempty rule(s):
 *		if (@$ < 0) @$ = @2;
 * (Although we have many nonterminals that follow this pattern, we only
 * bother with fixing @$ like this when the nonterminal's parse location
 * is actually referenced in some rule.)
 *
 * A cleaner answer would be to make YYLLOC_DEFAULT scan all the Rhs
 * locations until it's found one that's not -1.  Then we'd get a correct
 * location for any nonterminal that isn't entirely empty.  But this way
 * would add overhead to every rule reduction, and so far there's not been
 * a compelling reason to pay that overhead.
 */

/*
 * Bison doesn't allocate anything that needs to live across parser calls,
 * so we can easily have it use palloc instead of malloc.  This prevents
 * memory leaks if we error out during parsing.  Note this only works with
 * bison >= 2.0.  However, in bison 1.875 the default is to use alloca()
 * if possible, so there's not really much problem anyhow, at least if
 * you're building with gcc.
 */
#define YYMALLOC palloc
#define YYFREE   pfree
#define YYINITDEPTH 1000

/* yields an integer bitmask of these flags: */
#define CAS_NOT_DEFERRABLE			0x01
#define CAS_DEFERRABLE				0x02
#define CAS_INITIALLY_IMMEDIATE		0x04
#define CAS_INITIALLY_DEFERRED		0x08
#define CAS_NOT_VALID				0x10
#define CAS_NO_INHERIT				0x20


#define parser_yyerror(msg)  scanner_yyerror(msg, yyscanner)
#define parser_errposition(pos)  scanner_errposition(pos, yyscanner)

static void base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner,
						 const char *msg);
static PGRawStmt *makeRawStmt(PGNode *stmt, int stmt_location);
static void updateRawStmtEnd(PGRawStmt *rs, int end_location);
static PGNode *makeColumnRef(char *colname, PGList *indirection,
						   int location, core_yyscan_t yyscanner);
static PGNode *makeTypeCast(PGNode *arg, PGTypeName *tpname, int location);
static PGNode *makeStringConst(char *str, int location);
static PGNode *makeStringConstCast(char *str, int location, PGTypeName *tpname);
static PGNode *makeIntervalNode(char *str, int location, PGList *typmods);
static PGNode *makeIntervalNode(int val, int location, PGList *typmods);
static PGNode *makeIntervalNode(PGNode *arg, int location, PGList *typmods);
static PGNode *makeSampleSize(PGValue *sample_size, bool is_percentage);
static PGNode *makeSampleOptions(PGNode *sample_size, char *method, int seed, int location);
static PGNode *makeIntConst(int val, int location);
static PGNode *makeFloatConst(char *str, int location);
static PGNode *makeBitStringConst(char *str, int location);
static PGNode *makeNullAConst(int location);
static PGNode *makeAConst(PGValue *v, int location);
static PGNode *makeBoolAConst(bool state, int location);
static PGNode *makeParamRef(int number, int location);
static PGNode *makeParamRefCast(int number, int location, PGTypeName *tpname);
static void check_qualified_name(PGList *names, core_yyscan_t yyscanner);
static PGList *check_func_name(PGList *names, core_yyscan_t yyscanner);
static PGList *check_indirection(PGList *indirection, core_yyscan_t yyscanner);
static void insertSelectOptions(PGSelectStmt *stmt,
								PGList *sortClause, PGList *lockingClause,
								PGNode *limitOffset, PGNode *limitCount,
								PGWithClause *withClause,
								core_yyscan_t yyscanner);
static PGNode *makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg);
static PGNode *doNegate(PGNode *n, int location);
static void doNegateFloat(PGValue *v);
static PGNode *makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location);
static PGNode *makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location);
static PGNode *makeNotExpr(PGNode *expr, int location);
static PGNode *makeSQLValueFunction(PGSQLValueFunctionOp op, int32_t typmod,
								  int location);
static void SplitColQualList(PGList *qualList,
							 PGList **constraintList, PGCollateClause **collClause,
							 core_yyscan_t yyscanner);
static void processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner);
static PGNode *makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query);



/* Enabling traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* Enabling the token table.  */
#ifndef YYTOKEN_TABLE
# define YYTOKEN_TABLE 0
#endif

#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
typedef union YYSTYPE
#line 14 "third_party/libpg_query/grammar/grammar.y"
{
	core_YYSTYPE		core_yystype;
	/* these fields must match core_YYSTYPE: */
	int					ival;
	char				*str;
	const char			*keyword;
	const char          *conststr;

	char				chr;
	bool				boolean;
	PGJoinType			jtype;
	PGDropBehavior		dbehavior;
	PGOnCommitAction		oncommit;
	PGList				*list;
	PGNode				*node;
	PGValue				*value;
	PGObjectType			objtype;
	PGTypeName			*typnam;
	PGObjectWithArgs		*objwithargs;
	PGDefElem				*defelt;
	PGSortBy				*sortby;
	PGWindowDef			*windef;
	PGJoinExpr			*jexpr;
	PGIndexElem			*ielem;
	PGAlias				*alias;
	PGRangeVar			*range;
	PGIntoClause			*into;
	PGWithClause			*with;
	PGInferClause			*infer;
	PGOnConflictClause	*onconflict;
	PGAIndices			*aind;
	PGResTarget			*target;
	PGInsertStmt			*istmt;
	PGVariableSetStmt		*vsetstmt;
	PGOverridingKind       override;
	PGSortByDir            sortorder;
	PGSortByNulls          nullorder;
	PGLockClauseStrength lockstrength;
	PGLockWaitPolicy lockwaitpolicy;
	PGSubLinkType subquerytype;
	PGViewCheckOption viewcheckoption;
}
/* Line 193 of yacc.c.  */
#line 1255 "third_party/libpg_query/grammar/grammar_out.cpp"
	YYSTYPE;
# define yystype YYSTYPE /* obsolescent; will be withdrawn */
# define YYSTYPE_IS_DECLARED 1
# define YYSTYPE_IS_TRIVIAL 1
#endif

#if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
typedef struct YYLTYPE
{
  int first_line;
  int first_column;
  int last_line;
  int last_column;
} YYLTYPE;
# define yyltype YYLTYPE /* obsolescent; will be withdrawn */
# define YYLTYPE_IS_DECLARED 1
# define YYLTYPE_IS_TRIVIAL 1
#endif


/* Copy the second part of user declarations.  */


/* Line 216 of yacc.c.  */
#line 1280 "third_party/libpg_query/grammar/grammar_out.cpp"

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#elif (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
typedef signed char yytype_int8;
#else
typedef short int yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(msgid) dgettext ("bison-runtime", msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(msgid) msgid
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(e) ((void) (e))
#else
# define YYUSE(e) /* empty */
#endif

/* Identity function, used to suppress warnings about constant conditions.  */
#ifndef lint
# define YYID(n) (n)
#else
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static int
YYID (int i)
#else
static int
YYID (i)
    int i;
#endif
{
  return i;
}
#endif

#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#     ifndef _STDLIB_H
#      define _STDLIB_H 1
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's `empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (YYID (0))
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined _STDLIB_H \
       && ! ((defined YYMALLOC || defined malloc) \
	     && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef _STDLIB_H
#    define _STDLIB_H 1
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
	 || (defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL \
	     && defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss;
  YYSTYPE yyvs;
    YYLTYPE yyls;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
      + 2 * YYSTACK_GAP_MAXIMUM)

/* Copy COUNT objects from FROM to TO.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(To, From, Count) \
      __builtin_memcpy (To, From, (Count) * sizeof (*(From)))
#  else
#   define YYCOPY(To, From, Count)		\
      do					\
	{					\
	  YYSIZE_T yyi;				\
	  for (yyi = 0; yyi < (Count); yyi++)	\
	    (To)[yyi] = (From)[yyi];		\
	}					\
      while (YYID (0))
#  endif
# endif

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack)					\
    do									\
      {									\
	YYSIZE_T yynewbytes;						\
	YYCOPY (&yyptr->Stack, Stack, yysize);				\
	Stack = &yyptr->Stack;						\
	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
	yyptr += yynewbytes / sizeof (*yyptr);				\
      }									\
    while (YYID (0))

#endif

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  569
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   47632

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  490
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  358
/* YYNRULES -- Number of rules.  */
#define YYNRULES  1620
/* YYNRULES -- Number of states.  */
#define YYNSTATES  2678

/* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   726

#define YYTRANSLATE(YYX)						\
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[YYLEX] -- Bison symbol number corresponding to YYLEX.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,   478,     2,     2,
     483,   484,   476,   474,   487,   475,   485,   477,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   489,   486,
     470,   472,   471,   488,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,   481,     2,   482,   479,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   473,   480
};

#if YYDEBUG
/* YYPRHS[YYN] -- Index of the first RHS symbol of rule number YYN in
   YYRHS.  */
static const yytype_uint16 yyprhs[] =
{
       0,     0,     3,     5,     9,    11,    13,    15,    17,    19,
      21,    23,    25,    27,    29,    31,    33,    35,    37,    39,
      41,    43,    45,    47,    49,    51,    53,    55,    57,    59,
      61,    63,    65,    67,    69,    71,    73,    75,    77,    78,
      83,    90,    95,   102,   107,   114,   119,   126,   128,   131,
     135,   138,   140,   144,   147,   151,   153,   157,   160,   166,
     170,   177,   182,   189,   196,   203,   209,   215,   222,   232,
     237,   243,   251,   258,   263,   272,   277,   280,   285,   289,
     296,   301,   304,   307,   310,   313,   315,   318,   319,   321,
     324,   327,   330,   332,   336,   341,   344,   345,   348,   352,
     355,   359,   366,   373,   382,   389,   398,   405,   414,   421,
     430,   439,   450,   459,   470,   472,   473,   481,   483,   488,
     493,   501,   504,   506,   510,   515,   519,   520,   522,   523,
     526,   530,   536,   545,   551,   552,   558,   564,   572,   575,
     576,   578,   580,   582,   586,   589,   590,   592,   593,   595,
     599,   601,   605,   607,   611,   614,   617,   622,   628,   634,
     643,   645,   646,   650,   660,   673,   677,   678,   683,   690,
     692,   695,   697,   699,   700,   702,   705,   708,   710,   713,
     716,   718,   721,   725,   728,   731,   734,   737,   741,   745,
     749,   751,   755,   757,   758,   760,   763,   766,   769,   772,
     775,   778,   781,   784,   786,   788,   789,   799,   812,   813,
     816,   818,   820,   822,   824,   826,   828,   832,   833,   835,
     838,   840,   842,   845,   848,   852,   854,   856,   859,   862,
     864,   867,   871,   877,   880,   886,   892,   895,   899,   901,
     903,   906,   909,   910,   915,   916,   920,   925,   930,   931,
     935,   938,   939,   943,   945,   947,   949,   951,   953,   955,
     957,   959,   961,   963,   967,   971,   973,   976,   979,   982,
     985,   988,   991,   992,   996,  1000,  1004,  1005,  1007,  1010,
    1012,  1015,  1018,  1021,  1024,  1029,  1031,  1035,  1037,  1041,
    1043,  1045,  1047,  1049,  1053,  1055,  1058,  1059,  1061,  1062,
    1064,  1068,  1069,  1072,  1073,  1077,  1081,  1083,  1089,  1093,
    1095,  1099,  1101,  1106,  1112,  1118,  1125,  1129,  1137,  1142,
    1154,  1156,  1160,  1163,  1166,  1169,  1170,  1174,  1176,  1178,
    1181,  1184,  1187,  1190,  1192,  1193,  1195,  1198,  1205,  1210,
    1217,  1222,  1229,  1238,  1240,  1242,  1244,  1246,  1248,  1251,
    1253,  1256,  1258,  1260,  1262,  1266,  1270,  1274,  1278,  1281,
    1284,  1286,  1290,  1292,  1294,  1296,  1298,  1302,  1304,  1306,
    1307,  1309,  1311,  1313,  1320,  1322,  1324,  1327,  1331,  1340,
    1352,  1362,  1364,  1366,  1370,  1371,  1373,  1377,  1379,  1380,
    1382,  1383,  1385,  1386,  1388,  1392,  1394,  1396,  1398,  1402,
    1403,  1406,  1409,  1410,  1413,  1414,  1416,  1417,  1419,  1421,
    1423,  1427,  1431,  1433,  1435,  1439,  1443,  1447,  1451,  1456,
    1460,  1463,  1465,  1467,  1469,  1471,  1473,  1477,  1479,  1481,
    1485,  1489,  1491,  1494,  1499,  1504,  1507,  1511,  1517,  1523,
    1525,  1527,  1538,  1549,  1551,  1554,  1559,  1564,  1569,  1572,
    1575,  1579,  1581,  1585,  1592,  1595,  1596,  1600,  1604,  1609,
    1614,  1619,  1624,  1628,  1631,  1633,  1635,  1636,  1638,  1640,
    1641,  1643,  1649,  1651,  1652,  1654,  1655,  1659,  1661,  1665,
    1670,  1674,  1676,  1678,  1679,  1682,  1685,  1686,  1689,  1692,
    1694,  1696,  1698,  1699,  1702,  1707,  1713,  1718,  1721,  1725,
    1728,  1731,  1734,  1737,  1739,  1742,  1746,  1747,  1749,  1750,
    1756,  1758,  1763,  1770,  1773,  1775,  1776,  1781,  1782,  1784,
    1786,  1788,  1790,  1793,  1796,  1798,  1800,  1802,  1804,  1806,
    1808,  1812,  1813,  1815,  1819,  1821,  1823,  1826,  1829,  1830,
    1832,  1836,  1838,  1839,  1841,  1844,  1848,  1851,  1856,  1859,
    1863,  1866,  1867,  1869,  1872,  1873,  1878,  1884,  1887,  1888,
    1890,  1894,  1898,  1902,  1906,  1910,  1914,  1916,  1921,  1925,
    1930,  1936,  1941,  1947,  1952,  1958,  1961,  1966,  1968,  1970,
    1971,  1973,  1978,  1984,  1989,  1990,  1993,  1996,  1999,  2001,
    2003,  2004,  2009,  2012,  2014,  2017,  2020,  2025,  2028,  2035,
    2038,  2040,  2044,  2049,  2050,  2053,  2054,  2057,  2058,  2060,
    2064,  2068,  2071,  2072,  2075,  2079,  2085,  2092,  2095,  2099,
    2103,  2108,  2109,  2111,  2113,  2115,  2117,  2119,  2122,  2127,
    2129,  2131,  2133,  2135,  2138,  2142,  2146,  2147,  2149,  2151,
    2153,  2155,  2157,  2160,  2163,  2166,  2169,  2172,  2174,  2178,
    2179,  2181,  2183,  2185,  2187,  2193,  2196,  2198,  2200,  2202,
    2204,  2209,  2211,  2214,  2217,  2219,  2223,  2227,  2230,  2232,
    2233,  2239,  2242,  2248,  2251,  2253,  2257,  2261,  2262,  2264,
    2266,  2268,  2270,  2272,  2274,  2276,  2278,  2280,  2282,  2284,
    2286,  2288,  2290,  2292,  2294,  2296,  2298,  2300,  2302,  2304,
    2306,  2308,  2310,  2314,  2318,  2322,  2326,  2330,  2334,  2338,
    2339,  2341,  2345,  2349,  2355,  2358,  2361,  2365,  2369,  2373,
    2377,  2381,  2385,  2389,  2393,  2397,  2401,  2405,  2409,  2413,
    2416,  2419,  2423,  2427,  2430,  2433,  2437,  2441,  2447,  2452,
    2459,  2463,  2469,  2474,  2481,  2486,  2493,  2499,  2507,  2511,
    2514,  2519,  2523,  2526,  2530,  2534,  2538,  2542,  2547,  2551,
    2556,  2560,  2565,  2571,  2578,  2585,  2593,  2600,  2608,  2615,
    2623,  2627,  2632,  2637,  2644,  2646,  2648,  2652,  2655,  2658,
    2662,  2666,  2670,  2674,  2678,  2682,  2686,  2690,  2694,  2698,
    2702,  2706,  2710,  2713,  2716,  2722,  2729,  2736,  2744,  2746,
    2748,  2751,  2754,  2759,  2761,  2763,  2765,  2768,  2771,  2775,
    2781,  2788,  2797,  2804,  2811,  2816,  2821,  2823,  2825,  2827,
    2833,  2835,  2837,  2842,  2844,  2849,  2851,  2856,  2858,  2863,
    2865,  2867,  2869,  2871,  2873,  2875,  2882,  2887,  2892,  2897,
    2902,  2909,  2915,  2921,  2927,  2932,  2939,  2944,  2950,  2951,
    2957,  2958,  2961,  2962,  2964,  2968,  2972,  2975,  2978,  2979,
    2986,  2988,  2989,  2993,  2994,  2997,  3000,  3001,  3003,  3008,
    3011,  3014,  3017,  3020,  3023,  3028,  3032,  3038,  3040,  3042,
    3044,  3046,  3048,  3050,  3052,  3054,  3056,  3058,  3060,  3062,
    3064,  3066,  3068,  3070,  3072,  3074,  3079,  3081,  3086,  3088,
    3093,  3095,  3098,  3100,  3103,  3105,  3108,  3110,  3114,  3116,
    3120,  3122,  3126,  3128,  3132,  3136,  3138,  3142,  3146,  3147,
    3149,  3151,  3153,  3155,  3157,  3159,  3161,  3163,  3165,  3167,
    3172,  3176,  3179,  3183,  3184,  3188,  3192,  3195,  3198,  3200,
    3201,  3204,  3207,  3211,  3214,  3216,  3218,  3222,  3228,  3230,
    3233,  3238,  3241,  3242,  3244,  3245,  3247,  3250,  3253,  3256,
    3260,  3266,  3268,  3269,  3271,  3274,  3275,  3278,  3280,  3281,
    3283,  3284,  3286,  3290,  3294,  3297,  3299,  3301,  3303,  3307,
    3309,  3312,  3314,  3318,  3320,  3322,  3324,  3327,  3329,  3331,
    3333,  3335,  3337,  3340,  3347,  3350,  3356,  3360,  3364,  3366,
    3368,  3370,  3372,  3374,  3376,  3378,  3380,  3382,  3384,  3386,
    3388,  3390,  3392,  3395,  3398,  3402,  3406,  3407,  3409,  3411,
    3413,  3415,  3417,  3419,  3421,  3423,  3429,  3433,  3434,  3436,
    3438,  3440,  3442,  3447,  3455,  3458,  3459,  3461,  3463,  3465,
    3467,  3481,  3498,  3500,  3503,  3504,  3506,  3507,  3509,  3510,
    3513,  3514,  3516,  3517,  3524,  3533,  3540,  3549,  3556,  3565,
    3567,  3572,  3576,  3579,  3584,  3588,  3594,  3596,  3597,  3599,
    3601,  3602,  3604,  3606,  3608,  3610,  3612,  3614,  3616,  3618,
    3620,  3622,  3624,  3626,  3630,  3632,  3634,  3636,  3638,  3640,
    3642,  3645,  3647,  3649,  3652,  3656,  3660,  3662,  3666,  3670,
    3673,  3677,  3681,  3685,  3689,  3691,  3693,  3695,  3697,  3701,
    3707,  3709,  3711,  3713,  3715,  3719,  3722,  3724,  3729,  3735,
    3741,  3746,  3753,  3755,  3757,  3759,  3761,  3763,  3765,  3766,
    3768,  3772,  3774,  3775,  3783,  3785,  3788,  3792,  3795,  3796,
    3799,  3800,  3803,  3808,  3811,  3813,  3815,  3817,  3820,  3824,
    3827,  3830,  3834,  3839,  3842,  3844,  3846,  3848,  3852,  3855,
    3865,  3877,  3890,  3905,  3909,  3914,  3919,  3920,  3928,  3939,
    3942,  3946,  3947,  3952,  3954,  3956,  3958,  3960,  3962,  3964,
    3966,  3968,  3970,  3972,  3974,  3976,  3978,  3980,  3982,  3984,
    3986,  3988,  3990,  3992,  3994,  3996,  3998,  4000,  4002,  4004,
    4006,  4008,  4010,  4012,  4014,  4016,  4018,  4020,  4022,  4024,
    4026,  4028,  4030,  4032,  4034,  4036,  4038,  4040,  4042,  4044,
    4046,  4048,  4050,  4052,  4054,  4056,  4058,  4060,  4062,  4064,
    4066,  4068,  4070,  4072,  4074,  4076,  4078,  4080,  4082,  4084,
    4086,  4088,  4090,  4092,  4094,  4096,  4098,  4100,  4102,  4104,
    4106,  4108,  4110,  4112,  4114,  4116,  4118,  4120,  4122,  4124,
    4126,  4128,  4130,  4132,  4134,  4136,  4138,  4140,  4142,  4144,
    4146,  4148,  4150,  4152,  4154,  4156,  4158,  4160,  4162,  4164,
    4166,  4168,  4170,  4172,  4174,  4176,  4178,  4180,  4182,  4184,
    4186,  4188,  4190,  4192,  4194,  4196,  4198,  4200,  4202,  4204,
    4206,  4208,  4210,  4212,  4214,  4216,  4218,  4220,  4222,  4224,
    4226,  4228,  4230,  4232,  4234,  4236,  4238,  4240,  4242,  4244,
    4246,  4248,  4250,  4252,  4254,  4256,  4258,  4260,  4262,  4264,
    4266,  4268,  4270,  4272,  4274,  4276,  4278,  4280,  4282,  4284,
    4286,  4288,  4290,  4292,  4294,  4296,  4298,  4300,  4302,  4304,
    4306,  4308,  4310,  4312,  4314,  4316,  4318,  4320,  4322,  4324,
    4326,  4328,  4330,  4332,  4334,  4336,  4338,  4340,  4342,  4344,
    4346,  4348,  4350,  4352,  4354,  4356,  4358,  4360,  4362,  4364,
    4366,  4368,  4370,  4372,  4374,  4376,  4378,  4380,  4382,  4384,
    4386,  4388,  4390,  4392,  4394,  4396,  4398,  4400,  4402,  4404,
    4406,  4408,  4410,  4412,  4414,  4416,  4418,  4420,  4422,  4424,
    4426,  4428,  4430,  4432,  4434,  4436,  4438,  4440,  4442,  4444,
    4446,  4448,  4450,  4452,  4454,  4456,  4458,  4460,  4462,  4464,
    4466,  4468,  4470,  4472,  4474,  4476,  4478,  4480,  4482,  4484,
    4486,  4488,  4490,  4492,  4494,  4496,  4498,  4500,  4502,  4504,
    4506,  4508,  4510,  4512,  4514,  4516,  4518,  4520,  4522,  4524,
    4526,  4528,  4530,  4532,  4534,  4536,  4538,  4540,  4542,  4544,
    4546,  4548,  4550,  4552,  4554,  4556,  4558,  4560,  4562,  4564,
    4566,  4568,  4570,  4572,  4574,  4576,  4578,  4580,  4582,  4584,
    4586,  4588,  4590,  4592,  4594,  4596,  4598,  4600,  4602,  4604,
    4606,  4608,  4610,  4612,  4614,  4616,  4618,  4620,  4622,  4624,
    4626,  4628,  4630,  4632,  4634,  4636,  4638,  4640,  4642,  4644,
    4646,  4648,  4650,  4652,  4654,  4656,  4658,  4660,  4662,  4664,
    4666,  4668,  4670,  4672,  4674,  4676,  4678,  4680,  4682,  4684,
    4686,  4688,  4690,  4692,  4694,  4696,  4698,  4700,  4702,  4704,
    4706,  4708,  4710,  4712,  4714,  4716,  4718,  4720,  4722,  4724,
    4726,  4728,  4730,  4732,  4734,  4736,  4738,  4740,  4742,  4744,
    4746,  4748,  4750,  4752,  4754,  4756,  4758,  4760,  4762,  4764,
    4766,  4768,  4770,  4772,  4774,  4776,  4778,  4780,  4782,  4784,
    4786,  4788,  4790,  4792,  4794,  4796,  4798,  4800,  4802,  4804,
    4806,  4808,  4810,  4812,  4814,  4816,  4818,  4820,  4822,  4824,
    4826,  4828,  4830,  4832,  4834,  4836,  4838,  4840,  4842,  4844,
    4846
};

/* YYRHS -- A `-1'-separated list of the rules' RHS.  */
static const yytype_int16 yyrhs[] =
{
     491,     0,    -1,   492,    -1,   492,   486,   493,    -1,   493,
      -1,   799,    -1,   531,    -1,   494,    -1,   831,    -1,   838,
      -1,   800,    -1,   596,    -1,   841,    -1,   592,    -1,   789,
      -1,   527,    -1,   540,    -1,   505,    -1,   827,    -1,   586,
      -1,   529,    -1,   803,    -1,   801,    -1,   802,    -1,   792,
      -1,   508,    -1,   820,    -1,   526,    -1,   786,    -1,   506,
      -1,   613,    -1,   538,    -1,   595,    -1,   822,    -1,   832,
      -1,   814,    -1,   835,    -1,   839,    -1,    -1,    29,   392,
     673,   502,    -1,    29,   392,   185,   149,   673,   502,    -1,
      29,   194,   769,   502,    -1,    29,   194,   185,   149,   769,
     502,    -1,    29,   359,   769,   502,    -1,    29,   359,   185,
     149,   769,   502,    -1,    29,   438,   769,   502,    -1,    29,
     438,   185,   149,   769,   502,    -1,   497,    -1,   495,   497,
      -1,   365,   114,   713,    -1,   134,   114,    -1,   337,    -1,
     337,   533,   534,    -1,   365,   535,    -1,   365,   171,   585,
      -1,   501,    -1,   498,   487,   501,    -1,    23,   565,    -1,
      23,   185,   263,   149,   565,    -1,    23,    75,   565,    -1,
      23,    75,   185,   263,   149,   565,    -1,    29,   507,   777,
     496,    -1,    29,   507,   777,   134,   263,   268,    -1,    29,
     507,   777,   365,   263,   268,    -1,    29,   507,   777,   365,
     381,   537,    -1,    29,   507,   777,   365,   553,    -1,    29,
     507,   777,   336,   553,    -1,    29,   507,   777,   365,   384,
     777,    -1,    29,   507,   777,    23,   171,   585,    36,   184,
     543,    -1,    29,   507,   777,   495,    -1,    29,   507,   777,
     134,   184,    -1,    29,   507,   777,   134,   184,   185,   149,
      -1,   134,   507,   185,   149,   777,   590,    -1,   134,   507,
     777,   590,    -1,    29,   507,   777,   504,   413,   683,   682,
     500,    -1,    29,   507,   777,   503,    -1,    23,   555,    -1,
      29,    85,   771,   541,    -1,   429,    85,   771,    -1,   134,
      85,   185,   149,   771,   590,    -1,   134,    85,   771,   590,
      -1,   365,   236,    -1,   365,   422,    -1,   365,   553,    -1,
     336,   553,    -1,   503,    -1,   426,   713,    -1,    -1,   548,
      -1,   365,   548,    -1,    23,   548,    -1,   134,   563,    -1,
     499,    -1,   502,   487,   499,    -1,   282,   483,   498,   484,
      -1,   365,   106,    -1,    -1,   110,   771,    -1,   110,   308,
     771,    -1,   110,    27,    -1,   110,   308,    27,    -1,    29,
     351,   771,   332,   403,   771,    -1,    29,   392,   673,   332,
     403,   771,    -1,    29,   392,   185,   149,   673,   332,   403,
     771,    -1,    29,   359,   769,   332,   403,   771,    -1,    29,
     359,   185,   149,   769,   332,   403,   771,    -1,    29,   438,
     769,   332,   403,   771,    -1,    29,   438,   185,   149,   769,
     332,   403,   771,    -1,    29,   194,   769,   332,   403,   771,
      -1,    29,   194,   185,   149,   769,   332,   403,   771,    -1,
      29,   392,   673,   332,   507,   771,   403,   771,    -1,    29,
     392,   185,   149,   673,   332,   507,   771,   403,   771,    -1,
      29,   392,   673,   332,    85,   771,   403,   771,    -1,    29,
     392,   185,   149,   673,   332,    85,   771,   403,   771,    -1,
      75,    -1,    -1,   512,   204,   210,   510,   509,   515,   517,
      -1,   613,    -1,   291,   518,   431,   613,    -1,   483,   522,
     484,   613,    -1,   483,   522,   484,   291,   518,   431,   613,
      -1,   114,   432,    -1,   769,    -1,   769,    36,   777,    -1,
     483,   524,   484,   679,    -1,   278,    85,   771,    -1,    -1,
     618,    -1,    -1,   777,   763,    -1,   525,   472,   713,    -1,
     483,   519,   484,   472,   713,    -1,   278,    83,   511,   130,
     424,   365,   523,   679,    -1,   278,    83,   511,   130,   264,
      -1,    -1,   777,   520,   521,   631,   632,    -1,   718,   520,
     521,   631,   632,    -1,   483,   713,   484,   520,   521,   631,
     632,    -1,   339,   766,    -1,    -1,   425,    -1,   391,    -1,
     525,    -1,   519,   487,   525,    -1,    73,   780,    -1,    -1,
     780,    -1,    -1,   513,    -1,   522,   487,   513,    -1,   514,
      -1,   523,   487,   514,    -1,   516,    -1,   524,   487,   516,
      -1,   777,   763,    -1,   305,   777,    -1,   305,   777,   472,
     819,    -1,   305,   777,   483,   741,   484,    -1,    92,   584,
     359,   769,   528,    -1,    92,   584,   359,   185,   263,   149,
     769,   528,    -1,   532,    -1,    -1,   148,   771,   530,    -1,
      92,   584,   392,   843,    36,   148,   771,   530,   842,    -1,
      92,   584,   392,   185,   263,   149,   843,    36,   148,   771,
     530,   842,    -1,   483,   740,   484,    -1,    -1,    29,   359,
     769,   532,    -1,    29,   359,   185,   149,   769,   532,    -1,
     535,    -1,   532,   535,    -1,   445,    -1,   469,    -1,    -1,
       4,    -1,   474,     4,    -1,   475,     4,    -1,   537,    -1,
      36,   685,    -1,    55,   534,    -1,   105,    -1,   261,   105,
      -1,   193,   536,   534,    -1,   241,   534,    -1,   249,   534,
      -1,   261,   241,    -1,   261,   249,    -1,   292,    54,   780,
      -1,   359,   254,   780,    -1,   379,   533,   534,    -1,   337,
      -1,   337,   533,   534,    -1,    54,    -1,    -1,   775,    -1,
     474,   775,    -1,   475,   775,    -1,    19,   539,    -1,    47,
     539,    -1,   379,   539,    -1,    79,   539,    -1,   140,   539,
      -1,   344,   539,    -1,   448,    -1,   405,    -1,    -1,    92,
     584,   392,   769,   483,   572,   484,   560,   552,    -1,    92,
     584,   392,   185,   263,   149,   769,   483,   572,   484,   560,
     552,    -1,    -1,   541,   564,    -1,   579,    -1,   847,    -1,
     737,    -1,   534,    -1,   776,    -1,   262,    -1,   483,   532,
     484,    -1,    -1,   776,    -1,   261,    22,    -1,   338,    -1,
      58,    -1,   365,   268,    -1,   365,   114,    -1,    85,   771,
     547,    -1,   547,    -1,   559,    -1,    73,   780,    -1,   263,
     268,    -1,   268,    -1,   419,   571,    -1,   311,   216,   571,
      -1,    67,   483,   713,   484,   554,    -1,   114,   714,    -1,
     171,   585,    36,   184,   543,    -1,   326,   769,   574,   582,
     550,    -1,   563,   544,    -1,   278,   424,   545,    -1,   549,
      -1,   576,    -1,   549,   576,    -1,   576,   549,    -1,    -1,
     282,   483,   566,   484,    -1,    -1,   278,    79,   134,    -1,
     278,    79,   119,   347,    -1,   278,    79,   310,   347,    -1,
      -1,   483,   557,   484,    -1,   261,   196,    -1,    -1,    85,
     771,   580,    -1,   580,    -1,    78,    -1,    86,    -1,   115,
      -1,   184,    -1,   195,    -1,   381,    -1,   384,    -1,    27,
      -1,   577,    -1,   557,   487,   577,    -1,   426,   194,   568,
      -1,   116,    -1,   263,   116,    -1,   198,   117,    -1,   198,
     187,    -1,   445,   553,    -1,   445,   276,    -1,   447,   276,
      -1,    -1,   483,   567,   484,    -1,   562,   192,   556,    -1,
     562,   146,   556,    -1,    -1,   784,    -1,   263,   116,    -1,
     116,    -1,   198,   187,    -1,   198,   117,    -1,   263,   428,
      -1,   261,   196,    -1,   777,   683,   551,   575,    -1,   548,
      -1,   566,   487,   548,    -1,   570,    -1,   567,   487,   570,
      -1,   777,    -1,   565,    -1,   583,    -1,   555,    -1,   784,
     472,   542,    -1,   784,    -1,   445,   561,    -1,    -1,   581,
      -1,    -1,   777,    -1,   483,   578,   484,    -1,    -1,   575,
     546,    -1,    -1,   278,   119,   545,    -1,   784,   472,   542,
      -1,   784,    -1,   784,   485,   784,   472,   542,    -1,   784,
     485,   784,    -1,   573,    -1,   578,   487,   573,    -1,   683,
      -1,   779,   781,   478,   413,    -1,   366,   779,   781,   478,
     413,    -1,    67,   483,   713,   484,   541,    -1,   419,   483,
     578,   484,   571,   541,    -1,   419,   558,   541,    -1,   311,
     216,   483,   578,   484,   571,   541,    -1,   311,   216,   558,
     541,    -1,   164,   216,   483,   578,   484,   326,   769,   574,
     582,   550,   541,    -1,   569,    -1,   581,   487,   569,    -1,
     239,   168,    -1,   239,   296,    -1,   239,   371,    -1,    -1,
     226,   769,   562,    -1,   398,    -1,   396,    -1,   230,   398,
      -1,   230,   396,    -1,   173,   398,    -1,   173,   396,    -1,
     422,    -1,    -1,    30,    -1,    54,   114,    -1,   134,   587,
     185,   149,   589,   590,    -1,   134,   587,   589,   590,    -1,
     134,   588,   185,   149,   770,   590,    -1,   134,   588,   770,
     590,    -1,   134,   591,   771,   278,   780,   590,    -1,   134,
     591,   185,   149,   771,   278,   780,   590,    -1,   392,    -1,
     359,    -1,   169,    -1,   237,    -1,   438,    -1,   240,   438,
      -1,   194,    -1,   164,   392,    -1,    74,    -1,    89,    -1,
     381,    -1,   399,   354,   295,    -1,   399,   354,   126,    -1,
     399,   354,   397,    -1,   399,   354,    82,    -1,    21,   242,
      -1,   143,   408,    -1,   152,    -1,   164,   106,   449,    -1,
     317,    -1,   351,    -1,   362,    -1,   780,    -1,   589,   487,
     780,    -1,    58,    -1,   338,    -1,    -1,   303,    -1,   348,
      -1,   408,    -1,    92,   593,   769,   594,    36,   713,    -1,
     169,    -1,   237,    -1,   483,   484,    -1,   483,   741,   484,
      -1,   512,   424,   828,   365,   523,   663,   829,   517,    -1,
      90,   608,   769,   574,   606,   597,   602,   611,   598,   533,
     603,    -1,    90,   483,   788,   484,   403,   602,   611,   533,
     603,    -1,   167,    -1,   403,    -1,   600,   121,   776,    -1,
      -1,   610,    -1,   599,   487,   610,    -1,   426,    -1,    -1,
      36,    -1,    -1,   316,    -1,    -1,   607,    -1,   483,   612,
     484,    -1,   811,    -1,   534,    -1,   476,    -1,   483,   599,
     484,    -1,    -1,   784,   604,    -1,   445,   276,    -1,    -1,
     607,   609,    -1,    -1,    50,    -1,    -1,    50,    -1,   276,
      -1,   166,    -1,   120,   601,   776,    -1,   268,   601,   776,
      -1,    94,    -1,   180,    -1,   318,   601,   776,    -1,   142,
     601,   776,    -1,   163,   318,   578,    -1,   163,   318,   476,
      -1,   163,   263,   268,   578,    -1,   163,   268,   578,    -1,
     138,   776,    -1,   811,    -1,   776,    -1,   382,    -1,   383,
      -1,   605,    -1,   612,   487,   605,    -1,   615,    -1,   614,
      -1,   483,   615,   484,    -1,   483,   614,   484,    -1,   617,
      -1,   616,   628,    -1,   616,   627,   655,   634,    -1,   616,
     627,   633,   656,    -1,   618,   616,    -1,   618,   616,   628,
      -1,   618,   616,   627,   655,   634,    -1,   618,   616,   627,
     633,   656,    -1,   617,    -1,   614,    -1,   358,   626,   765,
     621,   663,   679,   650,   654,   722,   638,    -1,   358,   625,
     766,   621,   663,   679,   650,   654,   722,   638,    -1,   662,
      -1,   392,   673,    -1,   616,   418,   624,   616,    -1,   616,
     208,   624,   616,    -1,   616,   144,   624,   616,    -1,   445,
     619,    -1,   469,   619,    -1,   445,   324,   619,    -1,   620,
      -1,   619,   487,   620,    -1,   771,   782,    36,   483,   788,
     484,    -1,   210,   622,    -1,    -1,   398,   623,   769,    -1,
     396,   623,   769,    -1,   230,   398,   623,   769,    -1,   230,
     396,   623,   769,    -1,   173,   398,   623,   769,    -1,   173,
     396,   623,   769,    -1,   422,   623,   769,    -1,   392,   769,
      -1,   769,    -1,   392,    -1,    -1,    27,    -1,   129,    -1,
      -1,   129,    -1,   129,   278,   483,   740,   484,    -1,    27,
      -1,    -1,   628,    -1,    -1,   284,    54,   629,    -1,   630,
      -1,   629,   487,   630,    -1,   713,   426,   737,   632,    -1,
     713,   631,   632,    -1,    37,    -1,   123,    -1,    -1,   468,
     159,    -1,   468,   220,    -1,    -1,   635,   636,    -1,   636,
     635,    -1,   635,    -1,   636,    -1,   633,    -1,    -1,   227,
     644,    -1,   227,   644,   487,   645,    -1,   157,   649,   646,
     648,   279,    -1,   157,   649,   648,   279,    -1,   275,   645,
      -1,   275,   646,   648,    -1,     4,   478,    -1,     9,   478,
      -1,     4,   300,    -1,     9,   300,    -1,     9,    -1,     9,
     347,    -1,   426,   349,   640,    -1,    -1,   777,    -1,    -1,
     639,   483,   637,   484,   643,    -1,   637,    -1,   637,   483,
     777,   484,    -1,   637,   483,   777,   487,     9,   484,    -1,
     394,   640,    -1,   641,    -1,    -1,   333,   483,     9,   484,
      -1,    -1,   713,    -1,    27,    -1,   713,    -1,   715,    -1,
     474,   647,    -1,   475,   647,    -1,   775,    -1,     4,    -1,
     346,    -1,   347,    -1,   159,    -1,   260,    -1,   176,    54,
     651,    -1,    -1,   652,    -1,   651,   487,   652,    -1,   713,
      -1,   653,    -1,   483,   484,    -1,   179,   713,    -1,    -1,
     657,    -1,   162,   320,   279,    -1,   655,    -1,    -1,   658,
      -1,   657,   658,    -1,   659,   660,   661,    -1,   162,   424,
      -1,   162,   261,   216,   424,    -1,   162,   368,    -1,   162,
     216,   368,    -1,   273,   768,    -1,    -1,   267,    -1,   372,
     235,    -1,    -1,   432,   483,   740,   484,    -1,   662,   487,
     483,   740,   484,    -1,   167,   664,    -1,    -1,   665,    -1,
     664,   487,   665,    -1,   673,   668,   642,    -1,   674,   669,
     642,    -1,   221,   674,   669,    -1,   614,   668,   642,    -1,
     221,   614,   668,    -1,   666,    -1,   483,   666,   484,   667,
      -1,   483,   666,   484,    -1,   665,    93,   215,   665,    -1,
     665,   670,   215,   665,   672,    -1,   665,   215,   665,   672,
      -1,   665,   257,   670,   215,   665,    -1,   665,   257,   215,
     665,    -1,    36,   777,   483,   770,   484,    -1,    36,   778,
      -1,   777,   483,   770,   484,    -1,   777,    -1,   667,    -1,
      -1,   667,    -1,    36,   483,   680,   484,    -1,    36,   777,
     483,   680,   484,    -1,   777,   483,   680,   484,    -1,    -1,
     168,   671,    -1,   224,   671,    -1,   342,   671,    -1,   200,
      -1,   287,    -1,    -1,   426,   483,   770,   484,    -1,   278,
     713,    -1,   769,    -1,   769,   476,    -1,   279,   769,    -1,
     279,   483,   769,   484,    -1,   718,   678,    -1,   347,   167,
     483,   676,   484,   678,    -1,   718,   677,    -1,   675,    -1,
     676,   487,   675,    -1,    36,   483,   680,   484,    -1,    -1,
     469,   285,    -1,    -1,   442,   713,    -1,    -1,   681,    -1,
     680,   487,   681,    -1,   777,   683,   682,    -1,    73,   780,
      -1,    -1,   685,   684,    -1,   366,   685,   684,    -1,   685,
      35,   481,   775,   482,    -1,   366,   685,    35,   481,   775,
     482,    -1,   685,    35,    -1,   366,   685,    35,    -1,   684,
     481,   482,    -1,   684,   481,   775,   482,    -1,    -1,   687,
      -1,   689,    -1,   691,    -1,   695,    -1,   701,    -1,   702,
     712,    -1,   702,   483,   775,   484,    -1,   689,    -1,   692,
      -1,   696,    -1,   701,    -1,   779,   688,    -1,   779,   781,
     688,    -1,   483,   740,   484,    -1,    -1,   206,    -1,   207,
      -1,   373,    -1,    49,    -1,   321,    -1,   160,   690,    -1,
     133,   307,    -1,   112,   688,    -1,   111,   688,    -1,   271,
     688,    -1,    52,    -1,   483,   775,   484,    -1,    -1,   693,
      -1,   694,    -1,   693,    -1,   694,    -1,    51,   700,   483,
     740,   484,    -1,    51,   700,    -1,   697,    -1,   698,    -1,
     697,    -1,   698,    -1,   699,   483,   775,   484,    -1,   699,
      -1,    65,   700,    -1,    64,   700,    -1,   433,    -1,   256,
      65,   700,    -1,   256,    64,   700,    -1,   258,   700,    -1,
     435,    -1,    -1,   402,   483,   775,   484,   703,    -1,   402,
     703,    -1,   401,   483,   775,   484,   703,    -1,   401,   703,
      -1,   209,    -1,   469,   401,   466,    -1,   447,   401,   466,
      -1,    -1,   463,    -1,   464,    -1,   251,    -1,   252,    -1,
     108,    -1,   109,    -1,   182,    -1,   183,    -1,   247,    -1,
     248,    -1,   355,    -1,   356,    -1,   245,    -1,   246,    -1,
     243,    -1,   244,    -1,   704,    -1,   705,    -1,   706,    -1,
     707,    -1,   708,    -1,   709,    -1,   710,    -1,   711,    -1,
     704,   403,   705,    -1,   706,   403,   707,    -1,   706,   403,
     708,    -1,   706,   403,   709,    -1,   707,   403,   708,    -1,
     707,   403,   709,    -1,   708,   403,   709,    -1,    -1,   715,
      -1,   713,    11,   683,    -1,   713,    73,   780,    -1,   713,
      41,   401,   466,   713,    -1,   474,   713,    -1,   475,   713,
      -1,   713,   474,   713,    -1,   713,   475,   713,    -1,   713,
     476,   713,    -1,   713,   477,   713,    -1,   713,   478,   713,
      -1,   713,   479,   713,    -1,   713,   470,   713,    -1,   713,
     471,   713,    -1,   713,   472,   713,    -1,   713,    16,   713,
      -1,   713,    17,   713,    -1,   713,    18,   713,    -1,   713,
     736,   713,    -1,   736,   713,    -1,   713,   736,    -1,   713,
      33,   713,    -1,   713,   283,   713,    -1,   263,   713,    -1,
     467,   713,    -1,   713,   172,   713,    -1,   713,   226,   713,
      -1,   713,   226,   713,   142,   713,    -1,   713,   467,   226,
     713,    -1,   713,   467,   226,   713,   142,   713,    -1,   713,
     186,   713,    -1,   713,   186,   713,   142,   713,    -1,   713,
     467,   186,   713,    -1,   713,   467,   186,   713,   142,   713,
      -1,   713,   370,   403,   713,    -1,   713,   370,   403,   713,
     142,   713,    -1,   713,   467,   370,   403,   713,    -1,   713,
     467,   370,   403,   713,   142,   713,    -1,   713,   212,   268,
      -1,   713,   213,    -1,   713,   212,   263,   268,    -1,   713,
     263,   268,    -1,   713,   266,    -1,   732,    15,   713,    -1,
     713,    15,   713,    -1,   732,   289,   732,    -1,   713,   212,
     410,    -1,   713,   212,   263,   410,    -1,   713,   212,   155,
      -1,   713,   212,   263,   155,    -1,   713,   212,   420,    -1,
     713,   212,   263,   420,    -1,   713,   212,   129,   167,   713,
      -1,   713,   212,   263,   129,   167,   713,    -1,   713,   212,
     273,   483,   743,   484,    -1,   713,   212,   263,   273,   483,
     743,   484,    -1,   713,    48,   764,   714,    33,   713,    -1,
     713,   467,    48,   764,   714,    33,   713,    -1,   713,    48,
     389,   714,    33,   713,    -1,   713,   467,    48,   389,   714,
      33,   713,    -1,   713,   191,   753,    -1,   713,   467,   191,
     753,    -1,   713,   738,   733,   614,    -1,   713,   738,   733,
     483,   713,   484,    -1,   114,    -1,   715,    -1,   714,    11,
     683,    -1,   474,   714,    -1,   475,   714,    -1,   714,   474,
     714,    -1,   714,   475,   714,    -1,   714,   476,   714,    -1,
     714,   477,   714,    -1,   714,   478,   714,    -1,   714,   479,
     714,    -1,   714,   470,   714,    -1,   714,   471,   714,    -1,
     714,   472,   714,    -1,   714,    16,   714,    -1,   714,    17,
     714,    -1,   714,    18,   714,    -1,   714,   736,   714,    -1,
     736,   714,    -1,   714,   736,    -1,   714,   212,   129,   167,
     714,    -1,   714,   212,   263,   129,   167,   714,    -1,   714,
     212,   273,   483,   743,   484,    -1,   714,   212,   263,   273,
     483,   743,   484,    -1,   759,    -1,   774,    -1,   488,   763,
      -1,    10,   763,    -1,   483,   713,   484,   763,    -1,   754,
      -1,   717,    -1,   614,    -1,   614,   762,    -1,   149,   614,
      -1,   773,   483,   484,    -1,   773,   483,   741,   627,   484,
      -1,   773,   483,   434,   742,   627,   484,    -1,   773,   483,
     741,   487,   434,   742,   627,   484,    -1,   773,   483,    27,
     741,   627,   484,    -1,   773,   483,   129,   741,   627,   484,
      -1,   773,   483,   476,   484,    -1,   716,   720,   721,   725,
      -1,   719,    -1,   716,    -1,   719,    -1,    74,   162,   483,
     713,   484,    -1,    98,    -1,   101,    -1,   101,   483,   775,
     484,    -1,   102,    -1,   102,   483,   775,   484,    -1,   231,
      -1,   231,   483,   775,   484,    -1,   232,    -1,   232,   483,
     775,   484,    -1,    99,    -1,   103,    -1,   364,    -1,   425,
      -1,    97,    -1,   100,    -1,    61,   483,   713,    36,   683,
     484,    -1,   154,   483,   744,   484,    -1,   290,   483,   746,
     484,    -1,   304,   483,   748,   484,    -1,   388,   483,   749,
     484,    -1,   407,   483,   713,    36,   683,   484,    -1,   409,
     483,    53,   752,   484,    -1,   409,   483,   222,   752,   484,
      -1,   409,   483,   404,   752,   484,    -1,   409,   483,   752,
     484,    -1,   269,   483,   713,   487,   713,   484,    -1,    72,
     483,   740,   484,    -1,   446,   176,   483,   628,   484,    -1,
      -1,   158,   483,   442,   713,   484,    -1,    -1,   444,   723,
      -1,    -1,   724,    -1,   723,   487,   724,    -1,   777,    36,
     726,    -1,   288,   726,    -1,   288,   777,    -1,    -1,   483,
     727,   728,   627,   729,   484,    -1,   777,    -1,    -1,   297,
      54,   740,    -1,    -1,   319,   730,    -1,   347,   730,    -1,
      -1,   731,    -1,    48,   731,    33,   731,    -1,   415,   306,
      -1,   415,   161,    -1,    96,   346,    -1,   713,   306,    -1,
     713,   161,    -1,   346,   483,   740,   484,    -1,   346,   483,
     484,    -1,   483,   740,   487,   713,   484,    -1,    34,    -1,
     375,    -1,    27,    -1,     8,    -1,   735,    -1,   474,    -1,
     475,    -1,   476,    -1,   477,    -1,   478,    -1,   479,    -1,
     470,    -1,   471,    -1,   472,    -1,    16,    -1,    17,    -1,
      18,    -1,     8,    -1,   280,   483,   739,   484,    -1,   734,
      -1,   280,   483,   739,   484,    -1,   734,    -1,   280,   483,
     739,   484,    -1,   226,    -1,   467,   226,    -1,   172,    -1,
     467,   172,    -1,   186,    -1,   467,   186,    -1,   734,    -1,
     777,   485,   739,    -1,   713,    -1,   740,   487,   713,    -1,
     742,    -1,   741,   487,   742,    -1,   713,    -1,   783,    13,
     713,    -1,   783,    14,   713,    -1,   683,    -1,   743,   487,
     683,    -1,   745,   167,   713,    -1,    -1,     3,    -1,   704,
      -1,   705,    -1,   706,    -1,   707,    -1,   708,    -1,   709,
      -1,   710,    -1,   711,    -1,   776,    -1,   713,   747,   750,
     751,    -1,   713,   747,   750,    -1,   301,   713,    -1,   714,
     191,   714,    -1,    -1,   713,   750,   751,    -1,   713,   751,
     750,    -1,   713,   750,    -1,   713,   751,    -1,   740,    -1,
      -1,   167,   713,    -1,   162,   713,    -1,   713,   167,   740,
      -1,   167,   740,    -1,   740,    -1,   614,    -1,   483,   740,
     484,    -1,    60,   758,   755,   757,   140,    -1,   756,    -1,
     755,   756,    -1,   441,   713,   400,   713,    -1,   136,   713,
      -1,    -1,   713,    -1,    -1,   777,    -1,   777,   762,    -1,
     485,   772,    -1,   485,   476,    -1,   481,   713,   482,    -1,
     481,   761,   489,   761,   482,    -1,   713,    -1,    -1,   760,
      -1,   762,   760,    -1,    -1,   763,   760,    -1,    40,    -1,
      -1,   766,    -1,    -1,   767,    -1,   766,   487,   767,    -1,
     713,    36,   785,    -1,   713,     3,    -1,   713,    -1,   476,
      -1,   769,    -1,   768,   487,   769,    -1,   777,    -1,   777,
     762,    -1,   771,    -1,   770,   487,   771,    -1,   777,    -1,
     784,    -1,   779,    -1,   777,   762,    -1,   775,    -1,     4,
      -1,   776,    -1,     6,    -1,     7,    -1,   773,   776,    -1,
     773,   483,   741,   627,   484,   776,    -1,   686,   776,    -1,
     702,   483,   713,   484,   712,    -1,   702,   775,   712,    -1,
     702,   776,   712,    -1,   410,    -1,   155,    -1,   268,    -1,
       9,    -1,     5,    -1,     3,    -1,   844,    -1,   845,    -1,
     777,    -1,     5,    -1,     3,    -1,   844,    -1,   846,    -1,
     777,    -1,   777,   781,    -1,   485,   772,    -1,   781,   485,
     772,    -1,   483,   770,   484,    -1,    -1,   779,    -1,     3,
      -1,   844,    -1,   845,    -1,   846,    -1,   847,    -1,   784,
      -1,     5,    -1,   308,   771,   787,    36,   788,    -1,   483,
     743,   484,    -1,    -1,   613,    -1,   508,    -1,   595,    -1,
     827,    -1,    92,   351,   777,   790,    -1,    92,   351,   185,
     263,   149,   777,   790,    -1,   790,   791,    -1,    -1,   540,
      -1,   792,    -1,   527,    -1,   839,    -1,    92,   798,   194,
     795,   796,   278,   769,   794,   483,   524,   484,   797,   679,
      -1,    92,   798,   194,   795,   185,   263,   149,   568,   278,
     769,   794,   483,   524,   484,   797,   679,    -1,   777,    -1,
     426,   793,    -1,    -1,    81,    -1,    -1,   568,    -1,    -1,
     445,   553,    -1,    -1,   419,    -1,    -1,    29,   392,   673,
     365,   351,   771,    -1,    29,   392,   185,   149,   673,   365,
     351,   771,    -1,    29,   359,   769,   365,   351,   771,    -1,
      29,   359,   185,   149,   769,   365,   351,   771,    -1,    29,
     438,   769,   365,   351,   771,    -1,    29,   438,   185,   149,
     769,   365,   351,   771,    -1,    68,    -1,   151,   107,   776,
     603,    -1,   190,   107,   776,    -1,   150,   806,    -1,   150,
     810,   804,   806,    -1,   150,   436,   806,    -1,   150,   483,
     809,   484,   806,    -1,   436,    -1,    -1,   811,    -1,   534,
      -1,    -1,   613,    -1,   508,    -1,   595,    -1,   827,    -1,
     841,    -1,     3,    -1,   844,    -1,   845,    -1,   846,    -1,
     807,    -1,   776,    -1,   812,    -1,   809,   487,   812,    -1,
      32,    -1,    31,    -1,   410,    -1,   155,    -1,   278,    -1,
     808,    -1,   813,   805,    -1,   807,    -1,   810,    -1,   365,
     815,    -1,   365,   230,   815,    -1,   365,   363,   815,    -1,
     816,    -1,   837,   167,    96,    -1,   401,   466,   818,    -1,
     351,   776,    -1,   837,   403,   819,    -1,   837,   472,   819,
      -1,   837,   403,   114,    -1,   837,   472,   114,    -1,   811,
      -1,   534,    -1,   776,    -1,     3,    -1,   702,   776,   712,
      -1,   702,   483,   775,   484,   776,    -1,   534,    -1,   114,
      -1,   230,    -1,   817,    -1,   819,   487,   817,    -1,   229,
     821,    -1,   776,    -1,   427,   824,   826,   804,    -1,   427,
     824,   826,   804,   769,    -1,   427,   824,   826,   804,   831,
      -1,   427,   483,   825,   484,    -1,   427,   483,   825,   484,
     769,   782,    -1,   810,    -1,   436,    -1,   166,    -1,   168,
      -1,     3,    -1,   168,    -1,    -1,   823,    -1,   825,   487,
     823,    -1,   166,    -1,    -1,   512,   119,   167,   828,   830,
     829,   517,    -1,   673,    -1,   673,   777,    -1,   673,    36,
     777,    -1,   442,   713,    -1,    -1,   426,   664,    -1,    -1,
     810,   804,    -1,   810,   804,   769,   782,    -1,   336,   834,
      -1,   837,    -1,    27,    -1,   833,    -1,   401,   466,    -1,
     405,   214,   225,    -1,   836,   613,    -1,   836,   837,    -1,
     836,   401,   466,    -1,   836,   405,   214,   225,    -1,   836,
      27,    -1,   369,    -1,   124,    -1,   777,    -1,   837,   485,
     777,    -1,    56,   716,    -1,    92,   584,   438,   769,   574,
     797,    36,   613,   840,    -1,    92,   283,   334,   584,   438,
     769,   574,   797,    36,   613,   840,    -1,    92,   584,   324,
     438,   769,   483,   578,   484,   797,    36,   613,   840,    -1,
      92,   283,   334,   584,   324,   438,   769,   483,   578,   484,
     797,    36,   613,   840,    -1,   445,    67,   281,    -1,   445,
      59,    67,   281,    -1,   445,   230,    67,   281,    -1,    -1,
      92,   584,   392,   843,    36,   613,   842,    -1,    92,   584,
     392,   185,   263,   149,   843,    36,   613,   842,    -1,   445,
     106,    -1,   445,   261,   106,    -1,    -1,   769,   574,   560,
     552,    -1,    19,    -1,    20,    -1,    21,    -1,    22,    -1,
      23,    -1,    24,    -1,    25,    -1,    26,    -1,    28,    -1,
      29,    -1,    30,    -1,    38,    -1,    39,    -1,    41,    -1,
      42,    -1,    43,    -1,    45,    -1,    46,    -1,    47,    -1,
      54,    -1,    55,    -1,    56,    -1,    57,    -1,    58,    -1,
      59,    -1,    62,    -1,    63,    -1,    66,    -1,    68,    -1,
      69,    -1,    70,    -1,    71,    -1,    76,    -1,    77,    -1,
      78,    -1,    79,    -1,    80,    -1,    82,    -1,    83,    -1,
      84,    -1,    86,    -1,    87,    -1,    88,    -1,    89,    -1,
      90,    -1,    91,    -1,    94,    -1,    95,    -1,    96,    -1,
     104,    -1,   105,    -1,   106,    -1,   107,    -1,   108,    -1,
     109,    -1,   110,    -1,   113,    -1,   115,    -1,   117,    -1,
     118,    -1,   119,    -1,   120,    -1,   121,    -1,   122,    -1,
     124,    -1,   125,    -1,   126,    -1,   127,    -1,   128,    -1,
     131,    -1,   132,    -1,   133,    -1,   134,    -1,   135,    -1,
     137,    -1,   138,    -1,   139,    -1,   141,    -1,   142,    -1,
     143,    -1,   145,    -1,   146,    -1,   147,    -1,   148,    -1,
     150,    -1,   151,    -1,   152,    -1,   153,    -1,   156,    -1,
     158,    -1,   159,    -1,   161,    -1,   163,    -1,   165,    -1,
     169,    -1,   170,    -1,   171,    -1,   173,    -1,   175,    -1,
     178,    -1,   180,    -1,   181,    -1,   182,    -1,   183,    -1,
     184,    -1,   185,    -1,   187,    -1,   188,    -1,   189,    -1,
     190,    -1,   192,    -1,   193,    -1,   194,    -1,   195,    -1,
     196,    -1,   197,    -1,   199,    -1,   202,    -1,   203,    -1,
     204,    -1,   205,    -1,   211,    -1,   214,    -1,   216,    -1,
     217,    -1,   218,    -1,   219,    -1,   220,    -1,   223,    -1,
     225,    -1,   228,    -1,   229,    -1,   230,    -1,   233,    -1,
     234,    -1,   235,    -1,   236,    -1,   237,    -1,   238,    -1,
     239,    -1,   240,    -1,   241,    -1,   242,    -1,   243,    -1,
     244,    -1,   245,    -1,   246,    -1,   247,    -1,   248,    -1,
     249,    -1,   250,    -1,   251,    -1,   252,    -1,   253,    -1,
     254,    -1,   255,    -1,   259,    -1,   260,    -1,   261,    -1,
     264,    -1,   265,    -1,   267,    -1,   270,    -1,   272,    -1,
     273,    -1,   274,    -1,   276,    -1,   277,    -1,   280,    -1,
     281,    -1,   282,    -1,   285,    -1,   288,    -1,   291,    -1,
     292,    -1,   293,    -1,   294,    -1,   295,    -1,   296,    -1,
     297,    -1,   298,    -1,   299,    -1,   300,    -1,   302,    -1,
     303,    -1,   305,    -1,   306,    -1,   308,    -1,   309,    -1,
     310,    -1,   312,    -1,   313,    -1,   314,    -1,   315,    -1,
     316,    -1,   317,    -1,   318,    -1,   319,    -1,   320,    -1,
     322,    -1,   323,    -1,   324,    -1,   325,    -1,   327,    -1,
     328,    -1,   329,    -1,   330,    -1,   331,    -1,   332,    -1,
     333,    -1,   334,    -1,   335,    -1,   336,    -1,   337,    -1,
     338,    -1,   340,    -1,   341,    -1,   343,    -1,   344,    -1,
     345,    -1,   347,    -1,   348,    -1,   349,    -1,   350,    -1,
     351,    -1,   352,    -1,   353,    -1,   354,    -1,   355,    -1,
     356,    -1,   357,    -1,   359,    -1,   360,    -1,   361,    -1,
     362,    -1,   363,    -1,   365,    -1,   367,    -1,   368,    -1,
     369,    -1,   371,    -1,   372,    -1,   374,    -1,   376,    -1,
     377,    -1,   378,    -1,   379,    -1,   380,    -1,   381,    -1,
     382,    -1,   383,    -1,   384,    -1,   385,    -1,   386,    -1,
     387,    -1,   390,    -1,   391,    -1,   393,    -1,   395,    -1,
     396,    -1,   397,    -1,   398,    -1,   399,    -1,   405,    -1,
     406,    -1,   408,    -1,   411,    -1,   412,    -1,   413,    -1,
     414,    -1,   415,    -1,   416,    -1,   417,    -1,   420,    -1,
     421,    -1,   422,    -1,   423,    -1,   424,    -1,   427,    -1,
     428,    -1,   429,    -1,   430,    -1,   431,    -1,   435,    -1,
     437,    -1,   438,    -1,   439,    -1,   440,    -1,   443,    -1,
     446,    -1,   447,    -1,   448,    -1,   449,    -1,   450,    -1,
     451,    -1,   463,    -1,   464,    -1,   465,    -1,   466,    -1,
      48,    -1,    49,    -1,    51,    -1,    52,    -1,    64,    -1,
      65,    -1,    72,    -1,   111,    -1,   112,    -1,   149,    -1,
     154,    -1,   160,    -1,   177,    -1,   201,    -1,   206,    -1,
     207,    -1,   209,    -1,   256,    -1,   258,    -1,   262,    -1,
     269,    -1,   271,    -1,   286,    -1,   290,    -1,   304,    -1,
     307,    -1,   321,    -1,   346,    -1,   366,    -1,   373,    -1,
     388,    -1,   401,    -1,   402,    -1,   407,    -1,   409,    -1,
     432,    -1,   433,    -1,   452,    -1,   453,    -1,   454,    -1,
     455,    -1,   456,    -1,   457,    -1,   458,    -1,   459,    -1,
     460,    -1,   461,    -1,   462,    -1,    44,    -1,    50,    -1,
      74,    -1,    81,    -1,    93,    -1,   100,    -1,   166,    -1,
     168,    -1,   172,    -1,   186,    -1,   200,    -1,   212,    -1,
     213,    -1,   215,    -1,   224,    -1,   226,    -1,   257,    -1,
     266,    -1,   287,    -1,   289,    -1,   342,    -1,   370,    -1,
     394,    -1,   436,    -1,    27,    -1,    31,    -1,    32,    -1,
      33,    -1,    34,    -1,    35,    -1,    36,    -1,    37,    -1,
      40,    -1,    53,    -1,    60,    -1,    61,    -1,    67,    -1,
      73,    -1,    75,    -1,    85,    -1,    92,    -1,    97,    -1,
      98,    -1,    99,    -1,   101,    -1,   102,    -1,   103,    -1,
     114,    -1,   116,    -1,   123,    -1,   129,    -1,   130,    -1,
     136,    -1,   140,    -1,   144,    -1,   155,    -1,   157,    -1,
     162,    -1,   164,    -1,   167,    -1,   174,    -1,   176,    -1,
     179,    -1,   191,    -1,   198,    -1,   208,    -1,   210,    -1,
     221,    -1,   222,    -1,   227,    -1,   231,    -1,   232,    -1,
     263,    -1,   268,    -1,   275,    -1,   278,    -1,   279,    -1,
     283,    -1,   284,    -1,   301,    -1,   311,    -1,   326,    -1,
     339,    -1,   358,    -1,   364,    -1,   375,    -1,   389,    -1,
     392,    -1,   400,    -1,   403,    -1,   404,    -1,   410,    -1,
     418,    -1,   419,    -1,   425,    -1,   426,    -1,   434,    -1,
     441,    -1,   442,    -1,   444,    -1,   445,    -1
};

/* YYRLINE[YYN] -- source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,   456,   456,   472,   484,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   527,     9,
      18,    27,    36,    45,    54,    63,    72,    85,    87,    93,
      94,    99,   103,   107,   118,   126,   130,   139,   148,   157,
     166,   175,   184,   192,   200,   209,   218,   227,   236,   253,
     262,   271,   280,   290,   303,   318,   327,   335,   350,   358,
     368,   378,   385,   392,   400,   407,   418,   419,   424,   428,
     433,   438,   446,   447,   452,   456,   457,     7,    13,    19,
      25,     6,    15,    25,    35,    45,    55,    65,    75,    85,
      95,   106,   117,   127,   140,   141,     8,    21,    27,    34,
      40,    47,    57,    61,    70,    79,    88,    95,    96,   101,
     113,   118,   143,   153,   163,   169,   180,   191,   206,   207,
     213,   214,   219,   220,   226,   227,   231,   232,   237,   239,
     245,   246,   250,   251,   256,     7,    14,    22,     9,    19,
      32,    33,     7,    14,    31,    51,    52,     9,    17,    29,
      30,    34,    35,    36,    41,    42,    43,    48,    52,    56,
      60,    64,    68,    72,    76,    80,    84,    88,    92,    97,
     101,   105,   112,   113,   117,   118,   119,     2,     9,    15,
      21,    28,    35,    45,    46,    47,     7,    21,    41,    42,
      69,    70,    71,    72,    73,    74,    78,    79,    84,    89,
      90,    91,    92,    93,    98,   105,   106,   107,   124,   131,
     138,   148,   158,   170,   179,   188,   207,   214,   219,   221,
     223,   225,   228,   233,   234,   238,   239,   240,   241,   246,
     250,   251,   256,   263,   268,   269,   270,   271,   272,   273,
     274,   275,   281,   282,   286,   291,   298,   305,   312,   324,
     325,   326,   327,   331,   336,   337,   338,   343,   348,   349,
     350,   351,   352,   353,   358,   381,   385,   392,   393,   397,
     401,   402,   403,   407,   411,   419,   420,   425,   426,   430,
     438,   439,   444,   445,   449,   454,   458,   462,   467,   475,
     476,   480,   481,   487,   498,   511,   525,   539,   553,   567,
     590,   594,   601,   605,   613,   618,   625,   635,   636,   637,
     638,   639,   646,   653,   654,   659,   660,     9,    19,    29,
      39,    49,    59,    73,    74,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    86,    87,    92,    93,
      94,    95,    96,    97,    98,   103,   104,   109,   110,   111,
     116,   117,   118,     7,    18,    19,    23,    27,     7,     1,
      30,    53,    54,    59,    63,    68,    72,    80,    81,    85,
      86,    91,    92,    96,    97,   102,   103,   104,   105,   106,
     111,   119,   123,   128,   129,   134,   138,   143,   147,   151,
     155,   159,   163,   167,   171,   175,   179,   183,   187,   191,
     195,   203,   209,   210,   211,   216,   220,    47,    48,    52,
      53,    68,    69,    76,    84,    92,   100,   108,   116,   127,
     128,   155,   170,   186,   187,   206,   210,   214,   231,   238,
     245,   255,   256,   259,   271,   282,   290,   295,   300,   305,
     310,   318,   326,   331,   336,   343,   344,   348,   349,   350,
     357,   358,   362,   363,   367,   368,   372,   376,   377,   380,
     389,   400,   401,   402,   405,   406,   407,   411,   412,   413,
     414,   418,   419,   423,   425,   441,   443,   448,   451,   459,
     463,   467,   471,   475,   479,   486,   491,   498,   499,   503,
     507,   511,   515,   522,   529,   530,   535,   536,   540,   541,
     549,   569,   570,   572,   577,   578,   582,   583,   586,   587,
     612,   613,   617,   618,   622,   623,   627,   640,   641,   645,
     646,   650,   651,   655,   656,   660,   671,   672,   673,   674,
     678,   679,   684,   685,   686,   695,   701,   719,   720,   724,
     725,   731,   737,   745,   753,   789,   815,   819,   845,   849,
     862,   876,   891,   903,   919,   925,   930,   936,   943,   944,
     952,   956,   960,   966,   973,   978,   979,   980,   981,   985,
     986,   998,   999,  1004,  1011,  1018,  1025,  1057,  1068,  1081,
    1086,  1087,  1090,  1091,  1094,  1095,  1100,  1101,  1106,  1110,
    1116,  1137,  1145,  1157,  1162,  1169,  1174,  1180,  1185,  1194,
    1196,  1199,  1203,  1204,  1205,  1206,  1207,  1208,  1213,  1233,
    1234,  1235,  1236,  1247,  1253,  1261,  1262,  1268,  1273,  1278,
    1283,  1288,  1293,  1298,  1303,  1309,  1315,  1321,  1328,  1350,
    1359,  1363,  1371,  1375,  1383,  1395,  1416,  1420,  1426,  1430,
    1443,  1451,  1461,  1463,  1465,  1467,  1469,  1471,  1476,  1477,
    1484,  1493,  1501,  1510,  1521,  1529,  1530,  1531,  1535,  1535,
    1538,  1538,  1541,  1541,  1544,  1544,  1547,  1547,  1550,  1550,
    1553,  1553,  1556,  1556,  1559,  1561,  1563,  1565,  1567,  1569,
    1571,  1573,  1575,  1580,  1585,  1591,  1598,  1603,  1609,  1615,
    1646,  1648,  1650,  1658,  1673,  1675,  1677,  1679,  1681,  1683,
    1685,  1687,  1689,  1691,  1693,  1695,  1697,  1699,  1702,  1704,
    1706,  1709,  1711,  1713,  1715,  1718,  1723,  1728,  1735,  1740,
    1747,  1752,  1760,  1765,  1774,  1782,  1790,  1798,  1816,  1824,
    1832,  1840,  1848,  1856,  1864,  1872,  1888,  1896,  1904,  1912,
    1920,  1928,  1936,  1940,  1944,  1948,  1952,  1960,  1968,  1976,
    1984,  2004,  2026,  2037,  2044,  2069,  2071,  2073,  2075,  2077,
    2079,  2081,  2083,  2085,  2087,  2089,  2091,  2093,  2095,  2097,
    2099,  2101,  2103,  2105,  2107,  2111,  2115,  2119,  2133,  2134,
    2135,  2147,  2162,  2174,  2176,  2178,  2189,  2213,  2226,  2230,
    2236,  2243,  2250,  2260,  2267,  2295,  2330,  2341,  2342,  2349,
    2355,  2359,  2363,  2367,  2371,  2375,  2379,  2383,  2387,  2391,
    2395,  2399,  2403,  2407,  2411,  2415,  2417,  2421,  2430,  2435,
    2442,  2457,  2464,  2468,  2472,  2476,  2480,  2494,  2495,  2499,
    2500,  2508,  2509,  2513,  2514,  2519,  2527,  2529,  2543,  2546,
    2573,  2574,  2577,  2578,  2589,  2607,  2614,  2623,  2640,  2685,
    2693,  2701,  2709,  2717,  2738,  2739,  2740,  2743,  2744,  2745,
    2748,  2749,  2752,  2753,  2754,  2755,  2756,  2757,  2758,  2759,
    2760,  2761,  2762,  2763,  2766,  2768,  2773,  2775,  2780,  2782,
    2784,  2786,  2788,  2790,  2792,  2794,  2808,  2810,  2814,  2818,
    2825,  2829,  2835,  2839,  2848,  2859,  2860,  2864,  2868,  2875,
    2876,  2877,  2878,  2879,  2880,  2881,  2882,  2883,  2884,  2894,
    2898,  2905,  2912,  2913,  2929,  2933,  2938,  2942,  2957,  2962,
    2966,  2969,  2972,  2973,  2974,  2977,  2984,  2994,  3008,  3009,
    3013,  3024,  3025,  3028,  3029,  3032,  3036,  3043,  3047,  3051,
    3059,  3070,  3071,  3075,  3076,  3080,  3081,  3084,  3085,  3095,
    3096,  3100,  3101,  3104,  3120,  3128,  3136,  3158,  3159,  3170,
    3174,  3201,  3203,  3208,  3210,  3220,  3222,  3233,  3237,  3241,
    3245,  3249,  3258,  3265,  3297,  3301,  3305,  3309,  3313,  3317,
    3321,  3327,  3328,  3344,  3345,  3346,  3349,  3350,  3355,  3356,
    3357,  3360,  3361,  3364,  3366,  3371,  3372,  3375,  3383,  3384,
    3385,  3386,  3387,  3390,  3391,     7,    18,    19,    23,    24,
      25,    26,     7,    16,    34,    41,    46,    47,    48,    49,
       8,    33,    62,    66,    67,    72,    73,    78,    79,    83,
      84,    89,    90,     7,    16,    25,    34,    43,    52,     5,
       7,    20,     9,    16,    26,    33,    44,    45,    50,    51,
      52,    57,    58,    59,    60,    61,    65,    66,    67,    68,
      73,    74,    79,    83,    91,    92,    97,    98,    99,   105,
     110,   118,   119,    10,    16,    22,    32,    33,    41,    52,
      64,    72,    80,    87,    97,    99,   105,   109,   113,   128,
     135,   136,   137,   141,   142,     7,    16,     8,    22,    36,
      48,    56,    70,    71,    72,    73,    74,    87,    88,    93,
      94,    98,    99,     7,    21,    25,    32,    43,    44,    50,
      51,     9,    19,     2,     7,    14,    24,    25,    32,     3,
      10,    16,    22,    28,    37,    37,    39,    40,     6,     8,
      21,    34,    52,    74,    75,    76,    77,    11,    24,    41,
      42,    43,    48,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      63,    63,    63,    63,    63,    63,    63,    63,    63,    63,
      63,    63,    63,    63,    63,    63,    63,    63,    63,    63,
      63,    63,    63,    63,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || YYTOKEN_TABLE
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "IDENT", "FCONST", "SCONST", "BCONST",
  "XCONST", "Op", "ICONST", "PARAM", "TYPECAST", "DOT_DOT", "COLON_EQUALS",
  "EQUALS_GREATER", "LAMBDA_ARROW", "LESS_EQUALS", "GREATER_EQUALS",
  "NOT_EQUALS", "ABORT_P", "ABSOLUTE_P", "ACCESS", "ACTION", "ADD_P",
  "ADMIN", "AFTER", "AGGREGATE", "ALL", "ALSO", "ALTER", "ALWAYS",
  "ANALYSE", "ANALYZE", "AND", "ANY", "ARRAY", "AS", "ASC_P", "ASSERTION",
  "ASSIGNMENT", "ASYMMETRIC", "AT", "ATTACH", "ATTRIBUTE", "AUTHORIZATION",
  "BACKWARD", "BEFORE", "BEGIN_P", "BETWEEN", "BIGINT", "BINARY", "BIT",
  "BOOLEAN_P", "BOTH", "BY", "CACHE", "CALL_P", "CALLED", "CASCADE",
  "CASCADED", "CASE", "CAST", "CATALOG_P", "CHAIN", "CHAR_P", "CHARACTER",
  "CHARACTERISTICS", "CHECK_P", "CHECKPOINT", "CLASS", "CLOSE", "CLUSTER",
  "COALESCE", "COLLATE", "COLLATION", "COLUMN", "COLUMNS", "COMMENT",
  "COMMENTS", "COMMIT", "COMMITTED", "CONCURRENTLY", "CONFIGURATION",
  "CONFLICT", "CONNECTION", "CONSTRAINT", "CONSTRAINTS", "CONTENT_P",
  "CONTINUE_P", "CONVERSION_P", "COPY", "COST", "CREATE_P", "CROSS", "CSV",
  "CUBE", "CURRENT_P", "CURRENT_CATALOG", "CURRENT_DATE", "CURRENT_ROLE",
  "CURRENT_SCHEMA", "CURRENT_TIME", "CURRENT_TIMESTAMP", "CURRENT_USER",
  "CURSOR", "CYCLE", "DATA_P", "DATABASE", "DAY_P", "DAYS_P", "DEALLOCATE",
  "DEC", "DECIMAL_P", "DECLARE", "DEFAULT", "DEFAULTS", "DEFERRABLE",
  "DEFERRED", "DEFINER", "DELETE_P", "DELIMITER", "DELIMITERS", "DEPENDS",
  "DESC_P", "DESCRIBE", "DETACH", "DICTIONARY", "DISABLE_P", "DISCARD",
  "DISTINCT", "DO", "DOCUMENT_P", "DOMAIN_P", "DOUBLE_P", "DROP", "EACH",
  "ELSE", "ENABLE_P", "ENCODING", "ENCRYPTED", "END_P", "ENUM_P", "ESCAPE",
  "EVENT", "EXCEPT", "EXCLUDE", "EXCLUDING", "EXCLUSIVE", "EXECUTE",
  "EXISTS", "EXPLAIN", "EXPORT_P", "EXTENSION", "EXTERNAL", "EXTRACT",
  "FALSE_P", "FAMILY", "FETCH", "FILTER", "FIRST_P", "FLOAT_P",
  "FOLLOWING", "FOR", "FORCE", "FOREIGN", "FORWARD", "FREEZE", "FROM",
  "FULL", "FUNCTION", "FUNCTIONS", "GENERATED", "GLOB", "GLOBAL", "GRANT",
  "GRANTED", "GROUP_P", "GROUPING", "HANDLER", "HAVING", "HEADER_P",
  "HOLD", "HOUR_P", "HOURS_P", "IDENTITY_P", "IF_P", "ILIKE", "IMMEDIATE",
  "IMMUTABLE", "IMPLICIT_P", "IMPORT_P", "IN_P", "INCLUDING", "INCREMENT",
  "INDEX", "INDEXES", "INHERIT", "INHERITS", "INITIALLY", "INLINE_P",
  "INNER_P", "INOUT", "INPUT_P", "INSENSITIVE", "INSERT", "INSTEAD",
  "INT_P", "INTEGER", "INTERSECT", "INTERVAL", "INTO", "INVOKER", "IS",
  "ISNULL", "ISOLATION", "JOIN", "KEY", "LABEL", "LANGUAGE", "LARGE_P",
  "LAST_P", "LATERAL_P", "LEADING", "LEAKPROOF", "LEFT", "LEVEL", "LIKE",
  "LIMIT", "LISTEN", "LOAD", "LOCAL", "LOCALTIME", "LOCALTIMESTAMP",
  "LOCATION", "LOCK_P", "LOCKED", "LOGGED", "MACRO", "MAPPING", "MATCH",
  "MATERIALIZED", "MAXVALUE", "METHOD", "MICROSECOND_P", "MICROSECONDS_P",
  "MILLISECOND_P", "MILLISECONDS_P", "MINUTE_P", "MINUTES_P", "MINVALUE",
  "MODE", "MONTH_P", "MONTHS_P", "MOVE", "NAME_P", "NAMES", "NATIONAL",
  "NATURAL", "NCHAR", "NEW", "NEXT", "NO", "NONE", "NOT", "NOTHING",
  "NOTIFY", "NOTNULL", "NOWAIT", "NULL_P", "NULLIF", "NULLS_P", "NUMERIC",
  "OBJECT_P", "OF", "OFF", "OFFSET", "OIDS", "OLD", "ON", "ONLY",
  "OPERATOR", "OPTION", "OPTIONS", "OR", "ORDER", "ORDINALITY", "OUT_P",
  "OUTER_P", "OVER", "OVERLAPS", "OVERLAY", "OVERRIDING", "OWNED", "OWNER",
  "PARALLEL", "PARSER", "PARTIAL", "PARTITION", "PASSING", "PASSWORD",
  "PERCENT", "PLACING", "PLANS", "POLICY", "POSITION", "PRAGMA_P",
  "PRECEDING", "PRECISION", "PREPARE", "PREPARED", "PRESERVE", "PRIMARY",
  "PRIOR", "PRIVILEGES", "PROCEDURAL", "PROCEDURE", "PROGRAM",
  "PUBLICATION", "QUOTE", "RANGE", "READ_P", "REAL", "REASSIGN", "RECHECK",
  "RECURSIVE", "REF", "REFERENCES", "REFERENCING", "REFRESH", "REINDEX",
  "RELATIVE_P", "RELEASE", "RENAME", "REPEATABLE", "REPLACE", "REPLICA",
  "RESET", "RESTART", "RESTRICT", "RETURNING", "RETURNS", "REVOKE",
  "RIGHT", "ROLE", "ROLLBACK", "ROLLUP", "ROW", "ROWS", "RULE", "SAMPLE",
  "SAVEPOINT", "SCHEMA", "SCHEMAS", "SCROLL", "SEARCH", "SECOND_P",
  "SECONDS_P", "SECURITY", "SELECT", "SEQUENCE", "SEQUENCES",
  "SERIALIZABLE", "SERVER", "SESSION", "SESSION_USER", "SET", "SETOF",
  "SETS", "SHARE", "SHOW", "SIMILAR", "SIMPLE", "SKIP", "SMALLINT",
  "SNAPSHOT", "SOME", "SQL_P", "STABLE", "STANDALONE_P", "START",
  "STATEMENT", "STATISTICS", "STDIN", "STDOUT", "STORAGE", "STRICT_P",
  "STRIP_P", "SUBSCRIPTION", "SUBSTRING", "SYMMETRIC", "SYSID", "SYSTEM_P",
  "TABLE", "TABLES", "TABLESAMPLE", "TABLESPACE", "TEMP", "TEMPLATE",
  "TEMPORARY", "TEXT_P", "THEN", "TIME", "TIMESTAMP", "TO", "TRAILING",
  "TRANSACTION", "TRANSFORM", "TREAT", "TRIGGER", "TRIM", "TRUE_P",
  "TRUNCATE", "TRUSTED", "TYPE_P", "TYPES_P", "UNBOUNDED", "UNCOMMITTED",
  "UNENCRYPTED", "UNION", "UNIQUE", "UNKNOWN", "UNLISTEN", "UNLOGGED",
  "UNTIL", "UPDATE", "USER", "USING", "VACUUM", "VALID", "VALIDATE",
  "VALIDATOR", "VALUE_P", "VALUES", "VARCHAR", "VARIADIC", "VARYING",
  "VERBOSE", "VERSION_P", "VIEW", "VIEWS", "VOLATILE", "WHEN", "WHERE",
  "WHITESPACE_P", "WINDOW", "WITH", "WITHIN", "WITHOUT", "WORK", "WRAPPER",
  "WRITE_P", "XML_P", "XMLATTRIBUTES", "XMLCONCAT", "XMLELEMENT",
  "XMLEXISTS", "XMLFOREST", "XMLNAMESPACES", "XMLPARSE", "XMLPI",
  "XMLROOT", "XMLSERIALIZE", "XMLTABLE", "YEAR_P", "YEARS_P", "YES_P",
  "ZONE", "NOT_LA", "NULLS_LA", "WITH_LA", "'<'", "'>'", "'='",
  "POSTFIXOP", "'+'", "'-'", "'*'", "'/'", "'%'", "'^'", "UMINUS", "'['",
  "']'", "'('", "')'", "'.'", "';'", "','", "'?'", "':'", "$accept",
  "stmtblock", "stmtmulti", "stmt", "AlterTableStmt",
  "alter_identity_column_option_list", "alter_column_default",
  "alter_identity_column_option", "alter_generic_option_list",
  "alter_table_cmd", "alter_using", "alter_generic_option_elem",
  "alter_table_cmds", "alter_generic_options", "opt_set_data",
  "DeallocateStmt", "RenameStmt", "opt_column", "InsertStmt",
  "insert_rest", "insert_target", "opt_conf_expr", "opt_with_clause",
  "insert_column_item", "set_clause", "opt_on_conflict", "index_elem",
  "returning_clause", "override_kind", "set_target_list", "opt_collate",
  "opt_class", "insert_column_list", "set_clause_list", "index_params",
  "set_target", "PragmaStmt", "CreateSeqStmt", "OptSeqOptList",
  "ExecuteStmt", "execute_param_clause", "AlterSeqStmt", "SeqOptList",
  "opt_with", "NumericOnly", "SeqOptElem", "opt_by", "SignedIconst",
  "TransactionStmt", "opt_transaction", "CreateStmt",
  "ConstraintAttributeSpec", "def_arg", "OptParenthesizedSeqOptList",
  "generic_option_arg", "key_action", "ColConstraint", "ColConstraintElem",
  "generic_option_elem", "key_update", "key_actions",
  "create_generic_options", "OnCommitOption", "reloptions",
  "opt_no_inherit", "TableConstraint", "TableLikeOption", "reloption_list",
  "ExistingIndex", "ConstraintAttr", "OptWith", "definition",
  "TableLikeOptionList", "generic_option_name", "ConstraintAttributeElem",
  "columnDef", "generic_option_list", "def_list", "index_name",
  "TableElement", "def_elem", "opt_definition", "OptTableElementList",
  "columnElem", "opt_column_list", "ColQualList", "key_delete",
  "reloption_elem", "columnList", "func_type", "ConstraintElem",
  "TableElementList", "key_match", "TableLikeClause", "OptTemp",
  "generated_when", "DropStmt", "drop_type_any_name", "drop_type_name",
  "any_name_list", "opt_drop_behavior", "drop_type_name_on_any_name",
  "CreateFunctionStmt", "macro_alias", "param_list", "UpdateStmt",
  "CopyStmt", "copy_from", "copy_delimiter", "copy_generic_opt_arg_list",
  "opt_using", "opt_as", "opt_program", "copy_options",
  "copy_generic_opt_arg", "copy_generic_opt_elem", "opt_oids",
  "copy_opt_list", "opt_binary", "copy_opt_item",
  "copy_generic_opt_arg_list_item", "copy_file_name",
  "copy_generic_opt_list", "SelectStmt", "select_with_parens",
  "select_no_parens", "select_clause", "simple_select", "with_clause",
  "cte_list", "common_table_expr", "into_clause", "OptTempTableName",
  "opt_table", "all_or_distinct", "distinct_clause", "opt_all_clause",
  "opt_sort_clause", "sort_clause", "sortby_list", "sortby",
  "opt_asc_desc", "opt_nulls_order", "select_limit", "opt_select_limit",
  "limit_clause", "offset_clause", "sample_count", "sample_clause",
  "opt_sample_func", "tablesample_entry", "tablesample_clause",
  "opt_tablesample_clause", "opt_repeatable_clause", "select_limit_value",
  "select_offset_value", "select_fetch_first_value", "I_or_F_const",
  "row_or_rows", "first_or_next", "group_clause", "group_by_list",
  "group_by_item", "empty_grouping_set", "having_clause",
  "for_locking_clause", "opt_for_locking_clause", "for_locking_items",
  "for_locking_item", "for_locking_strength", "locked_rels_list",
  "opt_nowait_or_skip", "values_clause", "from_clause", "from_list",
  "table_ref", "joined_table", "alias_clause", "opt_alias_clause",
  "func_alias_clause", "join_type", "join_outer", "join_qual",
  "relation_expr", "func_table", "rowsfrom_item", "rowsfrom_list",
  "opt_col_def_list", "opt_ordinality", "where_clause",
  "TableFuncElementList", "TableFuncElement", "opt_collate_clause",
  "Typename", "opt_array_bounds", "SimpleTypename", "ConstTypename",
  "GenericType", "opt_type_modifiers", "Numeric", "opt_float", "Bit",
  "ConstBit", "BitWithLength", "BitWithoutLength", "Character",
  "ConstCharacter", "CharacterWithLength", "CharacterWithoutLength",
  "character", "opt_varying", "ConstDatetime", "ConstInterval",
  "opt_timezone", "year_keyword", "month_keyword", "day_keyword",
  "hour_keyword", "minute_keyword", "second_keyword",
  "millisecond_keyword", "microsecond_keyword", "opt_interval", "a_expr",
  "b_expr", "c_expr", "func_application", "func_expr",
  "func_expr_windowless", "func_expr_common_subexpr",
  "within_group_clause", "filter_clause", "window_clause",
  "window_definition_list", "window_definition", "over_clause",
  "window_specification", "opt_existing_window_name",
  "opt_partition_clause", "opt_frame_clause", "frame_extent",
  "frame_bound", "row", "sub_type", "all_Op", "MathOp", "qual_Op",
  "qual_all_Op", "subquery_Op", "any_operator", "expr_list",
  "func_arg_list", "func_arg_expr", "type_list", "extract_list",
  "extract_arg", "overlay_list", "overlay_placing", "position_list",
  "substr_list", "substr_from", "substr_for", "trim_list", "in_expr",
  "case_expr", "when_clause_list", "when_clause", "case_default",
  "case_arg", "columnref", "indirection_el", "opt_slice_bound",
  "indirection", "opt_indirection", "opt_asymmetric", "opt_target_list",
  "target_list", "target_el", "qualified_name_list", "qualified_name",
  "name_list", "name", "attr_name", "func_name", "AexprConst", "Iconst",
  "Sconst", "ColId", "ColIdOrString", "type_function_name", "any_name",
  "attrs", "opt_name_list", "param_name", "ColLabel", "ColLabelOrString",
  "PrepareStmt", "prep_type_clause", "PreparableStmt", "CreateSchemaStmt",
  "OptSchemaEltList", "schema_stmt", "IndexStmt", "access_method",
  "access_method_clause", "opt_concurrently", "opt_index_name",
  "opt_reloptions", "opt_unique", "AlterObjectSchemaStmt",
  "CheckPointStmt", "ExportStmt", "ImportStmt", "ExplainStmt",
  "opt_verbose", "explain_option_arg", "ExplainableStmt",
  "NonReservedWord", "NonReservedWord_or_Sconst", "explain_option_list",
  "analyze_keyword", "opt_boolean_or_string", "explain_option_elem",
  "explain_option_name", "VariableSetStmt", "set_rest", "generic_set",
  "var_value", "zone_value", "var_list", "LoadStmt", "file_name",
  "VacuumStmt", "vacuum_option_elem", "opt_full", "vacuum_option_list",
  "opt_freeze", "DeleteStmt", "relation_expr_opt_alias",
  "where_or_current_clause", "using_clause", "AnalyzeStmt",
  "VariableResetStmt", "generic_reset", "reset_rest", "VariableShowStmt",
  "show_or_describe", "var_name", "CallStmt", "ViewStmt",
  "opt_check_option", "CreateAsStmt", "opt_with_data", "create_as_target",
  "unreserved_keyword", "col_name_keyword", "type_func_name_keyword",
  "reserved_keyword", 0
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[YYLEX-NUM] -- Internal token number corresponding to
   token YYLEX-NUM.  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
      60,    62,    61,   725,    43,    45,    42,    47,    37,    94,
     726,    91,    93,    40,    41,    46,    59,    44,    63,    58
};
# endif

/* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   490,   491,   492,   492,   493,   493,   493,   493,   493,
     493,   493,   493,   493,   493,   493,   493,   493,   493,   493,
     493,   493,   493,   493,   493,   493,   493,   493,   493,   493,
     493,   493,   493,   493,   493,   493,   493,   493,   493,   494,
     494,   494,   494,   494,   494,   494,   494,   495,   495,   496,
     496,   497,   497,   497,   497,   498,   498,   499,   499,   499,
     499,   499,   499,   499,   499,   499,   499,   499,   499,   499,
     499,   499,   499,   499,   499,   499,   499,   499,   499,   499,
     499,   499,   499,   499,   499,   499,   500,   500,   501,   501,
     501,   501,   502,   502,   503,   504,   504,   505,   505,   505,
     505,   506,   506,   506,   506,   506,   506,   506,   506,   506,
     506,   506,   506,   506,   507,   507,   508,   509,   509,   509,
     509,   509,   510,   510,   511,   511,   511,   512,   512,   513,
     514,   514,   515,   515,   515,   516,   516,   516,   517,   517,
     518,   518,   519,   519,   520,   520,   521,   521,   522,   522,
     523,   523,   524,   524,   525,   526,   526,   526,   527,   527,
     528,   528,   529,   529,   529,   530,   530,   531,   531,   532,
     532,   533,   533,   533,   534,   534,   534,   534,   535,   535,
     535,   535,   535,   535,   535,   535,   535,   535,   535,   535,
     535,   535,   536,   536,   537,   537,   537,   538,   538,   538,
     538,   538,   538,   539,   539,   539,   540,   540,   541,   541,
     542,   542,   542,   542,   542,   542,   543,   543,   544,   545,
     545,   545,   545,   545,   546,   546,   546,   546,   547,   547,
     547,   547,   547,   547,   547,   547,   548,   549,   550,   550,
     550,   550,   550,   551,   551,   552,   552,   552,   552,   553,
     554,   554,   555,   555,   556,   556,   556,   556,   556,   556,
     556,   556,   557,   557,   558,   559,   559,   559,   559,   560,
     560,   560,   560,   561,   562,   562,   562,   563,   564,   564,
     564,   564,   564,   564,   565,   566,   566,   567,   567,   568,
     569,   569,   569,   570,   570,   571,   571,   572,   572,   573,
     574,   574,   575,   575,   576,   577,   577,   577,   577,   578,
     578,   579,   579,   579,   580,   580,   580,   580,   580,   580,
     581,   581,   582,   582,   582,   582,   583,   584,   584,   584,
     584,   584,   584,   584,   584,   585,   585,   586,   586,   586,
     586,   586,   586,   587,   587,   587,   587,   587,   587,   587,
     587,   587,   587,   587,   587,   587,   587,   587,   588,   588,
     588,   588,   588,   588,   588,   589,   589,   590,   590,   590,
     591,   591,   591,   592,   593,   593,   594,   594,   595,   596,
     596,   597,   597,   598,   598,   599,   599,   600,   600,   601,
     601,   602,   602,   603,   603,   604,   604,   604,   604,   604,
     605,   606,   606,   607,   607,   608,   608,   609,   609,   609,
     609,   609,   609,   609,   609,   609,   609,   609,   609,   609,
     609,   610,   611,   611,   611,   612,   612,   613,   613,   614,
     614,   615,   615,   615,   615,   615,   615,   615,   615,   616,
     616,   617,   617,   617,   617,   617,   617,   617,   618,   618,
     618,   619,   619,   620,   621,   621,   622,   622,   622,   622,
     622,   622,   622,   622,   622,   623,   623,   624,   624,   624,
     625,   625,   626,   626,   627,   627,   628,   629,   629,   630,
     630,   631,   631,   631,   632,   632,   632,   633,   633,   633,
     633,   634,   634,   635,   635,   635,   635,   636,   636,   637,
     637,   637,   637,   637,   637,   638,   638,   639,   639,   640,
     640,   640,   640,   641,   642,   642,   643,   643,   644,   644,
     645,   646,   646,   646,   647,   647,   648,   648,   649,   649,
     650,   650,   651,   651,   652,   652,   653,   654,   654,   655,
     655,   656,   656,   657,   657,   658,   659,   659,   659,   659,
     660,   660,   661,   661,   661,   662,   662,   663,   663,   664,
     664,   665,   665,   665,   665,   665,   665,   665,   666,   666,
     666,   666,   666,   666,   667,   667,   667,   667,   668,   668,
     669,   669,   669,   669,   669,   670,   670,   670,   670,   671,
     671,   672,   672,   673,   673,   673,   673,   674,   674,   675,
     676,   676,   677,   677,   678,   678,   679,   679,   680,   680,
     681,   682,   682,   683,   683,   683,   683,   683,   683,   684,
     684,   684,   685,   685,   685,   685,   685,   685,   685,   686,
     686,   686,   686,   687,   687,   688,   688,   689,   689,   689,
     689,   689,   689,   689,   689,   689,   689,   689,   690,   690,
     691,   691,   692,   692,   693,   694,   695,   695,   696,   696,
     697,   698,   699,   699,   699,   699,   699,   699,   700,   700,
     701,   701,   701,   701,   702,   703,   703,   703,   704,   704,
     705,   705,   706,   706,   707,   707,   708,   708,   709,   709,
     710,   710,   711,   711,   712,   712,   712,   712,   712,   712,
     712,   712,   712,   712,   712,   712,   712,   712,   712,   712,
     713,   713,   713,   713,   713,   713,   713,   713,   713,   713,
     713,   713,   713,   713,   713,   713,   713,   713,   713,   713,
     713,   713,   713,   713,   713,   713,   713,   713,   713,   713,
     713,   713,   713,   713,   713,   713,   713,   713,   713,   713,
     713,   713,   713,   713,   713,   713,   713,   713,   713,   713,
     713,   713,   713,   713,   713,   713,   713,   713,   713,   713,
     713,   713,   713,   713,   713,   714,   714,   714,   714,   714,
     714,   714,   714,   714,   714,   714,   714,   714,   714,   714,
     714,   714,   714,   714,   714,   714,   714,   714,   715,   715,
     715,   715,   715,   715,   715,   715,   715,   715,   716,   716,
     716,   716,   716,   716,   716,   717,   717,   718,   718,   719,
     719,   719,   719,   719,   719,   719,   719,   719,   719,   719,
     719,   719,   719,   719,   719,   719,   719,   719,   719,   719,
     719,   719,   719,   719,   719,   719,   719,   720,   720,   721,
     721,   722,   722,   723,   723,   724,   725,   725,   725,   726,
     727,   727,   728,   728,   729,   729,   729,   730,   730,   731,
     731,   731,   731,   731,   732,   732,   732,   733,   733,   733,
     734,   734,   735,   735,   735,   735,   735,   735,   735,   735,
     735,   735,   735,   735,   736,   736,   737,   737,   738,   738,
     738,   738,   738,   738,   738,   738,   739,   739,   740,   740,
     741,   741,   742,   742,   742,   743,   743,   744,   744,   745,
     745,   745,   745,   745,   745,   745,   745,   745,   745,   746,
     746,   747,   748,   748,   749,   749,   749,   749,   749,   749,
     750,   751,   752,   752,   752,   753,   753,   754,   755,   755,
     756,   757,   757,   758,   758,   759,   759,   760,   760,   760,
     760,   761,   761,   762,   762,   763,   763,   764,   764,   765,
     765,   766,   766,   767,   767,   767,   767,   768,   768,   769,
     769,   770,   770,   771,   772,   773,   773,   774,   774,   774,
     774,   774,   774,   774,   774,   774,   774,   774,   774,   774,
     774,   775,   776,   777,   777,   777,   778,   778,   779,   779,
     779,   780,   780,   781,   781,   782,   782,   783,   784,   784,
     784,   784,   784,   785,   785,   786,   787,   787,   788,   788,
     788,   788,   789,   789,   790,   790,   791,   791,   791,   791,
     792,   792,   793,   794,   794,   795,   795,   796,   796,   797,
     797,   798,   798,   799,   799,   799,   799,   799,   799,   800,
     801,   802,   803,   803,   803,   803,   804,   804,   805,   805,
     805,   806,   806,   806,   806,   806,   807,   807,   807,   807,
     808,   808,   809,   809,   810,   810,   811,   811,   811,   811,
     812,   813,   813,   814,   814,   814,   815,   815,   815,   815,
     816,   816,   816,   816,   817,   817,   818,   818,   818,   818,
     818,   818,   818,   819,   819,   820,   821,   822,   822,   822,
     822,   822,   823,   823,   823,   823,   823,   824,   824,   825,
     825,   826,   826,   827,   828,   828,   828,   829,   829,   830,
     830,   831,   831,   832,   833,   833,   834,   834,   834,   835,
     835,   835,   835,   835,   836,   836,   837,   837,   838,   839,
     839,   839,   839,   840,   840,   840,   840,   841,   841,   842,
     842,   842,   843,   844,   844,   844,   844,   844,   844,   844,
     844,   844,   844,   844,   844,   844,   844,   844,   844,   844,
     844,   844,   844,   844,   844,   844,   844,   844,   844,   844,
     844,   844,   844,   844,   844,   844,   844,   844,   844,   844,
     844,   844,   844,   844,   844,   844,   844,   844,   844,   844,
     844,   844,   844,   844,   844,   844,   844,   844,   844,   844,
     844,   844,   844,   844,   844,   844,   844,   844,   844,   844,
     844,   844,   844,   844,   844,   844,   844,   844,   844,   844,
     844,   844,   844,   844,   844,   844,   844,   844,   844,   844,
     844,   844,   844,   844,   844,   844,   844,   844,   844,   844,
     844,   844,   844,   844,   844,   844,   844,   844,   844,   844,
     844,   844,   844,   844,   844,   844,   844,   844,   844,   844,
     844,   844,   844,   844,   844,   844,   844,   844,   844,   844,
     844,   844,   844,   844,   844,   844,   844,   844,   844,   844,
     844,   844,   844,   844,   844,   844,   844,   844,   844,   844,
     844,   844,   844,   844,   844,   844,   844,   844,   844,   844,
     844,   844,   844,   844,   844,   844,   844,   844,   844,   844,
     844,   844,   844,   844,   844,   844,   844,   844,   844,   844,
     844,   844,   844,   844,   844,   844,   844,   844,   844,   844,
     844,   844,   844,   844,   844,   844,   844,   844,   844,   844,
     844,   844,   844,   844,   844,   844,   844,   844,   844,   844,
     844,   844,   844,   844,   844,   844,   844,   844,   844,   844,
     844,   844,   844,   844,   844,   844,   844,   844,   844,   844,
     844,   844,   844,   844,   844,   844,   844,   844,   844,   844,
     844,   844,   844,   844,   844,   844,   844,   844,   844,   844,
     844,   844,   844,   844,   844,   844,   844,   844,   844,   844,
     844,   844,   844,   844,   844,   844,   844,   844,   844,   844,
     844,   844,   844,   844,   844,   844,   844,   844,   844,   844,
     844,   844,   844,   844,   844,   844,   844,   844,   844,   844,
     844,   844,   844,   844,   844,   844,   844,   844,   844,   844,
     844,   844,   845,   845,   845,   845,   845,   845,   845,   845,
     845,   845,   845,   845,   845,   845,   845,   845,   845,   845,
     845,   845,   845,   845,   845,   845,   845,   845,   845,   845,
     845,   845,   845,   845,   845,   845,   845,   845,   845,   845,
     845,   845,   845,   845,   845,   845,   845,   845,   845,   845,
     846,   846,   846,   846,   846,   846,   846,   846,   846,   846,
     846,   846,   846,   846,   846,   846,   846,   846,   846,   846,
     846,   846,   846,   846,   847,   847,   847,   847,   847,   847,
     847,   847,   847,   847,   847,   847,   847,   847,   847,   847,
     847,   847,   847,   847,   847,   847,   847,   847,   847,   847,
     847,   847,   847,   847,   847,   847,   847,   847,   847,   847,
     847,   847,   847,   847,   847,   847,   847,   847,   847,   847,
     847,   847,   847,   847,   847,   847,   847,   847,   847,   847,
     847,   847,   847,   847,   847,   847,   847,   847,   847,   847,
     847,   847,   847,   847,   847,   847,   847,   847,   847,   847,
     847
};

/* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     0,     4,
       6,     4,     6,     4,     6,     4,     6,     1,     2,     3,
       2,     1,     3,     2,     3,     1,     3,     2,     5,     3,
       6,     4,     6,     6,     6,     5,     5,     6,     9,     4,
       5,     7,     6,     4,     8,     4,     2,     4,     3,     6,
       4,     2,     2,     2,     2,     1,     2,     0,     1,     2,
       2,     2,     1,     3,     4,     2,     0,     2,     3,     2,
       3,     6,     6,     8,     6,     8,     6,     8,     6,     8,
       8,    10,     8,    10,     1,     0,     7,     1,     4,     4,
       7,     2,     1,     3,     4,     3,     0,     1,     0,     2,
       3,     5,     8,     5,     0,     5,     5,     7,     2,     0,
       1,     1,     1,     3,     2,     0,     1,     0,     1,     3,
       1,     3,     1,     3,     2,     2,     4,     5,     5,     8,
       1,     0,     3,     9,    12,     3,     0,     4,     6,     1,
       2,     1,     1,     0,     1,     2,     2,     1,     2,     2,
       1,     2,     3,     2,     2,     2,     2,     3,     3,     3,
       1,     3,     1,     0,     1,     2,     2,     2,     2,     2,
       2,     2,     2,     1,     1,     0,     9,    12,     0,     2,
       1,     1,     1,     1,     1,     1,     3,     0,     1,     2,
       1,     1,     2,     2,     3,     1,     1,     2,     2,     1,
       2,     3,     5,     2,     5,     5,     2,     3,     1,     1,
       2,     2,     0,     4,     0,     3,     4,     4,     0,     3,
       2,     0,     3,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     3,     3,     1,     2,     2,     2,     2,
       2,     2,     0,     3,     3,     3,     0,     1,     2,     1,
       2,     2,     2,     2,     4,     1,     3,     1,     3,     1,
       1,     1,     1,     3,     1,     2,     0,     1,     0,     1,
       3,     0,     2,     0,     3,     3,     1,     5,     3,     1,
       3,     1,     4,     5,     5,     6,     3,     7,     4,    11,
       1,     3,     2,     2,     2,     0,     3,     1,     1,     2,
       2,     2,     2,     1,     0,     1,     2,     6,     4,     6,
       4,     6,     8,     1,     1,     1,     1,     1,     2,     1,
       2,     1,     1,     1,     3,     3,     3,     3,     2,     2,
       1,     3,     1,     1,     1,     1,     3,     1,     1,     0,
       1,     1,     1,     6,     1,     1,     2,     3,     8,    11,
       9,     1,     1,     3,     0,     1,     3,     1,     0,     1,
       0,     1,     0,     1,     3,     1,     1,     1,     3,     0,
       2,     2,     0,     2,     0,     1,     0,     1,     1,     1,
       3,     3,     1,     1,     3,     3,     3,     3,     4,     3,
       2,     1,     1,     1,     1,     1,     3,     1,     1,     3,
       3,     1,     2,     4,     4,     2,     3,     5,     5,     1,
       1,    10,    10,     1,     2,     4,     4,     4,     2,     2,
       3,     1,     3,     6,     2,     0,     3,     3,     4,     4,
       4,     4,     3,     2,     1,     1,     0,     1,     1,     0,
       1,     5,     1,     0,     1,     0,     3,     1,     3,     4,
       3,     1,     1,     0,     2,     2,     0,     2,     2,     1,
       1,     1,     0,     2,     4,     5,     4,     2,     3,     2,
       2,     2,     2,     1,     2,     3,     0,     1,     0,     5,
       1,     4,     6,     2,     1,     0,     4,     0,     1,     1,
       1,     1,     2,     2,     1,     1,     1,     1,     1,     1,
       3,     0,     1,     3,     1,     1,     2,     2,     0,     1,
       3,     1,     0,     1,     2,     3,     2,     4,     2,     3,
       2,     0,     1,     2,     0,     4,     5,     2,     0,     1,
       3,     3,     3,     3,     3,     3,     1,     4,     3,     4,
       5,     4,     5,     4,     5,     2,     4,     1,     1,     0,
       1,     4,     5,     4,     0,     2,     2,     2,     1,     1,
       0,     4,     2,     1,     2,     2,     4,     2,     6,     2,
       1,     3,     4,     0,     2,     0,     2,     0,     1,     3,
       3,     2,     0,     2,     3,     5,     6,     2,     3,     3,
       4,     0,     1,     1,     1,     1,     1,     2,     4,     1,
       1,     1,     1,     2,     3,     3,     0,     1,     1,     1,
       1,     1,     2,     2,     2,     2,     2,     1,     3,     0,
       1,     1,     1,     1,     5,     2,     1,     1,     1,     1,
       4,     1,     2,     2,     1,     3,     3,     2,     1,     0,
       5,     2,     5,     2,     1,     3,     3,     0,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     3,     3,     3,     3,     3,     3,     3,     0,
       1,     3,     3,     5,     2,     2,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     2,
       2,     3,     3,     2,     2,     3,     3,     5,     4,     6,
       3,     5,     4,     6,     4,     6,     5,     7,     3,     2,
       4,     3,     2,     3,     3,     3,     3,     4,     3,     4,
       3,     4,     5,     6,     6,     7,     6,     7,     6,     7,
       3,     4,     4,     6,     1,     1,     3,     2,     2,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     2,     2,     5,     6,     6,     7,     1,     1,
       2,     2,     4,     1,     1,     1,     2,     2,     3,     5,
       6,     8,     6,     6,     4,     4,     1,     1,     1,     5,
       1,     1,     4,     1,     4,     1,     4,     1,     4,     1,
       1,     1,     1,     1,     1,     6,     4,     4,     4,     4,
       6,     5,     5,     5,     4,     6,     4,     5,     0,     5,
       0,     2,     0,     1,     3,     3,     2,     2,     0,     6,
       1,     0,     3,     0,     2,     2,     0,     1,     4,     2,
       2,     2,     2,     2,     4,     3,     5,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     4,     1,     4,     1,     4,
       1,     2,     1,     2,     1,     2,     1,     3,     1,     3,
       1,     3,     1,     3,     3,     1,     3,     3,     0,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     4,
       3,     2,     3,     0,     3,     3,     2,     2,     1,     0,
       2,     2,     3,     2,     1,     1,     3,     5,     1,     2,
       4,     2,     0,     1,     0,     1,     2,     2,     2,     3,
       5,     1,     0,     1,     2,     0,     2,     1,     0,     1,
       0,     1,     3,     3,     2,     1,     1,     1,     3,     1,
       2,     1,     3,     1,     1,     1,     2,     1,     1,     1,
       1,     1,     2,     6,     2,     5,     3,     3,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     2,     2,     3,     3,     0,     1,     1,     1,
       1,     1,     1,     1,     1,     5,     3,     0,     1,     1,
       1,     1,     4,     7,     2,     0,     1,     1,     1,     1,
      13,    16,     1,     2,     0,     1,     0,     1,     0,     2,
       0,     1,     0,     6,     8,     6,     8,     6,     8,     1,
       4,     3,     2,     4,     3,     5,     1,     0,     1,     1,
       0,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     3,     1,     1,     1,     1,     1,     1,
       2,     1,     1,     2,     3,     3,     1,     3,     3,     2,
       3,     3,     3,     3,     1,     1,     1,     1,     3,     5,
       1,     1,     1,     1,     3,     2,     1,     4,     5,     5,
       4,     6,     1,     1,     1,     1,     1,     1,     0,     1,
       3,     1,     0,     7,     1,     2,     3,     2,     0,     2,
       0,     2,     4,     2,     1,     1,     1,     2,     3,     2,
       2,     3,     4,     2,     1,     1,     1,     3,     2,     9,
      11,    12,    14,     3,     4,     4,     0,     7,    10,     2,
       3,     0,     4,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1
};

/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
   means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
     128,   205,     0,  1085,  1084,   205,     0,  1059,   205,   406,
     334,     0,  1155,     0,   205,     0,   128,     0,     0,     0,
       0,     0,     0,   205,   473,     0,  1154,   205,     0,  1128,
       0,     0,     0,     0,     0,     2,     4,     7,    17,    29,
      25,     0,    27,    15,    20,     6,    31,    16,    19,    13,
      32,    11,    30,   440,   427,   475,   439,   127,   443,    28,
      14,    24,     5,    10,    22,    23,    21,  1067,    35,    26,
      33,    18,     8,    34,    36,     0,     9,    37,    12,   204,
     203,   197,     0,     0,     0,     0,     0,   198,  1003,  1173,
    1174,  1175,  1176,  1177,  1178,  1179,  1180,  1181,  1182,  1183,
    1184,  1185,  1186,  1187,  1188,  1520,  1189,  1190,  1191,  1472,
    1473,  1521,  1474,  1475,  1192,  1193,  1194,  1195,  1196,  1197,
    1198,  1199,  1476,  1477,  1200,  1201,  1202,  1203,  1204,  1478,
    1522,  1205,  1206,  1207,  1208,  1209,  1523,  1210,  1211,  1212,
    1213,  1214,  1215,  1216,  1217,  1218,  1524,  1219,  1220,  1221,
    1525,  1222,  1223,  1224,  1225,  1226,  1227,  1228,  1479,  1480,
    1229,  1230,  1231,  1232,  1233,  1234,  1235,  1236,  1237,  1238,
    1239,  1240,  1241,  1242,  1243,  1244,  1245,  1246,  1247,  1248,
    1249,  1250,  1251,  1252,  1253,  1254,  1255,  1256,  1481,  1257,
    1258,  1259,  1260,  1482,  1261,  1262,  1263,  1483,  1264,  1265,
    1266,  1526,  1527,  1267,  1268,  1269,  1528,  1270,  1271,  1484,
    1272,  1273,  1274,  1275,  1276,  1277,  1278,  1529,  1279,  1280,
    1281,  1282,  1283,  1284,  1285,  1286,  1287,  1288,  1289,  1530,
    1485,  1290,  1291,  1292,  1293,  1486,  1487,  1488,  1294,  1531,
    1532,  1295,  1533,  1296,  1297,  1298,  1299,  1300,  1301,  1534,
    1302,  1535,  1303,  1304,  1305,  1306,  1307,  1308,  1309,  1310,
    1311,  1312,  1313,  1314,  1315,  1316,  1317,  1318,  1319,  1320,
    1321,  1322,  1323,  1324,  1325,  1326,  1327,  1328,  1489,  1536,
    1490,  1329,  1330,  1331,  1491,  1332,  1333,  1537,  1334,  1492,
    1335,  1493,  1336,  1337,  1338,  1339,  1340,  1341,  1342,  1343,
    1344,  1494,  1538,  1345,  1539,  1495,  1346,  1347,  1348,  1349,
    1350,  1351,  1352,  1353,  1354,  1355,  1356,  1357,  1496,  1358,
    1359,  1497,  1360,  1361,  1362,  1363,  1364,  1365,  1366,  1367,
    1368,  1369,  1370,  1371,  1498,  1372,  1373,  1374,  1375,  1376,
    1377,  1378,  1379,  1380,  1381,  1382,  1383,  1384,  1385,  1386,
    1387,  1388,  1389,  1540,  1390,  1391,  1392,  1499,  1393,  1394,
    1395,  1396,  1397,  1398,  1399,  1400,  1401,  1402,  1403,  1404,
    1405,  1406,  1407,  1408,  1409,  1500,  1410,  1411,  1412,  1541,
    1413,  1414,  1501,  1415,  1416,  1417,  1418,  1419,  1420,  1421,
    1422,  1423,  1424,  1425,  1426,  1427,  1502,  1428,  1429,  1430,
    1542,  1431,  1432,  1433,  1434,  1435,  1503,  1504,  1436,  1437,
    1505,  1438,  1506,  1439,  1440,  1441,  1442,  1443,  1444,  1445,
    1446,  1447,  1448,  1449,  1450,  1451,  1452,  1453,  1454,  1455,
    1507,  1508,  1456,  1543,  1457,  1458,  1459,  1460,  1461,  1462,
    1463,  1464,  1465,  1466,  1467,  1509,  1510,  1511,  1512,  1513,
    1514,  1515,  1516,  1517,  1518,  1519,  1468,  1469,  1470,  1471,
    1158,     0,     0,   985,  1004,  1005,  1010,   200,   405,   128,
       0,   374,     0,     0,   375,     0,     0,   328,   327,  1051,
     333,     0,     0,     0,  1003,    99,  1360,    97,   983,  1004,
       0,   351,   352,     0,   360,     0,   345,   349,   346,     0,
     370,   362,   371,   363,   344,   364,   353,   343,     0,   372,
     347,     0,     0,     0,   201,   166,   334,   128,     0,  1072,
    1073,  1071,  1062,  1067,  1074,  1075,     0,     0,  1002,  1116,
    1115,   155,  1027,  1145,  1503,  1436,  1156,  1146,  1143,  1144,
     202,   472,   470,     0,   970,  1305,  1397,  1408,  1503,  1093,
    1096,     0,   199,     0,   444,   593,   979,  1127,     0,  1132,
       0,  1374,   448,   451,  1016,   449,   440,     0,     0,     1,
     128,     0,     0,     0,   469,   469,     0,   469,     0,   432,
     440,   435,   439,     0,  1066,  1141,  1153,  1503,  1436,  1507,
    1149,  1150,  1278,     0,     0,  1278,     0,  1278,     0,  1278,
       0,     0,   962,     0,   963,   986,  1029,  1030,  1028,     0,
    1031,   301,   332,   331,   330,   329,   334,  1278,  1035,     0,
       0,     0,     0,     0,  1046,   100,    98,   358,   359,     0,
     350,   348,     0,  1278,   369,  1011,   365,  1278,   369,   981,
    1278,     0,     0,   162,     0,  1064,  1076,  1091,     0,  1092,
    1082,  1070,  1077,  1078,  1079,   128,   404,  1061,     0,     0,
       0,     0,  1147,     0,     0,     0,   988,   990,   991,   894,
    1001,   965,  1473,  1474,  1475,   954,     0,  1476,  1477,  1478,
    1522,   833,   820,   829,   834,   821,   823,   830,  1479,  1480,
     774,  1244,  1481,  1482,   999,  1483,  1486,  1487,  1488,   825,
     827,  1489,  1490,     0,  1000,  1492,  1493,  1341,  1495,  1496,
    1498,  1499,   831,  1501,  1502,  1503,  1504,  1505,  1506,   998,
     832,  1508,     0,     0,     0,   976,     0,   965,   805,     0,
     629,   630,   652,   653,   631,   658,   659,   661,   632,     0,
     975,   710,   848,   804,   816,     0,     0,   803,   798,   455,
     971,     0,   799,   987,   989,   955,   455,   969,  1094,  1099,
    1095,     0,     0,     0,     0,     0,   595,   594,   980,  1126,
    1124,  1125,  1123,  1122,  1129,     0,  1131,  1067,   908,     0,
     450,     0,     0,     0,   430,   429,     3,     0,     0,  1134,
       0,   467,   468,     0,     0,     0,     0,     0,     0,     0,
       0,   542,   489,   490,   492,   539,   543,   551,     0,   436,
       0,  1016,  1151,     0,     0,     0,   115,   115,     0,     0,
       0,     0,     0,    92,    41,    85,     0,     0,     0,     0,
     180,   193,     0,     0,     0,     0,     0,   190,     0,     0,
     173,    43,   167,   169,     0,   115,     0,    39,     0,     0,
       0,    45,     0,     0,     0,     0,   808,   912,   475,   910,
     985,     0,   961,     0,  1018,  1544,  1545,  1546,  1547,  1548,
    1549,  1550,  1551,  1552,  1553,  1554,  1555,  1556,  1557,  1558,
    1559,  1560,  1561,  1562,  1563,  1564,  1565,  1566,  1567,  1568,
    1569,  1570,  1571,  1572,  1573,  1574,  1575,  1576,  1577,  1578,
    1579,  1580,  1581,  1582,  1583,  1584,  1585,  1586,  1587,  1588,
    1589,  1590,  1591,  1592,  1593,  1594,  1595,  1596,  1597,  1598,
    1599,  1600,  1601,  1602,  1603,  1604,  1605,  1606,  1607,  1608,
    1609,  1610,  1611,  1612,  1613,  1614,  1615,  1616,  1617,  1618,
    1619,  1620,   958,   957,   984,  1019,  1020,  1021,  1022,   964,
       0,     0,   402,     0,     0,  1032,     0,  1278,   161,  1278,
     301,     0,   301,     0,     0,  1045,  1048,   361,   357,   355,
     354,   356,     0,   367,   368,     0,   338,     0,  1012,     0,
       0,   340,     0,     0,     0,     0,   128,     0,   174,  1087,
    1088,  1086,     0,     0,  1069,   177,   194,  1081,  1090,  1080,
    1089,  1068,  1063,     0,  1060,   393,  1105,  1104,  1113,   156,
       0,  1008,   640,   669,   647,   669,   669,   636,   636,   649,
     637,   638,   674,     0,   669,   636,   641,     0,   639,   677,
     677,   664,   915,   621,   622,   623,   624,   650,   651,   625,
     656,   657,   626,   709,     0,   636,  1009,   128,  1148,  1157,
       0,   801,   668,   655,   953,     0,     0,   663,   662,     0,
       0,     0,     0,     0,   645,   644,   643,   807,   918,     0,
     642,     0,     0,   669,   669,   667,   733,     0,   646,     0,
       0,   933,     0,   939,     0,     0,     0,   673,     0,   671,
       0,     0,   734,   714,   715,   805,   908,     0,   800,   806,
     994,     0,     0,   709,   709,   974,   894,     0,     0,   891,
     892,   893,     0,     0,     0,   968,     0,   902,   904,     0,
       0,   749,   900,     0,   752,     0,     0,     0,     0,   888,
     889,   890,   882,   883,   884,   885,   886,   887,   898,   881,
     730,     0,     0,   850,     0,     0,   729,     0,     0,   558,
       0,   992,   956,   558,  1107,  1111,  1112,  1110,     0,  1106,
    1098,  1097,  1102,  1100,  1103,  1101,     0,  1120,     0,  1117,
     555,     0,   452,     0,     0,  1140,     0,   122,     0,  1135,
       0,   447,   446,   476,   477,   483,   445,   528,   529,     0,
       0,     0,     0,   548,   546,   519,   493,   518,     0,     0,
     497,     0,   520,   710,   541,   434,   487,   488,   491,   433,
       0,   544,     0,   554,   542,   492,     0,  1142,  1152,     0,
       0,     0,     0,     0,  1278,     0,     0,    76,    57,   253,
       0,   114,     0,     0,     0,     0,     0,     0,     0,    84,
      81,    82,    83,     0,     0,     0,     0,   178,   179,   192,
       0,   183,   184,   181,   185,   186,     0,     0,   171,   172,
       0,     0,     0,     0,   170,     0,     0,     0,     0,     0,
       0,     0,     0,   475,   475,   475,   814,     0,     0,   474,
       0,     0,   959,   962,   392,   309,     0,   299,     0,     0,
       0,     0,     0,   334,  1038,  1036,  1034,  1037,  1039,     0,
       0,   158,   160,     0,   298,   272,     0,  1050,   376,     0,
       0,  1278,  1047,   289,     0,   369,   366,  1013,     0,   369,
     982,     0,   369,   165,  1278,   301,     0,  1065,  1083,   175,
     195,   176,   196,   425,     0,   399,   407,   412,   390,     0,
     390,     0,   409,   413,   390,   408,   390,   403,     0,   157,
       0,   621,   617,   613,   682,   683,   684,   685,   692,   693,
     690,   691,   686,   687,   680,   681,   688,   689,   678,   679,
       0,   694,   695,   696,   697,   698,   699,   700,   701,   627,
    1026,     0,   633,   636,  1025,     0,   966,     0,     0,   952,
     948,     0,     0,     0,     0,     0,     0,   919,   920,   921,
     922,   923,   924,   925,   926,   927,     0,     0,   928,     0,
       0,     0,   666,   665,     0,   880,   891,   892,   893,   888,
     889,   890,   882,   883,   884,   885,   886,   887,   906,     0,
       0,     0,     0,     0,     0,     0,     0,   775,     0,     0,
     875,     0,   908,   938,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   908,   944,     0,   965,     0,     0,
       0,   996,   997,   711,   754,   725,   726,   727,   731,  1024,
    1023,   973,     0,   967,     0,     0,   712,   735,   740,     0,
     945,   770,     0,   758,     0,   748,     0,   756,   760,   736,
     751,     0,   732,     0,   968,   903,   905,     0,   901,     0,
     722,   723,   724,   716,   717,   718,   719,   720,   721,   728,
     879,   877,   878,     0,     0,     0,   858,   753,     0,     0,
     755,  1270,  1305,     0,   466,   466,   466,   454,   464,   972,
       0,   607,   475,   607,     0,   709,   596,  1016,  1130,  1118,
    1119,   909,  1015,   128,     0,  1138,     0,     0,     0,   134,
     117,     0,  1136,     0,   150,   558,     0,   965,     0,   481,
     482,     0,   486,  1499,  1393,     0,     0,     0,     0,   521,
     549,     0,   540,     0,   988,   522,   987,   523,   526,   527,
     498,   550,   977,   552,     0,   545,   438,   437,   556,     0,
      42,     0,  1278,    59,     0,     0,     0,     0,     0,     0,
     208,   244,   208,    96,  1278,   369,  1278,   369,  1177,  1245,
    1409,     0,    55,    88,     0,   277,   108,     0,   262,   306,
      78,    93,   101,     0,     0,    44,   168,   182,   187,   104,
     191,   188,  1055,   189,   115,     0,    40,     0,   102,     0,
    1053,     0,     0,    46,   106,  1057,     0,     0,     0,     0,
     911,   809,   913,   914,   961,     0,   391,     0,   300,     0,
     401,   381,   382,   392,     0,   301,  1035,     0,     0,     0,
       0,     0,   292,   290,   320,     0,   297,   291,   299,     0,
       0,   248,     0,  1171,     0,     0,   377,   373,     0,     0,
     337,  1014,   339,     0,   341,     0,     0,   394,     0,   397,
       0,   396,   400,   395,   389,     0,   420,     0,     0,     0,
       0,     0,     0,  1114,   618,   614,     0,     0,     0,     0,
       0,     0,     0,   916,   634,   471,     0,     0,     0,   949,
       0,     0,   846,     0,   822,   824,   635,   836,     0,   648,
     826,   828,     0,   895,     0,     0,     0,   837,   777,   778,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   793,   792,   838,
     874,     0,     0,   936,   937,   839,   676,   675,   677,   677,
       0,     0,   943,     0,     0,     0,   844,   802,   909,   660,
     709,     0,     0,     0,     0,     0,     0,     0,   759,   750,
       0,   757,   761,     0,     0,     0,   744,     0,     0,   742,
     771,   738,     0,     0,   772,     0,     0,     0,   815,   466,
     466,   466,   466,   463,   465,     0,     0,     0,     0,  1393,
       0,   579,   557,   559,   566,   579,   584,   817,   605,   818,
     979,     0,   531,     0,   531,     0,  1108,  1121,     0,  1139,
       0,   139,   121,   141,   140,     0,   148,     0,   965,     0,
     139,   123,     0,   142,     0,  1138,     0,   154,   478,     0,
     896,   486,     0,   480,   525,   524,     0,   496,   547,   494,
       0,   553,     0,     0,     0,   252,     0,     0,     0,   208,
       0,     0,   316,     0,   303,    77,     0,     0,     0,    51,
       0,    69,    61,    47,    75,     0,     0,    80,     0,    73,
      90,    91,    89,    94,     0,   236,   218,   249,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   812,   813,   810,   475,   960,   423,   424,   173,   422,
     310,     0,     0,  1050,  1033,     0,     0,   161,   301,     0,
     276,   272,     0,   270,   269,   271,     0,  1172,   166,     0,
    1167,  1049,     0,     0,  1044,   369,     0,   426,     0,   385,
     421,   410,   415,     0,   419,   417,   416,   411,   414,     0,
       0,   619,     0,   628,   702,   703,   704,   705,   706,   707,
     708,   654,     0,   951,   947,     0,   819,   917,     0,   907,
     931,   930,   776,   788,   789,   790,   932,     0,     0,     0,
     785,   786,   787,   779,   780,   781,   782,   783,   784,   791,
     941,   940,   934,   935,   672,   670,     0,   841,   842,   843,
     942,   876,   995,   713,     0,     0,   741,   946,   762,     0,
       0,     0,   737,   895,     0,     0,     0,     0,     0,   746,
       0,     0,     0,   861,   856,   857,     0,     0,     0,     0,
     457,   456,   462,   579,   584,     0,   440,     0,   566,     0,
     578,   515,   577,     0,     0,   590,   588,     0,   590,     0,
     590,     0,   515,     0,   580,   515,   577,     0,   597,   980,
     606,     0,   538,   809,   538,     0,   453,  1137,     0,  1133,
       0,     0,     0,   129,   126,   116,     0,     0,   151,   139,
     130,     0,   479,   484,   485,   495,   978,   109,   208,     0,
       0,    58,     0,   318,   264,   296,   279,     0,     0,     0,
     209,     0,   284,     0,    50,    70,     0,    66,     0,    95,
       0,     0,     0,     0,     0,    53,    65,     0,    48,     0,
     369,   369,    56,   263,   215,  1341,     0,   882,   883,   213,
     305,   210,   311,   212,   214,   636,   211,   308,   105,  1056,
       0,   103,     0,  1054,   112,   110,   107,  1058,     0,   404,
     384,     0,     0,  1278,     0,  1050,   159,   298,     0,   326,
     248,   321,     0,  1171,  1169,     0,  1166,     0,     0,     0,
     342,     0,   398,     0,   418,     0,   615,   620,   950,   835,
     845,   929,     0,     0,     0,     0,   840,   768,   766,   763,
       0,   764,   745,     0,     0,   743,   739,     0,   773,   847,
       0,   863,   860,   461,   460,   459,   458,   565,   563,     0,
     568,  1007,  1006,   575,   508,   514,   564,     0,   560,     0,
     589,   585,     0,   586,     0,     0,   587,     0,   561,     0,
    1006,   562,     0,   604,     0,     0,   852,   993,   852,  1109,
     138,   118,     0,   119,   149,     0,     0,     0,     0,   143,
     378,     0,   314,    60,     0,   296,     0,   208,   281,   280,
     283,   278,   282,   285,     0,     0,     0,     0,     0,   265,
       0,     0,     0,   229,     0,     0,   296,   302,   225,   226,
     335,     0,     0,     0,    62,    52,    49,    54,    63,     0,
       0,    64,    67,   612,    79,    72,   636,   636,     0,     0,
       0,   811,   380,   387,   173,     0,     0,     0,     0,   298,
       0,     0,     0,  1171,     0,     0,   206,     0,   245,     0,
     163,  1170,     0,  1159,     0,  1042,  1043,     0,     0,   386,
     616,   794,     0,     0,     0,   765,   769,   767,   747,   849,
       0,   475,   600,     0,   603,   567,     0,     0,   503,   510,
       0,   513,   507,     0,   569,     0,     0,   571,   573,     0,
       0,     0,   608,     0,     0,     0,   983,     0,   530,   532,
     535,   534,   537,     0,   506,   506,     0,     0,     0,   152,
       0,   145,   145,     0,   131,   897,     0,   208,     0,   295,
     315,   243,     0,     0,   227,     0,   233,     0,   267,   268,
     266,   228,   296,   301,   230,   336,     0,    71,     0,    87,
     636,     0,   307,   113,   111,   404,     0,  1050,  1166,     0,
       0,   272,   166,  1168,   261,   254,   255,   256,   257,   258,
     259,   260,   275,   274,   246,   247,     0,     0,     0,  1044,
       0,   795,     0,   796,     0,   866,   605,     0,     0,   599,
       0,   501,   499,   502,   504,   500,     0,     0,   576,   592,
       0,   572,   570,   581,     0,   612,     0,   583,   536,     0,
     851,   853,     0,     0,   442,   441,     0,   125,     0,   607,
       0,     0,   147,   147,   133,     0,   301,   317,     0,   287,
     294,   286,     0,     0,   224,     0,   231,   325,   217,   611,
       0,    74,     0,   312,   379,   383,     0,  1160,     0,  1166,
     248,  1171,     0,  1163,     0,     0,  1050,   797,   862,     0,
       0,     0,   598,   601,     0,   574,     0,     0,     0,   609,
     610,   582,   533,     0,     0,   508,   120,   145,   124,   153,
     144,   483,   146,   483,     0,   325,   273,     0,     0,   251,
     217,     0,   242,     0,    68,    86,   313,     0,   298,  1161,
     207,   164,  1164,  1165,     0,   607,  1472,  1221,  1443,     0,
     864,   867,   865,   859,     0,   511,     0,   517,   591,   854,
     855,   505,   147,   486,   486,   607,   242,   288,   293,     0,
     232,   234,   322,   323,   324,     0,   238,   235,   239,     0,
    1166,     0,  1040,     0,   871,   870,   869,   873,   872,   602,
       0,     0,   509,   483,   136,   135,   132,   208,   250,     0,
       0,     0,   240,     0,   241,   216,  1162,  1050,     0,   512,
       0,   486,   319,   221,     0,   220,     0,   304,   237,   607,
     868,     0,   137,   219,   223,   222,  1041,   516
};

/* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    34,    35,    36,    37,  1901,  1902,  1903,  1611,   823,
    2531,  1612,   824,   825,  1905,    38,    39,  1233,   519,  1549,
    1176,  2277,    41,  1856,  1554,  1860,  2409,  2099,  1855,  1862,
    2512,  2571,  1857,  1555,  2410,  1556,    42,    43,  1301,    44,
     643,    45,  1302,  1260,  1006,   843,  1250,   995,    46,    81,
      47,  1892,  2160,  2584,  1915,  2667,  2307,  2308,  1613,  2626,
    2627,  1894,  1957,  1242,  2620,  1672,  2462,  1617,  1600,  2309,
    1681,  2419,  2189,  1614,  2130,  1673,  2294,  2518,  1312,  1674,
    2519,  2287,  1675,  1285,  1305,  2132,  2628,  1618,  1286,  2161,
    1229,  1676,  2582,  1677,   481,  2312,    48,   511,   512,   634,
     976,   513,    49,   482,   964,   520,    51,  1663,  2334,  1968,
    2335,  1705,  1657,  1004,  1702,  1333,  1289,  1005,   470,  1347,
    1969,  1938,  1334,   521,   728,    54,    55,    56,   568,   562,
     563,  1149,  1527,  1825,   793,   543,   544,   578,  1279,  1183,
    1184,  1562,  1873,  1208,  1209,   802,   803,  2379,  2504,  2380,
    2381,  2245,  2246,  2642,  1196,  1200,  1201,  1575,  1568,  1189,
    2092,  2398,  2399,  2400,  2266,  1204,  1205,   805,   806,   807,
    1213,  1585,    58,  1531,  1832,  1833,  1834,  2070,  2071,  2085,
    2081,  2251,  2387,  1835,  1836,  2372,  2373,  2479,  2088,  1842,
    2391,  2392,  2439,  1032,  1353,  1033,   729,  1034,  1382,   730,
    1070,  1036,   731,   732,   733,  1039,   734,   735,   736,   737,
    1053,   738,   739,  1087,  1371,  1372,  1373,  1374,  1375,  1376,
    1377,  1378,  1379,   778,  1436,   741,   742,   743,  1838,   744,
    1143,  1516,  2404,  2500,  2501,  1818,  2054,  2231,  2371,  2551,
    2600,  2601,   745,  1513,  1138,  1139,   746,  2163,  1141,  1429,
    1455,   858,   859,  1044,  1406,  1407,  1432,  1746,  1439,  1444,
    1773,  1774,  1456,  1481,   747,  1389,  1390,  1730,  1055,   748,
     604,   863,   605,  1051,  1475,   756,   749,   750,  1581,   555,
    2383,   639,   943,   751,   752,   753,   754,   755,  2243,   463,
    2572,   978,   783,   861,  1615,  1471,    59,   661,   609,    60,
     955,  1296,    61,  2356,  2199,   966,  1314,  1685,   483,    62,
      63,    64,    65,    66,   585,   998,   522,   999,  1000,   648,
      67,  1007,   650,   651,    68,   549,   550,  1008,  1160,  1009,
      69,   530,    70,   774,   559,   775,   777,   524,   790,  1851,
    1545,    72,    73,   537,   538,    74,    75,   551,    76,    77,
    2353,   525,  1960,   961,   489,   465,   466,   948
};

/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
   STATE-NUM.  */
#define YYPACT_NINF -2328
static const int yypact[] =
{
    4002,  -141,   555, -2328, -2328,  -141, 30083, -2328,  -141,    35,
    1504, 32403, -2328, 26735,  -141, 36579,   810,   239,   355,   501,
   36579, 36579, 32867,  -141,   291, 37043, -2328,  -141, 33331,   -39,
     -12, 37507, 36579,   775,   526,   144, -2328, -2328, -2328, -2328,
   -2328,    29, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328,
   -2328, -2328, -2328,    79, -2328,    55,   101,   513,    54, -2328,
   -2328, -2328, -2328, -2328, -2328, -2328, -2328,   148, -2328, -2328,
   -2328, -2328, -2328, -2328, -2328, 19429, -2328, -2328, -2328, -2328,
   -2328, -2328, 37971, 36579, 38435, 33795, 38899, -2328,    98, -2328,
   -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328,
   -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328,
   -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328,
   -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328,
   -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328,
   -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328,
   -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328,
   -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328,
   -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328,
   -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328,
   -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328,
   -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328,
   -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328,
   -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328,
   -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328,
   -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328,
   -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328,
   -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328,
   -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328,
   -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328,
   -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328,
   -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328,
   -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328,
   -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328,
   -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328,
   -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328,
   -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328,
   -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328,
   -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328,
   -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328,
   -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328,
   -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328,
   -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328,
   -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328,
   -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328,
   -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328,
   -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328,
   -2328,   172,   348, -2328,   100, -2328, -2328, -2328, -2328,   775,
   36579, -2328,   425,   522, -2328,   303, 39363, -2328, -2328, -2328,
   -2328,   886, 36579,   450, -2328, -2328, 34259, -2328, -2328, -2328,
     435, -2328, -2328,   262, -2328,    40, -2328, -2328, -2328,   251,
   -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328,   367, -2328,
   -2328, 39827, 40291, 40755, -2328,   265,   521,    -3, 18964, -2328,
   -2328, -2328, -2328,   148, -2328, -2328,   501,   501, -2328, -2328,
   -2328,   108,   297, -2328,   332,   592, -2328, -2328, -2328,   300,
   -2328, -2328,   591,  7938,  7938, 41219,   501, 41219,   366, -2328,
   -2328,   258, -2328, 20824, -2328,   385,   348, -2328,   214,   713,
   10854, 36579,   411, -2328,   457,   411,   424,   448,   513, -2328,
    4002,   793,   746, 33331,   298,   298,   913,   298,   683,   719,
   -2328,  1110, -2328,   490, -2328, 36579, -2328,   514,   792,   -12,
   -2328,   300,   869,  1014,   710,   898,  2658,   911,  1199,   923,
    1348,  5994, 10854, 23773, -2328,   348, -2328, -2328, -2328,   607,
   -2328,   631, -2328, -2328, -2328, -2328,   521,   859, -2328,   701,
   41683, 42147, 36579,   672,  1079, -2328, -2328, -2328, -2328,   736,
   -2328, -2328,    24,  1041,    23,   741, -2328,  1054,    32, -2328,
    1057,   917, 10854, -2328,   821, -2328, -2328, -2328,  -210, -2328,
   -2328, 25629, -2328, -2328, -2328,    -3,   760, -2328, 25629, 10854,
   46323,  1233, -2328,  1065, 36579,   809, -2328, -2328, -2328, -2328,
   -2328, -2328,  1289,    90,  1298, 10854,   825,    90,    90,   827,
    1161, -2328, -2328, -2328,   111,   857,   883, -2328,    89,    89,
   -2328,  1027,   891,   897, -2328,    91,  1342,  1392,   117,   918,
     927,   232,    90, 10854, -2328,   928,    89,   940,   954,   955,
    1397,   957, -2328,  1437,   965,   110,   130,   967,   968, -2328,
   -2328,   105, 10854, 10854, 10854, -2328,  6966, -2328,   348,   501,
   -2328, -2328, -2328, -2328, -2328, -2328, -2328,   974, -2328,   122,
    4464, -2328,  1020, -2328, -2328,   137, 10854, -2328, -2328,   -56,
   -2328,   125, -2328, -2328, -2328,   348,  1257,   983, -2328, -2328,
   -2328,   135,  1376, 24701, 25165, 36579, -2328, -2328,   348, -2328,
   -2328, -2328, -2328, -2328, -2328,    10, -2328,   148, 26747,   284,
     411, 36579, 36579,  1439, -2328, -2328, -2328, 33331, 36579, 42611,
    1112, -2328, -2328,   513,   513, 10854,   513,   358,   -36,  8424,
   11340,  1316,  1205,    82,   466,  1322, -2328,  1215,   683,   719,
   10854,   457, -2328,  1264, 36579, 30547,   206,   657,  1008,  1090,
    1011,   -27,  1415, -2328,  1015, -2328,  1098, 36579, 46772,   147,
   -2328,  1451,   147,   147,   438,  1454,  1107,   157,  1260,   353,
    -180,  1015,  3242, -2328, 33331,   126,   469,  1015, 36579,  1113,
     583,  1015, 10854, 10854, 10854,  1031, -2328, 26747,   -84, -2328,
     721,   799,  4596,  1030, -2328, -2328, -2328, -2328, -2328, -2328,
   -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328,
   -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328,
   -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328,
   -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328,
   -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328,
   -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328,
   -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328,
   -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328,
    1120, 36579,  1081,   -53,  1378,  1438, 36579,  1266,  3242,  1269,
    1050,  1498,   631,  8910,  1500, -2328, 43075, -2328, -2328, -2328,
   -2328, -2328, 36579, -2328, -2328, 36579, -2328, 27763,  1055, 36579,
   36579, -2328, 36579, 36579,   401, 43539,    -3, 29619, -2328, -2328,
   -2328, -2328,   642,   667, -2328, -2328, -2328, -2328, -2328, -2328,
   -2328, -2328, -2328, 27763, -2328,  2319, -2328, -2328, -2328,  1056,
     405, -2328, -2328,  1102, -2328,  1102,  1102,  1059,  1059,  1061,
   -2328, -2328, -2328,   232,  1102,  1059, -2328, 46772, -2328,   191,
     319, -2328, -2328,  1511, -2328, -2328, -2328, -2328, -2328, -2328,
   -2328, -2328, -2328,  4332,   428,   443, -2328,   775, -2328, -2328,
   10854,   348, -2328,  1064, 26747,  1108, 10854, -2328, -2328, 10854,
    1067,  1542,  1542, 10854, -2328, -2328, -2328, -2328,  4179,  1542,
   -2328,  1542,  1542,  1102,  1102, -2328, 26821, 10854, -2328, 22687,
   10854, 13770,  9396, 10854,  1152,  1159,  1542, -2328,  1542, -2328,
   10854,  7452, 26821,  1558,  1558,  2329,  4645,  1087,   348,   348,
   -2328,  1542, 10854,  4463,  4463, -2328,   136, 46323, 10854, 10854,
   10854, 10854, 10854, 27299,  1182,    68, 36579, 10854, 10854,  1105,
     767, -2328, 10854,  1323, -2328,  1115, 10854,  1190,   652, 10854,
   10854, 10854, 10854, 10854, 10854, 10854, 10854, 10854, -2328, -2328,
   15703,   161,  1423,  1442, 10854,  -120,   375, 34723,  7938,  1434,
    5994, -2328,    70,  1434, -2328, -2328, -2328, -2328,   129, -2328,
   -2328, -2328, -2328,  1056, -2328,  1056,  1121, 36579,   214, 31475,
   -2328, 10854, -2328,   449,  1123,  1181,    51,  1573, 36579, -2328,
   21289,  1402, -2328,  1127, -2328, 26090,  1402, -2328, -2328, 14245,
    1253,  1406,  1344, -2328, -2328, -2328,  1137, 26747, 11826, 11826,
   -2328,   751, 26747,   789, -2328, -2328, -2328, -2328, -2328, -2328,
     -25, -2328, 36579,   -38,  1316,   466,   481, -2328, -2328,  1637,
    1143, 44003, 36579,  1411,  1366,  1421,  -173, -2328, -2328, -2328,
   46323, -2328, 36579, 36579, 44467, 44931, 28227, 36579, 27763, -2328,
   -2328, -2328, -2328, 36579,   805, 36579, 47203, -2328, -2328, -2328,
     147, -2328, -2328, -2328, -2328, -2328, 36579, 36579, -2328, -2328,
     147, 36579, 36579,   147, -2328,  1753, 36579, 36579, 36579, 36579,
    1755, 36579, 36579,   -70,   -70,  1347, -2328,  9882,  1154, -2328,
   10854, 10854, -2328, 10854,  1324, -2328,   520, -2328,  1368,    -9,
    1204, 36579, 36579,  1170, -2328, -2328, -2328, -2328, -2328,  1162,
    1497, -2328,  3242,  1499, 31011,   504,     1,  1202, -2328,   524,
   10854,  1386, -2328, -2328,  1373,    23, -2328, -2328, 27763,    32,
   -2328,  1374,    85, -2328,  1390,   631,  1619, -2328, -2328, -2328,
   -2328, -2328, -2328, -2328,   529, 18499, -2328, -2328,  1620,   501,
    1620,    19, -2328, -2328,  1620, -2328,  1620, -2328, 25629, -2328,
   10854,  1622,  1178,  1180, -2328, -2328, -2328, -2328, -2328, -2328,
   -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328,
    1542,  1255, -2328,  1261,  1265,  1267, -2328, -2328, -2328, -2328,
   -2328, 46323, -2328,   489, -2328,   533, -2328, 10854, 10854,    31,
   -2328, 26200,   549, 10854,  1179,  1183,   554, -2328, -2328, -2328,
   -2328, -2328, -2328, -2328, -2328, -2328,  1191,  1507, -2328,  1192,
    1195,  1197, -2328, -2328,  4278, -2328, -2328, -2328, -2328, -2328,
   -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328, -2328,  1198,
    1201, 26238,  1203, 13770, 13770,  6966,  1579, -2328, 13770,  1207,
   -2328,   571, 26118,  1196,  1209,  1222,  1231,  1216,  1219, 26438,
   10368, 10854, 10368, 10368, 26474,  1196,  1220, -2328, 10854,  1221,
    5123, -2328, -2328, -2328,   207, 26596, 26596, 26596, 26821, -2328,
   -2328, -2328,  1242, -2328, 13770, 13770, -2328, 26834,   882,  6966,
   -2328, -2328,  1532, -2328,   896, -2328,  1226, -2328, -2328,  1654,
   -2328, 22687, 26785, 10854,    93, -2328, 10854,  1105, 10854,  1307,
   26596, 26596, 26596,   164,   164,   146,   146,   146,   227,   375,
   -2328, -2328, -2328,  1228,  1229,  1232,  1426,   207,   957, 10854,
   -2328,   747,   788, 36579,  2756,  2909,  3931, -2328, -2328, -2328,
   17104,  1274,   -84,  1274,  1542,  4463, -2328,   457, -2328, -2328,
   -2328, 26747, -2328,   775, 17104,  1275,  1286,   -78, 19894,  1441,
   -2328, 36579, -2328, 36579, -2328,   -68,  1249, -2328, 10854, -2328,
   -2328,  2261,  1256,  1444,  1447,   686,   686,   751,  1449, -2328,
   -2328,  1305, -2328, 10854,   903, -2328,  1023, -2328, -2328, -2328,
   -2328,  1243, -2328, -2328,  1496, -2328, -2328, -2328, -2328,  1330,
    1015, 10854,  1472, -2328,    80,  1268,  1589,  -171,  1549, 36579,
   -2328,  1462, -2328,   605,  1601,    85,  1613,    85, 27763, 27763,
   27763,   666, -2328, -2328,   501, -2328, -2328,   692, -2328,  -197,
   -2328, -2328, -2328,  1361,   695,  1015,  3242, -2328, -2328, -2328,
   -2328, -2328, -2328, -2328,   145,   718,  1015,  1364, -2328,  1369,
   -2328,  1370,   803,  1015, -2328, -2328,  1291,  1296,  1302, 10854,
   -2328, -2328, 26747, 26747, 26747,  1299, -2328,    81, -2328, 36579,
   -2328, -2328, -2328,  1324, 36579,   631, -2328,   907, 36579, 36579,
   36579, 36579, -2328, -2328, -2328,  1309,  1308, -2328, 46323,  -112,
    1518,  1531, 36579,  1365,  1011,  1775, -2328, 26747,  1640, 36579,
   -2328, -2328, -2328, 36579, -2328,  1663,   775, -2328, 27763, -2328,
   29155, -2328, -2328, -2328, -2328,   501, -2328,   501,  1546, 36579,
   24237,   501,   501, -2328,  1334,  1180,  1542,   119,  1332,  1132,
     608,   400,   709, -2328, -2328, -2328,   707, 26711, 10854, -2328,
    1677, 46323, -2328,  5201, -2328, -2328, -2328, -2328, 10854, -2328,
   -2328, -2328, 10854, -2328, 22687, 10854,  1653, -2328,  1810,  1810,
    4645, 46323, 13770, 13770, 13770, 13770,   114,   940, 13770, 13770,
   13770, 13770, 13770, 13770, 13770, 13770, 13770, 14731,   389, -2328,
   -2328, 10854, 10854,  1666,  1653, -2328, -2328, -2328,  -191,  -191,
   46323,  1345,  1196,  1346,  1350, 10854, -2328,   348,  5401, -2328,
    4463, 10854,  2091,  2170, 10854,   724, 10854,  1664, -2328, -2328,
    1353, -2328, -2328, 46323, 10854,  1358,  2788, 13770, 13770,  3930,
   -2328, 23247, 10854,  6966, -2328,  1347,  1401, 21754, -2328,  1456,
    1456,  1456,  1456, -2328, -2328, 36579, 36579, 36579, 17569,  1679,
   16639, 35187,  1362,  1297, -2328, 35187, 35651, -2328,  1382, -2328,
     348, 10854,  1676,  1372,  1676,  1377, -2328, -2328,  1379,  1362,
   10854,  1515, -2328, -2328, -2328,  1431, -2328,   728, -2328,  1782,
    1515, -2328,   734, -2328, 21289,  1275, 10854,   348, -2328,  1385,
   -2328,  1256,   103, -2328, -2328, -2328,  1578, -2328, -2328, -2328,
   36579, -2328, 36579,  5444,  1720, -2328, 36579, 36579, 36579, -2328,
   36579,   749,   800,  1387, -2328,   800,  1701,   152,  1011,   157,
    3478,   -51, -2328, -2328, -2328,  1460, 36579, -2328, 36579, -2328,
   -2328, -2328, -2328, -2328, 28227, -2328, -2328, -2328, 27763, 22222,
   27763, 36579, 36579, 36579, 36579, 36579, 36579, 36579, 36579, 36579,
   36579, -2328, -2328, -2328,  1347, -2328, -2328, -2328,  -180, -2328,
   -2328,    81,  1394,  1202,  1438, 45395,   764,  3242,  1395,  1839,
   -2328,   504, 31011, -2328, -2328, -2328,  1797, -2328,   265,   151,
   -2328, -2328,   775, 36579,  1455,    85, 36579, -2328,   772, -2328,
   -2328, -2328, -2328, 36579,  1396, -2328,  1396, -2328, -2328,  1542,
    1400, -2328,  1404, -2328, -2328, -2328, -2328, -2328, -2328, -2328,
   -2328, -2328, 10854, 26747, -2328,  1407, -2328, 26747, 23159, -2328,
   26747,  1666, -2328,   984,   984,   984,  3188,  1721,   177,  1409,
     984,   984,   984,   187,   187,    66,    66,    66,  1810,   389,
   26747, 26747, -2328, -2328, -2328, -2328,  1410, -2328, -2328, -2328,
    1196, -2328, -2328,   243, 10854, 10854, 26834, -2328,  1141, 10854,
   46323,   773, 26834,   169, 10854,  2229,  2887, 10854, 10854, 26216,
   23187,  1413, 10854, 45859, -2328, -2328, 36579, 36579, 36579, 36579,
   -2328, -2328, -2328, 35187, 35651,  1416, 16173,  1297,  1417, 36115,
   -2328,  1501,  1420, 17104,  1675,  1609, -2328, 17104,  1609,   611,
    1609,  1689,  1501, 20359, -2328,  1501,  1427,  1624, -2328,   399,
   26747,  1857,  1737,   501,  1737,   501, -2328, 26747,  7938, -2328,
     775,  1513, 36579,   348,   -99, -2328,  1445, 36579, -2328,  1515,
   26747, 22687, -2328, -2328, -2328, -2328, -2328, -2328, -2328, 36579,
     796, -2328,   798,   800, -2328,  1475, -2328,   162,  1726,    21,
   -2328, 27763,  2758,   240, -2328,  1740,  1659, -2328,   147, -2328,
   10854,   240,  1660,   160, 36579, -2328, -2328,  2931, -2328, 46323,
      85,    85, -2328, -2328, -2328,  1385, 46772,   642,   667, -2328,
   -2328, -2328, -2328, -2328, -2328,   443, -2328,  1457, -2328, -2328,
    1527, -2328,  1528, -2328, -2328, -2328, -2328, -2328,  1448,   760,
      53, 36579,  1897,  1673,  1461,  1202, -2328, 31011,   617,   331,
    1531, -2328,   142,  1365, -2328,  1831,  1493,  1661, 36579,  1463,
   -2328,  1904, -2328, 29155,  1396,  1465, -2328, -2328, 26747, -2328,
   -2328, -2328, 13770,  1776,  1466, 46323, -2328, 26834, 26834,  1141,
     804, -2328, 26834, 10854, 10854, 26834, 26834, 10854, -2328, -2328,
   23223,  1651, -2328, -2328, -2328, -2328, -2328, -2328, -2328, 28691,
   35187, -2328,  1467, -2328, 31939, -2328, -2328, 36579,  1297, 17104,
   -2328, -2328,  1774, -2328, 17104,  1736, -2328, 17104, -2328, 36579,
    1469, -2328, 36579, -2328, 12312, 10854,  1509, -2328,  1509, -2328,
     983, -2328,   -78, -2328, -2328,  1870, 18034,  1826, 10854, -2328,
   -2328,  1473,   800, -2328,  1633,  1475,  1477, -2328, -2328, -2328,
   -2328, -2328, -2328, -2328,   813,  1478, 36579, 36579, 13770, -2328,
     240,   186,    94, -2328,  1746, 36579,  1475, -2328, -2328, -2328,
   -2328,  1849,  1928,  1821, -2328, -2328, 26747, -2328, -2328,  1542,
    1542, -2328, -2328,  1898, -2328, -2328,   443,   392, 22222, 36579,
   36579, -2328, -2328, -2328,  -180,  1851,   814,   775,  1827, 31011,
    1939,  1495, 36579,  1365,  1032,  1032, -2328,  1630, -2328,  1634,
   -2328, -2328,   168, -2328, 36579, -2328, -2328, 18034,   775, -2328,
   -2328,  3275, 13770, 46323,   830, -2328, 26834, 26834, 26834, -2328,
    1930,  1347, -2328,   844,  1949, -2328, 36579,  -127,  -106,  1505,
    1508, -2328, -2328,   851, -2328, 10854,  1514, -2328, -2328, 17104,
    1774,   852, -2328, 46323, 36579,   864, 46323,  6480,  1503, -2328,
   -2328, 26747, 26747, 36579,  1566,  1566,  1568, 36579, 10854, -2328,
     868,  1931,    46,   -60, 26747, -2328, 36579, -2328, 27763, -2328,
     800, -2328, 27763, 10854, -2328,  1052,  3188,  1965, -2328, -2328,
   -2328, -2328,  1475,   631, -2328, -2328,  1822, -2328, 36579,  1582,
     426,  1596, -2328, -2328, -2328,   760,   501,  1202,  1493, 36579,
     775,   504,   265, -2328, -2328, -2328, -2328, -2328, -2328, -2328,
   -2328, -2328, -2328, -2328, -2328, -2328,  1943,  1731,  1946,  1455,
     878,  3275,   889, -2328, 10854,   354,  1382, 28691,  1533, -2328,
     912, -2328, -2328, -2328, -2328, -2328, 36579,   758, -2328, 26747,
   36579, -2328, -2328, -2328, 36579,  1898,   919, -2328, -2328, 12312,
    1530, -2328,  1979,  1669, -2328, -2328,   775, -2328, 23269,  1274,
   18034, 36579, 36579, 36579, -2328,  1657,   631,   800,   925, -2328,
    1551, -2328, 23307,  1757, -2328,  1843, -2328,  1791,  1556, -2328,
   10854, -2328,  1627, -2328, -2328, -2328,  2008, -2328,  1565,  1493,
    1531,  1365,  1778, -2328,  1779,  1581,  1202, -2328,  1196, 12798,
   12798,  1592, -2328, -2328, 36579, -2328,   931,  1593,   935, -2328,
   -2328, -2328, -2328, 36579,  1595, 31939, -2328,  1931, -2328, -2328,
   -2328,   197, -2328,   197, 21289,  1791, -2328, 27763, 22222,  1804,
    1556,    39,  1801,  3242, -2328, 26747, -2328,   775, 31011, -2328,
   -2328, -2328, -2328, -2328, 18034,  1274, 15217,  1734,    52, 26156,
   -2328, -2328, -2328, -2328,   946, -2328,  2072,  1749, -2328, -2328,
   -2328, -2328, 36579,  1256,  1256,  -149,  1801, -2328, -2328,  1890,
   -2328, -2328, -2328, -2328, -2328,   154,  1812, -2328,  1815,  1964,
    1493,   947, -2328,  2061, -2328, -2328, -2328, -2328, -2328, -2328,
    1612,  1615, -2328,   197, -2328, -2328, -2328, -2328, -2328,    63,
      63,  1982, -2328,  1680, -2328, -2328, -2328,  1202, 13284, -2328,
    2101,  1256,   800, -2328,  2090, -2328,    92, -2328, -2328,  1274,
   -2328,  1629, -2328, -2328, -2328, -2328, -2328, -2328
};

/* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -2328, -2328, -2328,  1544, -2328, -2328, -2328,   216, -2328,   871,
   -2328,   205,  -496,   519, -2328, -2328, -2328,  -775,    20, -2328,
   -2328, -2328, -2328,    25,   272, -2328,  -384, -1701,  -135, -2328,
   -2161, -2285, -2328,  -436, -2197, -1491, -2328,  -918,   192, -2328,
   -1885, -2328,  -590,  -817,  -643,  -821, -2328,    -2, -2328,  1412,
    -917, -1559, -2173,  -434, -2328,  -506, -2328,  -285, -1560,  -483,
    -469, -2328, -2093,  -785, -2328,  1333,  -196, -2328,   557, -2328,
   -1890, -2328, -2328,   542, -2328,  -797, -2328, -2328, -1659,   200,
    -421, -1995, -2096,   500,  -595, -2328,  -466,   244, -1532, -2328,
     567, -2328,  -412, -2328,  -484, -1919, -2328, -2328, -2328,  1208,
    -593, -2328, -2328, -2328, -2328,    34, -2328, -2328, -2328, -2328,
   -2328,  -396,   502, -2038, -2328,   470, -2328, -2328, -2328, -2328,
     -34,   223, -2328,     5,  1172,   -30,   -10,    14,    33,    37,
    1398,  1419, -2328, -1004,   662, -2328, -2328,  -566,   -46, -2328,
     609, -2321, -1817,  -416,   958,  1380,  1375,  -311,  -216, -2328,
    -375, -2328,  -990, -2328, -2328,   618,  1003, -1115, -1113, -2328,
     350, -2328,  -304, -2328,   102,  -406,   985, -2328,  1405, -2328,
   -2328, -2328, -2328, -1060,   654, -1756,   371, -1749, -1652,   138,
     128,  -861,  -179,    13,   384,  -262, -2328, -2328,  -260, -1506,
   -2109,  -272,  -271,  -998,   872,  -815, -2328, -2328,  -677,  1046,
   -2328, -2328, -2328,  1177,  1193, -2328, -2328,  1247,  1525, -2328,
    -243,  2120,   477,  -685,  1158,  -992,  1163, -1005,  -996, -1008,
    1164,  1167, -1045,  3110,  1126,  -776,    -5, -2328, -2055, -1462,
   -2328, -2328,   -41, -2328,  -334, -2328,  -328, -2328, -2328, -2328,
    -320, -2327,  1093, -2328, -1033, -2328,  3539,   678, -2328, -1436,
    -550,  -594,  -810, -1739, -2328, -2328, -2328, -2328, -2328, -2328,
   -1043, -1571,  -491,   744, -2328, -2328,   853, -2328, -2328, -2328,
    -583,   971,  -531,  -697,   761, -2328,  -525,  1116, -2328,  1961,
    -510,  1393,  -857,    11, -2328,  -325,   735,  1550, -2328,  -478,
    -497, -1019,  -759, -2328,  -599, -2328, -2328, -2328,  -981, -2328,
     595, -2328,  -916, -2328,  -206, -2328, -2328, -1887, -2328, -2328,
   -2328, -2328, -2328, -2328,  -381, -2328,  -372,  -440, -2328, -2328,
      12,  -644,  1279, -2328, -2328,   723, -2328,   933, -2328,   625,
   -2328, -2328, -2328,  1099, -2328, -2328, -2328,    36,  1486,   410,
   -2328,  1114, -2328, -2328, -2328, -2328, -2328,   220, -2328,  -915,
   -2240,    57, -2076,  -932,    -6,  -435,  -411, -1868
};

/* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
   positive, shift that token.  If negative, reduce the rule which
   number is the opposite.  If zero, do what YYDEFACT says.
   If YYTABLE_NINF, syntax error.  */
#define YYTABLE_NINF -1526
static const yytype_int16 yytable[] =
{
     464,   460,   638,   567,   944,    52,   842,  1001,   994,   579,
     779,  1064,  1065,  1247,   636,   808,   952,   461,  1228,   757,
      40,  1264,   949,  1263,  1203,   768,  1383,  1844,   523,  1078,
    1098,  1089,   644,    57,    50,  1239,    71,  1294,  1295,  1297,
    1298,   554,  1235,  1895,  1275,   981,  1428,   581,  1910,    57,
    1912,  2166,  1217,  1326,  2112,  1805,  2182,    78,  1461,  1462,
    1403,  2190,  1863,  1401,  2041,  1010,  1384,  1891,  1839,   565,
    1268,   582,  1402,  2193,  2067,  -986,  1399,  1751,   647,  -428,
     590,   973,  1839,   653,  1577,   468,   528,  2084,  1580,   516,
     973,  2341,   984,  1533,  -636,  -669,  -649,  2346,   598,  1530,
     841,  -431,   847, -1008,   851, -1009,   968,   654,  1473,  1463,
    -664, -1008, -1008, -1009, -1009,  -677, -1525,  2350,  1157,  2511,
    1317,  2663,  -674,   860, -1525, -1525,  -674,   528,   670,   557,
     528,   670,   953,  1473,   528,  -677,  1946,  2291,  1154,   988,
     528,  2332,   655,   973,   670,   645,   629,  1220,   571,  1682,
     969,   988,  1144,  2395,  1147,  2442,   670,  1107,  1661,  2105,
    2470,  -173,   801,  -880,  1953,  1546,  -173,  1728,   946,   670,
    -880,  -428,   804,  2481,  -388,  1107,  1097,  1974,  1976,  2275,
    1190,   860,  1045,  2082,  2374,   949,  1248,  1114,  1510,  1251,
    1252,  1190,   947,  -431,  2483,  1511,  -899,  1099,  1751,   574,
     576,  1231,  2022,  -899,  2514,  1114,  2674,  2622,  2537,  1240,
    2430,  1266,  1351,  2635,   576,  1106,   653,   769,  1107,  1116,
    1231,  2411,  2317,   653,  1152,  1191,  1518,  2466,  2573,  1583,
    1923,  2124,  1601,   572,  1559,  2467,  1191,  1116,  1107,   797,
     654,  2484,   539,  2007,  1223,     3,     4,   654,  1114,  1155,
    2613,  2513,  2614,  1598,  1107,  1598,  1084,  2194,  1273,  1274,
    1216,  2347,  2113,   575,    79,  1258,  2134,  2453,  1114,  2633,
    2310,  1290,  1173,  2649,   986,  1919,  2348,   987,  1085,  2288,
    1116,  1231,  1708,  1002,  1192,  2496,  1899,  1709,  1920,  1259,
    2417,  1232,  1278,  1841,  2311,   591,  1073,  1074,  2340,  2589,
    1116,  2220,  2411,  2428,  2197,  1437,  2213,    80,  1999,   799,
    1599,  2434,  1888,  1853,  2147,  2084,  1116,  2248,   541,   970,
    1560,  2252,  2661,  2114,  2664,   791,   996,  2643,   653,   653,
    2123,  2670,  1193,   996,  1584,  2623,  2135,  1710,  1864,   576,
    1064,  1065,  1547,  1193,  1022,  1089,   526,  1854,  1078,  2289,
    1045,  2482,   654,   654,  2120,    24,  2122,  -428,  2636,    24,
    2675,   974,  2431,  1519,  2515,  1156,  1839,  1307,  1839,  1309,
     974,  1238,  2485,  2429,   860,   860,   860,  2008,   944,  -431,
     770,  2427,   771,  1723,  2276,  1291,  1107,  2009,  1194,    28,
    2656,  1225,  1214,    28,  1662,  1241,  1169,  2631,  2468,  1194,
    1751,  2665,  1215,  1277,  1335,  2618,  2612,  2534,  2280,    24,
    2624,  2237,  2195,  1569,  1103,  2136,  1114,  1350,  -428,  1864,
     542,   971,  2374,   974,  1593,   762,  1145,   792,  2666,    30,
    2211,  1148,   630,    30,  1057,  1058,   996,  2526,   996,   996,
    -431,  2204,    31,    28,   558,  2604,    31,  2590,  1116,  2292,
    2214,  1577,  2349,   573,  1876,  2411,  1238,  1474,  1428,  1075,
    2166,  1691,   527,  1936,  1937,  2591,    32,  1650,  1386,  1319,
      32,   560,  1388,   577,   608,   636,  2364,  2344,  1316,  2333,
      33,  1264,  1807,    30,    33,   860,  1322,  1125,   567,   606,
    1846,  2375,  2341,  2384,  1167,  1865,    31,  1168,  2388,  1226,
    1385,  2390,    57,   607,   996,   610,   528,   996,   996,  1392,
     975,  -880,   652,  1396,  1470,  1386,   949,  1187,   469,   980,
      32,  1826,  1827,  2345,  -428,  1052,   569,   602,  1870,  1267,
     649,   603,  1441,  1443,  1548,   809,  1512,   464,   464,  2411,
    1650,   583,   946,  1253,  -899,  1766,  -431,   647,  1924,  1045,
      57,   602,   653,  -986,   464,   603,  1532,  1084,   581,  2282,
    2536,  2540,  1848,  -428,  1099,  -428,   947,  2541,   946,   949,
     773,  2293,  1063,  -669,  1069,    52,   654,  1084,  2650,  1085,
     658, -1008,   582, -1009,   584,  -431,   789,  -431,  -664,  1240,
      40,   659,   947,  1086, -1525,   464,   464,   945,   780,  1085,
    -674,  1981,  1258,    57,    50,  1102,    71,  1627,  1150,   992,
     993,  1839,  1534,  1088,  1327,  1839,  2279,  1630,  1188,  1476,
    1633,   992,   993,   797,  2472,  1137,  1259,    78,  1896,  1045,
     570,  -173,  -173,  2491,  2319,  2320,   464,   616,  1084,  1619,
    1134,  1135,  1136,  1137,   624,   652,  1329,  1362,  1363,  2336,
     772,   670,   652,   464,  1046,   601,  1626,  1437,  1437,  2595,
    1085,   763,  1437,  1763,  1764,  1765,  1766,  1330,  1332,   464,
     628,  1331,   860,  2549,  1086,  2281,   670,   627,   946,  1254,
    1601,  1132,  1133,  1134,  1135,  1136,  1137,  1255,    57,   631,
    1874,  1703,  1701,   799,   472,   670,   567,   464,  1437,  1437,
    1494,  2550,   947,  2001,  1262,  1240,  1724,  1646,  1647,  1648,
    2166,  1428,  1987,  1989,  1990,  1985,   464,   464,   464,   944,
     464,   632,  1690,  1590,  1986,  1988,  1692,  1984,  2420,  1694,
     764,  2023,  1231,  1995, -1017, -1017,  1394,  1395,  1949,  1897,
     464,   800,  1234,   664,  1409,  2032,  1410,  1411,   642,    82,
    1625,   473,  1045,  2002,   529,  1366,  1367,   652,   652,  1628,
    1787,  1447,  2377,  1448,  1631,  2342,  1084,  2378,  1170,  1636,
    2669,  1171,  1057,  1058,  1643,  1241,  1459,  1839,  1847,  2075,
     660,  1075,  2026,  1181,  1182,   664,  1186,  1839,  1085,   464,
    1356,  1357,  1839,   464,   464,  1839,  2644,  2645,   662,   860,
     789,   946,  1088,   946,   464,  1264,   663,   582,   582,  1667,
     582,  2076,  1280,  1281,  1839,  2056,  2057,  2058,  2059,  1240,
    1269,   612,  1046,   613,  1495,   947,  2254,   947,   815,   602,
    1412,  1413,   761,   603,   816,  2078,  1238,  1726,  1496,  1934,
     797,     3,     4,  1497,  2672,   798,   464,   464,   464,  1132,
    1133,  1134,  1135,  1136,  1137,  1362,  1363,  1265,  2517,  1925,
    1867,   767,  2521,  1761,  1762,  1763,  1764,  1765,  1766,   665,
    2441,    24,   860,  1576,  1576,  1063,  -474,  1318,  1498,   776,
     602,  -474,  -986,   946,   603,  1323,  1870,   818,  1171,  1349,
    1106,  1241,  1350,  1107,  1954,  1839,  1482,  1108,   781,  1961,
     653,  1782,   516,  1045,  2532,    28,    83,   947,   784,  1063,
     799,  1318,  1380,   653,    84,  1381,  2126,   477,   614,   478,
     615,  2162,  1483,  1114,   654,   996,  1063,  1839,   977,  1795,
   -1526,  1240,   785,  1542,  1272,   996,   980,   654,   996,   817,
     782,  1898,  1899,   480,  1707,    30,  -474,    85,  1711,  1679,
    1712,  1680,  1238,  2080,  1240,  1116,   788,   464,   800,  1781,
     787,  1783,  1784,  1366,  1367,  1588,  1843,   795,  1171,  1097,
    1900,   945,  1063,   810,  1318,    24,  1437,  1437,  1437,  1437,
     812,   652,  1437,  1437,  1437,  1437,  1437,  1437,  1437,  1437,
    1437,  1437,   669,    86,  -474,  1751,    33,   945,  2127,   649,
   -1526, -1526, -1526,  2568,  1658,  1241,   813,  1659,  1686,    28,
     996,  1350,  1907,  1697,  1909,  1839,  1698,  1725,   814,    57,
    1171,  1046,  1499,   996,  1794,  1797,  1294,  1295,  1297,  1298,
    1484,  1437,  1437,  1732,  2201,  1485,  1171,   815,  1736,  1240,
    1486,  1171,   826,   816,   464,  1718,  1922,   827,  1839,    30,
     464,  1798,   608,   464, -1526,  1770,  1970,   464,  1171,  2454,
     844,  2128,    31,  2129,  1366,  1367,  1238,   606, -1526,  1926,
    1943,   464,   848, -1526,   464,   464,   464,   464,  1428,  2145,
      57,   607,  2138,   610,   464,   464,    32,   818,  2662,  2632,
    2121,   950,  2258,  2024,  2025,  2261,   464,  1578,  1579,  1335,
      33,  1046,   464,   464,   464,   464,   464,   945, -1526,  2646,
    2455,   464,   464,  2137,   951,  2146,   464,  1241,  2456,  2295,
     464,  2179,   954,   464,   464,   464,   464,   464,   464,   464,
     464,   464,  1839,    24,   464,  -521,  -521,  1043,   464,   956,
    1241,   820,   464,  1819,   464,  1820,  2327,  2457,   817,  1106,
    1913,  2323,  1107,  1914,  1930,   963,  1108,  1109,  1110,  1111,
     965,  2103,  1125,  2676,  1799,   464,  2298,    28,    24,  1800,
     821,   860,    53,   946,   946,   946,  1917,  1487,  1238,  1918,
     773,  1550,  1114,   464,  1821,   967,  1822,  1488,    53,  1115,
     972,  1991,   464,   464,  1171,   983,  1965,   947,   947,   947,
    1045,  1238,    28,   979,  1386,   566,   982,    30,  2037,  1845,
     619,  1171,  2101,   985,  1116,  2102,  2458,  2253,  2106,  2256,
      31,  2107,   815,  2300,  1046,  1241,   977,  2459,   816,   580,
     945,   619,   945,  2125,   822,  2030,  1659,   794,  1158,   796,
    1875,  1875,    30,  1003,    32,   620,   517,    53,  2185,  -525,
    -525,  1659, -1526,  1045,   574,    31,  2202,  2221,    33,  2203,
    1381,   656,   657,   946,  1757,   653,   620,  -475,   758,  1047,
     760,   464,  -475,  1045,   464,   464,  2159,   464,   621,    32,
    2284,   759,  2285,  1659,  1386,  1659,  1238,   947,  2365,   654,
    1048,  1381,  1050,   518,  -640,  1870,   818,  2421,  2447,  1945,
    2422,  1659,  1045,  -647,   464,  1043,  1801,  2440,  1056,  2089,
    1059,  1683,   945,  1117,  2473,  2523,  1802,  1381,   575,  1619,
    2303,  2167,  2283,  1060,   622,  1045,  2145,  1118,  2476,   652,
    2162,  2477,  1119,   817,  1066,  2488,  2493,  -475,   980,  2494,
    1061,  1351,   652,   472,   464,   622,   819,  -637,  2497, -1526,
     820,  2494,  2509, -1526, -1526,  2510,  1132,  1133,  1134,  1135,
    1136,  1137,  2546,  2304, -1052,  2510,  1062,  1122,  2178,  -524,
    -524,   815,  2200,  2547,    33,  1046,  1381,   816,  2305,   821,
    1068,   464,   464,  1364,  1365,  -475,   997,   464,  1163,  1165,
    2074,  1980,  1982,   997,   576,  2495,  2555,  -638,  2495,   980,
     473,  1071,  -641,  2561,   487,   567,  2494, -1526,   515,  2576,
    1072,  1077,  2577,  2460,   532,  2605,  2461,    87,  2606,  2608,
     467,  1125,   980,  1079,   564,   564,   514,   464,   464,   464,
    2639,  2657,   464,  2494,  2510,   540,  1437,  1080,  1081,   552,
    1082,  2165,  -639,   822,   464,   464,   464,   464,  1083,   567,
    1090,  1091,   464,   475, -1526, -1526, -1526,  1101,  1761,  1762,
    1763,  1764,  1765,  1766,  1100,  2075,  1142,  1147,   464,   464,
    1148,  2306,  1161,   464,  1104,  1174,   594,  1180,   798,   946,
     800,   818,   817,   946,  1210,   946,  1151,   464,  1212,  1218,
     464,  1236,   464,  1237,  1238,  2315,  1159,  2076,   997,   997,
    1243,  1245,  1244,   947,  1043,  1249,   949,   947,  1256,   947,
    1257,  1127,  2077,   464,  1261,  1276,  1271,  2445,   567,  1283,
    1386,  2078,  1437,  1284,   464,  1837,  1288,  1292,   577,  1300,
    1293,   845,  1303,  1304,  1306,   820,  1310,  1052,   464,  1837,
    1318,   461,  1063,  1348,  1069,  1870,  1352,  1387,   608,  1388,
    1393,   670,   464,  1445,  2079,   461,   462,  2324,  2325,  1970,
    1446,   488,  1045,   606,   846,   488,   477,   464,   478,  1107,
     531,   488,   536,  2270,  1458,   536,    57,   607,   556,   610,
    2162,   488,   488,  1472,  1043,   464,  1437,   669,  1479,   479,
    1751,  1490,   480,  1493,   996,  1752,  1753,  1754,  1491,  1514,
    1515,  1530,   945,   945,   945,  1536,  1543,  1544,  1128,  1551,
     575,  1129,  1130,  1131,  1558,  1132,  1133,  1134,  1135,  1136,
    1137,  1570,  1571,  1572,  1573,   536,  1591,  1595,   822,  1596,
     818,   576,   556,   488,   556,   556,   556,  1597,  1651,  2080,
    1656,    53,  1664,   464,  1660,  1668,  1669,  1684,  1670,  1688,
    1724,  1689,  1693,  1695,  2205,  1696,  1704,  1714,  1719,  1716,
     815,  1717,  1106,  1734,  1720,  1107,   816,  1735,  1721,  1108,
    1722,  1045,  1046,   471,  1738,  1737,  1739,   472,  2326,  1740,
     849,  1741,  1743,  1171,   820,  2159,  1744,  1747,  1776,    53,
     566,  1769,   945,  1775,   652,  1114,   946,  1777, -1052,  1796,
    1778,  1683, -1526,  1779,  1786,  1789,  1035,  1043,  1791,  1803,
    1812,  1813,  1815,   850,  1817,  1816,  1841,  1850,  1852,  1859,
     947,  1866,   464,  -526,  1872,  1046,  -527,  1116,  1877,  1878,
    1880,  1881,   464,  1882,   473,  1884,   464,  1045,  1887,   464,
     580,   474,    53,  1890,  1893,  1046,   464,   464,   464,   464,
    1906,  1886,   464,   464,   464,   464,   464,   464,   464,   464,
     464,   464,  1908,  1724,  1921,   464,   464,  1927,   653,  2051,
    1755,   817,  1928,  1929,  1046,  1931,   815,   822,   815,   464,
    1932,  1935,   816,   567,   816,   464,  1933,   475,   464,  1963,
     464,  1756,   654,  1951,  1955,  1952,  1804,  1046,   464,  2424,
     567,   464,   464,  1408,  2272,  2475,   464,   464,  1264,  1956,
    1959,  1962,  1966,   996,  1973,  1979,  1983,  1994,   996,  2520,
    1772,  1751,   464,  1837,   464,  1837, -1526,    53,  1771,  2027,
    2028,  2039,  1330,  1332,  2029,   464,  2040,  1037,  2527,   461,
   -1526,   461,  2043,  2052,   464, -1526,  2065,  1097,  1824,  2073,
    2165,  2087,  2091,  1038,  2098,   476,  2093,  2115,  1043,  1757,
     464,  2095,  2100,  2096,  1067,  2104,  2480,  2074,  2111,  2119,
    2131,    24,  2133,  2149,  1035,  2188,  2192,  2181,  2187,   626,
   -1526,  2198,  2206,  1659,  2480,  1045,  2207,   817,  2212,   817,
    2249,  2209,  2215,  1535,  2216,  2244,  2250,  2229,  1095,  2239,
     477,  2240,   478,  2247,  2257,    28,   641,  1040,   945,  2263,
    2262,  2264,   945,  1046,   945,  1045,  2265,  2278,  1045,   818,
    2286,  2575,  2290,   479,  2548,  2313,   480,  2314,  2318,  2328,
    2329,  2330,  2331,  2337,  1125,  2159,  2338,  2351,  2352,  2354,
    2358,  2529,  2075,  2362,  2339,    30,  2357,  2360,  2370,  2363,
    2376,  2389,  2394,  2403,   564,  2407,  2413,  2415,    31,  2416,
    2418,  2423,  2432,  2435,  2436,   580,   580,  2196,   580,  1589,
    2437,  2438,  2446,   820,  2076,  2450,  2449,  2464,  2520,  2451,
    2558,  2465,    32,   946,  2474,  2478,   464,   946,  2486,  2077,
    2499,  2487,  2503,  2629,  1330,  1332,    33,  2490,  2078,  2506,
     828,  2525,   821,   996,  2511,  1037,  2528,   947,  2530,  2533,
    2542,   947,  2543,  2544,  2570,  2564,  2554,  2563,  2565,   829,
     556,  1038,  2574,  2578, -1526,  2431,   618,  2580,   464,   464,
    2581,  2079,   556,   464,  1046,   818,   488,   818,   464,  2583,
    2586,   464,   464,   593,  2587,   596,   464,   600,  2588,  1758,
    1759,  1760,  2385,  1761,  1762,  1763,  1764,  1765,  1766,  2592,
    2593,   635,   488,   488,  2594,  2619,   822,   464,  1837,   830,
     997,   464,  1837,  1035,  1706,  1040,  2603,  2607,  2053,  2625,
    2634,  2640,  2641,   997,   461,  1634,  2648,  1641,   461,   820,
    2651,   820,   464,  2653,  2658,   536,  2659,   536,  2660,   669,
    2165,  2649,  1751,   556,  2650,  2271,  2273,  1752,  1753,  1754,
    2671,   488,  2673,  2677,   786,  1621,  2080,  2148,  1635,  2152,
    1642, -1526,  1904,   556,  2034,   945,  2569,  2274,  1132,  1133,
    1134,  1135,  1136,  1137,   464,   556,  2108,  2406,  2615,  2186,
    2524,  2321,   946,  1046,  2668,  2654,  2621,  2647,  1227,  2463,
    1046,  1911,  2191,  1035,  1889,  1043,  2617,   831,    53,  1940,
    2652,  1885,  2153,  2616,  2180,  1941,   947,  1868,  1967,  2359,
     556,   556,   556,  1587,   564,  1153,  2557,  1206,   669,  1172,
    1315,  1751,   822,  1207,   822,  1041,  1752,  1753,  1754,  2505,
    2611,  1879,  1567,  2343,  2094,  2562,  2268,   652,  1849,  1586,
    2386,  2068,  2238,  2035,  1037,   832,   464,  2255,  1043,  1046,
    1211,  2492,  2064,   833,  1049,  2553,  2552,   464,   464,    53,
    1038,   464,  2559,  1715,  2560,   834,  1398,  2405,  1043,  2609,
    2602,  1400,  1404,   464,  1837,  1405,  2610,   669,  1520,  1871,
    1751,  1810,  1729,   464,  1837,  1752,  1753,  1754,   464,  1837,
     461,   464,  1837,   996,  1655,  1808,   835,  1043,   464,   464,
     461,  1944,  2223,  2545,  1529,   461,  1328,  1538,   461,  1415,
     464,  1837,   464,  1175,  1040,  2109,  1035,  1416,  1417,  1418,
    1043,  1713,     0,  1540,  1037,     0,     0,   461,     0,     0,
       0,  1480,   464,     0,     0,     0,     0,     0,     0,     0,
    1038,   837,     0,  1756,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   556,     0,     0,     0,     0,
       0,     0,  1046,   838,     0,     0,     0,     0,     0,     0,
       0,   488,   488,     0,     0,     0,     0,   556,   556,  1179,
       0,     0,  2448,   840,     0,     0,     0,     0,    53,  1916,
       0,   464,  1837,  1041,  1040,     0,   464,  1046,     0,     0,
       0,     0,     0,  2343,   556,  1230,     0,   567,   461,  1336,
       0,  1757,     0,  1320,     0,  1321,     0,   556,     0,   464,
       0,     0,  1756,   464,  1837,     0,     0,  1046,     0,     0,
    1046,   464,  1939,     0,   556,     0,  1043,     0,   556,     0,
     461,     0,   464,     0,     0,     0,     0,  1037,     0,     0,
       0,     0,   945,  1337,     0,     0,   945,   464,     0,     0,
       0,     0,     0,  1038,     0,     0,     0,  1035,     0,     0,
       0,   611,     0,     0,     0,   997,     0,     0,     0,  1338,
    1971,  1756,  1972,   623,     0,     0,  1977,  1978,  2655,     0,
    1757,     0,     0,     0,     0,  2539,     0,  1339,     0,     0,
       0,  1340,     0,     0,     0,     0,     0,     0,   464,     0,
       0,   464,  1837,  -440,     0,     0,     0,  1040,    53,     0,
       0,     0,  1341,     0,     0,  1342,  -440,     0,   461,     0,
       0,  -440,     0,   464,     0,     0,     0,     0,     0,  1343,
       0,  1287,     0,     0,   464,  1837,   556,     0,     0,  1757,
       0,  2566,     0,     0,   766,     0,  1313,  1043,     0,     0,
       0,   461,   635,     0,   464,   635,     0,     0,     0,   488,
     488,     0,   488,   635,     0,   556,     0,  -440,     0,     0,
       0,  1869,     0,   464,   464,     0,   811,     0,     0,     0,
       0,     0,  1041,     0,     0,     0,  -440,     0,  1037,  1748,
    1749,  1758,  1759,  1760,  1768,  1761,  1762,  1763,  1764,  1765,
    1766,   945,  1046,     0,  1038,     0,     0,     0,     0,     0,
       0,   958,   960,   962,     0,     0,     0,  1344,   464,  1837,
     464,     0,  2630,     0,     0,  1345,     0,     0,     0,     0,
    1792,  1793,     0,     0,  -440,   461,     0,  1095,     0,     0,
       0,     0,     0,  -440,     0,  1594,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1602,  1043,  1605,  1040,  1430,
    1616,     0,  1041,  1043,     0,     0,  1620,  1346,  1622,     0,
    1758,  1759,  1760,     0,  1761,  1762,  1763,  1764,  1765,  1766,
    1629,  1095,   464,     0,  2164,  1632,     0,     0,     0,  1637,
    1638,  1639,  1640,     0,  1644,  1645,   635,     0,     0,  1480,
       0,     0,     0,     0,     0,     0,  1939,     0,     0,     0,
       0,   815,     0,     0,     0,  1814,     0,   816,     0,     0,
       0,     0,  1043,     0,   828,     0,     0,   556,     0,  1758,
    1759,  1760,  1831,  1761,  1762,  1763,  1764,  1765,  1766,     0,
       0,     0,     0,   829,     0,    53,  1831,   556,     0,   556,
     566,     0,     0,     0,  1035,     0,  1166,     0,  1552,     0,
    1557,  1419,  1420,  1421,     0,  1422,  1423,  1424,  1425,  1426,
    1427,     0,     0,     0,     0,     0,     0,  -440,     0,  1177,
       0,     0,     0,     0,     0,  1041, -1432,     0,     0,     0,
       0,     0,   556,   830,     0,     0,     0,     0,     0,     0,
       0,  1230,   488,     0,     0,  1219,     0,  1035,     0,     0,
    1042,     0,   488,  1603,   488,  1607,     0,   488,  1246,     0,
       0,     0,   817,   488,     0,   488,  1106,  1035,     0,  1107,
       0,     0,     0,  1108,     0,  1043,   635,   488,     0,  1270,
     602,   635,   488,   784,   603,     0,   488,   488,   488,   488,
       0,   488,   488,     0,     0,  2295,  1035,     0,  2267,  1114,
    2269,  2296,     0,     0,     0,     0, -1526,     0,     0,     0,
    1043,   556,  1666,  2297,     0,     0,     0,     0, -1432,  1035,
       0,   831,     0,     0,  1678,  1037,     0,     0,     0,     0,
       0,  1116,     0,     0,     0,     0,     0,     0,    53,     0,
    1043,  1038,  2298,  1043,  2299,     0,     0,     0,  2003,  2004,
    2005,  2006,     0,     0,  2010,  2011,  2012,  2013,  2014,  2015,
    2016,  2017,  2018,  2019,     0,   669,     0,     0,  1751,   832,
   -1432,     0,     0,  1752,  1753,  1754,  1041,   833,  1037, -1434,
       0,     0,     0, -1432,     0,     0,     0,  1299, -1432,   834,
    2224,     0,     0, -1432,  1038,  1040,     0,     0,  1037,  2300,
    2044,     0, -1432,  2045,  2046, -1432,     0,     0,   997,     0,
     818,     0,     0,     0,  1038,     0,  1325,     0,  1042,     0,
     835,     0,     0,     0,     0,     0,  2301,  1037,     0,     0,
   -1526,     0,     0,     0, -1432,  1035,     0,   828,     0,     0,
       0,     0,     0,  1038, -1526,     0,     0,     0,  1040, -1526,
    1037,     0,     0, -1432,     0,  1095,   829,     0,     0,     0,
     836,     0,     0,     0,   820,   837,  1038,     0,  1040,     0,
    2063, -1434,  2066,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0, -1526,     0,     0,   838,     0,     0,
       0,  2302,     0,   839,     0,     0,  2303,  1040,     0,     0,
       0, -1432,     0,     0, -1432,     0,   830,   840,     0,     0,
   -1432,  1430,     0,     0,     0,     0,     0,     0,     0,     0,
    1040,     0,     0, -1434,     0,  1043,     0,     0,     0,     0,
       0,     0,     0,  2164,     0,     0, -1434,     0,  1125,  2304,
       0, -1434,     0,   556,     0,  1958, -1434,     0,     0,     0,
    1840,     0,     0,     0,  2305, -1434,  1035,   822, -1434,     0,
       0,     0,     0,     0,  1840, -1432,  1037,     0,  1858,  1756,
       0,  1861,  2141,  1557,     0,     0,     0,     0,  1528,     0,
       0,     0,  1038,     0,     0,     0,     0, -1434,     0,     0,
       0,     0,     0,     0,   831,     0,     0,     0,  1537,     0,
    1539,     0,     0,     0,    53,     0, -1434,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1042,  1824,  1287,
       0,     0,     0,     0,     0,     0,     0,     0, -1526,     0,
       0,     0,     0,     0,     0,     0,  1040,  1757,     0,     0,
       0,     0,   832,  1582, -1432,     0,     0,  2306,     0,     0,
     833,  2535, -1432,     0, -1434,     0,     0, -1434,     0,     0,
       0,     0,   834, -1434,     0,  1035,   669,     0, -1432,  1751,
   -1432, -1432,  1035,  1041,  1752,  1753,  1754,     0,     0,  1287,
       0,     0,     0,     0,   556,     0,     0,  1037,  1287,   556,
     556,   556,     0,   835,     0,     0,     0,  1042,     0,     0,
       0,     0,   488,  1038,     0,     0,     0, -1432,     0,   556,
   -1432, -1432, -1432,   635,     0,  1831,     0,     0, -1434,  1831,
       0,     0,  1665,     0,     0, -1526,  1041,     0,     0,  1287,
    1287,  1035,  1132,  1133,  1134,  1135,  1136,  1137,   837,     0,
       0,     0,    53,    53,     0,  2117,  1041,     0,   828,     0,
       0,     0,     0,   669,     0,     0,  1751,  1040,     0,     0,
     838,  1752,  1753,  1754,  1430,     0,     0,   829,     0,  2150,
       0,  1824,     0,     0,     0,  1041,     0,     0,     0,     0,
     840,     0,     0,  2164,  2168,  2169,  2170,  2171,  2172,  2173,
    2174,  2175,  2176,  2177,     0,     0,  1037, -1434,  1041,     0,
       0,     0,     0,  1037,     0, -1434,     0,     0,  2361,     0,
       0,     0,  1038,     0,     0,     0,     0,   830,     0,  1038,
    1042, -1434,     0, -1434, -1434,     0,     0,  1758,  1759,  1760,
      53,  1761,  1762,  1763,  1764,  1765,  1766,  2055,     0,     0,
       0,     0,     0,     0,  1035,   556,   556,   556,   462,     0,
    1840,  2072,     0,     0,     0,  2072,  2086,     0,     0,     0,
   -1434,     0,  1037, -1434, -1434, -1434,  1040,     0,     0,     0,
    1756,     0,     0,  1040,     0,     0,     0,     0,  1038,  1035,
       0,     0,     0,     0,  1557,     0,     0,     0,     0,     0,
       0,  1831,     0,     0,  2426,     0,  1831,     0,     0,  1831,
     556,     0,   488,     0,     0,   831,  1287,  1230,  1287,  1035,
    1313,     0,  1035,     0,  1041,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   488,     0,  2151,     0,
       0,     0,  1040,     0,     0,     0,     0,     0,  1757,     0,
       0,   488,   488,   488,   488,   488,   488,   488,   488,   488,
     488,     0,     0,   832,  1823,     0,     0, -1526,  2471,     0,
       0,   833,     0,     0,     0,   556,     0,     0,     0,     0,
       0,  1042,  1230,   834,     0,  1037,     0,     0,     0,    53,
       0,     0,     0,  1313,   828,     0,   556,     0,     0,     0,
       0,  1038,     0,  1287,     0,     0,     0,     0,     0,     0,
      53,     0,     0,   829,   835,     0,     0,     0,     0,     0,
    1037,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1757,  1038,     0,     0,     0,
       0,  1831,     0,     0,     0,  1041,     0,     0,     0,  1095,
    1037,     0,     0,  1037,     0,  1040,     0,     0,     0,   837,
       0,     0,     0,   830,  2139,     0,  1038,     0,     0,  1038,
       0,     0,  2140,     0,     0,     0,     0,     0,     0,     0,
       0,   838,     0,  2232,     0,     0,   556,   556,   556,   556,
    1040,     0,     0,  2072,  2086,     0,  2072,     0,     0,  2242,
       0,   840,    53,  1840,  1035,  1942,     0,  1840,     0,     0,
    1947,  1948,  1950,  2260,     0,     0,     0,     0,     0,     0,
    1040,     0,     0,  1040,     0,     0,     0,     0,     0,  2141,
    1964,     0,  1858,   740,   740,     0,     0,  1557,  1758,  1759,
    1760,  1430,  1761,  1762,  1763,  1764,  1765,  1766,     0,  1230,
       0,   831,     0,     0,  1041,     0,     0,     0,    53,     0,
       0,  1041,     0,     0,     0,     0,     0,     0,     0,     0,
    2425,     0,     0,     0,  2322,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   857,   862,     0,     0,     0,     0,     0,     0,   832,
       0,     0,  2443,  2444,     0,     0,     0,   833,     0,     0,
       0,  1287,     0,     0,     0,  2452,     0,  1678,     0,   834,
    1041,  2142,     0,     0,     0,  1758,  1759,  1760,  2355,  1761,
    1762,  1763,  1764,  1765,  1766,  1037,     0,     0,     0,    53,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   857,
     835,  1038,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1054,  2060,  2061,  2062,   462,
    2072,     0,     0,     0,  2382,     0,     0,   488,  1042,  1840,
    2507,     0,     0,     0,  1840,     0,     0,  1840,     0,  2393,
       0,     0,  2396,  1076,     0,   837,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1040,  2412,     0,     0,     0,
       0,     0,  1092,  1093,  1094,     0,  1096,   838,     0,     0,
       0,  2116,     0,     0,     0,     0,   635,   488,     0,     0,
       0,  1042,     0,  1041,     0,   556,  1146,   840,     0,  2143,
       0,     0,  2144,     0,     0,     0,     0,     0,     0,     0,
       0,  1042,     0,     0,     0,     0,     0,     0,     0,   488,
     488,     0,     0,     0,     0,     0,     0,     0,  1041,  1230,
       0,     0,   488,     0,     0,     0,     0,     0,     0,     0,
    1042,     0,     0,     0,   556,  1185,  2184,  2412,     0,  1197,
    1202,     0,     0,     0,     0,     0,     0,     0,  1041,     0,
       0,  1041,     0,  1042,     0,     0,   488,  1325,     0,     0,
       0, -1448,     0,     0,     0,     0,     0,     0,  1106,  1840,
       0,  1107,     0,     0,  2396,  1108,     0,     0,     0,     0,
       0,     0,     0,  2502,     0,     0,     0,   488,     0,     0,
       0,  1238,   857,   857,   857,     0,   556,     0,     0,     0,
       0,  1114,     0,     0,     0,     0,     0,     0, -1526,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   635,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   556,
       0,     0,   -38,  1116,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2233,  2234,  2235,
    2236,     1,     0, -1448,     0,     0,     0,   462,     0,     0,
       0,     2,     0,     3,     4,     0,  2556,     0,     0,  1042,
     488,     0,     0,     0,  2393,     0,     0,     0,     0,     5,
       0,     0,     0,     0,     0,     0,     0,     0,     6,     0,
    2412,   635,   635,   635,     0,     0,     0,     0,     0,     0,
       7,     0,  2047,   857,     0, -1448,     0,     0,     0,     0,
       0,     8,     0,     0,     0,     0,     0,     0, -1448,     0,
       0,     0,     9, -1448,    10,     0,     0,     0, -1448,     0,
       0,     0, -1526,  1041,  2393,     0,     0, -1448,     0,     0,
   -1448,     0,    11,  2502,     0,  2382, -1526,     0,     0,     0,
       0, -1526,     0,     0,  1557,     0,    12,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    13,     0,  1230, -1448,
       0,     0,    14,     0,  2412,     0,     0,     0,     0,     0,
      15,     0,    16,    17,     0,     0, -1526,     0, -1448,     0,
    1042,     0,   635,     0,     0,     0,  1391,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1397,     0,   528,     0,     0,  1414,     0,     0,
    1431,     0,    18,  1442,     0,     0,     0,     0,     0,     0,
    1449,  1454,     0,     0,     0,     0, -1448,     0,     0, -1448,
    1125,     0,  1460,     0,     0, -1448,     0,     0,  1464,  1465,
    1466,  1467,  1468,     0,     0,     0,     0,  1477,  1478,     0,
       0,    19,  1489,     0,     0,     0,  1492,     0,     0,  1500,
    1501,  1502,  1503,  1504,  1505,  1506,  1507,  1508,     0,     0,
    1509,     0,     0,     0,  1517,     0,     0,     0,   740,     0,
     857,     0,     0,     0,     0,     0,  2433,     0,     0,  1042,
   -1448,     0,     0,     0,     0,     0,  1042,     0,     0,  1140,
       0,  1541,     0,     0,     0,     0,  1106,  1354,  1355,  1107,
       0,     0,     0,  1108,  1109,  1110,  1111,     0,     0,     0,
   -1526,     0,     0,     0,     0,     0,     0,    20,  1093,  1094,
      21,  1112,     0,     0,     0,  2469,     0,  1140,     0,  1114,
       0,     0,     0,  1824,     0,     0,  1115,     0,     0,     0,
       0,     0,     0,     0,     0,  1042,     0,     0,    22,     0,
       0,     0,     0,     0,     0,     0,    23,     0,     0, -1448,
       0,  1116,     0,     0,     0,     0,     0, -1448,     0,     0,
      24,  1356,  1357,     0,     0,     0,     0,    25,     0,     0,
       0,    26,     0, -1448,     0, -1448, -1448,  2516,     0,     0,
       0,    27,     0,     0,     0,     0,     0,   857,     0,     0,
    1652,  1653,     0,  1654,    28,     0,  1140, -1526,     0,     0,
       0,  1140,     0,     0,  1132,  1133,  1134,  1135,  1136,  1137,
    2538,     0, -1448,     0,     0, -1448, -1448, -1448,     0,     0,
    1687,     0,  1358,  1359,  1360,  1361,  1362,  1363,     0,    29,
    1364,  1365,     0,     0,    30,     0,     0,     0,     0,     0,
    1354,  1355,     0,     0,     0,     0,     0,    31,  1042,     0,
    1117,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     857,     0,     0,     0,  1118,     0,     0,  1105,     0,  1119,
       0,    32,  1106,     0,     0,  1107,     0,     0,     0,  1108,
    1109,  1110,  1111,  1042,     0,    33,     0,     0,   -38,     0,
    1120,  1121,     0,     0,     0,     0,     0,  1112,  1727,     0,
    1113,     0,     0,  1733,  1122,  1114,     0,     0,     0,     0,
       0,     0,  1115,  1042,  1356,  1357,  1042,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1366,  1367,     0,  1116,     0,     0,
       0,  1123,     0,     0,  1124,  1750,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1125,     0,
    1454,  1126,  1454,  1454,     0,     0,     0,     0,  1788,     0,
       0,  1354,  1355,     0,     0,  1358,  1359,  1360,  1361,  1362,
    1363,     0,     0,  1364,  1365,     0,     0,     0,     0,     0,
       0,     0,     0,  1140,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1806,  1106,     0,  1809,  1107,  1811,     0,
       0,  1108,  1109,  1110,  1111,  1140,     0,     0,     0,     0,
    1438,     0,     0,     0,     0,     0,     0,     0,     0,  1112,
       0,  1140,  1140,  1140,     0,  1140,  1117,  1114,     0,     0,
       0,     0,  1368,  1369,  1115,  1356,  1357,     0,  1127,     0,
    1118,     0,     0,  1106,     0,  1119,  1107,     0,     0,     0,
    1108,  1109,  1110,  1111,     0,     0,     0,     0,  1185,  1116,
       0,     0,     0,     0,     0,     0,  1120,  1121,  1112,     0,
       0,     0,     0,  1202,     0,  1140,  1114,  1366,  1367,     0,
    1122,     0,     0,  1115,     0,     0,     0,     0,  1042,     0,
       0,  1883,     0,     0,     0,     0,  1358,  1359,  1360,  1361,
    1362,  1363,     0,     0,  1364,  1365,     0,     0,  1116,     0,
       0,     0,     0,     0,  1140,     0,     0,  1123,     0,     0,
    1124,     0,     0,     0,     0,     0,  1140,     0,     0,     0,
       0,  1140,     0,     0,  1125,  1128,     0,  1126,  1129,  1130,
    1131,     0,  1132,  1133,  1134,  1135,  1136,  1137,     0,   857,
       0,     0,     0,     0,     0,  1742,     0,     0,  1117,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1118,     0,     0,     0,     0,  1119,     0,     0,
       0,     0,     0,     0,     0,  1368,  1369,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1120,  1121,
       0,     0,     0,     0,     0,  1370,     0,  1117,  1366,  1367,
       0,     0,  1122,     0,     0,     0,     0,     0,     0,     0,
       0,  1118,     0,     0,  1127,     0,  1119,     0,  1993,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1997,     0,
       0,     0,  1998,     0,     0,  2000,     0,  1120,  1121,  1123,
       0,     0,  1124,     0,     0,     0,     0,     0,     0,     0,
       0,  1122,     0,     0,     0,     0,  1125,     0,     0,  1126,
       0,  2020,  2021,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2033,     0,     0,  2036,     0,  2038,     0,  1123,     0,
       0,  1124,     0,     0,  2042,     0,     0,     0,     0,     0,
       0,     0,  2049,  2050,     0,  1125,  1368,  1369,  1126,     0,
    1140,  1128,     0,     0,  1129,  1130,  1131,     0,  1132,  1133,
    1134,  1135,  1136,  1137,     0,     0,     0,     0,     0,     0,
       0,  2090,     0,  1140,     0,     0,     0,     0,     0,     0,
    2097,     0,     0,     0,     0,     0,  1127,     0,     0,     0,
    1140,     0,  1438,  1438,     0,  1767,  2110,  1438,     0,     0,
       0,  1140,     0,     0,     0,     0,     0,     0,  1140,     0,
       0,     0,     0,  1140,     0,     0,     0,     0,     0,  1140,
       0,     0,     0,  1140,  1140,  1140,  1140,  1140,     0,     0,
       0,     0,     0,  1438,  1438,  1127,  1140,  1140,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1140,     0,
       0,  1140,     0,     0,     0,     0,     0,     0,     0,  1140,
    1140,  1140,  1140,  1140,  1140,  1140,  1140,  1140,  1140,     0,
       0,     0,     0,     0,     0,     0,  1140,     0,     0,     0,
       0,     0,     0,  1128,     0,     0,  1129,  1130,  1131,     0,
    1132,  1133,  1134,  1135,  1136,  1137,     0,     0,  1282,     0,
    1140,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2208,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1128,     0,     0,  1129,  1130,  1131,     0,  1132,
    1133,  1134,  1135,  1136,  1137,     0,     0,     0,     0,  1457,
       0,  1106,     0,     0,  1107,     0,     0,     0,  1108,  1109,
    1110,  1111,     0,     0,  2217,  2218,     0,     0,     0,  2219,
       0,     0,     0,     0,  2222,     0,  1112,  2225,  2226,     0,
       0,     0,  2230,     0,  1114,     0,     0,     0,     0,     0,
       0,  1115,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1140,  1140,  1140,     0,     0,  1116,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   740,  1106,
       0,     0,  1107,     0,     0,     0,  1108,  1109,  1110,  1111,
       0,     0,     0,     0,     0,     0,  1140,     0,     0,     0,
       0,     0,     0,     0,  1112,     0,     0,     0,     0,     0,
       0,     0,  1114,     0,     0,     0,     0,     0,     0,  1115,
    2316,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1140,     0,     0,     0,
       0,     0,  1140,     0,  1116,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1767,  1767,  1140,
       0,  1438,  1438,  1438,  1438,  1117,     0,  1438,  1438,  1438,
    1438,  1438,  1438,  1438,  1438,  1438,  1438,  1767,     0,  1118,
       0,     0,     0,     0,  1119,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1140,     0,     0,
       0,  1767,  1767,  2366,  2367,  1120,  1121,  2368,     0,     0,
       0,     0,     0,     0,     0,  1140,  1438,  1438,  1140,  1122,
    1140,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1117,  2401,  2402,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1123,  1118,  2414,  1124,
       0,     0,  1119,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1125,     0,     0,  1126,     0,     0,  1106,
       0,     0,  1107,  1120,  1121,     0,  1108,  1109,  1110,  1111,
       0,     0,  1140,     0,     0,     0,     0,  1122,     0,     0,
       0,     0,     0,     0,  1112,     0,     0,     0,     0,     0,
       0,     0,  1114,     0,     0,     0,     0,     0,     0,  1115,
       0,     0,  1106,     0,     0,  1107,     0,     0,     0,  1108,
    1109,  1110,  1111,     0,  1123,     0,     0,  1124,     0,     0,
       0,     0,     0,     0,  1116,     0,     0,  1112,     0,     0,
       0,  1125,     0,     0,  1126,  1114,     0,     0,     0,     0,
       0,     0,  1115,  1127,     0,  2489,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1096,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1116,  2508,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1140,  2522,     0,     0,  1140,  1140,     0,  1140,
       0,     0,  1767,  1767,  1767,  1767,     0,     0,     0,  1767,
    1767,  1767,  1767,  1767,  1767,  1767,  1767,  1767,  1767,  1140,
    1140,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1127,  1140,  1117,     0,  1140,     0,  1140,     0,     0,
       0,  1140,     0,     0,  1767,  1767,     0,  1118,  1140,  1140,
    1128,     0,  1119,  1129,  1130,  1131,     0,  1132,  1133,  1134,
    1135,  1136,  1137,     0,     0,     0,     0,  1790,     0,  2401,
       0,     0,     0,  1120,  1121,     0,  1117,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1122,     0,  1140,
    1118,     0,     0,     0,     0,  1119,  1140,     0,     0,     0,
    2585,     0,     0,     0,     0,     0,     0,     0,     0,  1140,
       0,     0,     0,     0,     0,     0,  1120,  1121,     0,  2599,
    2599,     0,     0,     0,  1123,     0,     0,  1124,  1128,     0,
    1122,  1129,  1130,  1131,     0,  1132,  1133,  1134,  1135,  1136,
    1137,  1125,     0,     0,  1126,  1996,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2599,  1123,     0,     0,
    1124,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1125,     0,     0,  1126,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1140,     0,     0,
       0,  1438,     0,     0,     0,     0,  1140,  1140,  1140,     0,
       0,  1140,     0,     0,  1140,  1140,     0,     0,  2599,  1140,
       0,  1127,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1127,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1438,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1140,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1128,     0,
       0,  1129,  1130,  1131,     0,  1132,  1133,  1134,  1135,  1136,
    1137,     0,     0,     0,     0,  2031,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1767,  1438,     0,     0,     0,  1140,  1140,  1140,     0,     0,
       0,  1128,     0,     0,  1129,  1130,  1131,     0,  1132,  1133,
    1134,  1135,  1136,  1137,     0,     0,     0,     0,  2118,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1140,  1140,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1140,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1767,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    88,   666,   528,
     667,   668,   669,   670,   671,     0,     0,     0,     0,     0,
    1767,     0,     0,    89,    90,    91,    92,    93,    94,    95,
      96,   852,    97,    98,    99,     0,     0,     0,  1140,     0,
       0,     0,   100,   101,     0,   102,   103,   104,   105,   106,
     107,   108,   109,   672,   111,   673,   674,  1140,   114,   115,
     116,   117,   118,   119,   675,   676,   120,   121,   677,   678,
     124,  1140,   125,   126,   127,   128,   679,     0,   680,     0,
     131,   132,   133,   134,   135,   136,   137,   138,   139,     0,
     140,   141,   142,   143,   144,   145,     0,   146,   147,   148,
     149,   681,   682,   683,   684,   685,   686,   687,   151,   152,
     153,   154,   155,   156,   157,   688,   689,   160,   690,   161,
       0,   162,   163,   164,   165,   166,   167,     0,   168,   169,
     170,   171,   172,   853,  1140,   173,   174,   691,   176,   177,
       0,   178,   179,   180,     0,   181,   182,   183,  1140,   184,
     185,   186,   187,   692,   189,   190,   191,   192,   693,   694,
     194,     0,   195,   196,   695,   198,     0,   199,     0,   200,
     201,     0,   202,   203,   204,   205,   206,   207,     0,   208,
       0,   209,   210,     0,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,     0,   222,   223,   224,   225,
     226,   227,     0,   228,   229,   230,   231,   232,   233,   234,
     696,   697,     0,   698,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,     0,     0,   248,   249,   250,
     251,     0,   252,   253,   254,   699,   700,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     701,   279,   702,   281,   282,   283,   284,   703,   285,   286,
     287,   288,   704,   705,   290,   706,   292,   293,   294,     0,
     295,   296,     0,     0,   707,   298,   299,     0,     0,   300,
     301,   302,   303,   304,   708,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,     0,   316,   317,   709,   319,
     320,   321,   322,   323,   324,     0,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   710,   335,   336,   337,   338,
       0,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     711,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,     0,   369,   370,   371,   372,   373,   712,   374,
     375,   376,   377,   378,   379,   380,   381,   713,   383,     0,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   714,     0,   397,   398,     0,   399,   400,   401,
     402,   403,   404,   405,     0,   715,   716,     0,     0,   408,
     409,   717,   411,   718,   719,   413,   414,   415,   416,   417,
     418,   419,     0,     0,   420,   421,   422,   423,   424,   720,
       0,   425,   426,   427,   428,   429,   430,   721,   854,   432,
     433,   434,   435,   436,   437,     0,     0,   438,     0,     0,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   722,     0,     0,     0,     0,     0,     0,   723,   724,
     855,     0,     0,     0,     0,     0,     0,   726,   856,     0,
       0,     0,   727,    88,   666,   528,   667,   668,   669,   670,
     671,     0,     0,     0,     0,     0,     0,     0,     0,    89,
      90,    91,    92,    93,    94,    95,    96,     0,    97,    98,
      99,     0,     0,     0,     0,     0,     0,     0,   100,   101,
       0,   102,   103,   104,   105,   106,   107,   108,   109,   672,
     111,   673,   674,     0,   114,   115,   116,   117,   118,   119,
     675,   676,   120,   121,   677,   678,   124,     0,   125,   126,
     127,   128,   679,     0,   680,     0,   131,   132,   133,   134,
     135,   136,   137,   138,   139,     0,   140,   141,   142,   143,
     144,   145,     0,   146,   147,   148,   149,   681,   682,   683,
     684,   685,   686,   687,   151,   152,   153,   154,   155,   156,
     157,   688,   689,   160,   690,   161,     0,   162,   163,   164,
     165,   166,   167,     0,   168,   169,   170,   171,   172,     0,
       0,   173,   174,   691,   176,   177,     0,   178,   179,   180,
       0,   181,   182,   183,     0,   184,   185,   186,   187,   692,
     189,   190,   191,   192,   693,   694,   194,     0,   195,   196,
     695,   198,     0,   199,     0,   200,   201,     0,   202,   203,
     204,   205,   206,   207,     0,   208,     0,   209,   210,     0,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,     0,   222,   223,   224,   225,   226,   227,     0,   228,
     229,   230,   231,   232,   233,   234,   696,   697,     0,   698,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,     0,     0,   248,   249,   250,   251,     0,   252,   253,
     254,   699,   700,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   701,   279,   702,   281,
     282,   283,   284,   703,   285,   286,   287,   288,   704,   705,
     290,   706,   292,   293,   294,     0,   295,   296,     0,     0,
     707,   298,   299,     0,     0,   300,   301,   302,   303,   304,
     708,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,     0,   316,   317,   709,   319,   320,   321,   322,   323,
     324,     0,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   710,   335,   336,   337,   338,     0,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,     0,
     351,   352,   353,   354,   355,   356,   711,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,    24,   369,
     370,   371,   372,   373,   712,   374,   375,   376,   377,   378,
     379,   380,   381,   713,   383,     0,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   714,     0,
     397,   398,    28,   399,   400,   401,   402,   403,   404,   405,
       0,   715,   716,     0,     0,   408,   409,   717,   411,   718,
     719,   413,   414,   415,   416,   417,   418,   419,     0,     0,
     420,   421,   422,   423,   424,   720,     0,   425,   426,   427,
     428,   429,   589,   721,     0,   432,   433,   434,   435,   436,
     437,     0,     0,   438,     0,    31,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   722,     0,    32,
       0,     0,     0,     0,   723,   724,     0,     0,     0,     0,
       0,     0,     0,   726,  2498,     0,     0,     0,   727,    88,
     666,   528,   667,   668,   669,   670,   671,     0,     0,     0,
       0,     0,     0,     0,     0,    89,    90,    91,    92,    93,
      94,    95,    96,     0,    97,    98,    99,     0,     0,     0,
       0,     0,     0,     0,   100,   101,     0,   102,   103,   104,
     105,   106,   107,   108,   109,   672,   111,   673,   674,     0,
     114,   115,   116,   117,   118,   119,   675,   676,   120,   121,
     677,   678,   124,     0,   125,   126,   127,   128,   679,     0,
     680,     0,   131,   132,   133,   134,   135,   136,   137,   138,
     139,     0,   140,   141,   142,   143,   144,   145,     0,   146,
     147,   148,   149,   681,   682,   683,   684,   685,   686,   687,
     151,   152,   153,   154,   155,   156,   157,   688,   689,   160,
     690,   161,     0,   162,   163,   164,   165,   166,   167,     0,
     168,   169,   170,   171,   172,     0,     0,   173,   174,   691,
     176,   177,     0,   178,   179,   180,     0,   181,   182,   183,
       0,   184,   185,   186,   187,   692,   189,   190,   191,   192,
     693,   694,   194,     0,   195,   196,   695,   198,     0,   199,
       0,   200,   201,     0,   202,   203,   204,   205,   206,   207,
       0,   208,     0,   209,   210,     0,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,     0,   222,   223,
     224,   225,   226,   227,     0,   228,   229,   230,   231,   232,
     233,   234,   696,   697,     0,   698,     0,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,     0,     0,   248,
     249,   250,   251,     0,   252,   253,   254,   699,   700,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   701,   279,   702,   281,   282,   283,   284,   703,
     285,   286,   287,   288,   704,   705,   290,   706,   292,   293,
     294,     0,   295,   296,     0,     0,   707,   298,   299,     0,
       0,   300,   301,   302,   303,   304,   708,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,     0,   316,   317,
     709,   319,   320,   321,   322,   323,   324,     0,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   710,   335,   336,
     337,   338,     0,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,     0,   351,   352,   353,   354,
     355,   356,   711,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,    24,   369,   370,   371,   372,   373,
     712,   374,   375,   376,   377,   378,   379,   380,   381,   713,
     383,     0,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   714,     0,   397,   398,    28,   399,
     400,   401,   402,   403,   404,   405,     0,   715,   716,     0,
       0,   408,   409,   717,   411,   718,   719,   413,   414,   415,
     416,   417,   418,   419,     0,     0,   420,   421,   422,   423,
     424,   720,     0,   425,   426,   427,   428,   429,   589,   721,
       0,   432,   433,   434,   435,   436,   437,     0,     0,   438,
       0,    31,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   722,     0,    32,     0,     0,     0,     0,
     723,   724,     0,     0,     0,     0,     0,     0,     0,   726,
       0,     0,     0,     0,   727,    88,   666,   528,   667,   668,
     669,   670,   671,     0,     0,     0,     0,     0,     0,     0,
       0,    89,    90,    91,    92,    93,    94,    95,    96,     0,
      97,    98,    99,     0,     0,     0,     0,     0,     0,     0,
     100,   101,     0,   102,   103,   104,   105,   106,   107,   108,
     109,   672,   111,   673,   674,  1450,   114,   115,   116,   117,
     118,   119,   675,   676,   120,   121,   677,   678,   124,     0,
     125,   126,   127,   128,   679,     0,   680,     0,   131,   132,
     133,   134,   135,   136,   137,   138,   139,     0,   140,   141,
     142,   143,   144,   145,     0,   146,   147,   148,   149,   681,
     682,   683,   684,   685,   686,   687,   151,   152,   153,   154,
     155,   156,   157,   688,   689,   160,   690,   161,     0,   162,
     163,   164,   165,   166,   167,     0,   168,   169,   170,   171,
     172,     0,     0,   173,   174,   691,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,     0,   184,   185,   186,
     187,   692,   189,   190,   191,   192,   693,   694,   194,     0,
     195,   196,   695,   198,     0,   199,     0,   200,   201,  1451,
     202,   203,   204,   205,   206,   207,     0,   208,     0,   209,
     210,     0,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,     0,   222,   223,   224,   225,   226,   227,
       0,   228,   229,   230,   231,   232,   233,   234,   696,   697,
       0,   698,     0,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,     0,  1452,   248,   249,   250,   251,     0,
     252,   253,   254,   699,   700,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   701,   279,
     702,   281,   282,   283,   284,   703,   285,   286,   287,   288,
     704,   705,   290,   706,   292,   293,   294,     0,   295,   296,
       0,     0,   707,   298,   299,     0,     0,   300,   301,   302,
     303,   304,   708,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,     0,   316,   317,   709,   319,   320,   321,
     322,   323,   324,     0,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   710,   335,   336,   337,   338,     0,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,     0,   351,   352,   353,   354,   355,   356,   711,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,   372,   373,   712,   374,   375,   376,
     377,   378,   379,   380,   381,   713,   383,     0,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     714,     0,   397,   398,     0,   399,   400,   401,   402,   403,
     404,   405,     0,   715,   716,     0,  1453,   408,   409,   717,
     411,   718,   719,   413,   414,   415,   416,   417,   418,   419,
       0,     0,   420,   421,   422,   423,   424,   720,     0,   425,
     426,   427,   428,   429,   430,   721,     0,   432,   433,   434,
     435,   436,   437,     0,     0,   438,     0,     0,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   722,
       0,     0,     0,     0,     0,     0,   723,   724,     0,     0,
       0,     0,     0,     0,     0,   726,     0,     0,     0,     0,
     727,    88,   666,   528,   667,   668,   669,   670,   671,     0,
       0,     0,     0,     0,     0,     0,     0,    89,    90,    91,
      92,    93,    94,    95,    96,     0,    97,    98,    99,     0,
       0,     0,     0,     0,     0,     0,   100,   101,     0,   102,
     103,   104,   105,   106,   107,   108,   109,   672,   111,   673,
     674,     0,   114,   115,   116,   117,   118,   119,   675,   676,
     120,   121,   677,   678,   124,     0,   125,   126,   127,   128,
     679,     0,   680,     0,   131,   132,   133,   134,   135,   136,
     137,   138,   139,     0,   140,   141,   142,   143,   144,   145,
       0,   146,   147,   148,   149,   681,   682,   683,   684,   685,
     686,   687,   151,   152,   153,   154,   155,   156,   157,   688,
     689,   160,   690,   161,     0,   162,   163,   164,   165,   166,
     167,     0,   168,   169,   170,   171,   172,     0,     0,   173,
     174,   691,   176,   177,     0,   178,   179,   180,     0,   181,
     182,   183,     0,   184,   185,   186,   187,   692,   189,   190,
     191,   192,   693,   694,   194,     0,   195,   196,   695,   198,
       0,   199,     0,   200,   201,     0,   202,   203,   204,   205,
     206,   207,     0,   208,     0,   209,   210,     0,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,     0,
     222,   223,   224,   225,   226,   227,     0,   228,   229,   230,
     231,   232,   233,   234,   696,   697,     0,   698,     0,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,     0,
       0,   248,   249,   250,   251,     0,   252,   253,   254,   699,
     700,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   701,   279,   702,   281,   282,   283,
     284,   703,   285,   286,   287,   288,   704,   705,   290,   706,
     292,   293,   294,     0,   295,   296,     0,     0,   707,   298,
     299,     0,     0,   300,   301,   302,   303,   304,   708,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,     0,
     316,   317,   709,   319,   320,   321,   322,   323,   324,     0,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   710,
     335,   336,   337,   338,     0,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,     0,   351,   352,
     353,   354,   355,   356,   711,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,     0,   369,   370,   371,
     372,   373,   712,   374,   375,   376,   377,   378,   379,   380,
     381,   713,   383,     0,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   714,     0,   397,   398,
       0,   399,   400,   401,   402,   403,   404,   405,     0,   715,
     716,     0,     0,   408,   409,   717,   411,   718,   719,   413,
     414,   415,   416,   417,   418,   419,     0,     0,   420,   421,
     422,   423,   424,   720,     0,   425,   426,   427,   428,   429,
     430,   721,     0,   432,   433,   434,   435,   436,   437,     0,
       0,   438,     0,     0,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   722,     0,     0,     0,     0,
       0,     0,   723,   724,   725,     0,     0,     0,     0,     0,
       0,   726,     0,     0,     0,     0,   727,    88,   666,   528,
     667,   668,   669,   670,   671,     0,     0,     0,     0,     0,
       0,     0,     0,    89,    90,    91,    92,    93,    94,    95,
      96,  1195,    97,    98,    99,     0,     0,     0,     0,     0,
       0,     0,   100,   101,     0,   102,   103,   104,   105,   106,
     107,   108,   109,   672,   111,   673,   674,     0,   114,   115,
     116,   117,   118,   119,   675,   676,   120,   121,   677,   678,
     124,     0,   125,   126,   127,   128,   679,     0,   680,     0,
     131,   132,   133,   134,   135,   136,   137,   138,   139,     0,
     140,   141,   142,   143,   144,   145,     0,   146,   147,   148,
     149,   681,   682,   683,   684,   685,   686,   687,   151,   152,
     153,   154,   155,   156,   157,   688,   689,   160,   690,   161,
       0,   162,   163,   164,   165,   166,   167,     0,   168,   169,
     170,   171,   172,     0,     0,   173,   174,   691,   176,   177,
       0,   178,   179,   180,     0,   181,   182,   183,     0,   184,
     185,   186,   187,   692,   189,   190,   191,   192,   693,   694,
     194,     0,   195,   196,   695,   198,     0,   199,     0,   200,
     201,     0,   202,   203,   204,   205,   206,   207,     0,   208,
       0,   209,   210,     0,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,     0,   222,   223,   224,   225,
     226,   227,     0,   228,   229,   230,   231,   232,   233,   234,
     696,   697,     0,   698,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,     0,     0,   248,   249,   250,
     251,     0,   252,   253,   254,   699,   700,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     701,   279,   702,   281,   282,   283,   284,   703,   285,   286,
     287,   288,   704,   705,   290,   706,   292,   293,   294,     0,
     295,   296,     0,     0,   707,   298,   299,     0,     0,   300,
     301,   302,   303,   304,   708,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,     0,   316,   317,   709,   319,
     320,   321,   322,   323,   324,     0,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   710,   335,   336,   337,   338,
       0,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     711,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,     0,   369,   370,   371,   372,   373,   712,   374,
     375,   376,   377,   378,   379,   380,   381,   713,   383,     0,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   714,     0,   397,   398,     0,   399,   400,   401,
     402,   403,   404,   405,     0,   715,   716,     0,     0,   408,
     409,   717,   411,   718,   719,   413,   414,   415,   416,   417,
     418,   419,     0,     0,   420,   421,   422,   423,   424,   720,
       0,   425,   426,   427,   428,   429,   430,   721,     0,   432,
     433,   434,   435,   436,   437,     0,     0,   438,     0,     0,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   722,     0,     0,     0,     0,     0,     0,   723,   724,
       0,     0,     0,     0,     0,     0,     0,   726,     0,     0,
       0,     0,   727,    88,   666,   528,   667,   668,   669,   670,
     671,     0,     0,     0,     0,     0,     0,     0,     0,    89,
      90,    91,    92,    93,    94,    95,    96,     0,    97,    98,
      99,     0,     0,     0,     0,     0,     0,     0,   100,   101,
       0,   102,   103,   104,   105,   106,   107,   108,   109,   672,
     111,   673,   674,     0,   114,   115,   116,   117,   118,   119,
     675,   676,   120,   121,   677,   678,   124,     0,   125,   126,
     127,   128,   679,     0,   680,     0,   131,   132,   133,   134,
     135,   136,   137,   138,   139,     0,   140,   141,   142,   143,
     144,   145,     0,   146,   147,   148,   149,   681,   682,   683,
     684,   685,   686,   687,   151,   152,   153,   154,   155,   156,
     157,   688,   689,   160,   690,   161,     0,   162,   163,   164,
     165,   166,   167,     0,   168,   169,   170,   171,   172,     0,
       0,   173,   174,   691,   176,   177,     0,   178,   179,   180,
       0,   181,   182,   183,     0,   184,   185,   186,   187,   692,
     189,   190,   191,   192,   693,   694,   194,     0,   195,   196,
     695,   198,     0,   199,     0,   200,   201,     0,   202,   203,
     204,   205,   206,   207,     0,   208,     0,   209,   210,     0,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,     0,   222,   223,   224,   225,   226,   227,     0,   228,
     229,   230,   231,   232,   233,   234,   696,   697,     0,   698,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,     0,     0,   248,   249,   250,   251,     0,   252,   253,
     254,   699,   700,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   701,   279,   702,   281,
     282,   283,   284,   703,   285,   286,   287,   288,   704,   705,
     290,   706,   292,   293,   294,     0,   295,   296,     0,     0,
     707,   298,   299,     0,     0,   300,   301,   302,   303,   304,
     708,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,     0,   316,   317,   709,   319,   320,   321,   322,   323,
     324,     0,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   710,   335,   336,   337,   338,     0,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,     0,
     351,   352,   353,   354,   355,   356,   711,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,     0,   369,
     370,   371,   372,   373,   712,   374,   375,   376,   377,   378,
     379,   380,   381,   713,   383,     0,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   714,     0,
     397,   398,     0,   399,   400,   401,   402,   403,   404,   405,
       0,   715,   716,     0,     0,   408,   409,   717,   411,   718,
     719,   413,   414,   415,   416,   417,   418,   419,     0,     0,
     420,   421,   422,   423,   424,   720,     0,   425,   426,   427,
     428,   429,   430,   721,     0,   432,   433,   434,   435,   436,
     437,     0,     0,   438,     0,     0,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   722,     0,     0,
       0,     0,     0,     0,   723,   724,     0,     0,     0,     0,
       0,     0,     0,   726,  1308,     0,     0,     0,   727,    88,
     666,   528,   667,   668,   669,   670,   671,     0,     0,     0,
       0,     0,     0,     0,     0,    89,    90,    91,    92,    93,
      94,    95,    96,     0,    97,    98,    99,     0,     0,     0,
       0,     0,     0,     0,   100,   101,     0,   102,   103,   104,
     105,   106,   107,   108,   109,   672,   111,   673,   674,     0,
     114,   115,   116,   117,   118,   119,   675,   676,   120,   121,
     677,   678,   124,     0,   125,   126,   127,   128,   679,     0,
     680,     0,   131,   132,   133,   134,   135,   136,   137,   138,
     139,     0,   140,   141,   142,   143,   144,   145,     0,   146,
     147,   148,   149,   681,   682,   683,   684,   685,   686,   687,
     151,   152,   153,   154,   155,   156,   157,   688,   689,   160,
     690,   161,     0,   162,   163,   164,   165,   166,   167,     0,
     168,   169,   170,   171,   172,     0,     0,   173,   174,   691,
     176,   177,     0,   178,   179,   180,     0,   181,   182,   183,
       0,   184,   185,   186,   187,   692,   189,   190,   191,   192,
     693,   694,   194,     0,   195,   196,   695,   198,     0,   199,
       0,   200,   201,     0,   202,   203,   204,   205,   206,   207,
       0,   208,     0,   209,   210,     0,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,     0,   222,   223,
     224,   225,   226,   227,     0,   228,   229,   230,   231,   232,
     233,   234,   696,   697,     0,   698,     0,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,     0,     0,   248,
     249,   250,   251,     0,   252,   253,   254,   699,   700,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   701,   279,   702,   281,   282,   283,   284,   703,
     285,   286,   287,   288,   704,   705,   290,   706,   292,   293,
     294,     0,   295,   296,     0,     0,   707,   298,   299,     0,
       0,   300,   301,   302,   303,   304,   708,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,     0,   316,   317,
     709,   319,   320,   321,   322,   323,   324,     0,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   710,   335,   336,
     337,   338,     0,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,     0,   351,   352,   353,   354,
     355,   356,   711,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,     0,   369,   370,   371,   372,   373,
     712,   374,   375,   376,   377,   378,   379,   380,   381,   713,
     383,     0,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   714,     0,   397,   398,     0,   399,
     400,   401,   402,   403,   404,   405,     0,   715,   716,     0,
       0,   408,   409,   717,   411,   718,   719,   413,   414,   415,
     416,   417,   418,   419,     0,     0,   420,   421,   422,   423,
     424,   720,     0,   425,   426,   427,   428,   429,   430,   721,
       0,   432,   433,   434,   435,   436,   437,     0,     0,   438,
       0,     0,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   722,     0,     0,     0,     0,     0,     0,
     723,   724,     0,     0,     0,     0,     0,     0,     0,   726,
    1440,     0,     0,     0,   727,    88,   666,   528,   667,   668,
     669,   670,   671,     0,     0,     0,     0,     0,     0,     0,
       0,    89,    90,    91,    92,    93,    94,    95,    96,     0,
      97,    98,    99,     0,     0,     0,     0,     0,     0,     0,
     100,   101,     0,   102,   103,   104,   105,   106,   107,   108,
     109,   672,   111,   673,   674,     0,   114,   115,   116,   117,
     118,   119,   675,   676,   120,   121,   677,   678,   124,     0,
     125,   126,   127,   128,   679,     0,   680,     0,   131,   132,
     133,   134,   135,   136,   137,   138,   139,     0,   140,   141,
     142,   143,   144,   145,     0,   146,   147,   148,   149,   681,
     682,   683,   684,   685,   686,   687,   151,   152,   153,   154,
     155,   156,   157,   688,   689,   160,   690,   161,     0,   162,
     163,   164,   165,   166,   167,     0,   168,   169,   170,   171,
     172,     0,     0,   173,   174,   691,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,     0,   184,   185,   186,
     187,   692,   189,   190,   191,   192,   693,   694,   194,     0,
     195,   196,   695,   198,     0,   199,     0,   200,   201,     0,
     202,   203,   204,   205,   206,   207,     0,   208,     0,   209,
     210,     0,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,     0,   222,   223,   224,   225,   226,   227,
       0,   228,   229,   230,   231,   232,   233,   234,   696,   697,
       0,   698,     0,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,     0,     0,   248,   249,   250,   251,     0,
     252,   253,   254,   699,   700,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   701,   279,
     702,   281,   282,   283,   284,   703,   285,   286,   287,   288,
     704,   705,   290,   706,   292,   293,   294,     0,   295,   296,
       0,     0,   707,   298,   299,     0,     0,   300,   301,   302,
     303,   304,   708,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,     0,   316,   317,   709,   319,   320,   321,
     322,   323,   324,     0,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   710,   335,   336,   337,   338,     0,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,     0,   351,   352,   353,   354,   355,   356,   711,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,   372,   373,   712,   374,   375,   376,
     377,   378,   379,   380,   381,   713,   383,     0,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     714,     0,   397,   398,     0,   399,   400,   401,   402,   403,
     404,   405,     0,   715,   716,     0,     0,   408,   409,   717,
     411,   718,   719,   413,   414,   415,   416,   417,   418,   419,
       0,     0,   420,   421,   422,   423,   424,   720,     0,   425,
     426,   427,   428,   429,   430,   721,  1649,   432,   433,   434,
     435,   436,   437,     0,     0,   438,     0,     0,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   722,
       0,     0,     0,     0,     0,     0,   723,   724,     0,     0,
       0,     0,     0,     0,     0,   726,     0,     0,     0,     0,
     727,    88,   666,   528,   667,   668,   669,   670,   671,     0,
       0,     0,     0,     0,     0,     0,     0,    89,    90,    91,
      92,    93,    94,    95,    96,     0,    97,    98,    99,     0,
       0,     0,     0,     0,     0,     0,   100,   101,     0,   102,
     103,   104,   105,   106,   107,   108,   109,   672,   111,   673,
     674,     0,   114,   115,   116,   117,   118,   119,   675,   676,
     120,   121,   677,   678,   124,     0,   125,   126,   127,   128,
     679,     0,   680,     0,   131,   132,   133,   134,   135,   136,
     137,   138,   139,     0,   140,   141,   142,   143,   144,   145,
       0,   146,   147,   148,   149,   681,   682,   683,   684,   685,
     686,   687,   151,   152,   153,   154,   155,   156,   157,   688,
     689,   160,   690,   161,     0,   162,   163,   164,   165,   166,
     167,     0,   168,   169,   170,   171,   172,     0,     0,   173,
     174,   691,   176,   177,     0,   178,   179,   180,     0,   181,
     182,   183,     0,   184,   185,   186,   187,   692,   189,   190,
     191,   192,   693,   694,   194,     0,   195,   196,   695,   198,
       0,   199,     0,   200,   201,  1451,   202,   203,   204,   205,
     206,   207,     0,   208,     0,   209,   210,     0,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,     0,
     222,   223,   224,   225,   226,   227,     0,   228,   229,   230,
     231,   232,   233,   234,   696,   697,     0,   698,     0,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,     0,
       0,   248,   249,   250,   251,     0,   252,   253,   254,   699,
     700,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   701,   279,   702,   281,   282,   283,
     284,   703,   285,   286,   287,   288,   704,   705,   290,   706,
     292,   293,   294,     0,   295,   296,     0,     0,   707,   298,
     299,     0,     0,   300,   301,   302,   303,   304,   708,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,     0,
     316,   317,   709,   319,   320,   321,   322,   323,   324,     0,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   710,
     335,   336,   337,   338,     0,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,     0,   351,   352,
     353,   354,   355,   356,   711,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,     0,   369,   370,   371,
     372,   373,   712,   374,   375,   376,   377,   378,   379,   380,
     381,   713,   383,     0,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   714,     0,   397,   398,
       0,   399,   400,   401,   402,   403,   404,   405,     0,   715,
     716,     0,     0,   408,   409,   717,   411,   718,   719,   413,
     414,   415,   416,   417,   418,   419,     0,     0,   420,   421,
     422,   423,   424,   720,     0,   425,   426,   427,   428,   429,
     430,   721,     0,   432,   433,   434,   435,   436,   437,     0,
       0,   438,     0,     0,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   722,     0,     0,     0,     0,
       0,     0,   723,   724,     0,     0,     0,     0,     0,     0,
       0,   726,     0,     0,     0,     0,   727,    88,   666,   528,
     667,   668,   669,   670,   671,     0,     0,     0,     0,     0,
       0,     0,     0,    89,    90,    91,    92,    93,    94,    95,
      96,     0,    97,    98,    99,     0,     0,     0,     0,     0,
       0,     0,   100,   101,     0,   102,   103,   104,   105,   106,
     107,   108,   109,   672,   111,   673,   674,     0,   114,   115,
     116,   117,   118,   119,   675,   676,   120,   121,   677,   678,
     124,     0,   125,   126,   127,   128,   679,     0,   680,     0,
     131,   132,   133,   134,   135,   136,   137,   138,   139,     0,
     140,   141,   142,   143,   144,   145,     0,   146,   147,   148,
     149,   681,   682,   683,   684,   685,   686,   687,   151,   152,
     153,   154,   155,   156,   157,   688,   689,   160,   690,   161,
       0,   162,   163,   164,   165,   166,   167,     0,   168,   169,
     170,   171,   172,     0,     0,   173,   174,   691,   176,   177,
       0,   178,   179,   180,     0,   181,   182,   183,     0,   184,
     185,   186,   187,   692,   189,   190,   191,   192,   693,   694,
     194,     0,   195,   196,   695,   198,     0,   199,     0,   200,
     201,     0,   202,   203,   204,   205,   206,   207,     0,   208,
       0,   209,   210,     0,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,     0,   222,   223,   224,   225,
     226,   227,     0,   228,   229,   230,   231,   232,   233,   234,
     696,   697,     0,   698,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,     0,     0,   248,   249,   250,
     251,     0,   252,   253,   254,   699,   700,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     701,   279,   702,   281,   282,   283,   284,   703,   285,   286,
     287,   288,   704,   705,   290,   706,   292,   293,   294,     0,
     295,   296,     0,     0,   707,   298,   299,     0,     0,   300,
     301,   302,   303,   304,   708,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,     0,   316,   317,   709,   319,
     320,   321,   322,   323,   324,     0,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   710,   335,   336,   337,   338,
       0,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     711,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,     0,   369,   370,   371,   372,   373,   712,   374,
     375,   376,   377,   378,   379,   380,   381,   713,   383,     0,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   714,     0,   397,   398,     0,   399,   400,   401,
     402,   403,   404,   405,     0,   715,   716,     0,     0,   408,
     409,   717,   411,   718,   719,   413,   414,   415,   416,   417,
     418,   419,     0,     0,   420,   421,   422,   423,   424,   720,
       0,   425,   426,   427,   428,   429,   430,   721,     0,   432,
     433,   434,   435,   436,   437,     0,     0,   438,     0,     0,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   722,     0,     0,     0,     0,     0,     0,   723,   724,
       0,     0,     0,     0,     0,     0,     0,   726,     0,     0,
       0,     0,   727,    88,   666,   528,   667,   668,   669,   670,
     671,     0,     0,     0,     0,     0,     0,     0,     0,    89,
      90,    91,    92,    93,    94,    95,    96,     0,    97,    98,
      99,     0,     0,     0,     0,     0,     0,     0,   100,   101,
       0,   102,   103,   104,   105,   106,   107,   108,   109,   672,
     111,   673,   674,     0,   114,   115,   116,   117,   118,   119,
     675,   676,   120,   121,   677,   678,   124,     0,   125,   126,
     127,   128,   679,     0,   680,     0,   131,   132,   133,   134,
     135,   136,   137,   138,   139,     0,   140,   141,   142,   143,
     144,   145,     0,   146,   147,   148,   149,   681,   682,   683,
     684,   685,   686,   687,   151,   152,   153,   154,   155,   156,
     157,   688,   689,   160,   690,   161,     0,   162,   163,   164,
     165,   166,   167,     0,   168,   169,   170,   171,   172,     0,
       0,   173,   174,   691,   176,   177,     0,   178,   179,   180,
       0,   181,   182,   183,     0,   184,   185,   186,   187,   692,
     189,   190,   191,   192,   693,   694,   194,     0,   195,   196,
     695,   198,     0,   199,     0,   200,   201,     0,   202,   203,
     204,   205,   206,   207,     0,   208,     0,   209,   210,     0,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,     0,   222,   223,   224,   225,   226,   227,     0,   228,
     229,   230,   231,   232,   233,   234,   696,   697,     0,   698,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,     0,     0,   248,   249,   250,   251,     0,   252,   253,
     254,   699,   700,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   701,   279,   702,   281,
     282,   283,   284,   703,   285,   286,   287,   288,   704,   705,
     290,   706,   292,   293,   294,     0,   295,   296,     0,     0,
     707,   298,   299,     0,     0,   300,   301,   302,   303,   304,
     708,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,     0,   316,   317,   709,   319,   320,   321,   322,   323,
     324,     0,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   710,   335,   336,   337,   338,     0,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,     0,
     351,   352,   353,   354,   355,   356,   711,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,     0,   369,
     370,   371,   372,   373,   712,   374,   375,   376,   377,   378,
     379,   380,   381,   713,   383,     0,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   714,     0,
     397,   398,     0,   399,   400,   401,   402,   403,   404,   405,
       0,   715,   716,     0,     0,   408,   409,   717,   411,   718,
     719,   413,   414,   415,   416,   417,   418,   419,     0,     0,
     420,   421,   422,   423,   424,   720,     0,   425,   426,   427,
     428,   429,   430,   721,     0,   432,   433,   434,   435,   436,
     437,     0,     0,   438,     0,     0,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   722,     0,     0,
       0,     0,     0,     0,  1198,  1199,     0,     0,     0,     0,
       0,     0,     0,   726,     0,     0,     0,     0,   727,    88,
    1574,   528,   667,   668,   669,   670,   671,     0,     0,     0,
       0,     0,     0,     0,     0,    89,    90,    91,    92,    93,
      94,    95,    96,     0,    97,    98,    99,     0,     0,     0,
       0,     0,     0,     0,   100,   101,     0,   102,   103,   104,
     105,   106,   107,   108,   109,   672,   111,   673,   674,     0,
     114,   115,   116,   117,   118,   119,   675,   676,   120,   121,
     677,   678,   124,     0,   125,   126,   127,   128,   679,     0,
     680,     0,   131,   132,   133,   134,   135,   136,   137,   138,
     139,     0,   140,   141,   142,   143,   144,   145,     0,   146,
     147,   148,   149,   681,   682,   683,   684,   685,   686,   687,
     151,   152,   153,   154,   155,   156,   157,   688,   689,   160,
     690,   161,     0,   162,   163,   164,   165,   166,   167,     0,
     168,   169,   170,   171,   172,     0,     0,   173,   174,   691,
     176,   177,     0,   178,   179,   180,     0,   181,   182,   183,
       0,   184,   185,   186,   187,   692,   189,   190,   191,   192,
     693,   694,   194,     0,   195,   196,   695,   198,     0,   199,
       0,   200,   201,     0,   202,   203,   204,   205,   206,   207,
       0,   208,     0,   209,   210,     0,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,     0,   222,   223,
     224,   225,   226,   227,     0,   228,   229,   230,   231,   232,
     233,   234,   696,   697,     0,   698,     0,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,     0,     0,   248,
     249,   250,   251,     0,   252,   253,   254,   699,   700,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   701,   279,   702,   281,   282,   283,   284,   703,
     285,   286,   287,   288,   704,   705,   290,   706,   292,   293,
     294,     0,   295,   296,     0,     0,   707,   298,   299,     0,
       0,   300,   301,   302,   303,   304,   708,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,     0,   316,   317,
     709,   319,   320,   321,   322,   323,   324,     0,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   710,   335,   336,
     337,   338,     0,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,     0,   351,   352,   353,   354,
     355,   356,   711,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,     0,   369,   370,   371,   372,   373,
     712,   374,   375,   376,   377,   378,   379,   380,   381,   713,
     383,     0,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   714,     0,   397,   398,     0,   399,
     400,   401,   402,   403,   404,   405,     0,   715,   716,     0,
       0,   408,   409,   717,   411,   718,   719,   413,   414,   415,
     416,   417,   418,   419,     0,     0,   420,   421,   422,   423,
     424,   720,     0,   425,   426,   427,   428,   429,   430,   721,
       0,   432,   433,   434,   435,   436,   437,     0,     0,   438,
       0,     0,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   722,     0,     0,     0,     0,     0,     0,
     723,   724,     0,     0,     0,     0,     0,     0,     0,   726,
       0,     0,     0,     0,   727,    88,   666,   528,   667,   668,
     669,   670,   671,     0,     0,     0,     0,     0,     0,     0,
       0,    89,    90,    91,    92,    93,    94,    95,    96,     0,
      97,    98,    99,     0,     0,     0,     0,     0,     0,     0,
     100,   101,     0,   102,   103,   104,   105,   106,   107,   108,
     109,   672,   111,   673,   674,     0,   114,   115,   116,   117,
     118,   119,   675,   676,   120,   121,   677,   678,   124,     0,
     125,   126,   127,   128,   679,     0,   680,     0,   131,   132,
     133,   134,   135,   136,   137,   138,   139,     0,   140,   141,
     142,   143,   144,   145,     0,   146,   147,   148,   149,   681,
     682,   683,   684,   685,   686,   687,   151,   152,   153,   154,
     155,   156,   157,   688,   689,   160,   690,   161,     0,   162,
     163,   164,   165,   166,   167,     0,   168,   169,   170,   171,
     172,     0,     0,   173,   174,   691,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,     0,   184,   185,   186,
     187,   692,   189,   190,   191,   192,   693,   694,   194,     0,
     195,   196,   695,   198,     0,   199,     0,   200,   201,     0,
     202,   203,   204,   205,   206,   207,     0,   208,     0,   209,
     210,     0,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,     0,   222,   223,   224,   225,   226,   227,
       0,   228,   229,   230,   231,   232,   233,   234,   696,   697,
       0,   698,     0,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,     0,     0,   248,   249,   250,   251,     0,
     252,   253,   254,   699,   700,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   701,   279,
     702,   281,   282,   283,   284,   703,   285,   286,   287,   288,
     704,   705,   290,   706,   292,   293,   294,     0,   295,   296,
       0,     0,   707,   298,   299,     0,     0,   300,   301,   302,
     303,   304,   708,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,     0,   316,   317,   709,   319,   320,   321,
     322,   323,   324,     0,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   710,   335,   336,   337,   338,     0,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,     0,   351,   352,   353,   354,   355,   356,   711,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,   372,   373,   712,   374,   375,   376,
     377,   378,   379,   380,   381,   713,   383,     0,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     714,     0,   397,   398,     0,   399,   400,   401,   402,   403,
     404,   405,     0,   715,   716,     0,     0,   408,   409,   717,
     411,   718,   719,   413,   414,   415,   416,   417,   418,   419,
       0,     0,   420,   421,   422,   423,   424,   720,     0,   425,
     426,   427,   428,   429,   430,   721,     0,   432,   433,   434,
     435,   436,   437,     0,     0,   438,     0,     0,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   722,
       0,     0,     0,     0,     0,     0,   723,   724,     0,     0,
       0,     0,     0,     0,     0,  2397,     0,     0,     0,     0,
     727,    88,   666,   528,   667,   668,   669,   670,   671,     0,
       0,     0,     0,     0,     0,     0,     0,    89,    90,    91,
      92,    93,    94,    95,    96,     0,    97,    98,    99,     0,
       0,     0,     0,     0,     0,     0,   100,   101,     0,   102,
     103,   104,   105,   106,   107,   108,  2596,   672,   111,   673,
     674,     0,   114,   115,   116,   117,   118,   119,   675,   676,
     120,   121,   677,   678,   124,     0,   125,   126,   127,   128,
     679,     0,   680,     0,   131,   132,   133,   134,   135,   136,
     137,   138,   139,     0,   140,   141,   142,   143,   144,   145,
       0,   146,   147,   148,  2597,   681,   682,   683,   684,   685,
     686,   687,   151,   152,   153,   154,   155,   156,   157,   688,
     689,   160,   690,   161,     0,   162,   163,   164,   165,   166,
     167,     0,   168,   169,   170,   171,   172,     0,     0,   173,
     174,   691,   176,   177,     0,   178,   179,   180,     0,   181,
     182,   183,     0,   184,   185,   186,   187,   692,   189,   190,
     191,   192,   693,   694,   194,     0,   195,   196,   695,   198,
       0,   199,     0,   200,   201,     0,   202,   203,   204,   205,
     206,   207,     0,   208,     0,   209,   210,     0,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,     0,
     222,   223,   224,   225,   226,   227,     0,   228,   229,   230,
     231,   232,   233,   234,   696,   697,     0,   698,     0,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,     0,
       0,   248,   249,   250,   251,     0,   252,   253,   254,   699,
     700,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   701,   279,   702,   281,   282,   283,
     284,   703,   285,   286,   287,   288,   704,   705,   290,   706,
     292,   293,   294,     0,   295,   296,     0,     0,   707,   298,
     299,     0,     0,   300,   301,   302,   303,   304,   708,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,     0,
     316,   317,   709,   319,   320,   321,   322,   323,   324,     0,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   710,
     335,   336,   337,   338,     0,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,     0,   351,   352,
     353,   354,   355,   356,   711,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,     0,   369,   370,   371,
     372,   373,   712,   374,   375,   376,   377,   378,   379,   380,
     381,   713,   383,     0,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   714,     0,   397,   398,
       0,   399,   400,   401,   402,   403,   404,   405,     0,   715,
     716,     0,     0,   408,   409,   717,   411,   718,   719,   413,
     414,   415,   416,  2598,   418,   419,     0,     0,   420,   421,
     422,   423,   424,   720,     0,   425,   426,   427,   428,   429,
     430,   721,     0,   432,   433,   434,   435,   436,   437,     0,
       0,   438,     0,     0,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   722,     0,     0,     0,     0,
       0,     0,   723,   724,     0,     0,     0,     0,     0,     0,
       0,   726,     0,     0,     0,     0,   727,    88,   666,   528,
     667,   668,   669,   670,   671,     0,     0,     0,     0,     0,
       0,     0,     0,    89,    90,    91,    92,    93,    94,    95,
      96,     0,    97,    98,    99,     0,     0,     0,     0,     0,
       0,     0,   100,   101,     0,   102,   103,   104,   105,   106,
     107,   108,   109,   672,   111,   673,   674,     0,   114,   115,
     116,   117,   118,   119,   675,   676,   120,   121,   677,   678,
     124,     0,   125,   126,   127,   128,   679,     0,   680,     0,
     131,   132,   133,   134,   135,   136,   137,   138,   139,     0,
     140,   141,   142,   143,   144,   145,     0,   146,   147,   148,
    2597,   681,   682,   683,   684,   685,   686,   687,   151,   152,
     153,   154,   155,   156,   157,   688,   689,   160,   690,   161,
       0,   162,   163,   164,   165,   166,   167,     0,   168,   169,
     170,   171,   172,     0,     0,   173,   174,   691,   176,   177,
       0,   178,   179,   180,     0,   181,   182,   183,     0,   184,
     185,   186,   187,   692,   189,   190,   191,   192,   693,   694,
     194,     0,   195,   196,   695,   198,     0,   199,     0,   200,
     201,     0,   202,   203,   204,   205,   206,   207,     0,   208,
       0,   209,   210,     0,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,     0,   222,   223,   224,   225,
     226,   227,     0,   228,   229,   230,   231,   232,   233,   234,
     696,   697,     0,   698,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,     0,     0,   248,   249,   250,
     251,     0,   252,   253,   254,   699,   700,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     701,   279,   702,   281,   282,   283,   284,   703,   285,   286,
     287,   288,   704,   705,   290,   706,   292,   293,   294,     0,
     295,   296,     0,     0,   707,   298,   299,     0,     0,   300,
     301,   302,   303,   304,   708,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,     0,   316,   317,   709,   319,
     320,   321,   322,   323,   324,     0,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   710,   335,   336,   337,   338,
       0,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     711,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,     0,   369,   370,   371,   372,   373,   712,   374,
     375,   376,   377,   378,   379,   380,   381,   713,   383,     0,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   714,     0,   397,   398,     0,   399,   400,   401,
     402,   403,   404,   405,     0,   715,   716,     0,     0,   408,
     409,   717,   411,   718,   719,   413,   414,   415,   416,  2598,
     418,   419,     0,     0,   420,   421,   422,   423,   424,   720,
       0,   425,   426,   427,   428,   429,   430,   721,     0,   432,
     433,   434,   435,   436,   437,     0,     0,   438,     0,     0,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   722,     0,     0,     0,     0,     0,     0,   723,   724,
       0,     0,     0,     0,     0,     0,     0,   726,     0,     0,
       0,     0,   727,    88,   666,   528,   667,   668,   669,   670,
     671,     0,     0,     0,     0,     0,     0,     0,     0,    89,
      90,    91,    92,    93,    94,    95,    96,     0,    97,    98,
      99,     0,     0,     0,     0,     0,     0,     0,   100,   101,
       0,   102,   103,   104,   105,   106,   107,   108,   109,   672,
     111,   673,   674,     0,   114,   115,   116,   117,   118,   119,
     675,   676,   120,   121,   677,   678,   124,     0,   125,   126,
     127,   128,   679,     0,   680,     0,   131,   132,   133,   134,
     135,   136,   137,   138,   139,     0,   140,   141,   142,   143,
     144,   145,     0,   146,   147,   148,   149,   681,   682,   683,
     684,   685,   686,   687,   151,   152,   153,   154,   155,   156,
     157,   688,   689,   160,     0,   161,     0,   162,   163,   164,
     165,   166,   167,     0,   168,   169,   170,   171,   172,     0,
       0,   173,   174,   691,   176,   177,     0,   178,   179,   180,
       0,   181,   182,   183,     0,   184,   185,   186,   187,   692,
     189,   190,   191,   192,   693,   694,   194,     0,   195,   196,
     695,   198,     0,   199,     0,   200,   201,     0,   202,   203,
     204,   205,   206,   207,     0,   208,     0,   209,   210,     0,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,     0,   222,   223,   224,   225,   226,   227,     0,   228,
     229,   230,   231,   232,   233,   234,   696,   697,     0,   698,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,     0,     0,   248,   249,   250,   251,     0,   252,   253,
     254,   699,   700,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   701,   279,   702,   281,
     282,   283,   284,     0,   285,   286,   287,   288,   704,   705,
     290,   706,   292,   293,   294,     0,   295,   296,     0,     0,
     707,   298,   299,     0,     0,   300,   301,   302,   303,   304,
     708,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,     0,   316,   317,   709,   319,   320,   321,   322,   323,
     324,     0,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   710,   335,   336,   337,   338,     0,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,     0,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,     0,   369,
     370,   371,   372,   373,   712,   374,   375,   376,   377,   378,
     379,   380,   381,   713,   383,     0,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   714,     0,
     397,   398,     0,   399,   400,   401,   402,   403,   404,   405,
       0,   715,   716,     0,     0,   408,   409,   717,   411,   718,
     719,   413,   414,   415,   416,   417,   418,   419,     0,     0,
     420,   421,   422,   423,   424,   720,     0,   425,   426,   427,
     428,   429,   430,   721,     0,   432,   433,   434,   435,   436,
     437,     0,     0,   438,     0,     0,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,     0,     0,     0,
       0,     0,     0,     0,  1433,  1434,     0,     0,    88,   666,
     528,   667,   668,  1435,   670,   671,     0,     0,   727,     0,
       0,     0,     0,     0,    89,    90,    91,    92,    93,    94,
      95,    96,     0,    97,    98,    99,     0,     0,     0,     0,
       0,     0,     0,   100,   101,     0,   102,   103,   104,   105,
     106,   107,   108,   109,   672,   111,   673,   674,     0,   114,
     115,   116,   117,   118,   119,   675,   676,   120,   121,   677,
     678,   124,     0,   125,   126,   127,   128,   679,     0,   680,
       0,   131,   132,   133,   134,   135,   136,   137,   138,   139,
       0,   140,   141,   142,   143,   144,   145,     0,   146,   147,
     148,   149,   681,   682,   683,   684,   685,   686,   687,   151,
     152,   153,   154,   155,   156,   157,   688,   689,   160,     0,
     161,     0,   162,   163,   164,   165,   166,   167,     0,   168,
     169,   170,   171,   172,     0,     0,   173,   174,   691,   176,
     177,     0,   178,   179,   180,     0,   181,   182,   183,     0,
     184,   185,   186,   187,   692,   189,   190,   191,   192,   693,
     694,   194,     0,   195,   196,   695,   198,     0,   199,     0,
     200,   201,     0,   202,   203,   204,   205,   206,   207,     0,
     208,     0,   209,   210,     0,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,     0,   222,   223,   224,
     225,   226,   227,     0,   228,   229,   230,   231,   232,   233,
     234,   696,   697,     0,   698,     0,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,     0,     0,   248,   249,
     250,   251,     0,   252,   253,   254,   699,   700,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   701,   279,   702,   281,   282,   283,   284,     0,   285,
     286,   287,   288,   704,   705,   290,   706,   292,   293,   294,
       0,   295,   296,     0,     0,   297,   298,   299,     0,     0,
     300,   301,   302,   303,   304,   708,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,     0,   316,   317,   709,
     319,   320,   321,   322,   323,   324,     0,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   710,   335,   336,   337,
     338,     0,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,     0,   351,   352,   353,   354,   355,
     356,  1563,  1564,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,     0,   369,   370,   371,   372,   373,   712,
     374,   375,   376,   377,   378,   379,   380,   381,   713,   383,
       0,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   714,     0,   397,   398,     0,   399,   400,
     401,   402,   403,   404,   405,     0,   715,   716,     0,     0,
     408,   409,   717,   411,   718,   719,   413,   414,   415,   416,
     417,   418,   419,     0,     0,   420,   421,   422,   423,   424,
     720,     0,   425,   426,   427,   428,   429,   430,   721,     0,
     432,   433,   434,   435,   436,   437,     0,     0,   438,     0,
       0,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,     0,     0,     0,     0,     0,     0,     0,  1565,
    1566,     0,     0,     0,     0,     0,     0,     0,  1435,     0,
       0,     0,     0,   727,    88,   666,   528,   667,   668,   669,
     670,   671,     0,     0,     0,     0,     0,     0,     0,     0,
      89,    90,    91,    92,    93,    94,    95,    96,     0,    97,
      98,    99,     0,     0,     0,     0,     0,     0,     0,   100,
     101,     0,   102,   103,   104,   105,   106,   107,   108,   109,
     672,   111,   673,   674,     0,   114,   115,   116,   117,   118,
     119,   675,   676,   120,   121,   677,   678,   124,     0,   125,
     126,   127,   128,   679,     0,   680,     0,   131,   132,   133,
     134,   135,   136,   137,   138,   139,     0,   140,   141,   142,
     143,   144,   145,     0,   146,   147,   148,   149,   681,   682,
     683,   684,   685,   686,   687,   151,   152,   153,   154,   155,
     156,   157,   688,   689,   160,     0,   161,     0,   162,   163,
     164,   165,   166,   167,     0,   168,   169,   170,   171,   172,
       0,     0,   173,   174,   691,   176,   177,     0,   178,   179,
     180,     0,   181,   182,   183,     0,   184,   185,   186,   187,
     692,   189,   190,   191,   192,   693,   694,   194,     0,   195,
     196,   695,   198,     0,   199,     0,   200,   201,     0,   202,
     203,   204,   205,   206,   207,     0,   208,     0,   209,   210,
       0,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,   221,     0,   222,   223,   224,   225,   226,   227,     0,
     228,   229,   230,   231,   232,   233,   234,   696,   697,     0,
     698,     0,   238,     0,   240,   241,   242,   243,   244,   245,
     246,   247,     0,     0,   248,   249,   250,   251,     0,   252,
     253,   254,   699,   700,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   701,   279,   702,
     281,   282,   283,   284,     0,   285,   286,   287,   288,   704,
     705,   290,   706,   292,   293,   294,     0,   295,   296,     0,
       0,   707,   298,   299,     0,     0,   300,   301,   302,   303,
     304,   708,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,     0,   316,   317,   709,   319,   320,   321,   322,
     323,   324,     0,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   710,   335,   336,   337,   338,     0,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
       0,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,     0,
     369,   370,   371,   372,   373,   712,   374,   375,   376,   377,
     378,   379,   380,   381,   713,   383,     0,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   714,
       0,   397,   398,     0,   399,   400,   401,   402,   403,   404,
     405,     0,   715,   716,     0,     0,   408,   409,   717,   411,
     718,   719,   413,   414,   415,   416,   417,   418,   419,     0,
       0,   420,   421,   422,   423,   424,   720,     0,   425,   426,
     427,   428,   429,   430,   721,     0,   432,   433,   434,   435,
     436,   437,     0,     0,   438,     0,     0,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,     0,     0,
       0,     0,     0,     0,     0,  1433,  1434,     0,     0,     0,
       0,     0,     0,     0,  1435,     0,     0,     0,     0,   727,
      88,   666,   528,   667,   668,   669,   670,   671,     0,     0,
       0,     0,     0,     0,     0,     0,    89,    90,    91,    92,
      93,    94,    95,    96,     0,    97,    98,    99,     0,     0,
       0,     0,     0,     0,     0,   100,   101,     0,   102,   103,
     104,   105,   106,   107,   108, -1526,   672,   111,   673,   674,
       0,   114,   115,   116,   117,   118,   119,   675,   676,   120,
     121,   677,   678,   124,     0,   125,   126,   127,   128,   679,
       0,   680,     0,   131,   132,   133,   134,   135,   136,   137,
     138,   139,     0,   140,   141,   142,   143,   144,   145,     0,
     146,   147,   148,  2597,   681,   682,   683,   684,   685,   686,
     687,   151,   152,   153,   154,   155,   156,   157,   688,   689,
     160,   690,   161,     0,   162,   163,   164,   165,   166,   167,
       0,   168,   169,   170,   171,   172,     0,     0,   173,   174,
     691,   176,   177,     0,   178,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,   187,   692,   189,   190,   191,
     192,   693,   694,   194,     0,   195,   196,   695,   198,     0,
     199,     0,   200,   201,     0,   202,   203,   204,   205, -1526,
     207,     0,   208,     0,   209,   210,     0,   211,   212,   213,
     214,   215,   216, -1526,   218,   219,   220,   221,     0,   222,
     223,   224,   225,   226,   227,     0,   228,   229,   230,   231,
     232,   233,   234,   696,   697,     0,   698,     0,   238,     0,
       0,   241,   242,   243,   244,   245,   246,   247,     0,     0,
     248,   249,   250, -1526,     0,   252,   253,   254,   699,   700,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   701,   279,   702,   281,   282,   283,   284,
       0,   285,   286,     0,   288,   704,   705,   290,   706,   292,
     293,   294,     0,   295,   296,     0,     0,   707,   298,   299,
       0,     0,   300,   301,   302,   303,   304,   708,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,     0,   316,
     317,   709,   319,   320,   321,   322,   323,   324,     0,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   710,   335,
     336,   337,   338,     0,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,     0,   351,   352,   353,
     354,   355,   356,   711,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,     0,   369,   370,   371,   372,
     373,   712,   374,   375,   376,   377,   378, -1526,   380,   381,
     713,   383,     0,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   714,     0,   397,   398,     0,
     399,   400,   401,   402,   403,   404,   405,     0,   715,   716,
       0,     0,   408,   409,   717,   411,   718,   719,   413,   414,
     415,   416,  2598,   418,   419,     0,     0,   420,   421,   422,
     423,   424,   720,     0,   425,   426,   427,   428,   429,   430,
     721,     0,   432,   433,   434,   435,   436,   437,     0,     0,
     438,     0,     0,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459, -1526,     0,     0,     0,     0,     0,
       0,   723,   724,     0,     0,     0,     0,     0,     0,     0,
     726,     0,     0,     0,     0,   727,    88,   666,   528,   667,
     668,   669,   670,   671,     0,     0,     0,     0,     0,     0,
       0,     0,    89,    90,    91,    92,    93,    94,    95,    96,
       0,    97,    98,    99,     0,     0,     0,     0,     0,     0,
       0,   100,   101,     0,   102,   103,   104,   105,   106,   107,
     108,     0,   672,   111,   673,   674,     0,   114,   115,   116,
     117,   118,   119,   675,   676,   120,   121,   677,   678,   124,
       0,   125,   126,   127,   128,   679,     0,   680,     0,   131,
     132,   133,   134,   135,   136,   137,   138,   139,     0,   140,
     141,   142,   143,   144,   145,     0,   146,   147,   148,   149,
     681,   682,   683,   684,   685,   686,   687,   151,   152,   153,
     154,   155,   156,   157,   688,   689,   160,   690,   161,     0,
     162,   163,   164,   165,   166,   167,     0,   168,   169,   170,
     171,   172,     0,     0,   173,   174,   691,   176,   177,     0,
     178,   179,   180,     0,   181,     0,   183,     0,   184,   185,
     186,   187,   692,   189,   190,   191,   192,   693,   694,   194,
       0,   195,   196,   695,   198,     0,   199,     0,   200,   201,
       0,   202,   203,   204,   205,     0,   207,     0,   208,     0,
     209,   210,     0,   211,   212,   213,   214,   215,   216,     0,
     218,   219,   220,   221,     0,   222,   223,   224,   225,   226,
     227,     0,   228,   229,   230,   231,   232,   233,   234,   696,
     697,     0,   698,     0,   238,     0,     0,   241,   242,   243,
     244,   245,   246,   247,     0,     0,   248,   249,   250,     0,
       0,   252,   253,   254,   699,   700,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   701,
     279,   702,   281,   282,   283,   284,     0,   285,   286,     0,
     288,   704,   705,   290,   706,   292,   293,   294,     0,   295,
     296,     0,     0,   707,   298,   299,     0,     0,   300,   301,
     302,   303,   304,   708,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,     0,   316,   317,   709,   319,   320,
     321,   322,   323,   324,     0,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   710,   335,   336,   337,   338,     0,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,     0,   351,   352,   353,   354,   355,   356,   711,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,     0,   369,   370,   371,   372,   373,   712,   374,   375,
     376,   377,   378,     0,   380,   381,   713,   383,     0,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   714,     0,   397,   398,     0,   399,   400,   401,   402,
     403,   404,   405,     0,   715,   716,     0,     0,   408,   409,
     717,   411,   718,   719,   413,   414,   415,   416,   417,   418,
     419,     0,     0,   420,   421,   422,   423,   424,   720,     0,
     425,   426,   427,   428,   429,   430,   721,     0,   432,   433,
     434,   435,   436,   437,     0,     0,   438,     0,     0,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
       0,     0,     0,     0,     0,     0,   484,   723,   724,     0,
       0,     0,     0,     0,     0,     0,   726,     0,     0,     0,
       0,   727,    89,    90,    91,    92,    93,    94,    95,    96,
       0,    97,    98,    99,     0,     0,     0,     0,     0,  2069,
       0,   100,   101,     0,   102,   103,   104,     0,   106,   107,
     108,   109,   110,     0,   112,   113,     0,   114,   115,   116,
     117,   118,   119,     0,     0,   120,   121,   122,   123,   124,
       0,   125,   126,   127,   128,   129,     0,     0,     0,   131,
     132,   133,   134,   135,     0,   137,   138,   139,     0,   140,
     141,   142,   143,   144,   145,     0,  -579,   147,   148,   149,
       0,     0,     0,     0,     0,     0,     0,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,     0,   161,     0,
     162,   163,   164,   165,   166,   167,     0,   168,   169,   170,
     171,   172,     0,     0,   173,   174,   175,   176,   177,     0,
     178,   179,   180,     0,   181,   182,   183,     0,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,     0,   194,
       0,   195,   196,   197,   198,     0,   199,     0,   200,     0,
       0,  -579,   203,   204,   205,     0,   207,     0,   208,     0,
     209,   210,     0,   211,   212,   213,   214,   215,   216,     0,
     218,   219,   220,   221,     0,   222,   223,   224,   225,   226,
     227,     0,   228,  -579,   230,   231,   232,   233,   234,   235,
     236,     0,   237,     0,   238,     0,     0,   241,  -579,   243,
     244,   245,   246,   247,     0,     0,   248,  -579,   250,     0,
       0,   252,   253,   254,     0,     0,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
    -579,   280,   281,   282,   283,   284,     0,   285,   286,     0,
     288,     0,   289,   290,   291,   292,   293,   294,     0,   295,
     296,     0,     0,   297,   298,   299,     0,     0,   300,   301,
       0,   303,     0,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,     0,   316,   317,   318,   319,   320,
     321,   322,   323,   324,     0,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,     0,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,     0,   351,   352,  -579,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,     0,   369,   370,   371,   372,   373,     0,   374,   375,
     376,   377,   378,     0,   380,   381,   382,   383,     0,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,     0,   397,   398,     0,   399,  -579,   401,   402,
     403,   404,   405,     0,   406,   407,     0,     0,   408,   409,
     410,   411,   412,     0,   413,   414,   415,   416,   417,   418,
     419,     0,     0,   420,   421,   422,   423,   424,     0,     0,
     425,   426,   427,   428,   429,   430,   431,     0,   432,     0,
     434,   435,   436,   437,     0,     0,   438,     0,     0,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
       0,     0,    88,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   784,    89,    90,
      91,    92,    93,    94,    95,    96,     0,    97,    98,    99,
       0,     0,     0,     0,     0,     0,     0,   100,   101,     0,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,     0,   114,   115,   116,   117,   118,   119,     0,
     676,   120,   121,   122,   123,   124,     0,   125,   126,   127,
     128,   679,     0,   680,     0,   131,   132,   133,   134,   135,
     136,   137,   138,   139,     0,   140,   141,   142,   143,   144,
     145,     0,   146,   147,   148,   149,   681,   682,   683,   684,
     685,   686,   687,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,     0,   161,     0,   162,   163,   164,   165,
     166,   167,     0,   168,   169,   170,   171,   172,     0,     0,
     173,   174,   175,   176,   177,     0,   178,   179,   180,     0,
     181,   182,   183,     0,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   693,     0,   194,     0,   195,   196,   197,
     198,     0,   199,     0,   200,   201,     0,   202,   203,   204,
     205,   206,   207,     0,   208,     0,   209,   210,     0,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
       0,   222,   223,   224,   225,   226,   227,     0,   228,   229,
     230,   231,   232,   233,   234,   235,   236,     0,   237,     0,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
    1828,     0,   248,   249,   250,   251,     0,   252,   253,   254,
     699,   700,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,     0,   285,   286,   287,   288,     0,   705,   290,
     291,   292,   293,   294,     0,   295,   296,     0,   553,   297,
     298,   299,     0,     0,   300,   301,   302,   303,   304,   708,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
       0,   316,   317,   709,   319,   320,   321,   322,   323,   324,
       0,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,     0,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,     0,   351,
     352,   353,   354,   355,   356,   357,  1829,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,    24,   369,   370,
     371,   372,   373,   712,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,     0,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   714,     0,   397,
     398,    28,   399,   400,   401,   402,   403,   404,   405,     0,
     406,   407,     0,     0,   408,   409,   717,   411,   718,     0,
     413,   414,   415,   416,   417,   418,   419,     0,     0,   420,
     421,   422,   423,   424,   720,     0,   425,   426,   427,   428,
     429,   589,   431,     0,   432,   433,   434,   435,   436,   437,
       0,     0,   438,     0,    31,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,     0,    88,    32,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1830,    89,    90,    91,    92,    93,    94,    95,
      96,     0,    97,    98,    99,     0,     0,     0,     0,     0,
       0,     0,   100,   101,     0,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,     0,   114,   115,
     116,   117,   118,   119,     0,   676,   120,   121,   122,   123,
     124,     0,   125,   126,   127,   128,   679,     0,   680,     0,
     131,   132,   133,   134,   135,   136,   137,   138,   139,     0,
     140,   141,   142,   143,   144,   145,     0,   146,   147,   148,
     149,   681,   682,   683,   684,   685,   686,   687,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,     0,   161,
       0,   162,   163,   164,   165,   166,   167,     0,   168,   169,
     170,   171,   172,     0,     0,   173,   174,   175,   176,   177,
       0,   178,   179,   180,     0,   181,   182,   183,     0,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   693,     0,
     194,     0,   195,   196,   197,   198,     0,   199,     0,   200,
     201,     0,   202,   203,   204,   205,   206,   207,     0,   208,
       0,   209,   210,     0,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,     0,   222,   223,   224,   225,
     226,   227,     0,   228,   229,   230,   231,   232,   233,   234,
     235,   236,     0,   237,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,  1828,     0,   248,   249,   250,
     251,     0,   252,   253,   254,   699,   700,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,     0,   285,   286,
     287,   288,     0,   705,   290,   291,   292,   293,   294,     0,
     295,   296,     0,   553,   297,   298,   299,     0,     0,   300,
     301,   302,   303,   304,   708,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,     0,   316,   317,   709,   319,
     320,   321,   322,   323,   324,     0,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
       0,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,  1829,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,     0,   369,   370,   371,   372,   373,   712,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,     0,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   714,     0,   397,   398,     0,   399,   400,   401,
     402,   403,   404,   405,     0,   406,   407,     0,     0,   408,
     409,   717,   411,   718,     0,   413,   414,   415,   416,   417,
     418,   419,     0,     0,   420,   421,   422,   423,   424,   720,
       0,   425,   426,   427,   428,   429,   430,   431,     0,   432,
     433,   434,   435,   436,   437,     0,     0,   438,     0,     0,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,     0,    88,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1830,    89,    90,
      91,    92,    93,    94,    95,    96,     0,    97,    98,    99,
       0,     0,     0,     0,     0,     0,     0,   100,   101,     0,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,     0,   114,   115,   116,   117,   118,   119,     0,
     676,   120,   121,   122,   123,   124,     0,   125,   126,   127,
     128,   679,     0,   680,     0,   131,   132,   133,   134,   135,
     136,   137,   138,   139,     0,   140,   141,   142,   143,   144,
     145,     0,   146,   147,   148,   149,   681,   682,   683,   684,
     685,   686,   687,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,     0,   161,     0,   162,   163,   164,   165,
     166,   167,     0,   168,   169,   170,   171,   172,     0,     0,
     173,   174,   175,   176,   177,     0,   178,   179,   180,     0,
     181,   182,   183,     0,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   693,     0,   194,     0,   195,   196,   197,
     198,     0,   199,     0,   200,   201,     0,   202,   203,   204,
     205,   206,   207,     0,   208,     0,   209,   210,     0,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
       0,   222,   223,   224,   225,   226,   227,     0,   228,   229,
     230,   231,   232,   233,   234,   235,   236,     0,   237,     0,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
       0,     0,   248,   249,   250,   251,     0,   252,   253,   254,
     699,   700,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,     0,   285,   286,   287,   288,     0,   705,   290,
     291,   292,   293,   294,     0,   295,   296,     0,     0,   297,
     298,   299,     0,     0,   300,   301,   302,   303,   304,   708,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
       0,   316,   317,   709,   319,   320,   321,   322,   323,   324,
       0,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,     0,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,     0,   351,
     352,   353,   354,   355,   356,   357,  1829,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,     0,   369,   370,
     371,   372,   373,   712,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,     0,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   714,     0,   397,
     398,     0,   399,   400,   401,   402,   403,   404,   405,     0,
     406,   407,     0,     0,   408,   409,   717,   411,   718,     0,
     413,   414,   415,   416,   417,   418,   419,     0,     0,   420,
     421,   422,   423,   424,   720,     0,   425,   426,   427,   428,
     429,   430,   431,     0,   432,   433,   434,   435,   436,   437,
       0,     0,   438,     0,     0,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,     0,    88,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    33,    89,    90,    91,    92,    93,    94,    95,
      96,     0,    97,    98,    99,     0,     0,     0,     0,     0,
       0,     0,   100,   101,     0,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,     0,   114,   115,
     116,   117,   118,   119,     0,   676,   120,   121,   122,   123,
     124,     0,   125,   126,   127,   128,   679,     0,   680,     0,
     131,   132,   133,   134,   135,   136,   137,   138,   139,     0,
     140,   141,   142,   143,   144,   145,     0,   146,   147,   148,
     149,   681,   682,   683,   684,   685,   686,   687,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,     0,   161,
       0,   162,   163,   164,   165,   166,   167,     0,   168,   169,
     170,   171,   172,     0,     0,   173,   174,   175,   176,   177,
       0,   178,   179,   180,     0,   181,   182,   183,     0,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   693,     0,
     194,     0,   195,   196,   197,   198,     0,   199,     0,   200,
     201,     0,   202,   203,   204,   205,   206,   207,     0,   208,
       0,   209,   210,     0,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,     0,   222,   223,   224,   225,
     226,   227,     0,   228,   229,   230,   231,   232,   233,   234,
     235,   236,     0,   237,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,     0,     0,   248,   249,   250,
     251,     0,   252,   253,   254,   699,   700,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,     0,   285,   286,
     287,   288,     0,   705,   290,   291,   292,   293,   294,     0,
     295,   296,     0,     0,   297,   298,   299,     0,     0,   300,
     301,   302,   303,   304,   708,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,     0,   316,   317,   709,   319,
     320,   321,   322,   323,   324,     0,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
       0,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,     0,   369,   370,   371,   372,   373,   712,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,     0,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   714,     0,   397,   398,     0,   399,   400,   401,
     402,   403,   404,   405,     0,   406,   407,     0,     0,   408,
     409,   717,   411,   718,     0,   413,   414,   415,   416,   417,
     418,   419,     0,     0,   420,   421,   422,   423,   424,   720,
       0,   425,   426,   427,   428,   429,   430,   431,     0,   432,
     433,   434,   435,   436,   437,     0,     0,   438,     0,     0,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,     0,   646,   988,   528,     0,     0,     0,   670,     0,
       0,     0,     0,     0,     0,     0,     0,  2408,    89,    90,
      91,    92,    93,    94,    95,    96,     0,    97,    98,    99,
       0,     0,     0,     0,     0,     0,     0,   100,   101,     0,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,     0,   114,   115,   116,   117,   118,   119,     0,
       0,   120,   121,   122,   123,   124,     0,   125,   126,   127,
     128,   129,     0,   130,     0,   131,   132,   133,   134,   135,
     136,   137,   138,   139,     0,   140,   141,   142,   143,   144,
     145,     0,   146,   147,   148,   149,     0,     0,     0,   150,
       0,     0,     0,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,     0,   161,     0,   162,   163,   164,   165,
     166,   167,     0,   168,   169,   170,   171,   172,     0,     0,
     173,   174,   175,   176,   177,     0,   178,   179,   180,     0,
     181,   182,   183,     0,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   989,   194,     0,   195,   196,   197,
     198,     0,   199,     0,   200,   201,     0,   202,   203,   204,
     205,   206,   207,     0,   208,     0,   209,   210,     0,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
       0,   222,   223,   224,   225,   226,   227,     0,   228,   229,
     230,   231,   232,   233,   234,   235,   236,     0,   237,     0,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
       0,     0,   248,   249,   250,   251,     0,   252,   253,   254,
       0,     0,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,     0,   285,   286,   287,   288,     0,   289,   290,
     291,   292,   293,   294,     0,   295,   296,   990,     0,   297,
     298,   299,     0,     0,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
       0,   316,   317,   318,   319,   320,   321,   322,   323,   324,
       0,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,     0,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,     0,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,     0,   369,   370,
     371,   372,   373,     0,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,     0,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,     0,   397,
     398,     0,   399,   400,   401,   402,   403,   404,   405,     0,
     406,   407,     0,     0,   408,   409,   410,   411,   412,   991,
     413,   414,   415,   416,   417,   418,   419,     0,     0,   420,
     421,   422,   423,   424,     0,     0,   425,   426,   427,   428,
     429,   430,   431,     0,   432,   433,   434,   435,   436,   437,
       0,     0,   438,     0,     0,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,     0,   646,     0,     0,
       0,     0,     0,   992,   993,  1699,     0,     0,     0,     0,
       0,     0,  1700,    89,    90,    91,    92,    93,    94,    95,
      96,     0,    97,    98,    99,     3,     4,     0,     0,     0,
       0,     0,   100,   101,     0,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,     0,   114,   115,
     116,   117,   118,   119,     0,     0,   120,   121,   122,   123,
     124,     0,   125,   126,   127,   128,   129,     0,   130,     0,
     131,   132,   133,   134,   135,   136,   137,   138,   139,     0,
     140,   141,   142,   143,   144,   145,     0,   146,   147,   148,
     149,     0,     0,     0,   150,     0,     0,     0,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,     0,   161,
       0,   162,   163,   164,   165,   166,   167,     0,   168,   169,
     170,   171,   172,     0,     0,   173,   174,   175,   176,   177,
       0,   178,   179,   180,     0,   181,   182,   183,     0,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,     0,
     194,     0,   195,   196,   197,   198,     0,   199,     0,   200,
     201,     0,   202,   203,   204,   205,   206,   207,     0,   208,
       0,   209,   210,     0,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,     0,   222,   223,   224,   225,
     226,   227,     0,   228,   229,   230,   231,   232,   233,   234,
     235,   236,     0,   237,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,     0,     0,   248,   249,   250,
     251,     0,   252,   253,   254,     0,     0,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,     0,   285,   286,
     287,   288,     0,   289,   290,   291,   292,   293,   294,     0,
     295,   296,     0,     0,   297,   298,   299,     0,     0,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,     0,   316,   317,   318,   319,
     320,   321,   322,   323,   324,     0,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
       0,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,     0,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,    24,   369,   370,   371,   372,   373,     0,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,     0,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,     0,   397,   398,    28,   399,   400,   401,
     402,   403,   404,   405,     0,   406,   407,     0,     0,   408,
     409,   410,   411,   412,     0,   413,   414,   415,   416,   417,
     418,   419,     0,     0,   420,   421,   422,   423,   424,     0,
       0,   425,   426,   427,   428,   429,   589,   431,     0,   432,
     433,   434,   435,   436,   437,     0,     0,   438,     0,    31,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,     0,   484,    32,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    33,    89,    90,
      91,    92,    93,    94,    95,    96,   586,    97,    98,    99,
       0,     0,     0,     0,     0,     0,     0,   100,   101,     0,
     102,   103,   104,     0,   106,   107,   108,   109,   110,     0,
     112,   113,     0,   114,   115,   116,   117,   118,   119,     0,
       0,   120,   121,   122,   123,   124,     0,   125,   126,   127,
     128,   129,     0,     0,     0,   131,   132,   133,   134,   135,
       0,   137,   138,   139,     0,   140,   141,   142,   143,   144,
     145,     0,     0,   147,   148,   149,     0,     0,     0,     0,
       0,     0,     0,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,     0,   161,     0,   162,   163,   164,   165,
     166,   167,     0,   168,   169,   170,   171,   172,     0,     0,
     173,   174,   175,   176,   177,     0,   178,   179,   180,     0,
     181,   182,   183,     0,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,     0,   194,     0,   195,   196,   197,
     198,     0,   199,     0,   200,     0,     0,     0,   203,   204,
     205,     0,   207,     0,   208,     0,   209,   210,     0,   211,
     212,   213,   214,   215,   216,     0,   218,   219,   220,   221,
       0,   222,   223,   224,   225,   226,   227,     0,   228,     0,
     230,   231,   232,   233,   234,   235,   236,     0,   237,     0,
     238,     0,     0,   241,     0,   243,   244,   245,   246,   247,
       0,     0,   248,     0,   250,     0,     0,   252,   253,   254,
       0,     0,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,     0,   280,   281,   282,
     283,   284,     0,   285,   286,     0,   288,     0,   289,   290,
     291,   292,   293,   294,     0,   295,   296,     0,     0,   297,
     298,   299,     0,     0,   300,   301,     0,   303,     0,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
       0,   316,   317,   318,   319,   320,   321,   322,   323,   324,
       0,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,     0,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,     0,   351,
     352,     0,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,    24,   369,   370,
     371,   372,   373,     0,   374,   375,   376,   377,   378,     0,
     380,   381,   382,   383,     0,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,     0,   397,
     398,    28,   399,     0,   401,   402,   403,   404,   405,     0,
     587,   407,     0,     0,   588,   409,   410,   411,   412,     0,
     413,   414,   415,   416,   417,   418,   419,     0,     0,   420,
     421,   422,   423,   424,     0,     0,   425,   426,   427,   428,
     429,   589,   431,     0,   432,     0,   434,   435,   436,   437,
       0,     0,   438,     0,    31,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,     0,   484,    32,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    33,    89,    90,    91,    92,    93,    94,    95,
      96,     0,    97,    98,    99,     0,     0,     0,     0,     0,
       0,     0,   100,   101,     0,   102,   103,   104,     0,   106,
     107,   108,   109,   110,     0,   112,   113,     0,   114,   115,
     116,   117,   118,   119,     0,     0,   120,   121,   122,   123,
     124,     0,   125,   126,   127,   128,   129,     0,     0,     0,
     131,   132,   133,   134,   135,     0,   137,   138,   139,     0,
     140,   141,   142,   143,   144,   145,     0,     0,   147,   148,
     149,     0,     0,     0,     0,     0,     0,     0,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,     0,   161,
       0,   162,   163,   164,   165,   166,   167,     0,   168,   169,
     170,   171,   172,     0,     0,   173,   174,   175,   176,   177,
       0,   178,   179,   180,     0,   181,   182,   183,     0,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,     0,
     194,     0,   195,   196,   197,   198,     0,   199,     0,   200,
       0,     0,     0,   203,   204,   205,     0,   207,     0,   208,
       0,   209,   210,     0,   211,   212,   213,   214,   215,   216,
       0,   218,   219,   220,   221,     0,   222,   223,   224,   225,
     226,   227,     0,   228,     0,   230,   231,   232,   233,   234,
     235,   236,     0,   237,     0,   238,     0,     0,   241,     0,
     243,   244,   245,   246,   247,     0,     0,   248,     0,   250,
       0,     0,   252,   253,   254,     0,     0,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,     0,   280,   281,   282,   283,   284,     0,   285,   286,
       0,   288,     0,   289,   290,   291,   292,   293,   294,     0,
     295,   296,     0,     0,   297,   298,   299,     0,     0,   300,
     301,     0,   303,     0,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,     0,   316,   317,   318,   319,
     320,   321,   322,   323,   324,     0,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
       0,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,     0,   351,   352,     0,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,    24,   369,   370,   371,   372,   373,     0,   374,
     375,   376,   377,   378,     0,   380,   381,   382,   383,     0,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,     0,   397,   398,    28,   399,     0,   401,
     402,   403,   404,   405,     0,   406,   407,     0,     0,   408,
     409,   410,   411,   412,     0,   413,   414,   415,   416,   417,
     418,   419,     0,     0,   420,   421,   422,   423,   424,     0,
       0,   425,   426,   427,   428,   429,   589,   431,     0,   432,
       0,   434,   435,   436,   437,     0,     0,   438,     0,    31,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,     0,   484,    32,  2241,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    33,    89,    90,
      91,    92,    93,    94,    95,    96,     0,    97,    98,    99,
       0,     0,     0,     0,     0,     0,     0,   100,   101,     0,
     102,   103,   104,     0,   106,   107,   108,   109,   110,     0,
     112,   113,     0,   114,   115,   116,   117,   118,   119,     0,
       0,   120,   121,   122,   123,   124,     0,   125,   126,   127,
     128,   129,     0,     0,     0,   131,   132,   133,   134,   135,
       0,   137,   138,   139,     0,   140,   141,   142,   143,   144,
     145,     0,     0,   147,   148,   149,     0,     0,     0,     0,
       0,     0,     0,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,     0,   161,     0,   162,   163,   164,   165,
     166,   167,     0,   168,   169,   170,   171,   172,     0,     0,
     173,   174,   175,   176,   177,     0,   178,   179,   180,     0,
     181,   182,   183,     0,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,     0,   194,     0,   195,   196,   197,
     198,     0,   199,     0,   200,     0,     0,     0,   203,   204,
     205,     0,   207,     0,   208,     0,   209,   210,     0,   211,
     212,   213,   214,   215,   216,     0,   218,   219,   220,   221,
       0,   222,   223,   224,   225,   226,   227,     0,   228,     0,
     230,   231,   232,   233,   234,   235,   236,     0,   237,     0,
     238,     0,     0,   241,     0,   243,   244,   245,   246,   247,
       0,     0,   248,     0,   250,     0,     0,   252,   253,   254,
       0,     0,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,     0,   280,   281,   282,
     283,   284,     0,   285,   286,     0,   288,     0,   289,   290,
     291,   292,   293,   294,     0,   295,   296,     0,     0,   297,
     298,   299,     0,     0,   300,   301,     0,   303,     0,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
       0,   316,   317,   318,   319,   320,   321,   322,   323,   324,
       0,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,     0,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,     0,   351,
     352,     0,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,     0,   369,   370,
     371,   372,   373,     0,   374,   375,   376,   377,   378,     0,
     380,   381,   382,   383,     0,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,     0,   397,
     398,     0,   399,     0,   401,   402,   403,   404,   405,     0,
     406,   407,     0,     0,   408,   409,   410,   411,   412,     0,
     413,   414,   415,   416,   417,   418,   419,     0,     0,   420,
     421,   422,   423,   424,     0,     0,   425,   426,   427,   428,
     429,   430,   431,     0,   432,     0,   434,   435,   436,   437,
       0,     0,   438,     0,     0,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,     0,   484,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2259,    89,    90,    91,    92,    93,    94,    95,
      96,     0,    97,    98,    99,     0,     0,     0,     0,     0,
       0,     0,   100,   101,     0,   102,   103,   104,     0,   106,
     107,   108,   109,   110,     0,   112,   113,     0,   114,   115,
     116,   117,   118,   119,     0,     0,   120,   121,   122,   123,
     124,     0,   125,   126,   127,   128,   129,     0,     0,     0,
     131,   132,   133,   134,   135,     0,   137,   138,   139,     0,
     140,   141,   142,   143,   144,   145,     0,     0,   147,   148,
     149,     0,     0,     0,     0,     0,     0,     0,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,     0,   161,
       0,   162,   163,   164,   165,   166,   167,     0,   168,   169,
     170,   171,   172,     0,     0,   173,   174,   175,   176,   177,
       0,   178,   179,   180,     0,   181,   182,   183,     0,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,     0,
     194,     0,   195,   196,   197,   198,     0,   199,     0,   200,
       0,     0,     0,   203,   204,   205,     0,   207,     0,   208,
       0,   209,   210,     0,   211,   212,   213,   214,   215,   216,
       0,   218,   219,   220,   221,     0,   222,   223,   224,   225,
     226,   227,     0,   228,     0,   230,   231,   232,   233,   234,
     235,   236,     0,   237,     0,   238,     0,     0,   241,     0,
     243,   244,   245,   246,   247,     0,     0,   248,     0,   250,
       0,     0,   252,   253,   254,     0,     0,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,     0,   280,   281,   282,   283,   284,     0,   285,   286,
       0,   288,     0,   289,   290,   291,   292,   293,   294,     0,
     295,   296,     0,     0,   297,   298,   299,     0,     0,   300,
     301,     0,   303,     0,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,     0,   316,   317,   318,   319,
     320,   321,   322,   323,   324,     0,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
       0,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,     0,   351,   352,     0,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,     0,   369,   370,   371,   372,   373,     0,   374,
     375,   376,   377,   378,     0,   380,   381,   382,   383,     0,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,     0,   397,   398,     0,   399,     0,   401,
     402,   403,   404,   405,     0,   406,   407,     0,     0,   408,
     409,   410,   411,   412,     0,   413,   414,   415,   416,   417,
     418,   419,     0,     0,   420,   421,   422,   423,   424,     0,
       0,   425,   426,   427,   428,   429,   430,   431,     0,   432,
       0,   434,   435,   436,   437,     0,     0,   438,     0,     0,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,     0,   484,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   765,    89,    90,
      91,    92,    93,    94,    95,    96,     0,    97,    98,    99,
       0,     0,     0,     0,     0,     0,     0,   100,   101,     0,
     102,   103,   104,     0,   106,   107,   108,   109,   110,     0,
     112,   113,     0,   114,   115,   116,   117,   118,   119,     0,
       0,   120,   121,   122,   123,   124,     0,   125,   126,   127,
     128,   129,     0,     0,     0,   131,   132,   133,   134,   135,
       0,   137,   138,   139,     0,   140,   141,   142,   143,   144,
     145,     0,     0,   147,   148,   149,     0,     0,     0,     0,
       0,     0,     0,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,     0,   161,     0,   162,   163,   164,   165,
     166,   167,     0,   168,   169,   170,   171,   172,     0,     0,
     173,   174,   175,   176,   177,     0,   178,   179,   180,     0,
     181,   182,   183,     0,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,     0,   194,     0,   195,   196,   197,
     198,     0,   199,     0,   200,     0,     0,     0,   203,   204,
     205,     0,   207,     0,   208,     0,   209,   210,     0,   211,
     212,   213,   214,   215,   216,     0,   218,   219,   220,   221,
       0,   222,   223,   224,   225,   226,   227,     0,   228,     0,
     230,   231,   232,   233,   234,   235,   236,     0,   237,     0,
     238,     0,     0,   241,     0,   243,   244,   245,   246,   247,
       0,     0,   248,     0,   250,     0,     0,   252,   253,   254,
       0,     0,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,     0,   280,   281,   282,
     283,   284,     0,   285,   286,     0,   288,     0,   289,   290,
     291,   292,   293,   294,     0,   295,   296,     0,     0,   297,
     298,   299,     0,     0,   300,   301,     0,   303,     0,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
       0,   316,   317,   318,   319,   320,   321,   322,   323,   324,
       0,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,     0,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,     0,   351,
     352,     0,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,     0,   369,   370,
     371,   372,   373,     0,   374,   375,   376,   377,   378,     0,
     380,   381,   382,   383,     0,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,     0,   397,
     398,     0,   399,     0,   401,   402,   403,   404,   405,     0,
     406,   407,     0,     0,   408,   409,   410,   411,   412,     0,
     413,   414,   415,   416,   417,   418,   419,     0,     0,   420,
     421,   422,   423,   424,     0,     0,   425,   426,   427,   428,
     429,   430,   431,     0,   432,     0,   434,   435,   436,   437,
       0,     0,   438,     0,     0,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,     0,   484,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1553,    89,    90,    91,    92,    93,    94,    95,
      96,     0,    97,    98,    99,     0,     0,     0,     0,     0,
       0,     0,   100,   101,     0,   102,   103,   104,     0,   106,
     107,   108,   109,   110,     0,   112,   113,     0,   114,   115,
     116,   117,   118,   119,     0,     0,   120,   121,   122,   123,
     124,     0,   125,   126,   127,   128,   129,     0,     0,     0,
     131,   132,   133,   134,   135,     0,   137,   138,   139,     0,
     140,   141,   142,   143,   144,   145,     0,     0,   147,   148,
     149,     0,     0,     0,     0,     0,     0,     0,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,     0,   161,
       0,   162,   163,   164,   165,   166,   167,     0,   168,   169,
     170,   171,   172,     0,     0,   173,   174,   175,   176,   177,
       0,   178,   179,   180,     0,   181,   182,   183,     0,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,     0,
     194,     0,   195,   196,   197,   198,     0,   199,     0,   200,
       0,     0,     0,   203,   204,   205,     0,   207,     0,   208,
       0,   209,   210,     0,   211,   212,   213,   214,   215,   216,
       0,   218,   219,   220,   221,     0,   222,   223,   224,   225,
     226,   227,     0,   228,     0,   230,   231,   232,   233,   234,
     235,   236,     0,   237,     0,   238,     0,     0,   241,     0,
     243,   244,   245,   246,   247,     0,     0,   248,     0,   250,
       0,     0,   252,   253,   254,     0,     0,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,     0,   280,   281,   282,   283,   284,     0,   285,   286,
       0,   288,     0,   289,   290,   291,   292,   293,   294,     0,
     295,   296,     0,     0,   297,   298,   299,     0,     0,   300,
     301,     0,   303,     0,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,     0,   316,   317,   318,   319,
     320,   321,   322,   323,   324,     0,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
       0,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,     0,   351,   352,     0,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,     0,   369,   370,   371,   372,   373,     0,   374,
     375,   376,   377,   378,     0,   380,   381,   382,   383,     0,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,     0,   397,   398,     0,   399,     0,   401,
     402,   403,   404,   405,     0,   406,   407,     0,     0,   408,
     409,   410,   411,   412,     0,   413,   414,   415,   416,   417,
     418,   419,     0,     0,   420,   421,   422,   423,   424,     0,
       0,   425,   426,   427,   428,   429,   430,   431,     0,   432,
       0,   434,   435,   436,   437,     0,     0,   438,     0,     0,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,     0,     0,     0,     0,  1011,   988,   528,     0,     0,
    1415,   670,     0,     0,     0,     0,     0,  2053,  1416,  1417,
    1418,    89,    90,    91,    92,    93,    94,    95,    96,   865,
      97,    98,    99,   866,   867,   868,   869,   870,   871,   872,
     100,   101,   873,   102,   103,   104,   105,   106,   107,   108,
       0,  1012,   111,  1013,  1014,   874,   114,   115,   116,   117,
     118,   119,   875,   876,   120,   121,  1015,  1016,   124,   877,
     125,   126,   127,   128,     0,   878,   130,   879,   131,   132,
     133,   134,   135,   136,   137,   138,   139,   880,   140,   141,
     142,   143,   144,   145,   881,   146,   147,   148,   149,   882,
     883,   884,   150,   885,   886,   887,   151,   152,   153,   154,
     155,   156,   157,  1017,  1018,   160,   888,   161,   889,   162,
     163,   164,   165,   166,   167,   890,   168,   169,   170,   171,
     172,   891,   892,   173,   174,   691,   176,   177,   893,   178,
     179,   180,   894,   181,   182,   183,   895,   184,   185,   186,
     187,     0,   189,   190,   191,   192,     0,   896,   194,   897,
     195,   196,  1019,   198,   898,   199,   899,   200,   201,   900,
     202,   203,   204,   205,   206,   207,   901,   208,   902,     0,
     210,   903,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,   904,   222,   223,   224,   225,   226,   227,
     905,   228,   229,     0,   231,   232,   233,   234,  1020,  1021,
     906,  1022,   907,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   908,   909,   248,   249,   250,   251,   910,
     252,   253,   254,   911,   912,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,  1023,   279,
    1024,   281,   282,   283,  2154,   913,   285,   286,   287,   288,
     914,     0,   290,  1025,   292,   293,   294,   915,   295,   296,
     916,   917,  2155,   298,   299,   918,   919,   300,     0,   302,
     303,   304,     0,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   920,   316,   317,     0,   319,   320,     0,
     322,   323,   324,   921,   325,   326,   327,   328,   329,   330,
     331,   332,   333,  1026,   335,   336,   337,   338,   922,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   923,   351,   352,   353,   354,   355,   356,     0,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     924,   369,   370,   371,   372,   373,   925,   374,  2156,   376,
     377,   378,   379,   380,   381,  1028,   383,   926,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
       0,   927,   397,   398,   928,   399,   400,   401,   402,   403,
     404,   405,   929,  1029,  1030,   930,   931,   408,   409,     0,
     411,     0,   932,   413,   414,   415,   416,   417,   418,   419,
     933,   934,   420,   421,   422,   423,   424,   935,   936,   425,
     426,   427,   428,   429,     0,  1031,   937,   432,   433,   434,
     435,   436,   437,   938,   939,   438,   940,   941,   439,   440,
     441,   442,   443,   444,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   456,   457,   458,   459,     0,
     484,     0,  1419,  1420,  1421,  1415,  2157,  2158,  1424,  1425,
    1426,  1427,     0,  1416,  1417,  1418,    89,    90,    91,    92,
      93,    94,    95,    96,     0,    97,    98,    99,     0,     0,
       0,     0,     0,     0,     0,   100,   101,     0,   102,   103,
     104,     0,   106,   107,   108,   109,   110,     0,   112,   113,
       0,   114,   115,   116,   117,   118,   119,     0,     0,   120,
     121,   122,   123,   124,     0,   125,   126,   127,   128,   129,
       0,     0,     0,   131,   132,   133,   134,   135,     0,   137,
     138,   139,     0,   140,   141,   142,   143,   144,   145,     0,
       0,   147,   148,   149,     0,     0,     0,     0,     0,     0,
       0,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,     0,   161,     0,   162,   163,   164,   165,   166,   167,
       0,   168,   169,   170,   171,   172,     0,     0,   173,   174,
     175,   176,   177,     0,   178,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,     0,   194,     0,   195,   196,   197,   198,     0,
     199,     0,   200,     0,     0,     0,   203,   204,   205,     0,
     207,     0,   208,     0,   209,   210,     0,   211,   212,   213,
     214,   215,   216,     0,   218,   219,   220,   221,     0,   222,
     223,   224,   225,   226,   227,     0,   228,     0,   230,   231,
     232,   233,   234,   235,   236,     0,   237,     0,   238,     0,
       0,   241,     0,   243,   244,   245,   246,   247,     0,     0,
     248,     0,   250,     0,     0,   252,   253,   254,     0,     0,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,     0,   280,   281,   282,   283,   284,
       0,   285,   286,     0,   288,     0,   289,   290,   291,   292,
     293,   294,     0,   295,   296,     0,     0,   297,   298,   299,
       0,     0,   300,   301,     0,   303,     0,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,     0,   316,
     317,   318,   319,   320,   321,   322,   323,   324,     0,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,     0,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,     0,   351,   352,     0,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,     0,   369,   370,   371,   372,
     373,     0,   374,   375,   376,   377,   378,     0,   380,   381,
     382,   383,     0,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,     0,   397,   398,     0,
     399,     0,   401,   402,   403,   404,   405,     0,   406,   407,
       0,     0,   408,   409,   410,   411,   412,     0,   413,   414,
     415,   416,   417,   418,   419,     0,     0,   420,   421,   422,
     423,   424,     0,     0,   425,   426,   427,   428,   429,   430,
     431,     0,   432,     0,   434,   435,   436,   437,     0,     0,
     438,     0,     0,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,     0,     0,     0,  1419,  1420,  1421,
       0,  1422,  1423,  1424,  1425,  1426,  1427,  1106,     0,     0,
    1107,     0,     0,     0,  1108,  1109,  1110,  1111,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1112,     0,     0,  1106,     0,     0,  1107,     0,
    1114,     0,  1108,  1109,  1110,  1111,     0,  1115,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1112,     0,     0,     0,     0,     0,     0,     0,  1114,     0,
       0,  1106,  1116,     0,  1107,  1115,     0,     0,  1108,  1109,
    1110,  1111,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1106,  1112,     0,  1107,     0,
    1116,     0,  1108,     0,  1114,     0,     0,     0,     0,     0,
       0,  1115,     0,     0,     0,     0,     0,  1106,     0,     0,
    1107,     0,     0,     0,  1108,  1109,  1110,  1111,  1114,     0,
       0,     0,     0,     0,     0, -1526,  1116,     0,     0,     0,
       0,     0,  1112,     0,     0,     0,     0,     0,     0,     0,
    1114,     0,     0,     0,     0,  1106,     0,  1115,  1107,     0,
    1116,     0,  1108,  1109,  1110,  1111,     0,     0,     0,     0,
       0,  1117,     0,     0,     0,     0,     0,     0,     0,     0,
    1112,     0,  1116,     0,     0,  1118,     0,     0,  1114,     0,
    1119,     0,     0,     0,     0,  1115,     0,     0,     0,  1117,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1120,  1121,  1118,     0,     0,     0,     0,  1119,     0,
    1116,     0,     0,     0,     0,  1122,     0,     0,     0,  2048,
       0,     0,     0,     0,     0,  1117,     0,     0,     0,  1120,
    1121,     0,     0,     0,     0,     0,     0,     0,     0,  1118,
       0,     0,     0,  1122,  1119,     0,     0,     0,     0, -1526,
       0,     0,  1123,     0,     0,  1124,     0,     0,     0,     0,
       0,     0,     0, -1526,     0,  1120,  1121,     0, -1526,  1125,
       0,  1117,  1126,     0,     0,     0,     0,     0,     0,  1122,
    1123,     0,     0,  1124,     0,  1118,     0,     0,     0,     0,
    1119,     0,     0,     0,     0,     0,     0,  1125,     0,     0,
    1126,     0,     0, -1526,     0,     0,     0,     0,     0,  1117,
       0,  1120,  1121,     0,     0,     0,  1123,     0,     0,  1124,
       0,     0,     0,  1118,     0,  1122,     0,     0,  1119,     0,
       0,     0,     0,  1125,     0,     0,  1126,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1120,
    1121,     0,     0,     0,     0,     0,     0,  1125,     0,  1127,
       0,     0,  1123,  1122,     0,  1124,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1125,
       0,     0,  1126,     0,     0,     0,     0,  1127,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1123,     0,     0,  1124,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1125,     0,     0,
    1126,     0,     0,  1127,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0, -1526,     0,     0,
       0,     0,     0,     0,     0,     0,  1128,     0,     0,  1129,
    1130,  1131,     0,  1132,  1133,  1134,  1135,  1136,  1137,  1127,
       0,     0,     0,  2210,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1128,     0,     0,  1129,  1130,  1131,
       0,  1132,  1133,  1134,  1135,  1136,  1137,     0,     0,     0,
       0,  2228,     0,     0,     0,     0,     0,  1127,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1128,     0,     0,  1129,  1130,  1131,     0,  1132,  1133,  1134,
    1135,  1136,  1137,     0,     0,     0,     0,  2369,     0,     0,
       0,     0,     0,     0, -1526,     0,     0,     0,     0,     0,
       0,  1132,  1133,  1134,  1135,  1136,  1137,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1128,     0,     0,  1129,
    1130,  1131,     0,  1132,  1133,  1134,  1135,  1136,  1137,     0,
       0,     0,     0,  2567,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1128,     0,   864,  1129,  1130,  1131,
       0,  1132,  1133,  1134,  1135,  1136,  1137,     0,     0,     0,
       0,  2579,    89,    90,    91,    92,    93,    94,    95,    96,
     865,    97,    98,    99,   866,   867,   868,   869,   870,   871,
     872,   100,   101,   873,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   874,   114,   115,   116,
     117,   118,   119,   875,   876,   120,   121,   122,   123,   124,
     877,   125,   126,   127,   128,   129,   878,   130,   879,   131,
     132,   133,   134,   135,   136,   137,   138,   139,   880,   140,
     141,   142,   143,   144,   145,   881,   146,   147,   148,   149,
     882,   883,   884,   150,   885,   886,   887,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   888,   161,   889,
     162,   163,   164,   165,   166,   167,   890,   168,   169,   170,
     171,   172,   891,   892,   173,   174,   175,   176,   177,   893,
     178,   179,   180,   894,   181,   182,   183,   895,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   896,   194,
     897,   195,   196,   197,   198,   898,   199,   899,   200,   201,
     900,   202,   203,   204,   205,   206,   207,   901,   208,   902,
     209,   210,   903,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   904,   222,   223,   224,   225,   226,
     227,   905,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   906,   237,   907,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   908,   909,   248,   249,   250,   251,
     910,   252,   253,   254,   911,   912,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   913,   285,   286,   287,
     288,   914,   289,   290,   291,   292,   293,   294,   915,   295,
     296,   916,   917,   297,   298,   299,   918,   919,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   920,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   921,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   922,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   923,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   924,   369,   370,   371,   372,   373,   925,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   926,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   927,   397,   398,   928,   399,   400,   401,   402,
     403,   404,   405,   929,   406,   407,   930,   931,   408,   409,
     410,   411,   412,   932,   413,   414,   415,   416,   417,   418,
     419,   933,   934,   420,   421,   422,   423,   424,   935,   936,
     425,   426,   427,   428,   429,   430,   431,   937,   432,   433,
     434,   435,   436,   437,   938,   939,   438,   940,   941,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     484,     0,     0,     0,     0,     0,     0,     0,     0,   942,
       0,     0,     0,     0,     0,     0,    89,    90,    91,    92,
      93,    94,    95,    96,     0,    97,    98,    99,     0,     0,
       0,     0,     0,     0,     0,   100,   101,     0,   102,   103,
     104,     0,   106,   107,   108,   109,   110,     0,   112,   113,
       0,   114,   115,   116,   117,   118,   119,     0,     0,   120,
     121,   122,   123,   124,     0,   125,   126,   127,   128,   129,
       0,     0,     0,   131,   132,   133,   134,   135,     0,   137,
     138,   139,     0,   140,   141,   142,   143,   144,   145,     0,
       0,   147,   148,   149,     0,     0,     0,     0,     0,     0,
       0,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,     0,   161,     0,   162,   163,   164,   165,   166,   167,
       0,   168,   169,   170,   171,   172,     0,     0,   173,   174,
     175,   176,   177,     0,   178,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,     0,   194,     0,   195,   196,   197,   198,     0,
     199,     0,   200,     0,     0,     0,   203,   204,   205,     0,
     207,     0,   208,     0,   209,   210,     0,   211,   212,   213,
     214,   215,   216,     0,   218,   219,   220,   221,     0,   222,
     223,   224,   225,   226,   227,     0,   228,     0,   230,   231,
     232,   233,   234,   235,   236,     0,   237,     0,   238,     0,
       0,   241,     0,   243,   244,   245,   246,   247,     0,     0,
     248,     0,   250,     0,     0,   252,   253,   254,     0,     0,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,     0,   280,   281,   282,   283,   284,
       0,   285,   286,     0,   288,     0,   289,   290,   291,   292,
     293,   294,     0,   295,   296,     0,     0,   297,   298,   299,
       0,     0,   300,   301,     0,   303,     0,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,     0,   316,
     317,   318,   319,   320,   321,   322,   323,   324,     0,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,     0,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,     0,   351,   352,     0,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,     0,   369,   370,   371,   372,
     373,     0,   374,   375,   376,   377,   378,     0,   380,   381,
     382,   383,     0,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,     0,   397,   398,     0,
     399,     0,   401,   402,   403,   404,   405,     0,   406,   407,
       0,     0,   408,   409,   410,   411,   412,     0,   413,   414,
     415,   416,   417,   418,   419,     0,     0,   420,   421,   422,
     423,   424,     0,     0,   425,   426,   427,   428,   429,   430,
     431,     0,   432,     0,   434,   435,   436,   437,     0,     0,
     438,     0,     0,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   646,   988,   528,     0,     0,     0,
     670,     0,     0,  1975,     0,     0,     0,     0,     0,     0,
      89,    90,    91,    92,    93,    94,    95,    96,     0,    97,
      98,    99,     0,     0,     0,     0,     0,     0,     0,   100,
     101,     0,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,     0,   114,   115,   116,   117,   118,
     119,     0,     0,   120,   121,   122,   123,   124,     0,   125,
     126,   127,   128,   129,     0,   130,     0,   131,   132,   133,
     134,   135,   136,   137,   138,   139,     0,   140,   141,   142,
     143,   144,   145,     0,   146,   147,   148,   149,     0,     0,
       0,   150,     0,     0,     0,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,  1162,   161,     0,   162,   163,
     164,   165,   166,   167,     0,   168,   169,   170,   171,   172,
       0,     0,   173,   174,   175,   176,   177,     0,   178,   179,
     180,     0,   181,   182,   183,     0,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   989,   194,     0,   195,
     196,   197,   198,     0,   199,     0,   200,   201,     0,   202,
     203,   204,   205,   206,   207,     0,   208,     0,   209,   210,
       0,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,   221,     0,   222,   223,   224,   225,   226,   227,     0,
     228,   229,   230,   231,   232,   233,   234,   235,   236,     0,
     237,     0,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,     0,     0,   248,   249,   250,   251,     0,   252,
     253,   254,     0,     0,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,     0,   285,   286,   287,   288,     0,
     289,   290,   291,   292,   293,   294,     0,   295,   296,   990,
       0,   297,   298,   299,     0,     0,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,     0,   316,   317,   318,   319,   320,   321,   322,
     323,   324,     0,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,     0,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
       0,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,     0,
     369,   370,   371,   372,   373,     0,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,     0,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
       0,   397,   398,     0,   399,   400,   401,   402,   403,   404,
     405,     0,   406,   407,     0,     0,   408,   409,   410,   411,
     412,   991,   413,   414,   415,   416,   417,   418,   419,     0,
       0,   420,   421,   422,   423,   424,     0,     0,   425,   426,
     427,   428,   429,   430,   431,     0,   432,   433,   434,   435,
     436,   437,     0,     0,   438,     0,     0,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   646,   988,
     528,     0,     0,     0,   670,   992,   993,     0,     0,     0,
       0,     0,     0,     0,    89,    90,    91,    92,    93,    94,
      95,    96,     0,    97,    98,    99,     0,     0,     0,     0,
       0,     0,     0,   100,   101,     0,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,     0,   114,
     115,   116,   117,   118,   119,     0,     0,   120,   121,   122,
     123,   124,     0,   125,   126,   127,   128,   129,     0,   130,
       0,   131,   132,   133,   134,   135,   136,   137,   138,   139,
       0,   140,   141,   142,   143,   144,   145,     0,   146,   147,
     148,   149,     0,     0,     0,   150,     0,     0,     0,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,  1164,
     161,     0,   162,   163,   164,   165,   166,   167,     0,   168,
     169,   170,   171,   172,     0,     0,   173,   174,   175,   176,
     177,     0,   178,   179,   180,     0,   181,   182,   183,     0,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     989,   194,     0,   195,   196,   197,   198,     0,   199,     0,
     200,   201,     0,   202,   203,   204,   205,   206,   207,     0,
     208,     0,   209,   210,     0,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,     0,   222,   223,   224,
     225,   226,   227,     0,   228,   229,   230,   231,   232,   233,
     234,   235,   236,     0,   237,     0,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,     0,     0,   248,   249,
     250,   251,     0,   252,   253,   254,     0,     0,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,     0,   285,
     286,   287,   288,     0,   289,   290,   291,   292,   293,   294,
       0,   295,   296,   990,     0,   297,   298,   299,     0,     0,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,     0,   316,   317,   318,
     319,   320,   321,   322,   323,   324,     0,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,     0,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,     0,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,     0,   369,   370,   371,   372,   373,     0,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
       0,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,     0,   397,   398,     0,   399,   400,
     401,   402,   403,   404,   405,     0,   406,   407,     0,     0,
     408,   409,   410,   411,   412,   991,   413,   414,   415,   416,
     417,   418,   419,     0,     0,   420,   421,   422,   423,   424,
       0,     0,   425,   426,   427,   428,   429,   430,   431,     0,
     432,   433,   434,   435,   436,   437,     0,     0,   438,     0,
       0,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   646,   988,   528,     0,     0,     0,   670,   992,
     993,     0,     0,     0,     0,     0,     0,     0,    89,    90,
      91,    92,    93,    94,    95,    96,     0,    97,    98,    99,
       0,     0,     0,     0,     0,     0,     0,   100,   101,     0,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,     0,   114,   115,   116,   117,   118,   119,     0,
       0,   120,   121,   122,   123,   124,     0,   125,   126,   127,
     128,   129,     0,   130,     0,   131,   132,   133,   134,   135,
     136,   137,   138,   139,     0,   140,   141,   142,   143,   144,
     145,     0,   146,   147,   148,   149,     0,     0,     0,   150,
       0,     0,     0,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,     0,   161,     0,   162,   163,   164,   165,
     166,   167,     0,   168,   169,   170,   171,   172,     0,     0,
     173,   174,   175,   176,   177,     0,   178,   179,   180,     0,
     181,   182,   183,     0,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   989,   194,     0,   195,   196,   197,
     198,     0,   199,     0,   200,   201,     0,   202,   203,   204,
     205,   206,   207,     0,   208,     0,   209,   210,     0,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
       0,   222,   223,   224,   225,   226,   227,     0,   228,   229,
     230,   231,   232,   233,   234,   235,   236,     0,   237,     0,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
       0,     0,   248,   249,   250,   251,     0,   252,   253,   254,
       0,     0,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,     0,   285,   286,   287,   288,     0,   289,   290,
     291,   292,   293,   294,     0,   295,   296,   990,     0,   297,
     298,   299,     0,     0,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
       0,   316,   317,   318,   319,   320,   321,   322,   323,   324,
       0,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,     0,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,     0,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,     0,   369,   370,
     371,   372,   373,     0,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,     0,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,     0,   397,
     398,     0,   399,   400,   401,   402,   403,   404,   405,     0,
     406,   407,     0,     0,   408,   409,   410,   411,   412,   991,
     413,   414,   415,   416,   417,   418,   419,     0,     0,   420,
     421,   422,   423,   424,     0,     0,   425,   426,   427,   428,
     429,   430,   431,     0,   432,   433,   434,   435,   436,   437,
       0,     0,   438,     0,     0,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,     0,     0,  1106,     0,
       0,  1107,     0,   992,   993,  1108,  1109,  1110,  1111,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1112,     0,     0,  1106,  1559,     0,  1107,
       0,  1114,     0,  1108,  1109,  1110,  1111,     0,  1115,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1112,     0,     0,     0,     0,     0,     0,     0,  1114,
       0,     0,     0,  1116,  1106,     0,  1115,  1107,     0,     0,
       0,  1108,  1109,  1110,  1111,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1112,
       0,  1116,     0,     0,     0,     0,     0,  1114,     0,     0,
       0,     0,     0,     0,  1115,     0,     0,     0,  1106,     0,
       0,  1107,     0,  1560,     0,  1108,  1109,  1110,  1111,     0,
       0,     0,     0,     0,  1106,     0,     0,  1107,     0,  1116,
       0,  1108,     0,  1112,     0,     0,  1731,     0,     0,     0,
       0,  1114,     0,     0,     0,     0,  1106,     0,  1115,  1107,
       0,     0,     0,  1108,  1109,  1110,  1111,  1114,     0,     0,
       0,     0,  1117,     0, -1526,     0,     0,     0,     0,     0,
       0,  1112,     0,  1116,     0,     0,  1118,     0,     0,  1114,
    1771,  1119,     0,     0,     0,  1772,  1115,     0,     0,  1116,
    1117,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1120,  1121,  1118,     0,     0,     0,     0,  1119,
       0,  1116,     0,     0,     0,     0,  1122,  2637,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1117,     0,
    1120,  1121,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1118,     0,  1122,     0,     0,  1119,     0,     0,
       0,     0,     0,  1123,     0,     0,  1124,     0,  2227,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1120,  1121,
    1125,     0,  1117,  1126,     0,     0,     0,     0,     0,     0,
       0,  1123,  1122,     0,  1124,     0,  1118,     0, -1526,     0,
       0,  1119,     0,     0,     0,     0,     0,     0,  1125,     0,
       0,  1126, -1526,     0,     0,     0,     0, -1526,     0,     0,
    1117,     0,  1120,  1121,     0,     0,     0,     0,     0,  1123,
       0,     0,  1124,     0,  1118,     0,  1122,     0,     0,  1119,
       0,     0,     0,     0,     0,     0,  1125,     0,     0,  1126,
       0,     0, -1526,     0,     0,     0,  1106,     0,     0,  1107,
    1120,  1121,     0,  1108,  1109,  1110,  1111,     0,     0,     0,
    1127,     0,  2638,  1123,  1122,     0,  1124,     0,     0,     0,
       0,  1112,     0,     0,  1780,     0,     0,     0,     0,  1114,
    1125,     0,  1106,  1126,     0,  1107,  1115,     0,  1127,  1108,
    1109,  1110,  1111,     0,     0,     0,  1125,     0,     0,     0,
       0,  1123,     0,     0,  1124,     0,     0,  1112,     0,     0,
       0,  1116,     0,     0,     0,  1114,  1561,     0,  1125,     0,
       0,  1126,  1115,     0,     0,     0,  1127,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1745,
       0,     0,     0,     0,     0,     0,     0,  1116,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1128,     0,     0,
    1129,  1130,  1131,     0,  1132,  1133,  1134,  1135,  1136,  1137,
    1127,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1128, -1526,     0,  1129,  1130,
    1131,     0,  1132,  1133,  1134,  1135,  1136,  1137,     0,     0,
       0,     0,     0,     0,  1106,     0,     0,  1107,  1127,     0,
    1117,  1108, -1526, -1526, -1526,     0,     0,     0,     0,     0,
       0,     0,     0,  1128,  1118,     0,  1129,  1130,  1131,  1119,
    1132,  1133,  1134,  1135,  1136,  1137,     0,  1114,     0,     0,
       0,  1785,     0,     0,  1115,     0,  1117,     0,     0,     0,
    1120,  1121,     0,     0,     0,     0,     0,     0,     0,     0,
    1118,     0,     0,     0,  1122,  1119,     0,  1128,     0,  1116,
    1129,  1130,  1131,     0,  1132,  1133,  1134,  1135,  1136,  1137,
       0,     0,     0, -1526,     0,     0,  1120,  1121,     0,     0,
    1132,  1133,  1134,  1135,  1136,  1137,     0,     0,     0,     0,
    1122,  1123,     0,     0,  1124,  1128,     0,     0,  1129,  1130,
    1131,     0,  1132,  1133,  1134,  1135,  1136,  1137,  1125,  1106,
       0,  1126,  1107,     0,     0,     0,  1108,  1109,  1110,  1111,
       0,     0,     0,     0,     0,     0,     0,  1123,     0,     0,
    1124,     0,     0,     0,  1112,     0,     0,     0,     0,     0,
       0,     0,  1114,     0,  1125,  1106,   490,  1126,  1107,  1115,
       0,     0,  1108,  1109,  1110,  1111,     0,     0,  1117,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1112,     0,  1118,     0,  1116,     0,     0,  1119,  1114,     0,
       0,     0,     0,  1106,     0,  1115,  1107,     0,     0,     0,
    1108,  1109,  1110,  1111,     0,     0,     0,     0,  1127,   491,
       0,     0,     0,     0,     0,     0,     0,     0,  1112,     0,
    1116,     0,  1122,     0,   492,     0,  1114,     0,     0,  1106,
       0,     0,  1107,  1115,     0,     0,  1108,  1109,  1110,  1111,
       0,     0,  1106,     0,  1127,  1107,     0,     0,     0,  1108,
       0,     0,     0,     0,     0,     0,     0,     0,  1116,     0,
       0,     0,  1114,     0,     0,     0,     0,     0,     0,  1115,
       0,     0,     0,     0,     0,  1114,  1125,     0,   493,     0,
       0,     0, -1526,  1117,     0,     0,     0,   494,     0,     0,
       0,     0,     0,     0,  1116,     0,     0,  1118,     0,   495,
       0,     0,  1119,     0,   496,  1128,     0,  1116,  1129,  1130,
    1131,     0,  1132,  1133,  1134,  1135,  1136,  1137,     0,  1117,
       0,     0,     0,  1120,  1121,     0,     0,     0,     0,   497,
       0,     0,     0,  1118,     0,     0,     0,  1122,  1119,     0,
       0,  1128,     0,     0,  1129,  1130,  1131,     0,  1132,  1133,
    1134,  1135,  1136,  1137,     0,     0,     0,  1117,     0,  1120,
    1121,     0,     0,     0,     0,     0,  1127,     0,     0,     0,
       0,  1118,   498,  1122,  1123,   499,  1119,  1124,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1125,     0,  1117,  1126,     0,     0,  1120,  1121,     0,
       0,     0,     0,     0,     0,     0, -1526,  1118,     0,     0,
    1123,  1122,  1119,  1124,     0,     0,     0,     0,     0,     0,
   -1526,     0,     0,     0,     0, -1526,     0,  1125,     0,     0,
    1126,     0,     0,  1120,  1121,     0,     0,     0,   500,     0,
       0,     0,     0,     0,     0,     0,     0,  1122,  1123,     0,
       0,  1124,   501,     0,     0,     0,     0,     0,     0,     0,
   -1526,     0,     0,  1128,     0,  1125, -1526, -1526, -1526,     0,
    1132,  1133,  1134,  1135,  1136,  1137,     0,     0,     0,     0,
       0,  1127,     0,   502,  1123,     0,   503,  1124,     0,     0,
       0,     0,     0,     0,   504,     0,     0,   505,     0,     0,
       0,  1125,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1992,     0,     0,  1125,     0,   506,  1127,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   507,     0,     0,
       0,     0,     0,     0,   508,     0,     0,     0,     0,     0,
       0,     0,     0,   509,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1127,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   510,     0,     0,     0,     0,  1128,     0,
       0,  1129,  1130,  1131,     0,  1132,  1133,  1134,  1135,  1136,
    1137,  1127,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0, -1526,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1128,     0,     0,  1129,  1130,  1131,
       0,  1132,  1133,  1134,  1135,  1136,  1137,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1128,     0,     0,  1129,  1130,  1131,     0,  1132,
    1133,  1134,  1135,  1136,  1137,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1128,     0,
       0,  1129,  1130,  1131,     0,  1132,  1133,  1134,  1135,  1136,
    1137, -1526,   864,     0,  1469,     0,     0,     0,  1132,  1133,
    1134,  1135,  1136,  1137,     0,     0,     0,     0,    89,    90,
      91,    92,    93,    94,    95,    96,   865,    97,    98,    99,
     866,   867,   868,   869,   870,   871,   872,   100,   101,   873,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   874,   114,   115,   116,   117,   118,   119,   875,
     876,   120,   121,   122,   123,   124,   877,   125,   126,   127,
     128,   129,   878,   130,   879,   131,   132,   133,   134,   135,
     136,   137,   138,   139,   880,   140,   141,   142,   143,   144,
     145,   881,   146,   147,   148,   149,   882,   883,   884,   150,
     885,   886,   887,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   888,   161,   889,   162,   163,   164,   165,
     166,   167,   890,   168,   169,   170,   171,   172,   891,   892,
     173,   174,   175,   176,   177,   893,   178,   179,   180,   894,
     181,   182,   183,   895,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   896,   194,   897,   195,   196,   197,
     198,   898,   199,   899,   200,   201,   900,   202,   203,   204,
     205,   206,   207,   901,   208,   902,   209,   210,   903,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     904,   222,   223,   224,   225,   226,   227,   905,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   906,   237,   907,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     908,   909,   248,   249,   250,   251,   910,   252,   253,   254,
     911,   912,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   913,   285,   286,   287,   288,   914,   289,   290,
     291,   292,   293,   294,   915,   295,   296,   916,   917,   297,
     298,   299,   918,   919,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     920,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     921,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   922,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   923,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   924,   369,   370,
     371,   372,   373,   925,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   926,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   927,   397,
     398,   928,   399,   400,   401,   402,   403,   404,   405,   929,
     406,   407,   930,   931,   408,   409,   410,   411,   412,   932,
     413,   414,   415,   416,   417,   418,   419,   933,   934,   420,
     421,   422,   423,   424,   935,   936,   425,   426,   427,   428,
     429,   430,   431,   937,   432,   433,   434,   435,   436,   437,
     938,   939,   438,   940,   941,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   864,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    89,    90,    91,    92,    93,    94,    95,    96,
     865,    97,    98,    99,   866,   867,   868,   869,   870,   871,
     872,   100,   101,   873,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   874,   114,   115,   116,
     117,   118,   119,   875,   876,   120,   121,   122,   123,   124,
     877,   125,   126,   127,   128,   129,   878,   130,   879,   131,
     132,   133,   134,   135,   136,   137,   138,   139,   880,   140,
     141,   142,   143,   144,   145,   881,   146,   147,   148,   149,
     882,   883,   884,   150,   885,   886,   887,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   888,   161,   889,
     162,   163,   164,   165,   166,   167,   890,   168,   169,   170,
     171,   172,   891,   892,   173,   174,   175,   176,   177,   893,
     178,   179,   180,   894,   181,   182,   183,   895,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   896,   194,
     897,   195,   196,   197,   198,   898,   199,   899,   200,   201,
     900,   202,   203,   204,   205,   206,   207,   901,   208,   902,
     209,   210,   903,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   904,   222,   223,   224,   225,   226,
     227,   905,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   906,   237,   907,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   908,   909,   248,   249,   250,   251,
     910,   252,   253,   254,   911,   912,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   913,   285,   286,   287,
     288,   914,   289,   290,   291,   292,   293,   294,   915,   295,
     296,   916,   917,   297,   298,   299,   918,   919,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   920,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   921,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   922,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   923,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   924,   369,   370,   371,   372,   373,   925,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   926,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   927,   397,   398,   928,   399,   400,   401,   402,
     403,   404,   405,   929,   406,   407,   930,   931,   408,   409,
     410,   411,   412,   932,   413,   414,   415,   416,   417,   418,
     419,   933,   934,   420,   421,   422,   423,   424,   935,   936,
     425,   426,   427,   428,   429,   430,   431,   937,   432,   433,
     434,   435,   436,   437,   938,   939,   438,   940,   941,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     864,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    89,    90,    91,    92,
    1608,    94,    95,    96,   865,    97,    98,    99,   866,   867,
     868,   869,   870,   871,   872,   100,   101,   873,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     874,   114,   115,   116,   117,   118,   119,   875,   876,   120,
     121,   122,   123,   124,   877,   125,   126,   127,   128,   129,
     878,   130,   879,   131,   132,   133,   134,   135,   136,   137,
     138,   139,   880,   140,   141,   142,   143,   144,   145,   881,
     146,   147,   148,   149,   882,   883,   884,   150,   885,   886,
     887,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   888,   161,   889,   162,   163,   164,   165,   166,   167,
     890,   168,   169,   170,   171,   172,   891,   892,   173,   174,
     175,  1609,   177,   893,   178,   179,   180,   894,   181,   182,
     183,   895,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   896,   194,   897,   195,   196,   197,   198,   898,
     199,   899,   200,   201,   900,   202,   203,   204,   205,   206,
     207,   901,   208,   902,   209,   210,   903,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   904,   222,
     223,   224,   225,   226,   227,   905,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   906,   237,   907,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   908,   909,
     248,   249,   250,   251,   910,   252,   253,   254,   911,   912,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     913,   285,   286,   287,   288,   914,   289,   290,   291,   292,
     293,   294,   915,   295,   296,   916,   917,   297,   298,   299,
     918,   919,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   920,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   921,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   922,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   923,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   924,   369,   370,   371,   372,
     373,   925,  1610,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   926,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   927,   397,   398,   928,
     399,   400,   401,   402,   403,   404,   405,   929,   406,   407,
     930,   931,   408,   409,   410,   411,   412,   932,   413,   414,
     415,   416,   417,   418,   419,   933,   934,   420,   421,   422,
     423,   424,   935,   936,   425,   426,   427,   428,   429,   430,
     431,   937,   432,   433,   434,   435,   436,   437,   938,   939,
     438,   940,   941,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,    88,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      89,    90,    91,    92,    93,    94,    95,    96,     0,    97,
      98,    99,     0,     0,     0,     0,     0,     0,     0,   100,
     101,     0,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,     0,   114,   115,   116,   117,   118,
     119,     0,   676,   120,   121,   122,   123,   124,     0,   125,
     126,   127,   128,   679,     0,   680,     0,   131,   132,   133,
     134,   135,   136,   137,   138,   139,     0,   140,   141,   142,
     143,   144,   145,     0,   146,   147,   148,   149,   681,   682,
     683,   684,   685,   686,   687,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,     0,   161,     0,   162,   163,
     164,   165,   166,   167,     0,   168,   169,   170,   171,   172,
       0,     0,   173,   174,   175,   176,   177,     0,   178,   179,
     180,     0,   181,   182,   183,     0,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   693,     0,   194,     0,   195,
     196,   197,   198,     0,   199,     0,   200,   201,     0,   202,
     203,   204,   205,   206,   207,     0,   208,     0,   209,   210,
       0,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,   221,     0,   222,   223,   224,   225,   226,   227,     0,
     228,   229,   230,   231,   232,   233,   234,   235,   236,     0,
     237,     0,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,     0,     0,   248,   249,   250,   251,     0,   252,
     253,   254,   699,   700,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,     0,   285,   286,   287,   288,     0,
     705,   290,   291,   292,   293,   294,     0,   295,   296,     0,
       0,   297,   298,   299,     0,     0,   300,   301,   302,   303,
     304,   708,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,     0,   316,   317,   709,   319,   320,   321,   322,
     323,   324,     0,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,     0,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
       0,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,     0,
     369,   370,   371,   372,   373,   712,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,     0,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   714,
       0,   397,   398,     0,   399,   400,   401,   402,   403,   404,
     405,     0,   406,   407,     0,     0,   408,   409,   717,   411,
     718,     0,   413,   414,   415,   416,   417,   418,   419,     0,
       0,   420,   421,   422,   423,   424,   720,     0,   425,   426,
     427,   428,   429,   430,   431,     0,   432,   433,   434,   435,
     436,   437,     0,     0,   438,     0,     0,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   646,     0,
     528,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    89,    90,    91,    92,    93,    94,
      95,    96,     0,    97,    98,    99,     0,     0,     0,     0,
       0,     0,     0,   100,   101,     0,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,     0,   114,
     115,   116,   117,   118,   119,     0,     0,   120,   121,   122,
     123,   124,     0,   125,   126,   127,   128,   129,     0,   130,
       0,   131,   132,   133,   134,   135,   136,   137,   138,   139,
       0,   140,   141,   142,   143,   144,   145,     0,   146,   147,
     148,   149,     0,     0,     0,   150,     0,     0,     0,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,     0,
     161,     0,   162,   163,   164,   165,   166,   167,     0,   168,
     169,   170,   171,   172,     0,     0,   173,   174,   175,   176,
     177,     0,   178,   179,   180,     0,   181,   182,   183,     0,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     989,   194,     0,   195,   196,   197,   198,     0,   199,     0,
     200,   201,     0,   202,   203,   204,   205,   206,   207,     0,
     208,     0,   209,   210,     0,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,     0,   222,   223,   224,
     225,   226,   227,     0,   228,   229,   230,   231,   232,   233,
     234,   235,   236,     0,   237,     0,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,     0,     0,   248,   249,
     250,   251,     0,   252,   253,   254,     0,     0,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,     0,   285,
     286,   287,   288,     0,   289,   290,   291,   292,   293,   294,
       0,   295,   296,   990,     0,   297,   298,   299,     0,     0,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,     0,   316,   317,   318,
     319,   320,   321,   322,   323,   324,     0,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,     0,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,     0,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,     0,   369,   370,   371,   372,   373,     0,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
       0,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,     0,   397,   398,     0,   399,   400,
     401,   402,   403,   404,   405,     0,   406,   407,     0,     0,
     408,   409,   410,   411,   412,   991,   413,   414,   415,   416,
     417,   418,   419,     0,     0,   420,   421,   422,   423,   424,
       0,     0,   425,   426,   427,   428,   429,   430,   431,     0,
     432,   433,   434,   435,   436,   437,     0,     0,   438,     0,
       0,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   646,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    89,    90,
      91,    92,    93,    94,    95,    96,     0,    97,    98,    99,
       3,     4,     0,     0,     0,     0,     0,   100,   101,     0,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,     0,   114,   115,   116,   117,   118,   119,     0,
       0,   120,   121,   122,   123,   124,     0,   125,   126,   127,
     128,   129,     0,   130,     0,   131,   132,   133,   134,   135,
     136,   137,   138,   139,     0,   140,   141,   142,   143,   144,
     145,     0,   146,   147,   148,   149,     0,     0,     0,   150,
       0,     0,     0,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,     0,   161,     0,   162,   163,   164,   165,
     166,   167,     0,   168,   169,   170,   171,   172,     0,     0,
     173,   174,   175,   176,   177,     0,   178,   179,   180,     0,
     181,   182,   183,     0,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,     0,   194,     0,   195,   196,   197,
     198,     0,   199,     0,   200,   201,     0,   202,   203,   204,
     205,   206,   207,     0,   208,     0,   209,   210,     0,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
       0,   222,   223,   224,   225,   226,   227,     0,   228,   229,
     230,   231,   232,   233,   234,   235,   236,     0,   237,     0,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
       0,     0,   248,   249,   250,   251,     0,   252,   253,   254,
       0,     0,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,     0,   285,   286,   287,   288,     0,   289,   290,
     291,   292,   293,   294,     0,   295,   296,     0,     0,   297,
     298,   299,     0,     0,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
       0,   316,   317,   318,   319,   320,   321,   322,   323,   324,
       0,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,     0,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,     0,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,     0,   369,   370,
     371,   372,   373,     0,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,     0,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,     0,   397,
     398,     0,   399,   400,   401,   402,   403,   404,   405,     0,
     406,   407,     0,     0,   408,   409,   410,   411,   412,     0,
     413,   414,   415,   416,   417,   418,   419,     0,     0,   420,
     421,   422,   423,   424,     0,     0,   425,   426,   427,   428,
     429,   430,   431,     0,   432,   433,   434,   435,   436,   437,
       0,     0,   438,     0,     0,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,    88,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    89,    90,    91,    92,    93,    94,    95,    96,
       0,    97,    98,    99,     0,     0,     0,     0,     0,     0,
       0,   100,   101,     0,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,     0,   114,   115,   116,
     117,   118,   119,     0,     0,   120,   121,   122,   123,   124,
       0,   125,   126,   127,   128,   129,     0,   130,     0,   131,
     132,   133,   134,   135,   136,   137,   138,   139,     0,   140,
     141,   142,   143,   144,   145,     0,   146,   147,   148,   149,
       0,     0,     0,   150,     0,     0,     0,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,     0,   161,     0,
     162,   163,   164,   165,   166,   167,     0,   168,   169,   170,
     171,   172,     0,     0,   173,   174,   175,   176,   177,     0,
     178,   179,   180,     0,   181,   182,   183,     0,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,     0,   194,
       0,   195,   196,   197,   198,     0,   199,     0,   200,   201,
       0,   202,   203,   204,   205,   206,   207,     0,   208,     0,
     209,   210,     0,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,     0,   222,   223,   224,   225,   226,
     227,     0,   228,   229,   230,   231,   232,   233,   234,   235,
     236,     0,   237,     0,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,     0,     0,   248,   249,   250,   251,
       0,   252,   253,   254,     0,     0,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,     0,   285,   286,   287,
     288,     0,   289,   290,   291,   292,   293,   294,     0,   295,
     296,     0,     0,   297,   298,   299,     0,     0,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,     0,   316,   317,   318,   319,   320,
     321,   322,   323,   324,     0,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,     0,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,     0,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,     0,   369,   370,   371,   372,   373,     0,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,     0,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,     0,   397,   398,     0,   399,   400,   401,   402,
     403,   404,   405,     0,   406,   407,     0,     0,   408,   409,
     410,   411,   412,     0,   413,   414,   415,   416,   417,   418,
     419,     0,     0,   420,   421,   422,   423,   424,     0,     0,
     425,   426,   427,   428,   429,   430,   431,     0,   432,   433,
     434,   435,   436,   437,     0,     0,   438,     0,     0,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     484,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    89,    90,    91,    92,
      93,    94,    95,    96,     0,    97,    98,    99,     0,     0,
       0,     0,     0,     0,     0,   100,   101,     0,   102,   103,
     104,     0,   106,   107,   108,   109,   110,     0,   112,   113,
       0,   114,   115,   116,   117,   118,   119,     0,     0,   120,
     121,   122,   123,   124,  1220,   125,   126,   127,   128,   129,
       0,     0,  1221,   131,   132,   133,   134,   135,     0,   137,
     138,   139,  1222,   140,   141,   142,   143,   144,   145,     0,
       0,   147,   148,   149,     0,     0,     0,     0,     0,     0,
       0,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,     0,   161,     0,   162,   163,   164,   165,   166,   167,
       0,   168,   169,   170,   171,   172,     0,     0,   173,   174,
     175,   176,   177,     0,   178,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,     0,   194,     0,   195,   196,   197,   198,     0,
     199,  1223,   200,     0,     0,     0,   203,   204,   205,     0,
     207,     0,   208,     0,   209,   210,     0,   211,   212,   213,
     214,   215,  1224,     0,   218,   219,   220,   221,     0,   222,
     223,   224,   225,   226,   227,     0,   228,     0,   230,   231,
     232,   233,   234,   235,   236,     0,   237,     0,   238,     0,
       0,   241,     0,   243,   244,   245,   246,   247,     0,     0,
     248,     0,   250,     0,     0,   252,   253,   254,     0,     0,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,     0,   280,   281,   282,   283,   284,
       0,   285,   286,     0,   288,     0,   289,   290,   291,   292,
     293,   294,     0,   295,   296,     0,     0,   297,   298,   299,
       0,     0,   300,   301,     0,   303,     0,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,     0,   316,
     317,   318,   319,   320,   321,   322,   323,   324,  1225,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,     0,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,     0,   351,   352,     0,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,     0,   369,   370,   371,   372,
     373,     0,   374,   375,   376,   377,   378,     0,   380,   381,
     382,   383,     0,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,     0,   397,   398,     0,
     399,     0,   401,   402,   403,   404,   405,     0,   406,   407,
       0,     0,   408,   409,   410,   411,   412,     0,   413,   414,
     415,   416,   417,   418,   419,     0,  1226,   420,   421,   422,
     423,   424,     0,     0,   425,   426,   427,   428,   429,   430,
     431,     0,   432,     0,   434,   435,   436,   437,     0,     0,
     438,     0,     0,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   484,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      89,    90,    91,    92,    93,    94,    95,    96,     0,    97,
      98,    99,     0,     0,     0,     0,     0,     0,     0,   100,
     101,     0,   102,   103,   104,     0,   106,   107,   108,   109,
     110,     0,   112,   113,     0,   114,   115,   116,   117,   118,
     119,     0,     0,   120,   121,   122,   123,   124,  1220,   125,
     126,   127,   128,   129,     0,     0,     0,   131,   132,   133,
     134,   135,     0,   137,   138,   139,  1222,   140,   141,   142,
     143,   144,   145,     0,     0,   147,   148,   149,     0,     0,
       0,     0,     0,     0,     0,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,     0,   161,     0,   162,   163,
     164,   165,   166,   167,     0,   168,   169,   170,   171,   172,
       0,     0,   173,   174,   175,   176,   177,     0,   178,   179,
     180,     0,   181,   182,   183,     0,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,     0,   194,     0,   195,
     196,   197,   198,     0,   199,  1223,   200,     0,     0,     0,
     203,   204,   205,     0,   207,     0,   208,     0,   209,   210,
       0,   211,   212,   213,   214,   215,   216,     0,   218,   219,
     220,   221,     0,   222,   223,   224,   225,   226,   227,     0,
     228,     0,   230,   231,   232,   233,   234,   235,   236,     0,
     237,     0,   238,     0,     0,   241,     0,   243,   244,   245,
     246,   247,     0,     0,   248,     0,   250,  1671,     0,   252,
     253,   254,     0,     0,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,     0,   280,
     281,   282,   283,   284,     0,   285,   286,     0,   288,     0,
     289,   290,   291,   292,   293,   294,     0,   295,   296,     0,
       0,   297,   298,   299,     0,     0,   300,   301,     0,   303,
       0,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,     0,   316,   317,   318,   319,   320,   321,   322,
     323,   324,  1225,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,     0,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
       0,   351,   352,     0,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,     0,
     369,   370,   371,   372,   373,     0,   374,   375,   376,   377,
     378,     0,   380,   381,   382,   383,     0,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
       0,   397,   398,     0,   399,     0,   401,   402,   403,   404,
     405,     0,   406,   407,     0,     0,   408,   409,   410,   411,
     412,     0,   413,   414,   415,   416,   417,   418,   419,     0,
    1226,   420,   421,   422,   423,   424,     0,     0,   425,   426,
     427,   428,   429,   430,   431,     0,   432,     0,   434,   435,
     436,   437,     0,     0,   438,     0,     0,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   484,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    89,    90,    91,    92,    93,    94,
      95,    96,     0,    97,    98,    99,     3,     4,     0,     0,
       0,     0,     0,   100,   101,     0,   102,   103,   104,     0,
     106,   107,   108,   109,   110,     0,   112,   113,     0,   114,
     115,   116,   117,   118,   119,     0,     0,   120,   121,   122,
     123,   124,     0,   125,   126,   127,   128,   129,     0,     0,
       0,   131,   132,   133,   134,   135,     0,   137,   138,   139,
       0,   140,   141,   142,   143,   144,   145,     0,     0,   147,
     148,   149,     0,     0,     0,     0,     0,     0,     0,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,     0,
     161,     0,   162,   163,   164,   165,   166,   167,     0,   168,
     169,   170,   171,   172,     0,     0,   173,   174,   175,   176,
     177,     0,   178,   179,   180,     0,   181,   182,   183,     0,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
       0,   194,     0,   195,   196,   197,   198,     0,   199,     0,
     200,     0,     0,     0,   203,   204,   205,     0,   207,     0,
     208,     0,   209,   210,     0,   211,   212,   213,   214,   215,
     216,     0,   218,   219,   220,   221,     0,   222,   223,   224,
     225,   226,   227,     0,   228,     0,   230,   231,   232,   233,
     234,   235,   236,     0,   237,     0,   238,     0,     0,   241,
       0,   243,   244,   245,   246,   247,     0,     0,   248,     0,
     250,     0,     0,   252,   253,   254,     0,     0,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,     0,   280,   281,   282,   283,   284,     0,   285,
     286,     0,   288,     0,   289,   290,   291,   292,   293,   294,
       0,   295,   296,     0,     0,   297,   298,   299,     0,     0,
     300,   301,     0,   303,     0,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,     0,   316,   317,   318,
     319,   320,   321,   322,   323,   324,     0,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,     0,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,     0,   351,   352,     0,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,     0,   369,   370,   371,   372,   373,     0,
     374,   375,   376,   377,   378,     0,   380,   381,   382,   383,
       0,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,     0,   397,   398,     0,   399,     0,
     401,   402,   403,   404,   405,     0,   406,   407,     0,     0,
     408,   409,   410,   411,   412,     0,   413,   414,   415,   416,
     417,   418,   419,     0,     0,   420,   421,   422,   423,   424,
       0,     0,   425,   426,   427,   428,   429,   430,   431,     0,
     432,     0,   434,   435,   436,   437,     0,     0,   438,     0,
       0,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   484,  2377,     0,     0,     0,     0,  2378,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    89,    90,
      91,    92,    93,    94,    95,    96,     0,    97,    98,    99,
       0,     0,     0,     0,     0,     0,     0,   100,   101,     0,
     102,   103,   104,     0,   106,   107,   108,   109,   110,     0,
     112,   113,     0,   114,   115,   116,   117,   118,   119,     0,
       0,   120,   121,   122,   123,   124,     0,   125,   126,   127,
     128,   129,     0,     0,     0,   131,   132,   133,   134,   135,
       0,   137,   138,   139,     0,   140,   141,   142,   143,   144,
     145,     0,     0,   147,   148,   149,     0,     0,     0,     0,
       0,     0,     0,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,     0,   161,     0,   162,   163,   164,   165,
     166,   167,     0,   168,   169,   170,   171,   172,     0,     0,
     173,   174,   175,   176,   177,     0,   178,   179,   180,     0,
     181,   182,   183,     0,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,     0,   194,     0,   195,   196,   197,
     198,     0,   199,     0,   200,     0,     0,     0,   203,   204,
     205,     0,   207,     0,   208,     0,   209,   210,     0,   211,
     212,   213,   214,   215,   216,     0,   218,   219,   220,   221,
       0,   222,   223,   224,   225,   226,   227,     0,   228,     0,
     230,   231,   232,   233,   234,   235,   236,     0,   237,     0,
     238,     0,     0,   241,     0,   243,   244,   245,   246,   247,
       0,     0,   248,     0,   250,     0,     0,   252,   253,   254,
       0,     0,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,     0,   280,   281,   282,
     283,   284,     0,   285,   286,     0,   288,     0,   289,   290,
     291,   292,   293,   294,     0,   295,   296,     0,     0,   297,
     298,   299,     0,     0,   300,   301,     0,   303,     0,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
       0,   316,   317,   318,   319,   320,   321,   322,   323,   324,
       0,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,     0,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,     0,   351,
     352,     0,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,     0,   369,   370,
     371,   372,   373,     0,   374,   375,   376,   377,   378,     0,
     380,   381,   382,   383,     0,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,     0,   397,
     398,     0,   399,     0,   401,   402,   403,   404,   405,     0,
     406,   407,     0,     0,   408,   409,   410,   411,   412,     0,
     413,   414,   415,   416,   417,   418,   419,     0,     0,   420,
     421,   422,   423,   424,     0,     0,   425,   426,   427,   428,
     429,   430,   431,     0,   432,     0,   434,   435,   436,   437,
       0,     0,   438,     0,     0,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   484,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    89,    90,    91,    92,    93,    94,    95,    96,
     485,    97,    98,    99,     0,     0,     0,     0,     0,     0,
       0,   100,   101,     0,   102,   103,   104,     0,   106,   107,
     108,   109,   110,     0,   112,   113,     0,   114,   115,   116,
     117,   118,   119,     0,     0,   120,   121,   122,   123,   124,
       0,   125,   126,   127,   128,   129,     0,     0,     0,   131,
     132,   133,   134,   135,     0,   137,   138,   139,     0,   140,
     141,   142,   143,   144,   145,     0,     0,   147,   148,   149,
       0,     0,     0,     0,     0,     0,     0,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,     0,   161,     0,
     162,   163,   164,   165,   166,   167,     0,   168,   169,   170,
     171,   172,     0,     0,   173,   174,   175,   176,   177,     0,
     178,   179,   180,     0,   181,   182,   183,     0,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,     0,   194,
       0,   195,   196,   197,   198,     0,   199,     0,   200,     0,
       0,     0,   203,   204,   205,     0,   207,     0,   208,     0,
     209,   210,     0,   211,   212,   213,   214,   215,   216,     0,
     218,   219,   220,   221,     0,   222,   223,   224,   225,   226,
     227,     0,   228,     0,   230,   231,   232,   233,   234,   235,
     236,     0,   237,     0,   238,     0,     0,   241,     0,   243,
     244,   245,   246,   247,     0,     0,   248,     0,   250,     0,
       0,   252,   253,   254,     0,     0,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
       0,   280,   281,   282,   283,   284,     0,   285,   286,     0,
     288,     0,   289,   290,   291,   292,   293,   294,     0,   295,
     296,     0,     0,   297,   298,   299,     0,     0,   300,   301,
       0,   303,     0,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,     0,   316,   317,   318,   319,   320,
     321,   486,   323,   324,     0,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,     0,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,     0,   351,   352,     0,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,     0,   369,   370,   371,   372,   373,     0,   374,   375,
     376,   377,   378,     0,   380,   381,   382,   383,     0,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,     0,   397,   398,     0,   399,     0,   401,   402,
     403,   404,   405,     0,   406,   407,     0,     0,   408,   409,
     410,   411,   412,     0,   413,   414,   415,   416,   417,   418,
     419,     0,     0,   420,   421,   422,   423,   424,     0,     0,
     425,   426,   427,   428,   429,   430,   431,     0,   432,     0,
     434,   435,   436,   437,     0,     0,   438,     0,     0,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     484,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    89,    90,    91,    92,
      93,    94,    95,    96,   533,    97,    98,    99,     0,     0,
       0,     0,     0,     0,     0,   100,   101,     0,   102,   103,
     104,     0,   106,   107,   108,   109,   110,     0,   112,   113,
       0,   114,   115,   116,   117,   118,   119,     0,     0,   120,
     121,   122,   123,   124,     0,   125,   126,   127,   128,   129,
       0,     0,     0,   131,   132,   133,   134,   135,     0,   137,
     138,   139,     0,   140,   141,   142,   143,   144,   145,     0,
       0,   147,   148,   149,     0,     0,     0,     0,     0,     0,
       0,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,     0,   161,     0,   162,   163,   164,   165,   166,   167,
       0,   168,   169,   170,   171,   172,     0,     0,   173,   174,
     175,   176,   177,     0,   178,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,     0,   194,     0,   195,   196,   197,   198,     0,
     199,     0,   200,     0,     0,     0,   203,   204,   205,     0,
     207,     0,   208,     0,   209,   210,     0,   211,   212,   213,
     214,   215,   216,     0,   218,   219,   220,   221,     0,   222,
     223,   224,   225,   226,   227,     0,   228,     0,   230,   231,
     232,   233,   234,   235,   236,     0,   237,     0,   238,     0,
       0,   241,     0,   243,   244,   245,   246,   247,     0,     0,
     248,     0,   250,     0,     0,   252,   253,   254,     0,     0,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,     0,   280,   281,   282,   283,   284,
       0,   285,   286,     0,   288,     0,   289,   290,   291,   292,
     293,   294,     0,   295,   296,     0,     0,   297,   298,   299,
       0,     0,   300,   301,     0,   303,     0,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,     0,   316,
     317,   318,   319,   320,   321,   322,   323,   324,     0,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,     0,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,     0,   351,   352,     0,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,     0,   369,   370,   371,   372,
     373,     0,   374,   375,   376,   377,   378,     0,   380,   381,
     382,   383,     0,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,     0,   397,   398,     0,
     399,     0,   401,   402,   403,   404,   405,     0,   534,   407,
       0,     0,   535,   409,   410,   411,   412,     0,   413,   414,
     415,   416,   417,   418,   419,     0,     0,   420,   421,   422,
     423,   424,     0,     0,   425,   426,   427,   428,   429,   430,
     431,     0,   432,     0,   434,   435,   436,   437,     0,     0,
     438,     0,     0,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   484,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      89,    90,    91,    92,    93,    94,    95,    96,     0,    97,
      98,    99,     0,     0,     0,     0,     0,     0,     0,   100,
     101,     0,   102,   103,   104,     0,   106,   107,   108,   109,
     110,     0,   112,   113,     0,   114,   115,   116,   117,   118,
     119,     0,     0,   120,   121,   122,   123,   124,     0,   125,
     126,   127,   128,   129,     0,     0,     0,   131,   132,   133,
     134,   135,     0,   137,   138,   139,     0,   140,   141,   142,
     143,   144,   145,     0,     0,   147,   148,   149,     0,     0,
       0,     0,     0,     0,     0,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,     0,   161,     0,   162,   163,
     164,   165,   166,   167,     0,   168,   169,   170,   171,   172,
       0,     0,   173,   174,   175,   176,   177,     0,   178,   179,
     180,     0,   181,   182,   183,     0,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,     0,   194,     0,   195,
     196,   197,   198,     0,   199,     0,   200,     0,     0,     0,
     203,   204,   205,     0,   207,     0,   208,     0,   209,   210,
       0,   211,   212,   213,   214,   215,   216,     0,   218,   219,
     220,   221,     0,   222,   223,   224,   225,   226,   227,     0,
     228,     0,   230,   231,   232,   233,   234,   235,   236,     0,
     237,     0,   238,     0,     0,   241,     0,   243,   244,   245,
     246,   247,     0,     0,   248,     0,   250,     0,     0,   252,
     253,   254,     0,     0,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,     0,   280,
     281,   282,   283,   284,     0,   285,   286,     0,   288,     0,
     289,   290,   291,   292,   293,   294,     0,   295,   296,     0,
     553,   297,   298,   299,     0,     0,   300,   301,     0,   303,
       0,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,     0,   316,   317,   318,   319,   320,   321,   322,
     323,   324,     0,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,     0,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
       0,   351,   352,     0,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,     0,
     369,   370,   371,   372,   373,     0,   374,   375,   376,   377,
     378,     0,   380,   381,   382,   383,     0,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
       0,   397,   398,     0,   399,     0,   401,   402,   403,   404,
     405,     0,   406,   407,     0,     0,   408,   409,   410,   411,
     412,     0,   413,   414,   415,   416,   417,   418,   419,     0,
       0,   420,   421,   422,   423,   424,     0,     0,   425,   426,
     427,   428,   429,   430,   431,     0,   432,     0,   434,   435,
     436,   437,     0,     0,   438,     0,     0,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   484,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    89,    90,    91,    92,    93,    94,
      95,    96,     0,    97,    98,    99,     0,     0,     0,     0,
       0,     0,     0,   100,   101,     0,   102,   103,   104,     0,
     106,   107,   108,   109,   110,     0,   112,   113,     0,   114,
     115,   116,   117,   118,   119,     0,     0,   120,   121,   122,
     123,   124,     0,   125,   126,   127,   128,   129,     0,     0,
       0,   131,   132,   133,   134,   135,     0,   137,   138,   139,
       0,   140,   141,   142,   143,   144,   145,     0,     0,   147,
     148,   149,     0,     0,     0,     0,     0,     0,     0,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,     0,
     161,     0,   162,   163,   164,   165,   166,   167,     0,   168,
     169,   170,   171,   172,     0,     0,   173,   174,   175,   176,
     177,     0,   178,   179,   180,     0,   181,   182,   183,     0,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
       0,   194,     0,   195,   196,   197,   198,     0,   199,     0,
     200,     0,     0,     0,   203,   204,   205,     0,   207,     0,
     208,     0,   209,   210,     0,   211,   212,   213,   214,   215,
     597,     0,   218,   219,   220,   221,     0,   222,   223,   224,
     225,   226,   227,     0,   228,     0,   230,   231,   232,   233,
     234,   235,   236,     0,   237,     0,   238,     0,     0,   241,
       0,   243,   244,   245,   246,   247,     0,     0,   248,     0,
     250,     0,     0,   252,   253,   254,     0,     0,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,     0,   280,   281,   282,   283,   284,     0,   285,
     286,     0,   288,     0,   289,   290,   291,   292,   293,   294,
       0,   295,   296,     0,   553,   297,   298,   299,     0,     0,
     300,   301,     0,   303,     0,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,     0,   316,   317,   318,
     319,   320,   321,   322,   323,   324,     0,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,     0,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,     0,   351,   352,     0,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,     0,   369,   370,   371,   372,   373,     0,
     374,   375,   376,   377,   378,     0,   380,   381,   382,   383,
       0,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,     0,   397,   398,     0,   399,     0,
     401,   402,   403,   404,   405,     0,   406,   407,     0,     0,
     408,   409,   410,   411,   412,     0,   413,   414,   415,   416,
     417,   418,   419,     0,     0,   420,   421,   422,   423,   424,
       0,     0,   425,   426,   427,   428,   429,   430,   431,     0,
     432,     0,   434,   435,   436,   437,     0,     0,   438,     0,
       0,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   484,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    89,    90,
      91,    92,    93,    94,    95,    96,   625,    97,    98,    99,
       0,     0,     0,     0,     0,     0,     0,   100,   101,     0,
     102,   103,   104,     0,   106,   107,   108,   109,   110,     0,
     112,   113,     0,   114,   115,   116,   117,   118,   119,     0,
       0,   120,   121,   122,   123,   124,     0,   125,   126,   127,
     128,   129,     0,     0,     0,   131,   132,   133,   134,   135,
       0,   137,   138,   139,     0,   140,   141,   142,   143,   144,
     145,     0,     0,   147,   148,   149,     0,     0,     0,     0,
       0,     0,     0,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,     0,   161,     0,   162,   163,   164,   165,
     166,   167,     0,   168,   169,   170,   171,   172,     0,     0,
     173,   174,   175,   176,   177,     0,   178,   179,   180,     0,
     181,   182,   183,     0,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,     0,   194,     0,   195,   196,   197,
     198,     0,   199,     0,   200,     0,     0,     0,   203,   204,
     205,     0,   207,     0,   208,     0,   209,   210,     0,   211,
     212,   213,   214,   215,   216,     0,   218,   219,   220,   221,
       0,   222,   223,   224,   225,   226,   227,     0,   228,     0,
     230,   231,   232,   233,   234,   235,   236,     0,   237,     0,
     238,     0,     0,   241,     0,   243,   244,   245,   246,   247,
       0,     0,   248,     0,   250,     0,     0,   252,   253,   254,
       0,     0,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,     0,   280,   281,   282,
     283,   284,     0,   285,   286,     0,   288,     0,   289,   290,
     291,   292,   293,   294,     0,   295,   296,     0,     0,   297,
     298,   299,     0,     0,   300,   301,     0,   303,     0,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
       0,   316,   317,   318,   319,   320,   321,   322,   323,   324,
       0,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,     0,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,     0,   351,
     352,     0,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,     0,   369,   370,
     371,   372,   373,     0,   374,   375,   376,   377,   378,     0,
     380,   381,   382,   383,     0,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,     0,   397,
     398,     0,   399,     0,   401,   402,   403,   404,   405,     0,
     406,   407,     0,     0,   408,   409,   410,   411,   412,     0,
     413,   414,   415,   416,   417,   418,   419,     0,     0,   420,
     421,   422,   423,   424,     0,     0,   425,   426,   427,   428,
     429,   430,   431,     0,   432,     0,   434,   435,   436,   437,
       0,     0,   438,     0,     0,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   484,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    89,    90,    91,    92,    93,    94,    95,    96,
       0,    97,    98,    99,     0,     0,     0,     0,     0,     0,
       0,   100,   101,     0,   102,   103,   104,     0,   106,   107,
     108,   109,   110,     0,   112,   113,     0,   114,   115,   116,
     117,   118,   119,     0,     0,   120,   121,   122,   123,   124,
       0,   125,   126,   127,   128,   129,     0,     0,     0,   131,
     132,   133,   134,   135,     0,   137,   138,   139,     0,   140,
     141,   142,   143,   144,   145,     0,     0,   147,   148,   149,
       0,     0,     0,     0,     0,     0,     0,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,     0,   161,     0,
     162,   163,   164,   165,   166,   167,     0,   168,   169,   170,
     171,   172,     0,     0,   173,   174,   175,   176,   177,     0,
     178,   179,   180,     0,   181,   182,   183,     0,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,     0,   194,
       0,   195,   196,   197,   198,     0,   199,     0,   200,     0,
       0,     0,   203,   204,   205,     0,  1521,     0,   208,     0,
     209,   210,     0,   211,   212,   213,   214,   215,   216,     0,
     218,   219,   220,   221,     0,   222,   223,   224,   225,   226,
     227,     0,   228,     0,   230,   231,   232,   233,   234,   235,
     236,     0,   237,     0,   238,     0,     0,   241,     0,   243,
     244,   245,   246,   247,     0,     0,   248,     0,   250,     0,
       0,   252,   253,  1522,     0,     0,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
       0,   280,   281,   282,   283,   284,     0,   285,   286,     0,
     288,     0,   289,   290,   291,   292,   293,   294,     0,   295,
     296,     0,     0,   297,   298,   299,     0,     0,   300,   301,
       0,   303,     0,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,     0,   316,   317,   318,   319,   320,
     321,   322,   323,   324,     0,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,     0,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,     0,   351,   352,     0,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,     0,   369,   370,   371,   372,   373,     0,   374,   375,
     376,   377,   378,     0,   380,   381,   382,   383,     0,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,     0,   397,   398,  1523,   399,     0,   401,  1524,
     403,  1525,   405,     0,   406,   407,     0,     0,   408,   409,
     410,   411,   412,     0,   413,   414,   415,   416,   417,   418,
     419,     0,     0,   420,   421,  1526,   423,   424,     0,     0,
     425,   426,   427,   428,   429,   430,   431,     0,   432,     0,
     434,   435,   436,   437,     0,     0,   438,     0,     0,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     484,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    89,    90,    91,    92,
      93,    94,    95,    96,     0,    97,    98,    99,     0,     0,
       0,     0,     0,  2069,     0,   100,   101,     0,   102,   103,
     104,     0,   106,   107,   108,   109,   110,     0,   112,   113,
       0,   114,   115,   116,   117,   118,   119,     0,     0,   120,
     121,   122,   123,   124,     0,   125,   126,   127,   128,   129,
       0,     0,     0,   131,   132,   133,   134,   135,     0,   137,
     138,   139,     0,   140,   141,   142,   143,   144,   145,     0,
       0,   147,   148,   149,     0,     0,     0,     0,     0,     0,
       0,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,     0,   161,     0,   162,   163,   164,   165,   166,   167,
       0,   168,   169,   170,   171,   172,     0,     0,   173,   174,
     175,   176,   177,     0,   178,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,     0,   194,     0,   195,   196,   197,   198,     0,
     199,     0,   200,     0,     0,     0,   203,   204,   205,     0,
     207,     0,   208,     0,   209,   210,     0,   211,   212,   213,
     214,   215,   216,     0,   218,   219,   220,   221,     0,   222,
     223,   224,   225,   226,   227,     0,   228,     0,   230,   231,
     232,   233,   234,   235,   236,     0,   237,     0,   238,     0,
       0,   241,     0,   243,   244,   245,   246,   247,     0,     0,
     248,     0,   250,     0,     0,   252,   253,   254,     0,     0,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,     0,   280,   281,   282,   283,   284,
       0,   285,   286,     0,   288,     0,   289,   290,   291,   292,
     293,   294,     0,   295,   296,     0,     0,   297,   298,   299,
       0,     0,   300,   301,     0,   303,     0,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,     0,   316,
     317,   318,   319,   320,   321,   322,   323,   324,     0,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,     0,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,     0,   351,   352,     0,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,     0,   369,   370,   371,   372,
     373,     0,   374,   375,   376,   377,   378,     0,   380,   381,
     382,   383,     0,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,     0,   397,   398,     0,
     399,     0,   401,   402,   403,   404,   405,     0,   406,   407,
       0,     0,   408,   409,   410,   411,   412,     0,   413,   414,
     415,   416,   417,   418,   419,     0,     0,   420,   421,   422,
     423,   424,     0,     0,   425,   426,   427,   428,   429,   430,
     431,     0,   432,     0,   434,   435,   436,   437,     0,     0,
     438,     0,     0,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   484,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      89,    90,    91,    92,    93,    94,    95,    96,     0,    97,
      98,    99,     0,     0,     0,     0,     0,  2083,     0,   100,
     101,     0,   102,   103,   104,     0,   106,   107,   108,   109,
     110,     0,   112,   113,     0,   114,   115,   116,   117,   118,
     119,     0,     0,   120,   121,   122,   123,   124,     0,   125,
     126,   127,   128,   129,     0,     0,     0,   131,   132,   133,
     134,   135,     0,   137,   138,   139,     0,   140,   141,   142,
     143,   144,   145,     0,     0,   147,   148,   149,     0,     0,
       0,     0,     0,     0,     0,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,     0,   161,     0,   162,   163,
     164,   165,   166,   167,     0,   168,   169,   170,   171,   172,
       0,     0,   173,   174,   175,   176,   177,     0,   178,   179,
     180,     0,   181,   182,   183,     0,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,     0,   194,     0,   195,
     196,   197,   198,     0,   199,     0,   200,     0,     0,     0,
     203,   204,   205,     0,   207,     0,   208,     0,   209,   210,
       0,   211,   212,   213,   214,   215,   216,     0,   218,   219,
     220,   221,     0,   222,   223,   224,   225,   226,   227,     0,
     228,     0,   230,   231,   232,   233,   234,   235,   236,     0,
     237,     0,   238,     0,     0,   241,     0,   243,   244,   245,
     246,   247,     0,     0,   248,     0,   250,     0,     0,   252,
     253,   254,     0,     0,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,     0,   280,
     281,   282,   283,   284,     0,   285,   286,     0,   288,     0,
     289,   290,   291,   292,   293,   294,     0,   295,   296,     0,
       0,   297,   298,   299,     0,     0,   300,   301,     0,   303,
       0,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,     0,   316,   317,   318,   319,   320,   321,   322,
     323,   324,     0,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,     0,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
       0,   351,   352,     0,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,     0,
     369,   370,   371,   372,   373,     0,   374,   375,   376,   377,
     378,     0,   380,   381,   382,   383,     0,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
       0,   397,   398,     0,   399,     0,   401,   402,   403,   404,
     405,     0,   406,   407,     0,     0,   408,   409,   410,   411,
     412,     0,   413,   414,   415,   416,   417,   418,   419,     0,
       0,   420,   421,   422,   423,   424,     0,     0,   425,   426,
     427,   428,   429,   430,   431,     0,   432,     0,   434,   435,
     436,   437,     0,     0,   438,     0,     0,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   484,     0,
    2241,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    89,    90,    91,    92,    93,    94,
      95,    96,     0,    97,    98,    99,     0,     0,     0,     0,
       0,     0,     0,   100,   101,     0,   102,   103,   104,     0,
     106,   107,   108,   109,   110,     0,   112,   113,     0,   114,
     115,   116,   117,   118,   119,     0,     0,   120,   121,   122,
     123,   124,     0,   125,   126,   127,   128,   129,     0,     0,
       0,   131,   132,   133,   134,   135,     0,   137,   138,   139,
       0,   140,   141,   142,   143,   144,   145,     0,     0,   147,
     148,   149,     0,     0,     0,     0,     0,     0,     0,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,     0,
     161,     0,   162,   163,   164,   165,   166,   167,     0,   168,
     169,   170,   171,   172,     0,     0,   173,   174,   175,   176,
     177,     0,   178,   179,   180,     0,   181,   182,   183,     0,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
       0,   194,     0,   195,   196,   197,   198,     0,   199,     0,
     200,     0,     0,     0,   203,   204,   205,     0,   207,     0,
     208,     0,   209,   210,     0,   211,   212,   213,   214,   215,
     216,     0,   218,   219,   220,   221,     0,   222,   223,   224,
     225,   226,   227,     0,   228,     0,   230,   231,   232,   233,
     234,   235,   236,     0,   237,     0,   238,     0,     0,   241,
       0,   243,   244,   245,   246,   247,     0,     0,   248,     0,
     250,     0,     0,   252,   253,   254,     0,     0,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,     0,   280,   281,   282,   283,   284,     0,   285,
     286,     0,   288,     0,   289,   290,   291,   292,   293,   294,
       0,   295,   296,     0,     0,   297,   298,   299,     0,     0,
     300,   301,     0,   303,     0,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,     0,   316,   317,   318,
     319,   320,   321,   322,   323,   324,     0,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,     0,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,     0,   351,   352,     0,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,     0,   369,   370,   371,   372,   373,     0,
     374,   375,   376,   377,   378,     0,   380,   381,   382,   383,
       0,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,     0,   397,   398,     0,   399,     0,
     401,   402,   403,   404,   405,     0,   406,   407,     0,     0,
     408,   409,   410,   411,   412,     0,   413,   414,   415,   416,
     417,   418,   419,     0,     0,   420,   421,   422,   423,   424,
       0,     0,   425,   426,   427,   428,   429,   430,   431,     0,
     432,     0,   434,   435,   436,   437,     0,     0,   438,     0,
       0,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   484,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    89,    90,
      91,    92,    93,    94,    95,    96,     0,    97,    98,    99,
       0,     0,     0,     0,     0,     0,     0,   100,   101,     0,
     102,   103,   104,     0,   106,   107,   108,   109,   110,     0,
     112,   113,     0,   114,   115,   116,   117,   118,   119,     0,
       0,   120,   121,   122,   123,   124,     0,   125,   126,   127,
     128,   129,     0,     0,     0,   131,   132,   133,   134,   135,
       0,   137,   138,   139,     0,   140,   141,   142,   143,   144,
     145,     0,     0,   147,   148,   149,     0,     0,     0,     0,
       0,     0,     0,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,     0,   161,     0,   162,   163,   164,   165,
     166,   167,     0,   168,   169,   170,   171,   172,     0,     0,
     173,   174,   175,   176,   177,     0,   178,   179,   180,     0,
     181,   182,   183,     0,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,     0,   194,     0,   195,   196,   197,
     198,     0,   199,     0,   200,     0,     0,     0,   203,   204,
     205,     0,   207,     0,   208,     0,   209,   210,     0,   211,
     212,   213,   214,   215,   216,     0,   218,   219,   220,   221,
       0,   222,   223,   224,   225,   226,   227,     0,   228,     0,
     230,   231,   232,   233,   234,   235,   236,     0,   237,     0,
     238,     0,     0,   241,     0,   243,   244,   245,   246,   247,
       0,     0,   248,     0,   250,     0,     0,   252,   253,   254,
       0,     0,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,     0,   280,   281,   282,
     283,   284,     0,   285,   286,     0,   288,     0,   289,   290,
     291,   292,   293,   294,     0,   295,   296,     0,     0,   297,
     298,   299,     0,     0,   300,   301,     0,   303,     0,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
       0,   316,   317,   318,   319,   320,   321,   322,   323,   324,
       0,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,     0,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,     0,   351,
     352,     0,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,     0,   369,   370,
     371,   372,   373,     0,   374,   375,   376,   377,   378,     0,
     380,   381,   382,   383,     0,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,     0,   397,
     398,     0,   399,     0,   401,   402,   403,   404,   405,     0,
     406,   407,     0,     0,   408,   409,   410,   411,   412,     0,
     413,   414,   415,   416,   417,   418,   419,     0,     0,   420,
     421,   422,   423,   424,     0,     0,   425,   426,   427,   428,
     429,   430,   431,     0,   432,     0,   434,   435,   436,   437,
       0,     0,   438,     0,     0,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   484,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    89,    90,    91,    92,    93,    94,    95,    96,
       0,    97,    98,    99,     0,     0,     0,     0,     0,     0,
       0,   100,   101,     0,   102,   103,   104,     0,   106,   107,
     108,   109,   110,     0,   112,   113,     0,   114,   115,   116,
     117,   118,   119,     0,     0,   120,   121,   122,   123,   124,
       0,   125,   126,   127,   128,   129,     0,     0,     0,   131,
     132,   133,   134,   135,     0,   137,   138,   139,     0,   140,
     141,   142,   143,   144,   145,     0,     0,   147,   148,   149,
       0,     0,     0,     0,     0,     0,     0,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,     0,   161,     0,
     162,   163,   164,   165,   166,   167,     0,   168,   169,   170,
     171,   172,     0,     0,   173,   174,   175,   176,   177,     0,
     178,   179,   180,     0,   181,   182,   183,     0,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,     0,   194,
       0,   195,   196,   197,   198,     0,   199,     0,   200,     0,
       0,     0,   203,   204,   205,     0,   207,     0,   208,     0,
     209,   210,     0,   211,   212,   213,   214,   215,   216,     0,
     218,   219,   220,   221,     0,   222,   223,   224,   225,   226,
     227,     0,   228,     0,   230,   231,   232,   233,   234,   235,
     236,     0,   237,     0,   238,     0,     0,   241,     0,   243,
     244,   245,   246,   247,     0,     0,   248,     0,   250,     0,
       0,   252,   253,   545,     0,     0,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
       0,   280,   281,   282,   283,   284,     0,   285,   286,     0,
     288,     0,   289,   290,   291,   292,   293,   294,     0,   295,
     296,     0,     0,   297,   298,   299,     0,     0,   300,   301,
       0,   303,     0,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,     0,   316,   317,   318,   319,   320,
     321,   322,   323,   324,     0,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,     0,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,     0,   351,   352,     0,   354,   355,   356,   357,
     358,   359,   360,   361,   546,   363,   364,   365,   366,   367,
     368,     0,   369,   370,   371,   372,   547,     0,   374,   375,
     376,   377,   378,     0,   380,   381,   382,   383,     0,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,     0,   397,   398,     0,   399,     0,   401,   402,
     403,   404,   405,     0,   548,   407,     0,     0,   408,   409,
     410,   411,   412,     0,   413,   414,   415,   416,   417,   418,
     419,     0,     0,   420,   421,   422,   423,   424,     0,     0,
     425,   426,   427,   428,   429,   430,   431,     0,   432,     0,
     434,   435,   436,   437,     0,     0,   438,     0,     0,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     484,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    89,    90,    91,    92,
      93,    94,    95,    96,     0,    97,    98,    99,     0,     0,
       0,     0,     0,     0,     0,   100,   101,     0,   102,   103,
     104,     0,   106,   107,   108,   109,   110,     0,   112,   113,
       0,   114,   115,   116,   117,   118,   119,     0,     0,   120,
     121,   122,   123,   124,     0,   125,   126,   127,   128,   129,
       0,     0,     0,   131,   132,   133,   134,   135,     0,   137,
     138,   139,     0,   140,   141,   142,   143,   144,   145,     0,
       0,   147,   148,   149,     0,     0,     0,     0,     0,     0,
       0,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,     0,   161,     0,   162,   163,   164,   165,   166,   167,
       0,   168,   169,   170,   171,   172,     0,     0,   173,   174,
     175,   176,   177,     0,   178,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,     0,   194,     0,   195,   196,   197,   198,     0,
     199,     0,   200,     0,     0,     0,   203,   204,   205,     0,
     207,     0,   208,     0,   209,   210,     0,   211,   212,   213,
     214,   215,   216,     0,   218,   219,   220,   221,     0,   222,
     223,   224,   225,   226,   227,     0,   228,     0,   230,   231,
     232,   233,   234,   235,   236,     0,   237,     0,   238,     0,
       0,   241,     0,   243,   244,   245,   246,   247,     0,     0,
     248,     0,   250,     0,     0,   252,   253,   254,     0,     0,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,     0,   280,   281,   282,   283,   284,
       0,   285,   286,     0,   288,     0,   289,   290,   291,   292,
     293,   294,     0,   295,   296,     0,     0,   297,   298,   299,
       0,     0,   300,   301,     0,   303,     0,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,     0,   316,
     317,   318,   319,   320,   321,   322,   323,   324,     0,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   561,   338,     0,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,     0,   351,   352,     0,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,     0,   369,   370,   371,   372,
     373,     0,   374,   375,   376,   377,   378,     0,   380,   381,
     382,   383,     0,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,     0,   397,   398,     0,
     399,     0,   401,   402,   403,   404,   405,     0,   406,   407,
       0,     0,   408,   409,   410,   411,   412,     0,   413,   414,
     415,   416,   417,   418,   419,     0,     0,   420,   421,   422,
     423,   424,     0,     0,   425,   426,   427,   428,   429,   430,
     431,     0,   432,     0,   434,   435,   436,   437,     0,     0,
     438,     0,     0,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   484,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      89,    90,    91,    92,    93,    94,    95,    96,     0,    97,
      98,    99,     0,     0,     0,     0,     0,     0,     0,   100,
     101,     0,   102,   103,   104,     0,   106,   107,   108,   109,
     110,     0,   112,   113,     0,   114,   115,   116,   117,   118,
     119,     0,     0,   120,   121,   122,   123,   124,     0,   125,
     126,   127,   128,   129,     0,     0,     0,   131,   132,   133,
     134,   135,     0,   137,   138,   139,     0,   140,   141,   142,
     143,   144,   145,     0,     0,   147,   148,   149,     0,     0,
       0,     0,     0,     0,     0,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,     0,   161,     0,   162,   163,
     164,   165,   166,   167,     0,   168,   169,   170,   171,   172,
       0,     0,   173,   174,   175,   176,   177,     0,   178,   179,
     180,     0,   181,   182,   183,     0,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,     0,   194,     0,   195,
     196,   197,   198,     0,   199,     0,   200,     0,     0,     0,
     203,   204,   205,     0,   207,     0,   208,     0,   209,   210,
       0,   211,   212,   213,   214,   215,   592,     0,   218,   219,
     220,   221,     0,   222,   223,   224,   225,   226,   227,     0,
     228,     0,   230,   231,   232,   233,   234,   235,   236,     0,
     237,     0,   238,     0,     0,   241,     0,   243,   244,   245,
     246,   247,     0,     0,   248,     0,   250,     0,     0,   252,
     253,   254,     0,     0,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,     0,   280,
     281,   282,   283,   284,     0,   285,   286,     0,   288,     0,
     289,   290,   291,   292,   293,   294,     0,   295,   296,     0,
       0,   297,   298,   299,     0,     0,   300,   301,     0,   303,
       0,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,     0,   316,   317,   318,   319,   320,   321,   322,
     323,   324,     0,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,     0,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
       0,   351,   352,     0,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,     0,
     369,   370,   371,   372,   373,     0,   374,   375,   376,   377,
     378,     0,   380,   381,   382,   383,     0,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
       0,   397,   398,     0,   399,     0,   401,   402,   403,   404,
     405,     0,   406,   407,     0,     0,   408,   409,   410,   411,
     412,     0,   413,   414,   415,   416,   417,   418,   419,     0,
       0,   420,   421,   422,   423,   424,     0,     0,   425,   426,
     427,   428,   429,   430,   431,     0,   432,     0,   434,   435,
     436,   437,     0,     0,   438,     0,     0,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   484,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    89,    90,    91,    92,    93,    94,
      95,    96,     0,    97,    98,    99,     0,     0,     0,     0,
       0,     0,     0,   100,   101,     0,   102,   103,   104,     0,
     106,   107,   108,   109,   110,     0,   112,   113,     0,   114,
     115,   116,   117,   118,   119,     0,     0,   120,   121,   122,
     123,   124,     0,   125,   126,   127,   128,   129,     0,     0,
       0,   131,   132,   133,   134,   135,     0,   137,   138,   139,
       0,   140,   141,   142,   143,   144,   145,     0,     0,   147,
     148,   149,     0,     0,     0,     0,     0,     0,     0,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,     0,
     161,     0,   162,   163,   164,   165,   166,   167,     0,   168,
     169,   170,   171,   172,     0,     0,   173,   174,   175,   176,
     177,     0,   178,   179,   180,     0,   181,   182,   183,     0,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
       0,   194,     0,   195,   196,   197,   198,     0,   199,     0,
     200,     0,     0,     0,   203,   204,   205,     0,   207,     0,
     208,     0,   209,   210,     0,   211,   212,   213,   214,   215,
     595,     0,   218,   219,   220,   221,     0,   222,   223,   224,
     225,   226,   227,     0,   228,     0,   230,   231,   232,   233,
     234,   235,   236,     0,   237,     0,   238,     0,     0,   241,
       0,   243,   244,   245,   246,   247,     0,     0,   248,     0,
     250,     0,     0,   252,   253,   254,     0,     0,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,     0,   280,   281,   282,   283,   284,     0,   285,
     286,     0,   288,     0,   289,   290,   291,   292,   293,   294,
       0,   295,   296,     0,     0,   297,   298,   299,     0,     0,
     300,   301,     0,   303,     0,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,     0,   316,   317,   318,
     319,   320,   321,   322,   323,   324,     0,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,     0,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,     0,   351,   352,     0,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,     0,   369,   370,   371,   372,   373,     0,
     374,   375,   376,   377,   378,     0,   380,   381,   382,   383,
       0,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,     0,   397,   398,     0,   399,     0,
     401,   402,   403,   404,   405,     0,   406,   407,     0,     0,
     408,   409,   410,   411,   412,     0,   413,   414,   415,   416,
     417,   418,   419,     0,     0,   420,   421,   422,   423,   424,
       0,     0,   425,   426,   427,   428,   429,   430,   431,     0,
     432,     0,   434,   435,   436,   437,     0,     0,   438,     0,
       0,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   484,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    89,    90,
      91,    92,    93,    94,    95,    96,     0,    97,    98,    99,
       0,     0,     0,     0,     0,     0,     0,   100,   101,     0,
     102,   103,   104,     0,   106,   107,   108,   109,   110,     0,
     112,   113,     0,   114,   115,   116,   117,   118,   119,     0,
       0,   120,   121,   122,   123,   124,     0,   125,   126,   127,
     128,   129,     0,     0,     0,   131,   132,   133,   134,   135,
       0,   137,   138,   139,     0,   140,   141,   142,   143,   144,
     145,     0,     0,   147,   148,   149,     0,     0,     0,     0,
       0,     0,     0,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,     0,   161,     0,   162,   163,   164,   165,
     166,   167,     0,   168,   169,   170,   171,   172,     0,     0,
     173,   174,   175,   176,   177,     0,   178,   179,   180,     0,
     181,   182,   183,     0,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,     0,   194,     0,   195,   196,   197,
     198,     0,   199,     0,   200,     0,     0,     0,   203,   204,
     205,     0,   207,     0,   208,     0,   209,   210,     0,   211,
     212,   213,   214,   215,   599,     0,   218,   219,   220,   221,
       0,   222,   223,   224,   225,   226,   227,     0,   228,     0,
     230,   231,   232,   233,   234,   235,   236,     0,   237,     0,
     238,     0,     0,   241,     0,   243,   244,   245,   246,   247,
       0,     0,   248,     0,   250,     0,     0,   252,   253,   254,
       0,     0,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,     0,   280,   281,   282,
     283,   284,     0,   285,   286,     0,   288,     0,   289,   290,
     291,   292,   293,   294,     0,   295,   296,     0,     0,   297,
     298,   299,     0,     0,   300,   301,     0,   303,     0,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
       0,   316,   317,   318,   319,   320,   321,   322,   323,   324,
       0,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,     0,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,     0,   351,
     352,     0,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,     0,   369,   370,
     371,   372,   373,     0,   374,   375,   376,   377,   378,     0,
     380,   381,   382,   383,     0,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,     0,   397,
     398,     0,   399,     0,   401,   402,   403,   404,   405,     0,
     406,   407,     0,     0,   408,   409,   410,   411,   412,     0,
     413,   414,   415,   416,   417,   418,   419,     0,     0,   420,
     421,   422,   423,   424,     0,     0,   425,   426,   427,   428,
     429,   430,   431,     0,   432,     0,   434,   435,   436,   437,
       0,     0,   438,     0,     0,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   484,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    89,    90,    91,    92,    93,    94,    95,    96,
       0,    97,    98,    99,     0,     0,     0,     0,     0,     0,
       0,   100,   101,     0,   102,   103,   104,     0,   106,   107,
     108,   109,   110,     0,   112,   113,     0,   114,   115,   116,
     117,   118,   119,     0,     0,   120,   121,   122,   123,   124,
       0,   125,   126,   127,   128,   129,     0,     0,     0,   131,
     132,   133,   134,   135,     0,   137,   138,   139,     0,   140,
     141,   142,   143,   144,   145,     0,     0,   147,   148,   149,
       0,     0,     0,     0,     0,     0,     0,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,     0,   161,     0,
     162,   163,   164,   165,   166,   167,     0,   168,   169,   170,
     171,   172,     0,     0,   173,   174,   175,   176,   177,     0,
     178,   179,   180,     0,   181,   182,   183,     0,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,     0,   194,
       0,   195,   196,   197,   198,     0,   199,     0,   200,     0,
       0,     0,   203,   204,   205,     0,   207,     0,   208,     0,
     209,   210,     0,   211,   212,   213,   214,   215,   617,     0,
     218,   219,   220,   221,     0,   222,   223,   224,   225,   226,
     227,     0,   228,     0,   230,   231,   232,   233,   234,   235,
     236,     0,   237,     0,   238,     0,     0,   241,     0,   243,
     244,   245,   246,   247,     0,     0,   248,     0,   250,     0,
       0,   252,   253,   254,     0,     0,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
       0,   280,   281,   282,   283,   284,     0,   285,   286,     0,
     288,     0,   289,   290,   291,   292,   293,   294,     0,   295,
     296,     0,     0,   297,   298,   299,     0,     0,   300,   301,
       0,   303,     0,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,     0,   316,   317,   318,   319,   320,
     321,   322,   323,   324,     0,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,     0,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,     0,   351,   352,     0,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,     0,   369,   370,   371,   372,   373,     0,   374,   375,
     376,   377,   378,     0,   380,   381,   382,   383,     0,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,     0,   397,   398,     0,   399,     0,   401,   402,
     403,   404,   405,     0,   406,   407,     0,     0,   408,   409,
     410,   411,   412,     0,   413,   414,   415,   416,   417,   418,
     419,     0,     0,   420,   421,   422,   423,   424,     0,     0,
     425,   426,   427,   428,   429,   430,   431,     0,   432,     0,
     434,   435,   436,   437,     0,     0,   438,     0,     0,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     484,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    89,    90,    91,    92,
      93,    94,    95,    96,     0,    97,    98,    99,     0,     0,
       0,     0,     0,     0,     0,   100,   101,     0,   102,   103,
     104,     0,   106,   107,   108,   109,   110,     0,   112,   113,
       0,   114,   115,   116,   117,   118,   119,     0,     0,   120,
     121,   122,   123,   124,     0,   125,   126,   127,   128,   129,
       0,     0,     0,   131,   132,   133,   134,   135,     0,   137,
     138,   139,     0,   140,   141,   142,   143,   144,   145,     0,
       0,   147,   148,   149,     0,     0,     0,     0,     0,     0,
       0,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,     0,   161,     0,   162,   163,   164,   165,   166,   167,
       0,   168,   169,   170,   171,   172,     0,     0,   173,   174,
     175,   176,   177,     0,   178,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,     0,   194,     0,   195,   196,   197,   198,     0,
     199,     0,   200,     0,     0,     0,   203,   204,   205,     0,
     207,     0,   208,     0,   209,   210,     0,   211,   212,   213,
     214,   215,   633,     0,   218,   219,   220,   221,     0,   222,
     223,   224,   225,   226,   227,     0,   228,     0,   230,   231,
     232,   233,   234,   235,   236,     0,   237,     0,   238,     0,
       0,   241,     0,   243,   244,   245,   246,   247,     0,     0,
     248,     0,   250,     0,     0,   252,   253,   254,     0,     0,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,     0,   280,   281,   282,   283,   284,
       0,   285,   286,     0,   288,     0,   289,   290,   291,   292,
     293,   294,     0,   295,   296,     0,     0,   297,   298,   299,
       0,     0,   300,   301,     0,   303,     0,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,     0,   316,
     317,   318,   319,   320,   321,   322,   323,   324,     0,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,     0,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,     0,   351,   352,     0,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,     0,   369,   370,   371,   372,
     373,     0,   374,   375,   376,   377,   378,     0,   380,   381,
     382,   383,     0,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,     0,   397,   398,     0,
     399,     0,   401,   402,   403,   404,   405,     0,   406,   407,
       0,     0,   408,   409,   410,   411,   412,     0,   413,   414,
     415,   416,   417,   418,   419,     0,     0,   420,   421,   422,
     423,   424,     0,     0,   425,   426,   427,   428,   429,   430,
     431,     0,   432,     0,   434,   435,   436,   437,     0,     0,
     438,     0,     0,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   484,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      89,    90,    91,    92,    93,    94,    95,    96,     0,    97,
      98,    99,     0,     0,     0,     0,     0,     0,     0,   100,
     101,     0,   102,   103,   104,     0,   106,   107,   108,   109,
     110,     0,   112,   113,     0,   114,   115,   116,   117,   118,
     119,     0,     0,   120,   121,   122,   123,   124,     0,   125,
     126,   127,   128,   129,     0,     0,     0,   131,   132,   133,
     134,   135,     0,   137,   138,   139,     0,   140,   141,   142,
     143,   144,   145,     0,     0,   147,   148,   149,     0,     0,
       0,     0,     0,     0,     0,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,     0,   161,     0,   162,   163,
     164,   165,   166,   167,     0,   168,   169,   170,   171,   172,
       0,     0,   173,   174,   175,   176,   177,     0,   178,   179,
     180,     0,   181,   182,   183,     0,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,     0,   194,     0,   195,
     196,   197,   198,     0,   199,     0,   200,     0,     0,     0,
     203,   204,   205,     0,   207,     0,   208,     0,   209,   210,
       0,   211,   212,   213,   214,   215,   637,     0,   218,   219,
     220,   221,     0,   222,   223,   224,   225,   226,   227,     0,
     228,     0,   230,   231,   232,   233,   234,   235,   236,     0,
     237,     0,   238,     0,     0,   241,     0,   243,   244,   245,
     246,   247,     0,     0,   248,     0,   250,     0,     0,   252,
     253,   254,     0,     0,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,     0,   280,
     281,   282,   283,   284,     0,   285,   286,     0,   288,     0,
     289,   290,   291,   292,   293,   294,     0,   295,   296,     0,
       0,   297,   298,   299,     0,     0,   300,   301,     0,   303,
       0,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,     0,   316,   317,   318,   319,   320,   321,   322,
     323,   324,     0,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,     0,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
       0,   351,   352,     0,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,     0,
     369,   370,   371,   372,   373,     0,   374,   375,   376,   377,
     378,     0,   380,   381,   382,   383,     0,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
       0,   397,   398,     0,   399,     0,   401,   402,   403,   404,
     405,     0,   406,   407,     0,     0,   408,   409,   410,   411,
     412,     0,   413,   414,   415,   416,   417,   418,   419,     0,
       0,   420,   421,   422,   423,   424,     0,     0,   425,   426,
     427,   428,   429,   430,   431,     0,   432,     0,   434,   435,
     436,   437,     0,     0,   438,     0,     0,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   484,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    89,    90,    91,    92,    93,    94,
      95,    96,     0,    97,    98,    99,     0,     0,     0,     0,
       0,     0,     0,   100,   101,     0,   102,   103,   104,     0,
     106,   107,   108,   109,   110,     0,   112,   113,     0,   114,
     115,   116,   117,   118,   119,     0,     0,   120,   121,   122,
     123,   124,     0,   125,   126,   127,   128,   129,     0,     0,
       0,   131,   132,   133,   134,   135,     0,   137,   138,   139,
       0,   140,   141,   142,   143,   144,   145,     0,     0,   147,
     148,   149,     0,     0,     0,     0,     0,     0,     0,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,     0,
     161,     0,   162,   163,   164,   165,   166,   167,     0,   168,
     169,   170,   171,   172,     0,     0,   173,   174,   175,   176,
     177,     0,   178,   179,   180,     0,   181,   182,   183,     0,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
       0,   194,     0,   195,   196,   197,   198,     0,   199,     0,
     200,     0,     0,     0,   203,   204,   205,     0,   207,     0,
     208,     0,   209,   210,     0,   211,   212,   213,   214,   215,
     640,     0,   218,   219,   220,   221,     0,   222,   223,   224,
     225,   226,   227,     0,   228,     0,   230,   231,   232,   233,
     234,   235,   236,     0,   237,     0,   238,     0,     0,   241,
       0,   243,   244,   245,   246,   247,     0,     0,   248,     0,
     250,     0,     0,   252,   253,   254,     0,     0,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,     0,   280,   281,   282,   283,   284,     0,   285,
     286,     0,   288,     0,   289,   290,   291,   292,   293,   294,
       0,   295,   296,     0,     0,   297,   298,   299,     0,     0,
     300,   301,     0,   303,     0,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,     0,   316,   317,   318,
     319,   320,   321,   322,   323,   324,     0,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,     0,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,     0,   351,   352,     0,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,     0,   369,   370,   371,   372,   373,     0,
     374,   375,   376,   377,   378,     0,   380,   381,   382,   383,
       0,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,     0,   397,   398,     0,   399,     0,
     401,   402,   403,   404,   405,     0,   406,   407,     0,     0,
     408,   409,   410,   411,   412,     0,   413,   414,   415,   416,
     417,   418,   419,     0,     0,   420,   421,   422,   423,   424,
       0,     0,   425,   426,   427,   428,   429,   430,   431,     0,
     432,     0,   434,   435,   436,   437,     0,     0,   438,     0,
       0,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   484,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    89,    90,
      91,    92,    93,    94,    95,    96,     0,    97,    98,    99,
       0,     0,     0,     0,     0,     0,     0,   100,   101,     0,
     102,   103,   104,     0,   106,   107,   108,   109,   110,     0,
     112,   113,     0,   114,   115,   116,   117,   118,   119,     0,
       0,   120,   121,   122,   123,   124,     0,   125,   126,   127,
     128,   129,     0,     0,     0,   131,   132,   133,   134,   135,
       0,   137,   138,   139,     0,   140,   141,   142,   143,   144,
     145,     0,     0,   147,   148,   149,     0,     0,     0,     0,
       0,     0,     0,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,     0,   161,     0,   162,   163,   164,   165,
     166,   167,     0,   168,   169,   170,   171,   172,     0,     0,
     173,   174,   175,   176,   177,     0,   178,   179,   180,     0,
     181,   182,   183,     0,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,     0,   194,     0,   195,   196,   197,
     198,     0,   199,     0,   200,     0,     0,     0,   203,   204,
     205,     0,   207,     0,   208,     0,   209,   210,     0,   211,
     212,   213,   214,   215,   216,     0,   218,   219,   220,   221,
       0,   222,   223,   224,   225,   226,   227,     0,   228,     0,
     230,   231,   232,   233,   234,   235,   236,     0,   237,     0,
     238,     0,     0,   241,     0,   243,   244,   245,   246,   247,
       0,     0,   248,     0,   250,     0,     0,   252,   253,   254,
       0,     0,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,     0,   280,   281,   282,
     283,   284,     0,   285,   286,     0,   288,     0,   289,   290,
     291,   292,   293,   294,     0,   295,   296,     0,     0,   297,
     298,   299,     0,     0,   300,   301,     0,   303,     0,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
       0,   316,   317,   318,   319,   320,   321,   322,   323,   324,
       0,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,     0,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,     0,   351,
     352,     0,   354,   355,   356,   357,   358,   359,   360,   361,
     546,   363,   364,   365,   366,   367,   368,     0,   369,   370,
     371,   372,   373,     0,   374,   375,   376,   377,   378,     0,
     380,   381,   382,   383,     0,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,     0,   397,
     398,     0,   399,     0,   401,   402,   403,   404,   405,     0,
     548,   407,     0,     0,   408,   409,   410,   411,   412,     0,
     413,   414,   415,   416,   417,   418,   419,     0,     0,   420,
     421,   422,   423,   424,     0,     0,   425,   426,   427,   428,
     429,   430,   431,     0,   432,     0,   434,   435,   436,   437,
       0,     0,   438,     0,     0,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   484,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    89,    90,    91,    92,    93,    94,    95,    96,
       0,    97,    98,    99,     0,     0,     0,     0,     0,     0,
       0,   100,   101,     0,   102,   103,   104,     0,   106,   107,
     108,   109,   110,     0,   112,   113,     0,   114,   115,   116,
     117,   118,   119,     0,     0,   120,   121,   122,   123,   124,
       0,   125,   126,   127,   128,   129,     0,     0,     0,   131,
     132,   133,   134,   135,     0,   137,   138,   139,     0,   140,
     141,   142,   143,   144,   145,     0,     0,   147,   148,   149,
       0,     0,     0,     0,     0,     0,     0,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,     0,   161,     0,
     162,   163,   164,   165,   166,   167,     0,   168,   169,   170,
     171,   172,     0,     0,   173,   174,   175,   176,   177,     0,
     178,   179,   180,     0,   181,   182,   183,     0,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,     0,   194,
       0,   195,   196,   197,   198,     0,   199,     0,   200,     0,
       0,     0,   203,   204,   205,     0,   207,     0,   208,     0,
     209,   210,     0,   211,   212,   213,   214,   215,   957,     0,
     218,   219,   220,   221,     0,   222,   223,   224,   225,   226,
     227,     0,   228,     0,   230,   231,   232,   233,   234,   235,
     236,     0,   237,     0,   238,     0,     0,   241,     0,   243,
     244,   245,   246,   247,     0,     0,   248,     0,   250,     0,
       0,   252,   253,   254,     0,     0,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
       0,   280,   281,   282,   283,   284,     0,   285,   286,     0,
     288,     0,   289,   290,   291,   292,   293,   294,     0,   295,
     296,     0,     0,   297,   298,   299,     0,     0,   300,   301,
       0,   303,     0,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,     0,   316,   317,   318,   319,   320,
     321,   322,   323,   324,     0,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,     0,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,     0,   351,   352,     0,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,     0,   369,   370,   371,   372,   373,     0,   374,   375,
     376,   377,   378,     0,   380,   381,   382,   383,     0,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,     0,   397,   398,     0,   399,     0,   401,   402,
     403,   404,   405,     0,   406,   407,     0,     0,   408,   409,
     410,   411,   412,     0,   413,   414,   415,   416,   417,   418,
     419,     0,     0,   420,   421,   422,   423,   424,     0,     0,
     425,   426,   427,   428,   429,   430,   431,     0,   432,     0,
     434,   435,   436,   437,     0,     0,   438,     0,     0,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     484,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    89,    90,    91,    92,
      93,    94,    95,    96,     0,    97,    98,    99,     0,     0,
       0,     0,     0,     0,     0,   100,   101,     0,   102,   103,
     104,     0,   106,   107,   108,   109,   110,     0,   112,   113,
       0,   114,   115,   116,   117,   118,   119,     0,     0,   120,
     121,   122,   123,   124,     0,   125,   126,   127,   128,   129,
       0,     0,     0,   131,   132,   133,   134,   135,     0,   137,
     138,   139,     0,   140,   141,   142,   143,   144,   145,     0,
       0,   147,   148,   149,     0,     0,     0,     0,     0,     0,
       0,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,     0,   161,     0,   162,   163,   164,   165,   166,   167,
       0,   168,   169,   170,   171,   172,     0,     0,   173,   174,
     175,   176,   177,     0,   178,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,     0,   194,     0,   195,   196,   197,   198,     0,
     199,     0,   200,     0,     0,     0,   203,   204,   205,     0,
     207,     0,   208,     0,   209,   210,     0,   211,   212,   213,
     214,   215,   959,     0,   218,   219,   220,   221,     0,   222,
     223,   224,   225,   226,   227,     0,   228,     0,   230,   231,
     232,   233,   234,   235,   236,     0,   237,     0,   238,     0,
       0,   241,     0,   243,   244,   245,   246,   247,     0,     0,
     248,     0,   250,     0,     0,   252,   253,   254,     0,     0,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,     0,   280,   281,   282,   283,   284,
       0,   285,   286,     0,   288,     0,   289,   290,   291,   292,
     293,   294,     0,   295,   296,     0,     0,   297,   298,   299,
       0,     0,   300,   301,     0,   303,     0,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,     0,   316,
     317,   318,   319,   320,   321,   322,   323,   324,     0,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,     0,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,     0,   351,   352,     0,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,     0,   369,   370,   371,   372,
     373,     0,   374,   375,   376,   377,   378,     0,   380,   381,
     382,   383,     0,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,     0,   397,   398,     0,
     399,     0,   401,   402,   403,   404,   405,     0,   406,   407,
       0,     0,   408,   409,   410,   411,   412,     0,   413,   414,
     415,   416,   417,   418,   419,     0,     0,   420,   421,   422,
     423,   424,     0,     0,   425,   426,   427,   428,   429,   430,
     431,     0,   432,     0,   434,   435,   436,   437,     0,     0,
     438,     0,     0,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   484,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      89,    90,    91,    92,    93,    94,    95,    96,     0,    97,
      98,    99,     0,     0,     0,     0,     0,  1178,     0,   100,
     101,     0,   102,   103,   104,     0,   106,   107,   108,   109,
     110,     0,   112,   113,     0,   114,   115,   116,   117,   118,
     119,     0,     0,   120,   121,   122,   123,   124,     0,   125,
     126,   127,   128,   129,     0,     0,     0,   131,   132,   133,
     134,   135,     0,   137,   138,   139,     0,   140,   141,   142,
     143,   144,   145,     0,     0,   147,   148,   149,     0,     0,
       0,     0,     0,     0,     0,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,     0,   161,     0,   162,   163,
     164,   165,   166,   167,     0,   168,   169,   170,   171,   172,
       0,     0,   173,   174,   175,   176,   177,     0,   178,   179,
     180,     0,   181,   182,   183,     0,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,     0,   194,     0,   195,
     196,   197,   198,     0,   199,     0,   200,     0,     0,     0,
     203,   204,   205,     0,   207,     0,   208,     0,   209,   210,
       0,   211,   212,   213,   214,   215,   216,     0,   218,   219,
     220,   221,     0,   222,   223,   224,   225,   226,   227,     0,
     228,     0,   230,   231,   232,   233,   234,   235,   236,     0,
     237,     0,   238,     0,     0,   241,     0,   243,   244,   245,
     246,   247,     0,     0,   248,     0,   250,     0,     0,   252,
     253,   254,     0,     0,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,     0,   280,
     281,   282,   283,   284,     0,   285,   286,     0,   288,     0,
     289,   290,   291,   292,   293,   294,     0,   295,   296,     0,
       0,   297,   298,   299,     0,     0,   300,   301,     0,   303,
       0,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,     0,   316,   317,   318,   319,   320,   321,   322,
     323,   324,     0,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,     0,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
       0,   351,   352,     0,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,     0,
     369,   370,   371,   372,   373,     0,     0,   375,   376,   377,
     378,     0,   380,   381,   382,   383,     0,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
       0,   397,   398,     0,   399,     0,   401,   402,   403,   404,
     405,     0,   406,   407,     0,     0,   408,   409,   410,   411,
     412,     0,   413,   414,   415,   416,   417,   418,   419,     0,
       0,   420,   421,   422,   423,   424,     0,     0,   425,   426,
     427,   428,   429,   430,   431,     0,   432,     0,   434,   435,
     436,   437,     0,     0,   438,     0,     0,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   484,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    89,    90,    91,    92,    93,    94,
      95,    96,     0,    97,    98,    99,     0,     0,     0,     0,
       0,     0,     0,   100,   101,     0,   102,   103,   104,     0,
     106,   107,   108,   109,   110,     0,   112,   113,     0,   114,
     115,   116,   117,   118,   119,     0,     0,   120,   121,   122,
     123,   124,     0,   125,   126,   127,   128,   129,     0,     0,
       0,   131,   132,   133,   134,   135,     0,   137,   138,   139,
       0,   140,   141,   142,   143,   144,   145,     0,     0,   147,
     148,   149,     0,     0,     0,     0,     0,     0,     0,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,     0,
     161,     0,   162,   163,   164,   165,   166,   167,     0,   168,
     169,   170,   171,   172,     0,     0,   173,   174,   175,   176,
     177,     0,   178,   179,   180,     0,   181,   182,   183,     0,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
       0,   194,     0,   195,   196,   197,   198,     0,   199,     0,
     200,     0,     0,     0,   203,   204,   205,     0,   207,     0,
     208,     0,   209,   210,     0,   211,   212,   213,   214,   215,
    1311,     0,   218,   219,   220,   221,     0,   222,   223,   224,
     225,   226,   227,     0,   228,     0,   230,   231,   232,   233,
     234,   235,   236,     0,   237,     0,   238,     0,     0,   241,
       0,   243,   244,   245,   246,   247,     0,     0,   248,     0,
     250,     0,     0,   252,   253,   254,     0,     0,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,     0,   280,   281,   282,   283,   284,     0,   285,
     286,     0,   288,     0,   289,   290,   291,   292,   293,   294,
       0,   295,   296,     0,     0,   297,   298,   299,     0,     0,
     300,   301,     0,   303,     0,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,     0,   316,   317,   318,
     319,   320,   321,   322,   323,   324,     0,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,     0,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,     0,   351,   352,     0,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,     0,   369,   370,   371,   372,   373,     0,
     374,   375,   376,   377,   378,     0,   380,   381,   382,   383,
       0,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,     0,   397,   398,     0,   399,     0,
     401,   402,   403,   404,   405,     0,   406,   407,     0,     0,
     408,   409,   410,   411,   412,     0,   413,   414,   415,   416,
     417,   418,   419,     0,     0,   420,   421,   422,   423,   424,
       0,     0,   425,   426,   427,   428,   429,   430,   431,     0,
     432,     0,   434,   435,   436,   437,     0,     0,   438,     0,
       0,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   484,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    89,    90,
      91,    92,    93,    94,    95,    96,     0,    97,    98,    99,
       0,     0,     0,     0,     0,     0,     0,   100,   101,     0,
     102,   103,   104,     0,   106,   107,   108,   109,   110,     0,
     112,   113,     0,   114,   115,   116,   117,   118,   119,     0,
       0,   120,   121,   122,   123,   124,     0,   125,   126,   127,
     128,   129,     0,     0,     0,   131,   132,   133,   134,   135,
       0,   137,   138,   139,     0,   140,   141,   142,   143,   144,
     145,     0,     0,   147,   148,   149,     0,     0,     0,     0,
       0,     0,     0,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,     0,   161,     0,   162,   163,   164,   165,
     166,   167,     0,   168,   169,   170,   171,   172,     0,     0,
     173,   174,   175,   176,   177,     0,   178,   179,   180,     0,
     181,   182,   183,     0,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,     0,   194,     0,   195,   196,   197,
     198,     0,   199,     0,   200,     0,     0,     0,   203,   204,
     205,     0,   207,     0,   208,     0,   209,   210,     0,   211,
     212,   213,   214,   215,  1324,     0,   218,   219,   220,   221,
       0,   222,   223,   224,   225,   226,   227,     0,   228,     0,
     230,   231,   232,   233,   234,   235,   236,     0,   237,     0,
     238,     0,     0,   241,     0,   243,   244,   245,   246,   247,
       0,     0,   248,     0,   250,     0,     0,   252,   253,   254,
       0,     0,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,     0,   280,   281,   282,
     283,   284,     0,   285,   286,     0,   288,     0,   289,   290,
     291,   292,   293,   294,     0,   295,   296,     0,     0,   297,
     298,   299,     0,     0,   300,   301,     0,   303,     0,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
       0,   316,   317,   318,   319,   320,   321,   322,   323,   324,
       0,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,     0,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,     0,   351,
     352,     0,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,     0,   369,   370,
     371,   372,   373,     0,   374,   375,   376,   377,   378,     0,
     380,   381,   382,   383,     0,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,     0,   397,
     398,     0,   399,     0,   401,   402,   403,   404,   405,     0,
     406,   407,     0,     0,   408,   409,   410,   411,   412,     0,
     413,   414,   415,   416,   417,   418,   419,     0,     0,   420,
     421,   422,   423,   424,     0,     0,   425,   426,   427,   428,
     429,   430,   431,     0,   432,     0,   434,   435,   436,   437,
       0,     0,   438,     0,     0,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   484,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    89,    90,    91,    92,    93,    94,    95,    96,
       0,    97,    98,    99,     0,     0,     0,     0,     0,     0,
       0,   100,   101,     0,   102,   103,   104,     0,   106,   107,
     108,   109,   110,     0,   112,   113,     0,   114,   115,   116,
     117,   118,   119,     0,     0,   120,   121,   122,   123,   124,
       0,   125,   126,   127,   128,   129,     0,     0,     0,   131,
     132,   133,   134,   135,     0,   137,   138,   139,     0,   140,
     141,   142,   143,   144,   145,     0,     0,   147,   148,   149,
       0,     0,     0,     0,     0,     0,     0,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,     0,   161,     0,
     162,   163,   164,   165,   166,   167,     0,   168,   169,   170,
     171,   172,     0,     0,   173,   174,   175,   176,   177,     0,
     178,   179,   180,     0,   181,   182,   183,     0,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,     0,   194,
       0,   195,   196,   197,   198,     0,   199,     0,   200,     0,
       0,     0,   203,   204,   205,     0,   207,     0,   208,     0,
     209,   210,     0,   211,   212,   213,   214,   215,  1592,     0,
     218,   219,   220,   221,     0,   222,   223,   224,   225,   226,
     227,     0,   228,     0,   230,   231,   232,   233,   234,   235,
     236,     0,   237,     0,   238,     0,     0,   241,     0,   243,
     244,   245,   246,   247,     0,     0,   248,     0,   250,     0,
       0,   252,   253,   254,     0,     0,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
       0,   280,   281,   282,   283,   284,     0,   285,   286,     0,
     288,     0,   289,   290,   291,   292,   293,   294,     0,   295,
     296,     0,     0,   297,   298,   299,     0,     0,   300,   301,
       0,   303,     0,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,     0,   316,   317,   318,   319,   320,
     321,   322,   323,   324,     0,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,     0,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,     0,   351,   352,     0,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,     0,   369,   370,   371,   372,   373,     0,   374,   375,
     376,   377,   378,     0,   380,   381,   382,   383,     0,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,     0,   397,   398,     0,   399,     0,   401,   402,
     403,   404,   405,     0,   406,   407,     0,     0,   408,   409,
     410,   411,   412,     0,   413,   414,   415,   416,   417,   418,
     419,     0,     0,   420,   421,   422,   423,   424,     0,     0,
     425,   426,   427,   428,   429,   430,   431,     0,   432,     0,
     434,   435,   436,   437,     0,     0,   438,     0,     0,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     484,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    89,    90,    91,    92,
      93,    94,    95,    96,     0,    97,    98,    99,     0,     0,
       0,     0,     0,     0,     0,   100,   101,     0,   102,   103,
     104,     0,   106,   107,   108,   109,   110,     0,   112,   113,
       0,   114,   115,   116,   117,   118,   119,     0,     0,   120,
     121,   122,   123,   124,     0,   125,   126,   127,   128,   129,
       0,     0,     0,   131,   132,   133,   134,   135,     0,   137,
     138,   139,     0,   140,   141,   142,   143,   144,   145,     0,
       0,   147,   148,   149,     0,     0,     0,     0,     0,     0,
       0,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,     0,   161,     0,   162,   163,   164,   165,   166,   167,
       0,   168,   169,   170,   171,   172,     0,     0,   173,   174,
     175,   176,   177,     0,   178,   179,   180,     0,   181,   182,
     183,     0,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,     0,   194,     0,   195,   196,   197,   198,     0,
     199,     0,   200,     0,     0,     0,   203,   204,   205,     0,
     207,     0,   208,     0,   209,   210,     0,   211,   212,   213,
     214,   215,  1604,     0,   218,   219,   220,   221,     0,   222,
     223,   224,   225,   226,   227,     0,   228,     0,   230,   231,
     232,   233,   234,   235,   236,     0,   237,     0,   238,     0,
       0,   241,     0,   243,   244,   245,   246,   247,     0,     0,
     248,     0,   250,     0,     0,   252,   253,   254,     0,     0,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,     0,   280,   281,   282,   283,   284,
       0,   285,   286,     0,   288,     0,   289,   290,   291,   292,
     293,   294,     0,   295,   296,     0,     0,   297,   298,   299,
       0,     0,   300,   301,     0,   303,     0,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,     0,   316,
     317,   318,   319,   320,   321,   322,   323,   324,     0,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,     0,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,     0,   351,   352,     0,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,     0,   369,   370,   371,   372,
     373,     0,   374,   375,   376,   377,   378,     0,   380,   381,
     382,   383,     0,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,     0,   397,   398,     0,
     399,     0,   401,   402,   403,   404,   405,     0,   406,   407,
       0,     0,   408,   409,   410,   411,   412,     0,   413,   414,
     415,   416,   417,   418,   419,     0,     0,   420,   421,   422,
     423,   424,     0,     0,   425,   426,   427,   428,   429,   430,
     431,     0,   432,     0,   434,   435,   436,   437,     0,     0,
     438,     0,     0,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   484,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      89,    90,    91,    92,    93,    94,    95,    96,     0,    97,
      98,    99,     0,     0,     0,     0,     0,     0,     0,   100,
     101,     0,   102,   103,   104,     0,   106,   107,   108,   109,
     110,     0,   112,   113,     0,   114,   115,   116,   117,   118,
     119,     0,     0,   120,   121,   122,   123,   124,     0,   125,
     126,   127,   128,   129,     0,     0,     0,   131,   132,   133,
     134,   135,     0,   137,   138,   139,     0,   140,   141,   142,
     143,   144,   145,     0,     0,   147,   148,   149,     0,     0,
       0,     0,     0,     0,     0,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,     0,   161,     0,   162,   163,
     164,   165,   166,   167,     0,   168,   169,   170,   171,   172,
       0,     0,   173,   174,   175,   176,   177,     0,   178,   179,
     180,     0,   181,   182,   183,     0,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,     0,   194,     0,   195,
     196,   197,   198,     0,   199,     0,   200,     0,     0,     0,
     203,   204,   205,     0,   207,     0,   208,     0,   209,   210,
       0,   211,   212,   213,   214,   215,  1606,     0,   218,   219,
     220,   221,     0,   222,   223,   224,   225,   226,   227,     0,
     228,     0,   230,   231,   232,   233,   234,   235,   236,     0,
     237,     0,   238,     0,     0,   241,     0,   243,   244,   245,
     246,   247,     0,     0,   248,     0,   250,     0,     0,   252,
     253,   254,     0,     0,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,     0,   280,
     281,   282,   283,   284,     0,   285,   286,     0,   288,     0,
     289,   290,   291,   292,   293,   294,     0,   295,   296,     0,
       0,   297,   298,   299,     0,     0,   300,   301,     0,   303,
       0,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,     0,   316,   317,   318,   319,   320,   321,   322,
     323,   324,     0,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,     0,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
       0,   351,   352,     0,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,     0,
     369,   370,   371,   372,   373,     0,   374,   375,   376,   377,
     378,     0,   380,   381,   382,   383,     0,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
       0,   397,   398,     0,   399,     0,   401,   402,   403,   404,
     405,     0,   406,   407,     0,     0,   408,   409,   410,   411,
     412,     0,   413,   414,   415,   416,   417,   418,   419,     0,
       0,   420,   421,   422,   423,   424,     0,     0,   425,   426,
     427,   428,   429,   430,   431,     0,   432,     0,   434,   435,
     436,   437,     0,     0,   438,     0,     0,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   484,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    89,    90,    91,    92,    93,    94,
      95,    96,     0,    97,    98,    99,     0,     0,     0,     0,
       0,     0,     0,   100,   101,     0,   102,   103,   104,     0,
     106,   107,   108,   109,   110,     0,   112,   113,     0,   114,
     115,   116,   117,   118,   119,     0,     0,   120,   121,   122,
     123,   124,     0,   125,   126,   127,   128,   129,     0,     0,
       0,   131,   132,   133,   134,   135,     0,   137,   138,   139,
       0,   140,   141,   142,   143,   144,   145,     0,     0,   147,
     148,   149,     0,     0,     0,     0,     0,     0,     0,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,     0,
     161,     0,   162,   163,   164,   165,   166,   167,     0,   168,
     169,   170,   171,   172,     0,     0,   173,   174,   175,   176,
     177,     0,   178,   179,   180,     0,   181,   182,   183,     0,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
       0,   194,     0,   195,   196,   197,   198,     0,   199,     0,
     200,     0,     0,     0,   203,   204,   205,     0,   207,     0,
     208,     0,   209,   210,     0,   211,   212,   213,   214,   215,
    2183,     0,   218,   219,   220,   221,     0,   222,   223,   224,
     225,   226,   227,     0,   228,     0,   230,   231,   232,   233,
     234,   235,   236,     0,   237,     0,   238,     0,     0,   241,
       0,   243,   244,   245,   246,   247,     0,     0,   248,     0,
     250,     0,     0,   252,   253,   254,     0,     0,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,     0,   280,   281,   282,   283,   284,     0,   285,
     286,     0,   288,     0,   289,   290,   291,   292,   293,   294,
       0,   295,   296,     0,     0,   297,   298,   299,     0,     0,
     300,   301,     0,   303,     0,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,     0,   316,   317,   318,
     319,   320,   321,   322,   323,   324,     0,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,     0,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,     0,   351,   352,     0,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,     0,   369,   370,   371,   372,   373,     0,
     374,   375,   376,   377,   378,     0,   380,   381,   382,   383,
       0,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,     0,   397,   398,     0,   399,     0,
     401,   402,   403,   404,   405,     0,   406,   407,     0,     0,
     408,   409,   410,   411,   412,     0,   413,   414,   415,   416,
     417,   418,   419,     0,     0,   420,   421,   422,   423,   424,
       0,     0,   425,   426,   427,   428,   429,   430,   431,     0,
     432,     0,   434,   435,   436,   437,     0,     0,   438,     0,
       0,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   484,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    89,    90,
      91,    92,    93,    94,    95,    96,     0,    97,    98,    99,
       0,     0,     0,     0,     0,     0,     0,   100,   101,     0,
     102,   103,   104,     0,   106,   107,   108,   109,   110,     0,
     112,   113,     0,   114,   115,   116,   117,   118,   119,     0,
       0,   120,   121,   122,   123,   124,     0,   125,   126,   127,
     128,   129,     0,     0,     0,   131,   132,   133,   134,   135,
       0,   137,   138,   139,     0,   140,   141,   142,   143,   144,
     145,     0,     0,   147,   148,   149,     0,     0,     0,     0,
       0,     0,     0,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,     0,   161,     0,   162,   163,   164,   165,
     166,   167,     0,   168,   169,   170,   171,   172,     0,     0,
     173,   174,   175,   176,   177,     0,   178,   179,   180,     0,
     181,   182,   183,     0,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,     0,   194,     0,   195,   196,   197,
     198,     0,   199,     0,   200,     0,     0,     0,   203,   204,
     205,     0,   207,     0,   208,     0,   209,   210,     0,   211,
     212,   213,   214,   215,   216,     0,   218,   219,   220,   221,
       0,   222,   223,   224,   225,   226,   227,     0,   228,     0,
     230,   231,   232,   233,   234,   235,   236,     0,   237,     0,
     238,     0,     0,   241,     0,   243,   244,   245,   246,   247,
       0,     0,   248,     0,   250,     0,     0,   252,   253,   254,
       0,     0,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,     0,   280,   281,   282,
     283,   284,     0,   285,   286,     0,   288,     0,   289,   290,
     291,   292,   293,   294,     0,   295,   296,     0,     0,   297,
     298,   299,     0,     0,   300,   301,     0,   303,     0,   305,
     306,   307,   308,   309,   310,   311,     0,   313,   314,   315,
       0,   316,   317,   318,   319,   320,   321,   322,   323,   324,
       0,   325,   326,   327,   328,   329,   330,   331,     0,   333,
     334,   335,   336,   337,   338,     0,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,     0,   351,
     352,     0,   354,   355,   356,   357,     0,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,     0,   369,   370,
     371,   372,   373,     0,   374,   375,   376,   377,   378,     0,
     380,   381,   382,   383,     0,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,     0,   397,
     398,     0,   399,     0,   401,   402,   403,   404,   405,     0,
     406,   407,     0,     0,   408,   409,   410,   411,   412,     0,
     413,   414,   415,   416,   417,   418,   419,     0,     0,   420,
     421,   422,   423,   424,     0,     0,   425,   426,   427,   428,
     429,   430,   431,     0,   432,     0,   434,   435,   436,   437,
       0,     0,   438,     0,     0,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,  1011,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    89,    90,    91,    92,    93,    94,    95,    96,
       0,    97,    98,    99,     0,     0,     0,     0,     0,     0,
       0,   100,   101,     0,   102,   103,   104,   105,   106,   107,
     108,     0,  1012,   111,  1013,  1014,     0,   114,   115,   116,
     117,   118,   119,     0,     0,   120,   121,  1015,  1016,   124,
       0,   125,   126,   127,   128,     0,     0,   130,     0,   131,
     132,   133,   134,   135,   136,   137,   138,   139,     0,   140,
     141,   142,   143,   144,   145,     0,   146,   147,   148,   149,
       0,     0,     0,   150,     0,     0,     0,   151,   152,   153,
     154,   155,   156,   157,  1017,  1018,   160,     0,   161,     0,
     162,   163,   164,   165,   166,   167,     0,   168,   169,   170,
     171,   172,     0,     0,   173,   174,   691,   176,   177,     0,
     178,   179,   180,     0,   181,   182,   183,     0,   184,   185,
     186,   187,     0,   189,   190,   191,   192,     0,     0,   194,
       0,   195,   196,  1019,   198,     0,   199,     0,   200,   201,
       0,   202,   203,   204,   205,   206,   207,     0,   208,     0,
       0,   210,     0,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,     0,   222,   223,   224,   225,   226,
     227,     0,   228,   229,     0,   231,   232,   233,   234,  1020,
    1021,     0,  1022,     0,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,     0,     0,   248,   249,   250,   251,
       0,   252,   253,   254,     0,     0,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,  1023,
     279,  1024,   281,   282,   283,     0,     0,   285,   286,   287,
     288,     0,     0,   290,  1025,   292,   293,   294,     0,   295,
     296,     0,     0,   297,   298,   299,     0,     0,   300,     0,
     302,   303,   304,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,     0,   316,   317,     0,   319,   320,
       0,   322,   323,   324,     0,   325,   326,   327,   328,   329,
     330,   331,   332,   333,  1026,   335,   336,   337,   338,     0,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,     0,   351,   352,   353,   354,   355,   356,     0,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,     0,   369,   370,   371,   372,   373,     0,   374,  1027,
     376,   377,   378,   379,   380,   381,  1028,   383,     0,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   397,   398,     0,   399,   400,   401,   402,
     403,   404,   405,     0,  1029,  1030,     0,     0,   408,   409,
       0,   411,     0,     0,   413,   414,   415,   416,   417,   418,
     419,     0,     0,   420,   421,   422,   423,   424,     0,     0,
     425,   426,   427,   428,   429,     0,  1031,     0,   432,   433,
     434,   435,   436,   437,     0,     0,   438,     0,     0,   439,
     440,   441,   442,   443,   444,  1011,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   456,   457,   458,   459,
       0,    89,    90,    91,    92,    93,    94,    95,    96,     0,
      97,    98,    99,     0,     0,     0,     0,     0,     0,     0,
     100,   101,     0,   102,   103,   104,   105,   106,   107,   108,
       0,  1012,   111,  1013,  1014,     0,   114,   115,   116,   117,
     118,   119,     0,     0,   120,   121,  1015,  1016,   124,     0,
     125,   126,   127,   128,     0,     0,   130,     0,   131,   132,
     133,   134,   135,   136,   137,   138,   139,     0,   140,   141,
     142,   143,   144,   145,     0,   146,   147,   148,   149,     0,
       0,     0,   150,     0,     0,     0,   151,   152,   153,   154,
     155,   156,   157,  1017,  1018,   160,     0,   161,     0,   162,
     163,   164,   165,   166,   167,     0,   168,   169,   170,   171,
     172,     0,     0,   173,   174,   691,   176,   177,     0,   178,
     179,   180,     0,   181,   182,   183,     0,   184,   185,   186,
     187,     0,   189,   190,   191,   192,     0,     0,   194,     0,
     195,   196,  1019,   198,     0,   199,     0,   200,   201,     0,
     202,   203,   204,   205,   206,   207,     0,   208,     0,     0,
     210,     0,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,     0,   222,   223,   224,   225,   226,   227,
       0,   228,   229,     0,   231,   232,   233,   234,  1020,  1021,
       0,  1022,     0,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,     0,     0,   248,   249,   250,   251,     0,
     252,   253,   254,     0,     0,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,  1023,   279,
    1024,   281,   282,   283,     0,     0,   285,   286,   287,   288,
       0,     0,   290,  1025,   292,   293,   294,     0,   295,   296,
       0,     0,   297,   298,   299,     0,     0,   300,     0,   302,
     303,   304,     0,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,     0,   316,   317,     0,   319,   320,     0,
     322,   323,   324,     0,   325,   326,   327,   328,   329,   330,
     331,   332,   333,  1026,   335,   336,   337,   338,     0,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,     0,   351,   352,   353,   354,   355,   356,     0,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
       0,   369,   370,   371,   372,   373,     0,   374,     0,   376,
     377,   378,   379,   380,   381,  1028,   383,     0,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
       0,     0,   397,   398,     0,   399,   400,   401,   402,   403,
     404,   405,     0,  1029,  1030,     0,     0,   408,   409,     0,
     411,     0,     0,   413,   414,   415,   416,   417,   418,   419,
       0,     0,   420,   421,   422,   423,   424,     0,     0,   425,
     426,   427,   428,   429,     0,  1031,     0,   432,   433,   434,
     435,   436,   437,     0,     0,   438,     0,     0,   439,   440,
     441,   442,   443,   444,     0,     0,   815,     0,     0,     0,
       0,     0,   816,     0,     0,   456,   457,   458,   459,   828,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   829,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   830,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   817,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   831,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   832,     0,     0,     0,     0,     0,
       0,     0,   833,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   834,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   818,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   835,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1623,     0,     0,     0,   820,
     837,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   838,     0,     0,     0,     0,     0,  1624,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   840,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   822
};

static const yytype_int16 yycheck[] =
{
       6,     6,   512,    33,   603,     0,   596,   651,   651,    55,
     560,   688,   689,   828,   511,   581,   611,     6,   815,   544,
       0,   842,   605,   840,   800,   556,  1045,  1533,    16,   706,
     727,   716,   516,     0,     0,   820,     0,   955,   955,   955,
     955,    28,   817,  1602,   854,   638,  1079,    57,  1608,    16,
    1610,  1919,   811,   985,  1871,  1491,  1943,     0,  1103,  1104,
    1068,  1951,  1553,  1068,  1803,   659,  1047,  1599,  1530,    32,
     845,    57,  1068,  1958,  1830,     5,  1068,    11,   518,     0,
      75,    58,  1544,   518,  1199,    50,     5,  1836,  1201,    92,
      58,  2187,   642,  1153,     5,     5,     5,  2190,    85,   167,
     596,     0,   598,     5,   600,     5,    82,   518,    40,  1107,
       5,    13,    14,    13,    14,     5,     5,  2193,   761,    73,
     977,    58,     5,   601,    13,    14,     9,     5,     9,   168,
       5,     9,   616,    40,     5,     5,  1668,   116,     3,     4,
       5,  2179,   523,    58,     9,   517,   106,    67,   119,   148,
     126,     4,    15,  2262,   210,  2328,     9,    11,   167,  1860,
    2357,     4,   578,    27,   276,   114,     9,   136,   603,     9,
      34,    92,   578,   300,   121,    11,   726,  1709,  1710,   278,
     216,   659,   660,  1835,  2239,   768,   829,    41,    27,   832,
     833,   216,   603,    92,   300,    34,    27,   728,    11,   144,
     284,    75,  1773,    34,   264,    41,   114,   168,  2448,   236,
     116,    85,  1027,   161,   284,     8,   651,     3,    11,    73,
      75,  2276,  2141,   658,   755,   261,   346,    59,  2513,   267,
      85,  1890,  1230,   204,    37,    67,   261,    73,    11,   157,
     651,   347,    22,   129,   164,    31,    32,   658,    41,   114,
    2571,  2412,  2573,   426,    11,   426,   447,   106,   852,   853,
     810,   119,   159,   208,   405,   445,   114,  2343,    41,  2596,
      30,   324,   782,   119,   484,   472,   134,   487,   469,   117,
      73,    75,   263,   655,   320,  2394,   337,   268,   485,   469,
    2285,    85,   858,   442,    54,    75,    64,    65,  2185,  2539,
      73,  2040,  2357,   117,  1963,  1081,   129,   448,  1744,   227,
     483,  2306,   483,   391,   365,  2064,    73,  2073,    27,   295,
     123,  2077,  2643,   220,   261,    27,   651,  2612,   763,   764,
    1889,  2658,   368,   658,   372,   296,   184,   318,   487,   284,
    1017,  1018,   291,   368,   209,  1030,   107,   425,  1025,   187,
     828,   478,   763,   764,  1886,   358,  1888,   278,   306,   358,
     268,   338,   268,   483,   424,   230,  1828,   962,  1830,   963,
     338,   483,   478,   187,   852,   853,   854,   263,   977,   278,
     166,  2300,   168,  1381,   483,   438,    11,   273,   424,   392,
    2630,   311,   808,   392,   403,   422,   777,  2594,   230,   424,
      11,   338,   808,   487,  1003,  2578,  2567,  2445,  2109,   358,
     371,  2063,   261,  1189,   739,   263,    41,   487,   339,   487,
     129,   397,  2477,   338,  1221,   167,   289,   129,   365,   432,
    2001,   487,   392,   432,   677,   678,   761,  2432,   763,   764,
     339,  1973,   445,   392,   483,  2554,   445,  2540,    73,   428,
     273,  1566,   310,   424,  1567,  2510,   483,   389,  1491,   702,
    2328,  1318,   107,   382,   383,  2541,   469,  1277,  1051,   979,
     469,   483,   441,   418,   469,   972,  2215,   146,   975,   426,
     483,  1302,   389,   432,   483,   963,   983,   280,   518,   469,
    1535,  2240,  2588,  2249,   484,  1555,   445,   487,  2254,   419,
    1050,  2257,   469,   469,   829,   469,     5,   832,   833,  1059,
     487,   375,   518,  1063,  1113,  1098,  1099,   159,   483,   487,
     469,  1525,  1526,   192,   445,   435,     0,   481,  1561,   403,
     518,   485,  1082,  1083,   483,   581,   375,   543,   544,  2594,
    1350,   487,   977,   105,   375,   479,   445,   987,   403,  1027,
     517,   481,   987,   483,   560,   485,  1150,   447,   568,  2118,
    2447,  2451,  1543,   484,  1095,   486,   977,  2452,  1003,  1152,
     558,  2131,   483,   483,   483,   570,   987,   447,   424,   469,
     472,   483,   568,   483,   436,   484,   573,   486,   483,   236,
     570,   483,  1003,   483,   483,   601,   602,   603,   561,   469,
     483,   482,   445,   570,   570,   483,   570,  1250,   483,   474,
     475,  2073,   483,   483,   986,  2077,  2107,  1260,   260,  1116,
    1263,   474,   475,   157,  2363,   479,   469,   570,    23,  1107,
     486,   474,   475,  2389,   474,   475,   642,   334,   447,  1238,
     476,   477,   478,   479,   194,   651,     4,   247,   248,  2181,
     436,     9,   658,   659,   660,   483,  1246,  1433,  1434,  2546,
     469,   403,  1438,   476,   477,   478,   479,   992,   993,   675,
     408,     4,  1150,   319,   483,  2111,     9,   242,  1113,   241,
    1678,   474,   475,   476,   477,   478,   479,   249,   655,   438,
       4,  1335,  1335,   227,   173,     9,   726,   703,  1474,  1475,
      48,   347,  1113,  1746,   351,   236,  1383,  1273,  1274,  1275,
    2578,  1744,  1720,  1721,  1722,  1720,   722,   723,   724,  1318,
     726,   354,  1315,  1219,  1720,  1721,  1319,  1719,  2287,  1322,
     472,  1774,    75,  1731,    13,    14,  1061,  1062,  1670,   134,
     746,   275,    85,   485,  1069,  1790,  1071,  1072,   483,   194,
    1246,   230,  1230,  1751,    19,   355,   356,   763,   764,  1256,
    1457,  1086,     4,  1088,  1261,   148,   447,     9,   484,  1265,
    2657,   487,  1015,  1016,  1270,   422,  1101,  2239,  1537,   168,
     483,  1024,  1780,   793,   794,   485,   796,  2249,   469,   795,
     182,   183,  2254,   799,   800,  2257,  2613,  2614,   466,  1277,
     787,  1236,   483,  1238,   810,  1626,   214,   793,   794,  1293,
     796,   200,    13,    14,  2276,  1819,  1820,  1821,  1822,   236,
     351,   396,   828,   398,   172,  1236,   215,  1238,    23,   481,
    1073,  1074,   466,   485,    29,   224,   483,  1387,   186,  1649,
     157,    31,    32,   191,  2661,   162,   852,   853,   854,   474,
     475,   476,   477,   478,   479,   247,   248,   844,  2417,  1634,
    1557,   476,  2422,   474,   475,   476,   477,   478,   479,   278,
     478,   358,  1350,  1198,  1199,   483,   157,   485,   226,   166,
     481,   162,   483,  1318,   485,   484,  1919,   282,   487,   484,
       8,   422,   487,    11,  1679,  2357,   129,    15,   487,  1684,
    1335,  1451,    92,  1381,   478,   392,   351,  1318,   484,   483,
     227,   485,   484,  1348,   359,   487,   116,   396,   396,   398,
     398,  1919,   155,    41,  1335,  1250,   483,  2389,   485,  1479,
      48,   236,   484,   484,   351,  1260,   487,  1348,  1263,   134,
     483,   336,   337,   422,  1340,   432,   227,   392,  1344,   445,
    1346,   447,   483,   342,   236,    73,   210,   963,   275,  1450,
     167,  1452,  1453,   355,   356,   484,  1532,    54,   487,  1519,
     365,   977,   483,   483,   485,   358,  1752,  1753,  1754,  1755,
     466,   987,  1758,  1759,  1760,  1761,  1762,  1763,  1764,  1765,
    1766,  1767,     8,   438,   275,    11,   483,  1003,   198,   987,
      16,    17,    18,  2509,   484,   422,   214,   487,   484,   392,
    1335,   487,  1605,   484,  1607,  2477,   487,   484,   149,   986,
     487,  1027,   370,  1348,   142,   129,  1944,  1944,  1944,  1944,
     263,  1807,  1808,   484,  1966,   268,   487,    23,   484,   236,
     273,   487,   332,    29,  1050,  1370,   351,   149,  2510,   432,
    1056,   155,  1047,  1059,   172,   484,  1700,  1063,   487,    27,
     149,   261,   445,   263,   355,   356,   483,  1047,   186,   351,
    1665,  1077,   149,   191,  1080,  1081,  1082,  1083,  2111,  1900,
    1047,  1047,  1899,  1047,  1090,  1091,   469,   282,  2647,  2595,
    1887,   484,  2082,  1778,  1779,  2085,  1102,   346,   347,  1698,
     483,  1107,  1108,  1109,  1110,  1111,  1112,  1113,   226,  2615,
      78,  1117,  1118,  1898,   483,  1900,  1122,   422,    86,    67,
    1126,  1938,   263,  1129,  1130,  1131,  1132,  1133,  1134,  1135,
    1136,  1137,  2594,   358,  1140,   346,   347,   660,  1144,   438,
     422,   336,  1148,   396,  1150,   398,  2165,   115,   134,     8,
     484,  2149,    11,   487,   351,   483,    15,    16,    17,    18,
      81,  1858,   280,  2669,   268,  1171,   114,   392,   358,   273,
     365,  1649,     0,  1608,  1609,  1610,   484,   410,   483,   487,
    1168,  1176,    41,  1189,   396,   449,   398,   420,    16,    48,
     149,   484,  1198,  1199,   487,   278,  1693,  1608,  1609,  1610,
    1678,   483,   392,   149,  1787,    33,   149,   432,   484,  1534,
     324,   487,   484,   392,    73,   487,   184,  2078,   484,  2080,
     445,   487,    23,   171,  1230,   422,   485,   195,    29,    57,
    1236,   324,  1238,   484,   429,  1785,   487,   575,   761,   577,
    1565,  1566,   432,   483,   469,   359,   436,    75,   484,   346,
     347,   487,   370,  1731,   144,   445,   484,   484,   483,   487,
     487,   526,   527,  1698,   280,  1700,   359,   157,   545,    36,
     547,  1277,   162,  1751,  1280,  1281,  1919,  1283,   392,   469,
     484,   546,   484,   487,  1867,   487,   483,  1698,   484,  1700,
     225,   487,   483,   483,     5,  2328,   282,   484,   484,   392,
     487,   487,  1780,     5,  1310,   828,   410,  2326,   483,  1840,
     483,  1306,  1318,   172,   484,   263,   420,   487,   208,  1918,
     268,  1920,  2119,   162,   438,  1803,  2147,   186,   484,  1335,
    2328,   487,   191,   134,   307,   484,   484,   227,   487,   487,
     483,  2156,  1348,   173,  1350,   438,   332,     5,   484,   467,
     336,   487,   484,   212,   213,   487,   474,   475,   476,   477,
     478,   479,   484,   311,   194,   487,   483,   226,  1934,   346,
     347,    23,  1965,   484,   483,  1381,   487,    29,   326,   365,
     483,  1387,  1388,   251,   252,   275,   651,  1393,   763,   764,
      93,  1716,  1717,   658,   284,  2393,   484,     5,  2396,   487,
     230,   483,     5,   484,    11,  1435,   487,   266,    15,   484,
     483,   483,   487,   381,    21,   484,   384,     5,   487,   484,
       8,   280,   487,   483,    31,    32,    14,  1433,  1434,  1435,
     484,   484,  1438,   487,   487,    23,  2212,   483,   483,    27,
     483,  1919,     5,   429,  1450,  1451,  1452,  1453,   483,  1479,
     483,   483,  1458,   283,   470,   471,   472,   483,   474,   475,
     476,   477,   478,   479,   729,   168,   446,   210,  1474,  1475,
     487,   419,    96,  1479,   739,    36,    83,   365,   162,  1914,
     275,   282,   134,  1918,   162,  1920,   751,  1493,   273,   225,
    1496,   483,  1498,   403,   483,  2138,   761,   200,   763,   764,
      85,   403,   487,  1914,  1027,    54,  2089,  1918,    54,  1920,
     403,   370,   215,  1519,   254,   484,   403,  2334,  1548,   489,
    2103,   224,  2298,   403,  1530,  1530,   445,   149,   418,   263,
      92,   332,   263,   483,    36,   336,    36,   435,  1544,  1544,
     485,  1530,   483,   487,   483,  2578,    35,   483,  1543,   441,
     483,     9,  1558,   401,   257,  1544,     6,  2150,  2151,  2203,
     401,    11,  2040,  1543,   365,    15,   396,  1573,   398,    11,
      20,    21,    22,  2098,   487,    25,  1543,  1543,    28,  1543,
    2578,    31,    32,   401,  1107,  1591,  2362,     8,   483,   419,
      11,   268,   422,   403,  1919,    16,    17,    18,   483,   176,
     158,   167,  1608,  1609,  1610,   484,   483,   426,   467,    36,
     208,   470,   471,   472,   487,   474,   475,   476,   477,   478,
     479,   368,   216,   279,   487,    75,   483,   216,   429,   263,
     282,   284,    82,    83,    84,    85,    86,   216,   484,   342,
     316,   469,   438,  1649,   276,   483,   149,   445,   149,   263,
    2327,   278,   278,   263,  1979,    36,    36,    35,   403,   481,
      23,   481,     8,   484,   403,    11,    29,   484,   403,    15,
     403,  2149,  1678,   169,   167,   484,   484,   173,  2156,   484,
     332,   484,   484,   487,   336,  2328,   485,   484,   466,   517,
     518,   484,  1698,   484,  1700,    41,  2131,   466,   194,   167,
     484,  1696,    48,   484,   484,   484,   660,  1230,   466,   483,
     403,   483,   483,   365,   288,   483,   442,   442,   432,   278,
    2131,   472,  1728,   279,   468,  1731,   279,    73,   279,   424,
     487,   235,  1738,   403,   230,   263,  1742,  2215,   149,  1745,
     568,   237,   570,   194,   282,  1751,  1752,  1753,  1754,  1755,
     149,   483,  1758,  1759,  1760,  1761,  1762,  1763,  1764,  1765,
    1766,  1767,   149,  2440,   403,  1771,  1772,   403,  2203,  1815,
     191,   134,   403,   403,  1780,   484,    23,   429,    23,  1785,
     484,   482,    29,  1813,    29,  1791,   484,   283,  1794,   149,
    1796,   212,  2203,   484,   276,   487,   142,  1803,  1804,  2296,
    1830,  1807,  1808,  1068,   291,  2371,  1812,  1813,  2629,   278,
     445,    36,   149,  2138,   268,   481,   484,   140,  2143,  2418,
     167,    11,  1828,  1828,  1830,  1830,   172,   655,   162,   484,
     484,   167,  2157,  2158,   484,  1841,   483,   660,  2433,  1828,
     186,  1830,   484,   442,  1850,   191,   167,  2397,   392,   487,
    2328,   469,   176,   660,   339,   351,   484,   279,  1381,   280,
    1866,   484,   431,   484,   692,    83,  2376,    93,   483,   149,
     483,   358,   171,   413,   828,    36,    79,   483,   483,   486,
     226,   426,   482,   487,  2394,  2363,   482,   134,   167,   134,
     215,   484,   483,  1158,   484,   394,   287,   484,   726,   483,
     396,   484,   398,   483,   215,   392,   513,   660,  1914,   285,
     483,    54,  1918,  1919,  1920,  2393,   179,   472,  2396,   282,
     445,  2516,   196,   419,  2474,   185,   422,   268,   268,   472,
     403,   403,   484,    36,   280,  2578,   263,   106,   445,   278,
      36,  2438,   168,   167,   483,   432,   483,   482,   297,   483,
     483,   215,   483,   444,   561,    85,   130,   484,   445,   326,
     483,   483,   216,   114,    36,   793,   794,  1962,   796,   332,
     149,    73,   121,   336,   200,    36,   149,   347,  2577,   484,
    2490,   347,   469,  2418,    54,    36,  1992,  2422,   483,   215,
     487,   483,   426,  2583,  2319,  2320,   483,   483,   224,   431,
      36,    36,   365,  2328,    73,   828,   184,  2418,   426,   413,
      67,  2422,   281,    67,  2511,    36,   483,   487,   349,    55,
     470,   828,   365,   472,   370,   268,   476,   184,  2034,  2035,
     239,   257,   482,  2039,  2040,   282,   486,   282,  2044,   483,
     413,  2047,  2048,    82,    36,    84,  2052,    86,   483,   470,
     471,   472,   278,   474,   475,   476,   477,   478,   479,   281,
     281,   511,   512,   513,   483,   261,   429,  2073,  2073,   105,
    1335,  2077,  2077,  1027,  1339,   828,   484,   484,   483,   278,
     346,     9,   333,  1348,  2073,   332,   196,   332,  2077,   336,
     278,   336,  2098,   278,    33,   545,   484,   547,   483,     8,
    2578,   119,    11,   553,   424,  2100,  2101,    16,    17,    18,
       9,   561,    22,   484,   570,  1244,   342,  1901,   365,  1914,
     365,   467,  1603,   573,    33,  2131,  2510,  2102,   474,   475,
     476,   477,   478,   479,  2140,   585,  1864,  2272,  2574,  1947,
    2425,  2143,  2577,  2149,  2650,  2628,  2580,  2616,   815,  2345,
    2156,  1609,  1952,  1107,  1597,  1678,  2577,   193,   986,  1659,
    2626,  1594,  1918,  2575,  1941,  1663,  2577,  1558,  1698,  2203,
     620,   621,   622,  1215,   781,   756,  2487,   802,     8,   781,
     972,    11,   429,   803,   429,   660,    16,    17,    18,  2405,
    2565,  1573,  1189,  2188,  1844,  2499,  2094,  2203,  1544,  1214,
     426,  1830,  2064,    33,  1027,   241,  2212,  2079,  1731,  2215,
     805,  2390,  1828,   249,   664,  2477,  2476,  2223,  2224,  1047,
    1027,  2227,  2494,  1351,  2495,   261,  1068,  2268,  1751,  2563,
    2550,  1068,  1068,  2239,  2239,  1068,  2564,     8,  1145,  1561,
      11,  1497,  1389,  2249,  2249,    16,    17,    18,  2254,  2254,
    2239,  2257,  2257,  2578,  1283,  1494,   292,  1780,  2264,  2265,
    2249,  1666,    33,  2469,  1148,  2254,   987,  1168,  2257,     8,
    2276,  2276,  2278,   787,  1027,  1865,  1230,    16,    17,    18,
    1803,  1348,    -1,  1169,  1107,    -1,    -1,  2276,    -1,    -1,
      -1,  1119,  2298,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1107,   337,    -1,   212,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   765,    -1,    -1,    -1,    -1,
      -1,    -1,  2328,   359,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   781,   782,    -1,    -1,    -1,    -1,   787,   788,   789,
      -1,    -1,  2337,   379,    -1,    -1,    -1,    -1,  1176,  1614,
      -1,  2357,  2357,   828,  1107,    -1,  2362,  2363,    -1,    -1,
      -1,    -1,    -1,  2358,   814,   815,    -1,  2397,  2357,    50,
      -1,   280,    -1,   980,    -1,   982,    -1,   827,    -1,  2385,
      -1,    -1,   212,  2389,  2389,    -1,    -1,  2393,    -1,    -1,
    2396,  2397,  1657,    -1,   844,    -1,  1919,    -1,   848,    -1,
    2389,    -1,  2408,    -1,    -1,    -1,    -1,  1230,    -1,    -1,
      -1,    -1,  2418,    94,    -1,    -1,  2422,  2423,    -1,    -1,
      -1,    -1,    -1,  1230,    -1,    -1,    -1,  1381,    -1,    -1,
      -1,   470,    -1,    -1,    -1,  1700,    -1,    -1,    -1,   120,
    1705,   212,  1707,   482,    -1,    -1,  1711,  1712,   484,    -1,
     280,    -1,    -1,    -1,    -1,  2450,    -1,   138,    -1,    -1,
      -1,   142,    -1,    -1,    -1,    -1,    -1,    -1,  2474,    -1,
      -1,  2477,  2477,   144,    -1,    -1,    -1,  1230,  1306,    -1,
      -1,    -1,   163,    -1,    -1,   166,   157,    -1,  2477,    -1,
      -1,   162,    -1,  2499,    -1,    -1,    -1,    -1,    -1,   180,
      -1,   951,    -1,    -1,  2510,  2510,   956,    -1,    -1,   280,
      -1,  2506,    -1,    -1,   553,    -1,   966,  2040,    -1,    -1,
      -1,  2510,   972,    -1,  2530,   975,    -1,    -1,    -1,   979,
     980,    -1,   982,   983,    -1,   985,    -1,   208,    -1,    -1,
      -1,   280,    -1,  2549,  2550,    -1,   585,    -1,    -1,    -1,
      -1,    -1,  1027,    -1,    -1,    -1,   227,    -1,  1381,  1433,
    1434,   470,   471,   472,  1438,   474,   475,   476,   477,   478,
     479,  2577,  2578,    -1,  1381,    -1,    -1,    -1,    -1,    -1,
      -1,   620,   621,   622,    -1,    -1,    -1,   268,  2594,  2594,
    2596,    -1,  2587,    -1,    -1,   276,    -1,    -1,    -1,    -1,
    1474,  1475,    -1,    -1,   275,  2594,    -1,  1435,    -1,    -1,
      -1,    -1,    -1,   284,    -1,  1222,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1232,  2149,  1234,  1381,  1079,
    1237,    -1,  1107,  2156,    -1,    -1,  1243,   318,  1245,    -1,
     470,   471,   472,    -1,   474,   475,   476,   477,   478,   479,
    1257,  1479,  2658,    -1,  1919,  1262,    -1,    -1,    -1,  1266,
    1267,  1268,  1269,    -1,  1271,  1272,  1116,    -1,    -1,  1497,
      -1,    -1,    -1,    -1,    -1,    -1,  1941,    -1,    -1,    -1,
      -1,    23,    -1,    -1,    -1,  1513,    -1,    29,    -1,    -1,
      -1,    -1,  2215,    -1,    36,    -1,    -1,  1147,    -1,   470,
     471,   472,  1530,   474,   475,   476,   477,   478,   479,    -1,
      -1,    -1,    -1,    55,    -1,  1543,  1544,  1167,    -1,  1169,
    1548,    -1,    -1,    -1,  1678,    -1,   765,    -1,  1178,    -1,
    1180,   470,   471,   472,    -1,   474,   475,   476,   477,   478,
     479,    -1,    -1,    -1,    -1,    -1,    -1,   418,    -1,   788,
      -1,    -1,    -1,    -1,    -1,  1230,     0,    -1,    -1,    -1,
      -1,    -1,  1212,   105,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1221,  1222,    -1,    -1,   814,    -1,  1731,    -1,    -1,
     660,    -1,  1232,  1233,  1234,  1235,    -1,  1237,   827,    -1,
      -1,    -1,   134,  1243,    -1,  1245,     8,  1751,    -1,    11,
      -1,    -1,    -1,    15,    -1,  2328,  1256,  1257,    -1,   848,
     481,  1261,  1262,   484,   485,    -1,  1266,  1267,  1268,  1269,
      -1,  1271,  1272,    -1,    -1,    67,  1780,    -1,  2093,    41,
    2095,    73,    -1,    -1,    -1,    -1,    48,    -1,    -1,    -1,
    2363,  1291,  1292,    85,    -1,    -1,    -1,    -1,    92,  1803,
      -1,   193,    -1,    -1,  1304,  1678,    -1,    -1,    -1,    -1,
      -1,    73,    -1,    -1,    -1,    -1,    -1,    -1,  1696,    -1,
    2393,  1678,   114,  2396,   116,    -1,    -1,    -1,  1752,  1753,
    1754,  1755,    -1,    -1,  1758,  1759,  1760,  1761,  1762,  1763,
    1764,  1765,  1766,  1767,    -1,     8,    -1,    -1,    11,   241,
     144,    -1,    -1,    16,    17,    18,  1381,   249,  1731,     0,
      -1,    -1,    -1,   157,    -1,    -1,    -1,   956,   162,   261,
      33,    -1,    -1,   167,  1731,  1678,    -1,    -1,  1751,   171,
     142,    -1,   176,  1807,  1808,   179,    -1,    -1,  2203,    -1,
     282,    -1,    -1,    -1,  1751,    -1,   985,    -1,   828,    -1,
     292,    -1,    -1,    -1,    -1,    -1,   198,  1780,    -1,    -1,
     172,    -1,    -1,    -1,   208,  1919,    -1,    36,    -1,    -1,
      -1,    -1,    -1,  1780,   186,    -1,    -1,    -1,  1731,   191,
    1803,    -1,    -1,   227,    -1,  1813,    55,    -1,    -1,    -1,
     332,    -1,    -1,    -1,   336,   337,  1803,    -1,  1751,    -1,
    1828,    92,  1830,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   226,    -1,    -1,   359,    -1,    -1,
      -1,   263,    -1,   365,    -1,    -1,   268,  1780,    -1,    -1,
      -1,   275,    -1,    -1,   278,    -1,   105,   379,    -1,    -1,
     284,  1491,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1803,    -1,    -1,   144,    -1,  2578,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2328,    -1,    -1,   157,    -1,   280,   311,
      -1,   162,    -1,  1523,    -1,  1682,   167,    -1,    -1,    -1,
    1530,    -1,    -1,    -1,   326,   176,  2040,   429,   179,    -1,
      -1,    -1,    -1,    -1,  1544,   339,  1919,    -1,  1548,   212,
      -1,  1551,   171,  1553,    -1,    -1,    -1,    -1,  1147,    -1,
      -1,    -1,  1919,    -1,    -1,    -1,    -1,   208,    -1,    -1,
      -1,    -1,    -1,    -1,   193,    -1,    -1,    -1,  1167,    -1,
    1169,    -1,    -1,    -1,  1962,    -1,   227,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1027,   392,  1599,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   370,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1919,   280,    -1,    -1,
      -1,    -1,   241,  1212,   418,    -1,    -1,   419,    -1,    -1,
     249,  2446,   426,    -1,   275,    -1,    -1,   278,    -1,    -1,
      -1,    -1,   261,   284,    -1,  2149,     8,    -1,   442,    11,
     444,   445,  2156,  1678,    16,    17,    18,    -1,    -1,  1659,
      -1,    -1,    -1,    -1,  1664,    -1,    -1,  2040,  1668,  1669,
    1670,  1671,    -1,   292,    -1,    -1,    -1,  1107,    -1,    -1,
      -1,    -1,  1682,  2040,    -1,    -1,    -1,   481,    -1,  1689,
     484,   485,   486,  1693,    -1,  2073,    -1,    -1,   339,  2077,
      -1,    -1,  1291,    -1,    -1,   467,  1731,    -1,    -1,  1709,
    1710,  2215,   474,   475,   476,   477,   478,   479,   337,    -1,
      -1,    -1,  2100,  2101,    -1,  1882,  1751,    -1,    36,    -1,
      -1,    -1,    -1,     8,    -1,    -1,    11,  2040,    -1,    -1,
     359,    16,    17,    18,  1744,    -1,    -1,    55,    -1,  1906,
      -1,   392,    -1,    -1,    -1,  1780,    -1,    -1,    -1,    -1,
     379,    -1,    -1,  2578,  1921,  1922,  1923,  1924,  1925,  1926,
    1927,  1928,  1929,  1930,    -1,    -1,  2149,   418,  1803,    -1,
      -1,    -1,    -1,  2156,    -1,   426,    -1,    -1,  2212,    -1,
      -1,    -1,  2149,    -1,    -1,    -1,    -1,   105,    -1,  2156,
    1230,   442,    -1,   444,   445,    -1,    -1,   470,   471,   472,
    2188,   474,   475,   476,   477,   478,   479,  1817,    -1,    -1,
      -1,    -1,    -1,    -1,  2328,  1825,  1826,  1827,  1828,    -1,
    1830,  1831,    -1,    -1,    -1,  1835,  1836,    -1,    -1,    -1,
     481,    -1,  2215,   484,   485,   486,  2149,    -1,    -1,    -1,
     212,    -1,    -1,  2156,    -1,    -1,    -1,    -1,  2215,  2363,
      -1,    -1,    -1,    -1,  1864,    -1,    -1,    -1,    -1,    -1,
      -1,  2249,    -1,    -1,  2298,    -1,  2254,    -1,    -1,  2257,
    1880,    -1,  1882,    -1,    -1,   193,  1886,  1887,  1888,  2393,
    1890,    -1,  2396,    -1,  1919,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1906,    -1,  1908,    -1,
      -1,    -1,  2215,    -1,    -1,    -1,    -1,    -1,   280,    -1,
      -1,  1921,  1922,  1923,  1924,  1925,  1926,  1927,  1928,  1929,
    1930,    -1,    -1,   241,  1523,    -1,    -1,   212,  2362,    -1,
      -1,   249,    -1,    -1,    -1,  1945,    -1,    -1,    -1,    -1,
      -1,  1381,  1952,   261,    -1,  2328,    -1,    -1,    -1,  2337,
      -1,    -1,    -1,  1963,    36,    -1,  1966,    -1,    -1,    -1,
      -1,  2328,    -1,  1973,    -1,    -1,    -1,    -1,    -1,    -1,
    2358,    -1,    -1,    55,   292,    -1,    -1,    -1,    -1,    -1,
    2363,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   280,  2363,    -1,    -1,    -1,
      -1,  2389,    -1,    -1,    -1,  2040,    -1,    -1,    -1,  2397,
    2393,    -1,    -1,  2396,    -1,  2328,    -1,    -1,    -1,   337,
      -1,    -1,    -1,   105,   106,    -1,  2393,    -1,    -1,  2396,
      -1,    -1,   114,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   359,    -1,  2053,    -1,    -1,  2056,  2057,  2058,  2059,
    2363,    -1,    -1,  2063,  2064,    -1,  2066,    -1,    -1,  2069,
      -1,   379,  2450,  2073,  2578,  1664,    -1,  2077,    -1,    -1,
    1669,  1670,  1671,  2083,    -1,    -1,    -1,    -1,    -1,    -1,
    2393,    -1,    -1,  2396,    -1,    -1,    -1,    -1,    -1,   171,
    1689,    -1,  2102,   543,   544,    -1,    -1,  2107,   470,   471,
     472,  2111,   474,   475,   476,   477,   478,   479,    -1,  2119,
      -1,   193,    -1,    -1,  2149,    -1,    -1,    -1,  2506,    -1,
      -1,  2156,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2297,    -1,    -1,    -1,  2144,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   601,   602,    -1,    -1,    -1,    -1,    -1,    -1,   241,
      -1,    -1,  2329,  2330,    -1,    -1,    -1,   249,    -1,    -1,
      -1,  2181,    -1,    -1,    -1,  2342,    -1,  2187,    -1,   261,
    2215,   263,    -1,    -1,    -1,   470,   471,   472,  2198,   474,
     475,   476,   477,   478,   479,  2578,    -1,    -1,    -1,  2587,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   659,
     292,  2578,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   675,  1825,  1826,  1827,  2239,
    2240,    -1,    -1,    -1,  2244,    -1,    -1,  2247,  1678,  2249,
    2407,    -1,    -1,    -1,  2254,    -1,    -1,  2257,    -1,  2259,
      -1,    -1,  2262,   703,    -1,   337,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2578,  2276,    -1,    -1,    -1,
      -1,    -1,   722,   723,   724,    -1,   726,   359,    -1,    -1,
      -1,  1880,    -1,    -1,    -1,    -1,  2296,  2297,    -1,    -1,
      -1,  1731,    -1,  2328,    -1,  2305,   746,   379,    -1,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1751,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2329,
    2330,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2363,  2339,
      -1,    -1,  2342,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1780,    -1,    -1,    -1,  2354,   795,  1945,  2357,    -1,   799,
     800,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2393,    -1,
      -1,  2396,    -1,  1803,    -1,    -1,  2376,  1966,    -1,    -1,
      -1,     0,    -1,    -1,    -1,    -1,    -1,    -1,     8,  2389,
      -1,    11,    -1,    -1,  2394,    15,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2403,    -1,    -1,    -1,  2407,    -1,    -1,
      -1,   483,   852,   853,   854,    -1,  2416,    -1,    -1,    -1,
      -1,    41,    -1,    -1,    -1,    -1,    -1,    -1,    48,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2438,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2449,
      -1,    -1,     0,    73,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2056,  2057,  2058,
    2059,    19,    -1,    92,    -1,    -1,    -1,  2477,    -1,    -1,
      -1,    29,    -1,    31,    32,    -1,  2486,    -1,    -1,  1919,
    2490,    -1,    -1,    -1,  2494,    -1,    -1,    -1,    -1,    47,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    56,    -1,
    2510,  2511,  2512,  2513,    -1,    -1,    -1,    -1,    -1,    -1,
      68,    -1,   142,   963,    -1,   144,    -1,    -1,    -1,    -1,
      -1,    79,    -1,    -1,    -1,    -1,    -1,    -1,   157,    -1,
      -1,    -1,    90,   162,    92,    -1,    -1,    -1,   167,    -1,
      -1,    -1,   172,  2578,  2554,    -1,    -1,   176,    -1,    -1,
     179,    -1,   110,  2563,    -1,  2565,   186,    -1,    -1,    -1,
      -1,   191,    -1,    -1,  2574,    -1,   124,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   134,    -1,  2588,   208,
      -1,    -1,   140,    -1,  2594,    -1,    -1,    -1,    -1,    -1,
     148,    -1,   150,   151,    -1,    -1,   226,    -1,   227,    -1,
    2040,    -1,  2612,    -1,    -1,    -1,  1056,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,     3,    -1,     5,    -1,    -1,  1077,    -1,    -1,
    1080,    -1,   190,  1083,    -1,    -1,    -1,    -1,    -1,    -1,
    1090,  1091,    -1,    -1,    -1,    -1,   275,    -1,    -1,   278,
     280,    -1,  1102,    -1,    -1,   284,    -1,    -1,  1108,  1109,
    1110,  1111,  1112,    -1,    -1,    -1,    -1,  1117,  1118,    -1,
      -1,   229,  1122,    -1,    -1,    -1,  1126,    -1,    -1,  1129,
    1130,  1131,  1132,  1133,  1134,  1135,  1136,  1137,    -1,    -1,
    1140,    -1,    -1,    -1,  1144,    -1,    -1,    -1,  1148,    -1,
    1150,    -1,    -1,    -1,    -1,    -1,  2305,    -1,    -1,  2149,
     339,    -1,    -1,    -1,    -1,    -1,  2156,    -1,    -1,   740,
      -1,  1171,    -1,    -1,    -1,    -1,     8,   108,   109,    11,
      -1,    -1,    -1,    15,    16,    17,    18,    -1,    -1,    -1,
     370,    -1,    -1,    -1,    -1,    -1,    -1,   305,  1198,  1199,
     308,    33,    -1,    -1,    -1,  2354,    -1,   778,    -1,    41,
      -1,    -1,    -1,   392,    -1,    -1,    48,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2215,    -1,    -1,   336,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   344,    -1,    -1,   418,
      -1,    73,    -1,    -1,    -1,    -1,    -1,   426,    -1,    -1,
     358,   182,   183,    -1,    -1,    -1,    -1,   365,    -1,    -1,
      -1,   369,    -1,   442,    -1,   444,   445,  2416,    -1,    -1,
      -1,   379,    -1,    -1,    -1,    -1,    -1,  1277,    -1,    -1,
    1280,  1281,    -1,  1283,   392,    -1,   857,   467,    -1,    -1,
      -1,   862,    -1,    -1,   474,   475,   476,   477,   478,   479,
    2449,    -1,   481,    -1,    -1,   484,   485,   486,    -1,    -1,
    1310,    -1,   243,   244,   245,   246,   247,   248,    -1,   427,
     251,   252,    -1,    -1,   432,    -1,    -1,    -1,    -1,    -1,
     108,   109,    -1,    -1,    -1,    -1,    -1,   445,  2328,    -1,
     172,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1350,    -1,    -1,    -1,   186,    -1,    -1,     3,    -1,   191,
      -1,   469,     8,    -1,    -1,    11,    -1,    -1,    -1,    15,
      16,    17,    18,  2363,    -1,   483,    -1,    -1,   486,    -1,
     212,   213,    -1,    -1,    -1,    -1,    -1,    33,  1388,    -1,
      36,    -1,    -1,  1393,   226,    41,    -1,    -1,    -1,    -1,
      -1,    -1,    48,  2393,   182,   183,  2396,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   355,   356,    -1,    73,    -1,    -1,
      -1,   263,    -1,    -1,   266,  1435,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,
    1450,   283,  1452,  1453,    -1,    -1,    -1,    -1,  1458,    -1,
      -1,   108,   109,    -1,    -1,   243,   244,   245,   246,   247,
     248,    -1,    -1,   251,   252,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1054,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1493,     8,    -1,  1496,    11,  1498,    -1,
      -1,    15,    16,    17,    18,  1076,    -1,    -1,    -1,    -1,
    1081,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,
      -1,  1092,  1093,  1094,    -1,  1096,   172,    41,    -1,    -1,
      -1,    -1,   463,   464,    48,   182,   183,    -1,   370,    -1,
     186,    -1,    -1,     8,    -1,   191,    11,    -1,    -1,    -1,
      15,    16,    17,    18,    -1,    -1,    -1,    -1,  1558,    73,
      -1,    -1,    -1,    -1,    -1,    -1,   212,   213,    33,    -1,
      -1,    -1,    -1,  1573,    -1,  1146,    41,   355,   356,    -1,
     226,    -1,    -1,    48,    -1,    -1,    -1,    -1,  2578,    -1,
      -1,  1591,    -1,    -1,    -1,    -1,   243,   244,   245,   246,
     247,   248,    -1,    -1,   251,   252,    -1,    -1,    73,    -1,
      -1,    -1,    -1,    -1,  1185,    -1,    -1,   263,    -1,    -1,
     266,    -1,    -1,    -1,    -1,    -1,  1197,    -1,    -1,    -1,
      -1,  1202,    -1,    -1,   280,   467,    -1,   283,   470,   471,
     472,    -1,   474,   475,   476,   477,   478,   479,    -1,  1649,
      -1,    -1,    -1,    -1,    -1,   487,    -1,    -1,   172,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   186,    -1,    -1,    -1,    -1,   191,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   463,   464,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   212,   213,
      -1,    -1,    -1,    -1,    -1,   483,    -1,   172,   355,   356,
      -1,    -1,   226,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   186,    -1,    -1,   370,    -1,   191,    -1,  1728,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1738,    -1,
      -1,    -1,  1742,    -1,    -1,  1745,    -1,   212,   213,   263,
      -1,    -1,   266,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   226,    -1,    -1,    -1,    -1,   280,    -1,    -1,   283,
      -1,  1771,  1772,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1791,    -1,    -1,  1794,    -1,  1796,    -1,   263,    -1,
      -1,   266,    -1,    -1,  1804,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1812,  1813,    -1,   280,   463,   464,   283,    -1,
    1391,   467,    -1,    -1,   470,   471,   472,    -1,   474,   475,
     476,   477,   478,   479,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1841,    -1,  1414,    -1,    -1,    -1,    -1,    -1,    -1,
    1850,    -1,    -1,    -1,    -1,    -1,   370,    -1,    -1,    -1,
    1431,    -1,  1433,  1434,    -1,  1436,  1866,  1438,    -1,    -1,
      -1,  1442,    -1,    -1,    -1,    -1,    -1,    -1,  1449,    -1,
      -1,    -1,    -1,  1454,    -1,    -1,    -1,    -1,    -1,  1460,
      -1,    -1,    -1,  1464,  1465,  1466,  1467,  1468,    -1,    -1,
      -1,    -1,    -1,  1474,  1475,   370,  1477,  1478,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1489,    -1,
      -1,  1492,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1500,
    1501,  1502,  1503,  1504,  1505,  1506,  1507,  1508,  1509,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1517,    -1,    -1,    -1,
      -1,    -1,    -1,   467,    -1,    -1,   470,   471,   472,    -1,
     474,   475,   476,   477,   478,   479,    -1,    -1,   482,    -1,
    1541,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1992,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   467,    -1,    -1,   470,   471,   472,    -1,   474,
     475,   476,   477,   478,   479,    -1,    -1,    -1,    -1,   484,
      -1,     8,    -1,    -1,    11,    -1,    -1,    -1,    15,    16,
      17,    18,    -1,    -1,  2034,  2035,    -1,    -1,    -1,  2039,
      -1,    -1,    -1,    -1,  2044,    -1,    33,  2047,  2048,    -1,
      -1,    -1,  2052,    -1,    41,    -1,    -1,    -1,    -1,    -1,
      -1,    48,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1652,  1653,  1654,    -1,    -1,    73,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2098,     8,
      -1,    -1,    11,    -1,    -1,    -1,    15,    16,    17,    18,
      -1,    -1,    -1,    -1,    -1,    -1,  1687,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    41,    -1,    -1,    -1,    -1,    -1,    -1,    48,
    2140,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1727,    -1,    -1,    -1,
      -1,    -1,  1733,    -1,    73,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1748,  1749,  1750,
      -1,  1752,  1753,  1754,  1755,   172,    -1,  1758,  1759,  1760,
    1761,  1762,  1763,  1764,  1765,  1766,  1767,  1768,    -1,   186,
      -1,    -1,    -1,    -1,   191,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1788,    -1,    -1,
      -1,  1792,  1793,  2223,  2224,   212,   213,  2227,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1806,  1807,  1808,  1809,   226,
    1811,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   172,  2264,  2265,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   263,   186,  2278,   266,
      -1,    -1,   191,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   280,    -1,    -1,   283,    -1,    -1,     8,
      -1,    -1,    11,   212,   213,    -1,    15,    16,    17,    18,
      -1,    -1,  1883,    -1,    -1,    -1,    -1,   226,    -1,    -1,
      -1,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    41,    -1,    -1,    -1,    -1,    -1,    -1,    48,
      -1,    -1,     8,    -1,    -1,    11,    -1,    -1,    -1,    15,
      16,    17,    18,    -1,   263,    -1,    -1,   266,    -1,    -1,
      -1,    -1,    -1,    -1,    73,    -1,    -1,    33,    -1,    -1,
      -1,   280,    -1,    -1,   283,    41,    -1,    -1,    -1,    -1,
      -1,    -1,    48,   370,    -1,  2385,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2397,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    73,  2408,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1993,  2423,    -1,    -1,  1997,  1998,    -1,  2000,
      -1,    -1,  2003,  2004,  2005,  2006,    -1,    -1,    -1,  2010,
    2011,  2012,  2013,  2014,  2015,  2016,  2017,  2018,  2019,  2020,
    2021,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   370,  2033,   172,    -1,  2036,    -1,  2038,    -1,    -1,
      -1,  2042,    -1,    -1,  2045,  2046,    -1,   186,  2049,  2050,
     467,    -1,   191,   470,   471,   472,    -1,   474,   475,   476,
     477,   478,   479,    -1,    -1,    -1,    -1,   484,    -1,  2499,
      -1,    -1,    -1,   212,   213,    -1,   172,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   226,    -1,  2090,
     186,    -1,    -1,    -1,    -1,   191,  2097,    -1,    -1,    -1,
    2530,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2110,
      -1,    -1,    -1,    -1,    -1,    -1,   212,   213,    -1,  2549,
    2550,    -1,    -1,    -1,   263,    -1,    -1,   266,   467,    -1,
     226,   470,   471,   472,    -1,   474,   475,   476,   477,   478,
     479,   280,    -1,    -1,   283,   484,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2596,   263,    -1,    -1,
     266,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   280,    -1,    -1,   283,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2208,    -1,    -1,
      -1,  2212,    -1,    -1,    -1,    -1,  2217,  2218,  2219,    -1,
      -1,  2222,    -1,    -1,  2225,  2226,    -1,    -1,  2658,  2230,
      -1,   370,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   370,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2298,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2316,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   467,    -1,
      -1,   470,   471,   472,    -1,   474,   475,   476,   477,   478,
     479,    -1,    -1,    -1,    -1,   484,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2361,  2362,    -1,    -1,    -1,  2366,  2367,  2368,    -1,    -1,
      -1,   467,    -1,    -1,   470,   471,   472,    -1,   474,   475,
     476,   477,   478,   479,    -1,    -1,    -1,    -1,   484,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2401,  2402,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2414,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2426,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
    2471,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    27,    28,    29,    30,    -1,    -1,    -1,  2489,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,  2508,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,  2522,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,   129,  2585,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,  2599,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
     166,    -1,   168,   169,   170,   171,   172,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,   200,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,    -1,    -1,   223,   224,   225,
     226,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,    -1,
     276,   277,    -1,    -1,   280,   281,   282,    -1,    -1,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,    -1,   302,   303,   304,   305,
     306,   307,   308,   309,   310,    -1,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
      -1,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,    -1,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,    -1,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,    -1,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,    -1,   390,   391,    -1,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,    -1,    -1,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,    -1,    -1,   420,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,    -1,    -1,   443,    -1,    -1,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,    -1,    -1,    -1,    -1,    -1,    -1,   474,   475,
     476,    -1,    -1,    -1,    -1,    -1,    -1,   483,   484,    -1,
      -1,    -1,   488,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    74,    -1,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    -1,    86,    87,    88,    89,
      90,    91,    -1,    93,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,    -1,   117,   118,   119,
     120,   121,   122,    -1,   124,   125,   126,   127,   128,    -1,
      -1,   131,   132,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,    -1,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,    -1,   158,   159,
     160,   161,    -1,   163,    -1,   165,   166,    -1,   168,   169,
     170,   171,   172,   173,    -1,   175,    -1,   177,   178,    -1,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
     190,    -1,   192,   193,   194,   195,   196,   197,    -1,   199,
     200,   201,   202,   203,   204,   205,   206,   207,    -1,   209,
      -1,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,    -1,    -1,   223,   224,   225,   226,    -1,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,    -1,   276,   277,    -1,    -1,
     280,   281,   282,    -1,    -1,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,    -1,   302,   303,   304,   305,   306,   307,   308,   309,
     310,    -1,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,    -1,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,    -1,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,    -1,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,    -1,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,    -1,    -1,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,    -1,    -1,
     420,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
     430,   431,   432,   433,    -1,   435,   436,   437,   438,   439,
     440,    -1,    -1,   443,    -1,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,    -1,   469,
      -1,    -1,    -1,    -1,   474,   475,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   483,   484,    -1,    -1,    -1,   488,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      74,    -1,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    -1,    86,    87,    88,    89,    90,    91,    -1,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,    -1,   117,   118,   119,   120,   121,   122,    -1,
     124,   125,   126,   127,   128,    -1,    -1,   131,   132,   133,
     134,   135,    -1,   137,   138,   139,    -1,   141,   142,   143,
      -1,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,    -1,   158,   159,   160,   161,    -1,   163,
      -1,   165,   166,    -1,   168,   169,   170,   171,   172,   173,
      -1,   175,    -1,   177,   178,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,   190,    -1,   192,   193,
     194,   195,   196,   197,    -1,   199,   200,   201,   202,   203,
     204,   205,   206,   207,    -1,   209,    -1,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,    -1,    -1,   223,
     224,   225,   226,    -1,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,    -1,   276,   277,    -1,    -1,   280,   281,   282,    -1,
      -1,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,    -1,   302,   303,
     304,   305,   306,   307,   308,   309,   310,    -1,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,    -1,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,    -1,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,    -1,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,    -1,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,    -1,
      -1,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,    -1,    -1,   420,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,   430,   431,   432,   433,
      -1,   435,   436,   437,   438,   439,   440,    -1,    -1,   443,
      -1,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,    -1,   469,    -1,    -1,    -1,    -1,
     474,   475,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   483,
      -1,    -1,    -1,    -1,   488,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,   166,   167,
     168,   169,   170,   171,   172,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,   200,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,    -1,   222,   223,   224,   225,   226,    -1,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,    -1,   276,   277,
      -1,    -1,   280,   281,   282,    -1,    -1,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,    -1,   302,   303,   304,   305,   306,   307,
     308,   309,   310,    -1,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,    -1,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
      -1,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,    -1,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,    -1,   390,   391,    -1,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,    -1,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
      -1,    -1,   420,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,   430,   431,   432,   433,    -1,   435,   436,   437,
     438,   439,   440,    -1,    -1,   443,    -1,    -1,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
      -1,    -1,    -1,    -1,    -1,    -1,   474,   475,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   483,    -1,    -1,    -1,    -1,
     488,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    74,    -1,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    -1,    86,    87,    88,    89,    90,    91,
      -1,    93,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,    -1,   117,   118,   119,   120,   121,
     122,    -1,   124,   125,   126,   127,   128,    -1,    -1,   131,
     132,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
     142,   143,    -1,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,    -1,   158,   159,   160,   161,
      -1,   163,    -1,   165,   166,    -1,   168,   169,   170,   171,
     172,   173,    -1,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,   190,    -1,
     192,   193,   194,   195,   196,   197,    -1,   199,   200,   201,
     202,   203,   204,   205,   206,   207,    -1,   209,    -1,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,    -1,
      -1,   223,   224,   225,   226,    -1,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,    -1,   276,   277,    -1,    -1,   280,   281,
     282,    -1,    -1,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,    -1,
     302,   303,   304,   305,   306,   307,   308,   309,   310,    -1,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,    -1,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,    -1,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,    -1,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,    -1,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,    -1,   390,   391,
      -1,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,    -1,    -1,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,    -1,    -1,   420,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,   430,   431,
     432,   433,    -1,   435,   436,   437,   438,   439,   440,    -1,
      -1,   443,    -1,    -1,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,    -1,    -1,    -1,    -1,
      -1,    -1,   474,   475,   476,    -1,    -1,    -1,    -1,    -1,
      -1,   483,    -1,    -1,    -1,    -1,   488,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    27,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
     166,    -1,   168,   169,   170,   171,   172,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,   200,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,    -1,    -1,   223,   224,   225,
     226,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,    -1,
     276,   277,    -1,    -1,   280,   281,   282,    -1,    -1,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,    -1,   302,   303,   304,   305,
     306,   307,   308,   309,   310,    -1,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
      -1,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,    -1,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,    -1,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,    -1,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,    -1,   390,   391,    -1,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,    -1,    -1,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,    -1,    -1,   420,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,   430,   431,   432,   433,    -1,   435,
     436,   437,   438,   439,   440,    -1,    -1,   443,    -1,    -1,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,    -1,    -1,    -1,    -1,    -1,    -1,   474,   475,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   483,    -1,    -1,
      -1,    -1,   488,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    74,    -1,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    -1,    86,    87,    88,    89,
      90,    91,    -1,    93,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,    -1,   117,   118,   119,
     120,   121,   122,    -1,   124,   125,   126,   127,   128,    -1,
      -1,   131,   132,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,    -1,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,    -1,   158,   159,
     160,   161,    -1,   163,    -1,   165,   166,    -1,   168,   169,
     170,   171,   172,   173,    -1,   175,    -1,   177,   178,    -1,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
     190,    -1,   192,   193,   194,   195,   196,   197,    -1,   199,
     200,   201,   202,   203,   204,   205,   206,   207,    -1,   209,
      -1,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,    -1,    -1,   223,   224,   225,   226,    -1,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,    -1,   276,   277,    -1,    -1,
     280,   281,   282,    -1,    -1,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,    -1,   302,   303,   304,   305,   306,   307,   308,   309,
     310,    -1,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,    -1,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,    -1,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,    -1,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,    -1,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,    -1,
     390,   391,    -1,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,    -1,    -1,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,    -1,    -1,
     420,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
     430,   431,   432,   433,    -1,   435,   436,   437,   438,   439,
     440,    -1,    -1,   443,    -1,    -1,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,    -1,    -1,
      -1,    -1,    -1,    -1,   474,   475,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   483,   484,    -1,    -1,    -1,   488,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      74,    -1,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    -1,    86,    87,    88,    89,    90,    91,    -1,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,    -1,   117,   118,   119,   120,   121,   122,    -1,
     124,   125,   126,   127,   128,    -1,    -1,   131,   132,   133,
     134,   135,    -1,   137,   138,   139,    -1,   141,   142,   143,
      -1,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,    -1,   158,   159,   160,   161,    -1,   163,
      -1,   165,   166,    -1,   168,   169,   170,   171,   172,   173,
      -1,   175,    -1,   177,   178,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,   190,    -1,   192,   193,
     194,   195,   196,   197,    -1,   199,   200,   201,   202,   203,
     204,   205,   206,   207,    -1,   209,    -1,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,    -1,    -1,   223,
     224,   225,   226,    -1,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,    -1,   276,   277,    -1,    -1,   280,   281,   282,    -1,
      -1,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,    -1,   302,   303,
     304,   305,   306,   307,   308,   309,   310,    -1,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,    -1,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,    -1,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,    -1,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,    -1,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,    -1,   390,   391,    -1,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,    -1,
      -1,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,    -1,    -1,   420,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,   430,   431,   432,   433,
      -1,   435,   436,   437,   438,   439,   440,    -1,    -1,   443,
      -1,    -1,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,    -1,    -1,    -1,    -1,    -1,    -1,
     474,   475,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   483,
     484,    -1,    -1,    -1,   488,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,   166,    -1,
     168,   169,   170,   171,   172,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,   200,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,    -1,    -1,   223,   224,   225,   226,    -1,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,    -1,   276,   277,
      -1,    -1,   280,   281,   282,    -1,    -1,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,    -1,   302,   303,   304,   305,   306,   307,
     308,   309,   310,    -1,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,    -1,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
      -1,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,    -1,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,    -1,   390,   391,    -1,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,    -1,    -1,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
      -1,    -1,   420,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,    -1,    -1,   443,    -1,    -1,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
      -1,    -1,    -1,    -1,    -1,    -1,   474,   475,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   483,    -1,    -1,    -1,    -1,
     488,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    74,    -1,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    -1,    86,    87,    88,    89,    90,    91,
      -1,    93,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,    -1,   117,   118,   119,   120,   121,
     122,    -1,   124,   125,   126,   127,   128,    -1,    -1,   131,
     132,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
     142,   143,    -1,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,    -1,   158,   159,   160,   161,
      -1,   163,    -1,   165,   166,   167,   168,   169,   170,   171,
     172,   173,    -1,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,   190,    -1,
     192,   193,   194,   195,   196,   197,    -1,   199,   200,   201,
     202,   203,   204,   205,   206,   207,    -1,   209,    -1,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,    -1,
      -1,   223,   224,   225,   226,    -1,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,    -1,   276,   277,    -1,    -1,   280,   281,
     282,    -1,    -1,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,    -1,
     302,   303,   304,   305,   306,   307,   308,   309,   310,    -1,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,    -1,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,    -1,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,    -1,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,    -1,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,    -1,   390,   391,
      -1,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,    -1,    -1,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,    -1,    -1,   420,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,   430,   431,
     432,   433,    -1,   435,   436,   437,   438,   439,   440,    -1,
      -1,   443,    -1,    -1,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,    -1,    -1,    -1,    -1,
      -1,    -1,   474,   475,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   483,    -1,    -1,    -1,    -1,   488,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
     166,    -1,   168,   169,   170,   171,   172,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,   200,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,    -1,    -1,   223,   224,   225,
     226,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,    -1,
     276,   277,    -1,    -1,   280,   281,   282,    -1,    -1,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,    -1,   302,   303,   304,   305,
     306,   307,   308,   309,   310,    -1,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
      -1,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,    -1,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,    -1,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,    -1,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,    -1,   390,   391,    -1,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,    -1,    -1,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,    -1,    -1,   420,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,   430,   431,   432,   433,    -1,   435,
     436,   437,   438,   439,   440,    -1,    -1,   443,    -1,    -1,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,    -1,    -1,    -1,    -1,    -1,    -1,   474,   475,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   483,    -1,    -1,
      -1,    -1,   488,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    74,    -1,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    -1,    86,    87,    88,    89,
      90,    91,    -1,    93,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,    -1,   117,   118,   119,
     120,   121,   122,    -1,   124,   125,   126,   127,   128,    -1,
      -1,   131,   132,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,    -1,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,    -1,   158,   159,
     160,   161,    -1,   163,    -1,   165,   166,    -1,   168,   169,
     170,   171,   172,   173,    -1,   175,    -1,   177,   178,    -1,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
     190,    -1,   192,   193,   194,   195,   196,   197,    -1,   199,
     200,   201,   202,   203,   204,   205,   206,   207,    -1,   209,
      -1,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,    -1,    -1,   223,   224,   225,   226,    -1,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,    -1,   276,   277,    -1,    -1,
     280,   281,   282,    -1,    -1,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,    -1,   302,   303,   304,   305,   306,   307,   308,   309,
     310,    -1,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,    -1,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,    -1,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,    -1,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,    -1,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,    -1,
     390,   391,    -1,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,    -1,    -1,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,    -1,    -1,
     420,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
     430,   431,   432,   433,    -1,   435,   436,   437,   438,   439,
     440,    -1,    -1,   443,    -1,    -1,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,    -1,    -1,
      -1,    -1,    -1,    -1,   474,   475,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   483,    -1,    -1,    -1,    -1,   488,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      74,    -1,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    -1,    86,    87,    88,    89,    90,    91,    -1,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,    -1,   117,   118,   119,   120,   121,   122,    -1,
     124,   125,   126,   127,   128,    -1,    -1,   131,   132,   133,
     134,   135,    -1,   137,   138,   139,    -1,   141,   142,   143,
      -1,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,    -1,   158,   159,   160,   161,    -1,   163,
      -1,   165,   166,    -1,   168,   169,   170,   171,   172,   173,
      -1,   175,    -1,   177,   178,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,   190,    -1,   192,   193,
     194,   195,   196,   197,    -1,   199,   200,   201,   202,   203,
     204,   205,   206,   207,    -1,   209,    -1,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,    -1,    -1,   223,
     224,   225,   226,    -1,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,    -1,   276,   277,    -1,    -1,   280,   281,   282,    -1,
      -1,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,    -1,   302,   303,
     304,   305,   306,   307,   308,   309,   310,    -1,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,    -1,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,    -1,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,    -1,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,    -1,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,    -1,   390,   391,    -1,   393,
     394,   395,   396,   397,   398,   399,    -1,   401,   402,    -1,
      -1,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,    -1,    -1,   420,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,   430,   431,   432,   433,
      -1,   435,   436,   437,   438,   439,   440,    -1,    -1,   443,
      -1,    -1,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,    -1,    -1,    -1,    -1,    -1,    -1,
     474,   475,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   483,
      -1,    -1,    -1,    -1,   488,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,   166,    -1,
     168,   169,   170,   171,   172,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,   200,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,    -1,    -1,   223,   224,   225,   226,    -1,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,    -1,   276,   277,
      -1,    -1,   280,   281,   282,    -1,    -1,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,    -1,   302,   303,   304,   305,   306,   307,
     308,   309,   310,    -1,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,    -1,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
      -1,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,    -1,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,    -1,   390,   391,    -1,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,    -1,    -1,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
      -1,    -1,   420,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,   430,   431,   432,   433,    -1,   435,   436,   437,
     438,   439,   440,    -1,    -1,   443,    -1,    -1,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
      -1,    -1,    -1,    -1,    -1,    -1,   474,   475,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   483,    -1,    -1,    -1,    -1,
     488,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    74,    -1,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    -1,    86,    87,    88,    89,    90,    91,
      -1,    93,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,    -1,   117,   118,   119,   120,   121,
     122,    -1,   124,   125,   126,   127,   128,    -1,    -1,   131,
     132,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
     142,   143,    -1,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,    -1,   158,   159,   160,   161,
      -1,   163,    -1,   165,   166,    -1,   168,   169,   170,   171,
     172,   173,    -1,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,   190,    -1,
     192,   193,   194,   195,   196,   197,    -1,   199,   200,   201,
     202,   203,   204,   205,   206,   207,    -1,   209,    -1,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,    -1,
      -1,   223,   224,   225,   226,    -1,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,    -1,   276,   277,    -1,    -1,   280,   281,
     282,    -1,    -1,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,    -1,
     302,   303,   304,   305,   306,   307,   308,   309,   310,    -1,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,    -1,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,    -1,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,    -1,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,    -1,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,    -1,   390,   391,
      -1,   393,   394,   395,   396,   397,   398,   399,    -1,   401,
     402,    -1,    -1,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,    -1,    -1,   420,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,   430,   431,
     432,   433,    -1,   435,   436,   437,   438,   439,   440,    -1,
      -1,   443,    -1,    -1,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,    -1,    -1,    -1,    -1,
      -1,    -1,   474,   475,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   483,    -1,    -1,    -1,    -1,   488,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
     166,    -1,   168,   169,   170,   171,   172,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,   200,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,    -1,    -1,   223,   224,   225,
     226,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,    -1,
     276,   277,    -1,    -1,   280,   281,   282,    -1,    -1,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,    -1,   302,   303,   304,   305,
     306,   307,   308,   309,   310,    -1,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
      -1,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,    -1,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,    -1,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,    -1,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,    -1,   390,   391,    -1,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,    -1,    -1,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,    -1,    -1,   420,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,   430,   431,   432,   433,    -1,   435,
     436,   437,   438,   439,   440,    -1,    -1,   443,    -1,    -1,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,    -1,    -1,    -1,    -1,    -1,    -1,   474,   475,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   483,    -1,    -1,
      -1,    -1,   488,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    74,    -1,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    -1,    86,    87,    88,    89,
      90,    91,    -1,    93,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,    -1,   115,    -1,   117,   118,   119,
     120,   121,   122,    -1,   124,   125,   126,   127,   128,    -1,
      -1,   131,   132,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,    -1,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,    -1,   158,   159,
     160,   161,    -1,   163,    -1,   165,   166,    -1,   168,   169,
     170,   171,   172,   173,    -1,   175,    -1,   177,   178,    -1,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
     190,    -1,   192,   193,   194,   195,   196,   197,    -1,   199,
     200,   201,   202,   203,   204,   205,   206,   207,    -1,   209,
      -1,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,    -1,    -1,   223,   224,   225,   226,    -1,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,    -1,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,    -1,   276,   277,    -1,    -1,
     280,   281,   282,    -1,    -1,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,    -1,   302,   303,   304,   305,   306,   307,   308,   309,
     310,    -1,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,    -1,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,    -1,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,    -1,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,    -1,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,    -1,
     390,   391,    -1,   393,   394,   395,   396,   397,   398,   399,
      -1,   401,   402,    -1,    -1,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,    -1,    -1,
     420,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
     430,   431,   432,   433,    -1,   435,   436,   437,   438,   439,
     440,    -1,    -1,   443,    -1,    -1,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   474,   475,    -1,    -1,     3,     4,
       5,     6,     7,   483,     9,    10,    -1,    -1,   488,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    74,
      -1,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      -1,    86,    87,    88,    89,    90,    91,    -1,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,    -1,
     115,    -1,   117,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,   127,   128,    -1,    -1,   131,   132,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,    -1,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,    -1,   158,   159,   160,   161,    -1,   163,    -1,
     165,   166,    -1,   168,   169,   170,   171,   172,   173,    -1,
     175,    -1,   177,   178,    -1,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,   193,   194,
     195,   196,   197,    -1,   199,   200,   201,   202,   203,   204,
     205,   206,   207,    -1,   209,    -1,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,    -1,    -1,   223,   224,
     225,   226,    -1,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,    -1,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
      -1,   276,   277,    -1,    -1,   280,   281,   282,    -1,    -1,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,    -1,   302,   303,   304,
     305,   306,   307,   308,   309,   310,    -1,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,    -1,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
      -1,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,    -1,   390,   391,    -1,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,    -1,    -1,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,    -1,    -1,   420,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,   430,   431,   432,   433,    -1,
     435,   436,   437,   438,   439,   440,    -1,    -1,   443,    -1,
      -1,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   474,
     475,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   483,    -1,
      -1,    -1,    -1,   488,     3,     4,     5,     6,     7,     8,
       9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    74,    -1,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    -1,    86,    87,    88,
      89,    90,    91,    -1,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,    -1,   115,    -1,   117,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,   127,   128,
      -1,    -1,   131,   132,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,    -1,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,    -1,   158,
     159,   160,   161,    -1,   163,    -1,   165,   166,    -1,   168,
     169,   170,   171,   172,   173,    -1,   175,    -1,   177,   178,
      -1,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,   193,   194,   195,   196,   197,    -1,
     199,   200,   201,   202,   203,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,   213,   214,   215,   216,   217,   218,
     219,   220,    -1,    -1,   223,   224,   225,   226,    -1,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,    -1,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,    -1,   276,   277,    -1,
      -1,   280,   281,   282,    -1,    -1,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,    -1,   302,   303,   304,   305,   306,   307,   308,
     309,   310,    -1,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,    -1,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,    -1,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,    -1,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
      -1,   390,   391,    -1,   393,   394,   395,   396,   397,   398,
     399,    -1,   401,   402,    -1,    -1,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,    -1,
      -1,   420,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,   430,   431,   432,   433,    -1,   435,   436,   437,   438,
     439,   440,    -1,    -1,   443,    -1,    -1,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   474,   475,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   483,    -1,    -1,    -1,    -1,   488,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,   166,    -1,   168,   169,   170,   171,   172,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,   200,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,   214,   215,   216,   217,   218,   219,   220,    -1,    -1,
     223,   224,   225,   226,    -1,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
      -1,   264,   265,    -1,   267,   268,   269,   270,   271,   272,
     273,   274,    -1,   276,   277,    -1,    -1,   280,   281,   282,
      -1,    -1,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,    -1,   302,
     303,   304,   305,   306,   307,   308,   309,   310,    -1,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,    -1,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,    -1,   390,   391,    -1,
     393,   394,   395,   396,   397,   398,   399,    -1,   401,   402,
      -1,    -1,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,    -1,    -1,   420,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,   430,   431,   432,
     433,    -1,   435,   436,   437,   438,   439,   440,    -1,    -1,
     443,    -1,    -1,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,    -1,    -1,    -1,    -1,    -1,
      -1,   474,   475,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     483,    -1,    -1,    -1,    -1,   488,     3,     4,     5,     6,
       7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    44,    45,    46,
      47,    -1,    49,    50,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    74,    -1,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    -1,    86,
      87,    88,    89,    90,    91,    -1,    93,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,    -1,
     117,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
     127,   128,    -1,    -1,   131,   132,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,    -1,   143,    -1,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
      -1,   158,   159,   160,   161,    -1,   163,    -1,   165,   166,
      -1,   168,   169,   170,   171,    -1,   173,    -1,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,    -1,
     187,   188,   189,   190,    -1,   192,   193,   194,   195,   196,
     197,    -1,   199,   200,   201,   202,   203,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,   214,   215,   216,
     217,   218,   219,   220,    -1,    -1,   223,   224,   225,    -1,
      -1,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,    -1,   264,   265,    -1,
     267,   268,   269,   270,   271,   272,   273,   274,    -1,   276,
     277,    -1,    -1,   280,   281,   282,    -1,    -1,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,    -1,   302,   303,   304,   305,   306,
     307,   308,   309,   310,    -1,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,    -1,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,    -1,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,    -1,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,    -1,   371,   372,   373,   374,    -1,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,    -1,   390,   391,    -1,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,    -1,    -1,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,    -1,    -1,   420,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,   430,   431,   432,   433,    -1,   435,   436,
     437,   438,   439,   440,    -1,    -1,   443,    -1,    -1,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
      -1,    -1,    -1,    -1,    -1,    -1,     3,   474,   475,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   483,    -1,    -1,    -1,
      -1,   488,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    36,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    -1,    82,    83,    84,    -1,    86,
      87,    88,    89,    90,    91,    -1,    93,    94,    95,    96,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,    -1,   115,    -1,
     117,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
     127,   128,    -1,    -1,   131,   132,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,    -1,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,    -1,   156,
      -1,   158,   159,   160,   161,    -1,   163,    -1,   165,    -1,
      -1,   168,   169,   170,   171,    -1,   173,    -1,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,    -1,
     187,   188,   189,   190,    -1,   192,   193,   194,   195,   196,
     197,    -1,   199,   200,   201,   202,   203,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,   214,   215,   216,
     217,   218,   219,   220,    -1,    -1,   223,   224,   225,    -1,
      -1,   228,   229,   230,    -1,    -1,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,    -1,   264,   265,    -1,
     267,    -1,   269,   270,   271,   272,   273,   274,    -1,   276,
     277,    -1,    -1,   280,   281,   282,    -1,    -1,   285,   286,
      -1,   288,    -1,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,    -1,   302,   303,   304,   305,   306,
     307,   308,   309,   310,    -1,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,    -1,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,    -1,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,    -1,   359,   360,   361,   362,   363,    -1,   365,   366,
     367,   368,   369,    -1,   371,   372,   373,   374,    -1,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,    -1,   390,   391,    -1,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,    -1,    -1,   405,   406,
     407,   408,   409,    -1,   411,   412,   413,   414,   415,   416,
     417,    -1,    -1,   420,   421,   422,   423,   424,    -1,    -1,
     427,   428,   429,   430,   431,   432,   433,    -1,   435,    -1,
     437,   438,   439,   440,    -1,    -1,   443,    -1,    -1,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
      -1,    -1,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   484,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      61,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    -1,    86,    87,    88,    89,    90,
      91,    -1,    93,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,    -1,   115,    -1,   117,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,   127,   128,    -1,    -1,
     131,   132,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,    -1,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,    -1,   156,    -1,   158,   159,   160,
     161,    -1,   163,    -1,   165,   166,    -1,   168,   169,   170,
     171,   172,   173,    -1,   175,    -1,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,   196,   197,    -1,   199,   200,
     201,   202,   203,   204,   205,   206,   207,    -1,   209,    -1,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,    -1,   223,   224,   225,   226,    -1,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,    -1,   264,   265,   266,   267,    -1,   269,   270,
     271,   272,   273,   274,    -1,   276,   277,    -1,   279,   280,
     281,   282,    -1,    -1,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
      -1,   302,   303,   304,   305,   306,   307,   308,   309,   310,
      -1,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,    -1,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,    -1,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,    -1,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,    -1,    -1,   405,   406,   407,   408,   409,    -1,
     411,   412,   413,   414,   415,   416,   417,    -1,    -1,   420,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,   430,
     431,   432,   433,    -1,   435,   436,   437,   438,   439,   440,
      -1,    -1,   443,    -1,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,    -1,     3,   469,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   483,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,    -1,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,    -1,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
     166,    -1,   168,   169,   170,   171,   172,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,   200,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,    -1,   223,   224,   225,
     226,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,    -1,   264,   265,
     266,   267,    -1,   269,   270,   271,   272,   273,   274,    -1,
     276,   277,    -1,   279,   280,   281,   282,    -1,    -1,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,    -1,   302,   303,   304,   305,
     306,   307,   308,   309,   310,    -1,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
      -1,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,    -1,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,    -1,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,    -1,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,    -1,   390,   391,    -1,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,    -1,    -1,   405,
     406,   407,   408,   409,    -1,   411,   412,   413,   414,   415,
     416,   417,    -1,    -1,   420,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,   430,   431,   432,   433,    -1,   435,
     436,   437,   438,   439,   440,    -1,    -1,   443,    -1,    -1,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,    -1,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   483,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      61,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    -1,    86,    87,    88,    89,    90,
      91,    -1,    93,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,    -1,   115,    -1,   117,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,   127,   128,    -1,    -1,
     131,   132,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,    -1,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,    -1,   156,    -1,   158,   159,   160,
     161,    -1,   163,    -1,   165,   166,    -1,   168,   169,   170,
     171,   172,   173,    -1,   175,    -1,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,   196,   197,    -1,   199,   200,
     201,   202,   203,   204,   205,   206,   207,    -1,   209,    -1,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
      -1,    -1,   223,   224,   225,   226,    -1,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,    -1,   264,   265,   266,   267,    -1,   269,   270,
     271,   272,   273,   274,    -1,   276,   277,    -1,    -1,   280,
     281,   282,    -1,    -1,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
      -1,   302,   303,   304,   305,   306,   307,   308,   309,   310,
      -1,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,    -1,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,    -1,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,    -1,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,    -1,   390,
     391,    -1,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,    -1,    -1,   405,   406,   407,   408,   409,    -1,
     411,   412,   413,   414,   415,   416,   417,    -1,    -1,   420,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,   430,
     431,   432,   433,    -1,   435,   436,   437,   438,   439,   440,
      -1,    -1,   443,    -1,    -1,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,    -1,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   483,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,    -1,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,    -1,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
     166,    -1,   168,   169,   170,   171,   172,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,   200,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,    -1,    -1,   223,   224,   225,
     226,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,    -1,   264,   265,
     266,   267,    -1,   269,   270,   271,   272,   273,   274,    -1,
     276,   277,    -1,    -1,   280,   281,   282,    -1,    -1,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,    -1,   302,   303,   304,   305,
     306,   307,   308,   309,   310,    -1,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
      -1,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,    -1,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,    -1,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,    -1,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,    -1,   390,   391,    -1,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,    -1,    -1,   405,
     406,   407,   408,   409,    -1,   411,   412,   413,   414,   415,
     416,   417,    -1,    -1,   420,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,   430,   431,   432,   433,    -1,   435,
     436,   437,   438,   439,   440,    -1,    -1,   443,    -1,    -1,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,    -1,     3,     4,     5,    -1,    -1,    -1,     9,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   483,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    -1,    86,    87,    88,    89,    90,
      91,    -1,    93,    94,    95,    96,    -1,    -1,    -1,   100,
      -1,    -1,    -1,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,    -1,   115,    -1,   117,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,   127,   128,    -1,    -1,
     131,   132,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,    -1,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,    -1,   158,   159,   160,
     161,    -1,   163,    -1,   165,   166,    -1,   168,   169,   170,
     171,   172,   173,    -1,   175,    -1,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,   196,   197,    -1,   199,   200,
     201,   202,   203,   204,   205,   206,   207,    -1,   209,    -1,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
      -1,    -1,   223,   224,   225,   226,    -1,   228,   229,   230,
      -1,    -1,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,    -1,   264,   265,   266,   267,    -1,   269,   270,
     271,   272,   273,   274,    -1,   276,   277,   278,    -1,   280,
     281,   282,    -1,    -1,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
      -1,   302,   303,   304,   305,   306,   307,   308,   309,   310,
      -1,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,    -1,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,    -1,   359,   360,
     361,   362,   363,    -1,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,    -1,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,    -1,   390,
     391,    -1,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,    -1,    -1,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,    -1,    -1,   420,
     421,   422,   423,   424,    -1,    -1,   427,   428,   429,   430,
     431,   432,   433,    -1,   435,   436,   437,   438,   439,   440,
      -1,    -1,   443,    -1,    -1,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,    -1,     3,    -1,    -1,
      -1,    -1,    -1,   474,   475,   476,    -1,    -1,    -1,    -1,
      -1,    -1,   483,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    31,    32,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    93,    94,    95,
      96,    -1,    -1,    -1,   100,    -1,    -1,    -1,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,    -1,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,    -1,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
     166,    -1,   168,   169,   170,   171,   172,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,   200,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,    -1,    -1,   223,   224,   225,
     226,    -1,   228,   229,   230,    -1,    -1,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,    -1,   264,   265,
     266,   267,    -1,   269,   270,   271,   272,   273,   274,    -1,
     276,   277,    -1,    -1,   280,   281,   282,    -1,    -1,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,    -1,   302,   303,   304,   305,
     306,   307,   308,   309,   310,    -1,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
      -1,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,    -1,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,    -1,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,    -1,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,    -1,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,    -1,   401,   402,    -1,    -1,   405,
     406,   407,   408,   409,    -1,   411,   412,   413,   414,   415,
     416,   417,    -1,    -1,   420,   421,   422,   423,   424,    -1,
      -1,   427,   428,   429,   430,   431,   432,   433,    -1,   435,
     436,   437,   438,   439,   440,    -1,    -1,   443,    -1,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,    -1,     3,   469,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   483,    19,    20,
      21,    22,    23,    24,    25,    26,    27,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      -1,    82,    83,    84,    -1,    86,    87,    88,    89,    90,
      91,    -1,    -1,    94,    95,    96,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,    -1,   115,    -1,   117,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,   127,   128,    -1,    -1,
     131,   132,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,    -1,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,    -1,   156,    -1,   158,   159,   160,
     161,    -1,   163,    -1,   165,    -1,    -1,    -1,   169,   170,
     171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,    -1,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,   196,   197,    -1,   199,    -1,
     201,   202,   203,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,   214,    -1,   216,   217,   218,   219,   220,
      -1,    -1,   223,    -1,   225,    -1,    -1,   228,   229,   230,
      -1,    -1,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,    -1,   258,   259,   260,
     261,   262,    -1,   264,   265,    -1,   267,    -1,   269,   270,
     271,   272,   273,   274,    -1,   276,   277,    -1,    -1,   280,
     281,   282,    -1,    -1,   285,   286,    -1,   288,    -1,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
      -1,   302,   303,   304,   305,   306,   307,   308,   309,   310,
      -1,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,    -1,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,    -1,   340,
     341,    -1,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,    -1,   365,   366,   367,   368,   369,    -1,
     371,   372,   373,   374,    -1,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,    -1,   390,
     391,   392,   393,    -1,   395,   396,   397,   398,   399,    -1,
     401,   402,    -1,    -1,   405,   406,   407,   408,   409,    -1,
     411,   412,   413,   414,   415,   416,   417,    -1,    -1,   420,
     421,   422,   423,   424,    -1,    -1,   427,   428,   429,   430,
     431,   432,   433,    -1,   435,    -1,   437,   438,   439,   440,
      -1,    -1,   443,    -1,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,    -1,     3,   469,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   483,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    -1,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    -1,    94,    95,
      96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,    -1,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,    -1,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
      -1,    -1,    -1,   169,   170,   171,    -1,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
      -1,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,    -1,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,    -1,
     216,   217,   218,   219,   220,    -1,    -1,   223,    -1,   225,
      -1,    -1,   228,   229,   230,    -1,    -1,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,    -1,   258,   259,   260,   261,   262,    -1,   264,   265,
      -1,   267,    -1,   269,   270,   271,   272,   273,   274,    -1,
     276,   277,    -1,    -1,   280,   281,   282,    -1,    -1,   285,
     286,    -1,   288,    -1,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,    -1,   302,   303,   304,   305,
     306,   307,   308,   309,   310,    -1,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
      -1,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,    -1,   340,   341,    -1,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,    -1,   365,
     366,   367,   368,   369,    -1,   371,   372,   373,   374,    -1,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,    -1,   390,   391,   392,   393,    -1,   395,
     396,   397,   398,   399,    -1,   401,   402,    -1,    -1,   405,
     406,   407,   408,   409,    -1,   411,   412,   413,   414,   415,
     416,   417,    -1,    -1,   420,   421,   422,   423,   424,    -1,
      -1,   427,   428,   429,   430,   431,   432,   433,    -1,   435,
      -1,   437,   438,   439,   440,    -1,    -1,   443,    -1,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,    -1,     3,   469,     5,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   483,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      -1,    82,    83,    84,    -1,    86,    87,    88,    89,    90,
      91,    -1,    -1,    94,    95,    96,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,    -1,   115,    -1,   117,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,   127,   128,    -1,    -1,
     131,   132,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,    -1,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,    -1,   156,    -1,   158,   159,   160,
     161,    -1,   163,    -1,   165,    -1,    -1,    -1,   169,   170,
     171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,    -1,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,   196,   197,    -1,   199,    -1,
     201,   202,   203,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,   214,    -1,   216,   217,   218,   219,   220,
      -1,    -1,   223,    -1,   225,    -1,    -1,   228,   229,   230,
      -1,    -1,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,    -1,   258,   259,   260,
     261,   262,    -1,   264,   265,    -1,   267,    -1,   269,   270,
     271,   272,   273,   274,    -1,   276,   277,    -1,    -1,   280,
     281,   282,    -1,    -1,   285,   286,    -1,   288,    -1,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
      -1,   302,   303,   304,   305,   306,   307,   308,   309,   310,
      -1,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,    -1,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,    -1,   340,
     341,    -1,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,    -1,   359,   360,
     361,   362,   363,    -1,   365,   366,   367,   368,   369,    -1,
     371,   372,   373,   374,    -1,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,    -1,   390,
     391,    -1,   393,    -1,   395,   396,   397,   398,   399,    -1,
     401,   402,    -1,    -1,   405,   406,   407,   408,   409,    -1,
     411,   412,   413,   414,   415,   416,   417,    -1,    -1,   420,
     421,   422,   423,   424,    -1,    -1,   427,   428,   429,   430,
     431,   432,   433,    -1,   435,    -1,   437,   438,   439,   440,
      -1,    -1,   443,    -1,    -1,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,    -1,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   483,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    -1,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    -1,    94,    95,
      96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,    -1,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,    -1,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
      -1,    -1,    -1,   169,   170,   171,    -1,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
      -1,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,    -1,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,    -1,
     216,   217,   218,   219,   220,    -1,    -1,   223,    -1,   225,
      -1,    -1,   228,   229,   230,    -1,    -1,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,    -1,   258,   259,   260,   261,   262,    -1,   264,   265,
      -1,   267,    -1,   269,   270,   271,   272,   273,   274,    -1,
     276,   277,    -1,    -1,   280,   281,   282,    -1,    -1,   285,
     286,    -1,   288,    -1,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,    -1,   302,   303,   304,   305,
     306,   307,   308,   309,   310,    -1,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
      -1,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,    -1,   340,   341,    -1,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,    -1,   359,   360,   361,   362,   363,    -1,   365,
     366,   367,   368,   369,    -1,   371,   372,   373,   374,    -1,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,    -1,   390,   391,    -1,   393,    -1,   395,
     396,   397,   398,   399,    -1,   401,   402,    -1,    -1,   405,
     406,   407,   408,   409,    -1,   411,   412,   413,   414,   415,
     416,   417,    -1,    -1,   420,   421,   422,   423,   424,    -1,
      -1,   427,   428,   429,   430,   431,   432,   433,    -1,   435,
      -1,   437,   438,   439,   440,    -1,    -1,   443,    -1,    -1,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,    -1,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   483,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      -1,    82,    83,    84,    -1,    86,    87,    88,    89,    90,
      91,    -1,    -1,    94,    95,    96,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,    -1,   115,    -1,   117,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,   127,   128,    -1,    -1,
     131,   132,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,    -1,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,    -1,   156,    -1,   158,   159,   160,
     161,    -1,   163,    -1,   165,    -1,    -1,    -1,   169,   170,
     171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,    -1,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,   196,   197,    -1,   199,    -1,
     201,   202,   203,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,   214,    -1,   216,   217,   218,   219,   220,
      -1,    -1,   223,    -1,   225,    -1,    -1,   228,   229,   230,
      -1,    -1,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,    -1,   258,   259,   260,
     261,   262,    -1,   264,   265,    -1,   267,    -1,   269,   270,
     271,   272,   273,   274,    -1,   276,   277,    -1,    -1,   280,
     281,   282,    -1,    -1,   285,   286,    -1,   288,    -1,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
      -1,   302,   303,   304,   305,   306,   307,   308,   309,   310,
      -1,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,    -1,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,    -1,   340,
     341,    -1,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,    -1,   359,   360,
     361,   362,   363,    -1,   365,   366,   367,   368,   369,    -1,
     371,   372,   373,   374,    -1,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,    -1,   390,
     391,    -1,   393,    -1,   395,   396,   397,   398,   399,    -1,
     401,   402,    -1,    -1,   405,   406,   407,   408,   409,    -1,
     411,   412,   413,   414,   415,   416,   417,    -1,    -1,   420,
     421,   422,   423,   424,    -1,    -1,   427,   428,   429,   430,
     431,   432,   433,    -1,   435,    -1,   437,   438,   439,   440,
      -1,    -1,   443,    -1,    -1,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,    -1,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   483,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    -1,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    -1,    94,    95,
      96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,    -1,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,    -1,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
      -1,    -1,    -1,   169,   170,   171,    -1,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
      -1,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,    -1,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,    -1,
     216,   217,   218,   219,   220,    -1,    -1,   223,    -1,   225,
      -1,    -1,   228,   229,   230,    -1,    -1,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,    -1,   258,   259,   260,   261,   262,    -1,   264,   265,
      -1,   267,    -1,   269,   270,   271,   272,   273,   274,    -1,
     276,   277,    -1,    -1,   280,   281,   282,    -1,    -1,   285,
     286,    -1,   288,    -1,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,    -1,   302,   303,   304,   305,
     306,   307,   308,   309,   310,    -1,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
      -1,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,    -1,   340,   341,    -1,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,    -1,   359,   360,   361,   362,   363,    -1,   365,
     366,   367,   368,   369,    -1,   371,   372,   373,   374,    -1,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,    -1,   390,   391,    -1,   393,    -1,   395,
     396,   397,   398,   399,    -1,   401,   402,    -1,    -1,   405,
     406,   407,   408,   409,    -1,   411,   412,   413,   414,   415,
     416,   417,    -1,    -1,   420,   421,   422,   423,   424,    -1,
      -1,   427,   428,   429,   430,   431,   432,   433,    -1,   435,
      -1,   437,   438,   439,   440,    -1,    -1,   443,    -1,    -1,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,    -1,    -1,    -1,    -1,     3,     4,     5,    -1,    -1,
       8,     9,    -1,    -1,    -1,    -1,    -1,   483,    16,    17,
      18,    19,    20,    21,    22,    23,    24,    25,    26,    27,
      28,    29,    30,    31,    32,    33,    34,    35,    36,    37,
      38,    39,    40,    41,    42,    43,    44,    45,    46,    47,
      -1,    49,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,    71,    -1,    73,    74,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    86,    87,
      88,    89,    90,    91,    92,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
     138,   139,   140,   141,   142,   143,   144,   145,   146,   147,
     148,    -1,   150,   151,   152,   153,    -1,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   169,   170,   171,   172,   173,   174,   175,   176,    -1,
     178,   179,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,    -1,   202,   203,   204,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,    -1,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,    -1,   287,
     288,   289,    -1,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,    -1,   305,   306,    -1,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,    -1,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
      -1,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,    -1,
     408,    -1,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,    -1,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   463,   464,   465,   466,    -1,
       3,    -1,   470,   471,   472,     8,   474,   475,   476,   477,
     478,   479,    -1,    16,    17,    18,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,    -1,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,   214,    -1,   216,   217,   218,   219,   220,    -1,    -1,
     223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,    -1,   258,   259,   260,   261,   262,
      -1,   264,   265,    -1,   267,    -1,   269,   270,   271,   272,
     273,   274,    -1,   276,   277,    -1,    -1,   280,   281,   282,
      -1,    -1,   285,   286,    -1,   288,    -1,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,    -1,   302,
     303,   304,   305,   306,   307,   308,   309,   310,    -1,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,   340,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,    -1,   359,   360,   361,   362,
     363,    -1,   365,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,    -1,   390,   391,    -1,
     393,    -1,   395,   396,   397,   398,   399,    -1,   401,   402,
      -1,    -1,   405,   406,   407,   408,   409,    -1,   411,   412,
     413,   414,   415,   416,   417,    -1,    -1,   420,   421,   422,
     423,   424,    -1,    -1,   427,   428,   429,   430,   431,   432,
     433,    -1,   435,    -1,   437,   438,   439,   440,    -1,    -1,
     443,    -1,    -1,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,    -1,    -1,    -1,   470,   471,   472,
      -1,   474,   475,   476,   477,   478,   479,     8,    -1,    -1,
      11,    -1,    -1,    -1,    15,    16,    17,    18,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    33,    -1,    -1,     8,    -1,    -1,    11,    -1,
      41,    -1,    15,    16,    17,    18,    -1,    48,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    41,    -1,
      -1,     8,    73,    -1,    11,    48,    -1,    -1,    15,    16,
      17,    18,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,     8,    33,    -1,    11,    -1,
      73,    -1,    15,    -1,    41,    -1,    -1,    -1,    -1,    -1,
      -1,    48,    -1,    -1,    -1,    -1,    -1,     8,    -1,    -1,
      11,    -1,    -1,    -1,    15,    16,    17,    18,    41,    -1,
      -1,    -1,    -1,    -1,    -1,    48,    73,    -1,    -1,    -1,
      -1,    -1,    33,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      41,    -1,    -1,    -1,    -1,     8,    -1,    48,    11,    -1,
      73,    -1,    15,    16,    17,    18,    -1,    -1,    -1,    -1,
      -1,   172,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      33,    -1,    73,    -1,    -1,   186,    -1,    -1,    41,    -1,
     191,    -1,    -1,    -1,    -1,    48,    -1,    -1,    -1,   172,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   212,   213,   186,    -1,    -1,    -1,    -1,   191,    -1,
      73,    -1,    -1,    -1,    -1,   226,    -1,    -1,    -1,   142,
      -1,    -1,    -1,    -1,    -1,   172,    -1,    -1,    -1,   212,
     213,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   186,
      -1,    -1,    -1,   226,   191,    -1,    -1,    -1,    -1,   172,
      -1,    -1,   263,    -1,    -1,   266,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   186,    -1,   212,   213,    -1,   191,   280,
      -1,   172,   283,    -1,    -1,    -1,    -1,    -1,    -1,   226,
     263,    -1,    -1,   266,    -1,   186,    -1,    -1,    -1,    -1,
     191,    -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,    -1,
     283,    -1,    -1,   226,    -1,    -1,    -1,    -1,    -1,   172,
      -1,   212,   213,    -1,    -1,    -1,   263,    -1,    -1,   266,
      -1,    -1,    -1,   186,    -1,   226,    -1,    -1,   191,    -1,
      -1,    -1,    -1,   280,    -1,    -1,   283,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   212,
     213,    -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,   370,
      -1,    -1,   263,   226,    -1,   266,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,
      -1,    -1,   283,    -1,    -1,    -1,    -1,   370,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     263,    -1,    -1,   266,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,    -1,
     283,    -1,    -1,   370,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   370,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   467,    -1,    -1,   470,
     471,   472,    -1,   474,   475,   476,   477,   478,   479,   370,
      -1,    -1,    -1,   484,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   467,    -1,    -1,   470,   471,   472,
      -1,   474,   475,   476,   477,   478,   479,    -1,    -1,    -1,
      -1,   484,    -1,    -1,    -1,    -1,    -1,   370,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     467,    -1,    -1,   470,   471,   472,    -1,   474,   475,   476,
     477,   478,   479,    -1,    -1,    -1,    -1,   484,    -1,    -1,
      -1,    -1,    -1,    -1,   467,    -1,    -1,    -1,    -1,    -1,
      -1,   474,   475,   476,   477,   478,   479,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   467,    -1,    -1,   470,
     471,   472,    -1,   474,   475,   476,   477,   478,   479,    -1,
      -1,    -1,    -1,   484,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   467,    -1,     3,   470,   471,   472,
      -1,   474,   475,   476,   477,   478,   479,    -1,    -1,    -1,
      -1,   484,    19,    20,    21,    22,    23,    24,    25,    26,
      27,    28,    29,    30,    31,    32,    33,    34,    35,    36,
      37,    38,    39,    40,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,    73,    74,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    86,
      87,    88,    89,    90,    91,    92,    93,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,   129,   130,   131,   132,   133,   134,   135,   136,
     137,   138,   139,   140,   141,   142,   143,   144,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   169,   170,   171,   172,   173,   174,   175,   176,
     177,   178,   179,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   210,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   476,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,    -1,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,   214,    -1,   216,   217,   218,   219,   220,    -1,    -1,
     223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,    -1,   258,   259,   260,   261,   262,
      -1,   264,   265,    -1,   267,    -1,   269,   270,   271,   272,
     273,   274,    -1,   276,   277,    -1,    -1,   280,   281,   282,
      -1,    -1,   285,   286,    -1,   288,    -1,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,    -1,   302,
     303,   304,   305,   306,   307,   308,   309,   310,    -1,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,   340,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,    -1,   359,   360,   361,   362,
     363,    -1,   365,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,    -1,   390,   391,    -1,
     393,    -1,   395,   396,   397,   398,   399,    -1,   401,   402,
      -1,    -1,   405,   406,   407,   408,   409,    -1,   411,   412,
     413,   414,   415,   416,   417,    -1,    -1,   420,   421,   422,
     423,   424,    -1,    -1,   427,   428,   429,   430,   431,   432,
     433,    -1,   435,    -1,   437,   438,   439,   440,    -1,    -1,
     443,    -1,    -1,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,     3,     4,     5,    -1,    -1,    -1,
       9,    -1,    -1,   476,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    74,    -1,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    -1,    86,    87,    88,
      89,    90,    91,    -1,    93,    94,    95,    96,    -1,    -1,
      -1,   100,    -1,    -1,    -1,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,    -1,   117,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,   127,   128,
      -1,    -1,   131,   132,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,    -1,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,    -1,   158,
     159,   160,   161,    -1,   163,    -1,   165,   166,    -1,   168,
     169,   170,   171,   172,   173,    -1,   175,    -1,   177,   178,
      -1,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,   193,   194,   195,   196,   197,    -1,
     199,   200,   201,   202,   203,   204,   205,   206,   207,    -1,
     209,    -1,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,    -1,    -1,   223,   224,   225,   226,    -1,   228,
     229,   230,    -1,    -1,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,    -1,   264,   265,   266,   267,    -1,
     269,   270,   271,   272,   273,   274,    -1,   276,   277,   278,
      -1,   280,   281,   282,    -1,    -1,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,    -1,   302,   303,   304,   305,   306,   307,   308,
     309,   310,    -1,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,    -1,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,    -1,
     359,   360,   361,   362,   363,    -1,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,    -1,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
      -1,   390,   391,    -1,   393,   394,   395,   396,   397,   398,
     399,    -1,   401,   402,    -1,    -1,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,    -1,
      -1,   420,   421,   422,   423,   424,    -1,    -1,   427,   428,
     429,   430,   431,   432,   433,    -1,   435,   436,   437,   438,
     439,   440,    -1,    -1,   443,    -1,    -1,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,     3,     4,
       5,    -1,    -1,    -1,     9,   474,   475,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    74,
      -1,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      -1,    86,    87,    88,    89,    90,    91,    -1,    93,    94,
      95,    96,    -1,    -1,    -1,   100,    -1,    -1,    -1,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,    -1,   117,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,   127,   128,    -1,    -1,   131,   132,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,    -1,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,    -1,   158,   159,   160,   161,    -1,   163,    -1,
     165,   166,    -1,   168,   169,   170,   171,   172,   173,    -1,
     175,    -1,   177,   178,    -1,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,   193,   194,
     195,   196,   197,    -1,   199,   200,   201,   202,   203,   204,
     205,   206,   207,    -1,   209,    -1,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,    -1,    -1,   223,   224,
     225,   226,    -1,   228,   229,   230,    -1,    -1,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,    -1,   264,
     265,   266,   267,    -1,   269,   270,   271,   272,   273,   274,
      -1,   276,   277,   278,    -1,   280,   281,   282,    -1,    -1,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,    -1,   302,   303,   304,
     305,   306,   307,   308,   309,   310,    -1,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,    -1,   359,   360,   361,   362,   363,    -1,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
      -1,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,    -1,   390,   391,    -1,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,    -1,    -1,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,    -1,    -1,   420,   421,   422,   423,   424,
      -1,    -1,   427,   428,   429,   430,   431,   432,   433,    -1,
     435,   436,   437,   438,   439,   440,    -1,    -1,   443,    -1,
      -1,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,     3,     4,     5,    -1,    -1,    -1,     9,   474,
     475,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    -1,    86,    87,    88,    89,    90,
      91,    -1,    93,    94,    95,    96,    -1,    -1,    -1,   100,
      -1,    -1,    -1,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,    -1,   115,    -1,   117,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,   127,   128,    -1,    -1,
     131,   132,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,    -1,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,    -1,   158,   159,   160,
     161,    -1,   163,    -1,   165,   166,    -1,   168,   169,   170,
     171,   172,   173,    -1,   175,    -1,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,   196,   197,    -1,   199,   200,
     201,   202,   203,   204,   205,   206,   207,    -1,   209,    -1,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
      -1,    -1,   223,   224,   225,   226,    -1,   228,   229,   230,
      -1,    -1,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,    -1,   264,   265,   266,   267,    -1,   269,   270,
     271,   272,   273,   274,    -1,   276,   277,   278,    -1,   280,
     281,   282,    -1,    -1,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
      -1,   302,   303,   304,   305,   306,   307,   308,   309,   310,
      -1,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,    -1,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,    -1,   359,   360,
     361,   362,   363,    -1,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,    -1,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,    -1,   390,
     391,    -1,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,    -1,    -1,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,    -1,    -1,   420,
     421,   422,   423,   424,    -1,    -1,   427,   428,   429,   430,
     431,   432,   433,    -1,   435,   436,   437,   438,   439,   440,
      -1,    -1,   443,    -1,    -1,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,    -1,    -1,     8,    -1,
      -1,    11,    -1,   474,   475,    15,    16,    17,    18,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    33,    -1,    -1,     8,    37,    -1,    11,
      -1,    41,    -1,    15,    16,    17,    18,    -1,    48,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    33,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    41,
      -1,    -1,    -1,    73,     8,    -1,    48,    11,    -1,    -1,
      -1,    15,    16,    17,    18,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,
      -1,    73,    -1,    -1,    -1,    -1,    -1,    41,    -1,    -1,
      -1,    -1,    -1,    -1,    48,    -1,    -1,    -1,     8,    -1,
      -1,    11,    -1,   123,    -1,    15,    16,    17,    18,    -1,
      -1,    -1,    -1,    -1,     8,    -1,    -1,    11,    -1,    73,
      -1,    15,    -1,    33,    -1,    -1,    36,    -1,    -1,    -1,
      -1,    41,    -1,    -1,    -1,    -1,     8,    -1,    48,    11,
      -1,    -1,    -1,    15,    16,    17,    18,    41,    -1,    -1,
      -1,    -1,   172,    -1,    48,    -1,    -1,    -1,    -1,    -1,
      -1,    33,    -1,    73,    -1,    -1,   186,    -1,    -1,    41,
     162,   191,    -1,    -1,    -1,   167,    48,    -1,    -1,    73,
     172,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   212,   213,   186,    -1,    -1,    -1,    -1,   191,
      -1,    73,    -1,    -1,    -1,    -1,   226,   161,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   172,    -1,
     212,   213,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   186,    -1,   226,    -1,    -1,   191,    -1,    -1,
      -1,    -1,    -1,   263,    -1,    -1,   266,    -1,   142,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   212,   213,
     280,    -1,   172,   283,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   263,   226,    -1,   266,    -1,   186,    -1,   172,    -1,
      -1,   191,    -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,
      -1,   283,   186,    -1,    -1,    -1,    -1,   191,    -1,    -1,
     172,    -1,   212,   213,    -1,    -1,    -1,    -1,    -1,   263,
      -1,    -1,   266,    -1,   186,    -1,   226,    -1,    -1,   191,
      -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,    -1,   283,
      -1,    -1,   226,    -1,    -1,    -1,     8,    -1,    -1,    11,
     212,   213,    -1,    15,    16,    17,    18,    -1,    -1,    -1,
     370,    -1,   306,   263,   226,    -1,   266,    -1,    -1,    -1,
      -1,    33,    -1,    -1,    36,    -1,    -1,    -1,    -1,    41,
     280,    -1,     8,   283,    -1,    11,    48,    -1,   370,    15,
      16,    17,    18,    -1,    -1,    -1,   280,    -1,    -1,    -1,
      -1,   263,    -1,    -1,   266,    -1,    -1,    33,    -1,    -1,
      -1,    73,    -1,    -1,    -1,    41,   426,    -1,   280,    -1,
      -1,   283,    48,    -1,    -1,    -1,   370,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   301,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    73,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   467,    -1,    -1,
     470,   471,   472,    -1,   474,   475,   476,   477,   478,   479,
     370,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   467,   370,    -1,   470,   471,
     472,    -1,   474,   475,   476,   477,   478,   479,    -1,    -1,
      -1,    -1,    -1,    -1,     8,    -1,    -1,    11,   370,    -1,
     172,    15,    16,    17,    18,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   467,   186,    -1,   470,   471,   472,   191,
     474,   475,   476,   477,   478,   479,    -1,    41,    -1,    -1,
      -1,   167,    -1,    -1,    48,    -1,   172,    -1,    -1,    -1,
     212,   213,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     186,    -1,    -1,    -1,   226,   191,    -1,   467,    -1,    73,
     470,   471,   472,    -1,   474,   475,   476,   477,   478,   479,
      -1,    -1,    -1,   467,    -1,    -1,   212,   213,    -1,    -1,
     474,   475,   476,   477,   478,   479,    -1,    -1,    -1,    -1,
     226,   263,    -1,    -1,   266,   467,    -1,    -1,   470,   471,
     472,    -1,   474,   475,   476,   477,   478,   479,   280,     8,
      -1,   283,    11,    -1,    -1,    -1,    15,    16,    17,    18,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   263,    -1,    -1,
     266,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    41,    -1,   280,     8,    21,   283,    11,    48,
      -1,    -1,    15,    16,    17,    18,    -1,    -1,   172,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      33,    -1,   186,    -1,    73,    -1,    -1,   191,    41,    -1,
      -1,    -1,    -1,     8,    -1,    48,    11,    -1,    -1,    -1,
      15,    16,    17,    18,    -1,    -1,    -1,    -1,   370,    74,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    -1,
      73,    -1,   226,    -1,    89,    -1,    41,    -1,    -1,     8,
      -1,    -1,    11,    48,    -1,    -1,    15,    16,    17,    18,
      -1,    -1,     8,    -1,   370,    11,    -1,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    73,    -1,
      -1,    -1,    41,    -1,    -1,    -1,    -1,    -1,    -1,    48,
      -1,    -1,    -1,    -1,    -1,    41,   280,    -1,   143,    -1,
      -1,    -1,    48,   172,    -1,    -1,    -1,   152,    -1,    -1,
      -1,    -1,    -1,    -1,    73,    -1,    -1,   186,    -1,   164,
      -1,    -1,   191,    -1,   169,   467,    -1,    73,   470,   471,
     472,    -1,   474,   475,   476,   477,   478,   479,    -1,   172,
      -1,    -1,    -1,   212,   213,    -1,    -1,    -1,    -1,   194,
      -1,    -1,    -1,   186,    -1,    -1,    -1,   226,   191,    -1,
      -1,   467,    -1,    -1,   470,   471,   472,    -1,   474,   475,
     476,   477,   478,   479,    -1,    -1,    -1,   172,    -1,   212,
     213,    -1,    -1,    -1,    -1,    -1,   370,    -1,    -1,    -1,
      -1,   186,   237,   226,   263,   240,   191,   266,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   280,    -1,   172,   283,    -1,    -1,   212,   213,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   172,   186,    -1,    -1,
     263,   226,   191,   266,    -1,    -1,    -1,    -1,    -1,    -1,
     186,    -1,    -1,    -1,    -1,   191,    -1,   280,    -1,    -1,
     283,    -1,    -1,   212,   213,    -1,    -1,    -1,   303,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   226,   263,    -1,
      -1,   266,   317,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     226,    -1,    -1,   467,    -1,   280,   470,   471,   472,    -1,
     474,   475,   476,   477,   478,   479,    -1,    -1,    -1,    -1,
      -1,   370,    -1,   348,   263,    -1,   351,   266,    -1,    -1,
      -1,    -1,    -1,    -1,   359,    -1,    -1,   362,    -1,    -1,
      -1,   280,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   400,    -1,    -1,   280,    -1,   381,   370,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   392,    -1,    -1,
      -1,    -1,    -1,    -1,   399,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   408,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   370,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   438,    -1,    -1,    -1,    -1,   467,    -1,
      -1,   470,   471,   472,    -1,   474,   475,   476,   477,   478,
     479,   370,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   370,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   467,    -1,    -1,   470,   471,   472,
      -1,   474,   475,   476,   477,   478,   479,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   467,    -1,    -1,   470,   471,   472,    -1,   474,
     475,   476,   477,   478,   479,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   467,    -1,
      -1,   470,   471,   472,    -1,   474,   475,   476,   477,   478,
     479,   467,     3,    -1,     5,    -1,    -1,    -1,   474,   475,
     476,   477,   478,   479,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    27,    28,    29,    30,
      31,    32,    33,    34,    35,    36,    37,    38,    39,    40,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,    73,    74,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    86,    87,    88,    89,    90,
      91,    92,    93,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   129,   130,
     131,   132,   133,   134,   135,   136,   137,   138,   139,   140,
     141,   142,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   169,   170,
     171,   172,   173,   174,   175,   176,   177,   178,   179,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      27,    28,    29,    30,    31,    32,    33,    34,    35,    36,
      37,    38,    39,    40,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,    73,    74,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    86,
      87,    88,    89,    90,    91,    92,    93,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,   129,   130,   131,   132,   133,   134,   135,   136,
     137,   138,   139,   140,   141,   142,   143,   144,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   169,   170,   171,   172,   173,   174,   175,   176,
     177,   178,   179,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   210,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    27,    28,    29,    30,    31,    32,
      33,    34,    35,    36,    37,    38,    39,    40,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
      73,    74,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    86,    87,    88,    89,    90,    91,    92,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   129,   130,   131,   132,
     133,   134,   135,   136,   137,   138,   139,   140,   141,   142,
     143,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   169,   170,   171,   172,
     173,   174,   175,   176,   177,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    61,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    74,    -1,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    -1,    86,    87,    88,
      89,    90,    91,    -1,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,    -1,   115,    -1,   117,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,   127,   128,
      -1,    -1,   131,   132,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,    -1,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,    -1,   156,    -1,   158,
     159,   160,   161,    -1,   163,    -1,   165,   166,    -1,   168,
     169,   170,   171,   172,   173,    -1,   175,    -1,   177,   178,
      -1,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,   193,   194,   195,   196,   197,    -1,
     199,   200,   201,   202,   203,   204,   205,   206,   207,    -1,
     209,    -1,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,    -1,    -1,   223,   224,   225,   226,    -1,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,    -1,   264,   265,   266,   267,    -1,
     269,   270,   271,   272,   273,   274,    -1,   276,   277,    -1,
      -1,   280,   281,   282,    -1,    -1,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,    -1,   302,   303,   304,   305,   306,   307,   308,
     309,   310,    -1,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,    -1,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
      -1,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,    -1,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,    -1,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
      -1,   390,   391,    -1,   393,   394,   395,   396,   397,   398,
     399,    -1,   401,   402,    -1,    -1,   405,   406,   407,   408,
     409,    -1,   411,   412,   413,   414,   415,   416,   417,    -1,
      -1,   420,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,   430,   431,   432,   433,    -1,   435,   436,   437,   438,
     439,   440,    -1,    -1,   443,    -1,    -1,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,     3,    -1,
       5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    74,
      -1,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      -1,    86,    87,    88,    89,    90,    91,    -1,    93,    94,
      95,    96,    -1,    -1,    -1,   100,    -1,    -1,    -1,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,    -1,
     115,    -1,   117,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,   127,   128,    -1,    -1,   131,   132,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,    -1,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,    -1,   158,   159,   160,   161,    -1,   163,    -1,
     165,   166,    -1,   168,   169,   170,   171,   172,   173,    -1,
     175,    -1,   177,   178,    -1,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,   193,   194,
     195,   196,   197,    -1,   199,   200,   201,   202,   203,   204,
     205,   206,   207,    -1,   209,    -1,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,    -1,    -1,   223,   224,
     225,   226,    -1,   228,   229,   230,    -1,    -1,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,    -1,   264,
     265,   266,   267,    -1,   269,   270,   271,   272,   273,   274,
      -1,   276,   277,   278,    -1,   280,   281,   282,    -1,    -1,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,    -1,   302,   303,   304,
     305,   306,   307,   308,   309,   310,    -1,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,    -1,   359,   360,   361,   362,   363,    -1,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
      -1,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,    -1,   390,   391,    -1,   393,   394,
     395,   396,   397,   398,   399,    -1,   401,   402,    -1,    -1,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,    -1,    -1,   420,   421,   422,   423,   424,
      -1,    -1,   427,   428,   429,   430,   431,   432,   433,    -1,
     435,   436,   437,   438,   439,   440,    -1,    -1,   443,    -1,
      -1,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      31,    32,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    -1,    86,    87,    88,    89,    90,
      91,    -1,    93,    94,    95,    96,    -1,    -1,    -1,   100,
      -1,    -1,    -1,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,    -1,   115,    -1,   117,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,   127,   128,    -1,    -1,
     131,   132,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,    -1,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,    -1,   156,    -1,   158,   159,   160,
     161,    -1,   163,    -1,   165,   166,    -1,   168,   169,   170,
     171,   172,   173,    -1,   175,    -1,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,   196,   197,    -1,   199,   200,
     201,   202,   203,   204,   205,   206,   207,    -1,   209,    -1,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
      -1,    -1,   223,   224,   225,   226,    -1,   228,   229,   230,
      -1,    -1,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,    -1,   264,   265,   266,   267,    -1,   269,   270,
     271,   272,   273,   274,    -1,   276,   277,    -1,    -1,   280,
     281,   282,    -1,    -1,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
      -1,   302,   303,   304,   305,   306,   307,   308,   309,   310,
      -1,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,    -1,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,    -1,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,    -1,   359,   360,
     361,   362,   363,    -1,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,    -1,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,    -1,   390,
     391,    -1,   393,   394,   395,   396,   397,   398,   399,    -1,
     401,   402,    -1,    -1,   405,   406,   407,   408,   409,    -1,
     411,   412,   413,   414,   415,   416,   417,    -1,    -1,   420,
     421,   422,   423,   424,    -1,    -1,   427,   428,   429,   430,
     431,   432,   433,    -1,   435,   436,   437,   438,   439,   440,
      -1,    -1,   443,    -1,    -1,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    74,    -1,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    -1,    86,
      87,    88,    89,    90,    91,    -1,    93,    94,    95,    96,
      -1,    -1,    -1,   100,    -1,    -1,    -1,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,    -1,   115,    -1,
     117,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
     127,   128,    -1,    -1,   131,   132,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,    -1,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,    -1,   156,
      -1,   158,   159,   160,   161,    -1,   163,    -1,   165,   166,
      -1,   168,   169,   170,   171,   172,   173,    -1,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,   193,   194,   195,   196,
     197,    -1,   199,   200,   201,   202,   203,   204,   205,   206,
     207,    -1,   209,    -1,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,    -1,    -1,   223,   224,   225,   226,
      -1,   228,   229,   230,    -1,    -1,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,    -1,   264,   265,   266,
     267,    -1,   269,   270,   271,   272,   273,   274,    -1,   276,
     277,    -1,    -1,   280,   281,   282,    -1,    -1,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,    -1,   302,   303,   304,   305,   306,
     307,   308,   309,   310,    -1,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,    -1,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,    -1,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,    -1,   359,   360,   361,   362,   363,    -1,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,    -1,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,    -1,   390,   391,    -1,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,    -1,    -1,   405,   406,
     407,   408,   409,    -1,   411,   412,   413,   414,   415,   416,
     417,    -1,    -1,   420,   421,   422,   423,   424,    -1,    -1,
     427,   428,   429,   430,   431,   432,   433,    -1,   435,   436,
     437,   438,   439,   440,    -1,    -1,   443,    -1,    -1,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
      -1,    -1,    75,    76,    77,    78,    79,    80,    -1,    82,
      83,    84,    85,    86,    87,    88,    89,    90,    91,    -1,
      -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,    -1,   156,    -1,   158,   159,   160,   161,    -1,
     163,   164,   165,    -1,    -1,    -1,   169,   170,   171,    -1,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,   214,    -1,   216,   217,   218,   219,   220,    -1,    -1,
     223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,    -1,   258,   259,   260,   261,   262,
      -1,   264,   265,    -1,   267,    -1,   269,   270,   271,   272,
     273,   274,    -1,   276,   277,    -1,    -1,   280,   281,   282,
      -1,    -1,   285,   286,    -1,   288,    -1,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,    -1,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,   340,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,    -1,   359,   360,   361,   362,
     363,    -1,   365,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,    -1,   390,   391,    -1,
     393,    -1,   395,   396,   397,   398,   399,    -1,   401,   402,
      -1,    -1,   405,   406,   407,   408,   409,    -1,   411,   412,
     413,   414,   415,   416,   417,    -1,   419,   420,   421,   422,
     423,   424,    -1,    -1,   427,   428,   429,   430,   431,   432,
     433,    -1,   435,    -1,   437,   438,   439,   440,    -1,    -1,
     443,    -1,    -1,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    -1,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    -1,    82,    83,    84,    85,    86,    87,    88,
      89,    90,    91,    -1,    -1,    94,    95,    96,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,    -1,   115,    -1,   117,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,   127,   128,
      -1,    -1,   131,   132,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,    -1,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,    -1,   156,    -1,   158,
     159,   160,   161,    -1,   163,   164,   165,    -1,    -1,    -1,
     169,   170,   171,    -1,   173,    -1,   175,    -1,   177,   178,
      -1,   180,   181,   182,   183,   184,   185,    -1,   187,   188,
     189,   190,    -1,   192,   193,   194,   195,   196,   197,    -1,
     199,    -1,   201,   202,   203,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,   218,
     219,   220,    -1,    -1,   223,    -1,   225,   226,    -1,   228,
     229,   230,    -1,    -1,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,    -1,   258,
     259,   260,   261,   262,    -1,   264,   265,    -1,   267,    -1,
     269,   270,   271,   272,   273,   274,    -1,   276,   277,    -1,
      -1,   280,   281,   282,    -1,    -1,   285,   286,    -1,   288,
      -1,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,    -1,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,    -1,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
      -1,   340,   341,    -1,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,    -1,
     359,   360,   361,   362,   363,    -1,   365,   366,   367,   368,
     369,    -1,   371,   372,   373,   374,    -1,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
      -1,   390,   391,    -1,   393,    -1,   395,   396,   397,   398,
     399,    -1,   401,   402,    -1,    -1,   405,   406,   407,   408,
     409,    -1,   411,   412,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,    -1,    -1,   427,   428,
     429,   430,   431,   432,   433,    -1,   435,    -1,   437,   438,
     439,   440,    -1,    -1,   443,    -1,    -1,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    31,    32,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    -1,    82,    83,    84,
      -1,    86,    87,    88,    89,    90,    91,    -1,    -1,    94,
      95,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,    -1,
     115,    -1,   117,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,   127,   128,    -1,    -1,   131,   132,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,    -1,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
      -1,   156,    -1,   158,   159,   160,   161,    -1,   163,    -1,
     165,    -1,    -1,    -1,   169,   170,   171,    -1,   173,    -1,
     175,    -1,   177,   178,    -1,   180,   181,   182,   183,   184,
     185,    -1,   187,   188,   189,   190,    -1,   192,   193,   194,
     195,   196,   197,    -1,   199,    -1,   201,   202,   203,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,
      -1,   216,   217,   218,   219,   220,    -1,    -1,   223,    -1,
     225,    -1,    -1,   228,   229,   230,    -1,    -1,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,    -1,   258,   259,   260,   261,   262,    -1,   264,
     265,    -1,   267,    -1,   269,   270,   271,   272,   273,   274,
      -1,   276,   277,    -1,    -1,   280,   281,   282,    -1,    -1,
     285,   286,    -1,   288,    -1,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,    -1,   302,   303,   304,
     305,   306,   307,   308,   309,   310,    -1,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,   340,   341,    -1,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,    -1,   359,   360,   361,   362,   363,    -1,
     365,   366,   367,   368,   369,    -1,   371,   372,   373,   374,
      -1,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,    -1,   390,   391,    -1,   393,    -1,
     395,   396,   397,   398,   399,    -1,   401,   402,    -1,    -1,
     405,   406,   407,   408,   409,    -1,   411,   412,   413,   414,
     415,   416,   417,    -1,    -1,   420,   421,   422,   423,   424,
      -1,    -1,   427,   428,   429,   430,   431,   432,   433,    -1,
     435,    -1,   437,   438,   439,   440,    -1,    -1,   443,    -1,
      -1,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,     3,     4,    -1,    -1,    -1,    -1,     9,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      -1,    82,    83,    84,    -1,    86,    87,    88,    89,    90,
      91,    -1,    -1,    94,    95,    96,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,    -1,   115,    -1,   117,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,   127,   128,    -1,    -1,
     131,   132,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,    -1,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,    -1,   156,    -1,   158,   159,   160,
     161,    -1,   163,    -1,   165,    -1,    -1,    -1,   169,   170,
     171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,    -1,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,   196,   197,    -1,   199,    -1,
     201,   202,   203,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,   214,    -1,   216,   217,   218,   219,   220,
      -1,    -1,   223,    -1,   225,    -1,    -1,   228,   229,   230,
      -1,    -1,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,    -1,   258,   259,   260,
     261,   262,    -1,   264,   265,    -1,   267,    -1,   269,   270,
     271,   272,   273,   274,    -1,   276,   277,    -1,    -1,   280,
     281,   282,    -1,    -1,   285,   286,    -1,   288,    -1,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
      -1,   302,   303,   304,   305,   306,   307,   308,   309,   310,
      -1,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,    -1,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,    -1,   340,
     341,    -1,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,    -1,   359,   360,
     361,   362,   363,    -1,   365,   366,   367,   368,   369,    -1,
     371,   372,   373,   374,    -1,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,    -1,   390,
     391,    -1,   393,    -1,   395,   396,   397,   398,   399,    -1,
     401,   402,    -1,    -1,   405,   406,   407,   408,   409,    -1,
     411,   412,   413,   414,   415,   416,   417,    -1,    -1,   420,
     421,   422,   423,   424,    -1,    -1,   427,   428,   429,   430,
     431,   432,   433,    -1,   435,    -1,   437,   438,   439,   440,
      -1,    -1,   443,    -1,    -1,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      27,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    -1,    82,    83,    84,    -1,    86,
      87,    88,    89,    90,    91,    -1,    -1,    94,    95,    96,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,    -1,   115,    -1,
     117,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
     127,   128,    -1,    -1,   131,   132,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,    -1,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,    -1,   156,
      -1,   158,   159,   160,   161,    -1,   163,    -1,   165,    -1,
      -1,    -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,    -1,
     187,   188,   189,   190,    -1,   192,   193,   194,   195,   196,
     197,    -1,   199,    -1,   201,   202,   203,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,
     217,   218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,
      -1,   228,   229,   230,    -1,    -1,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
      -1,   258,   259,   260,   261,   262,    -1,   264,   265,    -1,
     267,    -1,   269,   270,   271,   272,   273,   274,    -1,   276,
     277,    -1,    -1,   280,   281,   282,    -1,    -1,   285,   286,
      -1,   288,    -1,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,    -1,   302,   303,   304,   305,   306,
     307,   308,   309,   310,    -1,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,    -1,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,    -1,   340,   341,    -1,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,    -1,   359,   360,   361,   362,   363,    -1,   365,   366,
     367,   368,   369,    -1,   371,   372,   373,   374,    -1,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,    -1,   390,   391,    -1,   393,    -1,   395,   396,
     397,   398,   399,    -1,   401,   402,    -1,    -1,   405,   406,
     407,   408,   409,    -1,   411,   412,   413,   414,   415,   416,
     417,    -1,    -1,   420,   421,   422,   423,   424,    -1,    -1,
     427,   428,   429,   430,   431,   432,   433,    -1,   435,    -1,
     437,   438,   439,   440,    -1,    -1,   443,    -1,    -1,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,    -1,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,   214,    -1,   216,   217,   218,   219,   220,    -1,    -1,
     223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,    -1,   258,   259,   260,   261,   262,
      -1,   264,   265,    -1,   267,    -1,   269,   270,   271,   272,
     273,   274,    -1,   276,   277,    -1,    -1,   280,   281,   282,
      -1,    -1,   285,   286,    -1,   288,    -1,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,    -1,   302,
     303,   304,   305,   306,   307,   308,   309,   310,    -1,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,   340,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,    -1,   359,   360,   361,   362,
     363,    -1,   365,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,    -1,   390,   391,    -1,
     393,    -1,   395,   396,   397,   398,   399,    -1,   401,   402,
      -1,    -1,   405,   406,   407,   408,   409,    -1,   411,   412,
     413,   414,   415,   416,   417,    -1,    -1,   420,   421,   422,
     423,   424,    -1,    -1,   427,   428,   429,   430,   431,   432,
     433,    -1,   435,    -1,   437,   438,   439,   440,    -1,    -1,
     443,    -1,    -1,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    -1,    82,    83,    84,    -1,    86,    87,    88,
      89,    90,    91,    -1,    -1,    94,    95,    96,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,    -1,   115,    -1,   117,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,   127,   128,
      -1,    -1,   131,   132,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,    -1,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,    -1,   156,    -1,   158,
     159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,    -1,
     169,   170,   171,    -1,   173,    -1,   175,    -1,   177,   178,
      -1,   180,   181,   182,   183,   184,   185,    -1,   187,   188,
     189,   190,    -1,   192,   193,   194,   195,   196,   197,    -1,
     199,    -1,   201,   202,   203,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,   218,
     219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,   228,
     229,   230,    -1,    -1,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,    -1,   258,
     259,   260,   261,   262,    -1,   264,   265,    -1,   267,    -1,
     269,   270,   271,   272,   273,   274,    -1,   276,   277,    -1,
     279,   280,   281,   282,    -1,    -1,   285,   286,    -1,   288,
      -1,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,    -1,   302,   303,   304,   305,   306,   307,   308,
     309,   310,    -1,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,    -1,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
      -1,   340,   341,    -1,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,    -1,
     359,   360,   361,   362,   363,    -1,   365,   366,   367,   368,
     369,    -1,   371,   372,   373,   374,    -1,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
      -1,   390,   391,    -1,   393,    -1,   395,   396,   397,   398,
     399,    -1,   401,   402,    -1,    -1,   405,   406,   407,   408,
     409,    -1,   411,   412,   413,   414,   415,   416,   417,    -1,
      -1,   420,   421,   422,   423,   424,    -1,    -1,   427,   428,
     429,   430,   431,   432,   433,    -1,   435,    -1,   437,   438,
     439,   440,    -1,    -1,   443,    -1,    -1,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    -1,    82,    83,    84,
      -1,    86,    87,    88,    89,    90,    91,    -1,    -1,    94,
      95,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,    -1,
     115,    -1,   117,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,   127,   128,    -1,    -1,   131,   132,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,    -1,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
      -1,   156,    -1,   158,   159,   160,   161,    -1,   163,    -1,
     165,    -1,    -1,    -1,   169,   170,   171,    -1,   173,    -1,
     175,    -1,   177,   178,    -1,   180,   181,   182,   183,   184,
     185,    -1,   187,   188,   189,   190,    -1,   192,   193,   194,
     195,   196,   197,    -1,   199,    -1,   201,   202,   203,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,
      -1,   216,   217,   218,   219,   220,    -1,    -1,   223,    -1,
     225,    -1,    -1,   228,   229,   230,    -1,    -1,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,    -1,   258,   259,   260,   261,   262,    -1,   264,
     265,    -1,   267,    -1,   269,   270,   271,   272,   273,   274,
      -1,   276,   277,    -1,   279,   280,   281,   282,    -1,    -1,
     285,   286,    -1,   288,    -1,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,    -1,   302,   303,   304,
     305,   306,   307,   308,   309,   310,    -1,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,   340,   341,    -1,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,    -1,   359,   360,   361,   362,   363,    -1,
     365,   366,   367,   368,   369,    -1,   371,   372,   373,   374,
      -1,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,    -1,   390,   391,    -1,   393,    -1,
     395,   396,   397,   398,   399,    -1,   401,   402,    -1,    -1,
     405,   406,   407,   408,   409,    -1,   411,   412,   413,   414,
     415,   416,   417,    -1,    -1,   420,   421,   422,   423,   424,
      -1,    -1,   427,   428,   429,   430,   431,   432,   433,    -1,
     435,    -1,   437,   438,   439,   440,    -1,    -1,   443,    -1,
      -1,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    27,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      -1,    82,    83,    84,    -1,    86,    87,    88,    89,    90,
      91,    -1,    -1,    94,    95,    96,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,    -1,   115,    -1,   117,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,   127,   128,    -1,    -1,
     131,   132,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,    -1,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,    -1,   156,    -1,   158,   159,   160,
     161,    -1,   163,    -1,   165,    -1,    -1,    -1,   169,   170,
     171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,    -1,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,   196,   197,    -1,   199,    -1,
     201,   202,   203,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,   214,    -1,   216,   217,   218,   219,   220,
      -1,    -1,   223,    -1,   225,    -1,    -1,   228,   229,   230,
      -1,    -1,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,    -1,   258,   259,   260,
     261,   262,    -1,   264,   265,    -1,   267,    -1,   269,   270,
     271,   272,   273,   274,    -1,   276,   277,    -1,    -1,   280,
     281,   282,    -1,    -1,   285,   286,    -1,   288,    -1,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
      -1,   302,   303,   304,   305,   306,   307,   308,   309,   310,
      -1,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,    -1,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,    -1,   340,
     341,    -1,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,    -1,   359,   360,
     361,   362,   363,    -1,   365,   366,   367,   368,   369,    -1,
     371,   372,   373,   374,    -1,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,    -1,   390,
     391,    -1,   393,    -1,   395,   396,   397,   398,   399,    -1,
     401,   402,    -1,    -1,   405,   406,   407,   408,   409,    -1,
     411,   412,   413,   414,   415,   416,   417,    -1,    -1,   420,
     421,   422,   423,   424,    -1,    -1,   427,   428,   429,   430,
     431,   432,   433,    -1,   435,    -1,   437,   438,   439,   440,
      -1,    -1,   443,    -1,    -1,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    -1,    82,    83,    84,    -1,    86,
      87,    88,    89,    90,    91,    -1,    -1,    94,    95,    96,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,    -1,   115,    -1,
     117,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
     127,   128,    -1,    -1,   131,   132,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,    -1,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,    -1,   156,
      -1,   158,   159,   160,   161,    -1,   163,    -1,   165,    -1,
      -1,    -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,    -1,
     187,   188,   189,   190,    -1,   192,   193,   194,   195,   196,
     197,    -1,   199,    -1,   201,   202,   203,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,
     217,   218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,
      -1,   228,   229,   230,    -1,    -1,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
      -1,   258,   259,   260,   261,   262,    -1,   264,   265,    -1,
     267,    -1,   269,   270,   271,   272,   273,   274,    -1,   276,
     277,    -1,    -1,   280,   281,   282,    -1,    -1,   285,   286,
      -1,   288,    -1,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,    -1,   302,   303,   304,   305,   306,
     307,   308,   309,   310,    -1,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,    -1,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,    -1,   340,   341,    -1,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,    -1,   359,   360,   361,   362,   363,    -1,   365,   366,
     367,   368,   369,    -1,   371,   372,   373,   374,    -1,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,    -1,   390,   391,   392,   393,    -1,   395,   396,
     397,   398,   399,    -1,   401,   402,    -1,    -1,   405,   406,
     407,   408,   409,    -1,   411,   412,   413,   414,   415,   416,
     417,    -1,    -1,   420,   421,   422,   423,   424,    -1,    -1,
     427,   428,   429,   430,   431,   432,   433,    -1,   435,    -1,
     437,   438,   439,   440,    -1,    -1,   443,    -1,    -1,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    36,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,    -1,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,   214,    -1,   216,   217,   218,   219,   220,    -1,    -1,
     223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,    -1,   258,   259,   260,   261,   262,
      -1,   264,   265,    -1,   267,    -1,   269,   270,   271,   272,
     273,   274,    -1,   276,   277,    -1,    -1,   280,   281,   282,
      -1,    -1,   285,   286,    -1,   288,    -1,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,    -1,   302,
     303,   304,   305,   306,   307,   308,   309,   310,    -1,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,   340,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,    -1,   359,   360,   361,   362,
     363,    -1,   365,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,    -1,   390,   391,    -1,
     393,    -1,   395,   396,   397,   398,   399,    -1,   401,   402,
      -1,    -1,   405,   406,   407,   408,   409,    -1,   411,   412,
     413,   414,   415,   416,   417,    -1,    -1,   420,   421,   422,
     423,   424,    -1,    -1,   427,   428,   429,   430,   431,   432,
     433,    -1,   435,    -1,   437,   438,   439,   440,    -1,    -1,
     443,    -1,    -1,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    36,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    -1,    82,    83,    84,    -1,    86,    87,    88,
      89,    90,    91,    -1,    -1,    94,    95,    96,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,    -1,   115,    -1,   117,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,   127,   128,
      -1,    -1,   131,   132,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,    -1,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,    -1,   156,    -1,   158,
     159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,    -1,
     169,   170,   171,    -1,   173,    -1,   175,    -1,   177,   178,
      -1,   180,   181,   182,   183,   184,   185,    -1,   187,   188,
     189,   190,    -1,   192,   193,   194,   195,   196,   197,    -1,
     199,    -1,   201,   202,   203,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,   218,
     219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,   228,
     229,   230,    -1,    -1,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,    -1,   258,
     259,   260,   261,   262,    -1,   264,   265,    -1,   267,    -1,
     269,   270,   271,   272,   273,   274,    -1,   276,   277,    -1,
      -1,   280,   281,   282,    -1,    -1,   285,   286,    -1,   288,
      -1,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,    -1,   302,   303,   304,   305,   306,   307,   308,
     309,   310,    -1,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,    -1,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
      -1,   340,   341,    -1,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,    -1,
     359,   360,   361,   362,   363,    -1,   365,   366,   367,   368,
     369,    -1,   371,   372,   373,   374,    -1,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
      -1,   390,   391,    -1,   393,    -1,   395,   396,   397,   398,
     399,    -1,   401,   402,    -1,    -1,   405,   406,   407,   408,
     409,    -1,   411,   412,   413,   414,   415,   416,   417,    -1,
      -1,   420,   421,   422,   423,   424,    -1,    -1,   427,   428,
     429,   430,   431,   432,   433,    -1,   435,    -1,   437,   438,
     439,   440,    -1,    -1,   443,    -1,    -1,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,     3,    -1,
       5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    -1,    82,    83,    84,
      -1,    86,    87,    88,    89,    90,    91,    -1,    -1,    94,
      95,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,    -1,
     115,    -1,   117,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,   127,   128,    -1,    -1,   131,   132,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,    -1,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
      -1,   156,    -1,   158,   159,   160,   161,    -1,   163,    -1,
     165,    -1,    -1,    -1,   169,   170,   171,    -1,   173,    -1,
     175,    -1,   177,   178,    -1,   180,   181,   182,   183,   184,
     185,    -1,   187,   188,   189,   190,    -1,   192,   193,   194,
     195,   196,   197,    -1,   199,    -1,   201,   202,   203,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,
      -1,   216,   217,   218,   219,   220,    -1,    -1,   223,    -1,
     225,    -1,    -1,   228,   229,   230,    -1,    -1,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,    -1,   258,   259,   260,   261,   262,    -1,   264,
     265,    -1,   267,    -1,   269,   270,   271,   272,   273,   274,
      -1,   276,   277,    -1,    -1,   280,   281,   282,    -1,    -1,
     285,   286,    -1,   288,    -1,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,    -1,   302,   303,   304,
     305,   306,   307,   308,   309,   310,    -1,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,   340,   341,    -1,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,    -1,   359,   360,   361,   362,   363,    -1,
     365,   366,   367,   368,   369,    -1,   371,   372,   373,   374,
      -1,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,    -1,   390,   391,    -1,   393,    -1,
     395,   396,   397,   398,   399,    -1,   401,   402,    -1,    -1,
     405,   406,   407,   408,   409,    -1,   411,   412,   413,   414,
     415,   416,   417,    -1,    -1,   420,   421,   422,   423,   424,
      -1,    -1,   427,   428,   429,   430,   431,   432,   433,    -1,
     435,    -1,   437,   438,   439,   440,    -1,    -1,   443,    -1,
      -1,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      -1,    82,    83,    84,    -1,    86,    87,    88,    89,    90,
      91,    -1,    -1,    94,    95,    96,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,    -1,   115,    -1,   117,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,   127,   128,    -1,    -1,
     131,   132,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,    -1,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,    -1,   156,    -1,   158,   159,   160,
     161,    -1,   163,    -1,   165,    -1,    -1,    -1,   169,   170,
     171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,    -1,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,   196,   197,    -1,   199,    -1,
     201,   202,   203,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,   214,    -1,   216,   217,   218,   219,   220,
      -1,    -1,   223,    -1,   225,    -1,    -1,   228,   229,   230,
      -1,    -1,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,    -1,   258,   259,   260,
     261,   262,    -1,   264,   265,    -1,   267,    -1,   269,   270,
     271,   272,   273,   274,    -1,   276,   277,    -1,    -1,   280,
     281,   282,    -1,    -1,   285,   286,    -1,   288,    -1,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
      -1,   302,   303,   304,   305,   306,   307,   308,   309,   310,
      -1,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,    -1,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,    -1,   340,
     341,    -1,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,    -1,   359,   360,
     361,   362,   363,    -1,   365,   366,   367,   368,   369,    -1,
     371,   372,   373,   374,    -1,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,    -1,   390,
     391,    -1,   393,    -1,   395,   396,   397,   398,   399,    -1,
     401,   402,    -1,    -1,   405,   406,   407,   408,   409,    -1,
     411,   412,   413,   414,   415,   416,   417,    -1,    -1,   420,
     421,   422,   423,   424,    -1,    -1,   427,   428,   429,   430,
     431,   432,   433,    -1,   435,    -1,   437,   438,   439,   440,
      -1,    -1,   443,    -1,    -1,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    -1,    82,    83,    84,    -1,    86,
      87,    88,    89,    90,    91,    -1,    -1,    94,    95,    96,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,    -1,   115,    -1,
     117,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
     127,   128,    -1,    -1,   131,   132,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,    -1,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,    -1,   156,
      -1,   158,   159,   160,   161,    -1,   163,    -1,   165,    -1,
      -1,    -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,    -1,
     187,   188,   189,   190,    -1,   192,   193,   194,   195,   196,
     197,    -1,   199,    -1,   201,   202,   203,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,
     217,   218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,
      -1,   228,   229,   230,    -1,    -1,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
      -1,   258,   259,   260,   261,   262,    -1,   264,   265,    -1,
     267,    -1,   269,   270,   271,   272,   273,   274,    -1,   276,
     277,    -1,    -1,   280,   281,   282,    -1,    -1,   285,   286,
      -1,   288,    -1,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,    -1,   302,   303,   304,   305,   306,
     307,   308,   309,   310,    -1,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,    -1,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,    -1,   340,   341,    -1,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,    -1,   359,   360,   361,   362,   363,    -1,   365,   366,
     367,   368,   369,    -1,   371,   372,   373,   374,    -1,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,    -1,   390,   391,    -1,   393,    -1,   395,   396,
     397,   398,   399,    -1,   401,   402,    -1,    -1,   405,   406,
     407,   408,   409,    -1,   411,   412,   413,   414,   415,   416,
     417,    -1,    -1,   420,   421,   422,   423,   424,    -1,    -1,
     427,   428,   429,   430,   431,   432,   433,    -1,   435,    -1,
     437,   438,   439,   440,    -1,    -1,   443,    -1,    -1,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,    -1,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,   214,    -1,   216,   217,   218,   219,   220,    -1,    -1,
     223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,    -1,   258,   259,   260,   261,   262,
      -1,   264,   265,    -1,   267,    -1,   269,   270,   271,   272,
     273,   274,    -1,   276,   277,    -1,    -1,   280,   281,   282,
      -1,    -1,   285,   286,    -1,   288,    -1,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,    -1,   302,
     303,   304,   305,   306,   307,   308,   309,   310,    -1,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,   340,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,    -1,   359,   360,   361,   362,
     363,    -1,   365,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,    -1,   390,   391,    -1,
     393,    -1,   395,   396,   397,   398,   399,    -1,   401,   402,
      -1,    -1,   405,   406,   407,   408,   409,    -1,   411,   412,
     413,   414,   415,   416,   417,    -1,    -1,   420,   421,   422,
     423,   424,    -1,    -1,   427,   428,   429,   430,   431,   432,
     433,    -1,   435,    -1,   437,   438,   439,   440,    -1,    -1,
     443,    -1,    -1,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    -1,    82,    83,    84,    -1,    86,    87,    88,
      89,    90,    91,    -1,    -1,    94,    95,    96,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,    -1,   115,    -1,   117,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,   127,   128,
      -1,    -1,   131,   132,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,    -1,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,    -1,   156,    -1,   158,
     159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,    -1,
     169,   170,   171,    -1,   173,    -1,   175,    -1,   177,   178,
      -1,   180,   181,   182,   183,   184,   185,    -1,   187,   188,
     189,   190,    -1,   192,   193,   194,   195,   196,   197,    -1,
     199,    -1,   201,   202,   203,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,   218,
     219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,   228,
     229,   230,    -1,    -1,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,    -1,   258,
     259,   260,   261,   262,    -1,   264,   265,    -1,   267,    -1,
     269,   270,   271,   272,   273,   274,    -1,   276,   277,    -1,
      -1,   280,   281,   282,    -1,    -1,   285,   286,    -1,   288,
      -1,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,    -1,   302,   303,   304,   305,   306,   307,   308,
     309,   310,    -1,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,    -1,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
      -1,   340,   341,    -1,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,    -1,
     359,   360,   361,   362,   363,    -1,   365,   366,   367,   368,
     369,    -1,   371,   372,   373,   374,    -1,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
      -1,   390,   391,    -1,   393,    -1,   395,   396,   397,   398,
     399,    -1,   401,   402,    -1,    -1,   405,   406,   407,   408,
     409,    -1,   411,   412,   413,   414,   415,   416,   417,    -1,
      -1,   420,   421,   422,   423,   424,    -1,    -1,   427,   428,
     429,   430,   431,   432,   433,    -1,   435,    -1,   437,   438,
     439,   440,    -1,    -1,   443,    -1,    -1,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    -1,    82,    83,    84,
      -1,    86,    87,    88,    89,    90,    91,    -1,    -1,    94,
      95,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,    -1,
     115,    -1,   117,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,   127,   128,    -1,    -1,   131,   132,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,    -1,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
      -1,   156,    -1,   158,   159,   160,   161,    -1,   163,    -1,
     165,    -1,    -1,    -1,   169,   170,   171,    -1,   173,    -1,
     175,    -1,   177,   178,    -1,   180,   181,   182,   183,   184,
     185,    -1,   187,   188,   189,   190,    -1,   192,   193,   194,
     195,   196,   197,    -1,   199,    -1,   201,   202,   203,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,
      -1,   216,   217,   218,   219,   220,    -1,    -1,   223,    -1,
     225,    -1,    -1,   228,   229,   230,    -1,    -1,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,    -1,   258,   259,   260,   261,   262,    -1,   264,
     265,    -1,   267,    -1,   269,   270,   271,   272,   273,   274,
      -1,   276,   277,    -1,    -1,   280,   281,   282,    -1,    -1,
     285,   286,    -1,   288,    -1,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,    -1,   302,   303,   304,
     305,   306,   307,   308,   309,   310,    -1,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,   340,   341,    -1,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,    -1,   359,   360,   361,   362,   363,    -1,
     365,   366,   367,   368,   369,    -1,   371,   372,   373,   374,
      -1,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,    -1,   390,   391,    -1,   393,    -1,
     395,   396,   397,   398,   399,    -1,   401,   402,    -1,    -1,
     405,   406,   407,   408,   409,    -1,   411,   412,   413,   414,
     415,   416,   417,    -1,    -1,   420,   421,   422,   423,   424,
      -1,    -1,   427,   428,   429,   430,   431,   432,   433,    -1,
     435,    -1,   437,   438,   439,   440,    -1,    -1,   443,    -1,
      -1,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      -1,    82,    83,    84,    -1,    86,    87,    88,    89,    90,
      91,    -1,    -1,    94,    95,    96,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,    -1,   115,    -1,   117,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,   127,   128,    -1,    -1,
     131,   132,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,    -1,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,    -1,   156,    -1,   158,   159,   160,
     161,    -1,   163,    -1,   165,    -1,    -1,    -1,   169,   170,
     171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,    -1,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,   196,   197,    -1,   199,    -1,
     201,   202,   203,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,   214,    -1,   216,   217,   218,   219,   220,
      -1,    -1,   223,    -1,   225,    -1,    -1,   228,   229,   230,
      -1,    -1,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,    -1,   258,   259,   260,
     261,   262,    -1,   264,   265,    -1,   267,    -1,   269,   270,
     271,   272,   273,   274,    -1,   276,   277,    -1,    -1,   280,
     281,   282,    -1,    -1,   285,   286,    -1,   288,    -1,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
      -1,   302,   303,   304,   305,   306,   307,   308,   309,   310,
      -1,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,    -1,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,    -1,   340,
     341,    -1,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,    -1,   359,   360,
     361,   362,   363,    -1,   365,   366,   367,   368,   369,    -1,
     371,   372,   373,   374,    -1,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,    -1,   390,
     391,    -1,   393,    -1,   395,   396,   397,   398,   399,    -1,
     401,   402,    -1,    -1,   405,   406,   407,   408,   409,    -1,
     411,   412,   413,   414,   415,   416,   417,    -1,    -1,   420,
     421,   422,   423,   424,    -1,    -1,   427,   428,   429,   430,
     431,   432,   433,    -1,   435,    -1,   437,   438,   439,   440,
      -1,    -1,   443,    -1,    -1,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    -1,    82,    83,    84,    -1,    86,
      87,    88,    89,    90,    91,    -1,    -1,    94,    95,    96,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,    -1,   115,    -1,
     117,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
     127,   128,    -1,    -1,   131,   132,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,    -1,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,    -1,   156,
      -1,   158,   159,   160,   161,    -1,   163,    -1,   165,    -1,
      -1,    -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,    -1,
     187,   188,   189,   190,    -1,   192,   193,   194,   195,   196,
     197,    -1,   199,    -1,   201,   202,   203,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,
     217,   218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,
      -1,   228,   229,   230,    -1,    -1,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
      -1,   258,   259,   260,   261,   262,    -1,   264,   265,    -1,
     267,    -1,   269,   270,   271,   272,   273,   274,    -1,   276,
     277,    -1,    -1,   280,   281,   282,    -1,    -1,   285,   286,
      -1,   288,    -1,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,    -1,   302,   303,   304,   305,   306,
     307,   308,   309,   310,    -1,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,    -1,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,    -1,   340,   341,    -1,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,    -1,   359,   360,   361,   362,   363,    -1,   365,   366,
     367,   368,   369,    -1,   371,   372,   373,   374,    -1,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,    -1,   390,   391,    -1,   393,    -1,   395,   396,
     397,   398,   399,    -1,   401,   402,    -1,    -1,   405,   406,
     407,   408,   409,    -1,   411,   412,   413,   414,   415,   416,
     417,    -1,    -1,   420,   421,   422,   423,   424,    -1,    -1,
     427,   428,   429,   430,   431,   432,   433,    -1,   435,    -1,
     437,   438,   439,   440,    -1,    -1,   443,    -1,    -1,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,    -1,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,   214,    -1,   216,   217,   218,   219,   220,    -1,    -1,
     223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,    -1,   258,   259,   260,   261,   262,
      -1,   264,   265,    -1,   267,    -1,   269,   270,   271,   272,
     273,   274,    -1,   276,   277,    -1,    -1,   280,   281,   282,
      -1,    -1,   285,   286,    -1,   288,    -1,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,    -1,   302,
     303,   304,   305,   306,   307,   308,   309,   310,    -1,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,   340,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,    -1,   359,   360,   361,   362,
     363,    -1,   365,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,    -1,   390,   391,    -1,
     393,    -1,   395,   396,   397,   398,   399,    -1,   401,   402,
      -1,    -1,   405,   406,   407,   408,   409,    -1,   411,   412,
     413,   414,   415,   416,   417,    -1,    -1,   420,   421,   422,
     423,   424,    -1,    -1,   427,   428,   429,   430,   431,   432,
     433,    -1,   435,    -1,   437,   438,   439,   440,    -1,    -1,
     443,    -1,    -1,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    -1,    82,    83,    84,    -1,    86,    87,    88,
      89,    90,    91,    -1,    -1,    94,    95,    96,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,    -1,   115,    -1,   117,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,   127,   128,
      -1,    -1,   131,   132,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,    -1,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,    -1,   156,    -1,   158,
     159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,    -1,
     169,   170,   171,    -1,   173,    -1,   175,    -1,   177,   178,
      -1,   180,   181,   182,   183,   184,   185,    -1,   187,   188,
     189,   190,    -1,   192,   193,   194,   195,   196,   197,    -1,
     199,    -1,   201,   202,   203,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,   218,
     219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,   228,
     229,   230,    -1,    -1,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,    -1,   258,
     259,   260,   261,   262,    -1,   264,   265,    -1,   267,    -1,
     269,   270,   271,   272,   273,   274,    -1,   276,   277,    -1,
      -1,   280,   281,   282,    -1,    -1,   285,   286,    -1,   288,
      -1,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,    -1,   302,   303,   304,   305,   306,   307,   308,
     309,   310,    -1,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,    -1,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
      -1,   340,   341,    -1,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,    -1,
     359,   360,   361,   362,   363,    -1,   365,   366,   367,   368,
     369,    -1,   371,   372,   373,   374,    -1,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
      -1,   390,   391,    -1,   393,    -1,   395,   396,   397,   398,
     399,    -1,   401,   402,    -1,    -1,   405,   406,   407,   408,
     409,    -1,   411,   412,   413,   414,   415,   416,   417,    -1,
      -1,   420,   421,   422,   423,   424,    -1,    -1,   427,   428,
     429,   430,   431,   432,   433,    -1,   435,    -1,   437,   438,
     439,   440,    -1,    -1,   443,    -1,    -1,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    -1,    82,    83,    84,
      -1,    86,    87,    88,    89,    90,    91,    -1,    -1,    94,
      95,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,    -1,
     115,    -1,   117,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,   127,   128,    -1,    -1,   131,   132,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,    -1,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
      -1,   156,    -1,   158,   159,   160,   161,    -1,   163,    -1,
     165,    -1,    -1,    -1,   169,   170,   171,    -1,   173,    -1,
     175,    -1,   177,   178,    -1,   180,   181,   182,   183,   184,
     185,    -1,   187,   188,   189,   190,    -1,   192,   193,   194,
     195,   196,   197,    -1,   199,    -1,   201,   202,   203,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,
      -1,   216,   217,   218,   219,   220,    -1,    -1,   223,    -1,
     225,    -1,    -1,   228,   229,   230,    -1,    -1,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,    -1,   258,   259,   260,   261,   262,    -1,   264,
     265,    -1,   267,    -1,   269,   270,   271,   272,   273,   274,
      -1,   276,   277,    -1,    -1,   280,   281,   282,    -1,    -1,
     285,   286,    -1,   288,    -1,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,    -1,   302,   303,   304,
     305,   306,   307,   308,   309,   310,    -1,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,   340,   341,    -1,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,    -1,   359,   360,   361,   362,   363,    -1,
     365,   366,   367,   368,   369,    -1,   371,   372,   373,   374,
      -1,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,    -1,   390,   391,    -1,   393,    -1,
     395,   396,   397,   398,   399,    -1,   401,   402,    -1,    -1,
     405,   406,   407,   408,   409,    -1,   411,   412,   413,   414,
     415,   416,   417,    -1,    -1,   420,   421,   422,   423,   424,
      -1,    -1,   427,   428,   429,   430,   431,   432,   433,    -1,
     435,    -1,   437,   438,   439,   440,    -1,    -1,   443,    -1,
      -1,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      -1,    82,    83,    84,    -1,    86,    87,    88,    89,    90,
      91,    -1,    -1,    94,    95,    96,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,    -1,   115,    -1,   117,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,   127,   128,    -1,    -1,
     131,   132,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,    -1,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,    -1,   156,    -1,   158,   159,   160,
     161,    -1,   163,    -1,   165,    -1,    -1,    -1,   169,   170,
     171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,    -1,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,   196,   197,    -1,   199,    -1,
     201,   202,   203,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,   214,    -1,   216,   217,   218,   219,   220,
      -1,    -1,   223,    -1,   225,    -1,    -1,   228,   229,   230,
      -1,    -1,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,    -1,   258,   259,   260,
     261,   262,    -1,   264,   265,    -1,   267,    -1,   269,   270,
     271,   272,   273,   274,    -1,   276,   277,    -1,    -1,   280,
     281,   282,    -1,    -1,   285,   286,    -1,   288,    -1,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
      -1,   302,   303,   304,   305,   306,   307,   308,   309,   310,
      -1,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,    -1,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,    -1,   340,
     341,    -1,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,    -1,   359,   360,
     361,   362,   363,    -1,   365,   366,   367,   368,   369,    -1,
     371,   372,   373,   374,    -1,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,    -1,   390,
     391,    -1,   393,    -1,   395,   396,   397,   398,   399,    -1,
     401,   402,    -1,    -1,   405,   406,   407,   408,   409,    -1,
     411,   412,   413,   414,   415,   416,   417,    -1,    -1,   420,
     421,   422,   423,   424,    -1,    -1,   427,   428,   429,   430,
     431,   432,   433,    -1,   435,    -1,   437,   438,   439,   440,
      -1,    -1,   443,    -1,    -1,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    -1,    82,    83,    84,    -1,    86,
      87,    88,    89,    90,    91,    -1,    -1,    94,    95,    96,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,    -1,   115,    -1,
     117,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
     127,   128,    -1,    -1,   131,   132,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,    -1,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,    -1,   156,
      -1,   158,   159,   160,   161,    -1,   163,    -1,   165,    -1,
      -1,    -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,    -1,
     187,   188,   189,   190,    -1,   192,   193,   194,   195,   196,
     197,    -1,   199,    -1,   201,   202,   203,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,
     217,   218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,
      -1,   228,   229,   230,    -1,    -1,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
      -1,   258,   259,   260,   261,   262,    -1,   264,   265,    -1,
     267,    -1,   269,   270,   271,   272,   273,   274,    -1,   276,
     277,    -1,    -1,   280,   281,   282,    -1,    -1,   285,   286,
      -1,   288,    -1,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,    -1,   302,   303,   304,   305,   306,
     307,   308,   309,   310,    -1,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,    -1,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,    -1,   340,   341,    -1,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,    -1,   359,   360,   361,   362,   363,    -1,   365,   366,
     367,   368,   369,    -1,   371,   372,   373,   374,    -1,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,    -1,   390,   391,    -1,   393,    -1,   395,   396,
     397,   398,   399,    -1,   401,   402,    -1,    -1,   405,   406,
     407,   408,   409,    -1,   411,   412,   413,   414,   415,   416,
     417,    -1,    -1,   420,   421,   422,   423,   424,    -1,    -1,
     427,   428,   429,   430,   431,   432,   433,    -1,   435,    -1,
     437,   438,   439,   440,    -1,    -1,   443,    -1,    -1,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,    -1,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,   214,    -1,   216,   217,   218,   219,   220,    -1,    -1,
     223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,    -1,   258,   259,   260,   261,   262,
      -1,   264,   265,    -1,   267,    -1,   269,   270,   271,   272,
     273,   274,    -1,   276,   277,    -1,    -1,   280,   281,   282,
      -1,    -1,   285,   286,    -1,   288,    -1,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,    -1,   302,
     303,   304,   305,   306,   307,   308,   309,   310,    -1,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,   340,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,    -1,   359,   360,   361,   362,
     363,    -1,   365,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,    -1,   390,   391,    -1,
     393,    -1,   395,   396,   397,   398,   399,    -1,   401,   402,
      -1,    -1,   405,   406,   407,   408,   409,    -1,   411,   412,
     413,   414,   415,   416,   417,    -1,    -1,   420,   421,   422,
     423,   424,    -1,    -1,   427,   428,   429,   430,   431,   432,
     433,    -1,   435,    -1,   437,   438,   439,   440,    -1,    -1,
     443,    -1,    -1,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    36,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    -1,    82,    83,    84,    -1,    86,    87,    88,
      89,    90,    91,    -1,    -1,    94,    95,    96,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,    -1,   115,    -1,   117,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,   127,   128,
      -1,    -1,   131,   132,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,    -1,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,    -1,   156,    -1,   158,
     159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,    -1,
     169,   170,   171,    -1,   173,    -1,   175,    -1,   177,   178,
      -1,   180,   181,   182,   183,   184,   185,    -1,   187,   188,
     189,   190,    -1,   192,   193,   194,   195,   196,   197,    -1,
     199,    -1,   201,   202,   203,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,   218,
     219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,   228,
     229,   230,    -1,    -1,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,    -1,   258,
     259,   260,   261,   262,    -1,   264,   265,    -1,   267,    -1,
     269,   270,   271,   272,   273,   274,    -1,   276,   277,    -1,
      -1,   280,   281,   282,    -1,    -1,   285,   286,    -1,   288,
      -1,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,    -1,   302,   303,   304,   305,   306,   307,   308,
     309,   310,    -1,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,    -1,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
      -1,   340,   341,    -1,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,    -1,
     359,   360,   361,   362,   363,    -1,    -1,   366,   367,   368,
     369,    -1,   371,   372,   373,   374,    -1,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
      -1,   390,   391,    -1,   393,    -1,   395,   396,   397,   398,
     399,    -1,   401,   402,    -1,    -1,   405,   406,   407,   408,
     409,    -1,   411,   412,   413,   414,   415,   416,   417,    -1,
      -1,   420,   421,   422,   423,   424,    -1,    -1,   427,   428,
     429,   430,   431,   432,   433,    -1,   435,    -1,   437,   438,
     439,   440,    -1,    -1,   443,    -1,    -1,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    -1,    82,    83,    84,
      -1,    86,    87,    88,    89,    90,    91,    -1,    -1,    94,
      95,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,    -1,
     115,    -1,   117,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,   127,   128,    -1,    -1,   131,   132,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,    -1,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
      -1,   156,    -1,   158,   159,   160,   161,    -1,   163,    -1,
     165,    -1,    -1,    -1,   169,   170,   171,    -1,   173,    -1,
     175,    -1,   177,   178,    -1,   180,   181,   182,   183,   184,
     185,    -1,   187,   188,   189,   190,    -1,   192,   193,   194,
     195,   196,   197,    -1,   199,    -1,   201,   202,   203,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,
      -1,   216,   217,   218,   219,   220,    -1,    -1,   223,    -1,
     225,    -1,    -1,   228,   229,   230,    -1,    -1,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,    -1,   258,   259,   260,   261,   262,    -1,   264,
     265,    -1,   267,    -1,   269,   270,   271,   272,   273,   274,
      -1,   276,   277,    -1,    -1,   280,   281,   282,    -1,    -1,
     285,   286,    -1,   288,    -1,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,    -1,   302,   303,   304,
     305,   306,   307,   308,   309,   310,    -1,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,   340,   341,    -1,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,    -1,   359,   360,   361,   362,   363,    -1,
     365,   366,   367,   368,   369,    -1,   371,   372,   373,   374,
      -1,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,    -1,   390,   391,    -1,   393,    -1,
     395,   396,   397,   398,   399,    -1,   401,   402,    -1,    -1,
     405,   406,   407,   408,   409,    -1,   411,   412,   413,   414,
     415,   416,   417,    -1,    -1,   420,   421,   422,   423,   424,
      -1,    -1,   427,   428,   429,   430,   431,   432,   433,    -1,
     435,    -1,   437,   438,   439,   440,    -1,    -1,   443,    -1,
      -1,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      -1,    82,    83,    84,    -1,    86,    87,    88,    89,    90,
      91,    -1,    -1,    94,    95,    96,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,    -1,   115,    -1,   117,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,   127,   128,    -1,    -1,
     131,   132,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,    -1,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,    -1,   156,    -1,   158,   159,   160,
     161,    -1,   163,    -1,   165,    -1,    -1,    -1,   169,   170,
     171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,    -1,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,   196,   197,    -1,   199,    -1,
     201,   202,   203,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,   214,    -1,   216,   217,   218,   219,   220,
      -1,    -1,   223,    -1,   225,    -1,    -1,   228,   229,   230,
      -1,    -1,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,    -1,   258,   259,   260,
     261,   262,    -1,   264,   265,    -1,   267,    -1,   269,   270,
     271,   272,   273,   274,    -1,   276,   277,    -1,    -1,   280,
     281,   282,    -1,    -1,   285,   286,    -1,   288,    -1,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
      -1,   302,   303,   304,   305,   306,   307,   308,   309,   310,
      -1,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,    -1,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,    -1,   340,
     341,    -1,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,    -1,   359,   360,
     361,   362,   363,    -1,   365,   366,   367,   368,   369,    -1,
     371,   372,   373,   374,    -1,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,    -1,   390,
     391,    -1,   393,    -1,   395,   396,   397,   398,   399,    -1,
     401,   402,    -1,    -1,   405,   406,   407,   408,   409,    -1,
     411,   412,   413,   414,   415,   416,   417,    -1,    -1,   420,
     421,   422,   423,   424,    -1,    -1,   427,   428,   429,   430,
     431,   432,   433,    -1,   435,    -1,   437,   438,   439,   440,
      -1,    -1,   443,    -1,    -1,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    -1,    82,    83,    84,    -1,    86,
      87,    88,    89,    90,    91,    -1,    -1,    94,    95,    96,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,    -1,   115,    -1,
     117,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
     127,   128,    -1,    -1,   131,   132,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,    -1,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,    -1,   156,
      -1,   158,   159,   160,   161,    -1,   163,    -1,   165,    -1,
      -1,    -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,    -1,
     187,   188,   189,   190,    -1,   192,   193,   194,   195,   196,
     197,    -1,   199,    -1,   201,   202,   203,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,
     217,   218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,
      -1,   228,   229,   230,    -1,    -1,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
      -1,   258,   259,   260,   261,   262,    -1,   264,   265,    -1,
     267,    -1,   269,   270,   271,   272,   273,   274,    -1,   276,
     277,    -1,    -1,   280,   281,   282,    -1,    -1,   285,   286,
      -1,   288,    -1,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,    -1,   302,   303,   304,   305,   306,
     307,   308,   309,   310,    -1,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,    -1,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,    -1,   340,   341,    -1,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,    -1,   359,   360,   361,   362,   363,    -1,   365,   366,
     367,   368,   369,    -1,   371,   372,   373,   374,    -1,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,    -1,   390,   391,    -1,   393,    -1,   395,   396,
     397,   398,   399,    -1,   401,   402,    -1,    -1,   405,   406,
     407,   408,   409,    -1,   411,   412,   413,   414,   415,   416,
     417,    -1,    -1,   420,   421,   422,   423,   424,    -1,    -1,
     427,   428,   429,   430,   431,   432,   433,    -1,   435,    -1,
     437,   438,   439,   440,    -1,    -1,   443,    -1,    -1,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,    -1,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,   214,    -1,   216,   217,   218,   219,   220,    -1,    -1,
     223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,    -1,   258,   259,   260,   261,   262,
      -1,   264,   265,    -1,   267,    -1,   269,   270,   271,   272,
     273,   274,    -1,   276,   277,    -1,    -1,   280,   281,   282,
      -1,    -1,   285,   286,    -1,   288,    -1,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,    -1,   302,
     303,   304,   305,   306,   307,   308,   309,   310,    -1,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,    -1,   340,   341,    -1,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,    -1,   359,   360,   361,   362,
     363,    -1,   365,   366,   367,   368,   369,    -1,   371,   372,
     373,   374,    -1,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,    -1,   390,   391,    -1,
     393,    -1,   395,   396,   397,   398,   399,    -1,   401,   402,
      -1,    -1,   405,   406,   407,   408,   409,    -1,   411,   412,
     413,   414,   415,   416,   417,    -1,    -1,   420,   421,   422,
     423,   424,    -1,    -1,   427,   428,   429,   430,   431,   432,
     433,    -1,   435,    -1,   437,   438,   439,   440,    -1,    -1,
     443,    -1,    -1,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    -1,    82,    83,    84,    -1,    86,    87,    88,
      89,    90,    91,    -1,    -1,    94,    95,    96,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,    -1,   115,    -1,   117,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,   127,   128,
      -1,    -1,   131,   132,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,    -1,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,    -1,   156,    -1,   158,
     159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,    -1,
     169,   170,   171,    -1,   173,    -1,   175,    -1,   177,   178,
      -1,   180,   181,   182,   183,   184,   185,    -1,   187,   188,
     189,   190,    -1,   192,   193,   194,   195,   196,   197,    -1,
     199,    -1,   201,   202,   203,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,   218,
     219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,   228,
     229,   230,    -1,    -1,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,    -1,   258,
     259,   260,   261,   262,    -1,   264,   265,    -1,   267,    -1,
     269,   270,   271,   272,   273,   274,    -1,   276,   277,    -1,
      -1,   280,   281,   282,    -1,    -1,   285,   286,    -1,   288,
      -1,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,    -1,   302,   303,   304,   305,   306,   307,   308,
     309,   310,    -1,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,    -1,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
      -1,   340,   341,    -1,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,    -1,
     359,   360,   361,   362,   363,    -1,   365,   366,   367,   368,
     369,    -1,   371,   372,   373,   374,    -1,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
      -1,   390,   391,    -1,   393,    -1,   395,   396,   397,   398,
     399,    -1,   401,   402,    -1,    -1,   405,   406,   407,   408,
     409,    -1,   411,   412,   413,   414,   415,   416,   417,    -1,
      -1,   420,   421,   422,   423,   424,    -1,    -1,   427,   428,
     429,   430,   431,   432,   433,    -1,   435,    -1,   437,   438,
     439,   440,    -1,    -1,   443,    -1,    -1,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    -1,    82,    83,    84,
      -1,    86,    87,    88,    89,    90,    91,    -1,    -1,    94,
      95,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,    -1,
     115,    -1,   117,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,   127,   128,    -1,    -1,   131,   132,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,    -1,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
      -1,   156,    -1,   158,   159,   160,   161,    -1,   163,    -1,
     165,    -1,    -1,    -1,   169,   170,   171,    -1,   173,    -1,
     175,    -1,   177,   178,    -1,   180,   181,   182,   183,   184,
     185,    -1,   187,   188,   189,   190,    -1,   192,   193,   194,
     195,   196,   197,    -1,   199,    -1,   201,   202,   203,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,
      -1,   216,   217,   218,   219,   220,    -1,    -1,   223,    -1,
     225,    -1,    -1,   228,   229,   230,    -1,    -1,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,    -1,   258,   259,   260,   261,   262,    -1,   264,
     265,    -1,   267,    -1,   269,   270,   271,   272,   273,   274,
      -1,   276,   277,    -1,    -1,   280,   281,   282,    -1,    -1,
     285,   286,    -1,   288,    -1,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,    -1,   302,   303,   304,
     305,   306,   307,   308,   309,   310,    -1,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,    -1,   340,   341,    -1,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,    -1,   359,   360,   361,   362,   363,    -1,
     365,   366,   367,   368,   369,    -1,   371,   372,   373,   374,
      -1,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,    -1,   390,   391,    -1,   393,    -1,
     395,   396,   397,   398,   399,    -1,   401,   402,    -1,    -1,
     405,   406,   407,   408,   409,    -1,   411,   412,   413,   414,
     415,   416,   417,    -1,    -1,   420,   421,   422,   423,   424,
      -1,    -1,   427,   428,   429,   430,   431,   432,   433,    -1,
     435,    -1,   437,   438,   439,   440,    -1,    -1,   443,    -1,
      -1,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      -1,    82,    83,    84,    -1,    86,    87,    88,    89,    90,
      91,    -1,    -1,    94,    95,    96,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,    -1,   115,    -1,   117,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,   127,   128,    -1,    -1,
     131,   132,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,    -1,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,    -1,   156,    -1,   158,   159,   160,
     161,    -1,   163,    -1,   165,    -1,    -1,    -1,   169,   170,
     171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,    -1,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,   196,   197,    -1,   199,    -1,
     201,   202,   203,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,   214,    -1,   216,   217,   218,   219,   220,
      -1,    -1,   223,    -1,   225,    -1,    -1,   228,   229,   230,
      -1,    -1,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,    -1,   258,   259,   260,
     261,   262,    -1,   264,   265,    -1,   267,    -1,   269,   270,
     271,   272,   273,   274,    -1,   276,   277,    -1,    -1,   280,
     281,   282,    -1,    -1,   285,   286,    -1,   288,    -1,   290,
     291,   292,   293,   294,   295,   296,    -1,   298,   299,   300,
      -1,   302,   303,   304,   305,   306,   307,   308,   309,   310,
      -1,   312,   313,   314,   315,   316,   317,   318,    -1,   320,
     321,   322,   323,   324,   325,    -1,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,    -1,   340,
     341,    -1,   343,   344,   345,   346,    -1,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,    -1,   359,   360,
     361,   362,   363,    -1,   365,   366,   367,   368,   369,    -1,
     371,   372,   373,   374,    -1,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,    -1,   390,
     391,    -1,   393,    -1,   395,   396,   397,   398,   399,    -1,
     401,   402,    -1,    -1,   405,   406,   407,   408,   409,    -1,
     411,   412,   413,   414,   415,   416,   417,    -1,    -1,   420,
     421,   422,   423,   424,    -1,    -1,   427,   428,   429,   430,
     431,   432,   433,    -1,   435,    -1,   437,   438,   439,   440,
      -1,    -1,   443,    -1,    -1,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    44,    45,    46,
      47,    -1,    49,    50,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    -1,    -1,    74,    -1,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    -1,    86,
      87,    88,    89,    90,    91,    -1,    93,    94,    95,    96,
      -1,    -1,    -1,   100,    -1,    -1,    -1,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,    -1,   115,    -1,
     117,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
     127,   128,    -1,    -1,   131,   132,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,    -1,   145,   146,
     147,   148,    -1,   150,   151,   152,   153,    -1,    -1,   156,
      -1,   158,   159,   160,   161,    -1,   163,    -1,   165,   166,
      -1,   168,   169,   170,   171,   172,   173,    -1,   175,    -1,
      -1,   178,    -1,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,   193,   194,   195,   196,
     197,    -1,   199,   200,    -1,   202,   203,   204,   205,   206,
     207,    -1,   209,    -1,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,    -1,    -1,   223,   224,   225,   226,
      -1,   228,   229,   230,    -1,    -1,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,    -1,    -1,   264,   265,   266,
     267,    -1,    -1,   270,   271,   272,   273,   274,    -1,   276,
     277,    -1,    -1,   280,   281,   282,    -1,    -1,   285,    -1,
     287,   288,   289,    -1,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,    -1,   302,   303,    -1,   305,   306,
      -1,   308,   309,   310,    -1,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,    -1,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,    -1,   340,   341,   342,   343,   344,   345,    -1,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,    -1,   359,   360,   361,   362,   363,    -1,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,    -1,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,    -1,    -1,   390,   391,    -1,   393,   394,   395,   396,
     397,   398,   399,    -1,   401,   402,    -1,    -1,   405,   406,
      -1,   408,    -1,    -1,   411,   412,   413,   414,   415,   416,
     417,    -1,    -1,   420,   421,   422,   423,   424,    -1,    -1,
     427,   428,   429,   430,   431,    -1,   433,    -1,   435,   436,
     437,   438,   439,   440,    -1,    -1,   443,    -1,    -1,   446,
     447,   448,   449,   450,   451,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   463,   464,   465,   466,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      -1,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    -1,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    93,    94,    95,    96,    -1,
      -1,    -1,   100,    -1,    -1,    -1,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,    -1,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,    -1,   150,   151,   152,   153,    -1,    -1,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,   166,    -1,
     168,   169,   170,   171,   172,   173,    -1,   175,    -1,    -1,
     178,    -1,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,   200,    -1,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,    -1,    -1,   223,   224,   225,   226,    -1,
     228,   229,   230,    -1,    -1,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,    -1,    -1,   264,   265,   266,   267,
      -1,    -1,   270,   271,   272,   273,   274,    -1,   276,   277,
      -1,    -1,   280,   281,   282,    -1,    -1,   285,    -1,   287,
     288,   289,    -1,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,    -1,   302,   303,    -1,   305,   306,    -1,
     308,   309,   310,    -1,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,    -1,   340,   341,   342,   343,   344,   345,    -1,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
      -1,   359,   360,   361,   362,   363,    -1,   365,    -1,   367,
     368,   369,   370,   371,   372,   373,   374,    -1,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
      -1,    -1,   390,   391,    -1,   393,   394,   395,   396,   397,
     398,   399,    -1,   401,   402,    -1,    -1,   405,   406,    -1,
     408,    -1,    -1,   411,   412,   413,   414,   415,   416,   417,
      -1,    -1,   420,   421,   422,   423,   424,    -1,    -1,   427,
     428,   429,   430,   431,    -1,   433,    -1,   435,   436,   437,
     438,   439,   440,    -1,    -1,   443,    -1,    -1,   446,   447,
     448,   449,   450,   451,    -1,    -1,    23,    -1,    -1,    -1,
      -1,    -1,    29,    -1,    -1,   463,   464,   465,   466,    36,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    55,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   134,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   193,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   241,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   249,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   261,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   282,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   292,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   332,    -1,    -1,    -1,   336,
     337,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   359,    -1,    -1,    -1,    -1,    -1,   365,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   379,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   429
};

/* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
   symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,    19,    29,    31,    32,    47,    56,    68,    79,    90,
      92,   110,   124,   134,   140,   148,   150,   151,   190,   229,
     305,   308,   336,   344,   358,   365,   369,   379,   392,   427,
     432,   445,   469,   483,   491,   492,   493,   494,   505,   506,
     508,   512,   526,   527,   529,   531,   538,   540,   586,   592,
     595,   596,   613,   614,   615,   616,   617,   618,   662,   786,
     789,   792,   799,   800,   801,   802,   803,   810,   814,   820,
     822,   827,   831,   832,   835,   836,   838,   839,   841,   405,
     448,   539,   194,   351,   359,   392,   438,   539,     3,    19,
      20,    21,    22,    23,    24,    25,    26,    28,    29,    30,
      38,    39,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    52,    54,    55,    56,    57,    58,    59,
      62,    63,    64,    65,    66,    68,    69,    70,    71,    72,
      74,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      86,    87,    88,    89,    90,    91,    93,    94,    95,    96,
     100,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   115,   117,   118,   119,   120,   121,   122,   124,   125,
     126,   127,   128,   131,   132,   133,   134,   135,   137,   138,
     139,   141,   142,   143,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   156,   158,   159,   160,   161,   163,
     165,   166,   168,   169,   170,   171,   172,   173,   175,   177,
     178,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,   190,   192,   193,   194,   195,   196,   197,   199,   200,
     201,   202,   203,   204,   205,   206,   207,   209,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   223,   224,
     225,   226,   228,   229,   230,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   264,   265,   266,   267,   269,
     270,   271,   272,   273,   274,   276,   277,   280,   281,   282,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   359,
     360,   361,   362,   363,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   390,   391,   393,
     394,   395,   396,   397,   398,   399,   401,   402,   405,   406,
     407,   408,   409,   411,   412,   413,   414,   415,   416,   417,
     420,   421,   422,   423,   424,   427,   428,   429,   430,   431,
     432,   433,   435,   436,   437,   438,   439,   440,   443,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     716,   773,   777,   779,   844,   845,   846,   539,    50,   483,
     608,   169,   173,   230,   237,   283,   351,   396,   398,   419,
     422,   584,   593,   798,     3,    27,   308,   771,   777,   844,
      21,    74,    89,   143,   152,   164,   169,   194,   237,   240,
     303,   317,   348,   351,   359,   362,   381,   392,   399,   408,
     438,   587,   588,   591,   539,   771,    92,   436,   483,   508,
     595,   613,   806,   810,   827,   841,   107,   107,     5,   776,
     821,   777,   771,    27,   401,   405,   777,   833,   834,   837,
     539,    27,   129,   625,   626,   230,   351,   363,   401,   815,
     816,   837,   539,   279,   673,   769,   777,   168,   483,   824,
     483,   324,   619,   620,   771,   619,   614,   615,   618,     0,
     486,   119,   204,   424,   144,   208,   284,   418,   627,   628,
     614,   616,   617,   487,   436,   804,    27,   401,   405,   432,
     613,   837,   185,   769,   771,   185,   769,   185,   673,   185,
     769,   483,   481,   485,   760,   762,   508,   595,   613,   788,
     827,   769,   396,   398,   396,   398,   334,   185,   777,   324,
     359,   392,   438,   769,   194,    27,   771,   242,   408,   106,
     392,   438,   354,   185,   589,   777,   780,   185,   770,   771,
     185,   771,   483,   530,   584,   806,     3,   807,   809,   810,
     812,   813,   844,   845,   846,   804,   776,   776,   472,   483,
     483,   787,   466,   214,   485,   278,     4,     6,     7,     8,
       9,    10,    49,    51,    52,    60,    61,    64,    65,    72,
      74,    97,    98,    99,   100,   101,   102,   103,   111,   112,
     114,   133,   149,   154,   155,   160,   206,   207,   209,   231,
     232,   256,   258,   263,   268,   269,   271,   280,   290,   304,
     321,   346,   364,   373,   388,   401,   402,   407,   409,   410,
     425,   433,   467,   474,   475,   476,   483,   488,   614,   686,
     689,   692,   693,   694,   696,   697,   698,   699,   701,   702,
     713,   715,   716,   717,   719,   732,   736,   754,   759,   766,
     767,   773,   774,   775,   776,   777,   765,   766,   815,   776,
     815,   466,   167,   403,   472,   483,   769,   476,   762,     3,
     166,   168,   436,   810,   823,   825,   166,   826,   713,   740,
     619,   487,   483,   782,   484,   484,   493,   167,   210,   673,
     828,    27,   129,   624,   624,    54,   624,   157,   162,   227,
     275,   633,   635,   636,   655,   657,   658,   659,   627,   628,
     483,   769,   466,   214,   149,    23,    29,   134,   282,   332,
     336,   365,   429,   499,   502,   503,   332,   149,    36,    55,
     105,   193,   241,   249,   261,   292,   332,   337,   359,   365,
     379,   502,   532,   535,   149,   332,   365,   502,   149,   332,
     365,   502,    27,   129,   434,   476,   484,   713,   741,   742,
     779,   783,   713,   761,     3,    27,    31,    32,    33,    34,
      35,    36,    37,    40,    53,    60,    61,    67,    73,    75,
      85,    92,    97,    98,    99,   101,   102,   103,   114,   116,
     123,   129,   130,   136,   140,   144,   155,   157,   162,   164,
     167,   174,   176,   179,   191,   198,   208,   210,   221,   222,
     227,   231,   232,   263,   268,   275,   278,   279,   283,   284,
     301,   311,   326,   339,   358,   364,   375,   389,   392,   400,
     403,   404,   410,   418,   419,   425,   426,   434,   441,   442,
     444,   445,   476,   772,   784,   844,   845,   846,   847,   760,
     484,   483,   574,   584,   263,   790,   438,   185,   769,   185,
     769,   843,   769,   483,   594,    81,   795,   449,    82,   126,
     295,   397,   149,    58,   338,   487,   590,   485,   781,   149,
     487,   590,   149,   278,   740,   392,   484,   487,     4,   155,
     278,   410,   474,   475,   534,   537,   775,   776,   805,   807,
     808,   811,   806,   483,   603,   607,   534,   811,   817,   819,
     741,     3,    49,    51,    52,    64,    65,   111,   112,   160,
     206,   207,   209,   256,   258,   271,   321,   366,   373,   401,
     402,   433,   683,   685,   687,   689,   691,   693,   694,   695,
     697,   698,   701,   702,   743,   779,   844,    36,   225,   777,
     483,   763,   435,   700,   713,   758,   483,   700,   700,   483,
     162,   483,   483,   483,   688,   688,   307,   614,   483,   483,
     690,   483,   483,    64,    65,   700,   713,   483,   688,   483,
     483,   483,   483,   483,   447,   469,   483,   703,   483,   703,
     483,   483,   713,   713,   713,   614,   713,   740,   763,   762,
     776,   483,   483,   775,   776,     3,     8,    11,    15,    16,
      17,    18,    33,    36,    41,    48,    73,   172,   186,   191,
     212,   213,   226,   263,   266,   280,   283,   370,   467,   470,
     471,   472,   474,   475,   476,   477,   478,   479,   734,   735,
     736,   738,   446,   720,    15,   289,   713,   210,   487,   621,
     483,   776,   762,   621,     3,   114,   230,   534,   702,   776,
     818,    96,   114,   819,   114,   819,   769,   484,   487,   804,
     484,   487,   620,   770,    36,   828,   510,   769,    36,   777,
     365,   616,   616,   629,   630,   713,   616,   159,   260,   649,
     216,   261,   320,   368,   424,    27,   644,   713,   474,   475,
     645,   646,   713,   715,   655,   656,   636,   635,   633,   634,
     162,   658,   273,   660,   633,   655,   740,   782,   225,   769,
      67,    75,    85,   164,   185,   311,   419,   555,   565,   580,
     777,    75,    85,   507,    85,   507,   483,   403,   483,   553,
     236,   422,   553,    85,   487,   403,   769,   685,   534,    54,
     536,   534,   534,   105,   241,   249,    54,   403,   445,   469,
     533,   254,   351,   533,   535,   673,    85,   403,   507,   351,
     769,   403,   351,   741,   741,   742,   484,   487,   627,   628,
      13,    14,   482,   489,   403,   573,   578,   777,   445,   606,
     324,   438,   149,    92,   527,   540,   791,   792,   839,   769,
     263,   528,   532,   263,   483,   574,    36,   574,   484,   741,
      36,   185,   568,   777,   796,   589,   780,   772,   485,   770,
     771,   771,   780,   484,   185,   769,   843,   806,   812,     4,
     775,     4,   775,   605,   612,   784,    50,    94,   120,   138,
     142,   163,   166,   180,   268,   276,   318,   609,   487,   484,
     487,   685,    35,   684,   108,   109,   182,   183,   243,   244,
     245,   246,   247,   248,   251,   252,   355,   356,   463,   464,
     483,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     484,   487,   688,   781,   788,   740,   760,   483,   441,   755,
     756,   713,   740,   483,   775,   775,   740,     3,   704,   705,
     706,   707,   708,   709,   710,   711,   744,   745,   776,   775,
     775,   775,   700,   700,   713,     8,    16,    17,    18,   470,
     471,   472,   474,   475,   476,   477,   478,   479,   734,   739,
     777,   713,   746,   474,   475,   483,   714,   715,   736,   748,
     484,   740,   713,   740,   749,   401,   401,   775,   775,   713,
      53,   167,   222,   404,   713,   740,   752,   484,   487,   775,
     713,   712,   712,   683,   713,   713,   713,   713,   713,     5,
     784,   785,   401,    40,   389,   764,   780,   713,   713,   483,
     614,   753,   129,   155,   263,   268,   273,   410,   420,   713,
     268,   483,   713,   403,    48,   172,   186,   191,   226,   370,
     713,   713,   713,   713,   713,   713,   713,   713,   713,   713,
      27,    34,   375,   733,   176,   158,   721,   713,   346,   483,
     732,   173,   230,   392,   396,   398,   422,   622,   769,   767,
     167,   663,   741,   663,   483,   776,   484,   769,   823,   769,
     831,   713,   484,   483,   426,   830,   114,   291,   483,   509,
     613,    36,   777,   483,   514,   523,   525,   777,   487,    37,
     123,   426,   631,   346,   347,   474,   475,   646,   648,   715,
     368,   216,   279,   487,     4,   647,   775,   647,   346,   347,
     648,   768,   769,   267,   372,   661,   656,   634,   484,   332,
     502,   483,   185,   565,   771,   216,   263,   216,   426,   483,
     558,   683,   771,   777,   185,   771,   185,   777,    23,   134,
     365,   498,   501,   548,   563,   784,   771,   557,   577,   784,
     771,   499,   771,   332,   365,   502,   532,   534,   780,   771,
     534,   780,   771,   534,   332,   365,   502,   771,   771,   771,
     771,   332,   365,   502,   771,   771,   627,   627,   627,   434,
     742,   484,   713,   713,   713,   761,   316,   602,   484,   487,
     276,   167,   403,   597,   438,   769,   777,   584,   483,   149,
     149,   226,   555,   565,   569,   572,   581,   583,   777,   445,
     447,   560,   148,   613,   445,   797,   484,   713,   263,   278,
     590,   772,   590,   278,   590,   263,    36,   484,   487,   476,
     483,   534,   604,   811,    36,   601,   776,   601,   263,   268,
     318,   601,   601,   817,    35,   684,   481,   481,   775,   403,
     403,   403,   403,   683,   688,   484,   740,   713,   136,   756,
     757,    36,   484,   713,   484,   484,   484,   484,   167,   484,
     484,   484,   487,   484,   485,   301,   747,   484,   714,   714,
     713,    11,    16,    17,    18,   191,   212,   280,   470,   471,
     472,   474,   475,   476,   477,   478,   479,   736,   714,   484,
     484,   162,   167,   750,   751,   484,   466,   466,   484,   484,
      36,   752,   740,   752,   752,   167,   484,   763,   713,   484,
     484,   466,   714,   714,   142,   740,   167,   129,   155,   268,
     273,   410,   420,   483,   142,   739,   713,   389,   764,   713,
     753,   713,   403,   483,   614,   483,   483,   288,   725,   396,
     398,   396,   398,   769,   392,   623,   623,   623,   221,   347,
     483,   614,   664,   665,   666,   673,   674,   716,   718,   719,
     777,   442,   679,   627,   679,   775,   712,   782,   788,   664,
     442,   829,   432,   391,   425,   518,   513,   522,   777,   278,
     515,   777,   519,   525,   487,   663,   472,   763,   630,   280,
     734,   737,   468,   632,     4,   775,   648,   279,   424,   645,
     487,   235,   403,   713,   263,   580,   483,   149,   483,   558,
     194,   578,   541,   282,   551,   541,    23,   134,   336,   337,
     365,   495,   496,   497,   503,   504,   149,   590,   149,   590,
     548,   563,   548,   484,   487,   544,   776,   484,   487,   472,
     485,   403,   351,    85,   403,   507,   351,   403,   403,   403,
     351,   484,   484,   484,   742,   482,   382,   383,   611,   776,
     573,   602,   769,   574,   790,   392,   578,   769,   769,   843,
     769,   484,   487,   276,   553,   276,   278,   552,   771,   445,
     842,   553,    36,   149,   769,   780,   149,   605,   599,   610,
     811,   776,   776,   268,   578,   476,   578,   776,   776,   481,
     775,   482,   775,   484,   705,   707,   708,   709,   708,   709,
     709,   484,   400,   713,   140,   683,   484,   713,   713,   739,
     713,   750,   683,   714,   714,   714,   714,   129,   263,   273,
     714,   714,   714,   714,   714,   714,   714,   714,   714,   714,
     713,   713,   751,   750,   703,   703,   683,   484,   484,   484,
     740,   484,   712,   713,    33,    33,   713,   484,   713,   167,
     483,   743,   713,   484,   142,   714,   714,   142,   142,   713,
     713,   628,   442,   483,   726,   777,   623,   623,   623,   623,
     769,   769,   769,   614,   674,   167,   614,   665,   666,    36,
     667,   668,   777,   487,    93,   168,   200,   215,   224,   257,
     342,   670,   668,    36,   667,   669,   777,   469,   678,   762,
     713,   176,   650,   484,   650,   484,   484,   713,   339,   517,
     431,   484,   487,   763,    83,   517,   484,   487,   514,   829,
     713,   483,   632,   159,   220,   279,   769,   771,   484,   149,
     578,   565,   578,   541,   568,   484,   116,   198,   261,   263,
     564,   483,   575,   171,   114,   184,   263,   553,   533,   106,
     114,   171,   263,   381,   384,   535,   553,   365,   497,   413,
     771,   777,   501,   577,   262,   280,   366,   474,   475,   534,
     542,   579,   683,   737,   776,   779,   847,   784,   771,   771,
     771,   771,   771,   771,   771,   771,   771,   771,   627,   533,
     611,   483,   797,   185,   769,   484,   528,   483,    36,   562,
     560,   569,    79,   530,   106,   261,   613,   568,   426,   794,
     590,   843,   484,   487,   578,   775,   482,   482,   713,   484,
     484,   751,   167,   129,   273,   483,   484,   713,   713,   713,
     743,   484,   713,    33,    33,   713,   713,   142,   484,   484,
     713,   727,   777,   769,   769,   769,   769,   668,   669,   483,
     484,     5,   777,   778,   394,   641,   642,   483,   665,   215,
     287,   671,   665,   671,   215,   670,   671,   215,   642,   483,
     777,   642,   483,   285,    54,   179,   654,   776,   654,   776,
     766,   613,   291,   613,   513,   278,   483,   511,   472,   525,
     517,   739,   541,   565,   484,   484,   445,   571,   117,   187,
     196,   116,   428,   548,   566,    67,    73,    85,   114,   116,
     171,   198,   263,   268,   311,   326,   419,   546,   547,   559,
      30,    54,   585,   185,   268,   534,   713,   585,   268,   474,
     475,   537,   777,   683,   590,   590,   779,   781,   472,   403,
     403,   484,   603,   426,   598,   600,   578,    36,   263,   483,
     797,   572,   148,   613,   146,   192,   552,   119,   134,   310,
     842,   106,   445,   840,   278,   777,   793,   483,    36,   610,
     482,   714,   167,   483,   743,   484,   713,   713,   713,   484,
     297,   728,   675,   676,   718,   667,   483,     4,     9,   637,
     639,   640,   777,   770,   665,   278,   426,   672,   665,   215,
     665,   680,   681,   777,   483,   680,   777,   483,   651,   652,
     653,   713,   713,   444,   722,   722,   518,    85,   483,   516,
     524,   718,   777,   130,   713,   484,   326,   571,   483,   561,
     541,   484,   487,   483,   780,   771,   714,   585,   117,   187,
     116,   268,   216,   769,   571,   114,    36,   149,    73,   682,
     781,   478,   542,   771,   771,   533,   121,   484,   613,   149,
      36,   484,   771,   842,    27,    78,    86,   115,   184,   195,
     381,   384,   556,   556,   347,   347,    59,    67,   230,   769,
     524,   714,   743,   484,    54,   627,   484,   487,    36,   677,
     770,   300,   478,   300,   347,   478,   483,   483,   484,   713,
     483,   665,   672,   484,   487,   683,   680,   484,   484,   487,
     723,   724,   777,   426,   638,   638,   431,   771,   713,   484,
     487,    73,   520,   520,   264,   424,   769,   541,   567,   570,
     784,   548,   713,   263,   547,    36,   571,   574,   184,   780,
     426,   500,   478,   413,   603,   776,   797,   840,   769,   613,
     560,   530,    67,   281,    67,   794,   484,   484,   740,   319,
     347,   729,   678,   675,   483,   484,   777,   637,   770,   681,
     682,   484,   652,   487,    36,   349,   613,   484,   679,   516,
     780,   521,   780,   521,   365,   574,   484,   487,   472,   484,
     184,   239,   582,   483,   543,   713,   413,    36,   483,   840,
     552,   842,   281,   281,   483,   797,    48,    96,   415,   713,
     730,   731,   730,   484,   680,   484,   487,   484,   484,   724,
     726,   640,   520,   631,   631,   523,   582,   570,   542,   261,
     554,   543,   168,   296,   371,   278,   549,   550,   576,   532,
     613,   524,   679,   731,   346,   161,   306,   161,   306,   484,
       9,   333,   643,   521,   632,   632,   679,   550,   196,   119,
     424,   278,   576,   278,   549,   484,   840,   484,    33,   484,
     483,   631,   541,    58,   261,   338,   365,   545,   545,   797,
     731,     9,   632,    22,   114,   268,   679,   484
};

#define yyerrok		(yyerrstatus = 0)
#define yyclearin	(yychar = YYEMPTY)
#define YYEMPTY		(-2)
#define YYEOF		0

#define YYACCEPT	goto yyacceptlab
#define YYABORT		goto yyabortlab
#define YYERROR		goto yyerrorlab


/* Like YYERROR except do call yyerror.  This remains here temporarily
   to ease the transition to the new meaning of YYERROR, for GCC.
   Once GCC version 2 has supplanted version 1, this can go.  */

#define YYFAIL		goto yyerrlab

#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)					\
do								\
  if (yychar == YYEMPTY && yylen == 1)				\
    {								\
      yychar = (Token);						\
      yylval = (Value);						\
      yytoken = YYTRANSLATE (yychar);				\
      YYPOPSTACK (1);						\
      goto yybackup;						\
    }								\
  else								\
    {								\
      yyerror (&yylloc, yyscanner, YY_("syntax error: cannot back up")); \
      YYERROR;							\
    }								\
while (YYID (0))


#define YYTERROR	1
#define YYERRCODE	256


/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#define YYRHSLOC(Rhs, K) ((Rhs)[K])
#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)				\
    do									\
      if (YYID (N))                                                    \
	{								\
	  (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;	\
	  (Current).first_column = YYRHSLOC (Rhs, 1).first_column;	\
	  (Current).last_line    = YYRHSLOC (Rhs, N).last_line;		\
	  (Current).last_column  = YYRHSLOC (Rhs, N).last_column;	\
	}								\
      else								\
	{								\
	  (Current).first_line   = (Current).last_line   =		\
	    YYRHSLOC (Rhs, 0).last_line;				\
	  (Current).first_column = (Current).last_column =		\
	    YYRHSLOC (Rhs, 0).last_column;				\
	}								\
    while (YYID (0))
#endif


/* YY_LOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

#ifndef YY_LOCATION_PRINT
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
#  define YY_LOCATION_PRINT(File, Loc)			\
     fprintf (File, "%d.%d-%d.%d",			\
	      (Loc).first_line, (Loc).first_column,	\
	      (Loc).last_line,  (Loc).last_column)
# else
#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
# endif
#endif


/* YYLEX -- calling `yylex' with the right arguments.  */

#ifdef YYLEX_PARAM
# define YYLEX yylex (&yylval, &yylloc, YYLEX_PARAM)
#else
# define YYLEX yylex (&yylval, &yylloc, yyscanner)
#endif

/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)			\
do {						\
  if (yydebug)					\
    YYFPRINTF Args;				\
} while (YYID (0))

# define YY_SYMBOL_PRINT(Title, Type, Value, Location)			  \
do {									  \
  if (yydebug)								  \
    {									  \
      YYFPRINTF (stderr, "%s ", Title);					  \
      yy_symbol_print (stderr,						  \
		  Type, Value, Location, yyscanner); \
      YYFPRINTF (stderr, "\n");						  \
    }									  \
} while (YYID (0))


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
#else
static void
yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  if (!yyvaluep)
    return;
  YYUSE (yylocationp);
  YYUSE (yyscanner);
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# else
  YYUSE (yyoutput);
# endif
  switch (yytype)
    {
      default:
	break;
    }
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
#else
static void
yy_symbol_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  if (yytype < YYNTOKENS)
    YYFPRINTF (yyoutput, "token %s (", yytname[yytype]);
  else
    YYFPRINTF (yyoutput, "nterm %s (", yytname[yytype]);

  YY_LOCATION_PRINT (yyoutput, *yylocationp);
  YYFPRINTF (yyoutput, ": ");
  yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_stack_print (yytype_int16 *bottom, yytype_int16 *top)
#else
static void
yy_stack_print (bottom, top)
    yytype_int16 *bottom;
    yytype_int16 *top;
#endif
{
  YYFPRINTF (stderr, "Stack now");
  for (; bottom <= top; ++bottom)
    YYFPRINTF (stderr, " %d", *bottom);
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)				\
do {								\
  if (yydebug)							\
    yy_stack_print ((Bottom), (Top));				\
} while (YYID (0))


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_reduce_print (YYSTYPE *yyvsp, YYLTYPE *yylsp, int yyrule, core_yyscan_t yyscanner)
#else
static void
yy_reduce_print (yyvsp, yylsp, yyrule, yyscanner)
    YYSTYPE *yyvsp;
    YYLTYPE *yylsp;
    int yyrule;
    core_yyscan_t yyscanner;
#endif
{
  int yynrhs = yyr2[yyrule];
  int yyi;
  unsigned long int yylno = yyrline[yyrule];
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
	     yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      fprintf (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
		       &(yyvsp[(yyi + 1) - (yynrhs)])
		       , &(yylsp[(yyi + 1) - (yynrhs)])		       , yyscanner);
      fprintf (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)		\
do {					\
  if (yydebug)				\
    yy_reduce_print (yyvsp, yylsp, Rule, yyscanner); \
} while (YYID (0))

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef	YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif



#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static YYSIZE_T
yystrlen (const char *yystr)
#else
static YYSIZE_T
yystrlen (yystr)
    const char *yystr;
#endif
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static char *
yystpcpy (char *yydest, const char *yysrc)
#else
static char *
yystpcpy (yydest, yysrc)
    char *yydest;
    const char *yysrc;
#endif
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
	switch (*++yyp)
	  {
	  case '\'':
	  case ',':
	    goto do_not_strip_quotes;

	  case '\\':
	    if (*++yyp != '\\')
	      goto do_not_strip_quotes;
	    /* Fall through.  */
	  default:
	    if (yyres)
	      yyres[yyn] = *yyp;
	    yyn++;
	    break;

	  case '"':
	    if (yyres)
	      yyres[yyn] = '\0';
	    return yyn;
	  }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into YYRESULT an error message about the unexpected token
   YYCHAR while in state YYSTATE.  Return the number of bytes copied,
   including the terminating null byte.  If YYRESULT is null, do not
   copy anything; just return the number of bytes that would be
   copied.  As a special case, return 0 if an ordinary "syntax error"
   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
   size calculation.  */
static YYSIZE_T
yysyntax_error (char *yyresult, int yystate, int yychar)
{
  int yyn = yypact[yystate];

  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
    return 0;
  else
    {
      int yytype = YYTRANSLATE (yychar);
      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
      YYSIZE_T yysize = yysize0;
      YYSIZE_T yysize1;
      int yysize_overflow = 0;
      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
      int yyx;

# if 0
      /* This is so xgettext sees the translatable formats that are
	 constructed on the fly.  */
      YY_("syntax error, unexpected %s");
      YY_("syntax error, unexpected %s, expecting %s");
      YY_("syntax error, unexpected %s, expecting %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
# endif
      char *yyfmt;
      char const *yyf;
      static char const yyunexpected[] = "syntax error, unexpected %s";
      static char const yyexpecting[] = ", expecting %s";
      static char const yyor[] = " or %s";
      char yyformat[sizeof yyunexpected
		    + sizeof yyexpecting - 1
		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
		       * (sizeof yyor - 1))];
      char const *yyprefix = yyexpecting;

      /* Start YYX at -YYN if negative to avoid negative indexes in
	 YYCHECK.  */
      int yyxbegin = yyn < 0 ? -yyn : 0;

      /* Stay within bounds of both yycheck and yytname.  */
      int yychecklim = YYLAST - yyn + 1;
      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
      int yycount = 1;

      yyarg[0] = yytname[yytype];
      yyfmt = yystpcpy (yyformat, yyunexpected);

      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
	  {
	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
	      {
		yycount = 1;
		yysize = yysize0;
		yyformat[sizeof yyunexpected - 1] = '\0';
		break;
	      }
	    yyarg[yycount++] = yytname[yyx];
	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
	    yysize_overflow |= (yysize1 < yysize);
	    yysize = yysize1;
	    yyfmt = yystpcpy (yyfmt, yyprefix);
	    yyprefix = yyor;
	  }

      yyf = YY_(yyformat);
      yysize1 = yysize + yystrlen (yyf);
      yysize_overflow |= (yysize1 < yysize);
      yysize = yysize1;

      if (yysize_overflow)
	return YYSIZE_MAXIMUM;

      if (yyresult)
	{
	  /* Avoid sprintf, as that infringes on the user's name space.
	     Don't have undefined behavior even if the translation
	     produced a string with the wrong number of "%s"s.  */
	  char *yyp = yyresult;
	  int yyi = 0;
	  while ((*yyp = *yyf) != '\0')
	    {
	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
		{
		  yyp += yytnamerr (yyp, yyarg[yyi++]);
		  yyf += 2;
		}
	      else
		{
		  yyp++;
		  yyf++;
		}
	    }
	}
      return yysize;
    }
}
#endif /* YYERROR_VERBOSE */


/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, YYLTYPE *yylocationp, core_yyscan_t yyscanner)
#else
static void
yydestruct (yymsg, yytype, yyvaluep, yylocationp, yyscanner)
    const char *yymsg;
    int yytype;
    YYSTYPE *yyvaluep;
    YYLTYPE *yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  YYUSE (yyvaluep);
  YYUSE (yylocationp);
  YYUSE (yyscanner);

  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  switch (yytype)
    {

      default:
	break;
    }
}


/* Prevent warnings from -Wmissing-prototypes.  */

#ifdef YYPARSE_PARAM
#if defined __STDC__ || defined __cplusplus
int yyparse (void *YYPARSE_PARAM);
#else
int yyparse ();
#endif
#else /* ! YYPARSE_PARAM */
#if defined __STDC__ || defined __cplusplus
int yyparse (core_yyscan_t yyscanner);
#else
int yyparse ();
#endif
#endif /* ! YYPARSE_PARAM */






/*----------.
| yyparse.  |
`----------*/

#ifdef YYPARSE_PARAM
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (void *YYPARSE_PARAM)
#else
int
yyparse (YYPARSE_PARAM)
    void *YYPARSE_PARAM;
#endif
#else /* ! YYPARSE_PARAM */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (core_yyscan_t yyscanner)
#else
int
yyparse (yyscanner)
    core_yyscan_t yyscanner;
#endif
#endif
{
  /* The look-ahead symbol.  */
int yychar;

/* The semantic value of the look-ahead symbol.  */
YYSTYPE yylval;

/* Number of syntax errors so far.  */
int yynerrs;
/* Location data for the look-ahead symbol.  */
YYLTYPE yylloc;

  int yystate;
  int yyn;
  int yyresult;
  /* Number of tokens to shift before error messages enabled.  */
  int yyerrstatus;
  /* Look-ahead token as an internal (translated) token number.  */
  int yytoken = 0;
#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

  /* Three stacks and their tools:
     `yyss': related to states,
     `yyvs': related to semantic values,
     `yyls': related to locations.

     Refer to the stacks thru separate pointers, to allow yyoverflow
     to reallocate them elsewhere.  */

  /* The state stack.  */
  yytype_int16 yyssa[YYINITDEPTH];
  yytype_int16 *yyss = yyssa;
  yytype_int16 *yyssp;

  /* The semantic value stack.  */
  YYSTYPE yyvsa[YYINITDEPTH];
  YYSTYPE *yyvs = yyvsa;
  YYSTYPE *yyvsp;

  /* The location stack.  */
  YYLTYPE yylsa[YYINITDEPTH];
  YYLTYPE *yyls = yylsa;
  YYLTYPE *yylsp;
  /* The locations where the error started and ended.  */
  YYLTYPE yyerror_range[2];

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))

  YYSIZE_T yystacksize = YYINITDEPTH;

  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;
  YYLTYPE yyloc;

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY;		/* Cause a token to be read.  */

  /* Initialize stack pointers.
     Waste one element of value and location stack
     so that they stay on the same level as the state stack.
     The wasted elements are never initialized.  */

  yyssp = yyss;
  yyvsp = yyvs;
  yylsp = yyls;
#if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
  /* Initialize the default location before parsing starts.  */
  yylloc.first_line   = yylloc.last_line   = 1;
  yylloc.first_column = yylloc.last_column = 0;
#endif

  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
	/* Give user a chance to reallocate the stack.  Use copies of
	   these so that the &'s don't force the real ones into
	   memory.  */
	YYSTYPE *yyvs1 = yyvs;
	yytype_int16 *yyss1 = yyss;
	YYLTYPE *yyls1 = yyls;

	/* Each stack pointer address is followed by the size of the
	   data in use in that stack, in bytes.  This used to be a
	   conditional around just the two extra args, but that might
	   be undefined if yyoverflow is a macro.  */
	yyoverflow (YY_("memory exhausted"),
		    &yyss1, yysize * sizeof (*yyssp),
		    &yyvs1, yysize * sizeof (*yyvsp),
		    &yyls1, yysize * sizeof (*yylsp),
		    &yystacksize);
	yyls = yyls1;
	yyss = yyss1;
	yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
	goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
	yystacksize = YYMAXDEPTH;

      {
	yytype_int16 *yyss1 = yyss;
	union yyalloc *yyptr =
	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
	if (! yyptr)
	  goto yyexhaustedlab;
	YYSTACK_RELOCATE (yyss);
	YYSTACK_RELOCATE (yyvs);
	YYSTACK_RELOCATE (yyls);
#  undef YYSTACK_RELOCATE
	if (yyss1 != yyssa)
	  YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;
      yylsp = yyls + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
		  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
	YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     look-ahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to look-ahead token.  */
  yyn = yypact[yystate];
  if (yyn == YYPACT_NINF)
    goto yydefault;

  /* Not known => get a look-ahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid look-ahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = YYLEX;
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yyn == 0 || yyn == YYTABLE_NINF)
	goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the look-ahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token unless it is eof.  */
  if (yychar != YYEOF)
    yychar = YYEMPTY;

  yystate = yyn;
  *++yyvsp = yylval;
  *++yylsp = yylloc;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     `$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];

  /* Default location.  */
  YYLLOC_DEFAULT (yyloc, (yylsp - yylen), yylen);
  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 2:
#line 457 "third_party/libpg_query/grammar/grammar.y"
    {
				pg_yyget_extra(yyscanner)->parsetree = (yyvsp[(1) - (1)].list);
			;}
    break;

  case 3:
#line 473 "third_party/libpg_query/grammar/grammar.y"
    {
					if ((yyvsp[(1) - (3)].list) != NIL)
					{
						/* update length of previous stmt */
						updateRawStmtEnd(llast_node(PGRawStmt, (yyvsp[(1) - (3)].list)), (yylsp[(2) - (3)]));
					}
					if ((yyvsp[(3) - (3)].node) != NULL)
						(yyval.list) = lappend((yyvsp[(1) - (3)].list), makeRawStmt((yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]) + 1));
					else
						(yyval.list) = (yyvsp[(1) - (3)].list);
				;}
    break;

  case 4:
#line 485 "third_party/libpg_query/grammar/grammar.y"
    {
					if ((yyvsp[(1) - (1)].node) != NULL)
						(yyval.list) = list_make1(makeRawStmt((yyvsp[(1) - (1)].node), 0));
					else
						(yyval.list) = NIL;
				;}
    break;

  case 38:
#line 527 "third_party/libpg_query/grammar/grammar.y"
    { (yyval.node) = NULL; ;}
    break;

  case 39:
#line 10 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_TABLE;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 40:
#line 19 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_TABLE;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 41:
#line 28 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_INDEX;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 42:
#line 37 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_INDEX;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 43:
#line 46 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_SEQUENCE;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 44:
#line 55 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_SEQUENCE;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 45:
#line 64 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_VIEW;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 46:
#line 73 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_VIEW;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 47:
#line 86 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 48:
#line 88 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 49:
#line 93 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = (yyvsp[(3) - (3)].node); ;}
    break;

  case 50:
#line 94 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = NULL; ;}
    break;

  case 51:
#line 100 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 52:
#line 104 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 53:
#line 108 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					if (strcmp((yyvsp[(2) - (2)].defelt)->defname, "as") == 0 ||
						strcmp((yyvsp[(2) - (2)].defelt)->defname, "restart") == 0 ||
						strcmp((yyvsp[(2) - (2)].defelt)->defname, "owned_by") == 0)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("sequence option \"%s\" not supported here", (yyvsp[(2) - (2)].defelt)->defname),
								 parser_errposition((yylsp[(2) - (2)]))));
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
				;}
    break;

  case 54:
#line 119 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("generated", (PGNode *) makeInteger((yyvsp[(3) - (3)].ival)), (yylsp[(1) - (3)]));
				;}
    break;

  case 55:
#line 127 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 56:
#line 131 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 57:
#line 140 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(2) - (2)].node);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 58:
#line 149 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(5) - (5)].node);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 59:
#line 158 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(3) - (3)].node);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 60:
#line 167 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(6) - (6)].node);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 61:
#line 176 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ColumnDefault;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (yyvsp[(4) - (4)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 62:
#line 185 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropNotNull;
					n->name = (yyvsp[(3) - (6)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 63:
#line 193 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetNotNull;
					n->name = (yyvsp[(3) - (6)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 64:
#line 201 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetStatistics;
					n->name = (yyvsp[(3) - (6)].str);
					n->def = (PGNode *) makeInteger((yyvsp[(6) - (6)].ival));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 65:
#line 210 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetOptions;
					n->name = (yyvsp[(3) - (5)].str);
					n->def = (PGNode *) (yyvsp[(5) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 66:
#line 219 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ResetOptions;
					n->name = (yyvsp[(3) - (5)].str);
					n->def = (PGNode *) (yyvsp[(5) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 67:
#line 228 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetStorage;
					n->name = (yyvsp[(3) - (6)].str);
					n->def = (PGNode *) makeString((yyvsp[(6) - (6)].str));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 68:
#line 237 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGConstraint *c = makeNode(PGConstraint);

					c->contype = PG_CONSTR_IDENTITY;
					c->generated_when = (yyvsp[(6) - (9)].ival);
					c->options = (yyvsp[(9) - (9)].list);
					c->location = (yylsp[(5) - (9)]);

					n->subtype = PG_AT_AddIdentity;
					n->name = (yyvsp[(3) - (9)].str);
					n->def = (PGNode *) c;

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 69:
#line 254 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetIdentity;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (PGNode *) (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 70:
#line 263 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = AT_DropIdentity;
					n->name = (yyvsp[(3) - (5)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 71:
#line 272 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = AT_DropIdentity;
					n->name = (yyvsp[(3) - (7)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 72:
#line 281 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropColumn;
					n->name = (yyvsp[(5) - (6)].str);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 73:
#line 291 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropColumn;
					n->name = (yyvsp[(3) - (4)].str);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 74:
#line 304 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGColumnDef *def = makeNode(PGColumnDef);
					n->subtype = PG_AT_AlterColumnType;
					n->name = (yyvsp[(3) - (8)].str);
					n->def = (PGNode *) def;
					/* We only use these fields of the PGColumnDef node */
					def->typeName = (yyvsp[(6) - (8)].typnam);
					def->collClause = (PGCollateClause *) (yyvsp[(7) - (8)].node);
					def->raw_default = (yyvsp[(8) - (8)].node);
					def->location = (yylsp[(3) - (8)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 75:
#line 319 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AlterColumnGenericOptions;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (PGNode *) (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 76:
#line 328 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddConstraint;
					n->def = (yyvsp[(2) - (2)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 77:
#line 336 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGConstraint *c = makeNode(PGConstraint);
					n->subtype = PG_AT_AlterConstraint;
					n->def = (PGNode *) c;
					c->contype = PG_CONSTR_FOREIGN; /* others not supported, yet */
					c->conname = (yyvsp[(3) - (4)].str);
					processCASbits((yyvsp[(4) - (4)].ival), (yylsp[(4) - (4)]), "ALTER CONSTRAINT statement",
									&c->deferrable,
									&c->initdeferred,
									NULL, NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 78:
#line 351 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ValidateConstraint;
					n->name = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 79:
#line 359 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropConstraint;
					n->name = (yyvsp[(5) - (6)].str);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 80:
#line 369 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropConstraint;
					n->name = (yyvsp[(3) - (4)].str);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 81:
#line 379 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetLogged;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 82:
#line 386 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetUnLogged;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 83:
#line 393 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetRelOptions;
					n->def = (PGNode *)(yyvsp[(2) - (2)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 84:
#line 401 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ResetRelOptions;
					n->def = (PGNode *)(yyvsp[(2) - (2)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 85:
#line 408 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_GenericOptions;
					n->def = (PGNode *)(yyvsp[(1) - (1)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 86:
#line 418 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 87:
#line 419 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = NULL; ;}
    break;

  case 88:
#line 425 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(1) - (1)].defelt);
				;}
    break;

  case 89:
#line 429 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
					(yyval.defelt)->defaction = PG_DEFELEM_SET;
				;}
    break;

  case 90:
#line 434 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
					(yyval.defelt)->defaction = PG_DEFELEM_ADD;
				;}
    break;

  case 91:
#line 439 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElemExtended(NULL, (yyvsp[(2) - (2)].str), NULL, DEFELEM_DROP, (yylsp[(2) - (2)]));
				;}
    break;

  case 92:
#line 446 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 93:
#line 447 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 94:
#line 452 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 95:
#line 456 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 1; ;}
    break;

  case 96:
#line 457 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 0; ;}
    break;

  case 97:
#line 8 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = (yyvsp[(2) - (2)].str);
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 98:
#line 14 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = (yyvsp[(3) - (3)].str);
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 99:
#line 20 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = NULL;
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 100:
#line 26 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = NULL;
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 101:
#line 7 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SCHEMA;
					n->subname = (yyvsp[(3) - (6)].str);
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 102:
#line 16 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 103:
#line 26 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 104:
#line 36 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 105:
#line 46 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 106:
#line 56 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 107:
#line 66 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 108:
#line 76 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_INDEX;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 109:
#line 86 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_INDEX;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 110:
#line 96 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_COLUMN;
					n->relationType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (8)].range);
					n->subname = (yyvsp[(6) - (8)].str);
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 111:
#line 107 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_COLUMN;
					n->relationType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (10)].range);
					n->subname = (yyvsp[(8) - (10)].str);
					n->newname = (yyvsp[(10) - (10)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 112:
#line 118 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABCONSTRAINT;
					n->relation = (yyvsp[(3) - (8)].range);
					n->subname = (yyvsp[(6) - (8)].str);
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 113:
#line 128 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABCONSTRAINT;
					n->relation = (yyvsp[(5) - (10)].range);
					n->subname = (yyvsp[(8) - (10)].str);
					n->newname = (yyvsp[(10) - (10)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 114:
#line 140 "third_party/libpg_query/grammar/statements/rename.y"
    { (yyval.ival) = COLUMN; ;}
    break;

  case 115:
#line 141 "third_party/libpg_query/grammar/statements/rename.y"
    { (yyval.ival) = 0; ;}
    break;

  case 116:
#line 10 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(5) - (7)].istmt)->relation = (yyvsp[(4) - (7)].range);
					(yyvsp[(5) - (7)].istmt)->onConflictClause = (yyvsp[(6) - (7)].onconflict);
					(yyvsp[(5) - (7)].istmt)->returningList = (yyvsp[(7) - (7)].list);
					(yyvsp[(5) - (7)].istmt)->withClause = (yyvsp[(1) - (7)].with);
					(yyval.node) = (PGNode *) (yyvsp[(5) - (7)].istmt);
				;}
    break;

  case 117:
#line 22 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = (yyvsp[(1) - (1)].node);
				;}
    break;

  case 118:
#line 28 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->override = (yyvsp[(2) - (4)].override);
					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
				;}
    break;

  case 119:
#line 35 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = (yyvsp[(2) - (4)].list);
					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
				;}
    break;

  case 120:
#line 41 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = (yyvsp[(2) - (7)].list);
					(yyval.istmt)->override = (yyvsp[(5) - (7)].override);
					(yyval.istmt)->selectStmt = (yyvsp[(7) - (7)].node);
				;}
    break;

  case 121:
#line 48 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = NULL;
				;}
    break;

  case 122:
#line 58 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
				;}
    break;

  case 123:
#line 62 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(1) - (3)].range)->alias = makeAlias((yyvsp[(3) - (3)].str), NIL);
					(yyval.range) = (yyvsp[(1) - (3)].range);
				;}
    break;

  case 124:
#line 71 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = makeNode(PGInferClause);
					(yyval.infer)->indexElems = (yyvsp[(2) - (4)].list);
					(yyval.infer)->whereClause = (yyvsp[(4) - (4)].node);
					(yyval.infer)->conname = NULL;
					(yyval.infer)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 125:
#line 80 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = makeNode(PGInferClause);
					(yyval.infer)->indexElems = NIL;
					(yyval.infer)->whereClause = NULL;
					(yyval.infer)->conname = (yyvsp[(3) - (3)].str);
					(yyval.infer)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 126:
#line 88 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = NULL;
				;}
    break;

  case 127:
#line 95 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.with) = (yyvsp[(1) - (1)].with); ;}
    break;

  case 128:
#line 96 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.with) = NULL; ;}
    break;

  case 129:
#line 102 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(1) - (2)].str);
					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.target)->val = NULL;
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 130:
#line 114 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(1) - (3)].target)->val = (PGNode *) (yyvsp[(3) - (3)].node);
					(yyval.list) = list_make1((yyvsp[(1) - (3)].target));
				;}
    break;

  case 131:
#line 119 "third_party/libpg_query/grammar/statements/insert.y"
    {
					int ncolumns = list_length((yyvsp[(2) - (5)].list));
					int i = 1;
					PGListCell *col_cell;

					/* Create a PGMultiAssignRef source for each target */
					foreach(col_cell, (yyvsp[(2) - (5)].list))
					{
						PGResTarget *res_col = (PGResTarget *) lfirst(col_cell);
						PGMultiAssignRef *r = makeNode(PGMultiAssignRef);

						r->source = (PGNode *) (yyvsp[(5) - (5)].node);
						r->colno = i;
						r->ncolumns = ncolumns;
						res_col->val = (PGNode *) r;
						i++;
					}

					(yyval.list) = (yyvsp[(2) - (5)].list);
				;}
    break;

  case 132:
#line 144 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = makeNode(PGOnConflictClause);
					(yyval.onconflict)->action = PG_ONCONFLICT_UPDATE;
					(yyval.onconflict)->infer = (yyvsp[(3) - (8)].infer);
					(yyval.onconflict)->targetList = (yyvsp[(7) - (8)].list);
					(yyval.onconflict)->whereClause = (yyvsp[(8) - (8)].node);
					(yyval.onconflict)->location = (yylsp[(1) - (8)]);
				;}
    break;

  case 133:
#line 154 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = makeNode(PGOnConflictClause);
					(yyval.onconflict)->action = PG_ONCONFLICT_NOTHING;
					(yyval.onconflict)->infer = (yyvsp[(3) - (5)].infer);
					(yyval.onconflict)->targetList = NIL;
					(yyval.onconflict)->whereClause = NULL;
					(yyval.onconflict)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 134:
#line 163 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = NULL;
				;}
    break;

  case 135:
#line 170 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = (yyvsp[(1) - (5)].str);
					(yyval.ielem)->expr = NULL;
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(2) - (5)].list);
					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].nullorder);
				;}
    break;

  case 136:
#line 181 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[(1) - (5)].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(2) - (5)].list);
					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].nullorder);
				;}
    break;

  case 137:
#line 192 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[(2) - (7)].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(4) - (7)].list);
					(yyval.ielem)->opclass = (yyvsp[(5) - (7)].list);
					(yyval.ielem)->ordering = (yyvsp[(6) - (7)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(7) - (7)].nullorder);
				;}
    break;

  case 138:
#line 206 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 139:
#line 207 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 140:
#line 213 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.override) = PG_OVERRIDING_USER_VALUE; ;}
    break;

  case 141:
#line 214 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.override) = OVERRIDING_SYSTEM_VALUE; ;}
    break;

  case 142:
#line 219 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 143:
#line 220 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].target)); ;}
    break;

  case 144:
#line 226 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 145:
#line 227 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 146:
#line 231 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 147:
#line 232 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 148:
#line 238 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 149:
#line 240 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
    break;

  case 150:
#line 245 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 151:
#line 246 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_concat((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].list)); ;}
    break;

  case 152:
#line 250 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].ielem)); ;}
    break;

  case 153:
#line 251 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].ielem)); ;}
    break;

  case 154:
#line 257 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(1) - (2)].str);
					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.target)->val = NULL;	/* upper production sets this */
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 155:
#line 8 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_NOTHING;
					n->name = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 156:
#line 15 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_ASSIGNMENT;
					n->name = (yyvsp[(2) - (4)].str);
					n->args = (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 157:
#line 23 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_CALL;
					n->name = (yyvsp[(2) - (5)].str);
					n->args = (yyvsp[(4) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 158:
#line 10 "third_party/libpg_query/grammar/statements/create_sequence.y"
    {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[(4) - (5)].range)->relpersistence = (yyvsp[(2) - (5)].ival);
					n->sequence = (yyvsp[(4) - (5)].range);
					n->options = (yyvsp[(5) - (5)].list);
					n->ownerId = InvalidOid;
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 159:
#line 20 "third_party/libpg_query/grammar/statements/create_sequence.y"
    {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[(7) - (8)].range)->relpersistence = (yyvsp[(2) - (8)].ival);
					n->sequence = (yyvsp[(7) - (8)].range);
					n->options = (yyvsp[(8) - (8)].list);
					n->ownerId = InvalidOid;
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 160:
#line 32 "third_party/libpg_query/grammar/statements/create_sequence.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 161:
#line 33 "third_party/libpg_query/grammar/statements/create_sequence.y"
    { (yyval.list) = NIL; ;}
    break;

  case 162:
#line 8 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(2) - (3)].str);
					n->params = (yyvsp[(3) - (3)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 163:
#line 16 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(7) - (9)].str);
					n->params = (yyvsp[(8) - (9)].list);
					ctas->query = (PGNode *) n;
					ctas->into = (yyvsp[(4) - (9)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = false;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(4) - (9)].into)->rel->relpersistence = (yyvsp[(2) - (9)].ival);
					(yyvsp[(4) - (9)].into)->skipData = !((yyvsp[(9) - (9)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 164:
#line 33 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(10) - (12)].str);
					n->params = (yyvsp[(11) - (12)].list);
					ctas->query = (PGNode *) n;
					ctas->into = (yyvsp[(7) - (12)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = true;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(7) - (12)].into)->rel->relpersistence = (yyvsp[(2) - (12)].ival);
					(yyvsp[(7) - (12)].into)->skipData = !((yyvsp[(12) - (12)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 165:
#line 51 "third_party/libpg_query/grammar/statements/execute.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 166:
#line 52 "third_party/libpg_query/grammar/statements/execute.y"
    { (yyval.list) = NIL; ;}
    break;

  case 167:
#line 10 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
					n->sequence = (yyvsp[(3) - (4)].range);
					n->options = (yyvsp[(4) - (4)].list);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 168:
#line 18 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
					n->sequence = (yyvsp[(5) - (6)].range);
					n->options = (yyvsp[(6) - (6)].list);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 169:
#line 29 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 170:
#line 30 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 171:
#line 34 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 172:
#line 35 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 173:
#line 36 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 174:
#line 41 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeFloat((yyvsp[(1) - (1)].str)); ;}
    break;

  case 175:
#line 42 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeFloat((yyvsp[(2) - (2)].str)); ;}
    break;

  case 176:
#line 44 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.value) = makeFloat((yyvsp[(2) - (2)].str));
					doNegateFloat((yyval.value));
				;}
    break;

  case 177:
#line 48 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeInteger((yyvsp[(1) - (1)].ival)); ;}
    break;

  case 178:
#line 53 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("as", (PGNode *)(yyvsp[(2) - (2)].typnam), (yylsp[(1) - (2)]));
				;}
    break;

  case 179:
#line 57 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cache", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 180:
#line 61 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 181:
#line 65 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(false), (yylsp[(1) - (2)]));
				;}
    break;

  case 182:
#line 69 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("increment", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 183:
#line 73 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("maxvalue", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 184:
#line 77 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("minvalue", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 185:
#line 81 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("maxvalue", NULL, (yylsp[(1) - (2)]));
				;}
    break;

  case 186:
#line 85 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("minvalue", NULL, (yylsp[(1) - (2)]));
				;}
    break;

  case 187:
#line 89 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("owned_by", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 188:
#line 93 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					/* not documented, only used by pg_dump */
					(yyval.defelt) = makeDefElem("sequence_name", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 189:
#line 98 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("start", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 190:
#line 102 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 191:
#line 106 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 192:
#line 112 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 193:
#line 113 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 194:
#line 117 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 195:
#line 118 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = + (yyvsp[(2) - (2)].ival); ;}
    break;

  case 196:
#line 119 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = - (yyvsp[(2) - (2)].ival); ;}
    break;

  case 197:
#line 3 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 198:
#line 10 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_BEGIN;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 199:
#line 16 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_START;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 200:
#line 22 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 201:
#line 29 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 202:
#line 36 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 203:
#line 45 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 204:
#line 46 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 205:
#line 47 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 206:
#line 9 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(4) - (9)].range)->relpersistence = (yyvsp[(2) - (9)].ival);
					n->relation = (yyvsp[(4) - (9)].range);
					n->tableElts = (yyvsp[(6) - (9)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(8) - (9)].list);
					n->oncommit = (yyvsp[(9) - (9)].oncommit);
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 207:
#line 24 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(7) - (12)].range)->relpersistence = (yyvsp[(2) - (12)].ival);
					n->relation = (yyvsp[(7) - (12)].range);
					n->tableElts = (yyvsp[(9) - (12)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(11) - (12)].list);
					n->oncommit = (yyvsp[(12) - (12)].oncommit);
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 208:
#line 41 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = 0; ;}
    break;

  case 209:
#line 43 "third_party/libpg_query/grammar/statements/create.y"
    {
					/*
					 * We must complain about conflicting options.
					 * We could, but choose not to, complain about redundant
					 * options (ie, where $2's bit is already set in $1).
					 */
					int		newspec = (yyvsp[(1) - (2)].ival) | (yyvsp[(2) - (2)].ival);

					/* special message for this case */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED)) == (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("constraint declared INITIALLY DEFERRED must be DEFERRABLE"),
								 parser_errposition((yylsp[(2) - (2)]))));
					/* generic message for other conflicts */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE)) == (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE) ||
						(newspec & (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED)) == (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("conflicting constraint properties"),
								 parser_errposition((yylsp[(2) - (2)]))));
					(yyval.ival) = newspec;
				;}
    break;

  case 210:
#line 69 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].typnam); ;}
    break;

  case 211:
#line 70 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
    break;

  case 212:
#line 71 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].list); ;}
    break;

  case 213:
#line 72 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].value); ;}
    break;

  case 214:
#line 73 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 215:
#line 74 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
    break;

  case 216:
#line 78 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 217:
#line 79 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 218:
#line 84 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 219:
#line 89 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_NOACTION; ;}
    break;

  case 220:
#line 90 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_RESTRICT; ;}
    break;

  case 221:
#line 91 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_CASCADE; ;}
    break;

  case 222:
#line 92 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_SETNULL; ;}
    break;

  case 223:
#line 93 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_SETDEFAULT; ;}
    break;

  case 224:
#line 99 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = castNode(PGConstraint, (yyvsp[(3) - (3)].node));
					n->conname = (yyvsp[(2) - (3)].str);
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 225:
#line 105 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 226:
#line 106 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 227:
#line 108 "third_party/libpg_query/grammar/statements/create.y"
    {
					/*
					 * Note: the PGCollateClause is momentarily included in
					 * the list built by ColQualList, but we split it out
					 * again in SplitColQualList.
					 */
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[(2) - (2)].list);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 228:
#line 125 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_NOTNULL;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 229:
#line 132 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_NULL;
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 230:
#line 139 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (2)]);
					n->keys = NULL;
					n->options = (yyvsp[(2) - (2)].list);
					n->indexname = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 231:
#line 149 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (3)]);
					n->keys = NULL;
					n->options = (yyvsp[(3) - (3)].list);
					n->indexname = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 232:
#line 159 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_CHECK;
					n->location = (yylsp[(1) - (5)]);
					n->is_no_inherit = (yyvsp[(5) - (5)].boolean);
					n->raw_expr = (yyvsp[(3) - (5)].node);
					n->cooked_expr = NULL;
					n->skip_validation = false;
					n->initially_valid = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 233:
#line 171 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_DEFAULT;
					n->location = (yylsp[(1) - (2)]);
					n->raw_expr = (yyvsp[(2) - (2)].node);
					n->cooked_expr = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 234:
#line 180 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_IDENTITY;
					n->generated_when = (yyvsp[(2) - (5)].ival);
					n->options = (yyvsp[(5) - (5)].list);
					n->location = (yylsp[(1) - (5)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 235:
#line 189 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_FOREIGN;
					n->location = (yylsp[(1) - (5)]);
					n->pktable			= (yyvsp[(2) - (5)].range);
					n->fk_attrs			= NIL;
					n->pk_attrs			= (yyvsp[(3) - (5)].list);
					n->fk_matchtype		= (yyvsp[(4) - (5)].ival);
					n->fk_upd_action	= (char) ((yyvsp[(5) - (5)].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[(5) - (5)].ival) & 0xFF);
					n->skip_validation  = false;
					n->initially_valid  = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 236:
#line 208 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 237:
#line 214 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
    break;

  case 238:
#line 220 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(1) - (1)].ival) << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); ;}
    break;

  case 239:
#line 222 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | ((yyvsp[(1) - (1)].ival) & 0xFF); ;}
    break;

  case 240:
#line 224 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(1) - (2)].ival) << 8) | ((yyvsp[(2) - (2)].ival) & 0xFF); ;}
    break;

  case 241:
#line 226 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(2) - (2)].ival) << 8) | ((yyvsp[(1) - (2)].ival) & 0xFF); ;}
    break;

  case 242:
#line 228 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); ;}
    break;

  case 243:
#line 233 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 244:
#line 234 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 245:
#line 238 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = ONCOMMIT_DROP; ;}
    break;

  case 246:
#line 239 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_DELETE_ROWS; ;}
    break;

  case 247:
#line 240 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_PRESERVE_ROWS; ;}
    break;

  case 248:
#line 241 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_NOOP; ;}
    break;

  case 249:
#line 246 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 250:
#line 250 "third_party/libpg_query/grammar/statements/create.y"
    {  (yyval.boolean) = true; ;}
    break;

  case 251:
#line 251 "third_party/libpg_query/grammar/statements/create.y"
    {  (yyval.boolean) = false; ;}
    break;

  case 252:
#line 257 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = castNode(PGConstraint, (yyvsp[(3) - (3)].node));
					n->conname = (yyvsp[(2) - (3)].str);
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 253:
#line 263 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 254:
#line 268 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_COMMENTS; ;}
    break;

  case 255:
#line 269 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_CONSTRAINTS; ;}
    break;

  case 256:
#line 270 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_DEFAULTS; ;}
    break;

  case 257:
#line 271 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_IDENTITY; ;}
    break;

  case 258:
#line 272 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_INDEXES; ;}
    break;

  case 259:
#line 273 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_STATISTICS; ;}
    break;

  case 260:
#line 274 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_STORAGE; ;}
    break;

  case 261:
#line 275 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_ALL; ;}
    break;

  case 262:
#line 281 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 263:
#line 282 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
    break;

  case 264:
#line 286 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(3) - (3)].str); ;}
    break;

  case 265:
#line 292 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_DEFERRABLE;
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 266:
#line 299 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_NOT_DEFERRABLE;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 267:
#line 306 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_DEFERRED;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 268:
#line 313 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_IMMEDIATE;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 269:
#line 324 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 270:
#line 325 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(true), (yylsp[(1) - (2)]))); ;}
    break;

  case 271:
#line 326 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(false), (yylsp[(1) - (2)]))); ;}
    break;

  case 272:
#line 327 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 273:
#line 331 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 274:
#line 336 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
    break;

  case 275:
#line 337 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) & ~(yyvsp[(3) - (3)].ival); ;}
    break;

  case 276:
#line 338 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = 0; ;}
    break;

  case 277:
#line 343 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 278:
#line 348 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NOT_DEFERRABLE; ;}
    break;

  case 279:
#line 349 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_DEFERRABLE; ;}
    break;

  case 280:
#line 350 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_INITIALLY_IMMEDIATE; ;}
    break;

  case 281:
#line 351 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_INITIALLY_DEFERRED; ;}
    break;

  case 282:
#line 352 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NOT_VALID; ;}
    break;

  case 283:
#line 353 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NO_INHERIT; ;}
    break;

  case 284:
#line 359 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->colname = (yyvsp[(1) - (4)].str);
					n->typeName = (yyvsp[(2) - (4)].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collOid = InvalidOid;
					n->fdwoptions = (yyvsp[(3) - (4)].list);
					SplitColQualList((yyvsp[(4) - (4)].list), &n->constraints, &n->collClause,
									 yyscanner);
					n->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 285:
#line 382 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 286:
#line 386 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 287:
#line 392 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 288:
#line 393 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
    break;

  case 289:
#line 397 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 290:
#line 401 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 291:
#line 402 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 292:
#line 403 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 293:
#line 408 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (PGNode *) (yyvsp[(3) - (3)].node), (yylsp[(1) - (3)]));
				;}
    break;

  case 294:
#line 412 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 295:
#line 419 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 296:
#line 420 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 297:
#line 425 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 298:
#line 426 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 299:
#line 431 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str));
				;}
    break;

  case 300:
#line 438 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 301:
#line 439 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 302:
#line 444 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 303:
#line 445 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 304:
#line 449 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
    break;

  case 305:
#line 455 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (PGNode *) (yyvsp[(3) - (3)].node), (yylsp[(1) - (3)]));
				;}
    break;

  case 306:
#line 459 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 307:
#line 463 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (5)].str), (yyvsp[(3) - (5)].str), (PGNode *) (yyvsp[(5) - (5)].node),
											 PG_DEFELEM_UNSPEC, (yylsp[(1) - (5)]));
				;}
    break;

  case 308:
#line 468 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str), NULL, PG_DEFELEM_UNSPEC, (yylsp[(1) - (3)]));
				;}
    break;

  case 309:
#line 475 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 310:
#line 476 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 311:
#line 480 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 312:
#line 482 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(1) - (4)].str)), (yyvsp[(2) - (4)].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 313:
#line 488 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(2) - (5)].str)), (yyvsp[(3) - (5)].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->setof = true;
					(yyval.typnam)->location = (yylsp[(2) - (5)]);
				;}
    break;

  case 314:
#line 499 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_CHECK;
					n->location = (yylsp[(1) - (5)]);
					n->raw_expr = (yyvsp[(3) - (5)].node);
					n->cooked_expr = NULL;
					processCASbits((yyvsp[(5) - (5)].ival), (yylsp[(5) - (5)]), "CHECK",
								   NULL, NULL, &n->skip_validation,
								   &n->is_no_inherit, yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 315:
#line 513 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (6)]);
					n->keys = (yyvsp[(3) - (6)].list);
					n->options = (yyvsp[(5) - (6)].list);
					n->indexname = NULL;
					processCASbits((yyvsp[(6) - (6)].ival), (yylsp[(6) - (6)]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 316:
#line 526 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (3)]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[(2) - (3)].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[(3) - (3)].ival), (yylsp[(3) - (3)]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 317:
#line 541 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (7)]);
					n->keys = (yyvsp[(4) - (7)].list);
					n->options = (yyvsp[(6) - (7)].list);
					n->indexname = NULL;
					processCASbits((yyvsp[(7) - (7)].ival), (yylsp[(7) - (7)]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 318:
#line 554 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (4)]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[(3) - (4)].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[(4) - (4)].ival), (yylsp[(4) - (4)]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 319:
#line 569 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_FOREIGN;
					n->location = (yylsp[(1) - (11)]);
					n->pktable			= (yyvsp[(7) - (11)].range);
					n->fk_attrs			= (yyvsp[(4) - (11)].list);
					n->pk_attrs			= (yyvsp[(8) - (11)].list);
					n->fk_matchtype		= (yyvsp[(9) - (11)].ival);
					n->fk_upd_action	= (char) ((yyvsp[(10) - (11)].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[(10) - (11)].ival) & 0xFF);
					processCASbits((yyvsp[(11) - (11)].ival), (yylsp[(11) - (11)]), "FOREIGN KEY",
								   &n->deferrable, &n->initdeferred,
								   &n->skip_validation, NULL,
								   yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 320:
#line 591 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 321:
#line 595 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 322:
#line 602 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_FULL;
			;}
    break;

  case 323:
#line 606 "third_party/libpg_query/grammar/statements/create.y"
    {
				ereport(ERROR,
						(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
						 errmsg("MATCH PARTIAL not yet implemented"),
						 parser_errposition((yylsp[(1) - (2)]))));
				(yyval.ival) = PG_FKCONSTR_MATCH_PARTIAL;
			;}
    break;

  case 324:
#line 614 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
			;}
    break;

  case 325:
#line 618 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
			;}
    break;

  case 326:
#line 626 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGTableLikeClause *n = makeNode(PGTableLikeClause);
					n->relation = (yyvsp[(2) - (3)].range);
					n->options = (yyvsp[(3) - (3)].ival);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 327:
#line 635 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 328:
#line 636 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 329:
#line 637 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 330:
#line 638 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 331:
#line 640 "third_party/libpg_query/grammar/statements/create.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 332:
#line 647 "third_party/libpg_query/grammar/statements/create.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 333:
#line 653 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_UNLOGGED; ;}
    break;

  case 334:
#line 654 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = RELPERSISTENCE_PERMANENT; ;}
    break;

  case 335:
#line 659 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_ATTRIBUTE_IDENTITY_ALWAYS; ;}
    break;

  case 336:
#line 660 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ATTRIBUTE_IDENTITY_BY_DEFAULT; ;}
    break;

  case 337:
#line 10 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 338:
#line 20 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (4)].objtype);
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 339:
#line 30 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 340:
#line 40 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (4)].objtype);
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 341:
#line 50 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->objects = list_make1(lappend((yyvsp[(5) - (6)].list), makeString((yyvsp[(3) - (6)].str))));
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = false;
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 342:
#line 60 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (8)].objtype);
					n->objects = list_make1(lappend((yyvsp[(7) - (8)].list), makeString((yyvsp[(5) - (8)].str))));
					n->behavior = (yyvsp[(8) - (8)].dbehavior);
					n->missing_ok = true;
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 343:
#line 73 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TABLE; ;}
    break;

  case 344:
#line 74 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_SEQUENCE; ;}
    break;

  case 345:
#line 75 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FUNCTION; ;}
    break;

  case 346:
#line 76 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FUNCTION; ;}
    break;

  case 347:
#line 77 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_VIEW; ;}
    break;

  case 348:
#line 78 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_MATVIEW; ;}
    break;

  case 349:
#line 79 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_INDEX; ;}
    break;

  case 350:
#line 80 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FOREIGN_TABLE; ;}
    break;

  case 351:
#line 81 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_COLLATION; ;}
    break;

  case 352:
#line 82 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_CONVERSION; ;}
    break;

  case 353:
#line 83 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_STATISTIC_EXT; ;}
    break;

  case 354:
#line 84 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSPARSER; ;}
    break;

  case 355:
#line 85 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSDICTIONARY; ;}
    break;

  case 356:
#line 86 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSTEMPLATE; ;}
    break;

  case 357:
#line 87 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSCONFIGURATION; ;}
    break;

  case 358:
#line 92 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_ACCESS_METHOD; ;}
    break;

  case 359:
#line 93 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_EVENT_TRIGGER; ;}
    break;

  case 360:
#line 94 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_EXTENSION; ;}
    break;

  case 361:
#line 95 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FDW; ;}
    break;

  case 362:
#line 96 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_PUBLICATION; ;}
    break;

  case 363:
#line 97 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_SCHEMA; ;}
    break;

  case 364:
#line 98 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FOREIGN_SERVER; ;}
    break;

  case 365:
#line 103 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 366:
#line 104 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 367:
#line 109 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_CASCADE; ;}
    break;

  case 368:
#line 110 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_RESTRICT; ;}
    break;

  case 369:
#line 111 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_RESTRICT; /* default */ ;}
    break;

  case 370:
#line 116 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_POLICY; ;}
    break;

  case 371:
#line 117 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_RULE; ;}
    break;

  case 372:
#line 118 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TRIGGER; ;}
    break;

  case 373:
#line 8 "third_party/libpg_query/grammar/statements/create_function.y"
    {
					PGCreateFunctionStmt *n = makeNode(PGCreateFunctionStmt);
					n->name = (yyvsp[(3) - (6)].range);
					n->params = (yyvsp[(4) - (6)].list);
					n->function = (yyvsp[(6) - (6)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 376:
#line 24 "third_party/libpg_query/grammar/statements/create_function.y"
    {
				(yyval.list) = NIL;
			;}
    break;

  case 377:
#line 28 "third_party/libpg_query/grammar/statements/create_function.y"
    {
				(yyval.list) = (yyvsp[(2) - (3)].list);
			;}
    break;

  case 378:
#line 12 "third_party/libpg_query/grammar/statements/update.y"
    {
					PGUpdateStmt *n = makeNode(PGUpdateStmt);
					n->relation = (yyvsp[(3) - (8)].range);
					n->targetList = (yyvsp[(5) - (8)].list);
					n->fromClause = (yyvsp[(6) - (8)].list);
					n->whereClause = (yyvsp[(7) - (8)].node);
					n->returningList = (yyvsp[(8) - (8)].list);
					n->withClause = (yyvsp[(1) - (8)].with);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 379:
#line 3 "third_party/libpg_query/grammar/statements/copy.y"
    {
					PGCopyStmt *n = makeNode(PGCopyStmt);
					n->relation = (yyvsp[(3) - (11)].range);
					n->query = NULL;
					n->attlist = (yyvsp[(4) - (11)].list);
					n->is_from = (yyvsp[(6) - (11)].boolean);
					n->is_program = (yyvsp[(7) - (11)].boolean);
					n->filename = (yyvsp[(8) - (11)].str);

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[(8) - (11)]))));

					n->options = NIL;
					/* Concatenate user-supplied flags */
					if ((yyvsp[(2) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(2) - (11)].defelt));
					if ((yyvsp[(5) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(5) - (11)].defelt));
					if ((yyvsp[(9) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(9) - (11)].defelt));
					if ((yyvsp[(11) - (11)].list))
						n->options = list_concat(n->options, (yyvsp[(11) - (11)].list));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 380:
#line 31 "third_party/libpg_query/grammar/statements/copy.y"
    {
					PGCopyStmt *n = makeNode(PGCopyStmt);
					n->relation = NULL;
					n->query = (yyvsp[(3) - (9)].node);
					n->attlist = NIL;
					n->is_from = false;
					n->is_program = (yyvsp[(6) - (9)].boolean);
					n->filename = (yyvsp[(7) - (9)].str);
					n->options = (yyvsp[(9) - (9)].list);

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[(5) - (9)]))));

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 381:
#line 53 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = true; ;}
    break;

  case 382:
#line 54 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = false; ;}
    break;

  case 383:
#line 60 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(2) - (3)]));
				;}
    break;

  case 384:
#line 63 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 385:
#line 69 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 386:
#line 73 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 387:
#line 80 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 388:
#line 81 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 389:
#line 85 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 390:
#line 86 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 391:
#line 91 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = true; ;}
    break;

  case 392:
#line 92 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = false; ;}
    break;

  case 393:
#line 96 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 394:
#line 97 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 395:
#line 102 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 396:
#line 103 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].value); ;}
    break;

  case 397:
#line 104 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeNode(PGAStar); ;}
    break;

  case 398:
#line 105 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) (yyvsp[(2) - (3)].list); ;}
    break;

  case 399:
#line 106 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = NULL; ;}
    break;

  case 400:
#line 112 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 401:
#line 120 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[(1) - (2)]));
				;}
    break;

  case 402:
#line 123 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 403:
#line 128 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 404:
#line 129 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = NIL; ;}
    break;

  case 405:
#line 135 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[(1) - (1)]));
				;}
    break;

  case 406:
#line 138 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 407:
#line 144 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[(1) - (1)]));
				;}
    break;

  case 408:
#line 148 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 409:
#line 152 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("freeze", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 410:
#line 156 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 411:
#line 160 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("null", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 412:
#line 164 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("csv"), (yylsp[(1) - (1)]));
				;}
    break;

  case 413:
#line 168 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("header", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 414:
#line 172 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("quote", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 415:
#line 176 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("escape", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 416:
#line 180 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 417:
#line 184 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)makeNode(PGAStar), (yylsp[(1) - (3)]));
				;}
    break;

  case 418:
#line 188 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_not_null", (PGNode *)(yyvsp[(4) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 419:
#line 192 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_null", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 420:
#line 196 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("encoding", (PGNode *)makeString((yyvsp[(2) - (2)].str)), (yylsp[(1) - (2)]));
				;}
    break;

  case 421:
#line 203 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 422:
#line 209 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 423:
#line 210 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = NULL; ;}
    break;

  case 424:
#line 211 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = NULL; ;}
    break;

  case 425:
#line 217 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 426:
#line 221 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 429:
#line 52 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 430:
#line 53 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 431:
#line 68 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 432:
#line 70 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list), NIL,
										NULL, NULL, NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (2)].node);
				;}
    break;

  case 433:
#line 77 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(3) - (4)].list),
										(PGNode*) list_nth((yyvsp[(4) - (4)].list), 0), (PGNode*) list_nth((yyvsp[(4) - (4)].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (4)].node);
				;}
    break;

  case 434:
#line 85 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(4) - (4)].list),
										(PGNode*) list_nth((yyvsp[(3) - (4)].list), 0), (PGNode*) list_nth((yyvsp[(3) - (4)].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (4)].node);
				;}
    break;

  case 435:
#line 93 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (2)].node), NULL, NIL,
										NULL, NULL,
										(yyvsp[(1) - (2)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (2)].node);
				;}
    break;

  case 436:
#line 101 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].list), NIL,
										NULL, NULL,
										(yyvsp[(1) - (3)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (3)].node);
				;}
    break;

  case 437:
#line 109 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(4) - (5)].list),
										(PGNode*) list_nth((yyvsp[(5) - (5)].list), 0), (PGNode*) list_nth((yyvsp[(5) - (5)].list), 1),
										(yyvsp[(1) - (5)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (5)].node);
				;}
    break;

  case 438:
#line 117 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(5) - (5)].list),
										(PGNode*) list_nth((yyvsp[(4) - (5)].list), 0), (PGNode*) list_nth((yyvsp[(4) - (5)].list), 1),
										(yyvsp[(1) - (5)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (5)].node);
				;}
    break;

  case 439:
#line 127 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 440:
#line 128 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 441:
#line 158 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->targetList = (yyvsp[(3) - (10)].list);
					n->intoClause = (yyvsp[(4) - (10)].into);
					n->fromClause = (yyvsp[(5) - (10)].list);
					n->whereClause = (yyvsp[(6) - (10)].node);
					n->groupClause = (yyvsp[(7) - (10)].list);
					n->havingClause = (yyvsp[(8) - (10)].node);
					n->windowClause = (yyvsp[(9) - (10)].list);
					n->sampleOptions = (yyvsp[(10) - (10)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 442:
#line 173 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->distinctClause = (yyvsp[(2) - (10)].list);
					n->targetList = (yyvsp[(3) - (10)].list);
					n->intoClause = (yyvsp[(4) - (10)].into);
					n->fromClause = (yyvsp[(5) - (10)].list);
					n->whereClause = (yyvsp[(6) - (10)].node);
					n->groupClause = (yyvsp[(7) - (10)].list);
					n->havingClause = (yyvsp[(8) - (10)].node);
					n->windowClause = (yyvsp[(9) - (10)].list);
					n->sampleOptions = (yyvsp[(10) - (10)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 443:
#line 186 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 444:
#line 188 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* same as SELECT * FROM relation_expr */
					PGColumnRef *cr = makeNode(PGColumnRef);
					PGResTarget *rt = makeNode(PGResTarget);
					PGSelectStmt *n = makeNode(PGSelectStmt);

					cr->fields = list_make1(makeNode(PGAStar));
					cr->location = -1;

					rt->name = NULL;
					rt->indirection = NIL;
					rt->val = (PGNode *)cr;
					rt->location = -1;

					n->targetList = list_make1(rt);
					n->fromClause = list_make1((yyvsp[(2) - (2)].range));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 445:
#line 207 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_UNION, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 446:
#line 211 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_INTERSECT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 447:
#line 215 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_EXCEPT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 448:
#line 232 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[(1) - (2)]);
			;}
    break;

  case 449:
#line 239 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[(1) - (2)]);
			;}
    break;

  case 450:
#line 246 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(3) - (3)].list);
				(yyval.with)->recursive = true;
				(yyval.with)->location = (yylsp[(1) - (3)]);
			;}
    break;

  case 451:
#line 255 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 452:
#line 256 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 453:
#line 260 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGCommonTableExpr *n = makeNode(PGCommonTableExpr);
				n->ctename = (yyvsp[(1) - (6)].str);
				n->aliascolnames = (yyvsp[(2) - (6)].list);
				n->ctequery = (yyvsp[(5) - (6)].node);
				n->location = (yylsp[(1) - (6)]);
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 454:
#line 272 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.into) = makeNode(PGIntoClause);
					(yyval.into)->rel = (yyvsp[(2) - (2)].range);
					(yyval.into)->colNames = NIL;
					(yyval.into)->options = NIL;
					(yyval.into)->onCommit = PG_ONCOMMIT_NOOP;
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;
				;}
    break;

  case 455:
#line 282 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.into) = NULL; ;}
    break;

  case 456:
#line 291 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 457:
#line 296 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 458:
#line 301 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 459:
#line 306 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 460:
#line 311 "third_party/libpg_query/grammar/statements/select.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (4)]))));
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 461:
#line 319 "third_party/libpg_query/grammar/statements/select.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (4)]))));
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 462:
#line 327 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_UNLOGGED;
				;}
    break;

  case 463:
#line 332 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(2) - (2)].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				;}
    break;

  case 464:
#line 337 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				;}
    break;

  case 465:
#line 343 "third_party/libpg_query/grammar/statements/select.y"
    {;}
    break;

  case 466:
#line 344 "third_party/libpg_query/grammar/statements/select.y"
    {;}
    break;

  case 467:
#line 348 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 468:
#line 349 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 469:
#line 350 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 470:
#line 357 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(NIL); ;}
    break;

  case 471:
#line 358 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
    break;

  case 472:
#line 362 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL;;}
    break;

  case 473:
#line 363 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 474:
#line 367 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list);;}
    break;

  case 475:
#line 368 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 476:
#line 372 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 477:
#line 376 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].sortby)); ;}
    break;

  case 478:
#line 377 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].sortby)); ;}
    break;

  case 479:
#line 381 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.sortby) = makeNode(PGSortBy);
					(yyval.sortby)->node = (yyvsp[(1) - (4)].node);
					(yyval.sortby)->sortby_dir = SORTBY_USING;
					(yyval.sortby)->sortby_nulls = (yyvsp[(4) - (4)].nullorder);
					(yyval.sortby)->useOp = (yyvsp[(3) - (4)].list);
					(yyval.sortby)->location = (yylsp[(3) - (4)]);
				;}
    break;

  case 480:
#line 390 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.sortby) = makeNode(PGSortBy);
					(yyval.sortby)->node = (yyvsp[(1) - (3)].node);
					(yyval.sortby)->sortby_dir = (yyvsp[(2) - (3)].sortorder);
					(yyval.sortby)->sortby_nulls = (yyvsp[(3) - (3)].nullorder);
					(yyval.sortby)->useOp = NIL;
					(yyval.sortby)->location = -1;		/* no operator */
				;}
    break;

  case 481:
#line 400 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_ASC; ;}
    break;

  case 482:
#line 401 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_DESC; ;}
    break;

  case 483:
#line 402 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_DEFAULT; ;}
    break;

  case 484:
#line 405 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_FIRST; ;}
    break;

  case 485:
#line 406 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_LAST; ;}
    break;

  case 486:
#line 407 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_DEFAULT; ;}
    break;

  case 487:
#line 411 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(2) - (2)].node), (yyvsp[(1) - (2)].node)); ;}
    break;

  case 488:
#line 412 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 489:
#line 413 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2(NULL, (yyvsp[(1) - (1)].node)); ;}
    break;

  case 490:
#line 414 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (1)].node), NULL); ;}
    break;

  case 491:
#line 418 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 492:
#line 419 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2(NULL,NULL); ;}
    break;

  case 493:
#line 424 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 494:
#line 426 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* Disabled because it was too confusing, bjm 2002-02-18 */
					ereport(ERROR,
							(errcode(PG_ERRCODE_SYNTAX_ERROR),
							 errmsg("LIMIT #,# syntax is not supported"),
							 errhint("Use separate LIMIT and OFFSET clauses."),
							 parser_errposition((yylsp[(1) - (4)]))));
				;}
    break;

  case 495:
#line 442 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(3) - (5)].node); ;}
    break;

  case 496:
#line 444 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeIntConst(1, -1); ;}
    break;

  case 497:
#line 449 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 498:
#line 452 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 499:
#line 460 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeFloat((yyvsp[(1) - (2)].str)), true);
		;}
    break;

  case 500:
#line 464 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), true);
		;}
    break;

  case 501:
#line 468 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeFloat((yyvsp[(1) - (2)].str)), true);
		;}
    break;

  case 502:
#line 472 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), true);
		;}
    break;

  case 503:
#line 476 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (1)].ival)), false);
		;}
    break;

  case 504:
#line 480 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), false);
		;}
    break;

  case 505:
#line 487 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(3) - (3)].node);
				;}
    break;

  case 506:
#line 491 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 507:
#line 498 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 508:
#line 499 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = NULL; ;}
    break;

  case 509:
#line 504 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSampleOptions((yyvsp[(3) - (5)].node), (yyvsp[(1) - (5)].str), (yyvsp[(5) - (5)].ival), (yylsp[(1) - (5)]));
				;}
    break;

  case 510:
#line 508 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (1)].node), NULL, -1, (yylsp[(1) - (1)]));
		;}
    break;

  case 511:
#line 512 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (4)].node), (yyvsp[(3) - (4)].str), -1, (yylsp[(1) - (4)]));
		;}
    break;

  case 512:
#line 516 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (6)].node), (yyvsp[(3) - (6)].str), (yyvsp[(5) - (6)].ival), (yylsp[(1) - (6)]));
		;}
    break;

  case 513:
#line 523 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(2) - (2)].node);
				;}
    break;

  case 514:
#line 529 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 515:
#line 530 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 516:
#line 535 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = (yyvsp[(3) - (4)].ival); ;}
    break;

  case 517:
#line 536 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = -1; ;}
    break;

  case 518:
#line 540 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 519:
#line 542 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* LIMIT ALL is represented as a NULL constant */
					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
				;}
    break;

  case 520:
#line 549 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 521:
#line 569 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 522:
#line 571 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 523:
#line 573 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 524:
#line 577 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival),(yylsp[(1) - (1)])); ;}
    break;

  case 525:
#line 578 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str),(yylsp[(1) - (1)])); ;}
    break;

  case 526:
#line 582 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 527:
#line 583 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 528:
#line 586 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 529:
#line 587 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 530:
#line 612 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 531:
#line 613 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 532:
#line 617 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 533:
#line 618 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].node)); ;}
    break;

  case 534:
#line 622 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 535:
#line 623 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 536:
#line 628 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_EMPTY, NIL, (yylsp[(1) - (2)]));
				;}
    break;

  case 537:
#line 640 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 538:
#line 641 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 539:
#line 645 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 540:
#line 646 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 541:
#line 650 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 542:
#line 651 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 543:
#line 655 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 544:
#line 656 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 545:
#line 661 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGLockingClause *n = makeNode(PGLockingClause);
					n->lockedRels = (yyvsp[(2) - (3)].list);
					n->strength = (yyvsp[(1) - (3)].lockstrength);
					n->waitPolicy = (yyvsp[(3) - (3)].lockwaitpolicy);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 546:
#line 671 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = LCS_FORUPDATE; ;}
    break;

  case 547:
#line 672 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORNOKEYUPDATE; ;}
    break;

  case 548:
#line 673 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORSHARE; ;}
    break;

  case 549:
#line 674 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORKEYSHARE; ;}
    break;

  case 550:
#line 678 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 551:
#line 679 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 552:
#line 684 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = LockWaitError; ;}
    break;

  case 553:
#line 685 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = PGLockWaitSkip; ;}
    break;

  case 554:
#line 686 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = PGLockWaitBlock; ;}
    break;

  case 555:
#line 696 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->valuesLists = list_make1((yyvsp[(3) - (4)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 556:
#line 702 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = (PGSelectStmt *) (yyvsp[(1) - (5)].node);
					n->valuesLists = lappend(n->valuesLists, (yyvsp[(4) - (5)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 557:
#line 719 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 558:
#line 720 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 559:
#line 724 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 560:
#line 725 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 561:
#line 732 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyvsp[(1) - (3)].range)->alias = (yyvsp[(2) - (3)].alias);
					(yyvsp[(1) - (3)].range)->sample = (yyvsp[(3) - (3)].node);
					(yyval.node) = (PGNode *) (yyvsp[(1) - (3)].range);
				;}
    break;

  case 562:
#line 738 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[(1) - (3)].node);
					n->alias = (PGAlias*) linitial((yyvsp[(2) - (3)].list));
					n->coldeflist = (PGList*) lsecond((yyvsp[(2) - (3)].list));
					n->sample = (yyvsp[(3) - (3)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 563:
#line 746 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[(2) - (3)].node);
					n->lateral = true;
					n->alias = (PGAlias*) linitial((yyvsp[(3) - (3)].list));
					n->coldeflist = (PGList*) lsecond((yyvsp[(3) - (3)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 564:
#line 754 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeSubselect *n = makeNode(PGRangeSubselect);
					n->lateral = false;
					n->subquery = (yyvsp[(1) - (3)].node);
					n->alias = (yyvsp[(2) - (3)].alias);
					n->sample = (yyvsp[(3) - (3)].node);
					/*
					 * The SQL spec does not permit a subselect
					 * (<derived_table>) without an alias clause,
					 * so we don't either.  This avoids the problem
					 * of needing to invent a unique refname for it.
					 * That could be surmounted if there's sufficient
					 * popular demand, but for now let's just implement
					 * the spec and see if anyone complains.
					 * However, it does seem like a good idea to emit
					 * an error message that's better than "syntax error".
					 */
					if ((yyvsp[(2) - (3)].alias) == NULL)
					{
						if (IsA((yyvsp[(1) - (3)].node), PGSelectStmt) &&
							((PGSelectStmt *) (yyvsp[(1) - (3)].node))->valuesLists)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("VALUES in FROM must have an alias"),
									 errhint("For example, FROM (VALUES ...) [AS] foo."),
									 parser_errposition((yylsp[(1) - (3)]))));
						else
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("subquery in FROM must have an alias"),
									 errhint("For example, FROM (SELECT ...) [AS] foo."),
									 parser_errposition((yylsp[(1) - (3)]))));
					}
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 565:
#line 790 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeSubselect *n = makeNode(PGRangeSubselect);
					n->lateral = true;
					n->subquery = (yyvsp[(2) - (3)].node);
					n->alias = (yyvsp[(3) - (3)].alias);
					n->sample = NULL;
					/* same comment as above */
					if ((yyvsp[(3) - (3)].alias) == NULL)
					{
						if (IsA((yyvsp[(2) - (3)].node), PGSelectStmt) &&
							((PGSelectStmt *) (yyvsp[(2) - (3)].node))->valuesLists)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("VALUES in FROM must have an alias"),
									 errhint("For example, FROM (VALUES ...) [AS] foo."),
									 parser_errposition((yylsp[(2) - (3)]))));
						else
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("subquery in FROM must have an alias"),
									 errhint("For example, FROM (SELECT ...) [AS] foo."),
									 parser_errposition((yylsp[(2) - (3)]))));
					}
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 566:
#line 816 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) (yyvsp[(1) - (1)].jexpr);
				;}
    break;

  case 567:
#line 820 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyvsp[(2) - (4)].jexpr)->alias = (yyvsp[(4) - (4)].alias);
					(yyval.node) = (PGNode *) (yyvsp[(2) - (4)].jexpr);
				;}
    break;

  case 568:
#line 846 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.jexpr) = (yyvsp[(2) - (3)].jexpr);
				;}
    break;

  case 569:
#line 850 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* CROSS JOIN is same as unqualified inner join */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(4) - (4)].node);
					n->usingClause = NIL;
					n->quals = NULL;
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 570:
#line 863 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[(2) - (5)].jtype);
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (5)].node);
					n->rarg = (yyvsp[(4) - (5)].node);
					if ((yyvsp[(5) - (5)].node) != NULL && IsA((yyvsp[(5) - (5)].node), PGList))
						n->usingClause = (PGList *) (yyvsp[(5) - (5)].node); /* USING clause */
					else
						n->quals = (yyvsp[(5) - (5)].node); /* ON clause */
					n->location = (yylsp[(2) - (5)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 571:
#line 877 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* letting join_type reduce to empty doesn't work */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(3) - (4)].node);
					if ((yyvsp[(4) - (4)].node) != NULL && IsA((yyvsp[(4) - (4)].node), PGList))
						n->usingClause = (PGList *) (yyvsp[(4) - (4)].node); /* USING clause */
					else
						n->quals = (yyvsp[(4) - (4)].node); /* ON clause */
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 572:
#line 892 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[(3) - (5)].jtype);
					n->isNatural = true;
					n->larg = (yyvsp[(1) - (5)].node);
					n->rarg = (yyvsp[(5) - (5)].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					n->location = (yylsp[(2) - (5)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 573:
#line 904 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* letting join_type reduce to empty doesn't work */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = true;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(4) - (4)].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 574:
#line 920 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(2) - (5)].str);
					(yyval.alias)->colnames = (yyvsp[(4) - (5)].list);
				;}
    break;

  case 575:
#line 926 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(2) - (2)].str);
				;}
    break;

  case 576:
#line 931 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(1) - (4)].str);
					(yyval.alias)->colnames = (yyvsp[(3) - (4)].list);
				;}
    break;

  case 577:
#line 937 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(1) - (1)].str);
				;}
    break;

  case 578:
#line 943 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.alias) = (yyvsp[(1) - (1)].alias); ;}
    break;

  case 579:
#line 944 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.alias) = NULL; ;}
    break;

  case 580:
#line 953 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2((yyvsp[(1) - (1)].alias), NIL);
				;}
    break;

  case 581:
#line 957 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(NULL, (yyvsp[(3) - (4)].list));
				;}
    break;

  case 582:
#line 961 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAlias *a = makeNode(PGAlias);
					a->aliasname = (yyvsp[(2) - (5)].str);
					(yyval.list) = list_make2(a, (yyvsp[(4) - (5)].list));
				;}
    break;

  case 583:
#line 967 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAlias *a = makeNode(PGAlias);
					a->aliasname = (yyvsp[(1) - (4)].str);
					(yyval.list) = list_make2(a, (yyvsp[(3) - (4)].list));
				;}
    break;

  case 584:
#line 973 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(NULL, NIL);
				;}
    break;

  case 585:
#line 978 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_FULL; ;}
    break;

  case 586:
#line 979 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_LEFT; ;}
    break;

  case 587:
#line 980 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_RIGHT; ;}
    break;

  case 588:
#line 981 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_INNER; ;}
    break;

  case 589:
#line 985 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 590:
#line 986 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 591:
#line 998 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) (yyvsp[(3) - (4)].list); ;}
    break;

  case 592:
#line 999 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 593:
#line 1005 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* inheritance query, implicitly */
					(yyval.range) = (yyvsp[(1) - (1)].range);
					(yyval.range)->inh = true;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 594:
#line 1012 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* inheritance query, explicitly */
					(yyval.range) = (yyvsp[(1) - (2)].range);
					(yyval.range)->inh = true;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 595:
#line 1019 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* no inheritance */
					(yyval.range) = (yyvsp[(2) - (2)].range);
					(yyval.range)->inh = false;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 596:
#line 1026 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* no inheritance, SQL99-style syntax */
					(yyval.range) = (yyvsp[(3) - (4)].range);
					(yyval.range)->inh = false;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 597:
#line 1058 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = makeNode(PGRangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[(2) - (2)].boolean);
					n->is_rowsfrom = false;
					n->functions = list_make1(list_make2((yyvsp[(1) - (2)].node), NIL));
					n->sample = NULL;
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 598:
#line 1069 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = makeNode(PGRangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[(6) - (6)].boolean);
					n->is_rowsfrom = true;
					n->functions = (yyvsp[(4) - (6)].list);
					n->sample = NULL;
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 599:
#line 1082 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list)); ;}
    break;

  case 600:
#line 1086 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 601:
#line 1087 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 602:
#line 1090 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 603:
#line 1091 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 604:
#line 1094 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 605:
#line 1095 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 606:
#line 1100 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 607:
#line 1101 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 608:
#line 1107 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 609:
#line 1111 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 610:
#line 1117 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->colname = (yyvsp[(1) - (3)].str);
					n->typeName = (yyvsp[(2) - (3)].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collClause = (PGCollateClause *) (yyvsp[(3) - (3)].node);
					n->collOid = InvalidOid;
					n->constraints = NIL;
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 611:
#line 1138 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[(2) - (2)].list);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 612:
#line 1145 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 613:
#line 1158 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[(2) - (2)].list);
				;}
    break;

  case 614:
#line 1163 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[(3) - (3)].list);
					(yyval.typnam)->setof = true;
				;}
    break;

  case 615:
#line 1170 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (5)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(4) - (5)].ival)));
				;}
    break;

  case 616:
#line 1175 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (6)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(5) - (6)].ival)));
					(yyval.typnam)->setof = true;
				;}
    break;

  case 617:
#line 1181 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
				;}
    break;

  case 618:
#line 1186 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
					(yyval.typnam)->setof = true;
				;}
    break;

  case 619:
#line 1195 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeInteger(-1)); ;}
    break;

  case 620:
#line 1197 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = lappend((yyvsp[(1) - (4)].list), makeInteger((yyvsp[(3) - (4)].ival))); ;}
    break;

  case 621:
#line 1199 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = NIL; ;}
    break;

  case 622:
#line 1203 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 623:
#line 1204 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 624:
#line 1205 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 625:
#line 1206 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 626:
#line 1207 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 627:
#line 1209 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
				;}
    break;

  case 628:
#line 1214 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (4)].typnam);
					(yyval.typnam)->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											 makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
				;}
    break;

  case 629:
#line 1233 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 630:
#line 1234 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 631:
#line 1235 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 632:
#line 1236 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 633:
#line 1248 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = makeTypeName((yyvsp[(1) - (2)].str));
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 634:
#line 1254 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(1) - (3)].str)), (yyvsp[(2) - (3)].list)));
					(yyval.typnam)->typmods = (yyvsp[(3) - (3)].list);
					(yyval.typnam)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 635:
#line 1261 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 636:
#line 1262 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 637:
#line 1269 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 638:
#line 1274 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 639:
#line 1279 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int2");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 640:
#line 1284 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int8");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 641:
#line 1289 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 642:
#line 1294 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (2)].typnam);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 643:
#line 1299 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float8");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 644:
#line 1304 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 645:
#line 1310 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 646:
#line 1316 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 647:
#line 1322 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("bool");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 648:
#line 1329 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Check FLOAT() precision limits assuming IEEE floating
					 * types - thomas 1997-09-18
					 */
					if ((yyvsp[(2) - (3)].ival) < 1)
						ereport(ERROR,
								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be at least 1 bit"),
								 parser_errposition((yylsp[(2) - (3)]))));
					else if ((yyvsp[(2) - (3)].ival) <= 24)
						(yyval.typnam) = SystemTypeName("float4");
					else if ((yyvsp[(2) - (3)].ival) <= 53)
						(yyval.typnam) = SystemTypeName("float8");
					else
						ereport(ERROR,
								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be less than 54 bits"),
								 parser_errposition((yylsp[(2) - (3)]))));
				;}
    break;

  case 649:
#line 1350 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float4");
				;}
    break;

  case 650:
#line 1360 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 651:
#line 1364 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 652:
#line 1372 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 653:
#line 1376 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
					(yyval.typnam)->typmods = NIL;
				;}
    break;

  case 654:
#line 1384 "third_party/libpg_query/grammar/statements/select.y"
    {
					const char *typname;

					typname = (yyvsp[(2) - (5)].boolean) ? "varbit" : "bit";
					(yyval.typnam) = SystemTypeName(typname);
					(yyval.typnam)->typmods = (yyvsp[(4) - (5)].list);
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 655:
#line 1396 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* bit defaults to bit(1), varbit to no limit */
					if ((yyvsp[(2) - (2)].boolean))
					{
						(yyval.typnam) = SystemTypeName("varbit");
					}
					else
					{
						(yyval.typnam) = SystemTypeName("bit");
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					}
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 656:
#line 1417 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 657:
#line 1421 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 658:
#line 1427 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 659:
#line 1431 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* Length was not specified so allow to be unrestricted.
					 * This handles problems with fixed-length (bpchar) strings
					 * which in column definitions must default to a length
					 * of one, but should not be constrained if the length
					 * was not specified.
					 */
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
					(yyval.typnam)->typmods = NIL;
				;}
    break;

  case 660:
#line 1444 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (4)].conststr));
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
					(yyval.typnam)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 661:
#line 1452 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (1)].conststr));
					/* char defaults to char(1), varchar to no limit */
					if (strcmp((yyvsp[(1) - (1)].conststr), "bpchar") == 0)
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 662:
#line 1462 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 663:
#line 1464 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 664:
#line 1466 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "varchar"; ;}
    break;

  case 665:
#line 1468 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 666:
#line 1470 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 667:
#line 1472 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 668:
#line 1476 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 669:
#line 1477 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 670:
#line 1485 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(5) - (5)].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 671:
#line 1494 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 672:
#line 1502 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(5) - (5)].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 673:
#line 1511 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 674:
#line 1522 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("interval");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 675:
#line 1529 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 676:
#line 1530 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 677:
#line 1531 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 694:
#line 1560 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR), (yylsp[(1) - (1)]))); ;}
    break;

  case 695:
#line 1562 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MONTH), (yylsp[(1) - (1)]))); ;}
    break;

  case 696:
#line 1564 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY), (yylsp[(1) - (1)]))); ;}
    break;

  case 697:
#line 1566 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR), (yylsp[(1) - (1)]))); ;}
    break;

  case 698:
#line 1568 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MINUTE), (yylsp[(1) - (1)]))); ;}
    break;

  case 699:
#line 1570 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(SECOND), (yylsp[(1) - (1)]))); ;}
    break;

  case 700:
#line 1572 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MILLISECOND), (yylsp[(1) - (1)]))); ;}
    break;

  case 701:
#line 1574 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MICROSECOND), (yylsp[(1) - (1)]))); ;}
    break;

  case 702:
#line 1576 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR) |
												 INTERVAL_MASK(MONTH), (yylsp[(1) - (3)])));
				;}
    break;

  case 703:
#line 1581 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR), (yylsp[(1) - (3)])));
				;}
    break;

  case 704:
#line 1586 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
				;}
    break;

  case 705:
#line 1592 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
				;}
    break;

  case 706:
#line 1599 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
				;}
    break;

  case 707:
#line 1604 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
				;}
    break;

  case 708:
#line 1610 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
				;}
    break;

  case 709:
#line 1615 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 710:
#line 1646 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 711:
#line 1649 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), (yylsp[(2) - (3)])); ;}
    break;

  case 712:
#line 1651 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = (yyvsp[(1) - (3)].node);
					n->collname = (yyvsp[(3) - (3)].list);
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 713:
#line 1659 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("timezone"),
											   list_make2((yyvsp[(5) - (5)].node), (yyvsp[(1) - (5)].node)),
											   (yylsp[(2) - (5)]));
				;}
    break;

  case 714:
#line 1674 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 715:
#line 1676 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 716:
#line 1678 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 717:
#line 1680 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 718:
#line 1682 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 719:
#line 1684 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 720:
#line 1686 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 721:
#line 1688 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 722:
#line 1690 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 723:
#line 1692 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 724:
#line 1694 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 725:
#line 1696 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 726:
#line 1698 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 727:
#line 1700 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 728:
#line 1703 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 729:
#line 1705 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 730:
#line 1707 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
    break;

  case 731:
#line 1710 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeAndExpr((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 732:
#line 1712 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeOrExpr((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 733:
#line 1714 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeNotExpr((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 734:
#line 1716 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeNotExpr((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 735:
#line 1719 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_GLOB, "~~~",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 736:
#line 1724 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "~~",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 737:
#line 1729 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make3((yyvsp[(1) - (5)].node), (yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 738:
#line 1736 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "!~~",
												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
				;}
    break;

  case 739:
#line 1741 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("not_like_escape"),
											   list_make3((yyvsp[(1) - (6)].node), (yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 740:
#line 1748 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "~~*",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 741:
#line 1753 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make2((yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "~~*",
												   (yyvsp[(1) - (5)].node), (PGNode *) n, (yylsp[(2) - (5)]));
				;}
    break;

  case 742:
#line 1761 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "!~~*",
												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
				;}
    break;

  case 743:
#line 1766 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("not_like_escape"),
											   list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "!~~*",
												   (yyvsp[(1) - (6)].node), (PGNode *) n, (yylsp[(2) - (6)]));
				;}
    break;

  case 744:
#line 1775 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(4) - (4)].node), makeNullAConst(-1)),
											   (yylsp[(2) - (4)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
												   (yyvsp[(1) - (4)].node), (PGNode *) n, (yylsp[(2) - (4)]));
				;}
    break;

  case 745:
#line 1783 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
												   (yyvsp[(1) - (6)].node), (PGNode *) n, (yylsp[(2) - (6)]));
				;}
    break;

  case 746:
#line 1791 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(5) - (5)].node), makeNullAConst(-1)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
												   (yyvsp[(1) - (5)].node), (PGNode *) n, (yylsp[(2) - (5)]));
				;}
    break;

  case 747:
#line 1799 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
											   (yylsp[(2) - (7)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
												   (yyvsp[(1) - (7)].node), (PGNode *) n, (yylsp[(2) - (7)]));
				;}
    break;

  case 748:
#line 1817 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					n->nulltesttype = PG_IS_NULL;
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 749:
#line 1825 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
					n->nulltesttype = PG_IS_NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 750:
#line 1833 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 751:
#line 1841 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 752:
#line 1849 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 753:
#line 1857 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGLambdaFunction *n = makeNode(PGLambdaFunction);
				n->parameters = (yyvsp[(1) - (3)].list);
				n->function = (yyvsp[(3) - (3)].node);
				n->location = (yylsp[(2) - (3)]);
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 754:
#line 1865 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGLambdaFunction *n = makeNode(PGLambdaFunction);
				n->parameters = list_make1((yyvsp[(1) - (3)].node));
				n->function = (yyvsp[(3) - (3)].node);
				n->location = (yylsp[(2) - (3)]);
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 755:
#line 1873 "third_party/libpg_query/grammar/statements/select.y"
    {
					if (list_length((yyvsp[(1) - (3)].list)) != 2)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on left side of OVERLAPS expression"),
								 parser_errposition((yylsp[(1) - (3)]))));
					if (list_length((yyvsp[(3) - (3)].list)) != 2)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on right side of OVERLAPS expression"),
								 parser_errposition((yylsp[(3) - (3)]))));
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlaps"),
											   list_concat((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)),
											   (yylsp[(2) - (3)]));
				;}
    break;

  case 756:
#line 1889 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = PG_IS_TRUE;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 757:
#line 1897 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_TRUE;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 758:
#line 1905 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = IS_FALSE;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 759:
#line 1913 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_FALSE;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 760:
#line 1921 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = IS_UNKNOWN;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 761:
#line 1929 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_UNKNOWN;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 762:
#line 1937 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
				;}
    break;

  case 763:
#line 1941 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 764:
#line 1945 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
				;}
    break;

  case 765:
#line 1949 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
				;}
    break;

  case 766:
#line 1953 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN,
												   "BETWEEN",
												   (yyvsp[(1) - (6)].node),
												   (PGNode *) list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
												   (yylsp[(2) - (6)]));
				;}
    break;

  case 767:
#line 1961 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN,
												   "NOT BETWEEN",
												   (yyvsp[(1) - (7)].node),
												   (PGNode *) list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
												   (yylsp[(2) - (7)]));
				;}
    break;

  case 768:
#line 1969 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN_SYM,
												   "BETWEEN SYMMETRIC",
												   (yyvsp[(1) - (6)].node),
												   (PGNode *) list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
												   (yylsp[(2) - (6)]));
				;}
    break;

  case 769:
#line 1977 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN_SYM,
												   "NOT BETWEEN SYMMETRIC",
												   (yyvsp[(1) - (7)].node),
												   (PGNode *) list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
												   (yylsp[(2) - (7)]));
				;}
    break;

  case 770:
#line 1985 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* in_expr returns a PGSubLink or a list of a_exprs */
					if (IsA((yyvsp[(3) - (3)].node), PGSubLink))
					{
						/* generate foo = ANY (subquery) */
						PGSubLink *n = (PGSubLink *) (yyvsp[(3) - (3)].node);
						n->subLinkType = PG_ANY_SUBLINK;
						n->subLinkId = 0;
						n->testexpr = (yyvsp[(1) - (3)].node);
						n->operName = NIL;		/* show it's IN not = ANY */
						n->location = (yylsp[(2) - (3)]);
						(yyval.node) = (PGNode *)n;
					}
					else
					{
						/* generate scalar IN expression */
						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
					}
				;}
    break;

  case 771:
#line 2005 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* in_expr returns a PGSubLink or a list of a_exprs */
					if (IsA((yyvsp[(4) - (4)].node), PGSubLink))
					{
						/* generate NOT (foo = ANY (subquery)) */
						/* Make an = ANY node */
						PGSubLink *n = (PGSubLink *) (yyvsp[(4) - (4)].node);
						n->subLinkType = PG_ANY_SUBLINK;
						n->subLinkId = 0;
						n->testexpr = (yyvsp[(1) - (4)].node);
						n->operName = NIL;		/* show it's IN not = ANY */
						n->location = (yylsp[(2) - (4)]);
						/* Stick a NOT on top; must have same parse location */
						(yyval.node) = makeNotExpr((PGNode *) n, (yylsp[(2) - (4)]));
					}
					else
					{
						/* generate scalar NOT IN expression */
						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "<>", (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
					}
				;}
    break;

  case 772:
#line 2027 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = (yyvsp[(3) - (4)].subquerytype);
					n->subLinkId = 0;
					n->testexpr = (yyvsp[(1) - (4)].node);
					n->operName = (yyvsp[(2) - (4)].list);
					n->subselect = (yyvsp[(4) - (4)].node);
					n->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 773:
#line 2038 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(3) - (6)].subquerytype) == PG_ANY_SUBLINK)
						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ANY, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
					else
						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ALL, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 774:
#line 2045 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * The SQL spec only allows DEFAULT in "contextually typed
					 * expressions", but for us, it's easier to allow it in
					 * any a_expr and then throw error during parse analysis
					 * if it's in an inappropriate context.  This way also
					 * lets us say something smarter than "syntax error".
					 */
					PGSetToDefault *n = makeNode(PGSetToDefault);
					/* parse analysis will fill in the rest */
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 775:
#line 2070 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 776:
#line 2072 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), (yylsp[(2) - (3)])); ;}
    break;

  case 777:
#line 2074 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 778:
#line 2076 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 779:
#line 2078 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 780:
#line 2080 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 781:
#line 2082 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 782:
#line 2084 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 783:
#line 2086 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 784:
#line 2088 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 785:
#line 2090 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 786:
#line 2092 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 787:
#line 2094 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 788:
#line 2096 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 789:
#line 2098 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 790:
#line 2100 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 791:
#line 2102 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 792:
#line 2104 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 793:
#line 2106 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
    break;

  case 794:
#line 2108 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
				;}
    break;

  case 795:
#line 2112 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 796:
#line 2116 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
				;}
    break;

  case 797:
#line 2120 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
				;}
    break;

  case 798:
#line 2133 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 799:
#line 2134 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 800:
#line 2136 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = makeParamRef(0, (yylsp[(1) - (2)]));
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = makeParamRef(0, (yylsp[(1) - (2)]));
				;}
    break;

  case 801:
#line 2148 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGParamRef *p = makeNode(PGParamRef);
					p->number = (yyvsp[(1) - (2)].ival);
					p->location = (yylsp[(1) - (2)]);
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (PGNode *) p;
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = (PGNode *) p;
				;}
    break;

  case 802:
#line 2163 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(4) - (4)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (yyvsp[(2) - (4)].node);
						n->indirection = check_indirection((yyvsp[(4) - (4)].list), yyscanner);
						(yyval.node) = (PGNode *)n;
					}
					else
						(yyval.node) = (yyvsp[(2) - (4)].node);
				;}
    break;

  case 803:
#line 2175 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 804:
#line 2177 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 805:
#line 2179 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_EXPR_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(1) - (1)].node);
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 806:
#line 2190 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Because the select_with_parens nonterminal is designed
					 * to "eat" as many levels of parens as possible, the
					 * '(' a_expr ')' opt_indirection production above will
					 * fail to match a sub-SELECT with indirection decoration;
					 * the sub-SELECT won't be regarded as an a_expr as long
					 * as there are parens around it.  To support applying
					 * subscripting or field selection to a sub-SELECT result,
					 * we need this redundant-looking production.
					 */
					PGSubLink *n = makeNode(PGSubLink);
					PGAIndirection *a = makeNode(PGAIndirection);
					n->subLinkType = PG_EXPR_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(1) - (2)].node);
					n->location = (yylsp[(1) - (2)]);
					a->arg = (PGNode *)n;
					a->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.node) = (PGNode *)a;
				;}
    break;

  case 807:
#line 2214 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_EXISTS_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(2) - (2)].node);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 808:
#line 2227 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall((yyvsp[(1) - (3)].list), NIL, (yylsp[(1) - (3)]));
				;}
    break;

  case 809:
#line 2231 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (5)].list), (yyvsp[(3) - (5)].list), (yylsp[(1) - (5)]));
					n->agg_order = (yyvsp[(4) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 810:
#line 2237 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), list_make1((yyvsp[(4) - (6)].node)), (yylsp[(1) - (6)]));
					n->func_variadic = true;
					n->agg_order = (yyvsp[(5) - (6)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 811:
#line 2244 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (8)].list), lappend((yyvsp[(3) - (8)].list), (yyvsp[(6) - (8)].node)), (yylsp[(1) - (8)]));
					n->func_variadic = true;
					n->agg_order = (yyvsp[(7) - (8)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 812:
#line 2251 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), (yyvsp[(4) - (6)].list), (yylsp[(1) - (6)]));
					n->agg_order = (yyvsp[(5) - (6)].list);
					/* Ideally we'd mark the PGFuncCall node to indicate
					 * "must be an aggregate", but there's no provision
					 * for that in PGFuncCall at the moment.
					 */
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 813:
#line 2261 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), (yyvsp[(4) - (6)].list), (yylsp[(1) - (6)]));
					n->agg_order = (yyvsp[(5) - (6)].list);
					n->agg_distinct = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 814:
#line 2268 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * We consider AGGREGATE(*) to invoke a parameterless
					 * aggregate.  This does the right thing for COUNT(*),
					 * and there are no other aggregates in SQL that accept
					 * '*' as parameter.
					 *
					 * The PGFuncCall node is also marked agg_star = true,
					 * so that later processing can detect what the argument
					 * really was.
					 */
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (4)].list), NIL, (yylsp[(1) - (4)]));
					n->agg_star = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 815:
#line 2296 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = (PGFuncCall *) (yyvsp[(1) - (4)].node);
					/*
					 * The order clause for WITHIN GROUP and the one for
					 * plain-aggregate ORDER BY share a field, so we have to
					 * check here that at most one is present.  We also check
					 * for DISTINCT and VARIADIC here to give a better error
					 * location.  Other consistency checks are deferred to
					 * parse analysis.
					 */
					if ((yyvsp[(2) - (4)].list) != NIL)
					{
						if (n->agg_order != NIL)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use multiple ORDER BY clauses with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						if (n->agg_distinct)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use DISTINCT with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						if (n->func_variadic)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use VARIADIC with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						n->agg_order = (yyvsp[(2) - (4)].list);
						n->agg_within_group = true;
					}
					n->agg_filter = (yyvsp[(3) - (4)].node);
					n->over = (yyvsp[(4) - (4)].windef);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 816:
#line 2331 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 817:
#line 2341 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 818:
#line 2342 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 819:
#line 2350 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("pg_collation_for"),
											   list_make1((yyvsp[(4) - (5)].node)),
											   (yylsp[(1) - (5)]));
				;}
    break;

  case 820:
#line 2356 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_DATE, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 821:
#line 2360 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIME, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 822:
#line 2364 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIME_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 823:
#line 2368 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIMESTAMP, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 824:
#line 2372 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIMESTAMP_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 825:
#line 2376 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIME, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 826:
#line 2380 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIME_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 827:
#line 2384 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIMESTAMP, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 828:
#line 2388 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIMESTAMP_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 829:
#line 2392 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_ROLE, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 830:
#line 2396 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 831:
#line 2400 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_SESSION_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 832:
#line 2404 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 833:
#line 2408 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_CATALOG, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 834:
#line 2412 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_SCHEMA, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 835:
#line 2416 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].typnam), (yylsp[(1) - (6)])); ;}
    break;

  case 836:
#line 2418 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("date_part"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 837:
#line 2422 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* overlay(A PLACING B FROM C FOR D) is converted to
					 * overlay(A, B, C, D)
					 * overlay(A PLACING B FROM C) is converted to
					 * overlay(A, B, C)
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlay"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 838:
#line 2431 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* position(A in B) is converted to position(B, A) */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("position"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 839:
#line 2436 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* substring(A from B for C) is converted to
					 * substring(A, B, C) - thomas 2000-11-28
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("substring"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 840:
#line 2443 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* TREAT(expr AS target) converts expr of a particular type to target,
					 * which is defined to be a subtype of the original expression.
					 * In SQL99, this is intended for use with structured UDTs,
					 * but let's make this a generally useful form allowing stronger
					 * coercions than are handled by implicit casting.
					 *
					 * Convert SystemTypeName() to SystemFuncName() even though
					 * at the moment they result in the same thing.
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName(((PGValue *)llast((yyvsp[(5) - (6)].typnam)->names))->val.str),
												list_make1((yyvsp[(3) - (6)].node)),
												(yylsp[(1) - (6)]));
				;}
    break;

  case 841:
#line 2458 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* various trim expressions are defined in SQL
					 * - thomas 1997-07-19
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("trim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 842:
#line 2465 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("ltrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 843:
#line 2469 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("rtrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 844:
#line 2473 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("trim"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 845:
#line 2477 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NULLIF, "=", (yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(1) - (6)]));
				;}
    break;

  case 846:
#line 2481 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCoalesceExpr *c = makeNode(PGCoalesceExpr);
					c->args = (yyvsp[(3) - (4)].list);
					c->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)c;
				;}
    break;

  case 847:
#line 2494 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
    break;

  case 848:
#line 2495 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 849:
#line 2499 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(4) - (5)].node); ;}
    break;

  case 850:
#line 2500 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 851:
#line 2508 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 852:
#line 2509 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 853:
#line 2513 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].windef)); ;}
    break;

  case 854:
#line 2515 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].windef)); ;}
    break;

  case 855:
#line 2520 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(3) - (3)].windef);
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.windef) = n;
				;}
    break;

  case 856:
#line 2528 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.windef) = (yyvsp[(2) - (2)].windef); ;}
    break;

  case 857:
#line 2530 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->name = (yyvsp[(2) - (2)].str);
					n->refname = NULL;
					n->partitionClause = NIL;
					n->orderClause = NIL;
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.windef) = n;
				;}
    break;

  case 858:
#line 2543 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.windef) = NULL; ;}
    break;

  case 859:
#line 2548 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->name = NULL;
					n->refname = (yyvsp[(2) - (6)].str);
					n->partitionClause = (yyvsp[(3) - (6)].list);
					n->orderClause = (yyvsp[(4) - (6)].list);
					/* copy relevant fields of opt_frame_clause */
					n->frameOptions = (yyvsp[(5) - (6)].windef)->frameOptions;
					n->startOffset = (yyvsp[(5) - (6)].windef)->startOffset;
					n->endOffset = (yyvsp[(5) - (6)].windef)->endOffset;
					n->location = (yylsp[(1) - (6)]);
					(yyval.windef) = n;
				;}
    break;

  case 860:
#line 2573 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 861:
#line 2574 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = NULL; ;}
    break;

  case 862:
#line 2577 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 863:
#line 2578 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 864:
#line 2590 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(2) - (2)].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_RANGE;
					if (n->frameOptions & (FRAMEOPTION_START_VALUE_PRECEDING |
										   FRAMEOPTION_END_VALUE_PRECEDING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("RANGE PRECEDING is only supported with UNBOUNDED"),
								 parser_errposition((yylsp[(1) - (2)]))));
					if (n->frameOptions & (FRAMEOPTION_START_VALUE_FOLLOWING |
										   FRAMEOPTION_END_VALUE_FOLLOWING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("RANGE FOLLOWING is only supported with UNBOUNDED"),
								 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.windef) = n;
				;}
    break;

  case 865:
#line 2608 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(2) - (2)].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_ROWS;
					(yyval.windef) = n;
				;}
    break;

  case 866:
#line 2614 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 867:
#line 2624 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(1) - (1)].windef);
					/* reject invalid cases */
					if (n->frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[(1) - (1)]))));
					if (n->frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot end with current row"),
								 parser_errposition((yylsp[(1) - (1)]))));
					n->frameOptions |= FRAMEOPTION_END_CURRENT_ROW;
					(yyval.windef) = n;
				;}
    break;

  case 868:
#line 2641 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n1 = (yyvsp[(2) - (4)].windef);
					PGWindowDef *n2 = (yyvsp[(4) - (4)].windef);
					/* form merged options */
					int		frameOptions = n1->frameOptions;
					/* shift converts START_ options to END_ options */
					frameOptions |= n2->frameOptions << 1;
					frameOptions |= FRAMEOPTION_BETWEEN;
					/* reject invalid cases */
					if (frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[(2) - (4)]))));
					if (frameOptions & FRAMEOPTION_END_UNBOUNDED_PRECEDING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame end cannot be UNBOUNDED PRECEDING"),
								 parser_errposition((yylsp[(4) - (4)]))));
					if ((frameOptions & FRAMEOPTION_START_CURRENT_ROW) &&
						(frameOptions & FRAMEOPTION_END_VALUE_PRECEDING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from current row cannot have preceding rows"),
								 parser_errposition((yylsp[(4) - (4)]))));
					if ((frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING) &&
						(frameOptions & (FRAMEOPTION_END_VALUE_PRECEDING |
										 FRAMEOPTION_END_CURRENT_ROW)))
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot have preceding rows"),
								 parser_errposition((yylsp[(4) - (4)]))));
					n1->frameOptions = frameOptions;
					n1->endOffset = n2->startOffset;
					(yyval.windef) = n1;
				;}
    break;

  case 869:
#line 2686 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_PRECEDING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 870:
#line 2694 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_FOLLOWING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 871:
#line 2702 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_CURRENT_ROW;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 872:
#line 2710 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_PRECEDING;
					n->startOffset = (yyvsp[(1) - (2)].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 873:
#line 2718 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_FOLLOWING;
					n->startOffset = (yyvsp[(1) - (2)].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 874:
#line 2738 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 875:
#line 2739 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 876:
#line 2740 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(2) - (5)].list), (yyvsp[(4) - (5)].node)); ;}
    break;

  case 877:
#line 2743 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
    break;

  case 878:
#line 2744 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
    break;

  case 879:
#line 2745 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ALL_SUBLINK; ;}
    break;

  case 880:
#line 2748 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 881:
#line 2749 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) (yyvsp[(1) - (1)].conststr); ;}
    break;

  case 882:
#line 2752 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "+"; ;}
    break;

  case 883:
#line 2753 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "-"; ;}
    break;

  case 884:
#line 2754 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "*"; ;}
    break;

  case 885:
#line 2755 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "/"; ;}
    break;

  case 886:
#line 2756 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "%"; ;}
    break;

  case 887:
#line 2757 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "^"; ;}
    break;

  case 888:
#line 2758 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<"; ;}
    break;

  case 889:
#line 2759 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = ">"; ;}
    break;

  case 890:
#line 2760 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "="; ;}
    break;

  case 891:
#line 2761 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<="; ;}
    break;

  case 892:
#line 2762 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = ">="; ;}
    break;

  case 893:
#line 2763 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<>"; ;}
    break;

  case 894:
#line 2767 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 895:
#line 2769 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 896:
#line 2774 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 897:
#line 2776 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 898:
#line 2781 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 899:
#line 2783 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 900:
#line 2785 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~")); ;}
    break;

  case 901:
#line 2787 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~")); ;}
    break;

  case 902:
#line 2789 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~~")); ;}
    break;

  case 903:
#line 2791 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~~")); ;}
    break;

  case 904:
#line 2793 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~*")); ;}
    break;

  case 905:
#line 2795 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~*")); ;}
    break;

  case 906:
#line 2809 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 907:
#line 2811 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lcons(makeString((yyvsp[(1) - (3)].str)), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 908:
#line 2815 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 909:
#line 2819 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 910:
#line 2826 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 911:
#line 2830 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 912:
#line 2836 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(1) - (1)].node);
				;}
    break;

  case 913:
#line 2840 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[(1) - (3)].str);
					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) na;
				;}
    break;

  case 914:
#line 2849 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[(1) - (3)].str);
					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) na;
				;}
    break;

  case 915:
#line 2859 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].typnam)); ;}
    break;

  case 916:
#line 2860 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].typnam)); ;}
    break;

  case 917:
#line 2865 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(makeStringConst((yyvsp[(1) - (3)].str), (yylsp[(1) - (3)])), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 918:
#line 2868 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 919:
#line 2875 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 920:
#line 2876 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "year"; ;}
    break;

  case 921:
#line 2877 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "month"; ;}
    break;

  case 922:
#line 2878 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "day"; ;}
    break;

  case 923:
#line 2879 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "hour"; ;}
    break;

  case 924:
#line 2880 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "minute"; ;}
    break;

  case 925:
#line 2881 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "second"; ;}
    break;

  case 926:
#line 2882 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "millisecond"; ;}
    break;

  case 927:
#line 2883 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "microsecond"; ;}
    break;

  case 928:
#line 2884 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 929:
#line 2895 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make4((yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].node), (yyvsp[(3) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 930:
#line 2899 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 931:
#line 2906 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 932:
#line 2912 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(3) - (3)].node), (yyvsp[(1) - (3)].node)); ;}
    break;

  case 933:
#line 2913 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 934:
#line 2930 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 935:
#line 2934 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* not legal per SQL99, but might as well allow it */
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yyvsp[(2) - (3)].node));
				;}
    break;

  case 936:
#line 2939 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node));
				;}
    break;

  case 937:
#line 2943 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Since there are no cases where this syntax allows
					 * a textual FOR value, we forcibly cast the argument
					 * to int4.  The possible matches in pg_proc are
					 * substring(text,int4) and substring(text,text),
					 * and we don't want the parser to choose the latter,
					 * which it is likely to do if the second argument
					 * is unknown or doesn't have an implicit cast to int4.
					 */
					(yyval.list) = list_make3((yyvsp[(1) - (2)].node), makeIntConst(1, -1),
									makeTypeCast((yyvsp[(2) - (2)].node),
												 SystemTypeName("int4"), -1));
				;}
    break;

  case 938:
#line 2958 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(1) - (1)].list);
				;}
    break;

  case 939:
#line 2962 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 940:
#line 2966 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 941:
#line 2969 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 942:
#line 2972 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(3) - (3)].list), (yyvsp[(1) - (3)].node)); ;}
    break;

  case 943:
#line 2973 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 944:
#line 2974 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 945:
#line 2978 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subselect = (yyvsp[(1) - (1)].node);
					/* other fields will be filled later */
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 946:
#line 2984 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *)(yyvsp[(2) - (3)].list); ;}
    break;

  case 947:
#line 2995 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCaseExpr *c = makeNode(PGCaseExpr);
					c->casetype = InvalidOid; /* not analyzed yet */
					c->arg = (PGExpr *) (yyvsp[(2) - (5)].node);
					c->args = (yyvsp[(3) - (5)].list);
					c->defresult = (PGExpr *) (yyvsp[(4) - (5)].node);
					c->location = (yylsp[(1) - (5)]);
					(yyval.node) = (PGNode *)c;
				;}
    break;

  case 948:
#line 3008 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 949:
#line 3009 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 950:
#line 3014 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCaseWhen *w = makeNode(PGCaseWhen);
					w->expr = (PGExpr *) (yyvsp[(2) - (4)].node);
					w->result = (PGExpr *) (yyvsp[(4) - (4)].node);
					w->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)w;
				;}
    break;

  case 951:
#line 3024 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 952:
#line 3025 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 953:
#line 3028 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 954:
#line 3029 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 955:
#line 3033 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeColumnRef((yyvsp[(1) - (1)].str), NIL, (yylsp[(1) - (1)]), yyscanner);
				;}
    break;

  case 956:
#line 3037 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeColumnRef((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].list), (yylsp[(1) - (2)]), yyscanner);
				;}
    break;

  case 957:
#line 3044 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeString((yyvsp[(2) - (2)].str));
				;}
    break;

  case 958:
#line 3048 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeNode(PGAStar);
				;}
    break;

  case 959:
#line 3052 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = false;
					ai->lidx = NULL;
					ai->uidx = (yyvsp[(2) - (3)].node);
					(yyval.node) = (PGNode *) ai;
				;}
    break;

  case 960:
#line 3060 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = true;
					ai->lidx = (yyvsp[(2) - (5)].node);
					ai->uidx = (yyvsp[(4) - (5)].node);
					(yyval.node) = (PGNode *) ai;
				;}
    break;

  case 961:
#line 3070 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 962:
#line 3071 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 963:
#line 3075 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 964:
#line 3076 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 965:
#line 3080 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 966:
#line 3081 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 969:
#line 3095 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 970:
#line 3096 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 971:
#line 3100 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 972:
#line 3101 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
    break;

  case 973:
#line 3105 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(3) - (3)].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (3)].node);
					(yyval.target)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 974:
#line 3121 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(2) - (2)].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (2)].node);
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 975:
#line 3129 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (1)].node);
					(yyval.target)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 976:
#line 3137 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnRef *n = makeNode(PGColumnRef);
					n->fields = list_make1(makeNode(PGAStar));
					n->location = (yylsp[(1) - (1)]);

					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)n;
					(yyval.target)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 977:
#line 3158 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].range)); ;}
    break;

  case 978:
#line 3159 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].range)); ;}
    break;

  case 979:
#line 3171 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = makeRangeVar(NULL, (yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 980:
#line 3175 "third_party/libpg_query/grammar/statements/select.y"
    {
					check_qualified_name((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.range) = makeRangeVar(NULL, NULL, (yylsp[(1) - (2)]));
					switch (list_length((yyvsp[(2) - (2)].list)))
					{
						case 1:
							(yyval.range)->catalogname = NULL;
							(yyval.range)->schemaname = (yyvsp[(1) - (2)].str);
							(yyval.range)->relname = strVal(linitial((yyvsp[(2) - (2)].list)));
							break;
						case 2:
							(yyval.range)->catalogname = (yyvsp[(1) - (2)].str);
							(yyval.range)->schemaname = strVal(linitial((yyvsp[(2) - (2)].list)));
							(yyval.range)->relname = strVal(lsecond((yyvsp[(2) - (2)].list)));
							break;
						default:
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("improper qualified name (too many dotted names): %s",
											NameListToString(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)))),
									 parser_errposition((yylsp[(1) - (2)]))));
							break;
					}
				;}
    break;

  case 981:
#line 3202 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 982:
#line 3204 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 983:
#line 3208 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 984:
#line 3210 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 985:
#line 3221 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 986:
#line 3223 "third_party/libpg_query/grammar/statements/select.y"
    {
						(yyval.list) = check_func_name(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)),
											 yyscanner);
					;}
    break;

  case 987:
#line 3234 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival), (yylsp[(1) - (1)]));
				;}
    break;

  case 988:
#line 3238 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 989:
#line 3242 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 990:
#line 3246 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 991:
#line 3250 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* This is a bit constant per SQL99:
					 * Without Feature F511, "BIT data type",
					 * a <general literal> shall not be a
					 * <bit string literal> or a <hex string literal>.
					 */
					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 992:
#line 3259 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* generic type 'literal' syntax */
					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (2)].list));
					t->location = (yylsp[(1) - (2)]);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), t);
				;}
    break;

  case 993:
#line 3266 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* generic syntax with a type modifier */
					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (6)].list));
					PGListCell *lc;

					/*
					 * We must use func_arg_list and opt_sort_clause in the
					 * production to avoid reduce/reduce conflicts, but we
					 * don't actually wish to allow PGNamedArgExpr in this
					 * context, nor ORDER BY.
					 */
					foreach(lc, (yyvsp[(3) - (6)].list))
					{
						PGNamedArgExpr *arg = (PGNamedArgExpr *) lfirst(lc);

						if (IsA(arg, PGNamedArgExpr))
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have parameter name"),
									 parser_errposition(arg->location)));
					}
					if ((yyvsp[(4) - (6)].list) != NIL)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have ORDER BY"),
									 parser_errposition((yylsp[(4) - (6)]))));

					t->typmods = (yyvsp[(3) - (6)].list);
					t->location = (yylsp[(1) - (6)]);
					(yyval.node) = makeStringConstCast((yyvsp[(6) - (6)].str), (yylsp[(6) - (6)]), t);
				;}
    break;

  case 994:
#line 3298 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), (yyvsp[(1) - (2)].typnam));
				;}
    break;

  case 995:
#line 3302 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(3) - (5)].node), (yylsp[(3) - (5)]), (yyvsp[(5) - (5)].list));
				;}
    break;

  case 996:
#line 3306 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(2) - (3)].ival), (yylsp[(2) - (3)]), (yyvsp[(3) - (3)].list));
				;}
    break;

  case 997:
#line 3310 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), (yyvsp[(3) - (3)].list));
				;}
    break;

  case 998:
#line 3314 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBoolAConst(true, (yylsp[(1) - (1)]));
				;}
    break;

  case 999:
#line 3318 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBoolAConst(false, (yylsp[(1) - (1)]));
				;}
    break;

  case 1000:
#line 3322 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
				;}
    break;

  case 1001:
#line 3327 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 1002:
#line 3328 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1003:
#line 3344 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1004:
#line 3345 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1005:
#line 3346 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1006:
#line 3349 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1007:
#line 3350 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1008:
#line 3355 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1009:
#line 3356 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1010:
#line 3357 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1011:
#line 3360 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 1012:
#line 3361 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)); ;}
    break;

  case 1013:
#line 3365 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(2) - (2)].str))); ;}
    break;

  case 1014:
#line 3367 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 1015:
#line 3371 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 1016:
#line 3372 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1018:
#line 3383 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1019:
#line 3384 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1020:
#line 3385 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1021:
#line 3386 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1022:
#line 3387 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1023:
#line 3390 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1024:
#line 3391 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1025:
#line 8 "third_party/libpg_query/grammar/statements/prepare.y"
    {
					PGPrepareStmt *n = makeNode(PGPrepareStmt);
					n->name = (yyvsp[(2) - (5)].str);
					n->argtypes = (yyvsp[(3) - (5)].list);
					n->query = (yyvsp[(5) - (5)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1026:
#line 18 "third_party/libpg_query/grammar/statements/prepare.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 1027:
#line 19 "third_party/libpg_query/grammar/statements/prepare.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1032:
#line 8 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					/* ...but not both */
					n->schemaname = (yyvsp[(3) - (4)].str);
					n->schemaElts = (yyvsp[(4) - (4)].list);
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1033:
#line 17 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					/* ...but not here */
					n->schemaname = (yyvsp[(6) - (7)].str);
					if ((yyvsp[(7) - (7)].list) != NIL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("CREATE SCHEMA IF NOT EXISTS cannot include schema elements"),
								 parser_errposition((yylsp[(7) - (7)]))));
					n->schemaElts = (yyvsp[(7) - (7)].list);
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1034:
#line 35 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					if ((yyloc) < 0)			/* see comments for YYLLOC_DEFAULT */
						(yyloc) = (yylsp[(2) - (2)]);
					(yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node));
				;}
    break;

  case 1035:
#line 41 "third_party/libpg_query/grammar/statements/create_schema.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1040:
#line 11 "third_party/libpg_query/grammar/statements/index.y"
    {
					PGIndexStmt *n = makeNode(PGIndexStmt);
					n->unique = (yyvsp[(2) - (13)].boolean);
					n->concurrent = (yyvsp[(4) - (13)].boolean);
					n->idxname = (yyvsp[(5) - (13)].str);
					n->relation = (yyvsp[(7) - (13)].range);
					n->accessMethod = (yyvsp[(8) - (13)].str);
					n->indexParams = (yyvsp[(10) - (13)].list);
					n->options = (yyvsp[(12) - (13)].list);
					n->whereClause = (yyvsp[(13) - (13)].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;
					n->transformed = false;
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1041:
#line 36 "third_party/libpg_query/grammar/statements/index.y"
    {
					PGIndexStmt *n = makeNode(PGIndexStmt);
					n->unique = (yyvsp[(2) - (16)].boolean);
					n->concurrent = (yyvsp[(4) - (16)].boolean);
					n->idxname = (yyvsp[(8) - (16)].str);
					n->relation = (yyvsp[(10) - (16)].range);
					n->accessMethod = (yyvsp[(11) - (16)].str);
					n->indexParams = (yyvsp[(13) - (16)].list);
					n->options = (yyvsp[(15) - (16)].list);
					n->whereClause = (yyvsp[(16) - (16)].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;
					n->transformed = false;
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1042:
#line 62 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1043:
#line 66 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
    break;

  case 1044:
#line 67 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (char*) DEFAULT_INDEX_TYPE; ;}
    break;

  case 1045:
#line 72 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1046:
#line 73 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1047:
#line 78 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1048:
#line 79 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = NULL; ;}
    break;

  case 1049:
#line 83 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1050:
#line 84 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1051:
#line 89 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1052:
#line 90 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1053:
#line 8 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1054:
#line 17 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1055:
#line 26 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1056:
#line 35 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1057:
#line 44 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1058:
#line 53 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1059:
#line 6 "third_party/libpg_query/grammar/statements/checkpoint.y"
    {
					PGCheckPointStmt *n = makeNode(PGCheckPointStmt);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1060:
#line 8 "third_party/libpg_query/grammar/statements/export.y"
    {
					PGExportStmt *n = makeNode(PGExportStmt);
					n->filename = (yyvsp[(3) - (4)].str);
					n->options = NIL;
					if ((yyvsp[(4) - (4)].list)) {
						n->options = list_concat(n->options, (yyvsp[(4) - (4)].list));
					}
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1061:
#line 21 "third_party/libpg_query/grammar/statements/export.y"
    {
					PGImportStmt *n = makeNode(PGImportStmt);
					n->filename = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1062:
#line 10 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(2) - (2)].node);
					n->options = NIL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1063:
#line 17 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(4) - (4)].node);
					n->options = list_make1(makeDefElem("analyze", NULL, (yylsp[(2) - (4)])));
					if ((yyvsp[(3) - (4)].boolean))
						n->options = lappend(n->options,
											 makeDefElem("verbose", NULL, (yylsp[(3) - (4)])));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1064:
#line 27 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(3) - (3)].node);
					n->options = list_make1(makeDefElem("verbose", NULL, (yylsp[(2) - (3)])));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1065:
#line 34 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(5) - (5)].node);
					n->options = (yyvsp[(3) - (5)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1066:
#line 44 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1067:
#line 45 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1068:
#line 50 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 1069:
#line 51 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].value); ;}
    break;

  case 1070:
#line 52 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1076:
#line 65 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1077:
#line 66 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1078:
#line 67 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1079:
#line 68 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1080:
#line 73 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1081:
#line 74 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1082:
#line 80 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 1083:
#line 84 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 1084:
#line 91 "third_party/libpg_query/grammar/statements/explain.y"
    {;}
    break;

  case 1085:
#line 92 "third_party/libpg_query/grammar/statements/explain.y"
    {;}
    break;

  case 1086:
#line 97 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "true"; ;}
    break;

  case 1087:
#line 98 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "false"; ;}
    break;

  case 1088:
#line 99 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "on"; ;}
    break;

  case 1089:
#line 105 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1090:
#line 111 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 1091:
#line 118 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1092:
#line 119 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "analyze"; ;}
    break;

  case 1093:
#line 11 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(2) - (2)].vsetstmt);
					n->is_local = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1094:
#line 17 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->is_local = true;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1095:
#line 23 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->is_local = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1096:
#line 32 "third_party/libpg_query/grammar/statements/variable_set.y"
    {(yyval.vsetstmt) = (yyvsp[(1) - (1)].vsetstmt);;}
    break;

  case 1097:
#line 34 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_CURRENT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1098:
#line 42 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (char*) "timezone";
					if ((yyvsp[(3) - (3)].node) != NULL)
						n->args = list_make1((yyvsp[(3) - (3)].node));
					else
						n->kind = VAR_SET_DEFAULT;
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1099:
#line 53 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (char*) "search_path";
					n->args = list_make1(makeStringConst((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)])));
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1100:
#line 65 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[(1) - (3)].str);
					n->args = (yyvsp[(3) - (3)].list);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1101:
#line 73 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[(1) - (3)].str);
					n->args = (yyvsp[(3) - (3)].list);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1102:
#line 81 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1103:
#line 88 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1104:
#line 98 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)])); ;}
    break;

  case 1105:
#line 100 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
    break;

  case 1106:
#line 106 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1107:
#line 110 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1108:
#line 114 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGTypeName *t = (yyvsp[(1) - (3)].typnam);
					if ((yyvsp[(3) - (3)].list) != NIL)
					{
						PGAConst *n = (PGAConst *) linitial((yyvsp[(3) - (3)].list));
						if ((n->val.val.ival & ~(INTERVAL_MASK(HOUR) | INTERVAL_MASK(MINUTE))) != 0)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("time zone interval must be HOUR or HOUR TO MINUTE"),
									 parser_errposition((yylsp[(3) - (3)]))));
					}
					t->typmods = (yyvsp[(3) - (3)].list);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), t);
				;}
    break;

  case 1109:
#line 129 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGTypeName *t = (yyvsp[(1) - (5)].typnam);
					t->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.node) = makeStringConstCast((yyvsp[(5) - (5)].str), (yylsp[(5) - (5)]), t);
				;}
    break;

  case 1110:
#line 135 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
    break;

  case 1111:
#line 136 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1112:
#line 137 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1113:
#line 141 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 1114:
#line 142 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 1115:
#line 8 "third_party/libpg_query/grammar/statements/load.y"
    {
					PGLoadStmt *n = makeNode(PGLoadStmt);
					n->filename = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1116:
#line 16 "third_party/libpg_query/grammar/statements/load.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1117:
#line 9 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (4)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (4)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (4)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1118:
#line 23 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (5)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (5)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (5)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = (yyvsp[(5) - (5)].range);
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1119:
#line 37 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = (PGVacuumStmt *) (yyvsp[(5) - (5)].node);
					n->options |= PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (5)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (5)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (5)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1120:
#line 49 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM | (yyvsp[(3) - (4)].ival);
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1121:
#line 57 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM | (yyvsp[(3) - (6)].ival);
					n->relation = (yyvsp[(5) - (6)].range);
					n->va_cols = (yyvsp[(6) - (6)].list);
					if (n->va_cols != NIL)	/* implies analyze */
						n->options |= PG_VACOPT_ANALYZE;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1122:
#line 70 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_ANALYZE; ;}
    break;

  case 1123:
#line 71 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_VERBOSE; ;}
    break;

  case 1124:
#line 72 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_FREEZE; ;}
    break;

  case 1125:
#line 73 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_FULL; ;}
    break;

  case 1126:
#line 75 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					if (strcmp((yyvsp[(1) - (1)].str), "disable_page_skipping") == 0)
						(yyval.ival) = PG_VACOPT_DISABLE_PAGE_SKIPPING;
					else
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
							 errmsg("unrecognized VACUUM option \"%s\"", (yyvsp[(1) - (1)].str)),
									 parser_errposition((yylsp[(1) - (1)]))));
				;}
    break;

  case 1127:
#line 87 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1128:
#line 88 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1129:
#line 93 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 1130:
#line 94 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
    break;

  case 1131:
#line 98 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1132:
#line 99 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1133:
#line 9 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGDeleteStmt *n = makeNode(PGDeleteStmt);
					n->relation = (yyvsp[(4) - (7)].range);
					n->usingClause = (yyvsp[(5) - (7)].list);
					n->whereClause = (yyvsp[(6) - (7)].node);
					n->returningList = (yyvsp[(7) - (7)].list);
					n->withClause = (yyvsp[(1) - (7)].with);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1134:
#line 22 "third_party/libpg_query/grammar/statements/delete.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
				;}
    break;

  case 1135:
#line 26 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGAlias *alias = makeNode(PGAlias);
					alias->aliasname = (yyvsp[(2) - (2)].str);
					(yyvsp[(1) - (2)].range)->alias = alias;
					(yyval.range) = (yyvsp[(1) - (2)].range);
				;}
    break;

  case 1136:
#line 33 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGAlias *alias = makeNode(PGAlias);
					alias->aliasname = (yyvsp[(3) - (3)].str);
					(yyvsp[(1) - (3)].range)->alias = alias;
					(yyval.range) = (yyvsp[(1) - (3)].range);
				;}
    break;

  case 1137:
#line 43 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 1138:
#line 44 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1139:
#line 50 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1140:
#line 51 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1141:
#line 10 "third_party/libpg_query/grammar/statements/analyze.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_ANALYZE;
					if ((yyvsp[(2) - (2)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1142:
#line 20 "third_party/libpg_query/grammar/statements/analyze.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_ANALYZE;
					if ((yyvsp[(2) - (4)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = (yyvsp[(3) - (4)].range);
					n->va_cols = (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1143:
#line 2 "third_party/libpg_query/grammar/statements/variable_reset.y"
    { (yyval.node) = (PGNode *) (yyvsp[(2) - (2)].vsetstmt); ;}
    break;

  case 1144:
#line 8 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (yyvsp[(1) - (1)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1145:
#line 15 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET_ALL;
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1146:
#line 24 "third_party/libpg_query/grammar/statements/variable_reset.y"
    { (yyval.vsetstmt) = (yyvsp[(1) - (1)].vsetstmt); ;}
    break;

  case 1147:
#line 26 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (char*) "timezone";
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1148:
#line 33 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (char*) "transaction_isolation";
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1149:
#line 3 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowSelectStmt *n = makeNode(PGVariableShowSelectStmt);
				n->stmt = (yyvsp[(2) - (2)].node);
				n->name = (char*) "select";
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1150:
#line 11 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1151:
#line 17 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (char*) "timezone";
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1152:
#line 23 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (char*) "transaction_isolation";
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1153:
#line 29 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (char*) "all";
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1156:
#line 39 "third_party/libpg_query/grammar/statements/variable_show.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1157:
#line 41 "third_party/libpg_query/grammar/statements/variable_show.y"
    { (yyval.str) = psprintf("%s.%s", (yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str)); ;}
    break;

  case 1158:
#line 7 "third_party/libpg_query/grammar/statements/call.y"
    {
					PGCallStmt *n = makeNode(PGCallStmt);
					n->func = (yyvsp[(2) - (2)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1159:
#line 10 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(4) - (9)].range);
					n->view->relpersistence = (yyvsp[(2) - (9)].ival);
					n->aliases = (yyvsp[(5) - (9)].list);
					n->query = (yyvsp[(8) - (9)].node);
					n->replace = false;
					n->options = (yyvsp[(6) - (9)].list);
					n->withCheckOption = (yyvsp[(9) - (9)].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1160:
#line 23 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(6) - (11)].range);
					n->view->relpersistence = (yyvsp[(4) - (11)].ival);
					n->aliases = (yyvsp[(7) - (11)].list);
					n->query = (yyvsp[(10) - (11)].node);
					n->replace = true;
					n->options = (yyvsp[(8) - (11)].list);
					n->withCheckOption = (yyvsp[(11) - (11)].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1161:
#line 36 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(5) - (12)].range);
					n->view->relpersistence = (yyvsp[(2) - (12)].ival);
					n->aliases = (yyvsp[(7) - (12)].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[(11) - (12)].node));
					n->replace = false;
					n->options = (yyvsp[(9) - (12)].list);
					n->withCheckOption = (yyvsp[(12) - (12)].viewcheckoption);
					if (n->withCheckOption != PG_NO_CHECK_OPTION)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[(12) - (12)]))));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1162:
#line 54 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(7) - (14)].range);
					n->view->relpersistence = (yyvsp[(4) - (14)].ival);
					n->aliases = (yyvsp[(9) - (14)].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[(13) - (14)].node));
					n->replace = true;
					n->options = (yyvsp[(11) - (14)].list);
					n->withCheckOption = (yyvsp[(14) - (14)].viewcheckoption);
					if (n->withCheckOption != PG_NO_CHECK_OPTION)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[(14) - (14)]))));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1163:
#line 74 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; ;}
    break;

  case 1164:
#line 75 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; ;}
    break;

  case 1165:
#line 76 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = PG_LOCAL_CHECK_OPTION; ;}
    break;

  case 1166:
#line 77 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = PG_NO_CHECK_OPTION; ;}
    break;

  case 1167:
#line 12 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(6) - (7)].node);
					ctas->into = (yyvsp[(4) - (7)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = false;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(4) - (7)].into)->rel->relpersistence = (yyvsp[(2) - (7)].ival);
					(yyvsp[(4) - (7)].into)->skipData = !((yyvsp[(7) - (7)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1168:
#line 25 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(9) - (10)].node);
					ctas->into = (yyvsp[(7) - (10)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = true;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(7) - (10)].into)->rel->relpersistence = (yyvsp[(2) - (10)].ival);
					(yyvsp[(7) - (10)].into)->skipData = !((yyvsp[(10) - (10)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1169:
#line 41 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1170:
#line 42 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1171:
#line 43 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1172:
#line 49 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					(yyval.into) = makeNode(PGIntoClause);
					(yyval.into)->rel = (yyvsp[(1) - (4)].range);
					(yyval.into)->colNames = (yyvsp[(2) - (4)].list);
					(yyval.into)->options = (yyvsp[(3) - (4)].list);
					(yyval.into)->onCommit = (yyvsp[(4) - (4)].oncommit);
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;		/* might get changed later */
				;}
    break;


/* Line 1267 of yacc.c.  */
#line 22850 "third_party/libpg_query/grammar/grammar_out.cpp"
      default: break;
    }
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;
  *++yylsp = yyloc;

  /* Now `shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*------------------------------------.
| yyerrlab -- here on detecting error |
`------------------------------------*/
yyerrlab:
  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (&yylloc, yyscanner, YY_("syntax error"));
#else
      {
	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
	  {
	    YYSIZE_T yyalloc = 2 * yysize;
	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
	    if (yymsg != yymsgbuf)
	      YYSTACK_FREE (yymsg);
	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
	    if (yymsg)
	      yymsg_alloc = yyalloc;
	    else
	      {
		yymsg = yymsgbuf;
		yymsg_alloc = sizeof yymsgbuf;
	      }
	  }

	if (0 < yysize && yysize <= yymsg_alloc)
	  {
	    (void) yysyntax_error (yymsg, yystate, yychar);
	    yyerror (&yylloc, yyscanner, yymsg);
	  }
	else
	  {
	    yyerror (&yylloc, yyscanner, YY_("syntax error"));
	    if (yysize != 0)
	      goto yyexhaustedlab;
	  }
      }
#endif
    }

  yyerror_range[0] = yylloc;

  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse look-ahead token after an
	 error, discard it.  */

      if (yychar <= YYEOF)
	{
	  /* Return failure if at end of input.  */
	  if (yychar == YYEOF)
	    YYABORT;
	}
      else
	{
	  yydestruct ("Error: discarding",
		      yytoken, &yylval, &yylloc, yyscanner);
	  yychar = YYEMPTY;
	}
    }

  /* Else will try to reuse look-ahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  yyerror_range[0] = yylsp[1-yylen];
  /* Do not reclaim the symbols of the rule which action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;	/* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (yyn != YYPACT_NINF)
	{
	  yyn += YYTERROR;
	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
	    {
	      yyn = yytable[yyn];
	      if (0 < yyn)
		break;
	    }
	}

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
	YYABORT;

      yyerror_range[0] = *yylsp;
      yydestruct ("Error: popping",
		  yystos[yystate], yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  *++yyvsp = yylval;

  yyerror_range[1] = yylloc;
  /* Using YYLLOC is tempting, but would change the location of
     the look-ahead.  YYLOC is available though.  */
  YYLLOC_DEFAULT (yyloc, (yyerror_range - 1), 2);
  *++yylsp = yyloc;

  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#ifndef yyoverflow
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (&yylloc, yyscanner, YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEOF && yychar != YYEMPTY)
     yydestruct ("Cleanup: discarding lookahead",
		 yytoken, &yylval, &yylloc, yyscanner);
  /* Do not reclaim the symbols of the rule which action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
		  yystos[*yyssp], yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  /* Make sure YYID is used.  */
  return YYID (yyresult);
}


#line 67 "third_party/libpg_query/grammar/statements/create_as.y"


#line 1 "third_party/libpg_query/grammar/grammar.cpp"
/*
 * The signature of this function is required by bison.  However, we
 * ignore the passed yylloc and instead use the last token position
 * available from the scanner.
 */
static void
base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner, const char *msg)
{
	parser_yyerror(msg);
}

static PGRawStmt *
makeRawStmt(PGNode *stmt, int stmt_location)
{
	PGRawStmt    *rs = makeNode(PGRawStmt);

	rs->stmt = stmt;
	rs->stmt_location = stmt_location;
	rs->stmt_len = 0;			/* might get changed later */
	return rs;
}

/* Adjust a PGRawStmt to reflect that it doesn't run to the end of the string */
static void
updateRawStmtEnd(PGRawStmt *rs, int end_location)
{
	/*
	 * If we already set the length, don't change it.  This is for situations
	 * like "select foo ;; select bar" where the same statement will be last
	 * in the string for more than one semicolon.
	 */
	if (rs->stmt_len > 0)
		return;

	/* OK, update length of PGRawStmt */
	rs->stmt_len = end_location - rs->stmt_location;
}

static PGNode *
makeColumnRef(char *colname, PGList *indirection,
			  int location, core_yyscan_t yyscanner)
{
	/*
	 * Generate a PGColumnRef node, with an PGAIndirection node added if there
	 * is any subscripting in the specified indirection list.  However,
	 * any field selection at the start of the indirection list must be
	 * transposed into the "fields" part of the PGColumnRef node.
	 */
	PGColumnRef  *c = makeNode(PGColumnRef);
	int		nfields = 0;
	PGListCell *l;

	c->location = location;
	foreach(l, indirection)
	{
		if (IsA(lfirst(l), PGAIndices))
		{
			PGAIndirection *i = makeNode(PGAIndirection);

			if (nfields == 0)
			{
				/* easy case - all indirection goes to PGAIndirection */
				c->fields = list_make1(makeString(colname));
				i->indirection = check_indirection(indirection, yyscanner);
			}
			else
			{
				/* got to split the list in two */
				i->indirection = check_indirection(list_copy_tail(indirection,
																  nfields),
												   yyscanner);
				indirection = list_truncate(indirection, nfields);
				c->fields = lcons(makeString(colname), indirection);
			}
			i->arg = (PGNode *) c;
			return (PGNode *) i;
		}
		else if (IsA(lfirst(l), PGAStar))
		{
			/* We only allow '*' at the end of a PGColumnRef */
			if (lnext(l) != NULL)
				parser_yyerror("improper use of \"*\"");
		}
		nfields++;
	}
	/* No subscripting, so all indirection gets added to field list */
	c->fields = lcons(makeString(colname), indirection);
	return (PGNode *) c;
}

static PGNode *
makeTypeCast(PGNode *arg, PGTypeName *tpname, int location)
{
	PGTypeCast *n = makeNode(PGTypeCast);
	n->arg = arg;
	n->typeName = tpname;
	n->location = location;
	return (PGNode *) n;
}

static PGNode *
makeStringConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGString;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeStringConstCast(char *str, int location, PGTypeName *tpname)
{
	PGNode *s = makeStringConst(str, location);

	return makeTypeCast(s, tpname, -1);
}

static PGNode *
makeIntervalNode(char *str, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGString;
	n->sval = str;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;

}

static PGNode *
makeIntervalNode(int val, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGInteger;
	n->ival = val;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;
}

static PGNode *
makeIntervalNode(PGNode *arg, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGAExpr;
	n->eval = arg;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;
}

static PGNode *
makeSampleSize(PGValue *sample_size, bool is_percentage) {
	PGSampleSize *n = makeNode(PGSampleSize);

	n->sample_size = *sample_size;
	n->is_percentage = is_percentage;

	return (PGNode *)n;
}

static PGNode *
makeSampleOptions(PGNode *sample_size, char *method, int seed, int location) {
	PGSampleOptions *n = makeNode(PGSampleOptions);

	n->sample_size = sample_size;
	n->method = method;
	n->seed = seed;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeIntConst(int val, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGInteger;
	n->val.val.ival = val;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeFloatConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGFloat;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeBitStringConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGBitString;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeNullAConst(int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGNull;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeAConst(PGValue *v, int location)
{
	PGNode *n;

	switch (v->type)
	{
		case T_PGFloat:
			n = makeFloatConst(v->val.str, location);
			break;

		case T_PGInteger:
			n = makeIntConst(v->val.ival, location);
			break;

		case T_PGString:
		default:
			n = makeStringConst(v->val.str, location);
			break;
	}

	return n;
}

/* makeBoolAConst()
 * Create an PGAConst string node and put it inside a boolean cast.
 */
static PGNode *
makeBoolAConst(bool state, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGString;
	n->val.val.str = (state ? (char*) "t" : (char*) "f");
	n->location = location;

	return makeTypeCast((PGNode *)n, SystemTypeName("bool"), -1);
}

/* check_qualified_name --- check the result of qualified_name production
 *
 * It's easiest to let the grammar production for qualified_name allow
 * subscripts and '*', which we then must reject here.
 */
static void
check_qualified_name(PGList *names, core_yyscan_t yyscanner)
{
	PGListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), PGString))
			parser_yyerror("syntax error");
	}
}

/* check_func_name --- check the result of func_name production
 *
 * It's easiest to let the grammar production for func_name allow subscripts
 * and '*', which we then must reject here.
 */
static PGList *
check_func_name(PGList *names, core_yyscan_t yyscanner)
{
	PGListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), PGString))
			parser_yyerror("syntax error");
	}
	return names;
}

/* check_indirection --- check the result of indirection production
 *
 * We only allow '*' at the end of the list, but it's hard to enforce that
 * in the grammar, so do it here.
 */
static PGList *
check_indirection(PGList *indirection, core_yyscan_t yyscanner)
{
	PGListCell *l;

	foreach(l, indirection)
	{
		if (IsA(lfirst(l), PGAStar))
		{
			if (lnext(l) != NULL)
				parser_yyerror("improper use of \"*\"");
		}
	}
	return indirection;
}

/* makeParamRef
 * Creates a new PGParamRef node
 */
static PGNode* makeParamRef(int number, int location)
{
	PGParamRef *p = makeNode(PGParamRef);
	p->number = number;
	p->location = location;
	return (PGNode *) p;
}

static PGNode *
makeParamRefCast(int number, int location, PGTypeName *tpname)
{
	PGNode *p = makeParamRef(number, location);
	return makeTypeCast(p, tpname, -1);
}

/* insertSelectOptions()
 * Insert ORDER BY, etc into an already-constructed SelectStmt.
 *
 * This routine is just to avoid duplicating code in PGSelectStmt productions.
 */
static void
insertSelectOptions(PGSelectStmt *stmt,
					PGList *sortClause, PGList *lockingClause,
					PGNode *limitOffset, PGNode *limitCount,
					PGWithClause *withClause,
					core_yyscan_t yyscanner)
{
	Assert(IsA(stmt, PGSelectStmt));

	/*
	 * Tests here are to reject constructs like
	 *	(SELECT foo ORDER BY bar) ORDER BY baz
	 */
	if (sortClause)
	{
		if (stmt->sortClause)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple ORDER BY clauses not allowed"),
					 parser_errposition(exprLocation((PGNode *) sortClause))));
		stmt->sortClause = sortClause;
	}
	/* We can handle multiple locking clauses, though */
	stmt->lockingClause = list_concat(stmt->lockingClause, lockingClause);
	if (limitOffset)
	{
		if (stmt->limitOffset)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple OFFSET clauses not allowed"),
					 parser_errposition(exprLocation(limitOffset))));
		stmt->limitOffset = limitOffset;
	}
	if (limitCount)
	{
		if (stmt->limitCount)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple LIMIT clauses not allowed"),
					 parser_errposition(exprLocation(limitCount))));
		stmt->limitCount = limitCount;
	}
	if (withClause)
	{
		if (stmt->withClause)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple WITH clauses not allowed"),
					 parser_errposition(exprLocation((PGNode *) withClause))));
		stmt->withClause = withClause;
	}
}

static PGNode *
makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg)
{
	PGSelectStmt *n = makeNode(PGSelectStmt);

	n->op = op;
	n->all = all;
	n->larg = (PGSelectStmt *) larg;
	n->rarg = (PGSelectStmt *) rarg;
	return (PGNode *) n;
}

/* SystemFuncName()
 * Build a properly-qualified reference to a built-in function.
 */
PGList *
SystemFuncName(const char *name)
{
	return list_make2(makeString(DEFAULT_SCHEMA), makeString(name));
}

/* SystemTypeName()
 * Build a properly-qualified reference to a built-in type.
 *
 * typmod is defaulted, but may be changed afterwards by caller.
 * Likewise for the location.
 */
PGTypeName *
SystemTypeName(const char *name)
{
	return makeTypeNameFromNameList(list_make2(makeString(DEFAULT_SCHEMA),
											   makeString(name)));
}

/* doNegate()
 * Handle negation of a numeric constant.
 *
 * Formerly, we did this here because the optimizer couldn't cope with
 * indexquals that looked like "var = -4" --- it wants "var = const"
 * and a unary minus operator applied to a constant didn't qualify.
 * As of Postgres 7.0, that problem doesn't exist anymore because there
 * is a constant-subexpression simplifier in the optimizer.  However,
 * there's still a good reason for doing this here, which is that we can
 * postpone committing to a particular internal representation for simple
 * negative constants.	It's better to leave "-123.456" in string form
 * until we know what the desired type is.
 */
static PGNode *
doNegate(PGNode *n, int location)
{
	if (IsA(n, PGAConst))
	{
		PGAConst *con = (PGAConst *)n;

		/* report the constant's location as that of the '-' sign */
		con->location = location;

		if (con->val.type == T_PGInteger)
		{
			con->val.val.ival = -con->val.val.ival;
			return n;
		}
		if (con->val.type == T_PGFloat)
		{
			doNegateFloat(&con->val);
			return n;
		}
	}

	return (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", NULL, n, location);
}

static void
doNegateFloat(PGValue *v)
{
	char   *oldval = v->val.str;

	Assert(IsA(v, PGFloat));
	if (*oldval == '+')
		oldval++;
	if (*oldval == '-')
		v->val.str = oldval+1;	/* just strip the '-' */
	else
		v->val.str = psprintf("-%s", oldval);
}

static PGNode *
makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location)
{
	PGNode	   *lexp = lexpr;

	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
	while (IsA(lexp, PGAExpr) &&
		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
		lexp = ((PGAExpr *) lexp)->lexpr;
	/* Flatten "a AND b AND c ..." to a single PGBoolExpr on sight */
	if (IsA(lexp, PGBoolExpr))
	{
		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;

		if (blexpr->boolop == PG_AND_EXPR)
		{
			blexpr->args = lappend(blexpr->args, rexpr);
			return (PGNode *) blexpr;
		}
	}
	return (PGNode *) makeBoolExpr(PG_AND_EXPR, list_make2(lexpr, rexpr), location);
}

static PGNode *
makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location)
{
	PGNode	   *lexp = lexpr;

	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
	while (IsA(lexp, PGAExpr) &&
		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
		lexp = ((PGAExpr *) lexp)->lexpr;
	/* Flatten "a OR b OR c ..." to a single PGBoolExpr on sight */
	if (IsA(lexp, PGBoolExpr))
	{
		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;

		if (blexpr->boolop == PG_OR_EXPR)
		{
			blexpr->args = lappend(blexpr->args, rexpr);
			return (PGNode *) blexpr;
		}
	}
	return (PGNode *) makeBoolExpr(PG_OR_EXPR, list_make2(lexpr, rexpr), location);
}

static PGNode *
makeNotExpr(PGNode *expr, int location)
{
	return (PGNode *) makeBoolExpr(PG_NOT_EXPR, list_make1(expr), location);
}

static PGNode *
makeSQLValueFunction(PGSQLValueFunctionOp op, int32_t typmod, int location)
{
	PGSQLValueFunction *svf = makeNode(PGSQLValueFunction);

	svf->op = op;
	/* svf->type will be filled during parse analysis */
	svf->typmod = typmod;
	svf->location = location;
	return (PGNode *) svf;
}

/* Separate PGConstraint nodes from COLLATE clauses in a */
static void
SplitColQualList(PGList *qualList,
				 PGList **constraintList, PGCollateClause **collClause,
				 core_yyscan_t yyscanner)
{
	PGListCell   *cell;
	PGListCell   *prev;
	PGListCell   *next;

	*collClause = NULL;
	prev = NULL;
	for (cell = list_head(qualList); cell; cell = next)
	{
		PGNode   *n = (PGNode *) lfirst(cell);

		next = lnext(cell);
		if (IsA(n, PGConstraint))
		{
			/* keep it in list */
			prev = cell;
			continue;
		}
		if (IsA(n, PGCollateClause))
		{
			PGCollateClause *c = (PGCollateClause *) n;

			if (*collClause)
				ereport(ERROR,
						(errcode(PG_ERRCODE_SYNTAX_ERROR),
						 errmsg("multiple COLLATE clauses not allowed"),
						 parser_errposition(c->location)));
			*collClause = c;
		}
		else
			elog(ERROR, "unexpected node type %d", (int) n->type);
		/* remove non-Constraint nodes from qualList */
		qualList = list_delete_cell(qualList, cell, prev);
	}
	*constraintList = qualList;
}

/*
 * Process result of ConstraintAttributeSpec, and set appropriate bool flags
 * in the output command node.  Pass NULL for any flags the particular
 * command doesn't support.
 */
static void
processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner)
{
	/* defaults */
	if (deferrable)
		*deferrable = false;
	if (initdeferred)
		*initdeferred = false;
	if (not_valid)
		*not_valid = false;

	if (cas_bits & (CAS_DEFERRABLE | CAS_INITIALLY_DEFERRED))
	{
		if (deferrable)
			*deferrable = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_INITIALLY_DEFERRED)
	{
		if (initdeferred)
			*initdeferred = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_NOT_VALID)
	{
		if (not_valid)
			*not_valid = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NOT VALID",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_NO_INHERIT)
	{
		if (no_inherit)
			*no_inherit = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NO INHERIT",
							constrType),
					 parser_errposition(location)));
	}
}

/*----------
 * Recursive view transformation
 *
 * Convert
 *
 *     CREATE RECURSIVE VIEW relname (aliases) AS query
 *
 * to
 *
 *     CREATE VIEW relname (aliases) AS
 *         WITH RECURSIVE relname (aliases) AS (query)
 *         SELECT aliases FROM relname
 *
 * Actually, just the WITH ... part, which is then inserted into the original
 * view as the query.
 * ----------
 */
static PGNode *
makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query)
{
	PGSelectStmt *s = makeNode(PGSelectStmt);
	PGWithClause *w = makeNode(PGWithClause);
	PGCommonTableExpr *cte = makeNode(PGCommonTableExpr);
	PGList	   *tl = NIL;
	PGListCell   *lc;

	/* create common table expression */
	cte->ctename = relname;
	cte->aliascolnames = aliases;
	cte->ctequery = query;
	cte->location = -1;

	/* create WITH clause and attach CTE */
	w->recursive = true;
	w->ctes = list_make1(cte);
	w->location = -1;

	/* create target list for the new SELECT from the alias list of the
	 * recursive view specification */
	foreach (lc, aliases)
	{
		PGResTarget *rt = makeNode(PGResTarget);

		rt->name = NULL;
		rt->indirection = NIL;
		rt->val = makeColumnRef(strVal(lfirst(lc)), NIL, -1, 0);
		rt->location = -1;

		tl = lappend(tl, rt);
	}

	/* create new SELECT combining WITH clause, target list, and fake FROM
	 * clause */
	s->withClause = w;
	s->targetList = tl;
	s->fromClause = list_make1(makeRangeVar(NULL, relname, -1));

	return (PGNode *) s;
}

/* parser_init()
 * Initialize to parse one query string
 */
void
parser_init(base_yy_extra_type *yyext)
{
	yyext->parsetree = NIL;		/* in case grammar forgets to set it */
}

#undef yyparse
#undef yylex
#undef yyerror
#undef yylval
#undef yychar
#undef yydebug
#undef yynerrs
#undef yylloc

} // namespace duckdb_libpgquery
