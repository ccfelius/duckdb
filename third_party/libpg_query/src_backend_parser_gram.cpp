/* A Bison parser, made by GNU Bison 2.3.  */

/* Skeleton implementation for Bison's Yacc-like parsers in C

   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
   Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street, Fifth Floor,
   Boston, MA 02110-1301, USA.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "2.3"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Using locations.  */
#define YYLSP_NEEDED 1

/* Substitute the variable and function names.  */
#define yyparse base_yyparse
#define yylex   base_yylex
#define yyerror base_yyerror
#define yylval  base_yylval
#define yychar  base_yychar
#define yydebug base_yydebug
#define yynerrs base_yynerrs
#define yylloc base_yylloc

/* Tokens.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
   /* Put the tokens into the symbol table, so that GDB and other debuggers
      know about them.  */
   enum yytokentype {
     IDENT = 258,
     FCONST = 259,
     SCONST = 260,
     BCONST = 261,
     XCONST = 262,
     Op = 263,
     ICONST = 264,
     PARAM = 265,
     TYPECAST = 266,
     DOT_DOT = 267,
     COLON_EQUALS = 268,
     EQUALS_GREATER = 269,
     LESS_EQUALS = 270,
     GREATER_EQUALS = 271,
     NOT_EQUALS = 272,
     ABORT_P = 273,
     ABSOLUTE_P = 274,
     ACCESS = 275,
     ACTION = 276,
     ADD_P = 277,
     ADMIN = 278,
     AFTER = 279,
     AGGREGATE = 280,
     ALL = 281,
     ALSO = 282,
     ALTER = 283,
     ALWAYS = 284,
     ANALYSE = 285,
     ANALYZE = 286,
     AND = 287,
     ANY = 288,
     ARRAY = 289,
     AS = 290,
     ASC_P = 291,
     ASSERTION = 292,
     ASSIGNMENT = 293,
     ASYMMETRIC = 294,
     AT = 295,
     ATTACH = 296,
     ATTRIBUTE = 297,
     AUTHORIZATION = 298,
     BACKWARD = 299,
     BEFORE = 300,
     BEGIN_P = 301,
     BETWEEN = 302,
     BIGINT = 303,
     BINARY = 304,
     BIT = 305,
     BOOLEAN_P = 306,
     BOTH = 307,
     BY = 308,
     CACHE = 309,
     CALL_P = 310,
     CALLED = 311,
     CASCADE = 312,
     CASCADED = 313,
     CASE = 314,
     CAST = 315,
     CATALOG_P = 316,
     CHAIN = 317,
     CHAR_P = 318,
     CHARACTER = 319,
     CHARACTERISTICS = 320,
     CHECK_P = 321,
     CHECKPOINT = 322,
     CLASS = 323,
     CLOSE = 324,
     CLUSTER = 325,
     COALESCE = 326,
     COLLATE = 327,
     COLLATION = 328,
     COLUMN = 329,
     COLUMNS = 330,
     COMMENT = 331,
     COMMENTS = 332,
     COMMIT = 333,
     COMMITTED = 334,
     CONCURRENTLY = 335,
     CONFIGURATION = 336,
     CONFLICT = 337,
     CONNECTION = 338,
     CONSTRAINT = 339,
     CONSTRAINTS = 340,
     CONTENT_P = 341,
     CONTINUE_P = 342,
     CONVERSION_P = 343,
     COPY = 344,
     COST = 345,
     CREATE_P = 346,
     CROSS = 347,
     CSV = 348,
     CUBE = 349,
     CURRENT_P = 350,
     CURRENT_CATALOG = 351,
     CURRENT_DATE = 352,
     CURRENT_ROLE = 353,
     CURRENT_SCHEMA = 354,
     CURRENT_TIME = 355,
     CURRENT_TIMESTAMP = 356,
     CURRENT_USER = 357,
     CURSOR = 358,
     CYCLE = 359,
     DATA_P = 360,
     DATABASE = 361,
     DAY_P = 362,
     DEALLOCATE = 363,
     DEC = 364,
     DECIMAL_P = 365,
     DECLARE = 366,
     DEFAULT = 367,
     DEFAULTS = 368,
     DEFERRABLE = 369,
     DEFERRED = 370,
     DEFINER = 371,
     DELETE_P = 372,
     DELIMITER = 373,
     DELIMITERS = 374,
     DEPENDS = 375,
     DESC_P = 376,
     DESCRIBE = 377,
     DETACH = 378,
     DICTIONARY = 379,
     DISABLE_P = 380,
     DISCARD = 381,
     DISTINCT = 382,
     DO = 383,
     DOCUMENT_P = 384,
     DOMAIN_P = 385,
     DOUBLE_P = 386,
     DROP = 387,
     EACH = 388,
     ELSE = 389,
     ENABLE_P = 390,
     ENCODING = 391,
     ENCRYPTED = 392,
     END_P = 393,
     ENUM_P = 394,
     ESCAPE = 395,
     EVENT = 396,
     EXCEPT = 397,
     EXCLUDE = 398,
     EXCLUDING = 399,
     EXCLUSIVE = 400,
     EXECUTE = 401,
     EXISTS = 402,
     EXPLAIN = 403,
     EXTENSION = 404,
     EXTERNAL = 405,
     EXTRACT = 406,
     FALSE_P = 407,
     FAMILY = 408,
     FETCH = 409,
     FILTER = 410,
     FIRST_P = 411,
     FLOAT_P = 412,
     FOLLOWING = 413,
     FOR = 414,
     FORCE = 415,
     FOREIGN = 416,
     FORWARD = 417,
     FREEZE = 418,
     FROM = 419,
     FULL = 420,
     FUNCTION = 421,
     FUNCTIONS = 422,
     GENERATED = 423,
     GLOBAL = 424,
     GRANT = 425,
     GRANTED = 426,
     GROUP_P = 427,
     GROUPING = 428,
     HANDLER = 429,
     HAVING = 430,
     HEADER_P = 431,
     HOLD = 432,
     HOUR_P = 433,
     IDENTITY_P = 434,
     IF_P = 435,
     ILIKE = 436,
     IMMEDIATE = 437,
     IMMUTABLE = 438,
     IMPLICIT_P = 439,
     IMPORT_P = 440,
     IN_P = 441,
     INCLUDING = 442,
     INCREMENT = 443,
     INDEX = 444,
     INDEXES = 445,
     INHERIT = 446,
     INHERITS = 447,
     INITIALLY = 448,
     INLINE_P = 449,
     INNER_P = 450,
     INOUT = 451,
     INPUT_P = 452,
     INSENSITIVE = 453,
     INSERT = 454,
     INSTEAD = 455,
     INT_P = 456,
     INTEGER = 457,
     INTERSECT = 458,
     INTERVAL = 459,
     INTO = 460,
     INVOKER = 461,
     IS = 462,
     ISNULL = 463,
     ISOLATION = 464,
     JOIN = 465,
     KEY = 466,
     LABEL = 467,
     LANGUAGE = 468,
     LARGE_P = 469,
     LAST_P = 470,
     LATERAL_P = 471,
     LEADING = 472,
     LEAKPROOF = 473,
     LEFT = 474,
     LEVEL = 475,
     LIKE = 476,
     LIMIT = 477,
     LISTEN = 478,
     LOAD = 479,
     LOCAL = 480,
     LOCALTIME = 481,
     LOCALTIMESTAMP = 482,
     LOCATION = 483,
     LOCK_P = 484,
     LOCKED = 485,
     LOGGED = 486,
     MAPPING = 487,
     MATCH = 488,
     MATERIALIZED = 489,
     MAXVALUE = 490,
     METHOD = 491,
     MINUTE_P = 492,
     MINVALUE = 493,
     MODE = 494,
     MONTH_P = 495,
     MOVE = 496,
     NAME_P = 497,
     NAMES = 498,
     NATIONAL = 499,
     NATURAL = 500,
     NCHAR = 501,
     NEW = 502,
     NEXT = 503,
     NO = 504,
     NONE = 505,
     NOT = 506,
     NOTHING = 507,
     NOTIFY = 508,
     NOTNULL = 509,
     NOWAIT = 510,
     NULL_P = 511,
     NULLIF = 512,
     NULLS_P = 513,
     NUMERIC = 514,
     OBJECT_P = 515,
     OF = 516,
     OFF = 517,
     OFFSET = 518,
     OIDS = 519,
     OLD = 520,
     ON = 521,
     ONLY = 522,
     OPERATOR = 523,
     OPTION = 524,
     OPTIONS = 525,
     OR = 526,
     ORDER = 527,
     ORDINALITY = 528,
     OUT_P = 529,
     OUTER_P = 530,
     OVER = 531,
     OVERLAPS = 532,
     OVERLAY = 533,
     OVERRIDING = 534,
     OWNED = 535,
     OWNER = 536,
     PARALLEL = 537,
     PARSER = 538,
     PARTIAL = 539,
     PARTITION = 540,
     PASSING = 541,
     PASSWORD = 542,
     PLACING = 543,
     PLANS = 544,
     POLICY = 545,
     POSITION = 546,
     PRAGMA_P = 547,
     PRECEDING = 548,
     PRECISION = 549,
     PREPARE = 550,
     PREPARED = 551,
     PRESERVE = 552,
     PRIMARY = 553,
     PRIOR = 554,
     PRIVILEGES = 555,
     PROCEDURAL = 556,
     PROCEDURE = 557,
     PROGRAM = 558,
     PUBLICATION = 559,
     QUOTE = 560,
     RANGE = 561,
     READ_P = 562,
     REAL = 563,
     REASSIGN = 564,
     RECHECK = 565,
     RECURSIVE = 566,
     REF = 567,
     REFERENCES = 568,
     REFERENCING = 569,
     REFRESH = 570,
     REINDEX = 571,
     RELATIVE_P = 572,
     RELEASE = 573,
     RENAME = 574,
     REPEATABLE = 575,
     REPLACE = 576,
     REPLICA = 577,
     RESET = 578,
     RESTART = 579,
     RESTRICT = 580,
     RETURNING = 581,
     RETURNS = 582,
     REVOKE = 583,
     RIGHT = 584,
     ROLE = 585,
     ROLLBACK = 586,
     ROLLUP = 587,
     ROW = 588,
     ROWS = 589,
     RULE = 590,
     SAVEPOINT = 591,
     SCHEMA = 592,
     SCHEMAS = 593,
     SCROLL = 594,
     SEARCH = 595,
     SECOND_P = 596,
     SECURITY = 597,
     SELECT = 598,
     SEQUENCE = 599,
     SEQUENCES = 600,
     SERIALIZABLE = 601,
     SERVER = 602,
     SESSION = 603,
     SESSION_USER = 604,
     SET = 605,
     SETOF = 606,
     SETS = 607,
     SHARE = 608,
     SHOW = 609,
     SIMILAR = 610,
     SIMPLE = 611,
     SKIP = 612,
     SMALLINT = 613,
     SNAPSHOT = 614,
     SOME = 615,
     SQL_P = 616,
     STABLE = 617,
     STANDALONE_P = 618,
     START = 619,
     STATEMENT = 620,
     STATISTICS = 621,
     STDIN = 622,
     STDOUT = 623,
     STORAGE = 624,
     STRICT_P = 625,
     STRIP_P = 626,
     SUBSCRIPTION = 627,
     SUBSTRING = 628,
     SYMMETRIC = 629,
     SYSID = 630,
     SYSTEM_P = 631,
     TABLE = 632,
     TABLES = 633,
     TABLESAMPLE = 634,
     TABLESPACE = 635,
     TEMP = 636,
     TEMPLATE = 637,
     TEMPORARY = 638,
     TEXT_P = 639,
     THEN = 640,
     TIME = 641,
     TIMESTAMP = 642,
     TO = 643,
     TRAILING = 644,
     TRANSACTION = 645,
     TRANSFORM = 646,
     TREAT = 647,
     TRIGGER = 648,
     TRIM = 649,
     TRUE_P = 650,
     TRUNCATE = 651,
     TRUSTED = 652,
     TYPE_P = 653,
     TYPES_P = 654,
     UNBOUNDED = 655,
     UNCOMMITTED = 656,
     UNENCRYPTED = 657,
     UNION = 658,
     UNIQUE = 659,
     UNKNOWN = 660,
     UNLISTEN = 661,
     UNLOGGED = 662,
     UNTIL = 663,
     UPDATE = 664,
     USER = 665,
     USING = 666,
     VACUUM = 667,
     VALID = 668,
     VALIDATE = 669,
     VALIDATOR = 670,
     VALUE_P = 671,
     VALUES = 672,
     VARCHAR = 673,
     VARIADIC = 674,
     VARYING = 675,
     VERBOSE = 676,
     VERSION_P = 677,
     VIEW = 678,
     VIEWS = 679,
     VOLATILE = 680,
     WHEN = 681,
     WHERE = 682,
     WHITESPACE_P = 683,
     WINDOW = 684,
     WITH = 685,
     WITHIN = 686,
     WITHOUT = 687,
     WORK = 688,
     WRAPPER = 689,
     WRITE_P = 690,
     XML_P = 691,
     XMLATTRIBUTES = 692,
     XMLCONCAT = 693,
     XMLELEMENT = 694,
     XMLEXISTS = 695,
     XMLFOREST = 696,
     XMLNAMESPACES = 697,
     XMLPARSE = 698,
     XMLPI = 699,
     XMLROOT = 700,
     XMLSERIALIZE = 701,
     XMLTABLE = 702,
     YEAR_P = 703,
     YES_P = 704,
     ZONE = 705,
     NOT_LA = 706,
     NULLS_LA = 707,
     WITH_LA = 708,
     POSTFIXOP = 709,
     UMINUS = 710
   };
#endif
/* Tokens.  */
#define IDENT 258
#define FCONST 259
#define SCONST 260
#define BCONST 261
#define XCONST 262
#define Op 263
#define ICONST 264
#define PARAM 265
#define TYPECAST 266
#define DOT_DOT 267
#define COLON_EQUALS 268
#define EQUALS_GREATER 269
#define LESS_EQUALS 270
#define GREATER_EQUALS 271
#define NOT_EQUALS 272
#define ABORT_P 273
#define ABSOLUTE_P 274
#define ACCESS 275
#define ACTION 276
#define ADD_P 277
#define ADMIN 278
#define AFTER 279
#define AGGREGATE 280
#define ALL 281
#define ALSO 282
#define ALTER 283
#define ALWAYS 284
#define ANALYSE 285
#define ANALYZE 286
#define AND 287
#define ANY 288
#define ARRAY 289
#define AS 290
#define ASC_P 291
#define ASSERTION 292
#define ASSIGNMENT 293
#define ASYMMETRIC 294
#define AT 295
#define ATTACH 296
#define ATTRIBUTE 297
#define AUTHORIZATION 298
#define BACKWARD 299
#define BEFORE 300
#define BEGIN_P 301
#define BETWEEN 302
#define BIGINT 303
#define BINARY 304
#define BIT 305
#define BOOLEAN_P 306
#define BOTH 307
#define BY 308
#define CACHE 309
#define CALL_P 310
#define CALLED 311
#define CASCADE 312
#define CASCADED 313
#define CASE 314
#define CAST 315
#define CATALOG_P 316
#define CHAIN 317
#define CHAR_P 318
#define CHARACTER 319
#define CHARACTERISTICS 320
#define CHECK_P 321
#define CHECKPOINT 322
#define CLASS 323
#define CLOSE 324
#define CLUSTER 325
#define COALESCE 326
#define COLLATE 327
#define COLLATION 328
#define COLUMN 329
#define COLUMNS 330
#define COMMENT 331
#define COMMENTS 332
#define COMMIT 333
#define COMMITTED 334
#define CONCURRENTLY 335
#define CONFIGURATION 336
#define CONFLICT 337
#define CONNECTION 338
#define CONSTRAINT 339
#define CONSTRAINTS 340
#define CONTENT_P 341
#define CONTINUE_P 342
#define CONVERSION_P 343
#define COPY 344
#define COST 345
#define CREATE_P 346
#define CROSS 347
#define CSV 348
#define CUBE 349
#define CURRENT_P 350
#define CURRENT_CATALOG 351
#define CURRENT_DATE 352
#define CURRENT_ROLE 353
#define CURRENT_SCHEMA 354
#define CURRENT_TIME 355
#define CURRENT_TIMESTAMP 356
#define CURRENT_USER 357
#define CURSOR 358
#define CYCLE 359
#define DATA_P 360
#define DATABASE 361
#define DAY_P 362
#define DEALLOCATE 363
#define DEC 364
#define DECIMAL_P 365
#define DECLARE 366
#define DEFAULT 367
#define DEFAULTS 368
#define DEFERRABLE 369
#define DEFERRED 370
#define DEFINER 371
#define DELETE_P 372
#define DELIMITER 373
#define DELIMITERS 374
#define DEPENDS 375
#define DESC_P 376
#define DESCRIBE 377
#define DETACH 378
#define DICTIONARY 379
#define DISABLE_P 380
#define DISCARD 381
#define DISTINCT 382
#define DO 383
#define DOCUMENT_P 384
#define DOMAIN_P 385
#define DOUBLE_P 386
#define DROP 387
#define EACH 388
#define ELSE 389
#define ENABLE_P 390
#define ENCODING 391
#define ENCRYPTED 392
#define END_P 393
#define ENUM_P 394
#define ESCAPE 395
#define EVENT 396
#define EXCEPT 397
#define EXCLUDE 398
#define EXCLUDING 399
#define EXCLUSIVE 400
#define EXECUTE 401
#define EXISTS 402
#define EXPLAIN 403
#define EXTENSION 404
#define EXTERNAL 405
#define EXTRACT 406
#define FALSE_P 407
#define FAMILY 408
#define FETCH 409
#define FILTER 410
#define FIRST_P 411
#define FLOAT_P 412
#define FOLLOWING 413
#define FOR 414
#define FORCE 415
#define FOREIGN 416
#define FORWARD 417
#define FREEZE 418
#define FROM 419
#define FULL 420
#define FUNCTION 421
#define FUNCTIONS 422
#define GENERATED 423
#define GLOBAL 424
#define GRANT 425
#define GRANTED 426
#define GROUP_P 427
#define GROUPING 428
#define HANDLER 429
#define HAVING 430
#define HEADER_P 431
#define HOLD 432
#define HOUR_P 433
#define IDENTITY_P 434
#define IF_P 435
#define ILIKE 436
#define IMMEDIATE 437
#define IMMUTABLE 438
#define IMPLICIT_P 439
#define IMPORT_P 440
#define IN_P 441
#define INCLUDING 442
#define INCREMENT 443
#define INDEX 444
#define INDEXES 445
#define INHERIT 446
#define INHERITS 447
#define INITIALLY 448
#define INLINE_P 449
#define INNER_P 450
#define INOUT 451
#define INPUT_P 452
#define INSENSITIVE 453
#define INSERT 454
#define INSTEAD 455
#define INT_P 456
#define INTEGER 457
#define INTERSECT 458
#define INTERVAL 459
#define INTO 460
#define INVOKER 461
#define IS 462
#define ISNULL 463
#define ISOLATION 464
#define JOIN 465
#define KEY 466
#define LABEL 467
#define LANGUAGE 468
#define LARGE_P 469
#define LAST_P 470
#define LATERAL_P 471
#define LEADING 472
#define LEAKPROOF 473
#define LEFT 474
#define LEVEL 475
#define LIKE 476
#define LIMIT 477
#define LISTEN 478
#define LOAD 479
#define LOCAL 480
#define LOCALTIME 481
#define LOCALTIMESTAMP 482
#define LOCATION 483
#define LOCK_P 484
#define LOCKED 485
#define LOGGED 486
#define MAPPING 487
#define MATCH 488
#define MATERIALIZED 489
#define MAXVALUE 490
#define METHOD 491
#define MINUTE_P 492
#define MINVALUE 493
#define MODE 494
#define MONTH_P 495
#define MOVE 496
#define NAME_P 497
#define NAMES 498
#define NATIONAL 499
#define NATURAL 500
#define NCHAR 501
#define NEW 502
#define NEXT 503
#define NO 504
#define NONE 505
#define NOT 506
#define NOTHING 507
#define NOTIFY 508
#define NOTNULL 509
#define NOWAIT 510
#define NULL_P 511
#define NULLIF 512
#define NULLS_P 513
#define NUMERIC 514
#define OBJECT_P 515
#define OF 516
#define OFF 517
#define OFFSET 518
#define OIDS 519
#define OLD 520
#define ON 521
#define ONLY 522
#define OPERATOR 523
#define OPTION 524
#define OPTIONS 525
#define OR 526
#define ORDER 527
#define ORDINALITY 528
#define OUT_P 529
#define OUTER_P 530
#define OVER 531
#define OVERLAPS 532
#define OVERLAY 533
#define OVERRIDING 534
#define OWNED 535
#define OWNER 536
#define PARALLEL 537
#define PARSER 538
#define PARTIAL 539
#define PARTITION 540
#define PASSING 541
#define PASSWORD 542
#define PLACING 543
#define PLANS 544
#define POLICY 545
#define POSITION 546
#define PRAGMA_P 547
#define PRECEDING 548
#define PRECISION 549
#define PREPARE 550
#define PREPARED 551
#define PRESERVE 552
#define PRIMARY 553
#define PRIOR 554
#define PRIVILEGES 555
#define PROCEDURAL 556
#define PROCEDURE 557
#define PROGRAM 558
#define PUBLICATION 559
#define QUOTE 560
#define RANGE 561
#define READ_P 562
#define REAL 563
#define REASSIGN 564
#define RECHECK 565
#define RECURSIVE 566
#define REF 567
#define REFERENCES 568
#define REFERENCING 569
#define REFRESH 570
#define REINDEX 571
#define RELATIVE_P 572
#define RELEASE 573
#define RENAME 574
#define REPEATABLE 575
#define REPLACE 576
#define REPLICA 577
#define RESET 578
#define RESTART 579
#define RESTRICT 580
#define RETURNING 581
#define RETURNS 582
#define REVOKE 583
#define RIGHT 584
#define ROLE 585
#define ROLLBACK 586
#define ROLLUP 587
#define ROW 588
#define ROWS 589
#define RULE 590
#define SAVEPOINT 591
#define SCHEMA 592
#define SCHEMAS 593
#define SCROLL 594
#define SEARCH 595
#define SECOND_P 596
#define SECURITY 597
#define SELECT 598
#define SEQUENCE 599
#define SEQUENCES 600
#define SERIALIZABLE 601
#define SERVER 602
#define SESSION 603
#define SESSION_USER 604
#define SET 605
#define SETOF 606
#define SETS 607
#define SHARE 608
#define SHOW 609
#define SIMILAR 610
#define SIMPLE 611
#define SKIP 612
#define SMALLINT 613
#define SNAPSHOT 614
#define SOME 615
#define SQL_P 616
#define STABLE 617
#define STANDALONE_P 618
#define START 619
#define STATEMENT 620
#define STATISTICS 621
#define STDIN 622
#define STDOUT 623
#define STORAGE 624
#define STRICT_P 625
#define STRIP_P 626
#define SUBSCRIPTION 627
#define SUBSTRING 628
#define SYMMETRIC 629
#define SYSID 630
#define SYSTEM_P 631
#define TABLE 632
#define TABLES 633
#define TABLESAMPLE 634
#define TABLESPACE 635
#define TEMP 636
#define TEMPLATE 637
#define TEMPORARY 638
#define TEXT_P 639
#define THEN 640
#define TIME 641
#define TIMESTAMP 642
#define TO 643
#define TRAILING 644
#define TRANSACTION 645
#define TRANSFORM 646
#define TREAT 647
#define TRIGGER 648
#define TRIM 649
#define TRUE_P 650
#define TRUNCATE 651
#define TRUSTED 652
#define TYPE_P 653
#define TYPES_P 654
#define UNBOUNDED 655
#define UNCOMMITTED 656
#define UNENCRYPTED 657
#define UNION 658
#define UNIQUE 659
#define UNKNOWN 660
#define UNLISTEN 661
#define UNLOGGED 662
#define UNTIL 663
#define UPDATE 664
#define USER 665
#define USING 666
#define VACUUM 667
#define VALID 668
#define VALIDATE 669
#define VALIDATOR 670
#define VALUE_P 671
#define VALUES 672
#define VARCHAR 673
#define VARIADIC 674
#define VARYING 675
#define VERBOSE 676
#define VERSION_P 677
#define VIEW 678
#define VIEWS 679
#define VOLATILE 680
#define WHEN 681
#define WHERE 682
#define WHITESPACE_P 683
#define WINDOW 684
#define WITH 685
#define WITHIN 686
#define WITHOUT 687
#define WORK 688
#define WRAPPER 689
#define WRITE_P 690
#define XML_P 691
#define XMLATTRIBUTES 692
#define XMLCONCAT 693
#define XMLELEMENT 694
#define XMLEXISTS 695
#define XMLFOREST 696
#define XMLNAMESPACES 697
#define XMLPARSE 698
#define XMLPI 699
#define XMLROOT 700
#define XMLSERIALIZE 701
#define XMLTABLE 702
#define YEAR_P 703
#define YES_P 704
#define ZONE 705
#define NOT_LA 706
#define NULLS_LA 707
#define WITH_LA 708
#define POSTFIXOP 709
#define UMINUS 710




/* Copy the first part of user declarations.  */
#line 1 "third_party/libpg_query/grammar/grammar.y.tmp"

#line 1 "third_party/libpg_query/grammar/grammar.hpp"
/*#define YYDEBUG 1*/
/*-------------------------------------------------------------------------
 *
 * gram.y
 *	  POSTGRESQL BISON rules/actions
 *
 * Portions Copyright (c) 1996-2017, PostgreSQL Global Development PGGroup
 * Portions Copyright (c) 1994, Regents of the University of California
 *
 *
 * IDENTIFICATION
 *	  src/backend/parser/gram.y
 *
 * HISTORY
 *	  AUTHOR			DATE			MAJOR EVENT
 *	  Andrew Yu			Sept, 1994		POSTQUEL to SQL conversion
 *	  Andrew Yu			Oct, 1994		lispy code conversion
 *
 * NOTES
 *	  CAPITALS are used to represent terminal symbols.
 *	  non-capitals are used to represent non-terminals.
 *
 *	  In general, nothing in this file should initiate database accesses
 *	  nor depend on changeable state (such as SET variables).  If you do
 *	  database accesses, your code will fail when we have aborted the
 *	  current transaction and are just parsing commands to find the next
 *	  ROLLBACK or COMMIT.  If you make use of SET variables, then you
 *	  will do the wrong thing in multi-query strings like this:
 *			SET constraint_exclusion TO off; SELECT * FROM foo;
 *	  because the entire string is parsed by gram.y before the SET gets
 *	  executed.  Anything that depends on the database or changeable state
 *	  should be handled during parse analysis so that it happens at the
 *	  right time not the wrong time.
 *
 * WARNINGS
 *	  If you use a list, make sure the datum is a node so that the printing
 *	  routines work.
 *
 *	  Sometimes we assign constants to makeStrings. Make sure we don't free
 *	  those.
 *
 *-------------------------------------------------------------------------
 */
#include "pg_functions.hpp"
#include <string.h>

#include <ctype.h>
#include <limits.h>

#include "nodes/makefuncs.hpp"
#include "nodes/nodeFuncs.hpp"
#include "parser/gramparse.hpp"
#include "parser/parser.hpp"
#include "utils/datetime.hpp"

namespace duckdb_libpgquery {
#define DEFAULT_SCHEMA "main"

/*
 * Location tracking support --- simpler than bison's default, since we only
 * want to track the start position not the end position of each nonterminal.
 */
#define YYLLOC_DEFAULT(Current, Rhs, N) \
	do { \
		if ((N) > 0) \
			(Current) = (Rhs)[1]; \
		else \
			(Current) = (-1); \
	} while (0)

/*
 * The above macro assigns -1 (unknown) as the parse location of any
 * nonterminal that was reduced from an empty rule, or whose leftmost
 * component was reduced from an empty rule.  This is problematic
 * for nonterminals defined like
 *		OptFooList: / * EMPTY * / { ... } | OptFooList Foo { ... } ;
 * because we'll set -1 as the location during the first reduction and then
 * copy it during each subsequent reduction, leaving us with -1 for the
 * location even when the list is not empty.  To fix that, do this in the
 * action for the nonempty rule(s):
 *		if (@$ < 0) @$ = @2;
 * (Although we have many nonterminals that follow this pattern, we only
 * bother with fixing @$ like this when the nonterminal's parse location
 * is actually referenced in some rule.)
 *
 * A cleaner answer would be to make YYLLOC_DEFAULT scan all the Rhs
 * locations until it's found one that's not -1.  Then we'd get a correct
 * location for any nonterminal that isn't entirely empty.  But this way
 * would add overhead to every rule reduction, and so far there's not been
 * a compelling reason to pay that overhead.
 */

/*
 * Bison doesn't allocate anything that needs to live across parser calls,
 * so we can easily have it use palloc instead of malloc.  This prevents
 * memory leaks if we error out during parsing.  Note this only works with
 * bison >= 2.0.  However, in bison 1.875 the default is to use alloca()
 * if possible, so there's not really much problem anyhow, at least if
 * you're building with gcc.
 */
#define YYMALLOC palloc
#define YYFREE   pfree
#define YYINITDEPTH 1000

/* yields an integer bitmask of these flags: */
#define CAS_NOT_DEFERRABLE			0x01
#define CAS_DEFERRABLE				0x02
#define CAS_INITIALLY_IMMEDIATE		0x04
#define CAS_INITIALLY_DEFERRED		0x08
#define CAS_NOT_VALID				0x10
#define CAS_NO_INHERIT				0x20


#define parser_yyerror(msg)  scanner_yyerror(msg, yyscanner)
#define parser_errposition(pos)  scanner_errposition(pos, yyscanner)

static void base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner,
						 const char *msg);
static PGRawStmt *makeRawStmt(PGNode *stmt, int stmt_location);
static void updateRawStmtEnd(PGRawStmt *rs, int end_location);
static PGNode *makeColumnRef(char *colname, PGList *indirection,
						   int location, core_yyscan_t yyscanner);
static PGNode *makeTypeCast(PGNode *arg, PGTypeName *tpname, int location);
static PGNode *makeStringConst(char *str, int location);
static PGNode *makeStringConstCast(char *str, int location, PGTypeName *tpname);
static PGNode *makeIntConst(int val, int location);
static PGNode *makeFloatConst(char *str, int location);
static PGNode *makeBitStringConst(char *str, int location);
static PGNode *makeNullAConst(int location);
static PGNode *makeAConst(PGValue *v, int location);
static PGNode *makeBoolAConst(bool state, int location);
static PGNode *makeParamRef(int number, int location);
static PGNode *makeParamRefCast(int number, int location, PGTypeName *tpname);
static void check_qualified_name(PGList *names, core_yyscan_t yyscanner);
static PGList *check_func_name(PGList *names, core_yyscan_t yyscanner);
static PGList *check_indirection(PGList *indirection, core_yyscan_t yyscanner);
static void insertSelectOptions(PGSelectStmt *stmt,
								PGList *sortClause, PGList *lockingClause,
								PGNode *limitOffset, PGNode *limitCount,
								PGWithClause *withClause,
								core_yyscan_t yyscanner);
static PGNode *makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg);
static PGNode *doNegate(PGNode *n, int location);
static void doNegateFloat(PGValue *v);
static PGNode *makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location);
static PGNode *makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location);
static PGNode *makeNotExpr(PGNode *expr, int location);
static PGNode *makeSQLValueFunction(PGSQLValueFunctionOp op, int32_t typmod,
								  int location);
static void SplitColQualList(PGList *qualList,
							 PGList **constraintList, PGCollateClause **collClause,
							 core_yyscan_t yyscanner);
static void processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner);
static PGNode *makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query);



/* Enabling traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* Enabling the token table.  */
#ifndef YYTOKEN_TABLE
# define YYTOKEN_TABLE 0
#endif

#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
typedef union YYSTYPE
#line 14 "third_party/libpg_query/grammar/grammar.y"
{
	core_YYSTYPE		core_yystype;
	/* these fields must match core_YYSTYPE: */
	int					ival;
	char				*str;
	const char			*keyword;
	const char          *conststr;

	char				chr;
	bool				boolean;
	PGJoinType			jtype;
	PGDropBehavior		dbehavior;
	PGOnCommitAction		oncommit;
	PGList				*list;
	PGNode				*node;
	PGValue				*value;
	PGObjectType			objtype;
	PGTypeName			*typnam;
	PGObjectWithArgs		*objwithargs;
	PGDefElem				*defelt;
	PGSortBy				*sortby;
	PGWindowDef			*windef;
	PGJoinExpr			*jexpr;
	PGIndexElem			*ielem;
	PGAlias				*alias;
	PGRangeVar			*range;
	PGIntoClause			*into;
	PGWithClause			*with;
	PGInferClause			*infer;
	PGOnConflictClause	*onconflict;
	PGAIndices			*aind;
	PGResTarget			*target;
	PGInsertStmt			*istmt;
	PGVariableSetStmt		*vsetstmt;
	PGOverridingKind       override;
	PGSortByDir            sortorder;
	PGSortByNulls          nullorder;
	PGLockClauseStrength lockstrength;
	PGLockWaitPolicy lockwaitpolicy;
	PGSubLinkType subquerytype;
	PGViewCheckOption viewcheckoption;
}
/* Line 193 of yacc.c.  */
#line 1218 "third_party/libpg_query/grammar/grammar_out.cpp"
	YYSTYPE;
# define yystype YYSTYPE /* obsolescent; will be withdrawn */
# define YYSTYPE_IS_DECLARED 1
# define YYSTYPE_IS_TRIVIAL 1
#endif

#if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
typedef struct YYLTYPE
{
  int first_line;
  int first_column;
  int last_line;
  int last_column;
} YYLTYPE;
# define yyltype YYLTYPE /* obsolescent; will be withdrawn */
# define YYLTYPE_IS_DECLARED 1
# define YYLTYPE_IS_TRIVIAL 1
#endif


/* Copy the second part of user declarations.  */


/* Line 216 of yacc.c.  */
#line 1243 "third_party/libpg_query/grammar/grammar_out.cpp"

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#elif (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
typedef signed char yytype_int8;
#else
typedef short int yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(msgid) dgettext ("bison-runtime", msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(msgid) msgid
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(e) ((void) (e))
#else
# define YYUSE(e) /* empty */
#endif

/* Identity function, used to suppress warnings about constant conditions.  */
#ifndef lint
# define YYID(n) (n)
#else
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static int
YYID (int i)
#else
static int
YYID (i)
    int i;
#endif
{
  return i;
}
#endif

#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#     ifndef _STDLIB_H
#      define _STDLIB_H 1
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's `empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (YYID (0))
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined _STDLIB_H \
       && ! ((defined YYMALLOC || defined malloc) \
	     && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef _STDLIB_H
#    define _STDLIB_H 1
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
	 || (defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL \
	     && defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss;
  YYSTYPE yyvs;
    YYLTYPE yyls;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
      + 2 * YYSTACK_GAP_MAXIMUM)

/* Copy COUNT objects from FROM to TO.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(To, From, Count) \
      __builtin_memcpy (To, From, (Count) * sizeof (*(From)))
#  else
#   define YYCOPY(To, From, Count)		\
      do					\
	{					\
	  YYSIZE_T yyi;				\
	  for (yyi = 0; yyi < (Count); yyi++)	\
	    (To)[yyi] = (From)[yyi];		\
	}					\
      while (YYID (0))
#  endif
# endif

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack)					\
    do									\
      {									\
	YYSIZE_T yynewbytes;						\
	YYCOPY (&yyptr->Stack, Stack, yysize);				\
	Stack = &yyptr->Stack;						\
	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
	yyptr += yynewbytes / sizeof (*yyptr);				\
      }									\
    while (YYID (0))

#endif

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  542
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   45042

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  474
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  341
/* YYNRULES -- Number of rules.  */
#define YYNRULES  1554
/* YYNRULES -- Number of states.  */
#define YYNSTATES  2594

/* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   710

#define YYTRANSLATE(YYX)						\
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[YYLEX] -- Bison symbol number corresponding to YYLEX.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,   462,     2,     2,
     467,   468,   460,   458,   471,   459,   469,   461,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   473,   470,
     454,   456,   455,   472,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,   465,     2,   466,   463,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   457,
     464
};

#if YYDEBUG
/* YYPRHS[YYN] -- Index of the first RHS symbol of rule number YYN in
   YYRHS.  */
static const yytype_uint16 yyprhs[] =
{
       0,     0,     3,     5,     9,    11,    13,    15,    17,    19,
      21,    23,    25,    27,    29,    31,    33,    35,    37,    39,
      41,    43,    45,    47,    49,    51,    53,    55,    57,    59,
      61,    63,    65,    67,    69,    71,    72,    77,    84,    89,
      96,   101,   108,   113,   120,   122,   125,   129,   132,   134,
     138,   141,   145,   147,   151,   154,   160,   164,   171,   176,
     183,   190,   197,   203,   209,   216,   226,   231,   237,   245,
     252,   257,   266,   271,   274,   279,   283,   290,   295,   298,
     301,   304,   307,   309,   312,   313,   315,   318,   321,   324,
     326,   330,   335,   338,   339,   342,   346,   349,   353,   360,
     367,   376,   383,   392,   399,   408,   415,   424,   433,   444,
     453,   464,   466,   467,   475,   477,   482,   487,   495,   498,
     500,   504,   509,   513,   514,   516,   517,   520,   524,   530,
     539,   545,   546,   552,   558,   566,   569,   570,   572,   574,
     576,   580,   583,   584,   586,   587,   589,   593,   595,   599,
     601,   605,   608,   611,   616,   622,   628,   637,   639,   640,
     644,   654,   667,   671,   672,   677,   684,   686,   689,   691,
     693,   694,   696,   699,   702,   704,   707,   710,   712,   715,
     719,   722,   725,   728,   731,   735,   739,   743,   745,   749,
     751,   752,   754,   757,   760,   763,   766,   769,   772,   775,
     778,   780,   782,   783,   793,   806,   807,   810,   812,   814,
     816,   818,   820,   822,   826,   827,   829,   832,   834,   836,
     839,   842,   846,   848,   850,   853,   856,   858,   861,   865,
     871,   874,   880,   886,   889,   893,   895,   897,   900,   903,
     904,   909,   910,   914,   919,   924,   925,   929,   932,   933,
     937,   939,   941,   943,   945,   947,   949,   951,   953,   955,
     957,   961,   965,   967,   970,   973,   976,   979,   982,   985,
     986,   990,   994,   998,   999,  1001,  1004,  1006,  1009,  1012,
    1015,  1018,  1023,  1025,  1029,  1031,  1035,  1037,  1039,  1041,
    1043,  1047,  1049,  1052,  1053,  1055,  1056,  1058,  1062,  1063,
    1066,  1067,  1071,  1075,  1077,  1083,  1087,  1089,  1093,  1095,
    1100,  1106,  1112,  1119,  1123,  1131,  1136,  1148,  1150,  1154,
    1157,  1160,  1163,  1164,  1168,  1170,  1172,  1175,  1178,  1181,
    1184,  1186,  1187,  1189,  1192,  1199,  1204,  1211,  1216,  1223,
    1232,  1234,  1236,  1238,  1241,  1243,  1246,  1248,  1250,  1252,
    1256,  1260,  1264,  1268,  1271,  1274,  1276,  1280,  1282,  1284,
    1286,  1288,  1292,  1294,  1296,  1297,  1299,  1301,  1303,  1312,
    1324,  1334,  1336,  1338,  1342,  1343,  1345,  1349,  1351,  1352,
    1354,  1355,  1357,  1358,  1360,  1364,  1366,  1368,  1370,  1374,
    1375,  1378,  1381,  1382,  1385,  1386,  1388,  1389,  1391,  1393,
    1395,  1399,  1403,  1405,  1407,  1411,  1415,  1419,  1423,  1428,
    1432,  1435,  1437,  1439,  1441,  1443,  1445,  1449,  1451,  1453,
    1457,  1461,  1463,  1466,  1471,  1476,  1479,  1483,  1489,  1495,
    1497,  1499,  1509,  1519,  1521,  1524,  1529,  1534,  1539,  1542,
    1545,  1549,  1551,  1555,  1562,  1565,  1566,  1570,  1574,  1579,
    1584,  1589,  1594,  1598,  1601,  1603,  1605,  1606,  1608,  1610,
    1611,  1613,  1619,  1621,  1622,  1624,  1625,  1629,  1631,  1635,
    1640,  1644,  1646,  1648,  1649,  1652,  1655,  1656,  1659,  1662,
    1664,  1666,  1668,  1669,  1672,  1677,  1683,  1688,  1691,  1695,
    1697,  1699,  1701,  1703,  1706,  1709,  1711,  1713,  1715,  1717,
    1719,  1721,  1725,  1726,  1728,  1732,  1734,  1736,  1739,  1742,
    1743,  1745,  1749,  1751,  1752,  1754,  1757,  1761,  1764,  1769,
    1772,  1776,  1779,  1780,  1782,  1785,  1786,  1791,  1797,  1800,
    1801,  1803,  1807,  1810,  1814,  1817,  1821,  1824,  1828,  1830,
    1835,  1839,  1844,  1850,  1855,  1861,  1866,  1872,  1875,  1880,
    1882,  1884,  1885,  1887,  1892,  1898,  1903,  1904,  1907,  1910,
    1913,  1915,  1917,  1918,  1923,  1926,  1928,  1931,  1934,  1939,
    1946,  1951,  1952,  1955,  1962,  1965,  1967,  1971,  1976,  1977,
    1980,  1981,  1984,  1985,  1987,  1991,  1995,  1998,  1999,  2002,
    2006,  2012,  2019,  2022,  2026,  2030,  2035,  2036,  2038,  2040,
    2042,  2044,  2046,  2049,  2054,  2056,  2058,  2060,  2062,  2065,
    2069,  2073,  2074,  2076,  2078,  2080,  2082,  2084,  2087,  2090,
    2093,  2096,  2099,  2101,  2105,  2106,  2108,  2110,  2112,  2114,
    2120,  2123,  2125,  2127,  2129,  2131,  2136,  2138,  2141,  2144,
    2146,  2150,  2154,  2157,  2159,  2160,  2166,  2169,  2175,  2178,
    2180,  2184,  2188,  2189,  2191,  2193,  2195,  2197,  2199,  2201,
    2205,  2209,  2213,  2217,  2221,  2225,  2229,  2230,  2232,  2237,
    2239,  2243,  2247,  2253,  2256,  2259,  2263,  2267,  2271,  2275,
    2279,  2283,  2287,  2291,  2295,  2299,  2303,  2307,  2311,  2314,
    2317,  2321,  2325,  2328,  2331,  2335,  2341,  2346,  2353,  2357,
    2363,  2368,  2375,  2380,  2387,  2393,  2401,  2405,  2408,  2413,
    2417,  2420,  2424,  2428,  2433,  2437,  2442,  2446,  2451,  2457,
    2464,  2471,  2479,  2486,  2494,  2501,  2509,  2513,  2518,  2523,
    2530,  2532,  2534,  2538,  2541,  2544,  2548,  2552,  2556,  2560,
    2564,  2568,  2572,  2576,  2580,  2584,  2588,  2592,  2596,  2599,
    2602,  2608,  2615,  2622,  2630,  2632,  2634,  2637,  2640,  2645,
    2647,  2649,  2651,  2654,  2657,  2661,  2667,  2674,  2683,  2690,
    2697,  2702,  2707,  2709,  2711,  2713,  2719,  2721,  2723,  2728,
    2730,  2735,  2737,  2742,  2744,  2749,  2751,  2753,  2755,  2757,
    2759,  2761,  2768,  2773,  2778,  2783,  2788,  2795,  2801,  2807,
    2813,  2818,  2825,  2830,  2836,  2837,  2843,  2844,  2847,  2848,
    2850,  2854,  2858,  2861,  2864,  2865,  2872,  2874,  2875,  2879,
    2880,  2883,  2886,  2887,  2889,  2894,  2897,  2900,  2903,  2906,
    2909,  2914,  2918,  2924,  2926,  2928,  2930,  2932,  2934,  2936,
    2938,  2940,  2942,  2944,  2946,  2948,  2950,  2952,  2954,  2956,
    2958,  2960,  2965,  2967,  2972,  2974,  2979,  2981,  2984,  2986,
    2989,  2991,  2995,  2997,  3001,  3003,  3007,  3009,  3013,  3017,
    3019,  3023,  3027,  3028,  3030,  3032,  3034,  3036,  3038,  3040,
    3042,  3044,  3049,  3053,  3056,  3060,  3061,  3065,  3069,  3072,
    3075,  3077,  3078,  3081,  3084,  3088,  3091,  3093,  3095,  3099,
    3105,  3107,  3110,  3115,  3118,  3119,  3121,  3122,  3124,  3127,
    3130,  3133,  3137,  3143,  3145,  3146,  3148,  3151,  3152,  3155,
    3157,  3158,  3160,  3161,  3163,  3167,  3171,  3174,  3176,  3178,
    3180,  3184,  3186,  3189,  3191,  3195,  3197,  3199,  3201,  3204,
    3206,  3208,  3210,  3212,  3214,  3217,  3224,  3227,  3231,  3237,
    3244,  3246,  3248,  3250,  3252,  3254,  3256,  3258,  3260,  3262,
    3264,  3266,  3268,  3270,  3272,  3275,  3278,  3282,  3286,  3287,
    3289,  3291,  3293,  3295,  3297,  3299,  3301,  3303,  3309,  3313,
    3314,  3316,  3318,  3320,  3322,  3327,  3335,  3338,  3339,  3341,
    3343,  3345,  3347,  3361,  3378,  3380,  3383,  3384,  3386,  3387,
    3389,  3390,  3393,  3394,  3396,  3397,  3404,  3413,  3420,  3429,
    3436,  3445,  3447,  3450,  3455,  3459,  3465,  3467,  3468,  3470,
    3472,  3473,  3475,  3477,  3479,  3481,  3483,  3485,  3487,  3489,
    3491,  3493,  3495,  3497,  3501,  3503,  3505,  3507,  3509,  3511,
    3513,  3516,  3518,  3520,  3523,  3527,  3531,  3533,  3537,  3541,
    3544,  3548,  3552,  3556,  3560,  3562,  3564,  3566,  3568,  3572,
    3578,  3580,  3582,  3584,  3586,  3590,  3593,  3595,  3600,  3606,
    3612,  3617,  3624,  3626,  3628,  3630,  3632,  3634,  3636,  3637,
    3639,  3643,  3645,  3646,  3654,  3656,  3659,  3663,  3666,  3667,
    3670,  3671,  3674,  3679,  3682,  3684,  3686,  3688,  3691,  3695,
    3698,  3702,  3707,  3710,  3712,  3714,  3716,  3720,  3723,  3733,
    3745,  3758,  3773,  3777,  3782,  3787,  3788,  3796,  3807,  3810,
    3814,  3815,  3820,  3822,  3824,  3826,  3828,  3830,  3832,  3834,
    3836,  3838,  3840,  3842,  3844,  3846,  3848,  3850,  3852,  3854,
    3856,  3858,  3860,  3862,  3864,  3866,  3868,  3870,  3872,  3874,
    3876,  3878,  3880,  3882,  3884,  3886,  3888,  3890,  3892,  3894,
    3896,  3898,  3900,  3902,  3904,  3906,  3908,  3910,  3912,  3914,
    3916,  3918,  3920,  3922,  3924,  3926,  3928,  3930,  3932,  3934,
    3936,  3938,  3940,  3942,  3944,  3946,  3948,  3950,  3952,  3954,
    3956,  3958,  3960,  3962,  3964,  3966,  3968,  3970,  3972,  3974,
    3976,  3978,  3980,  3982,  3984,  3986,  3988,  3990,  3992,  3994,
    3996,  3998,  4000,  4002,  4004,  4006,  4008,  4010,  4012,  4014,
    4016,  4018,  4020,  4022,  4024,  4026,  4028,  4030,  4032,  4034,
    4036,  4038,  4040,  4042,  4044,  4046,  4048,  4050,  4052,  4054,
    4056,  4058,  4060,  4062,  4064,  4066,  4068,  4070,  4072,  4074,
    4076,  4078,  4080,  4082,  4084,  4086,  4088,  4090,  4092,  4094,
    4096,  4098,  4100,  4102,  4104,  4106,  4108,  4110,  4112,  4114,
    4116,  4118,  4120,  4122,  4124,  4126,  4128,  4130,  4132,  4134,
    4136,  4138,  4140,  4142,  4144,  4146,  4148,  4150,  4152,  4154,
    4156,  4158,  4160,  4162,  4164,  4166,  4168,  4170,  4172,  4174,
    4176,  4178,  4180,  4182,  4184,  4186,  4188,  4190,  4192,  4194,
    4196,  4198,  4200,  4202,  4204,  4206,  4208,  4210,  4212,  4214,
    4216,  4218,  4220,  4222,  4224,  4226,  4228,  4230,  4232,  4234,
    4236,  4238,  4240,  4242,  4244,  4246,  4248,  4250,  4252,  4254,
    4256,  4258,  4260,  4262,  4264,  4266,  4268,  4270,  4272,  4274,
    4276,  4278,  4280,  4282,  4284,  4286,  4288,  4290,  4292,  4294,
    4296,  4298,  4300,  4302,  4304,  4306,  4308,  4310,  4312,  4314,
    4316,  4318,  4320,  4322,  4324,  4326,  4328,  4330,  4332,  4334,
    4336,  4338,  4340,  4342,  4344,  4346,  4348,  4350,  4352,  4354,
    4356,  4358,  4360,  4362,  4364,  4366,  4368,  4370,  4372,  4374,
    4376,  4378,  4380,  4382,  4384,  4386,  4388,  4390,  4392,  4394,
    4396,  4398,  4400,  4402,  4404,  4406,  4408,  4410,  4412,  4414,
    4416,  4418,  4420,  4422,  4424,  4426,  4428,  4430,  4432,  4434,
    4436,  4438,  4440,  4442,  4444,  4446,  4448,  4450,  4452,  4454,
    4456,  4458,  4460,  4462,  4464,  4466,  4468,  4470,  4472,  4474,
    4476,  4478,  4480,  4482,  4484,  4486,  4488,  4490,  4492,  4494,
    4496,  4498,  4500,  4502,  4504,  4506,  4508,  4510,  4512,  4514,
    4516,  4518,  4520,  4522,  4524,  4526,  4528,  4530,  4532,  4534,
    4536,  4538,  4540,  4542,  4544,  4546,  4548,  4550,  4552,  4554,
    4556,  4558,  4560,  4562,  4564,  4566,  4568,  4570,  4572,  4574,
    4576,  4578,  4580,  4582,  4584,  4586,  4588,  4590,  4592,  4594,
    4596,  4598,  4600,  4602,  4604,  4606,  4608,  4610,  4612,  4614,
    4616,  4618,  4620,  4622,  4624,  4626,  4628,  4630,  4632,  4634,
    4636,  4638,  4640,  4642,  4644,  4646,  4648,  4650,  4652,  4654,
    4656,  4658,  4660,  4662,  4664,  4666,  4668,  4670,  4672,  4674,
    4676,  4678,  4680,  4682,  4684
};

/* YYRHS -- A `-1'-separated list of the rules' RHS.  */
static const yytype_int16 yyrhs[] =
{
     475,     0,    -1,   476,    -1,   476,   470,   477,    -1,   477,
      -1,   768,    -1,   515,    -1,   478,    -1,   798,    -1,   805,
      -1,   769,    -1,   577,    -1,   808,    -1,   758,    -1,   511,
      -1,   524,    -1,   489,    -1,   794,    -1,   570,    -1,   513,
      -1,   770,    -1,   761,    -1,   492,    -1,   787,    -1,   510,
      -1,   755,    -1,   490,    -1,   594,    -1,   522,    -1,   576,
      -1,   789,    -1,   799,    -1,   781,    -1,   802,    -1,   806,
      -1,    -1,    28,   377,   647,   486,    -1,    28,   377,   180,
     147,   647,   486,    -1,    28,   189,   738,   486,    -1,    28,
     189,   180,   147,   738,   486,    -1,    28,   344,   738,   486,
      -1,    28,   344,   180,   147,   738,   486,    -1,    28,   423,
     738,   486,    -1,    28,   423,   180,   147,   738,   486,    -1,
     481,    -1,   479,   481,    -1,   350,   112,   682,    -1,   132,
     112,    -1,   324,    -1,   324,   517,   518,    -1,   350,   519,
      -1,   350,   168,   569,    -1,   485,    -1,   482,   471,   485,
      -1,    22,   549,    -1,    22,   180,   251,   147,   549,    -1,
      22,    74,   549,    -1,    22,    74,   180,   251,   147,   549,
      -1,    28,   491,   746,   480,    -1,    28,   491,   746,   132,
     251,   256,    -1,    28,   491,   746,   350,   251,   256,    -1,
      28,   491,   746,   350,   366,   521,    -1,    28,   491,   746,
     350,   537,    -1,    28,   491,   746,   323,   537,    -1,    28,
     491,   746,   350,   369,   746,    -1,    28,   491,   746,    22,
     168,   569,    35,   179,   527,    -1,    28,   491,   746,   479,
      -1,    28,   491,   746,   132,   179,    -1,    28,   491,   746,
     132,   179,   180,   147,    -1,   132,   491,   180,   147,   746,
     574,    -1,   132,   491,   746,   574,    -1,    28,   491,   746,
     488,   398,   659,   658,   484,    -1,    28,   491,   746,   487,
      -1,    22,   539,    -1,    28,    84,   740,   525,    -1,   414,
      84,   740,    -1,   132,    84,   180,   147,   740,   574,    -1,
     132,    84,   740,   574,    -1,   350,   231,    -1,   350,   407,
      -1,   350,   537,    -1,   323,   537,    -1,   487,    -1,   411,
     682,    -1,    -1,   532,    -1,   350,   532,    -1,    22,   532,
      -1,   132,   547,    -1,   483,    -1,   486,   471,   483,    -1,
     270,   467,   482,   468,    -1,   350,   105,    -1,    -1,   108,
     740,    -1,   108,   295,   740,    -1,   108,    26,    -1,   108,
     295,    26,    -1,    28,   337,   740,   319,   388,   740,    -1,
      28,   377,   647,   319,   388,   740,    -1,    28,   377,   180,
     147,   647,   319,   388,   740,    -1,    28,   344,   738,   319,
     388,   740,    -1,    28,   344,   180,   147,   738,   319,   388,
     740,    -1,    28,   423,   738,   319,   388,   740,    -1,    28,
     423,   180,   147,   738,   319,   388,   740,    -1,    28,   189,
     738,   319,   388,   740,    -1,    28,   189,   180,   147,   738,
     319,   388,   740,    -1,    28,   377,   647,   319,   491,   740,
     388,   740,    -1,    28,   377,   180,   147,   647,   319,   491,
     740,   388,   740,    -1,    28,   377,   647,   319,    84,   740,
     388,   740,    -1,    28,   377,   180,   147,   647,   319,    84,
     740,   388,   740,    -1,    74,    -1,    -1,   496,   199,   205,
     494,   493,   499,   501,    -1,   594,    -1,   279,   502,   416,
     594,    -1,   467,   506,   468,   594,    -1,   467,   506,   468,
     279,   502,   416,   594,    -1,   112,   417,    -1,   738,    -1,
     738,    35,   746,    -1,   467,   508,   468,   655,    -1,   266,
      84,   740,    -1,    -1,   599,    -1,    -1,   746,   732,    -1,
     509,   456,   682,    -1,   467,   503,   468,   456,   682,    -1,
     266,    82,   495,   128,   409,   350,   507,   655,    -1,   266,
      82,   495,   128,   252,    -1,    -1,   746,   504,   505,   612,
     613,    -1,   687,   504,   505,   612,   613,    -1,   467,   682,
     468,   504,   505,   612,   613,    -1,   326,   735,    -1,    -1,
     410,    -1,   376,    -1,   509,    -1,   503,   471,   509,    -1,
      72,   749,    -1,    -1,   749,    -1,    -1,   497,    -1,   506,
     471,   497,    -1,   498,    -1,   507,   471,   498,    -1,   500,
      -1,   508,   471,   500,    -1,   746,   732,    -1,   292,   746,
      -1,   292,   746,   456,   786,    -1,   292,   746,   467,   710,
     468,    -1,    91,   568,   344,   738,   512,    -1,    91,   568,
     344,   180,   251,   147,   738,   512,    -1,   516,    -1,    -1,
     146,   740,   514,    -1,    91,   568,   377,   810,    35,   146,
     740,   514,   809,    -1,    91,   568,   377,   180,   251,   147,
     810,    35,   146,   740,   514,   809,    -1,   467,   709,   468,
      -1,    -1,    28,   344,   738,   516,    -1,    28,   344,   180,
     147,   738,   516,    -1,   519,    -1,   516,   519,    -1,   430,
      -1,   453,    -1,    -1,     4,    -1,   458,     4,    -1,   459,
       4,    -1,   521,    -1,    35,   661,    -1,    54,   518,    -1,
     104,    -1,   249,   104,    -1,   188,   520,   518,    -1,   235,
     518,    -1,   238,   518,    -1,   249,   235,    -1,   249,   238,
      -1,   280,    53,   749,    -1,   344,   242,   749,    -1,   364,
     517,   518,    -1,   324,    -1,   324,   517,   518,    -1,    53,
      -1,    -1,   744,    -1,   458,   744,    -1,   459,   744,    -1,
      18,   523,    -1,    46,   523,    -1,   364,   523,    -1,    78,
     523,    -1,   138,   523,    -1,   331,   523,    -1,   433,    -1,
     390,    -1,    -1,    91,   568,   377,   738,   467,   556,   468,
     544,   536,    -1,    91,   568,   377,   180,   251,   147,   738,
     467,   556,   468,   544,   536,    -1,    -1,   525,   548,    -1,
     563,    -1,   814,    -1,   706,    -1,   518,    -1,   745,    -1,
     250,    -1,   467,   516,   468,    -1,    -1,   745,    -1,   249,
      21,    -1,   325,    -1,    57,    -1,   350,   256,    -1,   350,
     112,    -1,    84,   740,   531,    -1,   531,    -1,   543,    -1,
      72,   749,    -1,   251,   256,    -1,   256,    -1,   404,   555,
      -1,   298,   211,   555,    -1,    66,   467,   682,   468,   538,
      -1,   112,   683,    -1,   168,   569,    35,   179,   527,    -1,
     313,   738,   558,   566,   534,    -1,   547,   528,    -1,   266,
     409,   529,    -1,   533,    -1,   560,    -1,   533,   560,    -1,
     560,   533,    -1,    -1,   270,   467,   550,   468,    -1,    -1,
     266,    78,   132,    -1,   266,    78,   117,   334,    -1,   266,
      78,   297,   334,    -1,    -1,   467,   541,   468,    -1,   249,
     191,    -1,    -1,    84,   740,   564,    -1,   564,    -1,    77,
      -1,    85,    -1,   113,    -1,   179,    -1,   190,    -1,   366,
      -1,   369,    -1,    26,    -1,   561,    -1,   541,   471,   561,
      -1,   411,   189,   552,    -1,   114,    -1,   251,   114,    -1,
     193,   115,    -1,   193,   182,    -1,   430,   537,    -1,   430,
     264,    -1,   432,   264,    -1,    -1,   467,   551,   468,    -1,
     546,   187,   540,    -1,   546,   144,   540,    -1,    -1,   753,
      -1,   251,   114,    -1,   114,    -1,   193,   182,    -1,   193,
     115,    -1,   251,   413,    -1,   249,   191,    -1,   746,   659,
     535,   559,    -1,   532,    -1,   550,   471,   532,    -1,   554,
      -1,   551,   471,   554,    -1,   746,    -1,   549,    -1,   567,
      -1,   539,    -1,   753,   456,   526,    -1,   753,    -1,   430,
     545,    -1,    -1,   565,    -1,    -1,   746,    -1,   467,   562,
     468,    -1,    -1,   559,   530,    -1,    -1,   266,   117,   529,
      -1,   753,   456,   526,    -1,   753,    -1,   753,   469,   753,
     456,   526,    -1,   753,   469,   753,    -1,   557,    -1,   562,
     471,   557,    -1,   659,    -1,   748,   750,   462,   398,    -1,
     351,   748,   750,   462,   398,    -1,    66,   467,   682,   468,
     525,    -1,   404,   467,   562,   468,   555,   525,    -1,   404,
     542,   525,    -1,   298,   211,   467,   562,   468,   555,   525,
      -1,   298,   211,   542,   525,    -1,   161,   211,   467,   562,
     468,   313,   738,   558,   566,   534,   525,    -1,   553,    -1,
     565,   471,   553,    -1,   233,   165,    -1,   233,   284,    -1,
     233,   356,    -1,    -1,   221,   738,   546,    -1,   383,    -1,
     381,    -1,   225,   383,    -1,   225,   381,    -1,   169,   383,
      -1,   169,   381,    -1,   407,    -1,    -1,    29,    -1,    53,
     112,    -1,   132,   571,   180,   147,   573,   574,    -1,   132,
     571,   573,   574,    -1,   132,   572,   180,   147,   739,   574,
      -1,   132,   572,   739,   574,    -1,   132,   575,   740,   266,
     749,   574,    -1,   132,   575,   180,   147,   740,   266,   749,
     574,    -1,   377,    -1,   344,    -1,   423,    -1,   234,   423,
      -1,   189,    -1,   161,   377,    -1,    73,    -1,    88,    -1,
     366,    -1,   384,   340,   283,    -1,   384,   340,   124,    -1,
     384,   340,   382,    -1,   384,   340,    81,    -1,    20,   236,
      -1,   141,   393,    -1,   149,    -1,   161,   105,   434,    -1,
     304,    -1,   337,    -1,   347,    -1,   749,    -1,   573,   471,
     749,    -1,    57,    -1,   325,    -1,    -1,   290,    -1,   335,
      -1,   393,    -1,   496,   409,   795,   350,   507,   637,   796,
     501,    -1,    89,   589,   738,   558,   587,   578,   583,   592,
     579,   517,   584,    -1,    89,   467,   757,   468,   388,   583,
     592,   517,   584,    -1,   164,    -1,   388,    -1,   581,   119,
     745,    -1,    -1,   591,    -1,   580,   471,   591,    -1,   411,
      -1,    -1,    35,    -1,    -1,   303,    -1,    -1,   588,    -1,
     467,   593,   468,    -1,   778,    -1,   518,    -1,   460,    -1,
     467,   580,   468,    -1,    -1,   753,   585,    -1,   430,   264,
      -1,    -1,   588,   590,    -1,    -1,    49,    -1,    -1,    49,
      -1,   264,    -1,   163,    -1,   118,   582,   745,    -1,   256,
     582,   745,    -1,    93,    -1,   176,    -1,   305,   582,   745,
      -1,   140,   582,   745,    -1,   160,   305,   562,    -1,   160,
     305,   460,    -1,   160,   251,   256,   562,    -1,   160,   256,
     562,    -1,   136,   745,    -1,   778,    -1,   745,    -1,   367,
      -1,   368,    -1,   586,    -1,   593,   471,   586,    -1,   596,
      -1,   595,    -1,   467,   596,   468,    -1,   467,   595,   468,
      -1,   598,    -1,   597,   609,    -1,   597,   608,   629,   615,
      -1,   597,   608,   614,   630,    -1,   599,   597,    -1,   599,
     597,   609,    -1,   599,   597,   608,   629,   615,    -1,   599,
     597,   608,   614,   630,    -1,   598,    -1,   595,    -1,   343,
     607,   734,   602,   637,   655,   624,   628,   691,    -1,   343,
     606,   735,   602,   637,   655,   624,   628,   691,    -1,   636,
      -1,   377,   647,    -1,   597,   403,   605,   597,    -1,   597,
     203,   605,   597,    -1,   597,   142,   605,   597,    -1,   430,
     600,    -1,   453,   600,    -1,   430,   311,   600,    -1,   601,
      -1,   600,   471,   601,    -1,   740,   751,    35,   467,   757,
     468,    -1,   205,   603,    -1,    -1,   383,   604,   738,    -1,
     381,   604,   738,    -1,   225,   383,   604,   738,    -1,   225,
     381,   604,   738,    -1,   169,   383,   604,   738,    -1,   169,
     381,   604,   738,    -1,   407,   604,   738,    -1,   377,   738,
      -1,   738,    -1,   377,    -1,    -1,    26,    -1,   127,    -1,
      -1,   127,    -1,   127,   266,   467,   709,   468,    -1,    26,
      -1,    -1,   609,    -1,    -1,   272,    53,   610,    -1,   611,
      -1,   610,   471,   611,    -1,   682,   411,   706,   613,    -1,
     682,   612,   613,    -1,    36,    -1,   121,    -1,    -1,   452,
     156,    -1,   452,   215,    -1,    -1,   616,   617,    -1,   617,
     616,    -1,   616,    -1,   617,    -1,   614,    -1,    -1,   222,
     618,    -1,   222,   618,   471,   619,    -1,   154,   623,   620,
     622,   267,    -1,   154,   623,   622,   267,    -1,   263,   619,
      -1,   263,   620,   622,    -1,   682,    -1,    26,    -1,   682,
      -1,   684,    -1,   458,   621,    -1,   459,   621,    -1,   744,
      -1,     4,    -1,   333,    -1,   334,    -1,   156,    -1,   248,
      -1,   172,    53,   625,    -1,    -1,   626,    -1,   625,   471,
     626,    -1,   682,    -1,   627,    -1,   467,   468,    -1,   175,
     682,    -1,    -1,   631,    -1,   159,   307,   267,    -1,   629,
      -1,    -1,   632,    -1,   631,   632,    -1,   633,   634,   635,
      -1,   159,   409,    -1,   159,   249,   211,   409,    -1,   159,
     353,    -1,   159,   211,   353,    -1,   261,   737,    -1,    -1,
     255,    -1,   357,   230,    -1,    -1,   417,   467,   709,   468,
      -1,   636,   471,   467,   709,   468,    -1,   164,   638,    -1,
      -1,   639,    -1,   638,   471,   639,    -1,   647,   642,    -1,
     647,   642,   648,    -1,   650,   643,    -1,   216,   650,   643,
      -1,   595,   642,    -1,   216,   595,   642,    -1,   640,    -1,
     467,   640,   468,   641,    -1,   467,   640,   468,    -1,   639,
      92,   210,   639,    -1,   639,   644,   210,   639,   646,    -1,
     639,   210,   639,   646,    -1,   639,   245,   644,   210,   639,
      -1,   639,   245,   210,   639,    -1,    35,   746,   467,   739,
     468,    -1,    35,   747,    -1,   746,   467,   739,   468,    -1,
     746,    -1,   641,    -1,    -1,   641,    -1,    35,   467,   656,
     468,    -1,    35,   746,   467,   656,   468,    -1,   746,   467,
     656,   468,    -1,    -1,   165,   645,    -1,   219,   645,    -1,
     329,   645,    -1,   195,    -1,   275,    -1,    -1,   411,   467,
     739,   468,    -1,   266,   682,    -1,   738,    -1,   738,   460,
      -1,   267,   738,    -1,   267,   467,   738,   468,    -1,   379,
     742,   467,   709,   468,   649,    -1,   320,   467,   682,   468,
      -1,    -1,   687,   654,    -1,   334,   164,   467,   652,   468,
     654,    -1,   687,   653,    -1,   651,    -1,   652,   471,   651,
      -1,    35,   467,   656,   468,    -1,    -1,   453,   273,    -1,
      -1,   427,   682,    -1,    -1,   657,    -1,   656,   471,   657,
      -1,   746,   659,   658,    -1,    72,   749,    -1,    -1,   661,
     660,    -1,   351,   661,   660,    -1,   661,    34,   465,   744,
     466,    -1,   351,   661,    34,   465,   744,   466,    -1,   661,
      34,    -1,   351,   661,    34,    -1,   660,   465,   466,    -1,
     660,   465,   744,   466,    -1,    -1,   663,    -1,   665,    -1,
     667,    -1,   671,    -1,   677,    -1,   678,   680,    -1,   678,
     467,   744,   468,    -1,   665,    -1,   668,    -1,   672,    -1,
     677,    -1,   748,   664,    -1,   748,   750,   664,    -1,   467,
     709,   468,    -1,    -1,   201,    -1,   202,    -1,   358,    -1,
      48,    -1,   308,    -1,   157,   666,    -1,   131,   294,    -1,
     110,   664,    -1,   109,   664,    -1,   259,   664,    -1,    51,
      -1,   467,   744,   468,    -1,    -1,   669,    -1,   670,    -1,
     669,    -1,   670,    -1,    50,   676,   467,   709,   468,    -1,
      50,   676,    -1,   673,    -1,   674,    -1,   673,    -1,   674,
      -1,   675,   467,   744,   468,    -1,   675,    -1,    64,   676,
      -1,    63,   676,    -1,   418,    -1,   244,    64,   676,    -1,
     244,    63,   676,    -1,   246,   676,    -1,   420,    -1,    -1,
     387,   467,   744,   468,   679,    -1,   387,   679,    -1,   386,
     467,   744,   468,   679,    -1,   386,   679,    -1,   204,    -1,
     453,   386,   450,    -1,   432,   386,   450,    -1,    -1,   448,
      -1,   240,    -1,   107,    -1,   178,    -1,   237,    -1,   681,
      -1,   448,   388,   240,    -1,   107,   388,   178,    -1,   107,
     388,   237,    -1,   107,   388,   681,    -1,   178,   388,   237,
      -1,   178,   388,   681,    -1,   237,   388,   681,    -1,    -1,
     341,    -1,   341,   467,   744,   468,    -1,   684,    -1,   682,
      11,   659,    -1,   682,    72,   749,    -1,   682,    40,   386,
     450,   682,    -1,   458,   682,    -1,   459,   682,    -1,   682,
     458,   682,    -1,   682,   459,   682,    -1,   682,   460,   682,
      -1,   682,   461,   682,    -1,   682,   462,   682,    -1,   682,
     463,   682,    -1,   682,   454,   682,    -1,   682,   455,   682,
      -1,   682,   456,   682,    -1,   682,    15,   682,    -1,   682,
      16,   682,    -1,   682,    17,   682,    -1,   682,   705,   682,
      -1,   705,   682,    -1,   682,   705,    -1,   682,    32,   682,
      -1,   682,   271,   682,    -1,   251,   682,    -1,   451,   682,
      -1,   682,   221,   682,    -1,   682,   221,   682,   140,   682,
      -1,   682,   451,   221,   682,    -1,   682,   451,   221,   682,
     140,   682,    -1,   682,   181,   682,    -1,   682,   181,   682,
     140,   682,    -1,   682,   451,   181,   682,    -1,   682,   451,
     181,   682,   140,   682,    -1,   682,   355,   388,   682,    -1,
     682,   355,   388,   682,   140,   682,    -1,   682,   451,   355,
     388,   682,    -1,   682,   451,   355,   388,   682,   140,   682,
      -1,   682,   207,   256,    -1,   682,   208,    -1,   682,   207,
     251,   256,    -1,   682,   251,   256,    -1,   682,   254,    -1,
     701,   277,   701,    -1,   682,   207,   395,    -1,   682,   207,
     251,   395,    -1,   682,   207,   152,    -1,   682,   207,   251,
     152,    -1,   682,   207,   405,    -1,   682,   207,   251,   405,
      -1,   682,   207,   127,   164,   682,    -1,   682,   207,   251,
     127,   164,   682,    -1,   682,   207,   261,   467,   712,   468,
      -1,   682,   207,   251,   261,   467,   712,   468,    -1,   682,
      47,   733,   683,    32,   682,    -1,   682,   451,    47,   733,
     683,    32,   682,    -1,   682,    47,   374,   683,    32,   682,
      -1,   682,   451,    47,   374,   683,    32,   682,    -1,   682,
     186,   722,    -1,   682,   451,   186,   722,    -1,   682,   707,
     702,   595,    -1,   682,   707,   702,   467,   682,   468,    -1,
     112,    -1,   684,    -1,   683,    11,   659,    -1,   458,   683,
      -1,   459,   683,    -1,   683,   458,   683,    -1,   683,   459,
     683,    -1,   683,   460,   683,    -1,   683,   461,   683,    -1,
     683,   462,   683,    -1,   683,   463,   683,    -1,   683,   454,
     683,    -1,   683,   455,   683,    -1,   683,   456,   683,    -1,
     683,    15,   683,    -1,   683,    16,   683,    -1,   683,    17,
     683,    -1,   683,   705,   683,    -1,   705,   683,    -1,   683,
     705,    -1,   683,   207,   127,   164,   683,    -1,   683,   207,
     251,   127,   164,   683,    -1,   683,   207,   261,   467,   712,
     468,    -1,   683,   207,   251,   261,   467,   712,   468,    -1,
     728,    -1,   743,    -1,   472,   732,    -1,    10,   732,    -1,
     467,   682,   468,   732,    -1,   723,    -1,   686,    -1,   595,
      -1,   595,   731,    -1,   147,   595,    -1,   742,   467,   468,
      -1,   742,   467,   710,   608,   468,    -1,   742,   467,   419,
     711,   608,   468,    -1,   742,   467,   710,   471,   419,   711,
     608,   468,    -1,   742,   467,    26,   710,   608,   468,    -1,
     742,   467,   127,   710,   608,   468,    -1,   742,   467,   460,
     468,    -1,   685,   689,   690,   694,    -1,   688,    -1,   685,
      -1,   688,    -1,    73,   159,   467,   682,   468,    -1,    97,
      -1,   100,    -1,   100,   467,   744,   468,    -1,   101,    -1,
     101,   467,   744,   468,    -1,   226,    -1,   226,   467,   744,
     468,    -1,   227,    -1,   227,   467,   744,   468,    -1,    98,
      -1,   102,    -1,   349,    -1,   410,    -1,    96,    -1,    99,
      -1,    60,   467,   682,    35,   659,   468,    -1,   151,   467,
     713,   468,    -1,   278,   467,   715,   468,    -1,   291,   467,
     717,   468,    -1,   373,   467,   718,   468,    -1,   392,   467,
     682,    35,   659,   468,    -1,   394,   467,    52,   721,   468,
      -1,   394,   467,   217,   721,   468,    -1,   394,   467,   389,
     721,   468,    -1,   394,   467,   721,   468,    -1,   257,   467,
     682,   471,   682,   468,    -1,    71,   467,   709,   468,    -1,
     431,   172,   467,   609,   468,    -1,    -1,   155,   467,   427,
     682,   468,    -1,    -1,   429,   692,    -1,    -1,   693,    -1,
     692,   471,   693,    -1,   746,    35,   695,    -1,   276,   695,
      -1,   276,   746,    -1,    -1,   467,   696,   697,   608,   698,
     468,    -1,   746,    -1,    -1,   285,    53,   709,    -1,    -1,
     306,   699,    -1,   334,   699,    -1,    -1,   700,    -1,    47,
     700,    32,   700,    -1,   400,   293,    -1,   400,   158,    -1,
      95,   333,    -1,   682,   293,    -1,   682,   158,    -1,   333,
     467,   709,   468,    -1,   333,   467,   468,    -1,   467,   709,
     471,   682,   468,    -1,    33,    -1,   360,    -1,    26,    -1,
       8,    -1,   704,    -1,   458,    -1,   459,    -1,   460,    -1,
     461,    -1,   462,    -1,   463,    -1,   454,    -1,   455,    -1,
     456,    -1,    15,    -1,    16,    -1,    17,    -1,     8,    -1,
     268,   467,   708,   468,    -1,   703,    -1,   268,   467,   708,
     468,    -1,   703,    -1,   268,   467,   708,   468,    -1,   221,
      -1,   451,   221,    -1,   181,    -1,   451,   181,    -1,   703,
      -1,   746,   469,   708,    -1,   682,    -1,   709,   471,   682,
      -1,   711,    -1,   710,   471,   711,    -1,   682,    -1,   752,
      13,   682,    -1,   752,    14,   682,    -1,   659,    -1,   712,
     471,   659,    -1,   714,   164,   682,    -1,    -1,     3,    -1,
     448,    -1,   240,    -1,   107,    -1,   178,    -1,   237,    -1,
     341,    -1,   745,    -1,   682,   716,   719,   720,    -1,   682,
     716,   719,    -1,   288,   682,    -1,   683,   186,   683,    -1,
      -1,   682,   719,   720,    -1,   682,   720,   719,    -1,   682,
     719,    -1,   682,   720,    -1,   709,    -1,    -1,   164,   682,
      -1,   159,   682,    -1,   682,   164,   709,    -1,   164,   709,
      -1,   709,    -1,   595,    -1,   467,   709,   468,    -1,    59,
     727,   724,   726,   138,    -1,   725,    -1,   724,   725,    -1,
     426,   682,   385,   682,    -1,   134,   682,    -1,    -1,   682,
      -1,    -1,   746,    -1,   746,   731,    -1,   469,   741,    -1,
     469,   460,    -1,   465,   682,   466,    -1,   465,   730,   473,
     730,   466,    -1,   682,    -1,    -1,   729,    -1,   731,   729,
      -1,    -1,   732,   729,    -1,    39,    -1,    -1,   735,    -1,
      -1,   736,    -1,   735,   471,   736,    -1,   682,    35,   754,
      -1,   682,     3,    -1,   682,    -1,   460,    -1,   738,    -1,
     737,   471,   738,    -1,   746,    -1,   746,   731,    -1,   740,
      -1,   739,   471,   740,    -1,   746,    -1,   753,    -1,   748,
      -1,   746,   731,    -1,   744,    -1,     4,    -1,   745,    -1,
       6,    -1,     7,    -1,   742,   745,    -1,   742,   467,   710,
     608,   468,   745,    -1,   662,   745,    -1,   678,   745,   680,
      -1,   678,   467,   744,   468,   745,    -1,   678,   467,   472,
     468,   472,   680,    -1,   395,    -1,   152,    -1,   256,    -1,
       9,    -1,     5,    -1,     3,    -1,   811,    -1,   812,    -1,
     746,    -1,     5,    -1,     3,    -1,   811,    -1,   813,    -1,
     746,    -1,   746,   750,    -1,   469,   741,    -1,   750,   469,
     741,    -1,   467,   739,   468,    -1,    -1,   748,    -1,     3,
      -1,   811,    -1,   812,    -1,   813,    -1,   814,    -1,   753,
      -1,     5,    -1,   295,   740,   756,    35,   757,    -1,   467,
     712,   468,    -1,    -1,   594,    -1,   492,    -1,   576,    -1,
     794,    -1,    91,   337,   746,   759,    -1,    91,   337,   180,
     251,   147,   746,   759,    -1,   759,   760,    -1,    -1,   524,
      -1,   761,    -1,   511,    -1,   806,    -1,    91,   767,   189,
     764,   765,   266,   738,   763,   467,   508,   468,   766,   655,
      -1,    91,   767,   189,   764,   180,   251,   147,   552,   266,
     738,   763,   467,   508,   468,   766,   655,    -1,   746,    -1,
     411,   762,    -1,    -1,    80,    -1,    -1,   552,    -1,    -1,
     430,   537,    -1,    -1,   404,    -1,    -1,    28,   377,   647,
     350,   337,   740,    -1,    28,   377,   180,   147,   647,   350,
     337,   740,    -1,    28,   344,   738,   350,   337,   740,    -1,
      28,   344,   180,   147,   738,   350,   337,   740,    -1,    28,
     423,   738,   350,   337,   740,    -1,    28,   423,   180,   147,
     738,   350,   337,   740,    -1,    67,    -1,   148,   773,    -1,
     148,   777,   771,   773,    -1,   148,   421,   773,    -1,   148,
     467,   776,   468,   773,    -1,   421,    -1,    -1,   778,    -1,
     518,    -1,    -1,   594,    -1,   492,    -1,   576,    -1,   794,
      -1,   808,    -1,     3,    -1,   811,    -1,   812,    -1,   813,
      -1,   774,    -1,   745,    -1,   779,    -1,   776,   471,   779,
      -1,    31,    -1,    30,    -1,   395,    -1,   152,    -1,   266,
      -1,   775,    -1,   780,   772,    -1,   774,    -1,   777,    -1,
     350,   782,    -1,   350,   225,   782,    -1,   350,   348,   782,
      -1,   783,    -1,   804,   164,    95,    -1,   386,   450,   785,
      -1,   337,   745,    -1,   804,   388,   786,    -1,   804,   456,
     786,    -1,   804,   388,   112,    -1,   804,   456,   112,    -1,
     778,    -1,   518,    -1,   745,    -1,     3,    -1,   678,   745,
     680,    -1,   678,   467,   744,   468,   745,    -1,   518,    -1,
     112,    -1,   225,    -1,   784,    -1,   786,   471,   784,    -1,
     224,   788,    -1,   745,    -1,   412,   791,   793,   771,    -1,
     412,   791,   793,   771,   738,    -1,   412,   791,   793,   771,
     798,    -1,   412,   467,   792,   468,    -1,   412,   467,   792,
     468,   738,   751,    -1,   777,    -1,   421,    -1,   163,    -1,
     165,    -1,     3,    -1,   165,    -1,    -1,   790,    -1,   792,
     471,   790,    -1,   163,    -1,    -1,   496,   117,   164,   795,
     797,   796,   501,    -1,   647,    -1,   647,   746,    -1,   647,
      35,   746,    -1,   427,   682,    -1,    -1,   411,   638,    -1,
      -1,   777,   771,    -1,   777,   771,   738,   751,    -1,   323,
     801,    -1,   804,    -1,    26,    -1,   800,    -1,   386,   450,
      -1,   390,   209,   220,    -1,   803,   804,    -1,   803,   386,
     450,    -1,   803,   390,   209,   220,    -1,   803,    26,    -1,
     354,    -1,   122,    -1,   746,    -1,   804,   469,   746,    -1,
      55,   685,    -1,    91,   568,   423,   738,   558,   766,    35,
     594,   807,    -1,    91,   271,   321,   568,   423,   738,   558,
     766,    35,   594,   807,    -1,    91,   568,   311,   423,   738,
     467,   562,   468,   766,    35,   594,   807,    -1,    91,   271,
     321,   568,   311,   423,   738,   467,   562,   468,   766,    35,
     594,   807,    -1,   430,    66,   269,    -1,   430,    58,    66,
     269,    -1,   430,   225,    66,   269,    -1,    -1,    91,   568,
     377,   810,    35,   594,   809,    -1,    91,   568,   377,   180,
     251,   147,   810,    35,   594,   809,    -1,   430,   105,    -1,
     430,   249,   105,    -1,    -1,   738,   558,   544,   536,    -1,
      18,    -1,    19,    -1,    20,    -1,    21,    -1,    22,    -1,
      23,    -1,    24,    -1,    25,    -1,    27,    -1,    28,    -1,
      29,    -1,    37,    -1,    38,    -1,    40,    -1,    41,    -1,
      42,    -1,    44,    -1,    45,    -1,    46,    -1,    53,    -1,
      54,    -1,    55,    -1,    56,    -1,    57,    -1,    58,    -1,
      61,    -1,    62,    -1,    65,    -1,    67,    -1,    68,    -1,
      69,    -1,    70,    -1,    75,    -1,    76,    -1,    77,    -1,
      78,    -1,    79,    -1,    81,    -1,    82,    -1,    83,    -1,
      85,    -1,    86,    -1,    87,    -1,    88,    -1,    89,    -1,
      90,    -1,    93,    -1,    94,    -1,    95,    -1,   103,    -1,
     104,    -1,   105,    -1,   106,    -1,   107,    -1,   108,    -1,
     111,    -1,   113,    -1,   115,    -1,   116,    -1,   117,    -1,
     118,    -1,   119,    -1,   120,    -1,   122,    -1,   123,    -1,
     124,    -1,   125,    -1,   126,    -1,   129,    -1,   130,    -1,
     131,    -1,   132,    -1,   133,    -1,   135,    -1,   136,    -1,
     137,    -1,   139,    -1,   140,    -1,   141,    -1,   143,    -1,
     144,    -1,   145,    -1,   146,    -1,   148,    -1,   149,    -1,
     150,    -1,   153,    -1,   155,    -1,   156,    -1,   158,    -1,
     160,    -1,   162,    -1,   166,    -1,   167,    -1,   168,    -1,
     169,    -1,   171,    -1,   174,    -1,   176,    -1,   177,    -1,
     178,    -1,   179,    -1,   180,    -1,   182,    -1,   183,    -1,
     184,    -1,   185,    -1,   187,    -1,   188,    -1,   189,    -1,
     190,    -1,   191,    -1,   192,    -1,   194,    -1,   197,    -1,
     198,    -1,   199,    -1,   200,    -1,   206,    -1,   209,    -1,
     211,    -1,   212,    -1,   213,    -1,   214,    -1,   215,    -1,
     218,    -1,   220,    -1,   223,    -1,   224,    -1,   225,    -1,
     228,    -1,   229,    -1,   230,    -1,   231,    -1,   232,    -1,
     233,    -1,   234,    -1,   235,    -1,   236,    -1,   237,    -1,
     238,    -1,   239,    -1,   240,    -1,   241,    -1,   242,    -1,
     243,    -1,   247,    -1,   248,    -1,   249,    -1,   252,    -1,
     253,    -1,   255,    -1,   258,    -1,   260,    -1,   261,    -1,
     262,    -1,   264,    -1,   265,    -1,   268,    -1,   269,    -1,
     270,    -1,   273,    -1,   276,    -1,   279,    -1,   280,    -1,
     281,    -1,   282,    -1,   283,    -1,   284,    -1,   285,    -1,
     286,    -1,   287,    -1,   289,    -1,   290,    -1,   292,    -1,
     293,    -1,   295,    -1,   296,    -1,   297,    -1,   299,    -1,
     300,    -1,   301,    -1,   302,    -1,   303,    -1,   304,    -1,
     305,    -1,   306,    -1,   307,    -1,   309,    -1,   310,    -1,
     311,    -1,   312,    -1,   314,    -1,   315,    -1,   316,    -1,
     317,    -1,   318,    -1,   319,    -1,   320,    -1,   321,    -1,
     322,    -1,   323,    -1,   324,    -1,   325,    -1,   327,    -1,
     328,    -1,   330,    -1,   331,    -1,   332,    -1,   334,    -1,
     335,    -1,   336,    -1,   337,    -1,   338,    -1,   339,    -1,
     340,    -1,   341,    -1,   342,    -1,   344,    -1,   345,    -1,
     346,    -1,   347,    -1,   348,    -1,   350,    -1,   352,    -1,
     353,    -1,   354,    -1,   356,    -1,   357,    -1,   359,    -1,
     361,    -1,   362,    -1,   363,    -1,   364,    -1,   365,    -1,
     366,    -1,   367,    -1,   368,    -1,   369,    -1,   370,    -1,
     371,    -1,   372,    -1,   375,    -1,   376,    -1,   378,    -1,
     380,    -1,   381,    -1,   382,    -1,   383,    -1,   384,    -1,
     390,    -1,   391,    -1,   393,    -1,   396,    -1,   397,    -1,
     398,    -1,   399,    -1,   400,    -1,   401,    -1,   402,    -1,
     405,    -1,   406,    -1,   407,    -1,   408,    -1,   409,    -1,
     412,    -1,   413,    -1,   414,    -1,   415,    -1,   416,    -1,
     420,    -1,   422,    -1,   423,    -1,   424,    -1,   425,    -1,
     428,    -1,   431,    -1,   432,    -1,   433,    -1,   434,    -1,
     435,    -1,   436,    -1,   448,    -1,   449,    -1,   450,    -1,
      47,    -1,    48,    -1,    50,    -1,    51,    -1,    63,    -1,
      64,    -1,    71,    -1,   109,    -1,   110,    -1,   147,    -1,
     151,    -1,   157,    -1,   173,    -1,   196,    -1,   201,    -1,
     202,    -1,   204,    -1,   244,    -1,   246,    -1,   250,    -1,
     257,    -1,   259,    -1,   274,    -1,   278,    -1,   291,    -1,
     294,    -1,   308,    -1,   333,    -1,   351,    -1,   358,    -1,
     373,    -1,   386,    -1,   387,    -1,   392,    -1,   394,    -1,
     417,    -1,   418,    -1,   437,    -1,   438,    -1,   439,    -1,
     440,    -1,   441,    -1,   442,    -1,   443,    -1,   444,    -1,
     445,    -1,   446,    -1,   447,    -1,    43,    -1,    49,    -1,
      73,    -1,    80,    -1,    92,    -1,    99,    -1,   163,    -1,
     165,    -1,   181,    -1,   195,    -1,   207,    -1,   208,    -1,
     210,    -1,   219,    -1,   221,    -1,   245,    -1,   254,    -1,
     275,    -1,   277,    -1,   329,    -1,   355,    -1,   379,    -1,
     421,    -1,    26,    -1,    30,    -1,    31,    -1,    32,    -1,
      33,    -1,    34,    -1,    35,    -1,    36,    -1,    39,    -1,
      52,    -1,    59,    -1,    60,    -1,    66,    -1,    72,    -1,
      74,    -1,    84,    -1,    91,    -1,    96,    -1,    97,    -1,
      98,    -1,   100,    -1,   101,    -1,   102,    -1,   112,    -1,
     114,    -1,   121,    -1,   127,    -1,   128,    -1,   134,    -1,
     138,    -1,   142,    -1,   152,    -1,   154,    -1,   159,    -1,
     161,    -1,   164,    -1,   170,    -1,   172,    -1,   175,    -1,
     186,    -1,   193,    -1,   203,    -1,   205,    -1,   216,    -1,
     217,    -1,   222,    -1,   226,    -1,   227,    -1,   251,    -1,
     256,    -1,   263,    -1,   266,    -1,   267,    -1,   271,    -1,
     272,    -1,   288,    -1,   298,    -1,   313,    -1,   326,    -1,
     343,    -1,   349,    -1,   360,    -1,   374,    -1,   377,    -1,
     385,    -1,   388,    -1,   389,    -1,   395,    -1,   403,    -1,
     404,    -1,   410,    -1,   411,    -1,   419,    -1,   426,    -1,
     427,    -1,   429,    -1,   430,    -1
};

/* YYRLINE[YYN] -- source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,   450,   450,   466,   478,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   518,     9,    18,    27,    36,
      45,    54,    63,    72,    85,    87,    93,    94,    99,   103,
     107,   118,   126,   130,   139,   148,   157,   166,   175,   184,
     192,   200,   209,   218,   227,   236,   253,   262,   271,   280,
     290,   303,   318,   327,   335,   350,   358,   368,   378,   385,
     392,   400,   407,   418,   419,   424,   428,   433,   438,   446,
     447,   452,   456,   457,     7,    13,    19,    25,     6,    15,
      25,    35,    45,    55,    65,    75,    85,    95,   106,   117,
     127,   140,   141,     8,    21,    27,    34,    40,    47,    57,
      61,    70,    79,    88,    95,    96,   101,   113,   118,   143,
     153,   163,   169,   180,   191,   206,   207,   213,   214,   219,
     220,   226,   227,   231,   232,   237,   239,   245,   246,   250,
     251,   256,     7,    14,    22,     9,    19,    32,    33,     7,
      14,    31,    51,    52,     9,    17,    29,    30,    34,    35,
      36,    41,    42,    43,    48,    52,    56,    60,    64,    68,
      72,    76,    80,    84,    88,    92,    97,   101,   105,   112,
     113,   117,   118,   119,     2,     9,    15,    21,    28,    35,
      45,    46,    47,     7,    21,    41,    42,    69,    70,    71,
      72,    73,    74,    78,    79,    84,    89,    90,    91,    92,
      93,    98,   105,   106,   107,   124,   131,   138,   148,   158,
     170,   179,   188,   207,   214,   219,   221,   223,   225,   228,
     233,   234,   238,   239,   240,   241,   246,   250,   251,   256,
     263,   268,   269,   270,   271,   272,   273,   274,   275,   281,
     282,   286,   291,   298,   305,   312,   324,   325,   326,   327,
     331,   336,   337,   338,   343,   348,   349,   350,   351,   352,
     353,   358,   381,   385,   392,   393,   397,   401,   402,   403,
     407,   411,   419,   420,   425,   426,   430,   438,   439,   444,
     445,   449,   454,   458,   462,   467,   475,   476,   480,   481,
     487,   498,   511,   525,   539,   553,   567,   590,   594,   601,
     605,   613,   618,   625,   635,   636,   637,   638,   639,   646,
     653,   654,   659,   660,     9,    19,    29,    39,    49,    59,
      73,    74,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    90,    91,    92,    93,    94,    95,    96,
     101,   102,   107,   108,   109,   114,   115,   116,     7,     1,
      30,    53,    54,    59,    63,    68,    72,    80,    81,    85,
      86,    91,    92,    96,    97,   102,   103,   104,   105,   106,
     111,   119,   123,   128,   129,   134,   138,   143,   147,   151,
     155,   159,   163,   167,   171,   175,   179,   183,   187,   191,
     195,   203,   209,   210,   211,   216,   220,    47,    48,    52,
      53,    68,    69,    76,    84,    92,   100,   108,   116,   127,
     128,   155,   169,   184,   185,   204,   208,   212,   229,   236,
     243,   253,   254,   257,   269,   280,   288,   293,   298,   303,
     308,   316,   324,   329,   334,   341,   342,   346,   347,   348,
     355,   356,   360,   361,   365,   366,   370,   374,   375,   378,
     387,   398,   399,   400,   403,   404,   405,   409,   410,   411,
     412,   416,   417,   421,   423,   439,   441,   446,   449,   454,
     455,   463,   483,   484,   486,   491,   492,   496,   497,   500,
     501,   526,   527,   531,   532,   536,   537,   541,   554,   555,
     559,   560,   564,   565,   569,   570,   574,   585,   586,   587,
     588,   592,   593,   598,   599,   600,   609,   615,   633,   634,
     638,   639,   645,   650,   658,   665,   673,   708,   733,   737,
     763,   767,   779,   792,   806,   817,   832,   838,   843,   849,
     856,   857,   865,   869,   873,   879,   886,   891,   892,   893,
     894,   898,   899,   911,   912,   917,   924,   931,   938,   961,
     974,   975,   990,  1000,  1012,  1017,  1018,  1021,  1022,  1025,
    1026,  1031,  1032,  1037,  1041,  1047,  1068,  1076,  1088,  1093,
    1100,  1105,  1111,  1116,  1125,  1127,  1130,  1134,  1135,  1136,
    1137,  1138,  1139,  1144,  1164,  1165,  1166,  1167,  1178,  1184,
    1192,  1193,  1199,  1204,  1209,  1214,  1219,  1224,  1229,  1234,
    1240,  1246,  1252,  1259,  1281,  1290,  1294,  1302,  1306,  1314,
    1326,  1347,  1351,  1357,  1361,  1374,  1382,  1392,  1394,  1396,
    1398,  1400,  1402,  1407,  1408,  1415,  1424,  1432,  1441,  1452,
    1460,  1461,  1462,  1466,  1468,  1470,  1472,  1474,  1476,  1478,
    1483,  1488,  1494,  1502,  1507,  1514,  1521,  1525,  1529,  1565,
    1566,  1568,  1576,  1591,  1593,  1595,  1597,  1599,  1601,  1603,
    1605,  1607,  1609,  1611,  1613,  1615,  1617,  1620,  1622,  1624,
    1627,  1629,  1631,  1633,  1636,  1641,  1648,  1653,  1660,  1665,
    1673,  1678,  1687,  1695,  1703,  1711,  1729,  1737,  1745,  1753,
    1761,  1769,  1785,  1793,  1801,  1809,  1817,  1825,  1833,  1837,
    1841,  1845,  1849,  1857,  1865,  1873,  1881,  1901,  1923,  1934,
    1941,  1966,  1968,  1970,  1972,  1974,  1976,  1978,  1980,  1982,
    1984,  1986,  1988,  1990,  1992,  1994,  1996,  1998,  2000,  2002,
    2004,  2008,  2012,  2016,  2030,  2031,  2032,  2044,  2059,  2071,
    2073,  2075,  2086,  2110,  2123,  2127,  2133,  2140,  2147,  2157,
    2164,  2192,  2227,  2238,  2239,  2246,  2252,  2256,  2260,  2264,
    2268,  2272,  2276,  2280,  2284,  2288,  2292,  2296,  2300,  2304,
    2308,  2312,  2314,  2318,  2327,  2332,  2339,  2354,  2361,  2365,
    2369,  2373,  2377,  2391,  2392,  2396,  2397,  2405,  2406,  2410,
    2411,  2416,  2424,  2426,  2440,  2443,  2470,  2471,  2474,  2475,
    2486,  2504,  2511,  2520,  2537,  2582,  2590,  2598,  2606,  2614,
    2635,  2636,  2637,  2640,  2641,  2642,  2645,  2646,  2649,  2650,
    2651,  2652,  2653,  2654,  2655,  2656,  2657,  2658,  2659,  2660,
    2663,  2665,  2670,  2672,  2677,  2679,  2681,  2683,  2685,  2687,
    2701,  2703,  2707,  2711,  2718,  2722,  2728,  2732,  2741,  2752,
    2753,  2757,  2761,  2768,  2769,  2770,  2771,  2772,  2773,  2774,
    2775,  2785,  2789,  2796,  2803,  2804,  2820,  2824,  2829,  2833,
    2848,  2853,  2857,  2860,  2863,  2864,  2865,  2868,  2875,  2885,
    2899,  2900,  2904,  2915,  2916,  2919,  2920,  2923,  2927,  2934,
    2938,  2942,  2950,  2961,  2962,  2966,  2967,  2971,  2972,  2975,
    2976,  2986,  2987,  2991,  2992,  2995,  3011,  3019,  3027,  3049,
    3050,  3061,  3065,  3092,  3094,  3099,  3101,  3111,  3113,  3124,
    3128,  3132,  3136,  3140,  3149,  3156,  3188,  3192,  3198,  3206,
    3218,  3222,  3226,  3232,  3233,  3249,  3250,  3251,  3254,  3255,
    3260,  3261,  3262,  3265,  3266,  3269,  3271,  3276,  3277,  3280,
    3288,  3289,  3290,  3291,  3292,  3295,  3296,     7,    18,    19,
      23,    24,    25,    26,     7,    16,    34,    41,    46,    47,
      48,    49,     8,    33,    62,    66,    67,    72,    73,    78,
      79,    83,    84,    89,    90,     7,    16,    25,    34,    43,
      52,     5,     9,    16,    26,    33,    44,    45,    50,    51,
      52,    57,    58,    59,    60,    61,    65,    66,    67,    68,
      73,    74,    79,    83,    91,    92,    97,    98,    99,   105,
     110,   118,   119,    10,    16,    22,    32,    33,    41,    52,
      64,    72,    80,    87,    97,    99,   105,   109,   113,   128,
     135,   136,   137,   141,   142,     7,    16,     8,    22,    36,
      48,    56,    70,    71,    72,    73,    74,    87,    88,    93,
      94,    98,    99,     7,    21,    25,    32,    43,    44,    50,
      51,     9,    19,     2,     7,    14,    24,    25,    32,     3,
       9,    15,    21,    29,    29,    31,    32,     6,     8,    21,
      34,    52,    74,    75,    76,    77,    11,    24,    41,    42,
      43,    48,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    63,    63,    63,    63,    63,
      63,    63,    63,    63,    63,    63,    63,    63,    63,    63,
      63,    63,    63,    63,    63,    63,    63,    63,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || YYTOKEN_TABLE
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "IDENT", "FCONST", "SCONST", "BCONST",
  "XCONST", "Op", "ICONST", "PARAM", "TYPECAST", "DOT_DOT", "COLON_EQUALS",
  "EQUALS_GREATER", "LESS_EQUALS", "GREATER_EQUALS", "NOT_EQUALS",
  "ABORT_P", "ABSOLUTE_P", "ACCESS", "ACTION", "ADD_P", "ADMIN", "AFTER",
  "AGGREGATE", "ALL", "ALSO", "ALTER", "ALWAYS", "ANALYSE", "ANALYZE",
  "AND", "ANY", "ARRAY", "AS", "ASC_P", "ASSERTION", "ASSIGNMENT",
  "ASYMMETRIC", "AT", "ATTACH", "ATTRIBUTE", "AUTHORIZATION", "BACKWARD",
  "BEFORE", "BEGIN_P", "BETWEEN", "BIGINT", "BINARY", "BIT", "BOOLEAN_P",
  "BOTH", "BY", "CACHE", "CALL_P", "CALLED", "CASCADE", "CASCADED", "CASE",
  "CAST", "CATALOG_P", "CHAIN", "CHAR_P", "CHARACTER", "CHARACTERISTICS",
  "CHECK_P", "CHECKPOINT", "CLASS", "CLOSE", "CLUSTER", "COALESCE",
  "COLLATE", "COLLATION", "COLUMN", "COLUMNS", "COMMENT", "COMMENTS",
  "COMMIT", "COMMITTED", "CONCURRENTLY", "CONFIGURATION", "CONFLICT",
  "CONNECTION", "CONSTRAINT", "CONSTRAINTS", "CONTENT_P", "CONTINUE_P",
  "CONVERSION_P", "COPY", "COST", "CREATE_P", "CROSS", "CSV", "CUBE",
  "CURRENT_P", "CURRENT_CATALOG", "CURRENT_DATE", "CURRENT_ROLE",
  "CURRENT_SCHEMA", "CURRENT_TIME", "CURRENT_TIMESTAMP", "CURRENT_USER",
  "CURSOR", "CYCLE", "DATA_P", "DATABASE", "DAY_P", "DEALLOCATE", "DEC",
  "DECIMAL_P", "DECLARE", "DEFAULT", "DEFAULTS", "DEFERRABLE", "DEFERRED",
  "DEFINER", "DELETE_P", "DELIMITER", "DELIMITERS", "DEPENDS", "DESC_P",
  "DESCRIBE", "DETACH", "DICTIONARY", "DISABLE_P", "DISCARD", "DISTINCT",
  "DO", "DOCUMENT_P", "DOMAIN_P", "DOUBLE_P", "DROP", "EACH", "ELSE",
  "ENABLE_P", "ENCODING", "ENCRYPTED", "END_P", "ENUM_P", "ESCAPE",
  "EVENT", "EXCEPT", "EXCLUDE", "EXCLUDING", "EXCLUSIVE", "EXECUTE",
  "EXISTS", "EXPLAIN", "EXTENSION", "EXTERNAL", "EXTRACT", "FALSE_P",
  "FAMILY", "FETCH", "FILTER", "FIRST_P", "FLOAT_P", "FOLLOWING", "FOR",
  "FORCE", "FOREIGN", "FORWARD", "FREEZE", "FROM", "FULL", "FUNCTION",
  "FUNCTIONS", "GENERATED", "GLOBAL", "GRANT", "GRANTED", "GROUP_P",
  "GROUPING", "HANDLER", "HAVING", "HEADER_P", "HOLD", "HOUR_P",
  "IDENTITY_P", "IF_P", "ILIKE", "IMMEDIATE", "IMMUTABLE", "IMPLICIT_P",
  "IMPORT_P", "IN_P", "INCLUDING", "INCREMENT", "INDEX", "INDEXES",
  "INHERIT", "INHERITS", "INITIALLY", "INLINE_P", "INNER_P", "INOUT",
  "INPUT_P", "INSENSITIVE", "INSERT", "INSTEAD", "INT_P", "INTEGER",
  "INTERSECT", "INTERVAL", "INTO", "INVOKER", "IS", "ISNULL", "ISOLATION",
  "JOIN", "KEY", "LABEL", "LANGUAGE", "LARGE_P", "LAST_P", "LATERAL_P",
  "LEADING", "LEAKPROOF", "LEFT", "LEVEL", "LIKE", "LIMIT", "LISTEN",
  "LOAD", "LOCAL", "LOCALTIME", "LOCALTIMESTAMP", "LOCATION", "LOCK_P",
  "LOCKED", "LOGGED", "MAPPING", "MATCH", "MATERIALIZED", "MAXVALUE",
  "METHOD", "MINUTE_P", "MINVALUE", "MODE", "MONTH_P", "MOVE", "NAME_P",
  "NAMES", "NATIONAL", "NATURAL", "NCHAR", "NEW", "NEXT", "NO", "NONE",
  "NOT", "NOTHING", "NOTIFY", "NOTNULL", "NOWAIT", "NULL_P", "NULLIF",
  "NULLS_P", "NUMERIC", "OBJECT_P", "OF", "OFF", "OFFSET", "OIDS", "OLD",
  "ON", "ONLY", "OPERATOR", "OPTION", "OPTIONS", "OR", "ORDER",
  "ORDINALITY", "OUT_P", "OUTER_P", "OVER", "OVERLAPS", "OVERLAY",
  "OVERRIDING", "OWNED", "OWNER", "PARALLEL", "PARSER", "PARTIAL",
  "PARTITION", "PASSING", "PASSWORD", "PLACING", "PLANS", "POLICY",
  "POSITION", "PRAGMA_P", "PRECEDING", "PRECISION", "PREPARE", "PREPARED",
  "PRESERVE", "PRIMARY", "PRIOR", "PRIVILEGES", "PROCEDURAL", "PROCEDURE",
  "PROGRAM", "PUBLICATION", "QUOTE", "RANGE", "READ_P", "REAL", "REASSIGN",
  "RECHECK", "RECURSIVE", "REF", "REFERENCES", "REFERENCING", "REFRESH",
  "REINDEX", "RELATIVE_P", "RELEASE", "RENAME", "REPEATABLE", "REPLACE",
  "REPLICA", "RESET", "RESTART", "RESTRICT", "RETURNING", "RETURNS",
  "REVOKE", "RIGHT", "ROLE", "ROLLBACK", "ROLLUP", "ROW", "ROWS", "RULE",
  "SAVEPOINT", "SCHEMA", "SCHEMAS", "SCROLL", "SEARCH", "SECOND_P",
  "SECURITY", "SELECT", "SEQUENCE", "SEQUENCES", "SERIALIZABLE", "SERVER",
  "SESSION", "SESSION_USER", "SET", "SETOF", "SETS", "SHARE", "SHOW",
  "SIMILAR", "SIMPLE", "SKIP", "SMALLINT", "SNAPSHOT", "SOME", "SQL_P",
  "STABLE", "STANDALONE_P", "START", "STATEMENT", "STATISTICS", "STDIN",
  "STDOUT", "STORAGE", "STRICT_P", "STRIP_P", "SUBSCRIPTION", "SUBSTRING",
  "SYMMETRIC", "SYSID", "SYSTEM_P", "TABLE", "TABLES", "TABLESAMPLE",
  "TABLESPACE", "TEMP", "TEMPLATE", "TEMPORARY", "TEXT_P", "THEN", "TIME",
  "TIMESTAMP", "TO", "TRAILING", "TRANSACTION", "TRANSFORM", "TREAT",
  "TRIGGER", "TRIM", "TRUE_P", "TRUNCATE", "TRUSTED", "TYPE_P", "TYPES_P",
  "UNBOUNDED", "UNCOMMITTED", "UNENCRYPTED", "UNION", "UNIQUE", "UNKNOWN",
  "UNLISTEN", "UNLOGGED", "UNTIL", "UPDATE", "USER", "USING", "VACUUM",
  "VALID", "VALIDATE", "VALIDATOR", "VALUE_P", "VALUES", "VARCHAR",
  "VARIADIC", "VARYING", "VERBOSE", "VERSION_P", "VIEW", "VIEWS",
  "VOLATILE", "WHEN", "WHERE", "WHITESPACE_P", "WINDOW", "WITH", "WITHIN",
  "WITHOUT", "WORK", "WRAPPER", "WRITE_P", "XML_P", "XMLATTRIBUTES",
  "XMLCONCAT", "XMLELEMENT", "XMLEXISTS", "XMLFOREST", "XMLNAMESPACES",
  "XMLPARSE", "XMLPI", "XMLROOT", "XMLSERIALIZE", "XMLTABLE", "YEAR_P",
  "YES_P", "ZONE", "NOT_LA", "NULLS_LA", "WITH_LA", "'<'", "'>'", "'='",
  "POSTFIXOP", "'+'", "'-'", "'*'", "'/'", "'%'", "'^'", "UMINUS", "'['",
  "']'", "'('", "')'", "'.'", "';'", "','", "'?'", "':'", "$accept",
  "stmtblock", "stmtmulti", "stmt", "AlterTableStmt",
  "alter_identity_column_option_list", "alter_column_default",
  "alter_identity_column_option", "alter_generic_option_list",
  "alter_table_cmd", "alter_using", "alter_generic_option_elem",
  "alter_table_cmds", "alter_generic_options", "opt_set_data",
  "DeallocateStmt", "RenameStmt", "opt_column", "InsertStmt",
  "insert_rest", "insert_target", "opt_conf_expr", "opt_with_clause",
  "insert_column_item", "set_clause", "opt_on_conflict", "index_elem",
  "returning_clause", "override_kind", "set_target_list", "opt_collate",
  "opt_class", "insert_column_list", "set_clause_list", "index_params",
  "set_target", "PragmaStmt", "CreateSeqStmt", "OptSeqOptList",
  "ExecuteStmt", "execute_param_clause", "AlterSeqStmt", "SeqOptList",
  "opt_with", "NumericOnly", "SeqOptElem", "opt_by", "SignedIconst",
  "TransactionStmt", "opt_transaction", "CreateStmt",
  "ConstraintAttributeSpec", "def_arg", "OptParenthesizedSeqOptList",
  "generic_option_arg", "key_action", "ColConstraint", "ColConstraintElem",
  "generic_option_elem", "key_update", "key_actions",
  "create_generic_options", "OnCommitOption", "reloptions",
  "opt_no_inherit", "TableConstraint", "TableLikeOption", "reloption_list",
  "ExistingIndex", "ConstraintAttr", "OptWith", "definition",
  "TableLikeOptionList", "generic_option_name", "ConstraintAttributeElem",
  "columnDef", "generic_option_list", "def_list", "index_name",
  "TableElement", "def_elem", "opt_definition", "OptTableElementList",
  "columnElem", "opt_column_list", "ColQualList", "key_delete",
  "reloption_elem", "columnList", "func_type", "ConstraintElem",
  "TableElementList", "key_match", "TableLikeClause", "OptTemp",
  "generated_when", "DropStmt", "drop_type_any_name", "drop_type_name",
  "any_name_list", "opt_drop_behavior", "drop_type_name_on_any_name",
  "UpdateStmt", "CopyStmt", "copy_from", "copy_delimiter",
  "copy_generic_opt_arg_list", "opt_using", "opt_as", "opt_program",
  "copy_options", "copy_generic_opt_arg", "copy_generic_opt_elem",
  "opt_oids", "copy_opt_list", "opt_binary", "copy_opt_item",
  "copy_generic_opt_arg_list_item", "copy_file_name",
  "copy_generic_opt_list", "SelectStmt", "select_with_parens",
  "select_no_parens", "select_clause", "simple_select", "with_clause",
  "cte_list", "common_table_expr", "into_clause", "OptTempTableName",
  "opt_table", "all_or_distinct", "distinct_clause", "opt_all_clause",
  "opt_sort_clause", "sort_clause", "sortby_list", "sortby",
  "opt_asc_desc", "opt_nulls_order", "select_limit", "opt_select_limit",
  "limit_clause", "offset_clause", "select_limit_value",
  "select_offset_value", "select_fetch_first_value", "I_or_F_const",
  "row_or_rows", "first_or_next", "group_clause", "group_by_list",
  "group_by_item", "empty_grouping_set", "having_clause",
  "for_locking_clause", "opt_for_locking_clause", "for_locking_items",
  "for_locking_item", "for_locking_strength", "locked_rels_list",
  "opt_nowait_or_skip", "values_clause", "from_clause", "from_list",
  "table_ref", "joined_table", "alias_clause", "opt_alias_clause",
  "func_alias_clause", "join_type", "join_outer", "join_qual",
  "relation_expr", "tablesample_clause", "opt_repeatable_clause",
  "func_table", "rowsfrom_item", "rowsfrom_list", "opt_col_def_list",
  "opt_ordinality", "where_clause", "TableFuncElementList",
  "TableFuncElement", "opt_collate_clause", "Typename", "opt_array_bounds",
  "SimpleTypename", "ConstTypename", "GenericType", "opt_type_modifiers",
  "Numeric", "opt_float", "Bit", "ConstBit", "BitWithLength",
  "BitWithoutLength", "Character", "ConstCharacter", "CharacterWithLength",
  "CharacterWithoutLength", "character", "opt_varying", "ConstDatetime",
  "ConstInterval", "opt_timezone", "opt_interval", "interval_second",
  "a_expr", "b_expr", "c_expr", "func_application", "func_expr",
  "func_expr_windowless", "func_expr_common_subexpr",
  "within_group_clause", "filter_clause", "window_clause",
  "window_definition_list", "window_definition", "over_clause",
  "window_specification", "opt_existing_window_name",
  "opt_partition_clause", "opt_frame_clause", "frame_extent",
  "frame_bound", "row", "sub_type", "all_Op", "MathOp", "qual_Op",
  "qual_all_Op", "subquery_Op", "any_operator", "expr_list",
  "func_arg_list", "func_arg_expr", "type_list", "extract_list",
  "extract_arg", "overlay_list", "overlay_placing", "position_list",
  "substr_list", "substr_from", "substr_for", "trim_list", "in_expr",
  "case_expr", "when_clause_list", "when_clause", "case_default",
  "case_arg", "columnref", "indirection_el", "opt_slice_bound",
  "indirection", "opt_indirection", "opt_asymmetric", "opt_target_list",
  "target_list", "target_el", "qualified_name_list", "qualified_name",
  "name_list", "name", "attr_name", "func_name", "AexprConst", "Iconst",
  "Sconst", "ColId", "ColIdOrString", "type_function_name", "any_name",
  "attrs", "opt_name_list", "param_name", "ColLabel", "ColLabelOrString",
  "PrepareStmt", "prep_type_clause", "PreparableStmt", "CreateSchemaStmt",
  "OptSchemaEltList", "schema_stmt", "IndexStmt", "access_method",
  "access_method_clause", "opt_concurrently", "opt_index_name",
  "opt_reloptions", "opt_unique", "AlterObjectSchemaStmt",
  "CheckPointStmt", "ExplainStmt", "opt_verbose", "explain_option_arg",
  "ExplainableStmt", "NonReservedWord", "NonReservedWord_or_Sconst",
  "explain_option_list", "analyze_keyword", "opt_boolean_or_string",
  "explain_option_elem", "explain_option_name", "VariableSetStmt",
  "set_rest", "generic_set", "var_value", "zone_value", "var_list",
  "LoadStmt", "file_name", "VacuumStmt", "vacuum_option_elem", "opt_full",
  "vacuum_option_list", "opt_freeze", "DeleteStmt",
  "relation_expr_opt_alias", "where_or_current_clause", "using_clause",
  "AnalyzeStmt", "VariableResetStmt", "generic_reset", "reset_rest",
  "VariableShowStmt", "show_or_describe", "var_name", "CallStmt",
  "ViewStmt", "opt_check_option", "CreateAsStmt", "opt_with_data",
  "create_as_target", "unreserved_keyword", "col_name_keyword",
  "type_func_name_keyword", "reserved_keyword", 0
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[YYLEX-NUM] -- Internal token number corresponding to
   token YYLEX-NUM.  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,    60,    62,    61,   709,    43,    45,
      42,    47,    37,    94,   710,    91,    93,    40,    41,    46,
      59,    44,    63,    58
};
# endif

/* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   474,   475,   476,   476,   477,   477,   477,   477,   477,
     477,   477,   477,   477,   477,   477,   477,   477,   477,   477,
     477,   477,   477,   477,   477,   477,   477,   477,   477,   477,
     477,   477,   477,   477,   477,   477,   478,   478,   478,   478,
     478,   478,   478,   478,   479,   479,   480,   480,   481,   481,
     481,   481,   482,   482,   483,   483,   483,   483,   483,   483,
     483,   483,   483,   483,   483,   483,   483,   483,   483,   483,
     483,   483,   483,   483,   483,   483,   483,   483,   483,   483,
     483,   483,   483,   484,   484,   485,   485,   485,   485,   486,
     486,   487,   488,   488,   489,   489,   489,   489,   490,   490,
     490,   490,   490,   490,   490,   490,   490,   490,   490,   490,
     490,   491,   491,   492,   493,   493,   493,   493,   493,   494,
     494,   495,   495,   495,   496,   496,   497,   498,   498,   499,
     499,   499,   500,   500,   500,   501,   501,   502,   502,   503,
     503,   504,   504,   505,   505,   506,   506,   507,   507,   508,
     508,   509,   510,   510,   510,   511,   511,   512,   512,   513,
     513,   513,   514,   514,   515,   515,   516,   516,   517,   517,
     517,   518,   518,   518,   518,   519,   519,   519,   519,   519,
     519,   519,   519,   519,   519,   519,   519,   519,   519,   520,
     520,   521,   521,   521,   522,   522,   522,   522,   522,   522,
     523,   523,   523,   524,   524,   525,   525,   526,   526,   526,
     526,   526,   526,   527,   527,   528,   529,   529,   529,   529,
     529,   530,   530,   530,   530,   531,   531,   531,   531,   531,
     531,   531,   531,   532,   533,   534,   534,   534,   534,   534,
     535,   535,   536,   536,   536,   536,   537,   538,   538,   539,
     539,   540,   540,   540,   540,   540,   540,   540,   540,   541,
     541,   542,   543,   543,   543,   543,   544,   544,   544,   544,
     545,   546,   546,   546,   547,   548,   548,   548,   548,   548,
     548,   549,   550,   550,   551,   551,   552,   553,   553,   553,
     554,   554,   555,   555,   556,   556,   557,   558,   558,   559,
     559,   560,   561,   561,   561,   561,   562,   562,   563,   563,
     563,   564,   564,   564,   564,   564,   564,   565,   565,   566,
     566,   566,   566,   567,   568,   568,   568,   568,   568,   568,
     568,   568,   569,   569,   570,   570,   570,   570,   570,   570,
     571,   571,   571,   571,   571,   571,   571,   571,   571,   571,
     571,   571,   571,   572,   572,   572,   572,   572,   572,   572,
     573,   573,   574,   574,   574,   575,   575,   575,   576,   577,
     577,   578,   578,   579,   579,   580,   580,   581,   581,   582,
     582,   583,   583,   584,   584,   585,   585,   585,   585,   585,
     586,   587,   587,   588,   588,   589,   589,   590,   590,   590,
     590,   590,   590,   590,   590,   590,   590,   590,   590,   590,
     590,   591,   592,   592,   592,   593,   593,   594,   594,   595,
     595,   596,   596,   596,   596,   596,   596,   596,   596,   597,
     597,   598,   598,   598,   598,   598,   598,   598,   599,   599,
     599,   600,   600,   601,   602,   602,   603,   603,   603,   603,
     603,   603,   603,   603,   603,   604,   604,   605,   605,   605,
     606,   606,   607,   607,   608,   608,   609,   610,   610,   611,
     611,   612,   612,   612,   613,   613,   613,   614,   614,   614,
     614,   615,   615,   616,   616,   616,   616,   617,   617,   618,
     618,   619,   620,   620,   620,   621,   621,   622,   622,   623,
     623,   624,   624,   625,   625,   626,   626,   627,   628,   628,
     629,   629,   630,   630,   631,   631,   632,   633,   633,   633,
     633,   634,   634,   635,   635,   635,   636,   636,   637,   637,
     638,   638,   639,   639,   639,   639,   639,   639,   639,   639,
     640,   640,   640,   640,   640,   640,   641,   641,   641,   641,
     642,   642,   643,   643,   643,   643,   643,   644,   644,   644,
     644,   645,   645,   646,   646,   647,   647,   647,   647,   648,
     649,   649,   650,   650,   651,   652,   652,   653,   653,   654,
     654,   655,   655,   656,   656,   657,   658,   658,   659,   659,
     659,   659,   659,   659,   660,   660,   660,   661,   661,   661,
     661,   661,   661,   661,   662,   662,   662,   662,   663,   663,
     664,   664,   665,   665,   665,   665,   665,   665,   665,   665,
     665,   665,   665,   666,   666,   667,   667,   668,   668,   669,
     670,   671,   671,   672,   672,   673,   674,   675,   675,   675,
     675,   675,   675,   676,   676,   677,   677,   677,   677,   678,
     679,   679,   679,   680,   680,   680,   680,   680,   680,   680,
     680,   680,   680,   680,   680,   680,   680,   681,   681,   682,
     682,   682,   682,   682,   682,   682,   682,   682,   682,   682,
     682,   682,   682,   682,   682,   682,   682,   682,   682,   682,
     682,   682,   682,   682,   682,   682,   682,   682,   682,   682,
     682,   682,   682,   682,   682,   682,   682,   682,   682,   682,
     682,   682,   682,   682,   682,   682,   682,   682,   682,   682,
     682,   682,   682,   682,   682,   682,   682,   682,   682,   682,
     682,   683,   683,   683,   683,   683,   683,   683,   683,   683,
     683,   683,   683,   683,   683,   683,   683,   683,   683,   683,
     683,   683,   683,   683,   684,   684,   684,   684,   684,   684,
     684,   684,   684,   684,   685,   685,   685,   685,   685,   685,
     685,   686,   686,   687,   687,   688,   688,   688,   688,   688,
     688,   688,   688,   688,   688,   688,   688,   688,   688,   688,
     688,   688,   688,   688,   688,   688,   688,   688,   688,   688,
     688,   688,   688,   689,   689,   690,   690,   691,   691,   692,
     692,   693,   694,   694,   694,   695,   696,   696,   697,   697,
     698,   698,   698,   699,   699,   700,   700,   700,   700,   700,
     701,   701,   701,   702,   702,   702,   703,   703,   704,   704,
     704,   704,   704,   704,   704,   704,   704,   704,   704,   704,
     705,   705,   706,   706,   707,   707,   707,   707,   707,   707,
     708,   708,   709,   709,   710,   710,   711,   711,   711,   712,
     712,   713,   713,   714,   714,   714,   714,   714,   714,   714,
     714,   715,   715,   716,   717,   717,   718,   718,   718,   718,
     718,   718,   719,   720,   721,   721,   721,   722,   722,   723,
     724,   724,   725,   726,   726,   727,   727,   728,   728,   729,
     729,   729,   729,   730,   730,   731,   731,   732,   732,   733,
     733,   734,   734,   735,   735,   736,   736,   736,   736,   737,
     737,   738,   738,   739,   739,   740,   741,   742,   742,   743,
     743,   743,   743,   743,   743,   743,   743,   743,   743,   743,
     743,   743,   743,   744,   745,   746,   746,   746,   747,   747,
     748,   748,   748,   749,   749,   750,   750,   751,   751,   752,
     753,   753,   753,   753,   753,   754,   754,   755,   756,   756,
     757,   757,   757,   757,   758,   758,   759,   759,   760,   760,
     760,   760,   761,   761,   762,   763,   763,   764,   764,   765,
     765,   766,   766,   767,   767,   768,   768,   768,   768,   768,
     768,   769,   770,   770,   770,   770,   771,   771,   772,   772,
     772,   773,   773,   773,   773,   773,   774,   774,   774,   774,
     775,   775,   776,   776,   777,   777,   778,   778,   778,   778,
     779,   780,   780,   781,   781,   781,   782,   782,   782,   782,
     783,   783,   783,   783,   784,   784,   785,   785,   785,   785,
     785,   785,   785,   786,   786,   787,   788,   789,   789,   789,
     789,   789,   790,   790,   790,   790,   790,   791,   791,   792,
     792,   793,   793,   794,   795,   795,   795,   796,   796,   797,
     797,   798,   798,   799,   800,   800,   801,   801,   801,   802,
     802,   802,   802,   803,   803,   804,   804,   805,   806,   806,
     806,   806,   807,   807,   807,   807,   808,   808,   809,   809,
     809,   810,   811,   811,   811,   811,   811,   811,   811,   811,
     811,   811,   811,   811,   811,   811,   811,   811,   811,   811,
     811,   811,   811,   811,   811,   811,   811,   811,   811,   811,
     811,   811,   811,   811,   811,   811,   811,   811,   811,   811,
     811,   811,   811,   811,   811,   811,   811,   811,   811,   811,
     811,   811,   811,   811,   811,   811,   811,   811,   811,   811,
     811,   811,   811,   811,   811,   811,   811,   811,   811,   811,
     811,   811,   811,   811,   811,   811,   811,   811,   811,   811,
     811,   811,   811,   811,   811,   811,   811,   811,   811,   811,
     811,   811,   811,   811,   811,   811,   811,   811,   811,   811,
     811,   811,   811,   811,   811,   811,   811,   811,   811,   811,
     811,   811,   811,   811,   811,   811,   811,   811,   811,   811,
     811,   811,   811,   811,   811,   811,   811,   811,   811,   811,
     811,   811,   811,   811,   811,   811,   811,   811,   811,   811,
     811,   811,   811,   811,   811,   811,   811,   811,   811,   811,
     811,   811,   811,   811,   811,   811,   811,   811,   811,   811,
     811,   811,   811,   811,   811,   811,   811,   811,   811,   811,
     811,   811,   811,   811,   811,   811,   811,   811,   811,   811,
     811,   811,   811,   811,   811,   811,   811,   811,   811,   811,
     811,   811,   811,   811,   811,   811,   811,   811,   811,   811,
     811,   811,   811,   811,   811,   811,   811,   811,   811,   811,
     811,   811,   811,   811,   811,   811,   811,   811,   811,   811,
     811,   811,   811,   811,   811,   811,   811,   811,   811,   811,
     811,   811,   811,   811,   811,   811,   811,   811,   811,   811,
     811,   811,   811,   811,   811,   811,   811,   811,   811,   811,
     811,   811,   811,   811,   811,   811,   811,   811,   811,   811,
     811,   811,   811,   811,   811,   811,   811,   811,   811,   811,
     811,   811,   811,   811,   811,   811,   811,   811,   811,   811,
     811,   811,   811,   811,   811,   811,   811,   812,   812,   812,
     812,   812,   812,   812,   812,   812,   812,   812,   812,   812,
     812,   812,   812,   812,   812,   812,   812,   812,   812,   812,
     812,   812,   812,   812,   812,   812,   812,   812,   812,   812,
     812,   812,   812,   812,   812,   812,   812,   812,   812,   812,
     812,   812,   812,   812,   812,   813,   813,   813,   813,   813,
     813,   813,   813,   813,   813,   813,   813,   813,   813,   813,
     813,   813,   813,   813,   813,   813,   813,   813,   814,   814,
     814,   814,   814,   814,   814,   814,   814,   814,   814,   814,
     814,   814,   814,   814,   814,   814,   814,   814,   814,   814,
     814,   814,   814,   814,   814,   814,   814,   814,   814,   814,
     814,   814,   814,   814,   814,   814,   814,   814,   814,   814,
     814,   814,   814,   814,   814,   814,   814,   814,   814,   814,
     814,   814,   814,   814,   814,   814,   814,   814,   814,   814,
     814,   814,   814,   814,   814,   814,   814,   814,   814,   814,
     814,   814,   814,   814,   814
};

/* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     0,     4,     6,     4,     6,
       4,     6,     4,     6,     1,     2,     3,     2,     1,     3,
       2,     3,     1,     3,     2,     5,     3,     6,     4,     6,
       6,     6,     5,     5,     6,     9,     4,     5,     7,     6,
       4,     8,     4,     2,     4,     3,     6,     4,     2,     2,
       2,     2,     1,     2,     0,     1,     2,     2,     2,     1,
       3,     4,     2,     0,     2,     3,     2,     3,     6,     6,
       8,     6,     8,     6,     8,     6,     8,     8,    10,     8,
      10,     1,     0,     7,     1,     4,     4,     7,     2,     1,
       3,     4,     3,     0,     1,     0,     2,     3,     5,     8,
       5,     0,     5,     5,     7,     2,     0,     1,     1,     1,
       3,     2,     0,     1,     0,     1,     3,     1,     3,     1,
       3,     2,     2,     4,     5,     5,     8,     1,     0,     3,
       9,    12,     3,     0,     4,     6,     1,     2,     1,     1,
       0,     1,     2,     2,     1,     2,     2,     1,     2,     3,
       2,     2,     2,     2,     3,     3,     3,     1,     3,     1,
       0,     1,     2,     2,     2,     2,     2,     2,     2,     2,
       1,     1,     0,     9,    12,     0,     2,     1,     1,     1,
       1,     1,     1,     3,     0,     1,     2,     1,     1,     2,
       2,     3,     1,     1,     2,     2,     1,     2,     3,     5,
       2,     5,     5,     2,     3,     1,     1,     2,     2,     0,
       4,     0,     3,     4,     4,     0,     3,     2,     0,     3,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       3,     3,     1,     2,     2,     2,     2,     2,     2,     0,
       3,     3,     3,     0,     1,     2,     1,     2,     2,     2,
       2,     4,     1,     3,     1,     3,     1,     1,     1,     1,
       3,     1,     2,     0,     1,     0,     1,     3,     0,     2,
       0,     3,     3,     1,     5,     3,     1,     3,     1,     4,
       5,     5,     6,     3,     7,     4,    11,     1,     3,     2,
       2,     2,     0,     3,     1,     1,     2,     2,     2,     2,
       1,     0,     1,     2,     6,     4,     6,     4,     6,     8,
       1,     1,     1,     2,     1,     2,     1,     1,     1,     3,
       3,     3,     3,     2,     2,     1,     3,     1,     1,     1,
       1,     3,     1,     1,     0,     1,     1,     1,     8,    11,
       9,     1,     1,     3,     0,     1,     3,     1,     0,     1,
       0,     1,     0,     1,     3,     1,     1,     1,     3,     0,
       2,     2,     0,     2,     0,     1,     0,     1,     1,     1,
       3,     3,     1,     1,     3,     3,     3,     3,     4,     3,
       2,     1,     1,     1,     1,     1,     3,     1,     1,     3,
       3,     1,     2,     4,     4,     2,     3,     5,     5,     1,
       1,     9,     9,     1,     2,     4,     4,     4,     2,     2,
       3,     1,     3,     6,     2,     0,     3,     3,     4,     4,
       4,     4,     3,     2,     1,     1,     0,     1,     1,     0,
       1,     5,     1,     0,     1,     0,     3,     1,     3,     4,
       3,     1,     1,     0,     2,     2,     0,     2,     2,     1,
       1,     1,     0,     2,     4,     5,     4,     2,     3,     1,
       1,     1,     1,     2,     2,     1,     1,     1,     1,     1,
       1,     3,     0,     1,     3,     1,     1,     2,     2,     0,
       1,     3,     1,     0,     1,     2,     3,     2,     4,     2,
       3,     2,     0,     1,     2,     0,     4,     5,     2,     0,
       1,     3,     2,     3,     2,     3,     2,     3,     1,     4,
       3,     4,     5,     4,     5,     4,     5,     2,     4,     1,
       1,     0,     1,     4,     5,     4,     0,     2,     2,     2,
       1,     1,     0,     4,     2,     1,     2,     2,     4,     6,
       4,     0,     2,     6,     2,     1,     3,     4,     0,     2,
       0,     2,     0,     1,     3,     3,     2,     0,     2,     3,
       5,     6,     2,     3,     3,     4,     0,     1,     1,     1,
       1,     1,     2,     4,     1,     1,     1,     1,     2,     3,
       3,     0,     1,     1,     1,     1,     1,     2,     2,     2,
       2,     2,     1,     3,     0,     1,     1,     1,     1,     5,
       2,     1,     1,     1,     1,     4,     1,     2,     2,     1,
       3,     3,     2,     1,     0,     5,     2,     5,     2,     1,
       3,     3,     0,     1,     1,     1,     1,     1,     1,     3,
       3,     3,     3,     3,     3,     3,     0,     1,     4,     1,
       3,     3,     5,     2,     2,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     2,     2,
       3,     3,     2,     2,     3,     5,     4,     6,     3,     5,
       4,     6,     4,     6,     5,     7,     3,     2,     4,     3,
       2,     3,     3,     4,     3,     4,     3,     4,     5,     6,
       6,     7,     6,     7,     6,     7,     3,     4,     4,     6,
       1,     1,     3,     2,     2,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     2,     2,
       5,     6,     6,     7,     1,     1,     2,     2,     4,     1,
       1,     1,     2,     2,     3,     5,     6,     8,     6,     6,
       4,     4,     1,     1,     1,     5,     1,     1,     4,     1,
       4,     1,     4,     1,     4,     1,     1,     1,     1,     1,
       1,     6,     4,     4,     4,     4,     6,     5,     5,     5,
       4,     6,     4,     5,     0,     5,     0,     2,     0,     1,
       3,     3,     2,     2,     0,     6,     1,     0,     3,     0,
       2,     2,     0,     1,     4,     2,     2,     2,     2,     2,
       4,     3,     5,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     4,     1,     4,     1,     4,     1,     2,     1,     2,
       1,     3,     1,     3,     1,     3,     1,     3,     3,     1,
       3,     3,     0,     1,     1,     1,     1,     1,     1,     1,
       1,     4,     3,     2,     3,     0,     3,     3,     2,     2,
       1,     0,     2,     2,     3,     2,     1,     1,     3,     5,
       1,     2,     4,     2,     0,     1,     0,     1,     2,     2,
       2,     3,     5,     1,     0,     1,     2,     0,     2,     1,
       0,     1,     0,     1,     3,     3,     2,     1,     1,     1,
       3,     1,     2,     1,     3,     1,     1,     1,     2,     1,
       1,     1,     1,     1,     2,     6,     2,     3,     5,     6,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     2,     2,     3,     3,     0,     1,
       1,     1,     1,     1,     1,     1,     1,     5,     3,     0,
       1,     1,     1,     1,     4,     7,     2,     0,     1,     1,
       1,     1,    13,    16,     1,     2,     0,     1,     0,     1,
       0,     2,     0,     1,     0,     6,     8,     6,     8,     6,
       8,     1,     2,     4,     3,     5,     1,     0,     1,     1,
       0,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     3,     1,     1,     1,     1,     1,     1,
       2,     1,     1,     2,     3,     3,     1,     3,     3,     2,
       3,     3,     3,     3,     1,     1,     1,     1,     3,     5,
       1,     1,     1,     1,     3,     2,     1,     4,     5,     5,
       4,     6,     1,     1,     1,     1,     1,     1,     0,     1,
       3,     1,     0,     7,     1,     2,     3,     2,     0,     2,
       0,     2,     4,     2,     1,     1,     1,     2,     3,     2,
       3,     4,     2,     1,     1,     1,     3,     2,     9,    11,
      12,    14,     3,     4,     4,     0,     7,    10,     2,     3,
       0,     4,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1
};

/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
   means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
     125,   202,     0,  1035,  1034,   202,     0,  1011,   202,   396,
     331,     0,  1104,     0,   202,     0,   125,     0,     0,     0,
       0,   202,   463,     0,  1103,   202,     0,  1078,     0,     0,
       0,     0,     0,     2,     4,     7,    16,    26,    22,     0,
      24,    14,    19,     6,    28,    15,    18,    29,    11,    27,
     430,   417,   465,   429,   124,   433,    25,    13,    21,     5,
      10,    20,  1017,    32,    23,    30,    17,     8,    31,    33,
       0,     9,    34,    12,   201,   200,   194,     0,     0,     0,
       0,     0,   195,   955,  1122,  1123,  1124,  1125,  1126,  1127,
    1128,  1129,  1130,  1131,  1132,  1133,  1134,  1135,  1136,  1137,
    1455,  1138,  1139,  1140,  1407,  1408,  1456,  1409,  1410,  1141,
    1142,  1143,  1144,  1145,  1146,  1147,  1148,  1411,  1412,  1149,
    1150,  1151,  1152,  1153,  1413,  1457,  1154,  1155,  1156,  1157,
    1158,  1458,  1159,  1160,  1161,  1162,  1163,  1164,  1165,  1166,
    1167,  1459,  1168,  1169,  1170,  1460,  1171,  1172,  1173,  1174,
    1175,  1176,  1414,  1415,  1177,  1178,  1179,  1180,  1181,  1182,
    1183,  1184,  1185,  1186,  1187,  1188,  1189,  1190,  1191,  1192,
    1193,  1194,  1195,  1196,  1197,  1198,  1199,  1200,  1201,  1202,
    1203,  1204,  1416,  1205,  1206,  1207,  1417,  1208,  1209,  1210,
    1418,  1211,  1212,  1213,  1461,  1462,  1214,  1215,  1216,  1217,
    1218,  1419,  1219,  1220,  1221,  1222,  1223,  1224,  1463,  1225,
    1226,  1227,  1228,  1229,  1230,  1231,  1232,  1233,  1234,  1235,
    1464,  1420,  1236,  1237,  1238,  1239,  1421,  1422,  1423,  1240,
    1465,  1466,  1241,  1467,  1242,  1243,  1244,  1245,  1246,  1247,
    1468,  1248,  1469,  1249,  1250,  1251,  1252,  1253,  1254,  1255,
    1256,  1257,  1258,  1259,  1260,  1261,  1262,  1263,  1264,  1265,
    1266,  1267,  1424,  1470,  1425,  1268,  1269,  1270,  1426,  1271,
    1272,  1471,  1273,  1427,  1274,  1428,  1275,  1276,  1277,  1278,
    1279,  1280,  1281,  1282,  1283,  1429,  1472,  1284,  1473,  1430,
    1285,  1286,  1287,  1288,  1289,  1290,  1291,  1292,  1293,  1294,
    1295,  1431,  1296,  1297,  1432,  1298,  1299,  1300,  1301,  1302,
    1303,  1304,  1305,  1306,  1307,  1308,  1309,  1433,  1310,  1311,
    1312,  1313,  1314,  1315,  1316,  1317,  1318,  1319,  1320,  1321,
    1322,  1323,  1324,  1325,  1326,  1327,  1474,  1328,  1329,  1330,
    1434,  1331,  1332,  1333,  1334,  1335,  1336,  1337,  1338,  1339,
    1340,  1341,  1342,  1343,  1344,  1345,  1435,  1346,  1347,  1348,
    1475,  1349,  1350,  1436,  1351,  1352,  1353,  1354,  1355,  1356,
    1357,  1358,  1359,  1360,  1361,  1362,  1363,  1437,  1364,  1365,
    1366,  1476,  1367,  1368,  1369,  1370,  1371,  1438,  1439,  1372,
    1373,  1440,  1374,  1441,  1375,  1376,  1377,  1378,  1379,  1380,
    1381,  1382,  1383,  1384,  1385,  1386,  1387,  1388,  1389,  1390,
    1391,  1442,  1443,  1392,  1477,  1393,  1394,  1395,  1396,  1397,
    1398,  1399,  1400,  1401,  1402,  1403,  1444,  1445,  1446,  1447,
    1448,  1449,  1450,  1451,  1452,  1453,  1454,  1404,  1405,  1406,
    1107,     0,     0,   937,   956,   957,   962,   197,   395,   125,
       0,     0,     0,     0,     0,   325,   324,  1003,   330,     0,
       0,   955,    96,  1298,    94,   935,   956,     0,   346,   347,
       0,   355,     0,   344,     0,   365,   357,   366,   358,   341,
     359,   348,   340,     0,   367,   342,     0,     0,     0,   198,
     163,   331,   125,     0,  1022,  1023,  1021,  1012,  1017,  1024,
    1025,   954,  1066,  1065,   152,   979,  1095,  1438,  1372,  1105,
    1096,  1093,  1094,   199,   462,   460,     0,   922,  1251,  1334,
    1344,  1438,  1043,  1046,     0,   196,     0,   434,   565,   931,
    1077,     0,  1082,     0,  1312,   438,   441,   968,   439,   430,
       0,     0,     1,   125,     0,     0,     0,   459,   459,     0,
     459,     0,   422,   430,   425,   429,     0,  1016,  1091,  1102,
    1438,  1372,  1099,  1224,     0,     0,  1224,     0,  1224,     0,
    1224,     0,     0,   914,     0,   915,   938,   981,   982,   980,
       0,   983,   298,   329,   328,   327,   326,   331,  1224,   987,
       0,     0,     0,     0,   998,    97,    95,   353,   354,     0,
     345,   343,     0,  1224,   364,   963,   360,  1224,   364,   933,
    1224,     0,     0,   159,     0,  1014,  1026,  1442,  1041,     0,
    1042,  1032,  1020,  1027,  1028,  1029,   125,     0,     0,     0,
       0,  1097,     0,     0,     0,   940,   942,   943,   850,   953,
     917,  1408,  1409,  1410,   906,     0,  1411,  1412,  1413,  1457,
     789,   776,   785,   790,   777,   779,   786,  1414,  1415,   730,
    1192,  1416,  1417,   951,  1418,  1421,  1422,  1423,   781,   783,
    1424,  1425,     0,   952,  1427,  1428,  1280,  1430,  1431,  1433,
    1434,   787,  1436,  1437,  1438,  1439,  1440,  1441,   950,   788,
    1443,     0,     0,     0,   928,     0,   917,   761,     0,   604,
     605,   627,   628,   606,   633,   634,   636,   607,     0,   927,
     669,   804,   760,   772,     0,     0,   759,   754,   445,   923,
       0,   755,   939,   941,   907,   445,   921,  1044,  1049,  1045,
       0,     0,     0,     0,     0,   567,   566,   932,  1076,  1074,
    1075,  1073,  1072,  1079,     0,  1081,  1017,   862,     0,   440,
       0,     0,     0,   420,   419,     3,     0,     0,  1084,     0,
     457,   458,     0,     0,     0,     0,     0,     0,     0,     0,
     513,   479,   480,   482,   510,   514,   522,     0,   426,     0,
     968,  1100,     0,     0,     0,   112,   112,     0,     0,     0,
       0,     0,    89,    38,    82,     0,     0,     0,     0,   177,
     190,     0,     0,     0,     0,     0,   187,     0,     0,   170,
      40,   164,   166,     0,   112,     0,    36,     0,     0,     0,
      42,     0,     0,     0,     0,   764,   866,   465,   864,   937,
       0,   913,     0,   970,  1478,  1479,  1480,  1481,  1482,  1483,
    1484,  1485,  1486,  1487,  1488,  1489,  1490,  1491,  1492,  1493,
    1494,  1495,  1496,  1497,  1498,  1499,  1500,  1501,  1502,  1503,
    1504,  1505,  1506,  1507,  1508,  1509,  1510,  1511,  1512,  1513,
    1514,  1515,  1516,  1517,  1518,  1519,  1520,  1521,  1522,  1523,
    1524,  1525,  1526,  1527,  1528,  1529,  1530,  1531,  1532,  1533,
    1534,  1535,  1536,  1537,  1538,  1539,  1540,  1541,  1542,  1543,
    1544,  1545,  1546,  1547,  1548,  1549,  1550,  1551,  1552,  1553,
    1554,   910,   909,   936,   971,   972,   973,   974,   916,     0,
       0,   392,     0,     0,   984,     0,  1224,   158,  1224,   298,
       0,   298,   997,  1000,   356,   352,   350,   349,   351,     0,
     362,   363,     0,   335,     0,   964,     0,     0,   337,     0,
       0,     0,     0,   125,     0,   171,  1037,  1038,  1036,     0,
       0,  1019,   174,   191,  1031,  1040,  1030,  1039,  1018,  1013,
    1055,  1054,  1063,   153,     0,   960,   615,   644,   622,   644,
     644,   611,   611,   624,   612,   613,   649,     0,   644,   611,
     616,     0,   614,   652,   652,   639,   869,   596,   597,   598,
     599,   625,   626,   600,   631,   632,   601,   666,     0,   611,
     961,   125,  1098,  1106,     0,   757,   643,   630,   905,     0,
       0,   638,   637,     0,     0,     0,     0,     0,   620,   619,
     618,   763,   872,     0,   617,     0,     0,   644,   644,   642,
     692,     0,   621,     0,     0,   885,     0,   891,     0,     0,
       0,   648,     0,   646,     0,     0,   693,   673,   674,   761,
     862,     0,   756,   762,   946,     0,     0,   666,   926,   850,
       0,   847,   848,   849,     0,     0,     0,   920,     0,   858,
       0,     0,   707,   856,     0,   710,     0,     0,     0,     0,
     844,   845,   846,   838,   839,   840,   841,   842,   843,   854,
     837,   689,     0,     0,   806,     0,   688,     0,     0,   529,
       0,   944,   908,   529,  1057,  1061,  1062,  1060,     0,  1056,
    1048,  1047,  1052,  1050,  1053,  1051,     0,  1070,     0,  1067,
     526,     0,   442,     0,     0,  1090,     0,   119,     0,  1085,
       0,   437,   436,   466,   467,   473,   435,   499,   500,     0,
       0,     0,     0,   519,   517,   490,   483,   489,     0,     0,
     487,     0,   491,   669,   512,   424,   477,   478,   481,   423,
       0,   515,     0,   525,   513,   482,     0,  1092,  1101,     0,
       0,     0,     0,     0,  1224,     0,     0,    73,    54,   250,
       0,   111,     0,     0,     0,     0,     0,     0,     0,    81,
      78,    79,    80,     0,     0,     0,     0,   175,   176,   189,
       0,   180,   181,   178,   182,   183,     0,     0,   168,   169,
       0,     0,     0,     0,   167,     0,     0,     0,     0,     0,
       0,     0,     0,   465,   465,   465,   770,     0,     0,   464,
       0,     0,   911,   914,   382,   306,     0,   296,     0,     0,
       0,     0,     0,   331,   990,   988,   986,   989,   991,     0,
       0,   155,   157,     0,   295,   269,     0,  1002,  1224,   999,
     286,     0,   364,   361,   965,     0,   364,   934,     0,   364,
     162,  1224,   298,     0,  1015,  1033,   172,   192,   173,   193,
       0,   154,     0,   596,   592,   588,   655,   656,   657,   654,
     667,   653,     0,   602,   658,   978,     0,   608,   611,   977,
       0,   918,     0,     0,   904,   900,     0,     0,     0,     0,
       0,     0,   873,   876,   877,   878,   875,   879,   874,     0,
       0,   880,     0,     0,     0,   641,   640,     0,   836,   847,
     848,   849,   844,   845,   846,   838,   839,   840,   841,   842,
     843,   860,     0,     0,     0,     0,     0,     0,     0,     0,
     731,     0,     0,   831,     0,   862,   890,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   862,   896,     0,
     917,     0,     0,     0,     0,   947,   670,   684,   685,   686,
     690,   976,   975,   925,     0,   919,     0,     0,   671,   698,
       0,   897,   726,     0,   714,     0,   706,     0,   712,   716,
     694,   709,     0,   691,     0,   920,   859,     0,   857,     0,
     681,   682,   683,   675,   676,   677,   678,   679,   680,   687,
     835,   833,   834,     0,     0,     0,   814,     0,     0,   711,
    1217,  1251,     0,   456,   456,   456,   444,   454,   924,     0,
     582,   465,   582,     0,   666,   568,   968,  1080,  1068,  1069,
     863,   967,   125,     0,  1088,     0,     0,     0,   131,   114,
       0,  1086,     0,   147,   529,     0,   917,     0,   471,   472,
       0,   476,  1434,  1331,     0,     0,     0,     0,   492,   520,
       0,   511,     0,   940,   493,   939,   494,   497,   498,   488,
     521,   929,   523,     0,   516,   428,   427,   527,     0,    39,
       0,  1224,    56,     0,     0,     0,     0,     0,     0,   205,
     241,   205,    93,  1224,   364,  1224,   364,  1126,  1193,  1345,
       0,    52,    85,     0,   274,   105,     0,   259,   303,    75,
      90,    98,     0,     0,    41,   165,   179,   184,   101,   188,
     185,  1007,   186,   112,     0,    37,     0,    99,     0,  1005,
       0,     0,    43,   103,  1009,     0,     0,     0,     0,   865,
     765,   867,   868,   913,     0,   381,     0,   297,     0,   391,
     371,   372,   382,     0,   298,   987,     0,     0,     0,     0,
       0,   289,   287,   317,     0,   294,   288,   296,     0,     0,
     245,     0,  1120,     0,     0,     0,     0,   334,   966,   336,
       0,   338,     0,     0,  1064,   593,   589,     0,     0,     0,
       0,     0,     0,     0,     0,   870,   609,   461,     0,     0,
       0,   901,     0,     0,   802,     0,   778,   780,   610,   792,
       0,   623,   782,   784,     0,   851,     0,     0,     0,   793,
     733,   734,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   749,
     748,   794,   830,     0,     0,   888,   889,   795,   651,   650,
     652,   652,     0,     0,   895,     0,     0,     0,   800,   758,
     863,   635,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   715,   708,     0,   713,   717,     0,     0,     0,   702,
       0,     0,   700,   727,   696,     0,     0,   728,     0,     0,
       0,   771,   456,   456,   456,   456,   453,   455,     0,     0,
       0,     0,  1331,     0,   551,   528,   530,   538,   551,   556,
     773,   580,   774,   931,     0,   502,     0,   502,     0,  1058,
    1071,     0,  1089,     0,   136,   118,   138,   137,     0,   145,
       0,   917,     0,   136,   120,     0,   139,     0,  1088,     0,
     151,   468,     0,   852,   476,     0,   470,   496,   495,     0,
     486,   518,   484,     0,   524,     0,     0,     0,   249,     0,
       0,     0,   205,     0,     0,   313,     0,   300,    74,     0,
       0,     0,    48,     0,    66,    58,    44,    72,     0,     0,
      77,     0,    70,    87,    88,    86,    91,     0,   233,   215,
     246,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   768,   769,   766,   465,   912,   413,
     414,   170,   412,   307,     0,     0,  1002,   985,     0,     0,
     158,   298,     0,   273,   269,     0,   267,   266,   268,     0,
    1121,   163,     0,  1116,  1001,     0,     0,   996,   364,     0,
       0,     0,   594,     0,   660,   661,   662,   663,   664,   665,
       0,   659,   603,   629,     0,   903,   899,     0,   775,   871,
       0,   861,   883,   882,   732,   744,   745,   746,   884,     0,
       0,     0,   741,   742,   743,   735,   736,   737,   738,   739,
     740,   747,   893,   892,   886,   887,   647,   645,     0,   797,
     798,   799,   894,   832,   666,   948,   672,     0,     0,   699,
     898,   718,     0,     0,     0,   695,   851,     0,     0,     0,
       0,     0,   704,     0,     0,     0,   817,   812,   813,     0,
       0,     0,     0,   447,   446,   452,   551,   556,     0,   430,
       0,   538,     0,   550,   536,   549,     0,     0,   562,   560,
       0,   562,     0,   562,     0,   532,     0,   552,   534,   549,
       0,   572,   932,   581,     0,   509,   765,   509,     0,   443,
    1087,     0,  1083,     0,     0,     0,   126,   123,   113,     0,
       0,   148,   136,   127,     0,   469,   474,   475,   485,   930,
     106,   205,     0,     0,    55,     0,   315,   261,   293,   276,
       0,     0,     0,   206,     0,   281,     0,    47,    67,     0,
      63,     0,    92,     0,     0,     0,     0,     0,    50,    62,
       0,    45,     0,   364,   364,    53,   260,   212,  1280,     0,
     838,   839,   210,   302,   207,   308,   209,   211,   611,   208,
     305,   102,  1008,     0,   100,     0,  1006,   109,   107,   104,
    1010,     0,   394,   374,     0,     0,  1224,     0,  1002,   156,
     295,     0,   323,   245,   318,     0,  1120,  1118,     0,  1115,
       0,     0,     0,   339,     0,     0,   590,   595,   668,   902,
     791,   801,   881,     0,     0,     0,     0,   796,   949,   724,
     722,   719,     0,   720,   703,     0,     0,   701,   697,     0,
     729,   803,     0,   819,   816,   451,   450,   449,   448,   537,
     535,     0,   540,   959,   958,   547,     0,   531,     0,   561,
     557,     0,   558,     0,     0,   559,     0,     0,   533,     0,
     958,     0,   579,     0,     0,   808,   945,   808,  1059,   135,
     115,     0,   116,   146,     0,     0,     0,     0,   140,   368,
       0,   311,    57,     0,   293,     0,   205,   278,   277,   280,
     275,   279,   282,     0,     0,     0,     0,     0,   262,     0,
       0,     0,   226,     0,     0,   293,   299,   222,   223,   332,
       0,     0,     0,    59,    49,    46,    51,    60,     0,     0,
      61,    64,   587,    76,    69,   611,   611,     0,     0,     0,
     767,     0,   370,   383,   377,   170,     0,     0,     0,     0,
     295,     0,     0,     0,  1120,     0,     0,   203,     0,   242,
       0,   160,  1119,     0,  1108,     0,   994,   995,     0,     0,
     591,   750,     0,     0,     0,   721,   725,   723,   705,   805,
       0,   465,   575,     0,   578,   539,     0,     0,   541,     0,
       0,   543,   545,     0,     0,     0,     0,   583,     0,     0,
       0,   935,     0,   501,   503,   506,   505,   508,     0,   432,
     431,     0,     0,     0,   149,     0,   142,   142,     0,   128,
     853,     0,   205,     0,   292,   312,   240,     0,     0,   224,
       0,   230,     0,   264,   265,   263,   225,   293,   298,   227,
     333,     0,    68,     0,    84,   611,     0,   304,   110,   108,
     415,     0,   389,   397,   402,   380,     0,   380,     0,   399,
     403,   380,   398,   380,   393,   394,     0,  1002,  1115,     0,
       0,   269,   163,  1117,   258,   251,   252,   253,   254,   255,
     256,   257,   272,   271,   243,   244,     0,     0,     0,   996,
       0,   751,     0,   752,     0,   822,   580,     0,     0,   574,
       0,   548,   564,     0,   544,   542,     0,   553,     0,   587,
       0,   555,   507,     0,   807,   809,     0,     0,   122,     0,
     582,     0,     0,   144,   144,   130,     0,   298,   314,     0,
     284,   291,   283,     0,     0,   221,     0,   228,   322,   214,
     586,     0,    71,     0,   309,   384,     0,   387,     0,   386,
     390,   385,   379,     0,   410,     0,     0,     0,     0,     0,
       0,   369,   373,     0,  1109,     0,  1115,   245,  1120,     0,
    1112,     0,     0,  1002,   753,   818,     0,     0,     0,   573,
     576,     0,   546,     0,     0,   584,   585,   554,   504,     0,
       0,   117,   142,   121,   150,   141,   473,   143,   473,     0,
     322,   270,     0,     0,   248,   214,     0,   239,     0,    65,
      83,   310,   416,     0,   375,   411,   400,   405,     0,   409,
     407,   406,   401,   404,     0,   295,  1110,   204,   161,  1113,
    1114,     0,   582,  1407,  1170,  1379,     0,   820,   823,   821,
     815,     0,   563,   571,   810,   811,   144,   476,   476,   582,
     239,   285,   290,     0,   229,   231,   319,   320,   321,     0,
     235,   232,   236,     0,   388,     0,   408,  1115,     0,   992,
       0,   827,   826,   825,   829,   828,   577,     0,   569,   473,
     133,   132,   129,   205,   247,     0,     0,     0,   237,     0,
     238,   213,   376,  1111,  1002,     0,     0,   476,   316,   218,
       0,   217,     0,   301,   234,   582,   824,     0,   134,   216,
     220,   219,   993,   570
};

/* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    32,    33,    34,    35,  1804,  1805,  1806,  1530,   792,
    2422,  1531,   793,   794,  1808,    36,    37,  1193,   494,  1468,
    1136,  2166,    39,  1759,  1473,  1763,  2294,  1992,  1758,  1765,
    2403,  2476,  1760,  1474,  2295,  1475,    40,    41,  1261,    42,
     613,    43,  1262,  1220,   970,   812,  1210,   962,    44,    76,
      45,  1795,  2053,  2489,  1818,  2583,  2196,  2197,  1532,  2540,
    2541,  1797,  1860,  1202,  2534,  1591,  2362,  1536,  1519,  2198,
    1600,  2304,  2082,  1533,  2023,  1592,  2183,  2409,  1269,  1593,
    2410,  2176,  1594,  1245,  1265,  2025,  2542,  1537,  1246,  2054,
    1189,  1595,  2487,  1596,   459,  2201,    46,   486,   487,   604,
     943,   488,   495,    48,  1582,  2225,  2493,  2226,  2433,  1576,
    2222,  2430,  2330,  1249,  2223,   450,  2344,  2494,  1841,  2331,
     496,   697,    51,    52,    53,   541,   535,   536,  1109,  1446,
    1728,   762,   516,   517,   551,  1239,  1143,  1144,  1481,  1776,
    1168,  1169,   771,   772,  1156,  1160,  1161,  1494,  1487,  1149,
    1985,  2283,  2284,  2285,  2155,  1164,  1165,   774,   775,   776,
    1173,  1504,    55,  1450,  1735,  1736,  1737,  1963,  1964,  1978,
    1974,  2140,  2271,  1738,  2148,  2558,  1739,  2262,  2263,  2379,
    1981,  1745,  2276,  2277,  2324,   996,  1295,   997,   698,   998,
    1307,   699,  1034,  1000,   700,   701,   702,  1003,   703,   704,
     705,   706,  1017,   707,   708,  1051,  1303,  1304,   747,  1359,
     710,   711,   712,  1741,   713,  1104,  1436,  2289,  2394,  2395,
    1721,  1947,  2123,  2261,  2458,  2517,  2518,   714,  1433,  1099,
    1100,   715,  2056,  1102,  1352,  1378,   827,   828,  1008,  1329,
    1330,  1355,  1648,  1362,  1367,  1675,  1676,  1379,  1402,   716,
    1314,  1315,  1632,  1019,   717,   575,   832,   576,  1015,  1397,
     725,   718,   719,  1500,   528,  2267,   609,   912,   720,   721,
     722,   723,   724,  2135,   443,  2477,   945,   752,   830,  1534,
    1393,    56,   630,   580,    57,   924,  1256,    58,  2247,  2092,
     933,  1271,  1604,   460,    59,    60,    61,   558,   965,   497,
     966,   967,   619,    62,   971,   621,   622,    63,   522,   523,
     972,  1120,   973,    64,   503,    65,   743,   532,   744,   746,
     499,   759,  1754,  1464,    67,    68,   510,   511,    69,    70,
     524,    71,    72,  2244,   500,  1863,   930,   466,   445,   446,
     917
};

/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
   STATE-NUM.  */
#define YYPACT_NINF -2257
static const int yypact[] =
{
    3894,  -131,   -15, -2257, -2257,  -131, 28098, -2257,  -131,    24,
     976, 29890, -2257, 24871,  -131, 34370,   843,   322, 34370, 34370,
   30338,  -131,   203, 34818, -2257,  -131, 30786,   -22,   -95, 35266,
   34370,   682,   414,   126, -2257, -2257, -2257, -2257, -2257,    38,
   -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257,
      68, -2257,   459,   104,   447,   -36, -2257, -2257, -2257, -2257,
   -2257, -2257,   188, -2257, -2257, -2257, -2257, -2257, -2257, -2257,
   31234, -2257, -2257, -2257, -2257, -2257, -2257, 35714, 34370, 36162,
   31682, 36610, -2257,    74, -2257, -2257, -2257, -2257, -2257, -2257,
   -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257,
   -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257,
   -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257,
   -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257,
   -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257,
   -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257,
   -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257,
   -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257,
   -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257,
   -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257,
   -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257,
   -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257,
   -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257,
   -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257,
   -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257,
   -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257,
   -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257,
   -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257,
   -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257,
   -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257,
   -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257,
   -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257,
   -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257,
   -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257,
   -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257,
   -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257,
   -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257,
   -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257,
   -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257,
   -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257,
   -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257,
   -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257,
   -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257,
   -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257,
   -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257,
   -2257,    40,   184, -2257,    92, -2257, -2257, -2257, -2257,   682,
   34370,   245,   378,   195, 37058, -2257, -2257, -2257, -2257,   331,
     494, -2257, -2257, 32130, -2257, -2257, -2257,   433, -2257, -2257,
     367, -2257,    44, -2257,   347, -2257, -2257, -2257, -2257, -2257,
   -2257, -2257, -2257,   436, -2257, -2257, 37506, 37954, 38402, -2257,
     330,   544,   755, 17853, -2257, -2257, -2257, -2257,   188, -2257,
   -2257, -2257, -2257, -2257,  -182,   351, -2257,   379,   630, -2257,
   -2257, -2257,   353, -2257, -2257,   578,  7655,  7655, 38850,   322,
   38850,   422, -2257, -2257,   -30, -2257, 19205, -2257,   416,   184,
   -2257,   196,   723, 10005, 34370,   424, -2257,   443,   424,   456,
     467,   447, -2257,  3894,   751,   744, 30786,   216,   216,   905,
     216,   904,  1019, -2257,  1039, -2257,   520, -2257, 34370, -2257,
     543,   795,   353,   869,   978,   708,   884,  4035,   889,  1111,
     898,  1114,  5775, 10005, 22042, -2257,   184, -2257, -2257, -2257,
     611, -2257,   579, -2257, -2257, -2257, -2257,   544,   832, -2257,
     670, 39298, 39746, 34370,  1021, -2257, -2257, -2257, -2257,   674,
   -2257, -2257,   122,   983,    23,   654, -2257,   999,    35, -2257,
    1009,   891, 10005, -2257,   785, -2257, -2257,   -95, -2257,  -177,
   -2257, -2257, 23834, -2257, -2257, -2257,   755, 23834, 10005, 43778,
    1147, -2257,   963, 34370,   722, -2257, -2257, -2257, -2257, -2257,
   -2257,  1190,    79,  1197, 10005,   742,    79,    79,   743,  1062,
   -2257, -2257, -2257,   103,   760,   765, -2257,    85,    85, -2257,
     955,   778,   801, -2257,    91,  1257,  1258,    96,   814,   824,
     212,    79, 10005, -2257,   828,    85,   837,   838,   842,  1294,
     855, -2257,  1324,   874,   125,   128,   880,   899, -2257, -2257,
     106, 10005, 10005, 10005, -2257,  6715, -2257,   184,   322, -2257,
   -2257, -2257, -2257, -2257, -2257, -2257,   911, -2257,   110,  3425,
   -2257,   934, -2257, -2257,  1058, 10005, -2257, -2257,   -49, -2257,
     113, -2257, -2257, -2257,   184,  1131,   901, -2257, -2257, -2257,
     132,  1287, 22938, 23386, 34370, -2257, -2257,   184, -2257, -2257,
   -2257, -2257, -2257, -2257,   282, -2257,   188, 24911,   409,   424,
   34370, 34370,  1351, -2257, -2257, -2257, 30786, 34370, 40194,  1037,
   -2257, -2257,   447,   447, 10005,   447,   123,   980,  8125, 10475,
    1234,  1143,    95,   460,  1264, -2257,  1163,   904,  1019, 10005,
     443, -2257,  1211, 34370, 28546,   571,   656,   972,  1056,   984,
     -70,  1366, -2257,   996, -2257,  1080, 34370, 44212,   135, -2257,
    1420,   135,   135,   573,  1427,  1093,   172,  1243,   -44,   206,
     996,  2329, -2257, 30786,    58,   412,   996, 34370,  1101,   420,
     996, 10005, 10005, 10005,  1022, -2257, 24911,   -90, -2257,   841,
     868, 21593,  1018, -2257, -2257, -2257, -2257, -2257, -2257, -2257,
   -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257,
   -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257,
   -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257,
   -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257,
   -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257,
   -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257,
   -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257,
   -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257,  1108,
   34370,  1067,   -92,  1352,  1407, 34370,  1250,  2329,  1254,  1043,
    1477,   579, -2257, 40642, -2257, -2257, -2257, -2257, -2257, 34370,
   -2257, -2257, 34370, -2257, 25858,  1045, 34370, 34370, -2257, 34370,
   34370,   512, 41090,   755, 27650, -2257, -2257, -2257, -2257,   702,
     774, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257,
   -2257, -2257, -2257,  1044,   541, -2257, -2257,  1096, -2257,  1096,
    1096,  1051,  1051,  1053, -2257, -2257, -2257,   212,  1096,  1051,
   -2257, 44212, -2257,   477,   480, -2257, -2257,  1490, -2257, -2257,
   -2257, -2257, -2257, -2257, -2257, -2257, -2257,   713,   547,   476,
   -2257,   682, -2257, -2257, 10005,   184, -2257,  1063, 24911,  1103,
   10005, -2257, -2257, 10005,  1064,  1523,  1523, 10005, -2257, -2257,
   -2257, -2257,   164,  1523, -2257,  1523,  1523,  1096,  1096, -2257,
    4310, 10005, -2257, 21007, 10005, 12825,  8595, 10005,  1150,  1151,
    1523, -2257,  1523, -2257, 10005,  7185,  4310,  1527,  1527,  1570,
    4539,  1068,   184,   184, -2257,  1523,    53,    61, -2257,   140,
   43778, 10005, 10005, 10005, 10005, 25410,  1154,    80, 34370, 10005,
    1079,   903, -2257, 10005,  1292, -2257,  1082, 10005,  1162,   558,
   10005, 10005, 10005, 10005, 10005, 10005, 10005, 10005, 10005, -2257,
   -2257, 14694,   157,  1381,  1399,  -154,   372, 32578,  7655,  1391,
    5775, -2257,    70,  1391, -2257, -2257, -2257, -2257,   116, -2257,
   -2257, -2257, -2257,  1044, -2257,  1044,  1090, 34370,   196, 29442,
   -2257, 10005, -2257,   589,  1097,  1149,    10,  1528, 34370, -2257,
   19655,  1362, -2257,  1095, -2257, 24279,  1362, -2257, -2257, 13284,
    1214,  1359,  1308, -2257, -2257, -2257,  1105, 24911, 10945, 10945,
   -2257,   251, 24911,   516, -2257, -2257, -2257, -2257, -2257, -2257,
     484, -2257, 34370,   -33,  1234,   460,   629, -2257, -2257,  1183,
    1110, 41538, 34370,  1368,  1330,  1373,  -116, -2257, -2257, -2257,
   43778, -2257, 34370, 34370, 41986, 42434, 26306, 34370, 25858, -2257,
   -2257, -2257, -2257, 34370,   720, 34370, 44628, -2257, -2257, -2257,
     135, -2257, -2257, -2257, -2257, -2257, 34370, 34370, -2257, -2257,
     135, 34370, 34370,   135, -2257,  1222, 34370, 34370, 34370, 34370,
    1316, 34370, 34370,   -86,   -86,  1313, -2257,  9065,  1119, -2257,
   10005, 10005, -2257, 10005,  1285, -2257,   673, -2257,  1325,    37,
    1167, 34370, 34370,   981, -2257, -2257, -2257, -2257, -2257,  1125,
    1448, -2257,  2329,  1449, 28994,   642,   575,  1168,  1349, -2257,
   -2257,  1335,    23, -2257, -2257, 25858,    35, -2257,  1336,   108,
   -2257,  1374,   579,  1575, -2257, -2257, -2257, -2257, -2257, -2257,
   23834, -2257, 10005,  1579,  1152,  1161,  1240,  1242,  1244, -2257,
    1164,  1245,  1523, -2257, -2257, -2257, 43778, -2257,   640, -2257,
     680, -2257, 10005, 10005,    17, -2257, 24350,   687, 10005,  1169,
    1172,   695, -2257, -2257, -2257, -2257, -2257, -2257, -2257,  1174,
    1479, -2257,  1176,  1178,  1184, -2257, -2257,  2804, -2257, -2257,
   -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257, -2257,
   -2257, -2257,  1185,  1195, 24391,  1201, 12825, 12825,  6715,  1492,
   -2257, 12825,  1202, -2257,   726, 24297,  1194,  1203,  1223,  1224,
    1204,  1212, 24608,  9535, 10005,  9535,  9535, 24653,  1194,  1215,
   -2257, 10005,  1218,  1226,  1228, -2257, -2257,  5093,  5093,  5093,
    4310, -2257, -2257, -2257,  1229, -2257, 12825, 12825, -2257,   756,
    6715, -2257, -2257,  1526, -2257,   733, -2257,  1225, -2257, -2257,
    5116, -2257, 21007, 24945, 10005,   114, 10005,  1079, 10005,  1309,
    5093,  5093,  5093,   210,   210,    88,    88,    88,   272,   372,
   -2257, -2257, -2257,  1236,  1246,  1247,  1426,   855, 10005, -2257,
     845,   857, 34370,  3008,  4138,  4286, -2257, -2257, -2257, 16053,
    1289,   -90,  1289,  1523,    61, -2257,   443, -2257, -2257, -2257,
   24911, -2257,   682, 16053,  1290,  1302,  -122, 18304,  1457, -2257,
   34370, -2257, 34370, -2257,   -35,  1270, -2257, 10005, -2257, -2257,
     444,  1276,  1465,  1467,   803,   803,   251,  1470, -2257, -2257,
    1331, -2257, 10005,   645, -2257,   664, -2257, -2257, -2257, -2257,
    1272, -2257, -2257,  1515, -2257, -2257, -2257, -2257,  1358,   996,
   10005,  1497, -2257,    86,  1282,  1604,   209,  1563, 34370, -2257,
    1483, -2257,   566,  1607,   108,  1608,   108, 25858, 25858, 25858,
     728, -2257, -2257,   322, -2257, -2257,   786, -2257,   191, -2257,
   -2257, -2257,  1370,   514,   996,  2329, -2257, -2257, -2257, -2257,
   -2257, -2257, -2257,   134,   594,   996,  1371, -2257,  1376, -2257,
    1377,   595,   996, -2257, -2257,  1288,  1293,  1299, 10005, -2257,
   -2257, 24911, 24911, 24911,  1296, -2257,    97, -2257, 34370, -2257,
   -2257, -2257,  1285, 34370,   579, -2257,   461, 34370, 34370, 34370,
   34370, -2257, -2257, -2257,  1300,  1298, -2257, 43778,   -89,  1506,
    1505, 34370,  1342,   984,  1739,  1628, 34370, -2257, -2257, -2257,
   34370, -2257,  1630,   682, -2257,  1314,  1161,  1523,   105,    50,
      25,  1437,  1523,  1544,  1318, -2257, -2257, -2257,   787, 24869,
   10005, -2257,  1653, 43778, -2257,  4608, -2257, -2257, -2257, -2257,
   10005, -2257, -2257, -2257, 10005, -2257, 21007, 10005,  1633, -2257,
    1783,  1783,  4539, 43778, 12825, 12825, 12825, 12825,   403,   837,
   12825, 12825, 12825, 12825, 12825, 12825, 12825, 12825, 12825, 13754,
     408, -2257, -2257, 10005, 10005,  1639,  1633, -2257, -2257, -2257,
     -21,   -21, 43778,  1333,  1194,  1334,  1337, 10005, -2257,   184,
    4831, -2257,  1332,   322, 10005,  1896,  2647, 10005,   788, 10005,
    1642, -2257, -2257,  1341, -2257, -2257, 43778, 10005,  1344,  5179,
   12825, 12825,  5270, -2257, 21515, 10005,  6715, -2257,  1313,  1386,
   20105, -2257,  1441,  1441,  1441,  1441, -2257, -2257, 34370, 34370,
   34370, 16503,  1650, 15602, 33026,  1348,    71, -2257, 33026, 33474,
   -2257,  1350, -2257,   184, 10005,  1648,  1353,  1648,  1354, -2257,
   -2257,  1355,  1348, 10005,  1500, -2257, -2257, -2257,  1413, -2257,
     808, -2257,  1749,  1500, -2257,   812, -2257, 19655,  1290, 10005,
     184, -2257,  1365, -2257,  1276,   117, -2257, -2257, -2257,  1567,
   -2257, -2257, -2257, 34370, -2257, 34370,  5233,  1688, -2257, 34370,
   34370, 34370, -2257, 34370,   817,   668,  1372, -2257,   668,  1670,
      90,   984,   172,  3479,   369, -2257, -2257, -2257,  1445, 34370,
   -2257, 34370, -2257, -2257, -2257, -2257, -2257, 26306, -2257, -2257,
   -2257, 25858, 20558, 25858, 34370, 34370, 34370, 34370, 34370, 34370,
   34370, 34370, 34370, 34370, -2257, -2257, -2257,  1313, -2257, -2257,
   -2257,   206, -2257, -2257,    97,  1378,  1168,  1407, 42882,   822,
    2329,  1385,  1809, -2257,   642, 28994, -2257, -2257, -2257,  1776,
   -2257,   330,   107, -2257, -2257,   682, 34370,  1444,   108, 34370,
    1523,  1390, -2257,  1392, -2257, -2257, -2257, -2257, -2257, -2257,
    1389, -2257, -2257, -2257, 10005, 24911, -2257,  1393, -2257, 24911,
    5292, -2257, 24911,  1639, -2257,  1160,  1160,  1160,  3375,  1695,
      89,  1395,  1160,  1160,  1160,   242,   242,    63,    63,    63,
    1783,   408, 24911, 24911, -2257, -2257, -2257, -2257,  1397, -2257,
   -2257, -2257,  1194, -2257,    61, -2257,   237, 10005, 10005,  2189,
   -2257, 24963, 10005, 43778,   846,  2189,   219, 10005,  2863,  3199,
   10005, 10005, 24825, 21463,  1400, 10005, 43330, -2257, -2257, 34370,
   34370, 34370, 34370, -2257, -2257, -2257, 33026, 33474,  1396, 15151,
      71,  1401, 33922, -2257, -2257,  1403, 16053,  1657,  1596, -2257,
   16053,  1596,    46,  1596,  1662,  1495, 18755, -2257, -2257,  1409,
    1606, -2257,   613, 24911,  1824,  1706,   322,  1706,   322, -2257,
   24911,  7655, -2257,   682,  1268, 34370,   184,   -88, -2257,  1428,
   34370, -2257,  1500, 24911, 21007, -2257, -2257, -2257, -2257, -2257,
   -2257, -2257, 34370,   848, -2257,   852,   668, -2257,  1452, -2257,
     143,  1692,    84, -2257, 25858,  1987,   243, -2257,  1705,  1632,
   -2257,   135, -2257, 10005,   243,  1634,   145, 34370, -2257, -2257,
    1806, -2257, 43778,   108,   108, -2257, -2257, -2257,  1365, 44212,
     702,   774, -2257, -2257, -2257, -2257, -2257, -2257,   476, -2257,
    1433, -2257, -2257,  1504, -2257,  1508, -2257, -2257, -2257, -2257,
   -2257,  1425,  1430,    45, 34370,  1859,  1647,  1434,  1168, -2257,
   28994,   836,   124,  1505, -2257,    77,  1342, -2257,  1795,  1472,
    1637, 34370,  1438, -2257,  1871,  1442, -2257, -2257, -2257, 24911,
   -2257, -2257, -2257, 12825,  1745,  1447, 43778, -2257, -2257,  2189,
    2189, 24963,   866, -2257,  2189, 10005, 10005,  2189,  2189, 10005,
   -2257, -2257, 21481,  1631, -2257, -2257, -2257, -2257, -2257, -2257,
   -2257, 26754, 33026, -2257,  1458, -2257, 34370,    71, 16053, -2257,
   -2257,  2079, -2257, 16053,  1709, -2257, 16053, 28098, -2257, 34370,
    1466, 34370, -2257, 11415, 10005,  1486, -2257,  1486, -2257,   901,
   -2257,  -122, -2257, -2257,  1853, 16953,  1810, 10005, -2257, -2257,
    1473,   668, -2257,  1627,  1452,  1475, -2257, -2257, -2257, -2257,
   -2257, -2257, -2257,   872,  1476, 34370, 34370, 12825, -2257,   243,
     182,   109, -2257,  1734, 34370,  1452, -2257, -2257, -2257, -2257,
    1837,  1921,  1811, -2257, -2257, 24911, -2257, -2257,  1523,  1523,
   -2257, -2257,  1885, -2257, -2257,   476,   652, 20558, 34370, 34370,
   -2257, 25858, -2257,  1278, -2257,   206,  1842,   877,   682,  1815,
   28994,  1928,  1499, 34370,  1342,   120,   120, -2257,  1635, -2257,
    1638, -2257, -2257,   148, -2257, 34370, -2257, -2257, 16953,   682,
   -2257,  4014, 12825, 43778,   878, -2257,  2189,  2189,  2189, -2257,
    1912,  1313, -2257,   885,  1933, -2257, 34370,   890, -2257, 10005,
    1509, -2257, -2257, 16053,  2079,  1512,   906, -2257, 43778, 34370,
     908, 43778,  6245,  1511, -2257, -2257, 24911, 24911, 34370, -2257,
   -2257,  1555, 34370, 10005, -2257,   927,  1908,    14,   -14, 24911,
   -2257, 34370, -2257, 25858, -2257,   668, -2257, 25858, 10005, -2257,
     690,  3375,  1948, -2257, -2257, -2257, -2257,  1452,   579, -2257,
   -2257,  1796, -2257, 34370,  1573,   662,  1589, -2257, -2257, -2257,
   -2257,   929, 17403, -2257, -2257,  1954,   322,  1954,   383, -2257,
   -2257,  1954, -2257,  1954, -2257,  1430,   322,  1168,  1472, 34370,
     682,   642,   330, -2257, -2257, -2257, -2257, -2257, -2257, -2257,
   -2257, -2257, -2257, -2257, -2257, -2257,  1925,  1723,  1927,  1444,
     931,  4014,   933, -2257, 10005,   -28,  1350, 26754,  1529, -2257,
     945, -2257, 24911, 34370, -2257, -2257, 10005, -2257, 34370,  1885,
     949, -2257, -2257, 11415,  1524, -2257,  1962,   682, -2257, 21500,
    1289, 16953, 34370, 34370, 34370, -2257,  1651,   579,   668,   951,
   -2257,  1542, -2257, 21534,  1744, -2257,  1825, -2257,  1773,  1540,
   -2257, 10005, -2257,  1610, -2257, -2257, 25858, -2257, 27202, -2257,
   -2257, -2257, -2257,   322, -2257,   322,  1754, 34370, 22490,   322,
     322, -2257, -2257,  1976, -2257,  1545,  1472,  1505,  1342,  1746,
   -2257,  1751,  1546,  1168, -2257,  1194, 11885, 11885,  1554, -2257,
   -2257, 34370, -2257,   987,   988, -2257, -2257, -2257, -2257, 34370,
    1556, -2257,  1908, -2257, -2257, -2257,   194, -2257,   194, 19655,
    1773, -2257, 25858, 20558,  1775,  1540,   343,  1759,  2329, -2257,
   24911, -2257, -2257,   994, -2257, -2257, -2257, -2257, 34370,  1562,
   -2257,  1562, -2257, -2257,   682, 28994, -2257, -2257, -2257, -2257,
   -2257, 16953,  1289, 14224,  1693,    59, 24316, -2257, -2257, -2257,
   -2257,   998, -2257,  1714, -2257, -2257, 34370,  1276,  1276,  -164,
    1759, -2257, -2257,  1846, -2257, -2257, -2257, -2257, -2257,    83,
    1774, -2257,  1779,  1083, -2257, 27202,  1562,  1472,  1004, -2257,
    2010, -2257, -2257, -2257, -2257, -2257, -2257,  1580, -2257,   194,
   -2257, -2257, -2257, -2257, -2257,   168,   168,  1929, -2257,  1640,
   -2257, -2257, -2257, -2257,  1168, 12355, 10005,  1276,   668, -2257,
    2027, -2257,   112, -2257, -2257,  1289, -2257, 21552, -2257, -2257,
   -2257, -2257, -2257, -2257
};

/* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -2257, -2257, -2257,  1507, -2257, -2257, -2257,   247, -2257,   850,
   -2257,   235,  -478,   534, -2257, -2257, -2257,  -749,    21, -2257,
   -2257, -2257, -2257,    66,   295, -2257,  -338, -1613,   -96, -2257,
   -2117, -2191, -2257,  -413, -2077, -1411, -2257,  -877,   217, -2257,
   -1798, -2257,  -565,  -789,  -610,  -804, -2257,    32, -2257,   915,
    -875, -1492, -1982,  -416, -2257,  -494, -2257,  -237, -1484,  -468,
    -455, -2257, -2005,  -750, -2257,  1295,  -160, -2257,   561, -2257,
   -1795, -2257, -2257,   550, -2257,  -761, -2257, -2257, -1561,   225,
    -401, -1940, -2003,   504,  -577, -2257,  -457,   263, -1442, -2257,
     572, -2257,  -391, -2257,  -447, -1849, -2257, -2257, -2257,  1153,
    -598, -2257,    26, -2257, -2257, -2257, -2257, -2257, -1496,   508,
    -254, -2257,  -333, -2257, -2257, -2257, -2257,  -451,   252, -2257,
      64,    94,   -27,     3,    12,    22,    28,  1345,  1379, -2257,
   -1007,   724, -2257, -2257,  -543,   -34, -2257,   621, -2150, -1734,
    -374,   930,  1343,  1346, -2257,   614,   958, -1032, -1035, -2257,
     361, -2257,  -279, -2257,   129,  -367,   944, -2257,  1347, -2257,
   -2257, -2257, -2257,  -989,   657, -1662,   386, -1654, -1580,   166,
     154,  -495,  -147,    29, -2257, -2257,   397,  -243, -2257, -2257,
    -241, -1416, -2048,  -252,  -250,  -939,   851,  -784, -2257, -2257,
    -643,   638, -2257, -2257, -2257,   796,   939, -2257, -2257,  1121,
    1235, -2257,  -564,  1482,   696,  -661, -1036,  -883,  3105,  1429,
    -700,     0, -2257, -2008, -1351, -2257, -2257,    -5, -2257,  -318,
   -2257,  -317, -2257, -2257, -2257,  -301, -2256,  1055, -2257, -1013,
   -2257,  3272,   683, -2257, -1360,  -499,  -561,  -769, -1656, -2257,
   -2257, -2257, -2257, -2257, -2257, -1030, -1503,  -575,   749, -2257,
   -2257,   853, -2257, -2257, -2257,  -567,   925,  -504,  -655,   754,
   -2257,  -509,  1065, -2257,  1940,  -484,   377,  -844,    11, -2257,
    1903,     2,  1770, -2257,  1208,  -470,  -982,  -732, -2257,  -546,
   -2257, -2257, -2257,  -864, -2257,   587, -2257,  -873, -2257,  -195,
   -2257, -2257, -1786, -2257, -2257, -2257, -2257,  -360, -2257,  -422,
    -421, -2257, -2257,    19,  -621,  1230, -2257, -2257,   959, -2257,
     887, -2257,   290, -2257, -2257, -2257,  1054, -2257, -2257, -2257,
      33,  1423,   415, -2257,  1059, -2257, -2257, -2257, -2257, -2257,
     244, -2257,  -871, -1766,    56, -1991,  -910,    -6,  -412,  -304,
   -1776
};

/* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
   positive, shift that token.  If negative, reduce the rule which
   number is the opposite.  If zero, do what YYDEFACT says.
   If YYTABLE_NINF, syntax error.  */
#define YYTABLE_NINF -1461
static const yytype_int16 yytable[] =
{
     444,   968,   811,   608,   540,   921,   440,  1224,   726,   918,
     948,   777,   961,  1207,  1028,  1029,   606,   441,   552,   502,
    1223,    38,    54,  1188,  1053,   737,    47,  1308,   913,  1798,
    1351,  1385,  1042,    66,   748,   498,  1747,  1195,    54,  1199,
    2005,  1062,  1283,  1813,   614,  1815,  2059,  1254,  1177,  1255,
    1934,  1257,  1708,  1258,  1235,   527,    73,   554,   538,  2083,
    2075,  1766,   639,  2086,    49,  1228,   555,   974,  -418,  1163,
     615,  1960,   618,   448,  1653,  -938,  1794,  2232,  2237,  -960,
     940,   624,  1021,  1022,  -644,  1977,  2402,  -960,  -960,   810,
    -611,   816,   940,   820,    50,  2241,  -624,  -961,  1742,  1070,
    1274,  -649,   501,  2280,  -421,  -961,  -961,  1039, -1460,   569,
      50,  -639,  1742,   951,   639,   501, -1460, -1460,   501,  1395,
    1117,   501,  1465,  2264,  1452,   539,  1499,  1496,  1076,  1449,
    -652,  1386,  1191,  -652,   731,  1114,   955,   501,   626,   955,
     922,   639,  1226,   530,   639,  1849,  2354,  1309,   553,   599,
    1998,  1630,  1180,  1395,   639,   544,  1107,  2296,  1975,  -418,
    1078,  1200,   915,  1967,  -378,   940,  -836,  1322,  1296,   501,
     918,  2370,  1914,  -836,    77,  1856,  -170,   770,  2164,  1437,
    2404,  -170,   549,  1430,   773,  2206,   549,  1200,  1208,   625,
    1431,  1211,  1212,  1063,  2238,  -421,  1061,  2355,  2180,   738,
    2565,  1580,  2027,   935,   969,  2356,  2366,  1293,  1191,  2239,
     624,  1968,  2087,  2478,  2367,   624,  2104,  2552,  1826,  1250,
    1112,  1070,  1502,  2315,  2590,  2579,     3,     4,  1874,   514,
    1478,  2390,  2017,  2357,  2302,  2327,  1968,   545,  2405,  1297,
    2296,  1969,   760,  2353,  1115,  -855,   936,  1183,  1070,   766,
    1076,  1520,  -855,  1653,  1756,  2319,  2143,  2550,  2177,    74,
    1233,  1234,  1877,  1744,   512,  1971,  1969,  1133,  2235,  2028,
     916,  1323,  2199,  2006,   627,  1037,  1038,  2112,  2456,  1147,
    1176,  1970,  1078,  1070,  1238,   628,  1891,  1875,  1757,  1466,
    1971,   953,  2231,  1222,   954,  1517,  2200,  2313,  1298,  2358,
    2016,  1299,    75,  1977,  2137,  2090,  2457,  1767,  2141,  1078,
    2359,  2236,  1076,  1438,   562,  1479,  1972,   768,   625,  2586,
     624,   624,    78,   625,  1503,  2178,  2527,   501,  2528,    79,
     515,  1251,  2007,  1053,  -418,  2559,   986,  1201,  1028,  1029,
    2312,  2029,  1324,   761,  1078,  1360,  1042,  2013,   941,  2015,
    2105,  1518,  2553,    22,  1267,  2526,  2088,  1116,   732,   739,
     941,   740,    80,  1201,  2314,  2316,  1300,  1625,  2591,  2264,
    -421,  1148,   533,  2368,  2240,  1973,  2129,  2417,  1198,  2165,
    1742,  1237,  1742,  1070,  1185,  1292,  1129,    26,   464,  2169,
    2102,  1300,   490,  2296,  -418,  2406,   505,  1198,   913,  1351,
    1973,  1325,  1300,  1174,  1326,   937,   537,   537,    81,  2577,
    1175,  1048,  1076,  2521,   542,  1021,  1022,  2580,  1749,  1653,
    1512,   600,  1108,  1198,  1039,  1581,   733,    28,   625,   625,
    -421,  1608,  1049,   941,  2548,   556,  1767,  1729,  1730,   633,
      29,  2059,  2507,  1313,  1078,   531,  1227,   546,  1311,  1488,
    2254,  1779,  1338,  1496,  1396,   565,  2224,  2508,  1224,  1339,
    1340,  1341,  1276,    30,  1839,  1840,   540,  1773,  1569,   606,
     577,    54,  1273,  1335,  1336,   578,  2268,  1467,  2265,   573,
    1279,  2272,   581,   574,  2274,  1768,  2360,   623,  1710,  2361,
    1186,   449,  2566,  2581,   942,  1311,   918,  2181,  -418,  1016,
    -836,  2532,  2232,  2296,   938,  1327,   947,   572,  2536,  1301,
     444,   444,   620,   579,    54,  1310,   587,  1432,  2582,  2171,
     778,   728,  1827,  1569,  1317,  1383,  1668,   444,  1321,  1392,
    1899,  1284,   915,   618,  -421,   573,  -418,  -938,  -418,   574,
    2182,  -960,   624,    50,   554,   918,  -644,  1364,  1366,  1451,
     742,  1098,  1027,   555,  2448,  1063,  2447,  1048,  1033,  -961,
    1048,  2443,   749,  -649,    38,    54,   444,   444,   914,    47,
   -1460,  1872,  -421,  -639,  -421,   758,    66,  1066,  1049,  -855,
    1110,  1049,  2444,  1453,  1497,  1498,    50,   539,  1799,  2168,
     959,   960,  1050,   959,   960,  1052,   543,  2372,  1751,    73,
    1546,   547,  1218,  2208,  2209,  1415,   444,    49,  1398,   557,
    1549,  2384,  1328,  1552,   766,  1742,   623,   741,  1893,  1742,
    1517,   623,   444,  1010,   964,  1219,   583,  2537,   584,   964,
    -170,  -170,  2227,  1351,  2436,   553,  1218,    50,   444,  2437,
     916,  1545,   590,  1200,  2170,  1191,  1915,  1822,    54,   573,
     625,  1200,  1538,   574,  1900,  1192,  1360,  1360,  1520,  1219,
    1823,  1360,   548,   915,  1901,  1626,   444,  2512,   540,   597,
    1095,  1096,  1097,  1098,  1607,   591,  1791,  1213,  1609,  1852,
    2506,  1611,   768,   594,  2305,   444,   444,   444,  2438,   444,
    1565,  1566,  1567,  1802,  1887,  1150,  1360,  1360,  1800,  2538,
    1064,  1509,  1665,  1666,  1667,  1668,  1286,  2059,   592,   444,
    1067,   639,  1772,   451,  1894,  1949,  1950,  1951,  1952,  2040,
      50,  1601,  1111,   769,  1750,  1689,   623,   623,  1544,   913,
    1191,   549,  1119,  1151,   964,   964,  1876,  1878,  1879,  1416,
    1194,  1224,   784,  1918,  1417,  1200,  1547,  1555,   785,  1229,
    1127,  1550,  1562,  1128,   593,  1031,  2184,  1232,   444,   585,
     598,   586,   444,   444,  1069,  1141,  1142,  1070,  1146,   452,
     601,   916,   590,   444,   555,   555,   602,   555,  1288,  1418,
    1742,  2573,  2019,   639,   915,   758,   915,  1742,  2585,  1059,
      22,  1010,  1742,  2560,  2561,  1742,  1076,   612,  1683,  1837,
    1685,  1686,  2187, -1461,  1828,   591,  1586,  1777,  1214,  1773,
    2408,  1215,   639,  1628,  1742,   444,   444,   444,   629,  1201,
    1296,  1770,   633,  2412,    26,  1200,  1200,  1201,  1078,   631,
    1093,  1094,  1095,  1096,  1097,  1098,   787,  1153,  1848,   632,
     596,  2435,  1225,  2588,   634,  2439,   491,  2440,  1857,  -492,
    -492,  1825,   786,  1864,  -969,  -969,   553,   553,  2189,   553,
    1700,  2020,   550,   915,    28,   611,  1663,  1664,  1665,  1666,
    1667,  1668,   730,     3,     4,  1684,   736,  1130,   624,  1198,
    1131,  1240,  1241,  2055,   593,  1701,   745,  1198,  2108,  1801,
    1802,  1297,   916,  1154,   916,   750,  1697,  1742,  1342,  1343,
    1344,  1698,  1345,  1346,  1347,  1348,  1349,  1350,  1746,  1048,
     751,   537,  1048,  1419,    31,   756,  1803,  2021,    22,  2022,
      82,  1201,  1742,   447,   753,   455,  1810,   456,  1812,   489,
    1049,  1829,  1833,  1049,   491,   754,   513, -1461,   914,  1061,
     525,  2414, -1461,  1027,  1050,   944,  2192,  1052,   623,   757,
    1298,   458,    26,  1299,  1360,  1360,  1360,  1360,   764,  2094,
    1360,  1360,  1360,  1360,  1360,  1360,  1360,  1360,  1360,  1360,
    1254,   916,  1255,   620,  1257,    54,  1258, -1461,  -496,  -496,
    1280,  1198,  2233,  1131,  2473,  1010,   625,   779,  2193,  1702,
     787,  1351,    28,   781,  1703,  2499,  2501,  -495,  -495,  2038,
     784,  1201,  1201,  2194,   782,    29,   785,  1846,   444,  1291,
    1360,  1360,  1292,  2031,   444,  1305,   783,   444,  1306,  1916,
    1917,   444,  1123,  1125,  1086,    22,  1742,   795,    30,  2014,
    1403,   796,   577,    54,  1331,   444,   813,   578,   444,   444,
     444,   444,    31,   789,   581,   817,   920,    50,   444,   444,
    1742,  2030,  2072,  2039,  1300,  1404,  2546,  1461,   766,    26,
     947,  1198,  1198,   767,  1010,   444,   444,   444,   444,   914,
     790,  2578,  1598,   444,  1599,   579,  2216,   444,   573,   919,
    -938,   444,   574,   923,   444,   444,   444,   444,   444,   444,
     444,   444,   444,   925,  2195,   444,  2549,  1507,    22,    28,
    1131,   932,   444,  2212,   444,    50,  1996,  1027,   934,  1275,
     786, -1461,    29,  2562,  2326,   915,   915,   915,   797,  1027,
    1454,  1275,  1311,   944,  2423,   444,   768,   537,  1704,  1027,
     939,  1275,    26,   784,   791,    30,   784,   798,  1705,   785,
    1868,  1577,   785,   444,  1578,   451,   946,   742,  1627,    31,
     451,  1131,   444,   444,  1405,  1634,   949,   950,  1131,  1406,
    1742,  1301,   952,  1638,  1407, -1004,  1131,   769,   638,  2592,
   -1004,  1653,    28,  -464,  1401, -1461, -1461, -1461,  -464,    22,
    1302,   547,  1011,  1012,  1010,    29,    22,   799,  1922,  1014,
     914,  1150,   914,  -465,  1672,  -615,  1816,  1131,  -465,  1817,
    1469,   452,  -622,  1311,  1773,   784,   452, -1461,    30,  1020,
    1023,   785,  2052,    26,  1093,  1094,  1095,  1096,  1097,  1098,
      26,  1024,    31,   916,   916,   916,  1722,  1025,  1723,  1151,
      50,   444,  1026,  2325,   444,   444,  2038,   444,  1724,  1982,
    1725,  -464,   548,   786,   784,    31,   786,   453,   787,  1030,
     785,  2172,   453,    28,  1820,  1883,  1930,  1821,  1131,  1131,
      28,  -465,  -612,  -613,   492,  1293,    29,   999,  1032,   914,
    2093,   800,   763,    29,   765,  1538,  1994,  2060,  2055,  1995,
    1999,  1035,  -464,  2000,   623,  2018,   444,  1152,  1578,    30,
    2078,  1036,   964,  1578,  2071,  1041,    30,   788,  1408,  -616,
    1010,   789,  -465,    31,  1043,  1044,   444,   444,  1409,  1045,
     493,   549,   444,   454,  2113,   786,  2173,  1306,   801,  1578,
    2174,   802,  1046,  1578,  1277,  1007,  1278,  2333,   790,  -614,
    1602,   540,   803,  1153,  2255,  1105,  1107,  1306,   784,  2389,
    2306,  1047,  2389,  2307,   785,  2347,  2373,  1054,  1578,  1306,
     444,   444,   444,  2376,   786,   444,  2377,   455,  2381,   456,
      50,   947,   455,   804,   456,  1103,  1055,   444,   444,   444,
     444,  2334,  1108,   540,  2387,   444,  2391,  2388,  1065,  2388,
     457,   787,  1121,   458,   787,   457,  1134,  1140,   458,  1154,
     444,   444,   791,   767,   444,  2400,  2335,  2425,  2401,  2453,
    2426,  2454,  2401,  1360,  1306,   915,   769,   806,   444,   915,
     444,   915,   444,  2462,  2336,   918,   947,  2467,  2337,  2481,
    2388,  2204,  2482,  1170,  1172,  1001,  1118,   807,  1659,  1311,
     814,  1178,   444,   818,   789,   999,  2345,   789,  2338,  1196,
     540,  2339,   550,   444,  1197,  2213,  2214,   809,   786,  1740,
    1203,  1198,  1059,   787,  2340,  2522,  2523,   444,   947,  1131,
     441,   815,  2544,  1740,   819,  2545,  2556,  1204,  1205,  2388,
    1773,   444,  2574,  1209,   441,  2401,  2142,   727,  2145,   729,
    1216,  1217,  2159,   577,    54,  1221,   444,  1360,   578,  1231,
    1236,  1243,   787,  1007,  1059,   581,  1244,  1248,  1253,  1252,
     638,  1260,  1508,  1653,   444,  1263,   789,  1654,  1655,  1656,
    1264,  1401,  1266,   916,  1275,  1290,  1016,   916,  1027,   916,
    1033,   914,   914,   914,  1294,   791,   579,  1717,   791,  1313,
    1312,  1318,   639,   790,  2341,  1819,  1368,  1369,  1070,  1381,
    1394,  1553,  2342,  1734,  2055,   789,  1400,  2161,  1411,  1412,
    1414,  2571,  1360,  1434,  1435,  1449,    50,  1734,  1455,  1513,
    1463,   539,   444,  1470,  1462,   548,  1477,  1489,  1002,  1521,
    1490,  1524,  1554,  1626,  1535,  1491,  1492,  1510,  1842,  1514,
    1539,  1515,  1541,  2343,  1516,   549,   787,  1570,  1575,  1579,
    1583,  1010,  1587,  1001,  1548,  1588,  1589,   791,  1603,  1551,
    1605,  1606,  1610,  1556,  1557,  1558,  1559,  2052,  1563,  1564,
    1613,    22,   915,  1615, -1461, -1461, -1461,  1617,  1663,  1664,
    1665,  1666,  1667,  1668,   444,  1612,  1618,  1010,  1619,   999,
    1620,  1622,  1621,  1623,   444,  1560,   791,  1636,   444,   789,
    1637,   444,  1639,  1640,  1641,    26,  1642,  1010,   444,   444,
     444,   444,  1643,  1645,   444,   444,   444,   444,   444,   444,
     444,   444,   444,   444,  1646,  1131,  1561,   444,   444,  1649,
    1671,  1677,  1680,  1678,  1679,  2332,  1010,  1602,  1657,  1694,
    1681,   444,  1626,  1688,  1944,    28,  1691,  1007,   444,   540,
    1699,   444,  1706,   444,  1692,  1925,  1693,  1715,    29,  1658,
    1010,   444,  1720,  1716,   444,   444,   540,    50,   999,   444,
     444,  2431,  -430,  1718,  1719,  2309,  1744,  1753,  2375,  1755,
     916,    30,  2429,  1762,  -430,   444,  1769,   444,  1775,  -430,
     791,  1740,  -497,  1740,  -498,    31,  1002,  1780,   444,  1224,
    1781,  2418,   441,  1783,   441,  1784,  1785,   444,  1787,  1789,
    1004,  1790,  1793,  1796,  1809,  1811,  1834,  2411,  1824,  1830,
    1659,  1835,  1838,   444,  1831,  1832,  1007,  1836,  1854,  1855,
    1858,  1859,  1862,  -430,  1865,  1866,   442,  1869,  1300,  1870,
     829,   465,  2380,  1061,  1881,   465,  1882,  1001,   504,   465,
     509,  1886,  -430,   509,  1653,  2380,   529,  1674,  1673,   465,
     465,  1919,  1920,  1980,  1924,  1921,  1932,  2495,  1933,   915,
    1059,   914,  1936,  1945,  1958,   914,  1010,   914,  1727,  1966,
    1984,  1986,  1988,  1989,  2057,  1956,  1991,  1959,   999,  1993,
    2480,  1997,  2004,  -430,  2008,  2012,   829,  1009,  2026,  2024,
     509,   797,  -430,  2042,  2081,  2074,  1842,   529,   465,   529,
     529,   529,  2080,  2420,  2085,  2091,  2096,  2098,  2097,  2103,
     798,  2100,  2106,  2131,  1005,  2107,  1001,  2138,  2121,  2132,
    2136,  2139,  2146,  2052,  2147,  2455,  2151,  2153,   444,  2152,
    2332,  2154,  2175,  2179,  2167,  2202,  1007,  2464,  2203,  2217,
    2207,   915,  2218,  2220,  2228,   915,  2219,  2221,  2229,  2463,
    2242,  2230,  2243,  2245,   638,  2248,  2249,  1653,  2250,  2252,
     799,  1654,  1655,  1656,  2253,  2288,  2260,   916,  1004,  2273,
     624,   444,   444,  2543,  2495,  2266,   444,  1010,  1927,  2089,
    1002,   444,  2475,  2279,   444,   444,  2411,  2292,  2298,   444,
    2301,  2300,  2303,  2308,   999,  2317,  1660,  1661,  1662,  2320,
    1663,  1664,  1665,  1666,  1667,  1668,  2321,  2323,  2322,    50,
     444,  2346,  2349,  2350,   444,  2374,  1740,  2351,  2378,  2364,
    1740,  2397,  2365,  -430,  2034,  2419,  2383,   441,  1861,  2386,
    2402,   441,  2393,  2416,  2421,   444,  1001,  2424,  2156,  2432,
    2158,  2449,  2450,  2451,   800,  2469,  2461,  2470,  2483,   916,
    2316,  2479,  1007,   916,  2485,  1009,  2486,  2488,  2491,  1002,
    2498,  2504,  2505,  2511,   915,  2509,   624,   564,   914,   567,
    2510,   571,  2520,  1946,  2533,  2539,  2551,   444,   625,   829,
     829,   829,  1005,  1578,  2557,   573,  1010,  2564,   753,   574,
    2567,   801,  2575,  1010,   802,  2569,  2565,  2576,  2589,  2566,
     755,  2041,  2045,  2184,  1540,   803,  1807,  2160,  2162,  2185,
    1734,  2163,  2001,  2474,  1734,  2291,  2529,  2079,  2210,  2535,
     915,  2186,  2584,  2415,  2570,  2563,  2363,  1792,  1814,  1187,
    2084,  2531,  1843,  2568,  2046,  1788,   804,    50,    50,  2530,
    1844,  2441,  1272,  2492,  2572,  1132,  2073,   444,  1771,  2187,
    1010,  2188,  1001,  1658,  1113,  1506,  1782,  1486,  1987,   444,
     444,  1006,  1004,   444,  2468,  1167,  2157,  1166,  1505,  1961,
    1752,  1171,   916,  2130,   625,   444,  2144,  2385,  1957,  1002,
     806,  1740,   444,   624,  2460,  2459,  2465,   444,  1740,  2466,
     444,   444,   441,  1740,  1616,  2234,  1740,   444,   444,   441,
     807,  2524,  2290,  2525,   441,  2189,  2519,   441,  2275,   444,
    1439,   444,  2010,  1774,  1659,  1740,  1713,  1631,  1574,  1711,
     809,  1967,  1847,  1448,  2452,    50,   441,  1614,   916,  1135,
    2190,   444,  1457,  2002,  1285,     0,  2043,     0,  1459,     0,
       0,  1004,     0,     0,     0,     0,     0,  1069,     0,  1009,
    1070,  2061,  2062,  2063,  2064,  2065,  2066,  2067,  2068,  2069,
    2070,  1010,     0,     0,     0,   914,     0,     0,     0,  2057,
     529,     0,     0,     0,   589,     0,  1005,     0,     0,  1076,
       0,     0,  1734,   465,     0,   999, -1461,  1734,  2191,     0,
    1734,   625,   444,  2192,  1968,  1002,   444,  1010,  1740,     0,
       0,     0,     0,     0,     0,   540,   605,   465,   465,   441,
       0,  1078,     0,   444,     0,     0,     0,   444,     0,     0,
       0,   999,  1010,  1740,  1969,  1010,   444,     0,  1009,  1006,
       0,     0,     0,     0,   441,  2193,     0,   444,   509,  1970,
     509,   999,  2348,  1007,     0,     0,   529,   914,  1971,     0,
    2194,   914,   444,     0,   465,  1005,     0,     0,     0,     0,
       0,  1004,     0,  2234,     0,     0,   529,     0,   829,     0,
     999,     0,    50,     0,  1972,     0,   623,     0,   529,  1007,
       0,     0,     0,     0,   964,     0,     0,     0,  2434,     0,
       0,     0,     0,    50,   999,  2269,     0,     0,  2442,  1007,
    1660,  1661,  1662,     0,  1663,  1664,  1665,  1666,  1667,  1668,
       0,   529,   529,   529,   797,     0,     0,  1734,   444,     0,
   -1461,   444,     0,     0,     0, -1461,  1059,  1740,  1007,     0,
     444,     0,     0,   798,     0,     0,     0,   444,   441,     0,
     582,  2195,     0,  1001,     0,   444,     0,     0,  1009,     0,
       0,  1740,  1007,  1013,     0,     0,     0,     0,  1973,     0,
   -1461,     0,   441,     0,  2446,   444,     0,     0,     0,     0,
     914,     0,   623,     0,     0,  1005,     0,  1004,     0,  1001,
     964,     0,     0,   799,     0,  2496,     0,  2497,     0,     0,
       0,  2502,  2503,     0,    50,   829,     0,     0,     0,  1001,
     444,   444,     0,     0,     0,     0,     0,  1086,     0,     0,
     999,  2471,     0,     0,     0,     0,   735,     0,     0,     0,
       0,     0,     0,  1006,     0,     0,   914,  1010,  1001,     0,
       0,     0,     0,     0,     0,  2057,     0,     0,     0,     0,
    2270,    50,     0,     0,     0,     0,     0,     0,   780,     0,
     829,     0,  1001,     0,   529,   444,     0,   444,     0,     0,
       0,  1740,     0,     0,  1009,     0,     0,   800,  1007,     0,
     465,   465,   441,     0,     0,   963,   529,   529,  1139,     0,
     963,   927,   929,   931,     0,     0,  1002,     0,     0,   623,
       0,  1005,     0,     0, -1461,     0,     0,   964,     0,     0,
       0,     0,  1006,   529,  1190,     0,     0,     0,     0,     0,
       0,     0,     0,  2310,   801,     0,   529,   802,  2547,   444,
     444,   999,  1002,     0,     0,     0,     0,     0,   803,     0,
       0,     0,     0,   529,     0,     0,     0,   529,     0,     0,
       0,     0,  1002,     0,     0,  2328,  2329,     0,    50,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   804,
    2352,     0,     0,     0,     0,     0,     0,     0,  1001,     0,
       0,  1002,     0,     0,     0,     0,     0,     0,     0,  1007,
       0,     0,     0,   963,     0,   963,   963,     0,     0,     0,
   -1461,     0,     0,     0,     0,  1002,     0,  1093,  1094,  1095,
    1096,  1097,  1098,   806,     0,   638,     0,     0,  1653,     0,
       0,     0,  1654,  1655,  1656,     0,     0,     0,     0,  2398,
       0,     0,  1006,   807,  1126,     0,     0,     0,     0,  1928,
     999,     0,     0,     0,     0,     0,     0,   999,     0,     0,
    1247,     0,     0,   809,     0,   529,     0,  1137,     0,     0,
       0,   963,     0,  1270,   963,   963,     0,     0,     0,   605,
       0,     0,   605,     0,     0,     0,   465,   465,  1004,   465,
     605,     0,   529,  1179,     0,     0,     0,     0,     0,  1001,
       0,     0,     0,     0,     0,     0,  1206,     0,  1007,     0,
       0,     0,     0,     0,   999,  1007,     0,     0,     0,     0,
       0,     0,     0,     0,  1004,     0,     0,  1230,     0,     0,
       0,  1002,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1004,     0,   829,     0,     0,     0,
       0,     0,     0,     0,     0,  1650,  1651,     0,  1006,     0,
    1670,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1007,  1004,     0,  1009,     0,     0,     0,     0,
       0,     0,  1069,  1353,     0,  1070,     0,     0,     0,  1071,
    1072,  1073,     0,     0,     0,  1695,  1696,  1004,     0,     0,
       0,     0,  1005,     0,     0,     0,  1074,     0,  1001,     0,
       0,  1009,     0,     0,  1076,  1001,     0,     0,   605,     0,
       0,  1077,     0,     0,  1658,   999,     0,     0,     0,     0,
       0,  1009,  1287,  1289,     0,  1259,     0,     0,  1005,     0,
       0,   638,  1002,     0,  1653,     0,  1078,   529,  1654,  1655,
    1656,     0,     0,     0,     0,     0,     0,     0,  1005,     0,
    1009,   999,  1282,     0,     0,  2115,     0,   529,     0,   529,
       0,     0,  1001,     0,     0,     0,     0,     0,  1471,     0,
    1476,     0,     0,  1007,  1009,  1659,   999,  1005,     0,   999,
       0,     0,     0,     0,     0,     0,     0,     0,  1319,  1320,
       0,     0,     0,     0,     0,     0,  1332,     0,  1333,  1334,
       0,  1005,   529,  1004,     0,     0,     0,     0,     0,  1007,
       0,  1190,   465,  1370,     0,  1371,     0,     0,     0,     0,
       0,     0,   465,  1522,   465,  1526,     0,   465,  1382,  1384,
       0,     0,     0,   465,  1007,   465,     0,  1007,     0,     0,
       0,  1002,     0,     0,     0,  1079,   605,   465,  1002,     0,
    1080,   605,   465,     0,     0,     0,   465,   465,   465,   465,
       0,   465,   465,     0,     0,     0,     0,     0, -1368,     0,
       0,  1081,  1082,  1001,     0,     0,     0,     0,     0,     0,
       0,   529,  1585,     0,     0,  1083,     0,     0,     0,     0,
    2058,     0,     0,     0,  1597,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1002,     0,  1447,     0,  1001,
       0,     0,     0,     0,  1004,  1084,     0,  1005,  1085,     0,
       0,  1495,  1495,     0,     0,     0,     0,  1456,     0,  1458,
    1658,     0,  1086,     0,  1001,  1087,     0,  1001,     0,  1006,
       0,     0,     0,  1895,  1896,  1897,  1898,     0,     0,  1902,
    1903,  1904,  1905,  1906,  1907,  1908,  1909,  1910,  1911, -1368,
       0,  1660,  1661,  1662,     0,  1663,  1664,  1665,  1666,  1667,
    1668,     0,  1501,   963,     0,  1006,     0,     0,     0,     0,
       0,   999,     0,   963,     0,     0,   963,     0,     0,     0,
       0,  1659,     0,     0,     0,  1006,     0,     0,     0,  1938,
    1939,  1009,     0,     0,     0,     0,     0,     0,     0,     0,
   -1368,     0,     0,     0,     0,     0,  1002,     0,     0,  1088,
       0,     0, -1368,  1004,  1006,     0,     0, -1368,  1005,     0,
    1004,     0, -1368,     0,     0,     0,     0,     0,     0,  1007,
   -1368,     0,  1353, -1368,     0,     0,     0,     0,  1006,     0,
       0,  1584,  1002,   963,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1624,     0,   638,     0,     0,
    1653, -1368,   529,     0,  1654,  1655,  1656,  1002,     0,  1743,
    1002,     0,     0,     0,     0,     0,     0,  1004,     0,     0,
   -1368,  2116,     0,  1743,     0,     0,     0,  1761,     0,     0,
    1764,     0,  1476,     0,     0,     0,     0,     0,     0,     0,
    1009,     0,     0,     0,     0,  1089,     0,  2215,  1090,  1091,
    1092,     0,  1093,  1094,  1095,  1096,  1097,  1098,     0,     0,
       0, -1368,     0,     0, -1368,  1644,     0,  1005,     0,  1001,
   -1368,     0,     0,     0,  1005,     0,     0,     0,  1247,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1006,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1009,     0,     0,  1660,  1661,  1662,
       0,  1663,  1664,  1665,  1666,  1667,  1668,     0,     0,     0,
       0,     0,     0,     0, -1368,     0,     0,     0,  1004,     0,
       0,  1005,     0,     0,     0,     0,     0,     0,  1247,     0,
       0,     0,     0,   529,     0,     0,  1748,  1247,   529,   529,
     529,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   465,     0,     0,  1004,     0,   529,     0,     0,     0,
     605,     0,  1726,   638,     0,  1727,  1653,  1778,  1778,     0,
    1654,  1655,  1656,     0,     0,     0,     0,     0,     0,  1004,
       0,     0,  1004,     0,     0,     0,  1658,     0,     0,     0,
       0, -1368,     0,     0,     0,  1006,  1353,     0,     0,     0,
       0,     0,  1002,     0,     0,  2058,     0,     0,  1068,     0,
       0,     0,     0,  1069,     0, -1368,  1070, -1368, -1368,     0,
    1071,  1072,  1073,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1005,     0,     0,     0,     0,  1074,     0,     0,
    1075,  1009,     0,     0,     0,  1076,     0,  1659,     0,     0,
       0,     0,  1077, -1368,     0,     0, -1368, -1368, -1368,     0,
       0,     0,     0,     0,     0,     0,  1009,     0,  1005,  1009,
    1948,     0,     0,     0,     0,     0,     0,  1078,   529,   529,
     529,   442,     0,  1743,  1965,     0,     0,     0,  1965,  1979,
       0,     0,     0,  1005,   797,     0,  1005,     0,     0,     0,
    1871,  1873,     0,  1845,  1006,  1880,     0,     0,  1850,  1851,
    1853,  1006,  2251,   798,     0,     0,     0,  1476,     0,     0,
       0,     0,     0,     0,     0,     0,  1867,     0,     0,     0,
       0,     0,     0,   529,     0,   465,     0,     0,     0,  1247,
    1190,  1247,     0,  1270,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   465,
       0,  2044,  1658,   799,  2032,     0,     0,     0,  1006,     0,
       0,  2033,     0,     0,   465,   465,   465,   465,   465,   465,
     465,   465,   465,   465,  1004,     0,  1079,     0,     0,     0,
       0,  1080,     0,     0,     0,     0,  2311,     0,   529,     0,
       0,   709,   709,     0,     0,  1190,     0,     0,     0,     0,
       0,     0,  1081,  1082,     0,     0,  1270,     0,     0,   529,
       0,     0,     0,  1659,     0,     0,  1083,  2034,     0,     0,
       0,     0,     0,  1660,  1661,  1662,     0,  1663,  1664,  1665,
    1666,  1667,  1668,     0,     0,     0,     0,   800,  1953,  1954,
    1955,     0,     0,     0,     0,     0,  1084,   826,   831,  1085,
       0,  2371,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2058,     0,  1086,     0,     0,  1087,     0,     0,  1006,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   801,     0,  2124,   802,  1005,   529,
     529,   529,   529,  2009,     0,   963,  1965,  1979,   803,  1965,
    2035,     0,  2134,   826,     0,  1006,  1743,     0,     0,     0,
    1743,     0,     0,     0,     0,     0,  2150,     0,     0,  1018,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   804,
    1006,     0,     0,  1006,     0,  1761,     0,     0,     0,     0,
    1476,     0,     0,  2095,  1353,     0,     0,  1040,     0,     0,
    1088,     0,  1190,     0,     0,     0,     0,     0,  2077,     0,
       0,     0,     0,     0,     0,     0,  1056,  1057,  1058,     0,
    1060,     0,     0,   806,     0,     0,     0,  2211,     0,  1282,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1106,     0,     0,   807,     0,     0,     0,     0,     0,  1660,
    1661,  1662,     0,  1663,  1664,  1665,  1666,  1667,  1668,     0,
       0,     0,     0,   809,  1247,  2036,     0,     0,  2037,     0,
    1597,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2246,     0,     0,     0,     0,     0,     0,     0,  1145,
       0,     0,     0,  1157,  1162,     0,  1089,     0,     0,  1090,
    1091,  1092,     0,  1093,  1094,  1095,  1096,  1097,  1098,  2125,
    2126,  2127,  2128,     0,   -35,     0,     0,     0,     0,     0,
       0,   442,  1965,     0,     0,     0,   465,     0,  1743,     0,
       0,     0,     1,  1743,     0,     0,  1743,   442,     0,  2278,
       0,  2281,     2,     0,     3,     4,   826,   826,   826,     0,
       0,     0,     0,     0,   963,  2297,     0,     0,     0,   963,
       5,     0,     0,     0,     0,     0,  1198,     0,     0,     6,
       0,     0,     0,  1287,  1289,   605,   465,     0,     0,     0,
       0,     7,     0,     0,   529,  1006,     0,     0,     0,     0,
       0,     0,     8,     0,     0,     0,     0,     0,     0,     0,
       0,  1101,     0,     9,     0,    10,     0,     0,   465,   465,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1190,     0,    11,   465,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   529,    12,     0,  2297,  1101,
       0,     0,   638,     0,     0,  1653,    13,     0,     0,  1654,
    1655,  1656,    14,     0,     0,     0,   465,     0,     0,     0,
      15,     0,    16,  1743,     0,     0,     0,     0,     0,  2281,
       0,     0,     0,     0,     0,     0,     0,   784,  2396,     0,
       0,     0,   465,   785,     0,     0,     0,     0,     0,     0,
     797,   529,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   798,
       0,     0,     0,   605,     0,     0,     0,     0,  1101,     0,
       0,     0,     0,  1101,     0,     0,     0,     0,     0,     0,
       0,  1287,  1289,     0,     0,     0,     0,     0,    17,   529,
     963,     0,     0,     0,     0,  1316,     0,     0,     0,     0,
       0,     0,     0,     0,  2318,     0,     0,     0, -1370,   799,
       0,     0,     0,     0,     0,     0,  1337,   442,     0,  1354,
       0,     0,  1365,   465,     0,     0,     0,     0,  2278,  1372,
    1377,     0,     0,     0,     0,     0,     0,   786,     0,     0,
       0,  2297,   605,   605,   605,     0,  1387,  1388,  1389,  1390,
       0,     0,     0,     0,  1399,  2369,    18,     0,  1410,    19,
       0,     0,  1413,     0,     0,  1420,  1421,  1422,  1423,  1424,
    1425,  1426,  1427,  1428,     0,     0,  1429,  1247,  1247,     0,
       0,     0,     0,   709,     0,   826,     0,    20,     0,     0,
       0, -1461,     0,   800,     0,    21,     0,     0,     0, -1370,
       0,  2278,     0,     0,     0,   963,  1460,    22,     0,  2396,
       0,  2407,     0,     0,    23,     0,     0,     0,    24,  1476,
       0,     0,     0,     0,     0,     0,     0,     0,    25,     0,
       0,     0,     0,  1057,  1058,     0,     0,     0,  1247,     0,
     801,    26,     0,   802,     0,  1190,     0,     0,     0,     0,
   -1370,  2297,  1659,     0,   803,     0, -1384,     0,     0,  2445,
    1101,     0, -1370,     0,     0,     0,   605, -1370,     0,     0,
       0,     0, -1370,     0,     0,   787,    27,     0,     0,     0,
   -1370,    28,  1101, -1370,     0,   804,     0,  1361,  1069,     0,
       0,  1070,     0,     0,    29,  1071,  1072,  1073,  1101,  1101,
    1101,     0,  1101,     0,     0,     0,     0,     0,     0,     0,
       0, -1370,   826,     0,     0,  1571,  1572,    30,  1573,     0,
    1076,     0,     0,     0,   805,     0,     0,  1077,   789,   806,
   -1370,    31,     0,     0,   -35,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0, -1384,  1101,   807,
       0,     0,  1078,     0,     0,   808,   963,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   826,     0,   809,
       0, -1370,     0,     0, -1370,     0,     0,     0,     0,     0,
   -1370,     0,     0,     0,     0,     0,     0,  1101,  1629,     0,
       0,     0,     0,  1635,     0,     0,     0,     0, -1384,  1101,
       0,     0,     0,     0,  1101,     0,     0,     0,     0,     0,
   -1384,     0,     0,     0,     0, -1384,     0,     0,     0,   791,
   -1384,     0,     0,     0,     0,     0,     0,     0, -1384,     0,
       0, -1384,     0,  1652, -1370,     0,     0,     0,  1660,  1661,
    1662,     0,  1663,  1664,  1665,  1666,  1667,  1668,  1377,     0,
    1377,  1377,     0,     0,     0,     0,  1690,     0,     0, -1384,
       0,  1079,     0,     0,     0,     0,  1080,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0, -1384,     0,
       0,     0,     0,     0,     0,  1727,     0,  1081,  1082,  1709,
       0,  1712,     0,  1714,     0,     0,     0,     0,     0,     0,
       0,  1083,     0,     0,     0,     0,     0,     0,     0,     0,
       0, -1370,     0,     0,     0,     0,     0,  1069,     0, -1384,
    1070,     0, -1384,     0,  1071,  1072,  1073,     0, -1384,     0,
       0,  1084,     0,     0,  1085, -1370,     0, -1370, -1370,     0,
       0,  1074,     0,     0,     0,     0,     0,     0,  1086,  1076,
       0,     0,  1145,     0,     0,     0,  1077,     0,  1101,     0,
       0,     0,     0,     0,     0,     0,     0,  1162,     0,     0,
       0,     0,     0, -1370,     0,     0, -1370, -1370, -1370,  1101,
       0,  1078, -1384,     0,     0,  1786,  1069,     0,     0,  1070,
       0,     0,     0,  1071,  1072,  1073,  1101,     0,  1361,  1361,
       0,  1669,     0,  1361,     0,     0,     0,  1101,     0,     0,
    1074,     0,     0,     0,  1101,     0,     0,     0,  1076,  1101,
       0,     0,     0,     0,     0,  1077,     0,     0,     0,  1101,
    1101,  1101,  1101,  1727,     0,  1088,     0,     0,  1361,  1361,
       0,  1101,     0,   826,     0,     0,     0,     0,     0,     0,
    1078,     0,  1101,     0,     0,  1101,     0,     0,     0, -1384,
       0,     0,  1101,  1101,  1101,  1101,  1101,  1101,  1101,  1101,
    1101,  1101,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0, -1384,     0, -1384, -1384,     0,     0,     0,
    1079,     0,     0,     0,     0,  1080,     0,     0,     0,     0,
       0,     0,  1101,     0,     0,  1885,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1889,  1081,  1082,     0,  1890,
       0, -1384,  1892,     0, -1384, -1384, -1384,     0,     0,     0,
    1083,  1089,     0,     0,  1090,  1091,  1092,     0,  1093,  1094,
    1095,  1096,  1097,  1098,     0,     0,     0,     0,  1912,  1913,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1079,
    1084,     0,     0,  1085,  1080,     0,     0,     0,     0,  1926,
       0,     0,  1929,     0,  1931,     0,     0,  1086,     0,     0,
    1087,     0,  1935,     0,     0,  1081,  1082,     0,     0,     0,
    1942,  1943,     0,     0,     0,     0,     0,     0,     0,  1083,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1069,
       0,     0,  1070,  1101,  1101,  1101,  1071,  1072,  1073,  1983,
       0,     0,     0,     0,     0,     0,     0,     0,  1990,  1084,
       0,     0,  1085,  1074,     0,     0,     0,     0,     0,     0,
       0,  1076,     0,     0,  2003,     0,  1086,     0,  1077,  1087,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1088,     0,     0,     0,     0,     0,
       0,  1101,     0,  1078,     0,     0,     0,  1101,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1669,  1669,  1101,     0,  1361,  1361,  1361,  1361,
       0,     0,  1361,  1361,  1361,  1361,  1361,  1361,  1361,  1361,
    1361,  1361,  1669,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1101,  1088,     0,     0,     0,  1669,  1669,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1101,  1361,  1361,  1101,     0,  1101,     0,     0,  2099,
    1089,     0,     0,  1090,  1091,  1092,     0,  1093,  1094,  1095,
    1096,  1097,  1098,     0,     0,     0,     0,  1380,     0,     0,
       0,     0,  1079,     0,     0,     0,     0,  1080,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2109,  2110,     0,     0,     0,  2111,  1081,  1082,
       0,     0,  2114,     0,     0,  2117,  2118,     0,     0,     0,
    2122,     0,  1083,     0,     0,     0,     0,     0,  1101,  1089,
       0,     0,  1090,  1091,  1092,     0,  1093,  1094,  1095,  1096,
    1097,  1098,     0,     0,     0,     0,  1888,     0,     0,     0,
       0,     0,  1084,     0,     0,  1085,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   709,     0,     0,  1086,
       0,  1069,  1087,     0,  1070,     0,     0,     0, -1461, -1461,
   -1461,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1069,     0,     0,  1070,     0,     0,
       0,     0,     0,  1076,     0,     0,     0,     0,  2205,     0,
    1077,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1076,  1101,     0,     0,
       0,  1101,  1101, -1461,  1101,  1078,     0,  1669,  1669,  1669,
    1669,     0,     0,     0,  1669,  1669,  1669,  1669,  1669,  1669,
    1669,  1669,  1669,  1669,  1101,  1101,  1088,  1069,  1078,     0,
    1070,     0,     0,     0,     0,     0,     0,     0,  1101,     0,
       0,  1101,     0,  1101,     0,     0,     0,  1101,     0,     0,
    1669,  1669,     0,     0,  1101,  1101,     0,     0,     0,  1076,
    2256,  2257,     0,     0,  2258,     0, -1461,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1069,     0,     0,  1070,     0,     0,     0,  1071,  1072,
    1073,  1078,     0,     0,     0,  1101,  1707,     0,  2286,  2287,
       0,     0,  1101,     0,     0,  1074,     0,     0,     0,     0,
       0,     0,  2299,  1076,  1079,  1101,     0,     0,  1069,  1080,
    1077,  1070,  1089,     0,     0,  1090,  1091,  1092,     0,  1093,
    1094,  1095,  1096,  1097,  1098,     0,     0, -1461,     0,  1923,
    1069,     0, -1461,  1070,     0,  1078,     0,  1071,  1072,  1073,
    1076,     0,     0,     0,  1083,     0,     0, -1461,     0,  1937,
       0,     0,     0,     0,  1074,     0,     0,     0,     0,     0,
       0,     0,  1076,     0,     0,     0,     0, -1461,     0,  1077,
       0,     0,  1078,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   -1461,  1086,     0,     0,  1078, -1461,     0,     0,     0,     0,
       0,  1101,     0,     0,  2382,  1361,     0,     0,     0,     0,
       0,  1101,  1101,  1101,  1086,     0,  1101,  1060,     0,  1101,
    1101,     0,     0,     0,  1101,     0,     0,     0,  2399,     0,
   -1461,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1940,     0,     0,  2413,  1079,     0,     0,     0,     0,  1080,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1081,  1082,     0,     0,     0,     0,     0,  1086,  1088,     0,
       0, -1461,     0,     0,  1083,     0, -1461,     0,     0,  1361,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0, -1461,     0,  1079,     0,     0,     0,  1101,  1080,     0,
       0,     0,     0,     0,  1084,     0,     0,  1085,     0,     0,
       0, -1461,     0,     0,     0,     0,     0,     0,  2286,  1081,
    1082,  1086,     0,     0,  1087,     0,     0,     0,     0,     0,
       0,     0,     0,  1083,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1669,  1361,     0,  2490,     0,  1101,  1101,
    1101,     0,     0,     0, -1461,     0,     0,     0,  1086,     0,
       0,     0,     0,  1084,  1089,     0,  1085, -1461, -1461, -1461,
       0,  1093,  1094,  1095,  1096,  1097,  1098,     0,  1101,  1101,
    1086,  2516,  2516,  1087,     0,     0,     0, -1461,     0,     0,
       0,  1101,     0,     0,  1093,  1094,  1095,  1096,  1097,  1098,
       0,     0,     0,  1669,     0,     0,     0,     0,  1088,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2516,     0,
       0,     0,     0,     0,     0, -1461,     0,     0,     0,     0,
   -1461,     0,     0,     0,     0,     0,     0,  1093,  1094,  1095,
    1096,  1097,  1098,  1669,     0,     0,     0,  1088,     0,     0,
       0,     0,     0,     0,  1101,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1101,     0,     0,     0,     0,     0,     0,     0,     0,
    2516,  2587,     0,     0,  1089,  1101,     0,  1090,  1091,  1092,
       0,  1093,  1094,  1095,  1096,  1097,  1098,     0,     0,     0,
       0,  2011,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0, -1461,     0,     0,     0,     0,     0,     0,  1093,  1094,
    1095,  1096,  1097,  1098,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1089,     0,     0,  1090,  1091,  1092,     0,
    1093,  1094,  1095,  1096,  1097,  1098,     0,     0,     0,     0,
    2101,     0,  1101,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    83,   635,
     501,   636,   637,   638,   639,   640,     0,     0,  1101,     0,
       0,     0,     0,    84,    85,    86,    87,    88,    89,    90,
      91,   821,    92,    93,    94,     0,     0,     0,     0,     0,
       0,     0,    95,    96,     0,    97,    98,    99,   100,   101,
     102,   103,   104,   641,   106,   642,   643,     0,   109,   110,
     111,   112,   113,   114,   644,   645,   115,   116,   646,   647,
     119,     0,   120,   121,   122,   123,   648,     0,   649,     0,
     126,   127,   128,   129,   130,   131,   132,   133,   134,  1101,
     135,   136,   137,   138,   139,   140,     0,   141,   142,   143,
     144,   650,   651,   652,   653,   654,   655,   656,   146,   147,
     148,   149,   150,   151,   657,   658,   154,   659,   155,     0,
     156,   157,   158,   159,   160,   161,     0,   162,   163,   164,
     165,   166,   822,     0,   167,   168,   660,   170,   171,     0,
     172,   173,   174,     0,   175,   176,   177,     0,   178,   179,
     180,   181,   661,   183,   184,   185,   662,   663,   187,     0,
     188,   189,   664,   191,     0,   192,     0,   193,   194,     0,
     195,   196,   197,   198,   199,     0,   200,     0,   201,   202,
       0,   203,   204,   205,   206,   207,   208,   209,   210,   211,
     212,     0,   213,   214,   215,   216,   217,   218,     0,   219,
     220,   221,   222,   223,   224,   225,   665,   666,     0,   667,
       0,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,     0,     0,   239,   240,   241,   242,     0,   243,   244,
     245,   668,   669,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   670,
     263,   671,   265,   266,   267,   268,   672,   269,   270,   271,
     272,   673,   674,   274,   675,   276,   277,   278,     0,   279,
     280,     0,     0,   676,   282,   283,     0,     0,   284,   285,
     286,   287,   288,   677,   290,   291,   292,   293,   294,   295,
     296,   297,   298,     0,   299,   300,   678,   302,   303,   304,
     305,   306,   307,     0,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   679,   318,   319,   320,   321,     0,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,     0,   334,   335,   336,   337,   338,   339,   680,   341,
     342,   343,   344,   345,   346,   347,   348,   349,     0,   350,
     351,   352,   353,   354,   681,   355,   356,   357,   358,   359,
     360,   361,   362,   682,   364,     0,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   683,     0,
     378,   379,     0,   380,   381,   382,   383,   384,   385,   386,
       0,   684,   685,     0,     0,   389,   390,   686,   392,   687,
     688,   394,   395,   396,   397,   398,   399,   400,     0,     0,
     401,   402,   403,   404,   405,   689,     0,   406,   407,   408,
     409,   410,   411,   690,   823,   413,   414,   415,   416,   417,
     418,     0,     0,   419,     0,     0,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   691,     0,     0,     0,
       0,     0,     0,   692,   693,   824,     0,     0,     0,     0,
       0,     0,   695,   825,     0,     0,     0,   696,    83,   635,
     501,   636,   637,   638,   639,   640,     0,     0,     0,     0,
       0,     0,     0,    84,    85,    86,    87,    88,    89,    90,
      91,     0,    92,    93,    94,     0,     0,     0,     0,     0,
       0,     0,    95,    96,     0,    97,    98,    99,   100,   101,
     102,   103,   104,   641,   106,   642,   643,     0,   109,   110,
     111,   112,   113,   114,   644,   645,   115,   116,   646,   647,
     119,     0,   120,   121,   122,   123,   648,     0,   649,     0,
     126,   127,   128,   129,   130,   131,   132,   133,   134,     0,
     135,   136,   137,   138,   139,   140,     0,   141,   142,   143,
     144,   650,   651,   652,   653,   654,   655,   656,   146,   147,
     148,   149,   150,   151,   657,   658,   154,   659,   155,     0,
     156,   157,   158,   159,   160,   161,     0,   162,   163,   164,
     165,   166,     0,     0,   167,   168,   660,   170,   171,     0,
     172,   173,   174,     0,   175,   176,   177,     0,   178,   179,
     180,   181,   661,   183,   184,   185,   662,   663,   187,     0,
     188,   189,   664,   191,     0,   192,     0,   193,   194,     0,
     195,   196,   197,   198,   199,     0,   200,     0,   201,   202,
       0,   203,   204,   205,   206,   207,   208,   209,   210,   211,
     212,     0,   213,   214,   215,   216,   217,   218,     0,   219,
     220,   221,   222,   223,   224,   225,   665,   666,     0,   667,
       0,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,     0,     0,   239,   240,   241,   242,     0,   243,   244,
     245,   668,   669,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   670,
     263,   671,   265,   266,   267,   268,   672,   269,   270,   271,
     272,   673,   674,   274,   675,   276,   277,   278,     0,   279,
     280,     0,     0,   676,   282,   283,     0,     0,   284,   285,
     286,   287,   288,   677,   290,   291,   292,   293,   294,   295,
     296,   297,   298,     0,   299,   300,   678,   302,   303,   304,
     305,   306,   307,     0,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   679,   318,   319,   320,   321,     0,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,     0,   334,   335,   336,   337,   338,   339,   680,   341,
     342,   343,   344,   345,   346,   347,   348,   349,    22,   350,
     351,   352,   353,   354,   681,   355,   356,   357,   358,   359,
     360,   361,   362,   682,   364,     0,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   683,     0,
     378,   379,    26,   380,   381,   382,   383,   384,   385,   386,
       0,   684,   685,     0,     0,   389,   390,   686,   392,   687,
     688,   394,   395,   396,   397,   398,   399,   400,     0,     0,
     401,   402,   403,   404,   405,   689,     0,   406,   407,   408,
     409,   410,   617,   690,     0,   413,   414,   415,   416,   417,
     418,     0,     0,   419,     0,    29,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   691,     0,    30,     0,
       0,     0,     0,   692,   693,     0,     0,     0,     0,     0,
       0,     0,   695,  2392,     0,     0,     0,   696,    83,   635,
     501,   636,   637,   638,   639,   640,     0,     0,     0,     0,
       0,     0,     0,    84,    85,    86,    87,    88,    89,    90,
      91,     0,    92,    93,    94,     0,     0,     0,     0,     0,
       0,     0,    95,    96,     0,    97,    98,    99,   100,   101,
     102,   103,   104,   641,   106,   642,   643,     0,   109,   110,
     111,   112,   113,   114,   644,   645,   115,   116,   646,   647,
     119,     0,   120,   121,   122,   123,   648,     0,   649,     0,
     126,   127,   128,   129,   130,   131,   132,   133,   134,     0,
     135,   136,   137,   138,   139,   140,     0,   141,   142,   143,
     144,   650,   651,   652,   653,   654,   655,   656,   146,   147,
     148,   149,   150,   151,   657,   658,   154,   659,   155,     0,
     156,   157,   158,   159,   160,   161,     0,   162,   163,   164,
     165,   166,     0,     0,   167,   168,   660,   170,   171,     0,
     172,   173,   174,     0,   175,   176,   177,     0,   178,   179,
     180,   181,   661,   183,   184,   185,   662,   663,   187,     0,
     188,   189,   664,   191,     0,   192,     0,   193,   194,     0,
     195,   196,   197,   198,   199,     0,   200,     0,   201,   202,
       0,   203,   204,   205,   206,   207,   208,   209,   210,   211,
     212,     0,   213,   214,   215,   216,   217,   218,     0,   219,
     220,   221,   222,   223,   224,   225,   665,   666,     0,   667,
       0,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,     0,     0,   239,   240,   241,   242,     0,   243,   244,
     245,   668,   669,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   670,
     263,   671,   265,   266,   267,   268,   672,   269,   270,   271,
     272,   673,   674,   274,   675,   276,   277,   278,     0,   279,
     280,     0,     0,   676,   282,   283,     0,     0,   284,   285,
     286,   287,   288,   677,   290,   291,   292,   293,   294,   295,
     296,   297,   298,     0,   299,   300,   678,   302,   303,   304,
     305,   306,   307,     0,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   679,   318,   319,   320,   321,     0,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,     0,   334,   335,   336,   337,   338,   339,   680,   341,
     342,   343,   344,   345,   346,   347,   348,   349,    22,   350,
     351,   352,   353,   354,   681,   355,   356,   357,   358,   359,
     360,   361,   362,   682,   364,     0,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   683,     0,
     378,   379,    26,   380,   381,   382,   383,   384,   385,   386,
       0,   684,   685,     0,     0,   389,   390,   686,   392,   687,
     688,   394,   395,   396,   397,   398,   399,   400,     0,     0,
     401,   402,   403,   404,   405,   689,     0,   406,   407,   408,
     409,   410,   617,   690,     0,   413,   414,   415,   416,   417,
     418,     0,     0,   419,     0,    29,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   691,     0,    30,     0,
       0,     0,     0,   692,   693,     0,     0,     0,     0,     0,
       0,     0,   695,     0,     0,     0,     0,   696,    83,   635,
     501,   636,   637,   638,   639,   640,     0,     0,     0,     0,
       0,     0,     0,    84,    85,    86,    87,    88,    89,    90,
      91,     0,    92,    93,    94,     0,     0,     0,     0,     0,
       0,     0,    95,    96,     0,    97,    98,    99,   100,   101,
     102,   103,   104,   641,   106,   642,   643,  1373,   109,   110,
     111,   112,   113,   114,   644,   645,   115,   116,   646,   647,
     119,     0,   120,   121,   122,   123,   648,     0,   649,     0,
     126,   127,   128,   129,   130,   131,   132,   133,   134,     0,
     135,   136,   137,   138,   139,   140,     0,   141,   142,   143,
     144,   650,   651,   652,   653,   654,   655,   656,   146,   147,
     148,   149,   150,   151,   657,   658,   154,   659,   155,     0,
     156,   157,   158,   159,   160,   161,     0,   162,   163,   164,
     165,   166,     0,     0,   167,   168,   660,   170,   171,     0,
     172,   173,   174,     0,   175,   176,   177,     0,   178,   179,
     180,   181,   661,   183,   184,   185,   662,   663,   187,     0,
     188,   189,   664,   191,     0,   192,     0,   193,   194,  1374,
     195,   196,   197,   198,   199,     0,   200,     0,   201,   202,
       0,   203,   204,   205,   206,   207,   208,   209,   210,   211,
     212,     0,   213,   214,   215,   216,   217,   218,     0,   219,
     220,   221,   222,   223,   224,   225,   665,   666,     0,   667,
       0,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,     0,  1375,   239,   240,   241,   242,     0,   243,   244,
     245,   668,   669,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   670,
     263,   671,   265,   266,   267,   268,   672,   269,   270,   271,
     272,   673,   674,   274,   675,   276,   277,   278,     0,   279,
     280,     0,     0,   676,   282,   283,     0,     0,   284,   285,
     286,   287,   288,   677,   290,   291,   292,   293,   294,   295,
     296,   297,   298,     0,   299,   300,   678,   302,   303,   304,
     305,   306,   307,     0,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   679,   318,   319,   320,   321,     0,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,     0,   334,   335,   336,   337,   338,   339,   680,   341,
     342,   343,   344,   345,   346,   347,   348,   349,     0,   350,
     351,   352,   353,   354,   681,   355,   356,   357,   358,   359,
     360,   361,   362,   682,   364,     0,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   683,     0,
     378,   379,     0,   380,   381,   382,   383,   384,   385,   386,
       0,   684,   685,     0,  1376,   389,   390,   686,   392,   687,
     688,   394,   395,   396,   397,   398,   399,   400,     0,     0,
     401,   402,   403,   404,   405,   689,     0,   406,   407,   408,
     409,   410,   411,   690,     0,   413,   414,   415,   416,   417,
     418,     0,     0,   419,     0,     0,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   691,     0,     0,     0,
       0,     0,     0,   692,   693,     0,     0,     0,     0,     0,
       0,     0,   695,     0,     0,     0,     0,   696,    83,   635,
     501,   636,   637,   638,   639,   640,     0,     0,     0,     0,
       0,     0,     0,    84,    85,    86,    87,    88,    89,    90,
      91,     0,    92,    93,    94,     0,     0,     0,     0,     0,
       0,     0,    95,    96,     0,    97,    98,    99,   100,   101,
     102,   103,   104,   641,   106,   642,   643,     0,   109,   110,
     111,   112,   113,   114,   644,   645,   115,   116,   646,   647,
     119,     0,   120,   121,   122,   123,   648,     0,   649,     0,
     126,   127,   128,   129,   130,   131,   132,   133,   134,     0,
     135,   136,   137,   138,   139,   140,     0,   141,   142,   143,
     144,   650,   651,   652,   653,   654,   655,   656,   146,   147,
     148,   149,   150,   151,   657,   658,   154,   659,   155,     0,
     156,   157,   158,   159,   160,   161,     0,   162,   163,   164,
     165,   166,     0,     0,   167,   168,   660,   170,   171,     0,
     172,   173,   174,     0,   175,   176,   177,     0,   178,   179,
     180,   181,   661,   183,   184,   185,   662,   663,   187,     0,
     188,   189,   664,   191,     0,   192,     0,   193,   194,     0,
     195,   196,   197,   198,   199,     0,   200,     0,   201,   202,
       0,   203,   204,   205,   206,   207,   208,   209,   210,   211,
     212,     0,   213,   214,   215,   216,   217,   218,     0,   219,
     220,   221,   222,   223,   224,   225,   665,   666,     0,   667,
       0,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,     0,     0,   239,   240,   241,   242,     0,   243,   244,
     245,   668,   669,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   670,
     263,   671,   265,   266,   267,   268,   672,   269,   270,   271,
     272,   673,   674,   274,   675,   276,   277,   278,     0,   279,
     280,     0,     0,   676,   282,   283,     0,     0,   284,   285,
     286,   287,   288,   677,   290,   291,   292,   293,   294,   295,
     296,   297,   298,     0,   299,   300,   678,   302,   303,   304,
     305,   306,   307,     0,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   679,   318,   319,   320,   321,     0,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,     0,   334,   335,   336,   337,   338,   339,   680,   341,
     342,   343,   344,   345,   346,   347,   348,   349,     0,   350,
     351,   352,   353,   354,   681,   355,   356,   357,   358,   359,
     360,   361,   362,   682,   364,     0,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   683,     0,
     378,   379,     0,   380,   381,   382,   383,   384,   385,   386,
       0,   684,   685,     0,     0,   389,   390,   686,   392,   687,
     688,   394,   395,   396,   397,   398,   399,   400,     0,     0,
     401,   402,   403,   404,   405,   689,     0,   406,   407,   408,
     409,   410,   411,   690,     0,   413,   414,   415,   416,   417,
     418,     0,     0,   419,     0,     0,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   691,     0,     0,     0,
       0,     0,     0,   692,   693,   694,     0,     0,     0,     0,
       0,     0,   695,     0,     0,     0,     0,   696,    83,   635,
     501,   636,   637,   638,   639,   640,     0,     0,     0,     0,
       0,     0,     0,    84,    85,    86,    87,    88,    89,    90,
      91,  1155,    92,    93,    94,     0,     0,     0,     0,     0,
       0,     0,    95,    96,     0,    97,    98,    99,   100,   101,
     102,   103,   104,   641,   106,   642,   643,     0,   109,   110,
     111,   112,   113,   114,   644,   645,   115,   116,   646,   647,
     119,     0,   120,   121,   122,   123,   648,     0,   649,     0,
     126,   127,   128,   129,   130,   131,   132,   133,   134,     0,
     135,   136,   137,   138,   139,   140,     0,   141,   142,   143,
     144,   650,   651,   652,   653,   654,   655,   656,   146,   147,
     148,   149,   150,   151,   657,   658,   154,   659,   155,     0,
     156,   157,   158,   159,   160,   161,     0,   162,   163,   164,
     165,   166,     0,     0,   167,   168,   660,   170,   171,     0,
     172,   173,   174,     0,   175,   176,   177,     0,   178,   179,
     180,   181,   661,   183,   184,   185,   662,   663,   187,     0,
     188,   189,   664,   191,     0,   192,     0,   193,   194,     0,
     195,   196,   197,   198,   199,     0,   200,     0,   201,   202,
       0,   203,   204,   205,   206,   207,   208,   209,   210,   211,
     212,     0,   213,   214,   215,   216,   217,   218,     0,   219,
     220,   221,   222,   223,   224,   225,   665,   666,     0,   667,
       0,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,     0,     0,   239,   240,   241,   242,     0,   243,   244,
     245,   668,   669,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   670,
     263,   671,   265,   266,   267,   268,   672,   269,   270,   271,
     272,   673,   674,   274,   675,   276,   277,   278,     0,   279,
     280,     0,     0,   676,   282,   283,     0,     0,   284,   285,
     286,   287,   288,   677,   290,   291,   292,   293,   294,   295,
     296,   297,   298,     0,   299,   300,   678,   302,   303,   304,
     305,   306,   307,     0,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   679,   318,   319,   320,   321,     0,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,     0,   334,   335,   336,   337,   338,   339,   680,   341,
     342,   343,   344,   345,   346,   347,   348,   349,     0,   350,
     351,   352,   353,   354,   681,   355,   356,   357,   358,   359,
     360,   361,   362,   682,   364,     0,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   683,     0,
     378,   379,     0,   380,   381,   382,   383,   384,   385,   386,
       0,   684,   685,     0,     0,   389,   390,   686,   392,   687,
     688,   394,   395,   396,   397,   398,   399,   400,     0,     0,
     401,   402,   403,   404,   405,   689,     0,   406,   407,   408,
     409,   410,   411,   690,     0,   413,   414,   415,   416,   417,
     418,     0,     0,   419,     0,     0,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   691,     0,     0,     0,
       0,     0,     0,   692,   693,     0,     0,     0,     0,     0,
       0,     0,   695,     0,     0,     0,     0,   696,    83,   635,
     501,   636,   637,   638,   639,   640,     0,     0,     0,     0,
       0,     0,     0,    84,    85,    86,    87,    88,    89,    90,
      91,     0,    92,    93,    94,     0,     0,     0,     0,     0,
       0,     0,    95,    96,     0,    97,    98,    99,   100,   101,
     102,   103,   104,   641,   106,   642,   643,     0,   109,   110,
     111,   112,   113,   114,   644,   645,   115,   116,   646,   647,
     119,     0,   120,   121,   122,   123,   648,     0,   649,     0,
     126,   127,   128,   129,   130,   131,   132,   133,   134,     0,
     135,   136,   137,   138,   139,   140,     0,   141,   142,   143,
     144,   650,   651,   652,   653,   654,   655,   656,   146,   147,
     148,   149,   150,   151,   657,   658,   154,   659,   155,     0,
     156,   157,   158,   159,   160,   161,     0,   162,   163,   164,
     165,   166,     0,     0,   167,   168,   660,   170,   171,     0,
     172,   173,   174,     0,   175,   176,   177,     0,   178,   179,
     180,   181,   661,   183,   184,   185,   662,   663,   187,     0,
     188,   189,   664,   191,     0,   192,     0,   193,   194,     0,
     195,   196,   197,   198,   199,     0,   200,     0,   201,   202,
       0,   203,   204,   205,   206,   207,   208,   209,   210,   211,
     212,     0,   213,   214,   215,   216,   217,   218,     0,   219,
     220,   221,   222,   223,   224,   225,   665,   666,     0,   667,
       0,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,     0,     0,   239,   240,   241,   242,     0,   243,   244,
     245,   668,   669,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   670,
     263,   671,   265,   266,   267,   268,   672,   269,   270,   271,
     272,   673,   674,   274,   675,   276,   277,   278,     0,   279,
     280,     0,     0,   676,   282,   283,     0,     0,   284,   285,
     286,   287,   288,   677,   290,   291,   292,   293,   294,   295,
     296,   297,   298,     0,   299,   300,   678,   302,   303,   304,
     305,   306,   307,     0,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   679,   318,   319,   320,   321,     0,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,     0,   334,   335,   336,   337,   338,   339,   680,   341,
     342,   343,   344,   345,   346,   347,   348,   349,     0,   350,
     351,   352,   353,   354,   681,   355,   356,   357,   358,   359,
     360,   361,   362,   682,   364,     0,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   683,     0,
     378,   379,     0,   380,   381,   382,   383,   384,   385,   386,
       0,   684,   685,     0,     0,   389,   390,   686,   392,   687,
     688,   394,   395,   396,   397,   398,   399,   400,     0,     0,
     401,   402,   403,   404,   405,   689,     0,   406,   407,   408,
     409,   410,   411,   690,     0,   413,   414,   415,   416,   417,
     418,     0,     0,   419,     0,     0,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   691,     0,     0,     0,
       0,     0,     0,   692,   693,     0,     0,     0,     0,     0,
       0,     0,   695,  1363,     0,     0,     0,   696,    83,   635,
     501,   636,   637,   638,   639,   640,     0,     0,     0,     0,
       0,     0,     0,    84,    85,    86,    87,    88,    89,    90,
      91,     0,    92,    93,    94,     0,     0,     0,     0,     0,
       0,     0,    95,    96,     0,    97,    98,    99,   100,   101,
     102,   103,   104,   641,   106,   642,   643,     0,   109,   110,
     111,   112,   113,   114,   644,   645,   115,   116,   646,   647,
     119,     0,   120,   121,   122,   123,   648,     0,   649,     0,
     126,   127,   128,   129,   130,   131,   132,   133,   134,     0,
     135,   136,   137,   138,   139,   140,     0,   141,   142,   143,
     144,   650,   651,   652,   653,   654,   655,   656,   146,   147,
     148,   149,   150,   151,   657,   658,   154,   659,   155,     0,
     156,   157,   158,   159,   160,   161,     0,   162,   163,   164,
     165,   166,     0,     0,   167,   168,   660,   170,   171,     0,
     172,   173,   174,     0,   175,   176,   177,     0,   178,   179,
     180,   181,   661,   183,   184,   185,   662,   663,   187,     0,
     188,   189,   664,   191,     0,   192,     0,   193,   194,     0,
     195,   196,   197,   198,   199,     0,   200,     0,   201,   202,
       0,   203,   204,   205,   206,   207,   208,   209,   210,   211,
     212,     0,   213,   214,   215,   216,   217,   218,     0,   219,
     220,   221,   222,   223,   224,   225,   665,   666,     0,   667,
       0,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,     0,     0,   239,   240,   241,   242,     0,   243,   244,
     245,   668,   669,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   670,
     263,   671,   265,   266,   267,   268,   672,   269,   270,   271,
     272,   673,   674,   274,   675,   276,   277,   278,     0,   279,
     280,     0,     0,   676,   282,   283,     0,     0,   284,   285,
     286,   287,   288,   677,   290,   291,   292,   293,   294,   295,
     296,   297,   298,     0,   299,   300,   678,   302,   303,   304,
     305,   306,   307,     0,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   679,   318,   319,   320,   321,     0,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,     0,   334,   335,   336,   337,   338,   339,   680,   341,
     342,   343,   344,   345,   346,   347,   348,   349,     0,   350,
     351,   352,   353,   354,   681,   355,   356,   357,   358,   359,
     360,   361,   362,   682,   364,     0,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   683,     0,
     378,   379,     0,   380,   381,   382,   383,   384,   385,   386,
       0,   684,   685,     0,     0,   389,   390,   686,   392,   687,
     688,   394,   395,   396,   397,   398,   399,   400,     0,     0,
     401,   402,   403,   404,   405,   689,     0,   406,   407,   408,
     409,   410,   411,   690,  1568,   413,   414,   415,   416,   417,
     418,     0,     0,   419,     0,     0,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   691,     0,     0,     0,
       0,     0,     0,   692,   693,     0,     0,     0,     0,     0,
       0,     0,   695,     0,     0,     0,     0,   696,    83,   635,
     501,   636,   637,   638,   639,   640,     0,     0,     0,     0,
       0,     0,     0,    84,    85,    86,    87,    88,    89,    90,
      91,     0,    92,    93,    94,     0,     0,     0,     0,     0,
       0,     0,    95,    96,     0,    97,    98,    99,   100,   101,
     102,   103,   104,   641,   106,   642,   643,     0,   109,   110,
     111,   112,   113,   114,   644,   645,   115,   116,   646,   647,
     119,     0,   120,   121,   122,   123,   648,     0,   649,     0,
     126,   127,   128,   129,   130,   131,   132,   133,   134,     0,
     135,   136,   137,   138,   139,   140,     0,   141,   142,   143,
     144,   650,   651,   652,   653,   654,   655,   656,   146,   147,
     148,   149,   150,   151,   657,   658,   154,   659,   155,     0,
     156,   157,   158,   159,   160,   161,     0,   162,   163,   164,
     165,   166,     0,     0,   167,   168,   660,   170,   171,     0,
     172,   173,   174,     0,   175,   176,   177,     0,   178,   179,
     180,   181,   661,   183,   184,   185,   662,   663,   187,     0,
     188,   189,   664,   191,     0,   192,     0,   193,   194,  1374,
     195,   196,   197,   198,   199,     0,   200,     0,   201,   202,
       0,   203,   204,   205,   206,   207,   208,   209,   210,   211,
     212,     0,   213,   214,   215,   216,   217,   218,     0,   219,
     220,   221,   222,   223,   224,   225,   665,   666,     0,   667,
       0,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,     0,     0,   239,   240,   241,   242,     0,   243,   244,
     245,   668,   669,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   670,
     263,   671,   265,   266,   267,   268,   672,   269,   270,   271,
     272,   673,   674,   274,   675,   276,   277,   278,     0,   279,
     280,     0,     0,   676,   282,   283,     0,     0,   284,   285,
     286,   287,   288,   677,   290,   291,   292,   293,   294,   295,
     296,   297,   298,     0,   299,   300,   678,   302,   303,   304,
     305,   306,   307,     0,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   679,   318,   319,   320,   321,     0,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,     0,   334,   335,   336,   337,   338,   339,   680,   341,
     342,   343,   344,   345,   346,   347,   348,   349,     0,   350,
     351,   352,   353,   354,   681,   355,   356,   357,   358,   359,
     360,   361,   362,   682,   364,     0,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   683,     0,
     378,   379,     0,   380,   381,   382,   383,   384,   385,   386,
       0,   684,   685,     0,     0,   389,   390,   686,   392,   687,
     688,   394,   395,   396,   397,   398,   399,   400,     0,     0,
     401,   402,   403,   404,   405,   689,     0,   406,   407,   408,
     409,   410,   411,   690,     0,   413,   414,   415,   416,   417,
     418,     0,     0,   419,     0,     0,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   691,     0,     0,     0,
       0,     0,     0,   692,   693,     0,     0,     0,     0,     0,
       0,     0,   695,     0,     0,     0,     0,   696,    83,   635,
     501,   636,   637,   638,   639,   640,     0,     0,     0,     0,
       0,     0,     0,    84,    85,    86,    87,    88,    89,    90,
      91,     0,    92,    93,    94,     0,     0,     0,     0,     0,
       0,     0,    95,    96,     0,    97,    98,    99,   100,   101,
     102,   103,   104,   641,   106,   642,   643,     0,   109,   110,
     111,   112,   113,   114,   644,   645,   115,   116,   646,   647,
     119,     0,   120,   121,   122,   123,   648,     0,   649,     0,
     126,   127,   128,   129,   130,   131,   132,   133,   134,     0,
     135,   136,   137,   138,   139,   140,     0,   141,   142,   143,
     144,   650,   651,   652,   653,   654,   655,   656,   146,   147,
     148,   149,   150,   151,   657,   658,   154,   659,   155,     0,
     156,   157,   158,   159,   160,   161,     0,   162,   163,   164,
     165,   166,     0,     0,   167,   168,   660,   170,   171,     0,
     172,   173,   174,     0,   175,   176,   177,     0,   178,   179,
     180,   181,   661,   183,   184,   185,   662,   663,   187,     0,
     188,   189,   664,   191,     0,   192,     0,   193,   194,     0,
     195,   196,   197,   198,   199,     0,   200,     0,   201,   202,
       0,   203,   204,   205,   206,   207,   208,   209,   210,   211,
     212,     0,   213,   214,   215,   216,   217,   218,     0,   219,
     220,   221,   222,   223,   224,   225,   665,   666,     0,   667,
       0,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,     0,     0,   239,   240,   241,   242,     0,   243,   244,
     245,   668,   669,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   670,
     263,   671,   265,   266,   267,   268,   672,   269,   270,   271,
     272,   673,   674,   274,   675,   276,   277,   278,     0,   279,
     280,     0,     0,   676,   282,   283,     0,     0,   284,   285,
     286,   287,   288,   677,   290,   291,   292,   293,   294,   295,
     296,   297,   298,     0,   299,   300,   678,   302,   303,   304,
     305,   306,   307,     0,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   679,   318,   319,   320,   321,     0,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,     0,   334,   335,   336,   337,   338,   339,   680,   341,
     342,   343,   344,   345,   346,   347,   348,   349,     0,   350,
     351,   352,   353,   354,   681,   355,   356,   357,   358,   359,
     360,   361,   362,   682,   364,     0,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   683,     0,
     378,   379,     0,   380,   381,   382,   383,   384,   385,   386,
       0,   684,   685,     0,     0,   389,   390,   686,   392,   687,
     688,   394,   395,   396,   397,   398,   399,   400,     0,     0,
     401,   402,   403,   404,   405,   689,     0,   406,   407,   408,
     409,   410,   411,   690,     0,   413,   414,   415,   416,   417,
     418,     0,     0,   419,     0,     0,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   691,     0,     0,     0,
       0,     0,     0,   692,   693,     0,     0,     0,     0,     0,
       0,     0,   695,     0,     0,     0,     0,   696,    83,   635,
     501,   636,   637,   638,   639,   640,     0,     0,     0,     0,
       0,     0,     0,    84,    85,    86,    87,    88,    89,    90,
      91,     0,    92,    93,    94,     0,     0,     0,     0,     0,
       0,     0,    95,    96,     0,    97,    98,    99,   100,   101,
     102,   103,   104,   641,   106,   642,   643,     0,   109,   110,
     111,   112,   113,   114,   644,   645,   115,   116,   646,   647,
     119,     0,   120,   121,   122,   123,   648,     0,   649,     0,
     126,   127,   128,   129,   130,   131,   132,   133,   134,     0,
     135,   136,   137,   138,   139,   140,     0,   141,   142,   143,
     144,   650,   651,   652,   653,   654,   655,   656,   146,   147,
     148,   149,   150,   151,   657,   658,   154,   659,   155,     0,
     156,   157,   158,   159,   160,   161,     0,   162,   163,   164,
     165,   166,     0,     0,   167,   168,   660,   170,   171,     0,
     172,   173,   174,     0,   175,   176,   177,     0,   178,   179,
     180,   181,   661,   183,   184,   185,   662,   663,   187,     0,
     188,   189,   664,   191,     0,   192,     0,   193,   194,     0,
     195,   196,   197,   198,   199,     0,   200,     0,   201,   202,
       0,   203,   204,   205,   206,   207,   208,   209,   210,   211,
     212,     0,   213,   214,   215,   216,   217,   218,     0,   219,
     220,   221,   222,   223,   224,   225,   665,   666,     0,   667,
       0,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,     0,     0,   239,   240,   241,   242,     0,   243,   244,
     245,   668,   669,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   670,
     263,   671,   265,   266,   267,   268,   672,   269,   270,   271,
     272,   673,   674,   274,   675,   276,   277,   278,     0,   279,
     280,     0,     0,   676,   282,   283,     0,     0,   284,   285,
     286,   287,   288,   677,   290,   291,   292,   293,   294,   295,
     296,   297,   298,     0,   299,   300,   678,   302,   303,   304,
     305,   306,   307,     0,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   679,   318,   319,   320,   321,     0,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,     0,   334,   335,   336,   337,   338,   339,   680,   341,
     342,   343,   344,   345,   346,   347,   348,   349,     0,   350,
     351,   352,   353,   354,   681,   355,   356,   357,   358,   359,
     360,   361,   362,   682,   364,     0,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   683,     0,
     378,   379,     0,   380,   381,   382,   383,   384,   385,   386,
       0,   684,   685,     0,     0,   389,   390,   686,   392,   687,
     688,   394,   395,   396,   397,   398,   399,   400,     0,     0,
     401,   402,   403,   404,   405,   689,     0,   406,   407,   408,
     409,   410,   411,   690,     0,   413,   414,   415,   416,   417,
     418,     0,     0,   419,     0,     0,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   691,     0,     0,     0,
       0,     0,     0,  1158,  1159,     0,     0,     0,     0,     0,
       0,     0,   695,     0,     0,     0,     0,   696,    83,  1493,
     501,   636,   637,   638,   639,   640,     0,     0,     0,     0,
       0,     0,     0,    84,    85,    86,    87,    88,    89,    90,
      91,     0,    92,    93,    94,     0,     0,     0,     0,     0,
       0,     0,    95,    96,     0,    97,    98,    99,   100,   101,
     102,   103,   104,   641,   106,   642,   643,     0,   109,   110,
     111,   112,   113,   114,   644,   645,   115,   116,   646,   647,
     119,     0,   120,   121,   122,   123,   648,     0,   649,     0,
     126,   127,   128,   129,   130,   131,   132,   133,   134,     0,
     135,   136,   137,   138,   139,   140,     0,   141,   142,   143,
     144,   650,   651,   652,   653,   654,   655,   656,   146,   147,
     148,   149,   150,   151,   657,   658,   154,   659,   155,     0,
     156,   157,   158,   159,   160,   161,     0,   162,   163,   164,
     165,   166,     0,     0,   167,   168,   660,   170,   171,     0,
     172,   173,   174,     0,   175,   176,   177,     0,   178,   179,
     180,   181,   661,   183,   184,   185,   662,   663,   187,     0,
     188,   189,   664,   191,     0,   192,     0,   193,   194,     0,
     195,   196,   197,   198,   199,     0,   200,     0,   201,   202,
       0,   203,   204,   205,   206,   207,   208,   209,   210,   211,
     212,     0,   213,   214,   215,   216,   217,   218,     0,   219,
     220,   221,   222,   223,   224,   225,   665,   666,     0,   667,
       0,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,     0,     0,   239,   240,   241,   242,     0,   243,   244,
     245,   668,   669,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   670,
     263,   671,   265,   266,   267,   268,   672,   269,   270,   271,
     272,   673,   674,   274,   675,   276,   277,   278,     0,   279,
     280,     0,     0,   676,   282,   283,     0,     0,   284,   285,
     286,   287,   288,   677,   290,   291,   292,   293,   294,   295,
     296,   297,   298,     0,   299,   300,   678,   302,   303,   304,
     305,   306,   307,     0,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   679,   318,   319,   320,   321,     0,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,     0,   334,   335,   336,   337,   338,   339,   680,   341,
     342,   343,   344,   345,   346,   347,   348,   349,     0,   350,
     351,   352,   353,   354,   681,   355,   356,   357,   358,   359,
     360,   361,   362,   682,   364,     0,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   683,     0,
     378,   379,     0,   380,   381,   382,   383,   384,   385,   386,
       0,   684,   685,     0,     0,   389,   390,   686,   392,   687,
     688,   394,   395,   396,   397,   398,   399,   400,     0,     0,
     401,   402,   403,   404,   405,   689,     0,   406,   407,   408,
     409,   410,   411,   690,     0,   413,   414,   415,   416,   417,
     418,     0,     0,   419,     0,     0,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   691,     0,     0,     0,
       0,     0,     0,   692,   693,     0,     0,     0,     0,     0,
       0,     0,   695,     0,     0,     0,     0,   696,    83,   635,
     501,   636,   637,   638,   639,   640,     0,     0,     0,     0,
       0,     0,     0,    84,    85,    86,    87,    88,    89,    90,
      91,     0,    92,    93,    94,     0,     0,     0,     0,     0,
       0,     0,    95,    96,     0,    97,    98,    99,   100,   101,
     102,   103,   104,   641,   106,   642,   643,     0,   109,   110,
     111,   112,   113,   114,   644,   645,   115,   116,   646,   647,
     119,     0,   120,   121,   122,   123,   648,     0,   649,     0,
     126,   127,   128,   129,   130,   131,   132,   133,   134,     0,
     135,   136,   137,   138,   139,   140,     0,   141,   142,   143,
     144,   650,   651,   652,   653,   654,   655,   656,   146,   147,
     148,   149,   150,   151,   657,   658,   154,   659,   155,     0,
     156,   157,   158,   159,   160,   161,     0,   162,   163,   164,
     165,   166,     0,     0,   167,   168,   660,   170,   171,     0,
     172,   173,   174,     0,   175,   176,   177,     0,   178,   179,
     180,   181,   661,   183,   184,   185,   662,   663,   187,     0,
     188,   189,   664,   191,     0,   192,     0,   193,   194,     0,
     195,   196,   197,   198,   199,     0,   200,     0,   201,   202,
       0,   203,   204,   205,   206,   207,   208,   209,   210,   211,
     212,     0,   213,   214,   215,   216,   217,   218,     0,   219,
     220,   221,   222,   223,   224,   225,   665,   666,     0,   667,
       0,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,     0,     0,   239,   240,   241,   242,     0,   243,   244,
     245,   668,   669,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   670,
     263,   671,   265,   266,   267,   268,   672,   269,   270,   271,
     272,   673,   674,   274,   675,   276,   277,   278,     0,   279,
     280,     0,     0,   676,   282,   283,     0,     0,   284,   285,
     286,   287,   288,   677,   290,   291,   292,   293,   294,   295,
     296,   297,   298,     0,   299,   300,   678,   302,   303,   304,
     305,   306,   307,     0,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   679,   318,   319,   320,   321,     0,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,     0,   334,   335,   336,   337,   338,   339,   680,   341,
     342,   343,   344,   345,   346,   347,   348,   349,     0,   350,
     351,   352,   353,   354,   681,   355,   356,   357,   358,   359,
     360,   361,   362,   682,   364,     0,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   683,     0,
     378,   379,     0,   380,   381,   382,   383,   384,   385,   386,
       0,   684,   685,     0,     0,   389,   390,   686,   392,   687,
     688,   394,   395,   396,   397,   398,   399,   400,     0,     0,
     401,   402,   403,   404,   405,   689,     0,   406,   407,   408,
     409,   410,   411,   690,     0,   413,   414,   415,   416,   417,
     418,     0,     0,   419,     0,     0,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   691,     0,     0,     0,
       0,     0,     0,   692,   693,     0,     0,     0,     0,     0,
       0,     0,  2282,     0,     0,     0,     0,   696,    83,   635,
     501,   636,   637,   638,   639,   640,     0,     0,     0,     0,
       0,     0,     0,    84,    85,    86,    87,    88,    89,    90,
      91,     0,    92,    93,    94,     0,     0,     0,     0,     0,
       0,     0,    95,    96,     0,    97,    98,    99,   100,   101,
     102,   103,  2513,   641,   106,   642,   643,     0,   109,   110,
     111,   112,   113,   114,   644,   645,   115,   116,   646,   647,
     119,     0,   120,   121,   122,   123,   648,     0,   649,     0,
     126,   127,   128,   129,   130,   131,   132,   133,   134,     0,
     135,   136,   137,   138,   139,   140,     0,   141,   142,   143,
    2514,   650,   651,   652,   653,   654,   655,   656,   146,   147,
     148,   149,   150,   151,   657,   658,   154,   659,   155,     0,
     156,   157,   158,   159,   160,   161,     0,   162,   163,   164,
     165,   166,     0,     0,   167,   168,   660,   170,   171,     0,
     172,   173,   174,     0,   175,   176,   177,     0,   178,   179,
     180,   181,   661,   183,   184,   185,   662,   663,   187,     0,
     188,   189,   664,   191,     0,   192,     0,   193,   194,     0,
     195,   196,   197,   198,   199,     0,   200,     0,   201,   202,
       0,   203,   204,   205,   206,   207,   208,   209,   210,   211,
     212,     0,   213,   214,   215,   216,   217,   218,     0,   219,
     220,   221,   222,   223,   224,   225,   665,   666,     0,   667,
       0,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,     0,     0,   239,   240,   241,   242,     0,   243,   244,
     245,   668,   669,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   670,
     263,   671,   265,   266,   267,   268,   672,   269,   270,   271,
     272,   673,   674,   274,   675,   276,   277,   278,     0,   279,
     280,     0,     0,   676,   282,   283,     0,     0,   284,   285,
     286,   287,   288,   677,   290,   291,   292,   293,   294,   295,
     296,   297,   298,     0,   299,   300,   678,   302,   303,   304,
     305,   306,   307,     0,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   679,   318,   319,   320,   321,     0,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,     0,   334,   335,   336,   337,   338,   339,   680,   341,
     342,   343,   344,   345,   346,   347,   348,   349,     0,   350,
     351,   352,   353,   354,   681,   355,   356,   357,   358,   359,
     360,   361,   362,   682,   364,     0,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   683,     0,
     378,   379,     0,   380,   381,   382,   383,   384,   385,   386,
       0,   684,   685,     0,     0,   389,   390,   686,   392,   687,
     688,   394,   395,   396,   397,  2515,   399,   400,     0,     0,
     401,   402,   403,   404,   405,   689,     0,   406,   407,   408,
     409,   410,   411,   690,     0,   413,   414,   415,   416,   417,
     418,     0,     0,   419,     0,     0,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   691,     0,     0,     0,
       0,     0,     0,   692,   693,     0,     0,     0,     0,     0,
       0,     0,   695,     0,     0,     0,     0,   696,    83,   635,
     501,   636,   637,   638,   639,   640,     0,     0,     0,     0,
       0,     0,     0,    84,    85,    86,    87,    88,    89,    90,
      91,     0,    92,    93,    94,     0,     0,     0,     0,     0,
       0,     0,    95,    96,     0,    97,    98,    99,   100,   101,
     102,   103,   104,   641,   106,   642,   643,     0,   109,   110,
     111,   112,   113,   114,   644,   645,   115,   116,   646,   647,
     119,     0,   120,   121,   122,   123,   648,     0,   649,     0,
     126,   127,   128,   129,   130,   131,   132,   133,   134,     0,
     135,   136,   137,   138,   139,   140,     0,   141,   142,   143,
    2514,   650,   651,   652,   653,   654,   655,   656,   146,   147,
     148,   149,   150,   151,   657,   658,   154,   659,   155,     0,
     156,   157,   158,   159,   160,   161,     0,   162,   163,   164,
     165,   166,     0,     0,   167,   168,   660,   170,   171,     0,
     172,   173,   174,     0,   175,   176,   177,     0,   178,   179,
     180,   181,   661,   183,   184,   185,   662,   663,   187,     0,
     188,   189,   664,   191,     0,   192,     0,   193,   194,     0,
     195,   196,   197,   198,   199,     0,   200,     0,   201,   202,
       0,   203,   204,   205,   206,   207,   208,   209,   210,   211,
     212,     0,   213,   214,   215,   216,   217,   218,     0,   219,
     220,   221,   222,   223,   224,   225,   665,   666,     0,   667,
       0,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,     0,     0,   239,   240,   241,   242,     0,   243,   244,
     245,   668,   669,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   670,
     263,   671,   265,   266,   267,   268,   672,   269,   270,   271,
     272,   673,   674,   274,   675,   276,   277,   278,     0,   279,
     280,     0,     0,   676,   282,   283,     0,     0,   284,   285,
     286,   287,   288,   677,   290,   291,   292,   293,   294,   295,
     296,   297,   298,     0,   299,   300,   678,   302,   303,   304,
     305,   306,   307,     0,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   679,   318,   319,   320,   321,     0,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,     0,   334,   335,   336,   337,   338,   339,   680,   341,
     342,   343,   344,   345,   346,   347,   348,   349,     0,   350,
     351,   352,   353,   354,   681,   355,   356,   357,   358,   359,
     360,   361,   362,   682,   364,     0,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   683,     0,
     378,   379,     0,   380,   381,   382,   383,   384,   385,   386,
       0,   684,   685,     0,     0,   389,   390,   686,   392,   687,
     688,   394,   395,   396,   397,  2515,   399,   400,     0,     0,
     401,   402,   403,   404,   405,   689,     0,   406,   407,   408,
     409,   410,   411,   690,     0,   413,   414,   415,   416,   417,
     418,     0,     0,   419,     0,     0,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   691,     0,     0,     0,
       0,     0,     0,   692,   693,     0,     0,     0,     0,     0,
       0,     0,   695,     0,     0,     0,     0,   696,    83,   635,
     501,   636,   637,   638,   639,   640,     0,     0,     0,     0,
       0,     0,     0,    84,    85,    86,    87,    88,    89,    90,
      91,     0,    92,    93,    94,     0,     0,     0,     0,     0,
       0,     0,    95,    96,     0,    97,    98,    99,   100,   101,
     102,   103,   104,   641,   106,   642,   643,     0,   109,   110,
     111,   112,   113,   114,   644,   645,   115,   116,   646,   647,
     119,     0,   120,   121,   122,   123,   648,     0,   649,     0,
     126,   127,   128,   129,   130,   131,   132,   133,   134,     0,
     135,   136,   137,   138,   139,   140,     0,   141,   142,   143,
     144,   650,   651,   652,   653,   654,   655,   656,   146,   147,
     148,   149,   150,   151,   657,   658,   154,     0,   155,     0,
     156,   157,   158,   159,   160,   161,     0,   162,   163,   164,
     165,   166,     0,     0,   167,   168,   660,   170,   171,     0,
     172,   173,   174,     0,   175,   176,   177,     0,   178,   179,
     180,   181,   661,   183,   184,   185,   662,   663,   187,     0,
     188,   189,   664,   191,     0,   192,     0,   193,   194,     0,
     195,   196,   197,   198,   199,     0,   200,     0,   201,   202,
       0,   203,   204,   205,   206,   207,   208,   209,   210,   211,
     212,     0,   213,   214,   215,   216,   217,   218,     0,   219,
     220,   221,   222,   223,   224,   225,   665,   666,     0,   667,
       0,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,     0,     0,   239,   240,   241,   242,     0,   243,   244,
     245,   668,   669,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   670,
     263,   671,   265,   266,   267,   268,     0,   269,   270,   271,
     272,   673,   674,   274,   675,   276,   277,   278,     0,   279,
     280,     0,     0,   676,   282,   283,     0,     0,   284,   285,
     286,   287,   288,   677,   290,   291,   292,   293,   294,   295,
     296,   297,   298,     0,   299,   300,   678,   302,   303,   304,
     305,   306,   307,     0,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   679,   318,   319,   320,   321,     0,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,     0,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,     0,   350,
     351,   352,   353,   354,   681,   355,   356,   357,   358,   359,
     360,   361,   362,   682,   364,     0,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   683,     0,
     378,   379,     0,   380,   381,   382,   383,   384,   385,   386,
       0,   684,   685,     0,     0,   389,   390,   686,   392,   687,
     688,   394,   395,   396,   397,   398,   399,   400,     0,     0,
     401,   402,   403,   404,   405,   689,     0,   406,   407,   408,
     409,   410,   411,   690,     0,   413,   414,   415,   416,   417,
     418,     0,     0,   419,     0,     0,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,     0,     0,     0,     0,
       0,     0,     0,  1356,  1357,     0,     0,    83,   635,   501,
     636,   637,  1358,   639,   640,     0,     0,   696,     0,     0,
       0,     0,    84,    85,    86,    87,    88,    89,    90,    91,
       0,    92,    93,    94,     0,     0,     0,     0,     0,     0,
       0,    95,    96,     0,    97,    98,    99,   100,   101,   102,
     103,   104,   641,   106,   642,   643,     0,   109,   110,   111,
     112,   113,   114,   644,   645,   115,   116,   646,   647,   119,
       0,   120,   121,   122,   123,   648,     0,   649,     0,   126,
     127,   128,   129,   130,   131,   132,   133,   134,     0,   135,
     136,   137,   138,   139,   140,     0,   141,   142,   143,   144,
     650,   651,   652,   653,   654,   655,   656,   146,   147,   148,
     149,   150,   151,   657,   658,   154,     0,   155,     0,   156,
     157,   158,   159,   160,   161,     0,   162,   163,   164,   165,
     166,     0,     0,   167,   168,   660,   170,   171,     0,   172,
     173,   174,     0,   175,   176,   177,     0,   178,   179,   180,
     181,   661,   183,   184,   185,   662,   663,   187,     0,   188,
     189,   664,   191,     0,   192,     0,   193,   194,     0,   195,
     196,   197,   198,   199,     0,   200,     0,   201,   202,     0,
     203,   204,   205,   206,   207,   208,   209,   210,   211,   212,
       0,   213,   214,   215,   216,   217,   218,     0,   219,   220,
     221,   222,   223,   224,   225,   665,   666,     0,   667,     0,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
       0,     0,   239,   240,   241,   242,     0,   243,   244,   245,
     668,   669,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   670,   263,
     671,   265,   266,   267,   268,     0,   269,   270,   271,   272,
     673,   674,   274,   675,   276,   277,   278,     0,   279,   280,
       0,     0,   281,   282,   283,     0,     0,   284,   285,   286,
     287,   288,   677,   290,   291,   292,   293,   294,   295,   296,
     297,   298,     0,   299,   300,   678,   302,   303,   304,   305,
     306,   307,     0,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   679,   318,   319,   320,   321,     0,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
       0,   334,   335,   336,   337,   338,   339,  1482,  1483,   342,
     343,   344,   345,   346,   347,   348,   349,     0,   350,   351,
     352,   353,   354,   681,   355,   356,   357,   358,   359,   360,
     361,   362,   682,   364,     0,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   683,     0,   378,
     379,     0,   380,   381,   382,   383,   384,   385,   386,     0,
     684,   685,     0,     0,   389,   390,   686,   392,   687,   688,
     394,   395,   396,   397,   398,   399,   400,     0,     0,   401,
     402,   403,   404,   405,   689,     0,   406,   407,   408,   409,
     410,   411,   690,     0,   413,   414,   415,   416,   417,   418,
       0,     0,   419,     0,     0,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,     0,     0,     0,     0,     0,
       0,     0,  1484,  1485,     0,     0,     0,     0,     0,     0,
       0,  1358,     0,     0,     0,     0,   696,    83,   635,   501,
     636,   637,   638,   639,   640,     0,     0,     0,     0,     0,
       0,     0,    84,    85,    86,    87,    88,    89,    90,    91,
       0,    92,    93,    94,     0,     0,     0,     0,     0,     0,
       0,    95,    96,     0,    97,    98,    99,   100,   101,   102,
     103,   104,   641,   106,   642,   643,     0,   109,   110,   111,
     112,   113,   114,   644,   645,   115,   116,   646,   647,   119,
       0,   120,   121,   122,   123,   648,     0,   649,     0,   126,
     127,   128,   129,   130,   131,   132,   133,   134,     0,   135,
     136,   137,   138,   139,   140,     0,   141,   142,   143,   144,
     650,   651,   652,   653,   654,   655,   656,   146,   147,   148,
     149,   150,   151,   657,   658,   154,     0,   155,     0,   156,
     157,   158,   159,   160,   161,     0,   162,   163,   164,   165,
     166,     0,     0,   167,   168,   660,   170,   171,     0,   172,
     173,   174,     0,   175,   176,   177,     0,   178,   179,   180,
     181,   661,   183,   184,   185,   662,   663,   187,     0,   188,
     189,   664,   191,     0,   192,     0,   193,   194,     0,   195,
     196,   197,   198,   199,     0,   200,     0,   201,   202,     0,
     203,   204,   205,   206,   207,   208,   209,   210,   211,   212,
       0,   213,   214,   215,   216,   217,   218,     0,   219,   220,
     221,   222,   223,   224,   225,   665,   666,     0,   667,     0,
     229,     0,   231,   232,   233,   234,   235,   236,   237,   238,
       0,     0,   239,   240,   241,   242,     0,   243,   244,   245,
     668,   669,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   670,   263,
     671,   265,   266,   267,   268,     0,   269,   270,   271,   272,
     673,   674,   274,   675,   276,   277,   278,     0,   279,   280,
       0,     0,   676,   282,   283,     0,     0,   284,   285,   286,
     287,   288,   677,   290,   291,   292,   293,   294,   295,   296,
     297,   298,     0,   299,   300,   678,   302,   303,   304,   305,
     306,   307,     0,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   679,   318,   319,   320,   321,     0,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
       0,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,     0,   350,   351,
     352,   353,   354,   681,   355,   356,   357,   358,   359,   360,
     361,   362,   682,   364,     0,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   683,     0,   378,
     379,     0,   380,   381,   382,   383,   384,   385,   386,     0,
     684,   685,     0,     0,   389,   390,   686,   392,   687,   688,
     394,   395,   396,   397,   398,   399,   400,     0,     0,   401,
     402,   403,   404,   405,   689,     0,   406,   407,   408,   409,
     410,   411,   690,     0,   413,   414,   415,   416,   417,   418,
       0,     0,   419,     0,     0,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,     0,     0,     0,     0,     0,
       0,     0,  1356,  1357,     0,     0,     0,     0,     0,     0,
       0,  1358,     0,     0,     0,     0,   696,    83,   635,   501,
     636,   637,   638,   639,   640,     0,     0,     0,     0,     0,
       0,     0,    84,    85,    86,    87,    88,    89,    90,    91,
       0,    92,    93,    94,     0,     0,     0,     0,     0,     0,
       0,    95,    96,     0,    97,    98,    99,   100,   101,   102,
     103, -1461,   641,   106,   642,   643,     0,   109,   110,   111,
     112,   113,   114,   644,   645,   115,   116,   646,   647,   119,
       0,   120,   121,   122,   123,   648,     0,   649,     0,   126,
     127,   128,   129,   130,   131,   132,   133,   134,     0,   135,
     136,   137,   138,   139,   140,     0,   141,   142,   143,  2514,
     650,   651,   652,   653,   654,   655,   656,   146,   147,   148,
     149,   150,   151,   657,   658,   154,   659,   155,     0,   156,
     157,   158,   159,   160,   161,     0,   162,   163,   164,   165,
     166,     0,     0,   167,   168,   660,   170,   171,     0,   172,
     173,   174,     0,   175,   176,   177,     0,   178,   179,   180,
     181,   661,   183,   184,   185,   662,   663,   187,     0,   188,
     189,   664,   191,     0,   192,     0,   193,   194,     0,   195,
     196,   197,   198,   199,     0,   200,     0,   201,   202,     0,
     203,   204,   205,   206,   207, -1461,   209,   210,   211,   212,
       0,   213,   214,   215,   216,   217,   218,     0,   219,   220,
     221,   222,   223,   224,   225,   665,   666,     0,   667,     0,
     229,     0,     0,   232,   233,   234,   235,   236,   237,   238,
       0,     0,   239,   240,   241, -1461,     0,   243,   244,   245,
     668,   669,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   670,   263,
     671,   265,   266,   267,   268,     0,   269,   270,     0,   272,
     673,   674,   274,   675,   276,   277,   278,     0,   279,   280,
       0,     0,   676,   282,   283,     0,     0,   284,   285,   286,
     287,   288,   677,   290,   291,   292,   293,   294,   295,   296,
     297,   298,     0,   299,   300,   678,   302,   303,   304,   305,
     306,   307,     0,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   679,   318,   319,   320,   321,     0,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
       0,   334,   335,   336,   337,   338,   339,   680,   341,   342,
     343,   344,   345,   346,   347,   348,   349,     0,   350,   351,
     352,   353,   354,   681,   355,   356,   357,   358,   359, -1461,
     361,   362,   682,   364,     0,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   683,     0,   378,
     379,     0,   380,   381,   382,   383,   384,   385,   386,     0,
     684,   685,     0,     0,   389,   390,   686,   392,   687,   688,
     394,   395,   396,   397,  2515,   399,   400,     0,     0,   401,
     402,   403,   404,   405,   689,     0,   406,   407,   408,   409,
     410,   411,   690,     0,   413,   414,   415,   416,   417,   418,
       0,     0,   419,     0,     0,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439, -1461,     0,     0,     0,     0,
       0,     0,   692,   693,     0,     0,     0,     0,     0,     0,
       0,   695,     0,     0,     0,     0,   696,    83,   635,   501,
     636,   637,   638,   639,   640,     0,     0,     0,     0,     0,
       0,     0,    84,    85,    86,    87,    88,    89,    90,    91,
       0,    92,    93,    94,     0,     0,     0,     0,     0,     0,
       0,    95,    96,     0,    97,    98,    99,   100,   101,   102,
     103,     0,   641,   106,   642,   643,     0,   109,   110,   111,
     112,   113,   114,   644,   645,   115,   116,   646,   647,   119,
       0,   120,   121,   122,   123,   648,     0,   649,     0,   126,
     127,   128,   129,   130,   131,   132,   133,   134,     0,   135,
     136,   137,   138,   139,   140,     0,   141,   142,   143,   144,
     650,   651,   652,   653,   654,   655,   656,   146,   147,   148,
     149,   150,   151,   657,   658,   154,   659,   155,     0,   156,
     157,   158,   159,   160,   161,     0,   162,   163,   164,   165,
     166,     0,     0,   167,   168,   660,   170,   171,     0,   172,
     173,   174,     0,   175,     0,   177,     0,   178,   179,   180,
     181,   661,   183,   184,   185,   662,   663,   187,     0,   188,
     189,   664,   191,     0,   192,     0,   193,   194,     0,   195,
     196,   197,   198,   199,     0,   200,     0,   201,   202,     0,
     203,   204,   205,   206,   207,     0,   209,   210,   211,   212,
       0,   213,   214,   215,   216,   217,   218,     0,   219,   220,
     221,   222,   223,   224,   225,   665,   666,     0,   667,     0,
     229,     0,     0,   232,   233,   234,   235,   236,   237,   238,
       0,     0,   239,   240,   241,     0,     0,   243,   244,   245,
     668,   669,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   670,   263,
     671,   265,   266,   267,   268,     0,   269,   270,     0,   272,
     673,   674,   274,   675,   276,   277,   278,     0,   279,   280,
       0,     0,   676,   282,   283,     0,     0,   284,   285,   286,
     287,   288,   677,   290,   291,   292,   293,   294,   295,   296,
     297,   298,     0,   299,   300,   678,   302,   303,   304,   305,
     306,   307,     0,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   679,   318,   319,   320,   321,     0,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
       0,   334,   335,   336,   337,   338,   339,   680,   341,   342,
     343,   344,   345,   346,   347,   348,   349,     0,   350,   351,
     352,   353,   354,   681,   355,   356,   357,   358,   359,     0,
     361,   362,   682,   364,     0,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   683,     0,   378,
     379,     0,   380,   381,   382,   383,   384,   385,   386,     0,
     684,   685,     0,     0,   389,   390,   686,   392,   687,   688,
     394,   395,   396,   397,   398,   399,   400,     0,     0,   401,
     402,   403,   404,   405,   689,     0,   406,   407,   408,   409,
     410,   411,   690,     0,   413,   414,   415,   416,   417,   418,
       0,     0,   419,     0,     0,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,     0,     0,     0,     0,     0,
       0,     0,   692,   693,   461,     0,     0,     0,     0,     0,
       0,   695,     0,     0,     0,     0,   696,     0,     0,    84,
      85,    86,    87,    88,    89,    90,    91,     0,    92,    93,
      94,     0,     0,     0,     0,     0,  1962,     0,    95,    96,
       0,    97,    98,    99,     0,   101,   102,   103,   104,   105,
       0,   107,   108,     0,   109,   110,   111,   112,   113,   114,
       0,     0,   115,   116,   117,   118,   119,     0,   120,   121,
     122,   123,   124,     0,     0,     0,   126,   127,   128,   129,
     130,     0,   132,   133,   134,     0,   135,   136,   137,   138,
     139,   140,     0,  -551,   142,   143,   144,     0,     0,     0,
       0,     0,     0,     0,   146,   147,   148,   149,   150,   151,
     152,   153,   154,     0,   155,     0,   156,   157,   158,   159,
     160,   161,     0,   162,   163,   164,   165,   166,     0,     0,
     167,   168,   169,   170,   171,     0,   172,   173,   174,     0,
     175,   176,   177,     0,   178,   179,   180,   181,   182,   183,
     184,   185,   186,     0,   187,     0,   188,   189,   190,   191,
       0,   192,     0,   193,     0,     0,  -551,   196,   197,   198,
     199,     0,   200,     0,   201,   202,     0,   203,   204,   205,
     206,   207,     0,   209,   210,   211,   212,     0,   213,   214,
     215,   216,   217,   218,     0,   219,  -551,   221,   222,   223,
     224,   225,   226,   227,     0,   228,     0,   229,     0,     0,
     232,  -551,   234,   235,   236,   237,   238,     0,     0,   239,
    -551,   241,     0,     0,   243,   244,   245,     0,     0,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,  -551,   264,   265,   266,
     267,   268,     0,   269,   270,     0,   272,     0,   273,   274,
     275,   276,   277,   278,     0,   279,   280,     0,     0,   281,
     282,   283,     0,     0,   284,   285,     0,   287,     0,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,     0,
     299,   300,   301,   302,   303,   304,   305,   306,   307,     0,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,     0,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,     0,   334,   335,
    -551,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,     0,   350,   351,   352,   353,   354,
       0,   355,   356,   357,   358,   359,     0,   361,   362,   363,
     364,     0,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,     0,   378,   379,     0,   380,
       0,   382,   383,   384,   385,   386,     0,   387,   388,     0,
       0,   389,   390,   391,   392,   393,     0,   394,   395,   396,
     397,   398,   399,   400,     0,     0,   401,   402,   403,   404,
     405,     0,     0,   406,   407,   408,   409,   410,   411,   412,
       0,   413,     0,   415,   416,   417,   418,     0,     0,   419,
       0,     0,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,     0,     0,     0,    83,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   753,
      84,    85,    86,    87,    88,    89,    90,    91,     0,    92,
      93,    94,     0,     0,     0,     0,     0,     0,     0,    95,
      96,     0,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,     0,   109,   110,   111,   112,   113,
     114,     0,   645,   115,   116,   117,   118,   119,     0,   120,
     121,   122,   123,   648,     0,   649,     0,   126,   127,   128,
     129,   130,   131,   132,   133,   134,     0,   135,   136,   137,
     138,   139,   140,     0,   141,   142,   143,   144,   650,   651,
     652,   653,   654,   655,   656,   146,   147,   148,   149,   150,
     151,   152,   153,   154,     0,   155,     0,   156,   157,   158,
     159,   160,   161,     0,   162,   163,   164,   165,   166,     0,
       0,   167,   168,   169,   170,   171,     0,   172,   173,   174,
       0,   175,   176,   177,     0,   178,   179,   180,   181,   182,
     183,   184,   185,   662,     0,   187,     0,   188,   189,   190,
     191,     0,   192,     0,   193,   194,     0,   195,   196,   197,
     198,   199,     0,   200,     0,   201,   202,     0,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,     0,   213,
     214,   215,   216,   217,   218,     0,   219,   220,   221,   222,
     223,   224,   225,   226,   227,     0,   228,     0,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,  1731,     0,
     239,   240,   241,   242,     0,   243,   244,   245,   668,   669,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,     0,   269,   270,   271,   272,     0,   674,
     274,   275,   276,   277,   278,     0,   279,   280,     0,   526,
     281,   282,   283,     0,     0,   284,   285,   286,   287,   288,
     677,   290,   291,   292,   293,   294,   295,   296,   297,   298,
       0,   299,   300,   678,   302,   303,   304,   305,   306,   307,
       0,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,     0,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,     0,   334,
     335,   336,   337,   338,   339,   340,  1732,   342,   343,   344,
     345,   346,   347,   348,   349,    22,   350,   351,   352,   353,
     354,   681,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,     0,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   683,     0,   378,   379,    26,
     380,   381,   382,   383,   384,   385,   386,     0,   387,   388,
       0,     0,   389,   390,   686,   392,   687,     0,   394,   395,
     396,   397,   398,   399,   400,     0,     0,   401,   402,   403,
     404,   405,   689,     0,   406,   407,   408,   409,   410,   617,
     412,     0,   413,   414,   415,   416,   417,   418,     0,     0,
     419,     0,    29,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,     0,     0,    30,    83,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1733,
       0,    84,    85,    86,    87,    88,    89,    90,    91,     0,
      92,    93,    94,     0,     0,     0,     0,     0,     0,     0,
      95,    96,     0,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,     0,   109,   110,   111,   112,
     113,   114,     0,   645,   115,   116,   117,   118,   119,     0,
     120,   121,   122,   123,   648,     0,   649,     0,   126,   127,
     128,   129,   130,   131,   132,   133,   134,     0,   135,   136,
     137,   138,   139,   140,     0,   141,   142,   143,   144,   650,
     651,   652,   653,   654,   655,   656,   146,   147,   148,   149,
     150,   151,   152,   153,   154,     0,   155,     0,   156,   157,
     158,   159,   160,   161,     0,   162,   163,   164,   165,   166,
       0,     0,   167,   168,   169,   170,   171,     0,   172,   173,
     174,     0,   175,   176,   177,     0,   178,   179,   180,   181,
     182,   183,   184,   185,   662,     0,   187,     0,   188,   189,
     190,   191,     0,   192,     0,   193,   194,     0,   195,   196,
     197,   198,   199,     0,   200,     0,   201,   202,     0,   203,
     204,   205,   206,   207,   208,   209,   210,   211,   212,     0,
     213,   214,   215,   216,   217,   218,     0,   219,   220,   221,
     222,   223,   224,   225,   226,   227,     0,   228,     0,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,  1731,
       0,   239,   240,   241,   242,     0,   243,   244,   245,   668,
     669,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,     0,   269,   270,   271,   272,     0,
     674,   274,   275,   276,   277,   278,     0,   279,   280,     0,
     526,   281,   282,   283,     0,     0,   284,   285,   286,   287,
     288,   677,   290,   291,   292,   293,   294,   295,   296,   297,
     298,     0,   299,   300,   678,   302,   303,   304,   305,   306,
     307,     0,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,     0,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,     0,
     334,   335,   336,   337,   338,   339,   340,  1732,   342,   343,
     344,   345,   346,   347,   348,   349,     0,   350,   351,   352,
     353,   354,   681,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,     0,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   683,     0,   378,   379,
       0,   380,   381,   382,   383,   384,   385,   386,     0,   387,
     388,     0,     0,   389,   390,   686,   392,   687,     0,   394,
     395,   396,   397,   398,   399,   400,     0,     0,   401,   402,
     403,   404,   405,   689,     0,   406,   407,   408,   409,   410,
     411,   412,     0,   413,   414,   415,   416,   417,   418,     0,
       0,   419,     0,     0,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,     0,     0,    83,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1733,    84,    85,    86,    87,    88,    89,    90,    91,     0,
      92,    93,    94,     0,     0,     0,     0,     0,     0,     0,
      95,    96,     0,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,     0,   109,   110,   111,   112,
     113,   114,     0,   645,   115,   116,   117,   118,   119,     0,
     120,   121,   122,   123,   648,     0,   649,     0,   126,   127,
     128,   129,   130,   131,   132,   133,   134,     0,   135,   136,
     137,   138,   139,   140,     0,   141,   142,   143,   144,   650,
     651,   652,   653,   654,   655,   656,   146,   147,   148,   149,
     150,   151,   152,   153,   154,     0,   155,     0,   156,   157,
     158,   159,   160,   161,     0,   162,   163,   164,   165,   166,
       0,     0,   167,   168,   169,   170,   171,     0,   172,   173,
     174,     0,   175,   176,   177,     0,   178,   179,   180,   181,
     182,   183,   184,   185,   662,     0,   187,     0,   188,   189,
     190,   191,     0,   192,     0,   193,   194,     0,   195,   196,
     197,   198,   199,     0,   200,     0,   201,   202,     0,   203,
     204,   205,   206,   207,   208,   209,   210,   211,   212,     0,
     213,   214,   215,   216,   217,   218,     0,   219,   220,   221,
     222,   223,   224,   225,   226,   227,     0,   228,     0,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,     0,
       0,   239,   240,   241,   242,     0,   243,   244,   245,   668,
     669,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,     0,   269,   270,   271,   272,     0,
     674,   274,   275,   276,   277,   278,     0,   279,   280,     0,
       0,   281,   282,   283,     0,     0,   284,   285,   286,   287,
     288,   677,   290,   291,   292,   293,   294,   295,   296,   297,
     298,     0,   299,   300,   678,   302,   303,   304,   305,   306,
     307,     0,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,     0,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,     0,
     334,   335,   336,   337,   338,   339,   340,  1732,   342,   343,
     344,   345,   346,   347,   348,   349,     0,   350,   351,   352,
     353,   354,   681,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,     0,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   683,     0,   378,   379,
       0,   380,   381,   382,   383,   384,   385,   386,     0,   387,
     388,     0,     0,   389,   390,   686,   392,   687,     0,   394,
     395,   396,   397,   398,   399,   400,     0,     0,   401,   402,
     403,   404,   405,   689,     0,   406,   407,   408,   409,   410,
     411,   412,     0,   413,   414,   415,   416,   417,   418,     0,
       0,   419,     0,     0,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,     0,     0,    83,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      31,    84,    85,    86,    87,    88,    89,    90,    91,     0,
      92,    93,    94,     0,     0,     0,     0,     0,     0,     0,
      95,    96,     0,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,     0,   109,   110,   111,   112,
     113,   114,     0,   645,   115,   116,   117,   118,   119,     0,
     120,   121,   122,   123,   648,     0,   649,     0,   126,   127,
     128,   129,   130,   131,   132,   133,   134,     0,   135,   136,
     137,   138,   139,   140,     0,   141,   142,   143,   144,   650,
     651,   652,   653,   654,   655,   656,   146,   147,   148,   149,
     150,   151,   152,   153,   154,     0,   155,     0,   156,   157,
     158,   159,   160,   161,     0,   162,   163,   164,   165,   166,
       0,     0,   167,   168,   169,   170,   171,     0,   172,   173,
     174,     0,   175,   176,   177,     0,   178,   179,   180,   181,
     182,   183,   184,   185,   662,     0,   187,     0,   188,   189,
     190,   191,     0,   192,     0,   193,   194,     0,   195,   196,
     197,   198,   199,     0,   200,     0,   201,   202,     0,   203,
     204,   205,   206,   207,   208,   209,   210,   211,   212,     0,
     213,   214,   215,   216,   217,   218,     0,   219,   220,   221,
     222,   223,   224,   225,   226,   227,     0,   228,     0,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,     0,
       0,   239,   240,   241,   242,     0,   243,   244,   245,   668,
     669,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,     0,   269,   270,   271,   272,     0,
     674,   274,   275,   276,   277,   278,     0,   279,   280,     0,
       0,   281,   282,   283,     0,     0,   284,   285,   286,   287,
     288,   677,   290,   291,   292,   293,   294,   295,   296,   297,
     298,     0,   299,   300,   678,   302,   303,   304,   305,   306,
     307,     0,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,     0,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,     0,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,     0,   350,   351,   352,
     353,   354,   681,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,     0,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   683,     0,   378,   379,
       0,   380,   381,   382,   383,   384,   385,   386,     0,   387,
     388,     0,     0,   389,   390,   686,   392,   687,     0,   394,
     395,   396,   397,   398,   399,   400,     0,     0,   401,   402,
     403,   404,   405,   689,     0,   406,   407,   408,   409,   410,
     411,   412,     0,   413,   414,   415,   416,   417,   418,     0,
       0,   419,     0,     0,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,     0,     0,   616,   955,   501,     0,
       0,     0,   639,     0,     0,     0,     0,     0,     0,     0,
    2293,    84,    85,    86,    87,    88,    89,    90,    91,     0,
      92,    93,    94,     0,     0,     0,     0,     0,     0,     0,
      95,    96,     0,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,     0,   109,   110,   111,   112,
     113,   114,     0,     0,   115,   116,   117,   118,   119,     0,
     120,   121,   122,   123,   124,     0,   125,     0,   126,   127,
     128,   129,   130,   131,   132,   133,   134,     0,   135,   136,
     137,   138,   139,   140,     0,   141,   142,   143,   144,     0,
       0,     0,   145,     0,     0,     0,   146,   147,   148,   149,
     150,   151,   152,   153,   154,     0,   155,     0,   156,   157,
     158,   159,   160,   161,     0,   162,   163,   164,   165,   166,
       0,     0,   167,   168,   169,   170,   171,     0,   172,   173,
     174,     0,   175,   176,   177,     0,   178,   179,   180,   181,
     182,   183,   184,   185,   186,   956,   187,     0,   188,   189,
     190,   191,     0,   192,     0,   193,   194,     0,   195,   196,
     197,   198,   199,     0,   200,     0,   201,   202,     0,   203,
     204,   205,   206,   207,   208,   209,   210,   211,   212,     0,
     213,   214,   215,   216,   217,   218,     0,   219,   220,   221,
     222,   223,   224,   225,   226,   227,     0,   228,     0,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,     0,
       0,   239,   240,   241,   242,     0,   243,   244,   245,     0,
       0,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,     0,   269,   270,   271,   272,     0,
     273,   274,   275,   276,   277,   278,     0,   279,   280,   957,
       0,   281,   282,   283,     0,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,     0,   299,   300,   301,   302,   303,   304,   305,   306,
     307,     0,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,     0,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,     0,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,     0,   350,   351,   352,
     353,   354,     0,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,     0,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,     0,   378,   379,
       0,   380,   381,   382,   383,   384,   385,   386,     0,   387,
     388,     0,     0,   389,   390,   391,   392,   393,   958,   394,
     395,   396,   397,   398,   399,   400,     0,     0,   401,   402,
     403,   404,   405,     0,     0,   406,   407,   408,   409,   410,
     411,   412,     0,   413,   414,   415,   416,   417,   418,     0,
       0,   419,     0,     0,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,     0,     0,   616,     0,     0,     0,
       0,   959,   960,  2427,     0,     0,     0,     0,     0,     0,
    2428,    84,    85,    86,    87,    88,    89,    90,    91,     0,
      92,    93,    94,     3,     4,     0,     0,     0,     0,     0,
      95,    96,     0,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,     0,   109,   110,   111,   112,
     113,   114,     0,     0,   115,   116,   117,   118,   119,     0,
     120,   121,   122,   123,   124,     0,   125,     0,   126,   127,
     128,   129,   130,   131,   132,   133,   134,     0,   135,   136,
     137,   138,   139,   140,     0,   141,   142,   143,   144,     0,
       0,     0,   145,     0,     0,     0,   146,   147,   148,   149,
     150,   151,   152,   153,   154,     0,   155,     0,   156,   157,
     158,   159,   160,   161,     0,   162,   163,   164,   165,   166,
       0,     0,   167,   168,   169,   170,   171,     0,   172,   173,
     174,     0,   175,   176,   177,     0,   178,   179,   180,   181,
     182,   183,   184,   185,   186,     0,   187,     0,   188,   189,
     190,   191,     0,   192,     0,   193,   194,     0,   195,   196,
     197,   198,   199,     0,   200,     0,   201,   202,     0,   203,
     204,   205,   206,   207,   208,   209,   210,   211,   212,     0,
     213,   214,   215,   216,   217,   218,     0,   219,   220,   221,
     222,   223,   224,   225,   226,   227,     0,   228,     0,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,     0,
       0,   239,   240,   241,   242,     0,   243,   244,   245,     0,
       0,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,     0,   269,   270,   271,   272,     0,
     273,   274,   275,   276,   277,   278,     0,   279,   280,     0,
       0,   281,   282,   283,     0,     0,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,     0,   299,   300,   301,   302,   303,   304,   305,   306,
     307,     0,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,     0,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,     0,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,    22,   350,   351,   352,
     353,   354,     0,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,     0,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,     0,   378,   379,
      26,   380,   381,   382,   383,   384,   385,   386,     0,   387,
     388,     0,     0,   389,   390,   391,   392,   393,     0,   394,
     395,   396,   397,   398,   399,   400,     0,     0,   401,   402,
     403,   404,   405,     0,     0,   406,   407,   408,   409,   410,
     617,   412,     0,   413,   414,   415,   416,   417,   418,     0,
       0,   419,     0,    29,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,     0,     0,    30,   461,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      31,     0,    84,    85,    86,    87,    88,    89,    90,    91,
       0,    92,    93,    94,     0,     0,     0,     0,     0,     0,
       0,    95,    96,     0,    97,    98,    99,     0,   101,   102,
     103,   104,   105,     0,   107,   108,     0,   109,   110,   111,
     112,   113,   114,     0,     0,   115,   116,   117,   118,   119,
       0,   120,   121,   122,   123,   124,     0,     0,     0,   126,
     127,   128,   129,   130,     0,   132,   133,   134,     0,   135,
     136,   137,   138,   139,   140,     0,     0,   142,   143,   144,
       0,     0,     0,     0,     0,     0,     0,   146,   147,   148,
     149,   150,   151,   152,   153,   154,     0,   155,     0,   156,
     157,   158,   159,   160,   161,     0,   162,   163,   164,   165,
     166,     0,     0,   167,   168,   169,   170,   171,     0,   172,
     173,   174,     0,   175,   176,   177,     0,   178,   179,   180,
     181,   182,   183,   184,   185,   186,     0,   187,     0,   188,
     189,   190,   191,     0,   192,     0,   193,     0,     0,     0,
     196,   197,   198,   199,     0,   200,     0,   201,   202,     0,
     203,   204,   205,   206,   207,     0,   209,   210,   211,   212,
       0,   213,   214,   215,   216,   217,   218,     0,   219,     0,
     221,   222,   223,   224,   225,   226,   227,     0,   228,     0,
     229,     0,     0,   232,     0,   234,   235,   236,   237,   238,
       0,     0,   239,     0,   241,     0,     0,   243,   244,   245,
       0,     0,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,     0,
     264,   265,   266,   267,   268,     0,   269,   270,     0,   272,
       0,   273,   274,   275,   276,   277,   278,     0,   279,   280,
       0,     0,   281,   282,   283,     0,     0,   284,   285,     0,
     287,     0,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,     0,   299,   300,   301,   302,   303,   304,   305,
     306,   307,     0,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,     0,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
       0,   334,   335,     0,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,    22,   350,   351,
     352,   353,   354,     0,   355,   356,   357,   358,   359,     0,
     361,   362,   363,   364,     0,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,     0,   378,
     379,    26,   380,     0,   382,   383,   384,   385,   386,     0,
     387,   388,     0,     0,   389,   390,   391,   392,   393,     0,
     394,   395,   396,   397,   398,   399,   400,     0,     0,   401,
     402,   403,   404,   405,     0,     0,   406,   407,   408,   409,
     410,   617,   412,     0,   413,     0,   415,   416,   417,   418,
       0,     0,   419,     0,    29,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,     0,     0,    30,   461,     0,
    2133,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    31,     0,    84,    85,    86,    87,    88,    89,    90,
      91,     0,    92,    93,    94,     0,     0,     0,     0,     0,
       0,     0,    95,    96,     0,    97,    98,    99,     0,   101,
     102,   103,   104,   105,     0,   107,   108,     0,   109,   110,
     111,   112,   113,   114,     0,     0,   115,   116,   117,   118,
     119,     0,   120,   121,   122,   123,   124,     0,     0,     0,
     126,   127,   128,   129,   130,     0,   132,   133,   134,     0,
     135,   136,   137,   138,   139,   140,     0,     0,   142,   143,
     144,     0,     0,     0,     0,     0,     0,     0,   146,   147,
     148,   149,   150,   151,   152,   153,   154,     0,   155,     0,
     156,   157,   158,   159,   160,   161,     0,   162,   163,   164,
     165,   166,     0,     0,   167,   168,   169,   170,   171,     0,
     172,   173,   174,     0,   175,   176,   177,     0,   178,   179,
     180,   181,   182,   183,   184,   185,   186,     0,   187,     0,
     188,   189,   190,   191,     0,   192,     0,   193,     0,     0,
       0,   196,   197,   198,   199,     0,   200,     0,   201,   202,
       0,   203,   204,   205,   206,   207,     0,   209,   210,   211,
     212,     0,   213,   214,   215,   216,   217,   218,     0,   219,
       0,   221,   222,   223,   224,   225,   226,   227,     0,   228,
       0,   229,     0,     0,   232,     0,   234,   235,   236,   237,
     238,     0,     0,   239,     0,   241,     0,     0,   243,   244,
     245,     0,     0,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
       0,   264,   265,   266,   267,   268,     0,   269,   270,     0,
     272,     0,   273,   274,   275,   276,   277,   278,     0,   279,
     280,     0,     0,   281,   282,   283,     0,     0,   284,   285,
       0,   287,     0,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,     0,   299,   300,   301,   302,   303,   304,
     305,   306,   307,     0,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,     0,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,     0,   334,   335,     0,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,     0,   350,
     351,   352,   353,   354,     0,   355,   356,   357,   358,   359,
       0,   361,   362,   363,   364,     0,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,     0,
     378,   379,     0,   380,     0,   382,   383,   384,   385,   386,
       0,   387,   388,     0,     0,   389,   390,   391,   392,   393,
       0,   394,   395,   396,   397,   398,   399,   400,     0,     0,
     401,   402,   403,   404,   405,     0,     0,   406,   407,   408,
     409,   410,   411,   412,     0,   413,     0,   415,   416,   417,
     418,     0,     0,   419,     0,     0,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,     0,     0,   461,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2149,    84,    85,    86,    87,    88,    89,    90,
      91,     0,    92,    93,    94,     0,     0,     0,     0,     0,
       0,     0,    95,    96,     0,    97,    98,    99,     0,   101,
     102,   103,   104,   105,     0,   107,   108,     0,   109,   110,
     111,   112,   113,   114,     0,     0,   115,   116,   117,   118,
     119,     0,   120,   121,   122,   123,   124,     0,     0,     0,
     126,   127,   128,   129,   130,     0,   132,   133,   134,     0,
     135,   136,   137,   138,   139,   140,     0,     0,   142,   143,
     144,     0,     0,     0,     0,     0,     0,     0,   146,   147,
     148,   149,   150,   151,   152,   153,   154,     0,   155,     0,
     156,   157,   158,   159,   160,   161,     0,   162,   163,   164,
     165,   166,     0,     0,   167,   168,   169,   170,   171,     0,
     172,   173,   174,     0,   175,   176,   177,     0,   178,   179,
     180,   181,   182,   183,   184,   185,   186,     0,   187,     0,
     188,   189,   190,   191,     0,   192,     0,   193,     0,     0,
       0,   196,   197,   198,   199,     0,   200,     0,   201,   202,
       0,   203,   204,   205,   206,   207,     0,   209,   210,   211,
     212,     0,   213,   214,   215,   216,   217,   218,     0,   219,
       0,   221,   222,   223,   224,   225,   226,   227,     0,   228,
       0,   229,     0,     0,   232,     0,   234,   235,   236,   237,
     238,     0,     0,   239,     0,   241,     0,     0,   243,   244,
     245,     0,     0,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
       0,   264,   265,   266,   267,   268,     0,   269,   270,     0,
     272,     0,   273,   274,   275,   276,   277,   278,     0,   279,
     280,     0,     0,   281,   282,   283,     0,     0,   284,   285,
       0,   287,     0,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,     0,   299,   300,   301,   302,   303,   304,
     305,   306,   307,     0,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,     0,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,     0,   334,   335,     0,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,     0,   350,
     351,   352,   353,   354,     0,   355,   356,   357,   358,   359,
       0,   361,   362,   363,   364,     0,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,     0,
     378,   379,     0,   380,     0,   382,   383,   384,   385,   386,
       0,   387,   388,     0,     0,   389,   390,   391,   392,   393,
       0,   394,   395,   396,   397,   398,   399,   400,     0,     0,
     401,   402,   403,   404,   405,     0,     0,   406,   407,   408,
     409,   410,   411,   412,     0,   413,     0,   415,   416,   417,
     418,     0,     0,   419,     0,     0,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,     0,     0,   461,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   734,    84,    85,    86,    87,    88,    89,    90,
      91,     0,    92,    93,    94,     0,     0,     0,     0,     0,
       0,     0,    95,    96,     0,    97,    98,    99,     0,   101,
     102,   103,   104,   105,     0,   107,   108,     0,   109,   110,
     111,   112,   113,   114,     0,     0,   115,   116,   117,   118,
     119,     0,   120,   121,   122,   123,   124,     0,     0,     0,
     126,   127,   128,   129,   130,     0,   132,   133,   134,     0,
     135,   136,   137,   138,   139,   140,     0,     0,   142,   143,
     144,     0,     0,     0,     0,     0,     0,     0,   146,   147,
     148,   149,   150,   151,   152,   153,   154,     0,   155,     0,
     156,   157,   158,   159,   160,   161,     0,   162,   163,   164,
     165,   166,     0,     0,   167,   168,   169,   170,   171,     0,
     172,   173,   174,     0,   175,   176,   177,     0,   178,   179,
     180,   181,   182,   183,   184,   185,   186,     0,   187,     0,
     188,   189,   190,   191,     0,   192,     0,   193,     0,     0,
       0,   196,   197,   198,   199,     0,   200,     0,   201,   202,
       0,   203,   204,   205,   206,   207,     0,   209,   210,   211,
     212,     0,   213,   214,   215,   216,   217,   218,     0,   219,
       0,   221,   222,   223,   224,   225,   226,   227,     0,   228,
       0,   229,     0,     0,   232,     0,   234,   235,   236,   237,
     238,     0,     0,   239,     0,   241,     0,     0,   243,   244,
     245,     0,     0,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
       0,   264,   265,   266,   267,   268,     0,   269,   270,     0,
     272,     0,   273,   274,   275,   276,   277,   278,     0,   279,
     280,     0,     0,   281,   282,   283,     0,     0,   284,   285,
       0,   287,     0,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,     0,   299,   300,   301,   302,   303,   304,
     305,   306,   307,     0,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,     0,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,     0,   334,   335,     0,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,     0,   350,
     351,   352,   353,   354,     0,   355,   356,   357,   358,   359,
       0,   361,   362,   363,   364,     0,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,     0,
     378,   379,     0,   380,     0,   382,   383,   384,   385,   386,
       0,   387,   388,     0,     0,   389,   390,   391,   392,   393,
       0,   394,   395,   396,   397,   398,   399,   400,     0,     0,
     401,   402,   403,   404,   405,     0,     0,   406,   407,   408,
     409,   410,   411,   412,     0,   413,     0,   415,   416,   417,
     418,     0,     0,   419,     0,     0,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,     0,     0,   461,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1472,    84,    85,    86,    87,    88,    89,    90,
      91,     0,    92,    93,    94,     0,     0,     0,     0,     0,
       0,     0,    95,    96,     0,    97,    98,    99,     0,   101,
     102,   103,   104,   105,     0,   107,   108,     0,   109,   110,
     111,   112,   113,   114,     0,     0,   115,   116,   117,   118,
     119,     0,   120,   121,   122,   123,   124,     0,     0,     0,
     126,   127,   128,   129,   130,     0,   132,   133,   134,     0,
     135,   136,   137,   138,   139,   140,     0,     0,   142,   143,
     144,     0,     0,     0,     0,     0,     0,     0,   146,   147,
     148,   149,   150,   151,   152,   153,   154,     0,   155,     0,
     156,   157,   158,   159,   160,   161,     0,   162,   163,   164,
     165,   166,     0,     0,   167,   168,   169,   170,   171,     0,
     172,   173,   174,     0,   175,   176,   177,     0,   178,   179,
     180,   181,   182,   183,   184,   185,   186,     0,   187,     0,
     188,   189,   190,   191,     0,   192,     0,   193,     0,     0,
       0,   196,   197,   198,   199,     0,   200,     0,   201,   202,
       0,   203,   204,   205,   206,   207,     0,   209,   210,   211,
     212,     0,   213,   214,   215,   216,   217,   218,     0,   219,
       0,   221,   222,   223,   224,   225,   226,   227,     0,   228,
       0,   229,     0,     0,   232,     0,   234,   235,   236,   237,
     238,     0,     0,   239,     0,   241,     0,     0,   243,   244,
     245,     0,     0,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
       0,   264,   265,   266,   267,   268,     0,   269,   270,     0,
     272,     0,   273,   274,   275,   276,   277,   278,     0,   279,
     280,     0,     0,   281,   282,   283,     0,     0,   284,   285,
       0,   287,     0,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,     0,   299,   300,   301,   302,   303,   304,
     305,   306,   307,     0,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,     0,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,     0,   334,   335,     0,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,     0,   350,
     351,   352,   353,   354,     0,   355,   356,   357,   358,   359,
       0,   361,   362,   363,   364,     0,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,     0,
     378,   379,     0,   380,     0,   382,   383,   384,   385,   386,
       0,   387,   388,     0,     0,   389,   390,   391,   392,   393,
       0,   394,   395,   396,   397,   398,   399,   400,     0,     0,
     401,   402,   403,   404,   405,     0,     0,   406,   407,   408,
     409,   410,   411,   412,     0,   413,     0,   415,   416,   417,
     418,     0,     0,   419,     0,     0,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,     0,     0,     0,     0,
       0,   975,   955,   501,     0,     0,  1338,   639,     0,     0,
       0,     0,  1946,  1339,  1340,  1341,    84,    85,    86,    87,
      88,    89,    90,    91,   834,    92,    93,    94,   835,   836,
     837,   838,   839,   840,   841,    95,    96,   842,    97,    98,
      99,   100,   101,   102,   103,     0,   976,   106,   977,   978,
     843,   109,   110,   111,   112,   113,   114,   844,   845,   115,
     116,   979,   980,   119,   846,   120,   121,   122,   123,     0,
     847,   125,   848,   126,   127,   128,   129,   130,   131,   132,
     133,   134,   849,   135,   136,   137,   138,   139,   140,   850,
     141,   142,   143,   144,   851,   852,   853,   145,   854,   855,
     856,   146,   147,   148,   149,   150,   151,   981,   982,   154,
     857,   155,   858,   156,   157,   158,   159,   160,   161,   859,
     162,   163,   164,   165,   166,   860,   861,   167,   168,   660,
     170,   171,   862,   172,   173,   174,   863,   175,   176,   177,
     864,   178,   179,   180,   181,     0,   183,   184,   185,     0,
     865,   187,   866,   188,   189,   983,   191,   867,   192,   868,
     193,   194,   869,   195,   196,   197,   198,   199,   870,   200,
     871,     0,   202,   872,   203,   204,   205,   206,   207,   208,
     209,   210,   211,   212,   873,   213,   214,   215,   216,   217,
     218,   874,   219,   220,     0,   222,   223,   224,   225,   984,
     985,   875,   986,   876,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   877,   878,   239,   240,   241,   242,
     879,   243,   244,   245,   880,   881,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   987,   263,   988,   265,   266,   267,  2047,   882,
     269,   270,   271,   272,   883,     0,   274,   989,   276,   277,
     278,   884,   279,   280,   885,   886,  2048,   282,   283,   887,
     888,   284,     0,   286,   287,   288,     0,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   889,   299,   300,     0,
     302,   303,     0,   305,   306,   307,   890,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   990,   318,   319,   320,
     321,   891,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   892,   334,   335,   336,   337,   338,
     339,     0,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   893,   350,   351,   352,   353,   354,   894,   355,  2049,
     357,   358,   359,   360,   361,   362,   992,   364,   895,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,     0,   896,   378,   379,   897,   380,   381,   382,   383,
     384,   385,   386,   898,   993,   994,   899,   900,   389,   390,
       0,   392,     0,   901,   394,   395,   396,   397,   398,   399,
     400,   902,   903,   401,   402,   403,   404,   405,   904,   905,
     406,   407,   408,   409,   410,     0,   995,   906,   413,   414,
     415,   416,   417,   418,   907,   908,   419,   909,   910,   420,
     421,   422,   423,   424,   425,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   437,   438,   439,     0,
     461,     0,  1342,  1343,  1344,  1338,  2050,  2051,  1347,  1348,
    1349,  1350,  1339,  1340,  1341,    84,    85,    86,    87,    88,
      89,    90,    91,     0,    92,    93,    94,     0,     0,     0,
       0,     0,     0,     0,    95,    96,     0,    97,    98,    99,
       0,   101,   102,   103,   104,   105,     0,   107,   108,     0,
     109,   110,   111,   112,   113,   114,     0,     0,   115,   116,
     117,   118,   119,     0,   120,   121,   122,   123,   124,     0,
       0,     0,   126,   127,   128,   129,   130,     0,   132,   133,
     134,     0,   135,   136,   137,   138,   139,   140,     0,     0,
     142,   143,   144,     0,     0,     0,     0,     0,     0,     0,
     146,   147,   148,   149,   150,   151,   152,   153,   154,     0,
     155,     0,   156,   157,   158,   159,   160,   161,     0,   162,
     163,   164,   165,   166,     0,     0,   167,   168,   169,   170,
     171,     0,   172,   173,   174,     0,   175,   176,   177,     0,
     178,   179,   180,   181,   182,   183,   184,   185,   186,     0,
     187,     0,   188,   189,   190,   191,     0,   192,     0,   193,
       0,     0,     0,   196,   197,   198,   199,     0,   200,     0,
     201,   202,     0,   203,   204,   205,   206,   207,     0,   209,
     210,   211,   212,     0,   213,   214,   215,   216,   217,   218,
       0,   219,     0,   221,   222,   223,   224,   225,   226,   227,
       0,   228,     0,   229,     0,     0,   232,     0,   234,   235,
     236,   237,   238,     0,     0,   239,     0,   241,     0,     0,
     243,   244,   245,     0,     0,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,     0,   264,   265,   266,   267,   268,     0,   269,
     270,     0,   272,     0,   273,   274,   275,   276,   277,   278,
       0,   279,   280,     0,     0,   281,   282,   283,     0,     0,
     284,   285,     0,   287,     0,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,     0,   299,   300,   301,   302,
     303,   304,   305,   306,   307,     0,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
       0,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,     0,   334,   335,     0,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
       0,   350,   351,   352,   353,   354,     0,   355,   356,   357,
     358,   359,     0,   361,   362,   363,   364,     0,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,     0,   378,   379,     0,   380,     0,   382,   383,   384,
     385,   386,     0,   387,   388,     0,     0,   389,   390,   391,
     392,   393,     0,   394,   395,   396,   397,   398,   399,   400,
       0,     0,   401,   402,   403,   404,   405,     0,     0,   406,
     407,   408,   409,   410,   411,   412,     0,   413,     0,   415,
     416,   417,   418,     0,     0,   419,     0,     0,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,     0,     0,
       0,  1342,  1343,  1344,     0,  1345,  1346,  1347,  1348,  1349,
    1350,  1069,     0,     0,  1070,     0,     0,     0,  1071,  1072,
    1073,     0,     0,     0,     0,     0,     0,     0,     0,  1069,
       0,     0,  1070,     0,     0,  1074,  1071,  1072,  1073,     0,
       0,     0,     0,  1076,     0,     0,     0,     0,  1069,     0,
    1077,  1070,     0,  1074,     0,  1071,  1072,  1073,     0,     0,
       0,  1076,     0,  1069,     0,     0,  1070,     0,  1077,     0,
       0,     0,  1074,     0,     0,  1078,     0,     0,     0,     0,
    1076,     0,  1069,     0,     0,  1070,     0,  1077,     0,  1071,
    1072,  1073,     0,  1078,     0,  1076,     0,     0,     0,     0,
    1069,     0, -1461,  1070,     0,     0,  1074,  1071,  1072,  1073,
       0,     0,  1078,     0,  1076,     0,     0,     0,     0,     0,
       0,  1077,     0,     0,  1074,     0,     0,  1078,     0,     0,
       0,     0,  1076,     0,     0,     0,     0,     0,     0,  1077,
       0,  1069,     0,     0,  1070,     0,  1078,     0,  1071,  1072,
    1073,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1078,  1074,     0,     0,     0,     0,
       0,     0,     0,  1076,     0,     0,     0,     0,     0,     0,
    1077,     0,     0,     0,  1079,     0,     0,     0,     0,  1080,
       0,     0,     0,     0,     0,  1941,     0,     0,     0,     0,
       0,     0,  1079,     0,     0,  1078,     0,  1080,     0,     0,
    1081,  1082,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1079,     0,     0,  1083,     0,  1080,     0,  1081,  1082,
       0,     0,     0,     0,     0,     0, -1461,     0,     0,     0,
       0, -1461,  1083,     0,     0,     0,     0,  1081,  1082,     0,
       0,     0,     0,     0,  1084,  1079,     0,  1085,     0,     0,
    1080,  1083,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1086,  1084,  1079,  1087,  1085, -1461,     0,  1080,     0,
       0,  1081,  1082,     0,     0,     0,     0,     0,     0,  1086,
       0,  1084,  1087,     0,  1085,  1083,     0,     0,     0,  1081,
    1082,     0,     0,     0,     0,     0,     0,     0,  1086,     0,
       0,  1087,     0,  1083,  1079,     0,     0,     0,     0,  1080,
       0,     0,     0,  1086,     0,  1084,     0,     0,  1085,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1081,  1082,  1086,  1084,     0,  1087,  1085,     0,     0,     0,
       0,     0,     0,     0,  1083,     0,     0,     0,  1088,     0,
    1086,     0,     0,  1087,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1088,     0,     0,     0,
       0,     0,     0,     0,  1084,     0,     0,  1085,     0,     0,
       0,     0,     0,     0,     0,  1088,     0,     0,     0,     0,
       0,  1086,     0,     0,  1087,     0,     0,     0,     0,     0,
   -1461,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1088,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1088,     0,     0,
       0,     0,     0,     0,  1089,     0,     0,  1090,  1091,  1092,
       0,  1093,  1094,  1095,  1096,  1097,  1098,     0,     0,     0,
       0,  2120,  1089,     0,     0,  1090,  1091,  1092,     0,  1093,
    1094,  1095,  1096,  1097,  1098,     0,     0,     0,  1088,  2259,
       0,  1089,     0,     0,  1090,  1091,  1092,     0,  1093,  1094,
    1095,  1096,  1097,  1098,     0,     0, -1461,     0,  2472,     0,
       0,     0,     0,  1093,  1094,  1095,  1096,  1097,  1098,     0,
       0,     0,     0,     0,     0,  1089,     0,     0,  1090,  1091,
    1092,     0,  1093,  1094,  1095,  1096,  1097,  1098,     0,     0,
       0,     0,  2484,  1089,     0,     0,  1090,  1091,  1092,     0,
    1093,  1094,  1095,  1096,  1097,  1098,     0,     0,     0,     0,
    2593,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1089,   833,     0,  1090,  1091,  1092,
       0,  1093,  1094,  1095,  1096,  1097,  1098,     0,     0,  1242,
      84,    85,    86,    87,    88,    89,    90,    91,   834,    92,
      93,    94,   835,   836,   837,   838,   839,   840,   841,    95,
      96,   842,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   843,   109,   110,   111,   112,   113,
     114,   844,   845,   115,   116,   117,   118,   119,   846,   120,
     121,   122,   123,   124,   847,   125,   848,   126,   127,   128,
     129,   130,   131,   132,   133,   134,   849,   135,   136,   137,
     138,   139,   140,   850,   141,   142,   143,   144,   851,   852,
     853,   145,   854,   855,   856,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   857,   155,   858,   156,   157,   158,
     159,   160,   161,   859,   162,   163,   164,   165,   166,   860,
     861,   167,   168,   169,   170,   171,   862,   172,   173,   174,
     863,   175,   176,   177,   864,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   865,   187,   866,   188,   189,   190,
     191,   867,   192,   868,   193,   194,   869,   195,   196,   197,
     198,   199,   870,   200,   871,   201,   202,   872,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   873,   213,
     214,   215,   216,   217,   218,   874,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   875,   228,   876,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   877,   878,
     239,   240,   241,   242,   879,   243,   244,   245,   880,   881,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   882,   269,   270,   271,   272,   883,   273,
     274,   275,   276,   277,   278,   884,   279,   280,   885,   886,
     281,   282,   283,   887,   888,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     889,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     890,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   891,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   892,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   893,   350,   351,   352,   353,
     354,   894,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   895,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   896,   378,   379,   897,
     380,   381,   382,   383,   384,   385,   386,   898,   387,   388,
     899,   900,   389,   390,   391,   392,   393,   901,   394,   395,
     396,   397,   398,   399,   400,   902,   903,   401,   402,   403,
     404,   405,   904,   905,   406,   407,   408,   409,   410,   411,
     412,   906,   413,   414,   415,   416,   417,   418,   907,   908,
     419,   909,   910,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   461,     0,     0,     0,     0,     0,     0,
       0,     0,   911,     0,     0,     0,     0,     0,    84,    85,
      86,    87,    88,    89,    90,    91,     0,    92,    93,    94,
       0,     0,     0,     0,     0,     0,     0,    95,    96,     0,
      97,    98,    99,     0,   101,   102,   103,   104,   105,     0,
     107,   108,     0,   109,   110,   111,   112,   113,   114,     0,
       0,   115,   116,   117,   118,   119,     0,   120,   121,   122,
     123,   124,     0,     0,     0,   126,   127,   128,   129,   130,
       0,   132,   133,   134,     0,   135,   136,   137,   138,   139,
     140,     0,     0,   142,   143,   144,     0,     0,     0,     0,
       0,     0,     0,   146,   147,   148,   149,   150,   151,   152,
     153,   154,     0,   155,     0,   156,   157,   158,   159,   160,
     161,     0,   162,   163,   164,   165,   166,     0,     0,   167,
     168,   169,   170,   171,     0,   172,   173,   174,     0,   175,
     176,   177,     0,   178,   179,   180,   181,   182,   183,   184,
     185,   186,     0,   187,     0,   188,   189,   190,   191,     0,
     192,     0,   193,     0,     0,     0,   196,   197,   198,   199,
       0,   200,     0,   201,   202,     0,   203,   204,   205,   206,
     207,     0,   209,   210,   211,   212,     0,   213,   214,   215,
     216,   217,   218,     0,   219,     0,   221,   222,   223,   224,
     225,   226,   227,     0,   228,     0,   229,     0,     0,   232,
       0,   234,   235,   236,   237,   238,     0,     0,   239,     0,
     241,     0,     0,   243,   244,   245,     0,     0,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,     0,   264,   265,   266,   267,
     268,     0,   269,   270,     0,   272,     0,   273,   274,   275,
     276,   277,   278,     0,   279,   280,     0,     0,   281,   282,
     283,     0,     0,   284,   285,     0,   287,     0,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,     0,   299,
     300,   301,   302,   303,   304,   305,   306,   307,     0,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,     0,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,     0,   334,   335,     0,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,     0,   350,   351,   352,   353,   354,     0,
     355,   356,   357,   358,   359,     0,   361,   362,   363,   364,
       0,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,     0,   378,   379,     0,   380,     0,
     382,   383,   384,   385,   386,     0,   387,   388,     0,     0,
     389,   390,   391,   392,   393,     0,   394,   395,   396,   397,
     398,   399,   400,     0,     0,   401,   402,   403,   404,   405,
       0,     0,   406,   407,   408,   409,   410,   411,   412,     0,
     413,     0,   415,   416,   417,   418,     0,     0,   419,     0,
       0,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   616,   955,   501,     0,     0,     0,   639,     0,     0,
    2500,     0,     0,     0,     0,     0,    84,    85,    86,    87,
      88,    89,    90,    91,     0,    92,    93,    94,     0,     0,
       0,     0,     0,     0,     0,    95,    96,     0,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
       0,   109,   110,   111,   112,   113,   114,     0,     0,   115,
     116,   117,   118,   119,     0,   120,   121,   122,   123,   124,
       0,   125,     0,   126,   127,   128,   129,   130,   131,   132,
     133,   134,     0,   135,   136,   137,   138,   139,   140,     0,
     141,   142,   143,   144,     0,     0,     0,   145,     0,     0,
       0,   146,   147,   148,   149,   150,   151,   152,   153,   154,
    1122,   155,     0,   156,   157,   158,   159,   160,   161,     0,
     162,   163,   164,   165,   166,     0,     0,   167,   168,   169,
     170,   171,     0,   172,   173,   174,     0,   175,   176,   177,
       0,   178,   179,   180,   181,   182,   183,   184,   185,   186,
     956,   187,     0,   188,   189,   190,   191,     0,   192,     0,
     193,   194,     0,   195,   196,   197,   198,   199,     0,   200,
       0,   201,   202,     0,   203,   204,   205,   206,   207,   208,
     209,   210,   211,   212,     0,   213,   214,   215,   216,   217,
     218,     0,   219,   220,   221,   222,   223,   224,   225,   226,
     227,     0,   228,     0,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,     0,     0,   239,   240,   241,   242,
       0,   243,   244,   245,     0,     0,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,     0,
     269,   270,   271,   272,     0,   273,   274,   275,   276,   277,
     278,     0,   279,   280,   957,     0,   281,   282,   283,     0,
       0,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,     0,   299,   300,   301,
     302,   303,   304,   305,   306,   307,     0,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,     0,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,     0,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,     0,   350,   351,   352,   353,   354,     0,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,     0,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,     0,   378,   379,     0,   380,   381,   382,   383,
     384,   385,   386,     0,   387,   388,     0,     0,   389,   390,
     391,   392,   393,   958,   394,   395,   396,   397,   398,   399,
     400,     0,     0,   401,   402,   403,   404,   405,     0,     0,
     406,   407,   408,   409,   410,   411,   412,     0,   413,   414,
     415,   416,   417,   418,     0,     0,   419,     0,     0,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   616,
     955,   501,     0,     0,     0,   639,   959,   960,     0,     0,
       0,     0,     0,     0,    84,    85,    86,    87,    88,    89,
      90,    91,     0,    92,    93,    94,     0,     0,     0,     0,
       0,     0,     0,    95,    96,     0,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,     0,   109,
     110,   111,   112,   113,   114,     0,     0,   115,   116,   117,
     118,   119,     0,   120,   121,   122,   123,   124,     0,   125,
       0,   126,   127,   128,   129,   130,   131,   132,   133,   134,
       0,   135,   136,   137,   138,   139,   140,     0,   141,   142,
     143,   144,     0,     0,     0,   145,     0,     0,     0,   146,
     147,   148,   149,   150,   151,   152,   153,   154,  1124,   155,
       0,   156,   157,   158,   159,   160,   161,     0,   162,   163,
     164,   165,   166,     0,     0,   167,   168,   169,   170,   171,
       0,   172,   173,   174,     0,   175,   176,   177,     0,   178,
     179,   180,   181,   182,   183,   184,   185,   186,   956,   187,
       0,   188,   189,   190,   191,     0,   192,     0,   193,   194,
       0,   195,   196,   197,   198,   199,     0,   200,     0,   201,
     202,     0,   203,   204,   205,   206,   207,   208,   209,   210,
     211,   212,     0,   213,   214,   215,   216,   217,   218,     0,
     219,   220,   221,   222,   223,   224,   225,   226,   227,     0,
     228,     0,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,     0,     0,   239,   240,   241,   242,     0,   243,
     244,   245,     0,     0,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,     0,   269,   270,
     271,   272,     0,   273,   274,   275,   276,   277,   278,     0,
     279,   280,   957,     0,   281,   282,   283,     0,     0,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,     0,   299,   300,   301,   302,   303,
     304,   305,   306,   307,     0,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,     0,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,     0,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,     0,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,     0,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
       0,   378,   379,     0,   380,   381,   382,   383,   384,   385,
     386,     0,   387,   388,     0,     0,   389,   390,   391,   392,
     393,   958,   394,   395,   396,   397,   398,   399,   400,     0,
       0,   401,   402,   403,   404,   405,     0,     0,   406,   407,
     408,   409,   410,   411,   412,     0,   413,   414,   415,   416,
     417,   418,     0,     0,   419,     0,     0,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   616,   955,   501,
       0,     0,     0,   639,   959,   960,     0,     0,     0,     0,
       0,     0,    84,    85,    86,    87,    88,    89,    90,    91,
       0,    92,    93,    94,     0,     0,     0,     0,     0,     0,
       0,    95,    96,     0,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,     0,   109,   110,   111,
     112,   113,   114,     0,     0,   115,   116,   117,   118,   119,
       0,   120,   121,   122,   123,   124,     0,   125,     0,   126,
     127,   128,   129,   130,   131,   132,   133,   134,     0,   135,
     136,   137,   138,   139,   140,     0,   141,   142,   143,   144,
       0,     0,     0,   145,     0,     0,     0,   146,   147,   148,
     149,   150,   151,   152,   153,   154,     0,   155,     0,   156,
     157,   158,   159,   160,   161,     0,   162,   163,   164,   165,
     166,     0,     0,   167,   168,   169,   170,   171,     0,   172,
     173,   174,     0,   175,   176,   177,     0,   178,   179,   180,
     181,   182,   183,   184,   185,   186,   956,   187,     0,   188,
     189,   190,   191,     0,   192,     0,   193,   194,     0,   195,
     196,   197,   198,   199,     0,   200,     0,   201,   202,     0,
     203,   204,   205,   206,   207,   208,   209,   210,   211,   212,
       0,   213,   214,   215,   216,   217,   218,     0,   219,   220,
     221,   222,   223,   224,   225,   226,   227,     0,   228,     0,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
       0,     0,   239,   240,   241,   242,     0,   243,   244,   245,
       0,     0,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,     0,   269,   270,   271,   272,
       0,   273,   274,   275,   276,   277,   278,     0,   279,   280,
     957,     0,   281,   282,   283,     0,     0,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,     0,   299,   300,   301,   302,   303,   304,   305,
     306,   307,     0,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,     0,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
       0,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,     0,   350,   351,
     352,   353,   354,     0,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,     0,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,     0,   378,
     379,     0,   380,   381,   382,   383,   384,   385,   386,     0,
     387,   388,     0,     0,   389,   390,   391,   392,   393,   958,
     394,   395,   396,   397,   398,   399,   400,     0,     0,   401,
     402,   403,   404,   405,     0,     0,   406,   407,   408,   409,
     410,   411,   412,     0,   413,   414,   415,   416,   417,   418,
       0,     0,   419,     0,     0,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,     0,     0,  1069,     0,     0,
    1070,     0,   959,   960,  1071,  1072,  1073,     0,     0,     0,
       0,     0,     0,     0,     0,  1069,     0,     0,  1070,     0,
       0,  1074,  1071,  1072,  1073,  1478,     0,     0,     0,  1076,
       0,     0,     0,     0,  1069,     0,  1077,  1070,     0,  1074,
       0,  1071,  1072,  1073,     0,     0,     0,  1076,     0,     0,
       0,     0,     0,     0,  1077,     0,     0,     0,  1074,     0,
       0,  1078,     0,     0,     0,     0,  1076,     0,  1069,     0,
       0,  1070,     0,  1077,     0,  1071,  1072,  1073,     0,  1078,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1074,     0,     0,  1633,     0,     0,  1078,     0,
    1076,     0,     0,     0,     0,     0,     0,  1077,     0,  1069,
    1479,     0,  1070,     0,     0,     0,  1071,  1072,  1073,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1078,  1074,     0,     0,     0,     0,     0,     0,
       0,  1076,     0,     0,     0,     0,     0,     0,  1077,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1673,     0,     0,     0,
    1079,  1674,     0,  1078,     0,  1080,     0,     0,     0,     0,
       0,     0,     0,     0,  2554,     0,     0,     0,  1079,     0,
       0,     0,     0,  1080,     0,     0,  1081,  1082,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1079,     0,     0,
    1083,     0,  1080,     0,  1081,  1082,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1083,     0,
       0,     0,     0,  1081,  1082,     0,     0,     0,     0,     0,
    1084,  1079,     0,  1085,     0,     0,  1080,  1083,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1086,  1084,     0,
    1087,  1085,     0,     0,     0,     0,     0,  1081,  1082,     0,
       0,     0,     0,     0,     0,  1086,     0,  1084,  1087,     0,
    1085,  1083,  1079,     0,     0,     0,     0,  1080,     0,     0,
       0,     0,     0,     0,  1086,     0,     0,  1087,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1081,  1082,
       0,  1084,     0,     0,  1085,     0,     0,     0,     0,  2555,
       0,     0,  1083,     0,     0,     0,  1069,     0,  1086,  1070,
       0,  1087,     0,  1071,  1072,  1073,     0,     0,     0,     0,
       0,     0,     0,     0,  1088,     0,     0,     0,     0,     0,
    1074,     0,  1084,  1682,     0,  1085,     0,     0,  1076,     0,
       0,     0,  1088,     0,     0,  1077,     0,     0,     0,  1086,
       0,  1069,  1087,     0,  1070,     0,     0,     0,  1071,  1072,
    1073,  1088,     0,     0,     0,     0,     0,     0,     0,  1647,
    1078,     0,     0,     0,     0,  1074,     0,     0,     0,     0,
    1480,     0,     0,  1076,     0,     0,     0,     0,     0,     0,
    1077,     0,     0,     0,     0,  1088,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1078,     0,     0,     0,     0,
    1089,     0,     0,  1090,  1091,  1092,     0,  1093,  1094,  1095,
    1096,  1097,  1098,     0,     0,     0,  1088,     0,  1089,     0,
       0,  1090,  1091,  1092,     0,  1093,  1094,  1095,  1096,  1097,
    1098,     0,     0,     0,     0,     0,     0,  1089,     0,     0,
    1090,  1091,  1092,     0,  1093,  1094,  1095,  1096,  1097,  1098,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1079,
       0,     0,     0,     0,  1080,     0,     0,     0,     0,     0,
       0,  1089,     0,     0,  1090,  1091,  1092,     0,  1093,  1094,
    1095,  1096,  1097,  1098,     0,  1081,  1082,  1687,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1083,
       0,     0,     0,  1069,  1079,     0,  1070,     0,     0,  1080,
       0,     0,  1089,     0,     0,  1090,  1091,  1092,     0,  1093,
    1094,  1095,  1096,  1097,  1098,     0,     0,     0,     0,  1084,
    1081,  1082,  1085,     0,     0,  1076,     0,     0,     0,     0,
       0,     0, -1461,     0,  1083,     0,  1086,  1069,     0,  1087,
    1070,     0,     0,     0,  1071,  1072,  1073,     0,     0,     0,
       0,   467,     0,     0,     0,     0,     0,  1078,     0,     0,
       0,  1074,     0,     0,  1084,     0,     0,  1085,     0,  1076,
       0,     0,     0,     0,     0,     0,  1077,     0,     0,  1069,
       0,  1086,  1070,     0,  1087,     0,  1071,  1072,  1073,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1078,     0,  1074,   468,     0,     0,     0,     0,     0,
       0,  1076,     0,  1069,     0,     0,  1070,     0,  1077,   469,
    1071,  1072,  1073,  1088,     0,  2119,     0,     0,     0,     0,
       0,  1069,     0,     0,  1070,     0,     0,  1074,  1071,  1072,
    1073,     0,     0,  1078,     0,  1076,     0,     0,     0,     0,
       0,     0,  1077,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1076,     0,     0, -1461,     0,  1088,     0,
    1077, -1461,   470,     0,     0,     0,     0,  1078,     0,     0,
     471,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   472,     0,     0,  1078,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0, -1461,     0,     0,     0,
    1079,     0,     0,     0,     0,  1080,     0,     0,     0,  1089,
     473,     0,  1090,  1091,  1092,     0,  1093,  1094,  1095,  1096,
    1097,  1098,     0,     0,     0,     0,  1081,  1082,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1083,     0,  1079,  1086,     0,     0,     0,  1080,     0,     0,
       0,     0,     0,     0,  1089,   474,     0,  1090,  1091,  1092,
       0,  1093,  1094,  1095,  1096,  1097,  1098,     0,  1081,  1082,
    1084,     0,     0,  1085,     0,     0,  1079,     0,     0,     0,
       0,  1080,  1083,     0,     0,     0,     0,  1086,     0,     0,
    1087,     0,     0,     0,  1079,     0,     0,     0,     0,  1080,
       0,     0,  1081,  1082,     0,     0,     0,     0,     0,     0,
       0,   475,  1084,     0,     0,  1085,  1083,     0,     0,     0,
   -1461, -1461,     0,     0,     0,   476,     0,     0,     0,  1086,
   -1461,     0,  1087,     0,  1083,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1084,     0,     0,  1085,
       0,     0,     0,     0,     0,     0,   477,     0,   478,     0,
       0,     0,     0,  1086,     0,   479,     0, -1461,   480,     0,
       0,     0,     0,     0,  1088,     0,     0,     0,     0,     0,
       0,  1086,     0,     0,     0,     0,     0,   481,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   482,     0,
       0,     0,     0,     0,  1884,   483,     0,     0,     0,     0,
       0,     0,     0,     0,   484,     0,  1088,     0,     0,     0,
       0,     0,     0,     0,     0,     0, -1461,     0,     0,     0,
       0,     0,     0,  1093,  1094,  1095,  1096,  1097,  1098,     0,
       0,     0,     0,     0,   485,     0,     0,     0,     0,     0,
    1088,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1088,     0,
    1089,     0,     0,  1090,  1091,  1092,     0,  1093,  1094,  1095,
    1096,  1097,  1098,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1089,     0,     0,  1090,  1091,  1092,     0,  1093,
    1094,  1095,  1096,  1097,  1098,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1089,     0,     0,  1090,
    1091,  1092,     0,  1093,  1094,  1095,  1096,  1097,  1098,     0,
       0,     0,     0,   833,  1089,  1391,     0,  1090,  1091,  1092,
       0,  1093,  1094,  1095,  1096,  1097,  1098,     0,    84,    85,
      86,    87,    88,    89,    90,    91,   834,    92,    93,    94,
     835,   836,   837,   838,   839,   840,   841,    95,    96,   842,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   843,   109,   110,   111,   112,   113,   114,   844,
     845,   115,   116,   117,   118,   119,   846,   120,   121,   122,
     123,   124,   847,   125,   848,   126,   127,   128,   129,   130,
     131,   132,   133,   134,   849,   135,   136,   137,   138,   139,
     140,   850,   141,   142,   143,   144,   851,   852,   853,   145,
     854,   855,   856,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   857,   155,   858,   156,   157,   158,   159,   160,
     161,   859,   162,   163,   164,   165,   166,   860,   861,   167,
     168,   169,   170,   171,   862,   172,   173,   174,   863,   175,
     176,   177,   864,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   865,   187,   866,   188,   189,   190,   191,   867,
     192,   868,   193,   194,   869,   195,   196,   197,   198,   199,
     870,   200,   871,   201,   202,   872,   203,   204,   205,   206,
     207,   208,   209,   210,   211,   212,   873,   213,   214,   215,
     216,   217,   218,   874,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   875,   228,   876,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   877,   878,   239,   240,
     241,   242,   879,   243,   244,   245,   880,   881,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   882,   269,   270,   271,   272,   883,   273,   274,   275,
     276,   277,   278,   884,   279,   280,   885,   886,   281,   282,
     283,   887,   888,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   889,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   890,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   891,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   892,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   893,   350,   351,   352,   353,   354,   894,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     895,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   896,   378,   379,   897,   380,   381,
     382,   383,   384,   385,   386,   898,   387,   388,   899,   900,
     389,   390,   391,   392,   393,   901,   394,   395,   396,   397,
     398,   399,   400,   902,   903,   401,   402,   403,   404,   405,
     904,   905,   406,   407,   408,   409,   410,   411,   412,   906,
     413,   414,   415,   416,   417,   418,   907,   908,   419,   909,
     910,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   833,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    84,    85,    86,    87,
      88,    89,    90,    91,   834,    92,    93,    94,   835,   836,
     837,   838,   839,   840,   841,    95,    96,   842,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     843,   109,   110,   111,   112,   113,   114,   844,   845,   115,
     116,   117,   118,   119,   846,   120,   121,   122,   123,   124,
     847,   125,   848,   126,   127,   128,   129,   130,   131,   132,
     133,   134,   849,   135,   136,   137,   138,   139,   140,   850,
     141,   142,   143,   144,   851,   852,   853,   145,   854,   855,
     856,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     857,   155,   858,   156,   157,   158,   159,   160,   161,   859,
     162,   163,   164,   165,   166,   860,   861,   167,   168,   169,
     170,   171,   862,   172,   173,   174,   863,   175,   176,   177,
     864,   178,   179,   180,   181,   182,   183,   184,   185,   186,
     865,   187,   866,   188,   189,   190,   191,   867,   192,   868,
     193,   194,   869,   195,   196,   197,   198,   199,   870,   200,
     871,   201,   202,   872,   203,   204,   205,   206,   207,   208,
     209,   210,   211,   212,   873,   213,   214,   215,   216,   217,
     218,   874,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   875,   228,   876,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   877,   878,   239,   240,   241,   242,
     879,   243,   244,   245,   880,   881,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   882,
     269,   270,   271,   272,   883,   273,   274,   275,   276,   277,
     278,   884,   279,   280,   885,   886,   281,   282,   283,   887,
     888,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   889,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   890,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   891,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   892,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   893,   350,   351,   352,   353,   354,   894,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   895,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   896,   378,   379,   897,   380,   381,   382,   383,
     384,   385,   386,   898,   387,   388,   899,   900,   389,   390,
     391,   392,   393,   901,   394,   395,   396,   397,   398,   399,
     400,   902,   903,   401,   402,   403,   404,   405,   904,   905,
     406,   407,   408,   409,   410,   411,   412,   906,   413,   414,
     415,   416,   417,   418,   907,   908,   419,   909,   910,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   833,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    84,    85,    86,    87,  1527,    89,
      90,    91,   834,    92,    93,    94,   835,   836,   837,   838,
     839,   840,   841,    95,    96,   842,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   843,   109,
     110,   111,   112,   113,   114,   844,   845,   115,   116,   117,
     118,   119,   846,   120,   121,   122,   123,   124,   847,   125,
     848,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     849,   135,   136,   137,   138,   139,   140,   850,   141,   142,
     143,   144,   851,   852,   853,   145,   854,   855,   856,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   857,   155,
     858,   156,   157,   158,   159,   160,   161,   859,   162,   163,
     164,   165,   166,   860,   861,   167,   168,   169,  1528,   171,
     862,   172,   173,   174,   863,   175,   176,   177,   864,   178,
     179,   180,   181,   182,   183,   184,   185,   186,   865,   187,
     866,   188,   189,   190,   191,   867,   192,   868,   193,   194,
     869,   195,   196,   197,   198,   199,   870,   200,   871,   201,
     202,   872,   203,   204,   205,   206,   207,   208,   209,   210,
     211,   212,   873,   213,   214,   215,   216,   217,   218,   874,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   875,
     228,   876,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   877,   878,   239,   240,   241,   242,   879,   243,
     244,   245,   880,   881,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   882,   269,   270,
     271,   272,   883,   273,   274,   275,   276,   277,   278,   884,
     279,   280,   885,   886,   281,   282,   283,   887,   888,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   889,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   890,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   891,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   892,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   893,
     350,   351,   352,   353,   354,   894,  1529,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   895,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     896,   378,   379,   897,   380,   381,   382,   383,   384,   385,
     386,   898,   387,   388,   899,   900,   389,   390,   391,   392,
     393,   901,   394,   395,   396,   397,   398,   399,   400,   902,
     903,   401,   402,   403,   404,   405,   904,   905,   406,   407,
     408,   409,   410,   411,   412,   906,   413,   414,   415,   416,
     417,   418,   907,   908,   419,   909,   910,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,    83,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    84,    85,    86,    87,    88,    89,    90,    91,
       0,    92,    93,    94,     0,     0,     0,     0,     0,     0,
       0,    95,    96,     0,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,     0,   109,   110,   111,
     112,   113,   114,     0,   645,   115,   116,   117,   118,   119,
       0,   120,   121,   122,   123,   648,     0,   649,     0,   126,
     127,   128,   129,   130,   131,   132,   133,   134,     0,   135,
     136,   137,   138,   139,   140,     0,   141,   142,   143,   144,
     650,   651,   652,   653,   654,   655,   656,   146,   147,   148,
     149,   150,   151,   152,   153,   154,     0,   155,     0,   156,
     157,   158,   159,   160,   161,     0,   162,   163,   164,   165,
     166,     0,     0,   167,   168,   169,   170,   171,     0,   172,
     173,   174,     0,   175,   176,   177,     0,   178,   179,   180,
     181,   182,   183,   184,   185,   662,     0,   187,     0,   188,
     189,   190,   191,     0,   192,     0,   193,   194,     0,   195,
     196,   197,   198,   199,     0,   200,     0,   201,   202,     0,
     203,   204,   205,   206,   207,   208,   209,   210,   211,   212,
       0,   213,   214,   215,   216,   217,   218,     0,   219,   220,
     221,   222,   223,   224,   225,   226,   227,     0,   228,     0,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
       0,     0,   239,   240,   241,   242,     0,   243,   244,   245,
     668,   669,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,     0,   269,   270,   271,   272,
       0,   674,   274,   275,   276,   277,   278,     0,   279,   280,
       0,     0,   281,   282,   283,     0,     0,   284,   285,   286,
     287,   288,   677,   290,   291,   292,   293,   294,   295,   296,
     297,   298,     0,   299,   300,   678,   302,   303,   304,   305,
     306,   307,     0,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,     0,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
       0,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,     0,   350,   351,
     352,   353,   354,   681,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,     0,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   683,     0,   378,
     379,     0,   380,   381,   382,   383,   384,   385,   386,     0,
     387,   388,     0,     0,   389,   390,   686,   392,   687,     0,
     394,   395,   396,   397,   398,   399,   400,     0,     0,   401,
     402,   403,   404,   405,   689,     0,   406,   407,   408,   409,
     410,   411,   412,     0,   413,   414,   415,   416,   417,   418,
       0,     0,   419,     0,     0,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   616,     0,   501,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      84,    85,    86,    87,    88,    89,    90,    91,     0,    92,
      93,    94,     0,     0,     0,     0,     0,     0,     0,    95,
      96,     0,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,     0,   109,   110,   111,   112,   113,
     114,     0,     0,   115,   116,   117,   118,   119,     0,   120,
     121,   122,   123,   124,     0,   125,     0,   126,   127,   128,
     129,   130,   131,   132,   133,   134,     0,   135,   136,   137,
     138,   139,   140,     0,   141,   142,   143,   144,     0,     0,
       0,   145,     0,     0,     0,   146,   147,   148,   149,   150,
     151,   152,   153,   154,     0,   155,     0,   156,   157,   158,
     159,   160,   161,     0,   162,   163,   164,   165,   166,     0,
       0,   167,   168,   169,   170,   171,     0,   172,   173,   174,
       0,   175,   176,   177,     0,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   956,   187,     0,   188,   189,   190,
     191,     0,   192,     0,   193,   194,     0,   195,   196,   197,
     198,   199,     0,   200,     0,   201,   202,     0,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,     0,   213,
     214,   215,   216,   217,   218,     0,   219,   220,   221,   222,
     223,   224,   225,   226,   227,     0,   228,     0,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,     0,     0,
     239,   240,   241,   242,     0,   243,   244,   245,     0,     0,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,     0,   269,   270,   271,   272,     0,   273,
     274,   275,   276,   277,   278,     0,   279,   280,   957,     0,
     281,   282,   283,     0,     0,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
       0,   299,   300,   301,   302,   303,   304,   305,   306,   307,
       0,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,     0,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,     0,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,     0,   350,   351,   352,   353,
     354,     0,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,     0,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,     0,   378,   379,     0,
     380,   381,   382,   383,   384,   385,   386,     0,   387,   388,
       0,     0,   389,   390,   391,   392,   393,   958,   394,   395,
     396,   397,   398,   399,   400,     0,     0,   401,   402,   403,
     404,   405,     0,     0,   406,   407,   408,   409,   410,   411,
     412,     0,   413,   414,   415,   416,   417,   418,     0,     0,
     419,     0,     0,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   616,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    84,    85,
      86,    87,    88,    89,    90,    91,     0,    92,    93,    94,
       3,     4,     0,     0,     0,     0,     0,    95,    96,     0,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,     0,   109,   110,   111,   112,   113,   114,     0,
       0,   115,   116,   117,   118,   119,     0,   120,   121,   122,
     123,   124,     0,   125,     0,   126,   127,   128,   129,   130,
     131,   132,   133,   134,     0,   135,   136,   137,   138,   139,
     140,     0,   141,   142,   143,   144,     0,     0,     0,   145,
       0,     0,     0,   146,   147,   148,   149,   150,   151,   152,
     153,   154,     0,   155,     0,   156,   157,   158,   159,   160,
     161,     0,   162,   163,   164,   165,   166,     0,     0,   167,
     168,   169,   170,   171,     0,   172,   173,   174,     0,   175,
     176,   177,     0,   178,   179,   180,   181,   182,   183,   184,
     185,   186,     0,   187,     0,   188,   189,   190,   191,     0,
     192,     0,   193,   194,     0,   195,   196,   197,   198,   199,
       0,   200,     0,   201,   202,     0,   203,   204,   205,   206,
     207,   208,   209,   210,   211,   212,     0,   213,   214,   215,
     216,   217,   218,     0,   219,   220,   221,   222,   223,   224,
     225,   226,   227,     0,   228,     0,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,     0,     0,   239,   240,
     241,   242,     0,   243,   244,   245,     0,     0,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,     0,   269,   270,   271,   272,     0,   273,   274,   275,
     276,   277,   278,     0,   279,   280,     0,     0,   281,   282,
     283,     0,     0,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,     0,   299,
     300,   301,   302,   303,   304,   305,   306,   307,     0,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,     0,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,     0,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,     0,   350,   351,   352,   353,   354,     0,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
       0,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,     0,   378,   379,     0,   380,   381,
     382,   383,   384,   385,   386,     0,   387,   388,     0,     0,
     389,   390,   391,   392,   393,     0,   394,   395,   396,   397,
     398,   399,   400,     0,     0,   401,   402,   403,   404,   405,
       0,     0,   406,   407,   408,   409,   410,   411,   412,     0,
     413,   414,   415,   416,   417,   418,     0,     0,   419,     0,
       0,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,    83,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    84,    85,    86,    87,
      88,    89,    90,    91,     0,    92,    93,    94,     0,     0,
       0,     0,     0,     0,     0,    95,    96,     0,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
       0,   109,   110,   111,   112,   113,   114,     0,     0,   115,
     116,   117,   118,   119,     0,   120,   121,   122,   123,   124,
       0,   125,     0,   126,   127,   128,   129,   130,   131,   132,
     133,   134,     0,   135,   136,   137,   138,   139,   140,     0,
     141,   142,   143,   144,     0,     0,     0,   145,     0,     0,
       0,   146,   147,   148,   149,   150,   151,   152,   153,   154,
       0,   155,     0,   156,   157,   158,   159,   160,   161,     0,
     162,   163,   164,   165,   166,     0,     0,   167,   168,   169,
     170,   171,     0,   172,   173,   174,     0,   175,   176,   177,
       0,   178,   179,   180,   181,   182,   183,   184,   185,   186,
       0,   187,     0,   188,   189,   190,   191,     0,   192,     0,
     193,   194,     0,   195,   196,   197,   198,   199,     0,   200,
       0,   201,   202,     0,   203,   204,   205,   206,   207,   208,
     209,   210,   211,   212,     0,   213,   214,   215,   216,   217,
     218,     0,   219,   220,   221,   222,   223,   224,   225,   226,
     227,     0,   228,     0,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,     0,     0,   239,   240,   241,   242,
       0,   243,   244,   245,     0,     0,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,     0,
     269,   270,   271,   272,     0,   273,   274,   275,   276,   277,
     278,     0,   279,   280,     0,     0,   281,   282,   283,     0,
       0,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,     0,   299,   300,   301,
     302,   303,   304,   305,   306,   307,     0,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,     0,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,     0,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,     0,   350,   351,   352,   353,   354,     0,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,     0,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,     0,   378,   379,     0,   380,   381,   382,   383,
     384,   385,   386,     0,   387,   388,     0,     0,   389,   390,
     391,   392,   393,     0,   394,   395,   396,   397,   398,   399,
     400,     0,     0,   401,   402,   403,   404,   405,     0,     0,
     406,   407,   408,   409,   410,   411,   412,     0,   413,   414,
     415,   416,   417,   418,     0,     0,   419,     0,     0,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   461,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    84,    85,    86,    87,    88,    89,
      90,    91,     0,    92,    93,    94,     0,     0,     0,     0,
       0,     0,     0,    95,    96,     0,    97,    98,    99,     0,
     101,   102,   103,   104,   105,     0,   107,   108,     0,   109,
     110,   111,   112,   113,   114,     0,     0,   115,   116,   117,
     118,   119,  1180,   120,   121,   122,   123,   124,     0,     0,
    1181,   126,   127,   128,   129,   130,     0,   132,   133,   134,
    1182,   135,   136,   137,   138,   139,   140,     0,     0,   142,
     143,   144,     0,     0,     0,     0,     0,     0,     0,   146,
     147,   148,   149,   150,   151,   152,   153,   154,     0,   155,
       0,   156,   157,   158,   159,   160,   161,     0,   162,   163,
     164,   165,   166,     0,     0,   167,   168,   169,   170,   171,
       0,   172,   173,   174,     0,   175,   176,   177,     0,   178,
     179,   180,   181,   182,   183,   184,   185,   186,     0,   187,
       0,   188,   189,   190,   191,     0,   192,  1183,   193,     0,
       0,     0,   196,   197,   198,   199,     0,   200,     0,   201,
     202,     0,   203,   204,   205,   206,  1184,     0,   209,   210,
     211,   212,     0,   213,   214,   215,   216,   217,   218,     0,
     219,     0,   221,   222,   223,   224,   225,   226,   227,     0,
     228,     0,   229,     0,     0,   232,     0,   234,   235,   236,
     237,   238,     0,     0,   239,     0,   241,     0,     0,   243,
     244,   245,     0,     0,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,     0,   264,   265,   266,   267,   268,     0,   269,   270,
       0,   272,     0,   273,   274,   275,   276,   277,   278,     0,
     279,   280,     0,     0,   281,   282,   283,     0,     0,   284,
     285,     0,   287,     0,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,     0,   299,   300,   301,   302,   303,
     304,   305,   306,   307,  1185,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,     0,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,     0,   334,   335,     0,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,     0,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
     359,     0,   361,   362,   363,   364,     0,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
       0,   378,   379,     0,   380,     0,   382,   383,   384,   385,
     386,     0,   387,   388,     0,     0,   389,   390,   391,   392,
     393,     0,   394,   395,   396,   397,   398,   399,   400,     0,
    1186,   401,   402,   403,   404,   405,     0,     0,   406,   407,
     408,   409,   410,   411,   412,     0,   413,     0,   415,   416,
     417,   418,     0,     0,   419,     0,     0,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   461,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    84,    85,    86,    87,    88,    89,    90,    91,
       0,    92,    93,    94,     0,     0,     0,     0,     0,     0,
       0,    95,    96,     0,    97,    98,    99,     0,   101,   102,
     103,   104,   105,     0,   107,   108,     0,   109,   110,   111,
     112,   113,   114,     0,     0,   115,   116,   117,   118,   119,
    1180,   120,   121,   122,   123,   124,     0,     0,     0,   126,
     127,   128,   129,   130,     0,   132,   133,   134,  1182,   135,
     136,   137,   138,   139,   140,     0,     0,   142,   143,   144,
       0,     0,     0,     0,     0,     0,     0,   146,   147,   148,
     149,   150,   151,   152,   153,   154,     0,   155,     0,   156,
     157,   158,   159,   160,   161,     0,   162,   163,   164,   165,
     166,     0,     0,   167,   168,   169,   170,   171,     0,   172,
     173,   174,     0,   175,   176,   177,     0,   178,   179,   180,
     181,   182,   183,   184,   185,   186,     0,   187,     0,   188,
     189,   190,   191,     0,   192,  1183,   193,     0,     0,     0,
     196,   197,   198,   199,     0,   200,     0,   201,   202,     0,
     203,   204,   205,   206,   207,     0,   209,   210,   211,   212,
       0,   213,   214,   215,   216,   217,   218,     0,   219,     0,
     221,   222,   223,   224,   225,   226,   227,     0,   228,     0,
     229,     0,     0,   232,     0,   234,   235,   236,   237,   238,
       0,     0,   239,     0,   241,  1590,     0,   243,   244,   245,
       0,     0,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,     0,
     264,   265,   266,   267,   268,     0,   269,   270,     0,   272,
       0,   273,   274,   275,   276,   277,   278,     0,   279,   280,
       0,     0,   281,   282,   283,     0,     0,   284,   285,     0,
     287,     0,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,     0,   299,   300,   301,   302,   303,   304,   305,
     306,   307,  1185,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,     0,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
       0,   334,   335,     0,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,     0,   350,   351,
     352,   353,   354,     0,   355,   356,   357,   358,   359,     0,
     361,   362,   363,   364,     0,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,     0,   378,
     379,     0,   380,     0,   382,   383,   384,   385,   386,     0,
     387,   388,     0,     0,   389,   390,   391,   392,   393,     0,
     394,   395,   396,   397,   398,   399,   400,     0,  1186,   401,
     402,   403,   404,   405,     0,     0,   406,   407,   408,   409,
     410,   411,   412,     0,   413,     0,   415,   416,   417,   418,
       0,     0,   419,     0,     0,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   461,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      84,    85,    86,    87,    88,    89,    90,    91,     0,    92,
      93,    94,     3,     4,     0,     0,     0,     0,     0,    95,
      96,     0,    97,    98,    99,     0,   101,   102,   103,   104,
     105,     0,   107,   108,     0,   109,   110,   111,   112,   113,
     114,     0,     0,   115,   116,   117,   118,   119,     0,   120,
     121,   122,   123,   124,     0,     0,     0,   126,   127,   128,
     129,   130,     0,   132,   133,   134,     0,   135,   136,   137,
     138,   139,   140,     0,     0,   142,   143,   144,     0,     0,
       0,     0,     0,     0,     0,   146,   147,   148,   149,   150,
     151,   152,   153,   154,     0,   155,     0,   156,   157,   158,
     159,   160,   161,     0,   162,   163,   164,   165,   166,     0,
       0,   167,   168,   169,   170,   171,     0,   172,   173,   174,
       0,   175,   176,   177,     0,   178,   179,   180,   181,   182,
     183,   184,   185,   186,     0,   187,     0,   188,   189,   190,
     191,     0,   192,     0,   193,     0,     0,     0,   196,   197,
     198,   199,     0,   200,     0,   201,   202,     0,   203,   204,
     205,   206,   207,     0,   209,   210,   211,   212,     0,   213,
     214,   215,   216,   217,   218,     0,   219,     0,   221,   222,
     223,   224,   225,   226,   227,     0,   228,     0,   229,     0,
       0,   232,     0,   234,   235,   236,   237,   238,     0,     0,
     239,     0,   241,     0,     0,   243,   244,   245,     0,     0,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,     0,   264,   265,
     266,   267,   268,     0,   269,   270,     0,   272,     0,   273,
     274,   275,   276,   277,   278,     0,   279,   280,     0,     0,
     281,   282,   283,     0,     0,   284,   285,     0,   287,     0,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
       0,   299,   300,   301,   302,   303,   304,   305,   306,   307,
       0,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,     0,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,     0,   334,
     335,     0,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,     0,   350,   351,   352,   353,
     354,     0,   355,   356,   357,   358,   359,     0,   361,   362,
     363,   364,     0,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,     0,   378,   379,     0,
     380,     0,   382,   383,   384,   385,   386,     0,   387,   388,
       0,     0,   389,   390,   391,   392,   393,     0,   394,   395,
     396,   397,   398,   399,   400,     0,     0,   401,   402,   403,
     404,   405,     0,     0,   406,   407,   408,   409,   410,   411,
     412,     0,   413,     0,   415,   416,   417,   418,     0,     0,
     419,     0,     0,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   461,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    84,    85,
      86,    87,    88,    89,    90,    91,   462,    92,    93,    94,
       0,     0,     0,     0,     0,     0,     0,    95,    96,     0,
      97,    98,    99,     0,   101,   102,   103,   104,   105,     0,
     107,   108,     0,   109,   110,   111,   112,   113,   114,     0,
       0,   115,   116,   117,   118,   119,     0,   120,   121,   122,
     123,   124,     0,     0,     0,   126,   127,   128,   129,   130,
       0,   132,   133,   134,     0,   135,   136,   137,   138,   139,
     140,     0,     0,   142,   143,   144,     0,     0,     0,     0,
       0,     0,     0,   146,   147,   148,   149,   150,   151,   152,
     153,   154,     0,   155,     0,   156,   157,   158,   159,   160,
     161,     0,   162,   163,   164,   165,   166,     0,     0,   167,
     168,   169,   170,   171,     0,   172,   173,   174,     0,   175,
     176,   177,     0,   178,   179,   180,   181,   182,   183,   184,
     185,   186,     0,   187,     0,   188,   189,   190,   191,     0,
     192,     0,   193,     0,     0,     0,   196,   197,   198,   199,
       0,   200,     0,   201,   202,     0,   203,   204,   205,   206,
     207,     0,   209,   210,   211,   212,     0,   213,   214,   215,
     216,   217,   218,     0,   219,     0,   221,   222,   223,   224,
     225,   226,   227,     0,   228,     0,   229,     0,     0,   232,
       0,   234,   235,   236,   237,   238,     0,     0,   239,     0,
     241,     0,     0,   243,   244,   245,     0,     0,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,     0,   264,   265,   266,   267,
     268,     0,   269,   270,     0,   272,     0,   273,   274,   275,
     276,   277,   278,     0,   279,   280,     0,     0,   281,   282,
     283,     0,     0,   284,   285,     0,   287,     0,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,     0,   299,
     300,   301,   302,   303,   304,   463,   306,   307,     0,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,     0,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,     0,   334,   335,     0,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,     0,   350,   351,   352,   353,   354,     0,
     355,   356,   357,   358,   359,     0,   361,   362,   363,   364,
       0,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,     0,   378,   379,     0,   380,     0,
     382,   383,   384,   385,   386,     0,   387,   388,     0,     0,
     389,   390,   391,   392,   393,     0,   394,   395,   396,   397,
     398,   399,   400,     0,     0,   401,   402,   403,   404,   405,
       0,     0,   406,   407,   408,   409,   410,   411,   412,     0,
     413,     0,   415,   416,   417,   418,     0,     0,   419,     0,
       0,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   461,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    84,    85,    86,    87,
      88,    89,    90,    91,   506,    92,    93,    94,     0,     0,
       0,     0,     0,     0,     0,    95,    96,     0,    97,    98,
      99,     0,   101,   102,   103,   104,   105,     0,   107,   108,
       0,   109,   110,   111,   112,   113,   114,     0,     0,   115,
     116,   117,   118,   119,     0,   120,   121,   122,   123,   124,
       0,     0,     0,   126,   127,   128,   129,   130,     0,   132,
     133,   134,     0,   135,   136,   137,   138,   139,   140,     0,
       0,   142,   143,   144,     0,     0,     0,     0,     0,     0,
       0,   146,   147,   148,   149,   150,   151,   152,   153,   154,
       0,   155,     0,   156,   157,   158,   159,   160,   161,     0,
     162,   163,   164,   165,   166,     0,     0,   167,   168,   169,
     170,   171,     0,   172,   173,   174,     0,   175,   176,   177,
       0,   178,   179,   180,   181,   182,   183,   184,   185,   186,
       0,   187,     0,   188,   189,   190,   191,     0,   192,     0,
     193,     0,     0,     0,   196,   197,   198,   199,     0,   200,
       0,   201,   202,     0,   203,   204,   205,   206,   207,     0,
     209,   210,   211,   212,     0,   213,   214,   215,   216,   217,
     218,     0,   219,     0,   221,   222,   223,   224,   225,   226,
     227,     0,   228,     0,   229,     0,     0,   232,     0,   234,
     235,   236,   237,   238,     0,     0,   239,     0,   241,     0,
       0,   243,   244,   245,     0,     0,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,     0,   264,   265,   266,   267,   268,     0,
     269,   270,     0,   272,     0,   273,   274,   275,   276,   277,
     278,     0,   279,   280,     0,     0,   281,   282,   283,     0,
       0,   284,   285,     0,   287,     0,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,     0,   299,   300,   301,
     302,   303,   304,   305,   306,   307,     0,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,     0,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,     0,   334,   335,     0,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,     0,   350,   351,   352,   353,   354,     0,   355,   356,
     357,   358,   359,     0,   361,   362,   363,   364,     0,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,     0,   378,   379,     0,   380,     0,   382,   383,
     384,   385,   386,     0,   507,   388,     0,     0,   508,   390,
     391,   392,   393,     0,   394,   395,   396,   397,   398,   399,
     400,     0,     0,   401,   402,   403,   404,   405,     0,     0,
     406,   407,   408,   409,   410,   411,   412,     0,   413,     0,
     415,   416,   417,   418,     0,     0,   419,     0,     0,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   461,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    84,    85,    86,    87,    88,    89,
      90,    91,     0,    92,    93,    94,     0,     0,     0,     0,
       0,     0,     0,    95,    96,     0,    97,    98,    99,     0,
     101,   102,   103,   104,   105,     0,   107,   108,     0,   109,
     110,   111,   112,   113,   114,     0,     0,   115,   116,   117,
     118,   119,     0,   120,   121,   122,   123,   124,     0,     0,
       0,   126,   127,   128,   129,   130,     0,   132,   133,   134,
       0,   135,   136,   137,   138,   139,   140,     0,     0,   142,
     143,   144,     0,     0,     0,     0,     0,     0,     0,   146,
     147,   148,   149,   150,   151,   152,   153,   154,     0,   155,
       0,   156,   157,   158,   159,   160,   161,     0,   162,   163,
     164,   165,   166,     0,     0,   167,   168,   169,   170,   171,
       0,   172,   173,   174,     0,   175,   176,   177,     0,   178,
     179,   180,   181,   182,   183,   184,   185,   186,     0,   187,
       0,   188,   189,   190,   191,     0,   192,     0,   193,     0,
       0,     0,   196,   197,   198,   199,     0,   200,     0,   201,
     202,     0,   203,   204,   205,   206,   207,     0,   209,   210,
     211,   212,     0,   213,   214,   215,   216,   217,   218,     0,
     219,     0,   221,   222,   223,   224,   225,   226,   227,     0,
     228,     0,   229,     0,     0,   232,     0,   234,   235,   236,
     237,   238,     0,     0,   239,     0,   241,     0,     0,   243,
     244,   245,     0,     0,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,     0,   264,   265,   266,   267,   268,     0,   269,   270,
       0,   272,     0,   273,   274,   275,   276,   277,   278,     0,
     279,   280,     0,   526,   281,   282,   283,     0,     0,   284,
     285,     0,   287,     0,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,     0,   299,   300,   301,   302,   303,
     304,   305,   306,   307,     0,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,     0,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,     0,   334,   335,     0,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,     0,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
     359,     0,   361,   362,   363,   364,     0,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
       0,   378,   379,     0,   380,     0,   382,   383,   384,   385,
     386,     0,   387,   388,     0,     0,   389,   390,   391,   392,
     393,     0,   394,   395,   396,   397,   398,   399,   400,     0,
       0,   401,   402,   403,   404,   405,     0,     0,   406,   407,
     408,   409,   410,   411,   412,     0,   413,     0,   415,   416,
     417,   418,     0,     0,   419,     0,     0,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   461,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    84,    85,    86,    87,    88,    89,    90,    91,
     559,    92,    93,    94,     0,     0,     0,     0,     0,     0,
       0,    95,    96,     0,    97,    98,    99,     0,   101,   102,
     103,   104,   105,     0,   107,   108,     0,   109,   110,   111,
     112,   113,   114,     0,     0,   115,   116,   117,   118,   119,
       0,   120,   121,   122,   123,   124,     0,     0,     0,   126,
     127,   128,   129,   130,     0,   132,   133,   134,     0,   135,
     136,   137,   138,   139,   140,     0,     0,   142,   143,   144,
       0,     0,     0,     0,     0,     0,     0,   146,   147,   148,
     149,   150,   151,   152,   153,   154,     0,   155,     0,   156,
     157,   158,   159,   160,   161,     0,   162,   163,   164,   165,
     166,     0,     0,   167,   168,   169,   170,   171,     0,   172,
     173,   174,     0,   175,   176,   177,     0,   178,   179,   180,
     181,   182,   183,   184,   185,   186,     0,   187,     0,   188,
     189,   190,   191,     0,   192,     0,   193,     0,     0,     0,
     196,   197,   198,   199,     0,   200,     0,   201,   202,     0,
     203,   204,   205,   206,   207,     0,   209,   210,   211,   212,
       0,   213,   214,   215,   216,   217,   218,     0,   219,     0,
     221,   222,   223,   224,   225,   226,   227,     0,   228,     0,
     229,     0,     0,   232,     0,   234,   235,   236,   237,   238,
       0,     0,   239,     0,   241,     0,     0,   243,   244,   245,
       0,     0,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,     0,
     264,   265,   266,   267,   268,     0,   269,   270,     0,   272,
       0,   273,   274,   275,   276,   277,   278,     0,   279,   280,
       0,     0,   281,   282,   283,     0,     0,   284,   285,     0,
     287,     0,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,     0,   299,   300,   301,   302,   303,   304,   305,
     306,   307,     0,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,     0,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
       0,   334,   335,     0,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,     0,   350,   351,
     352,   353,   354,     0,   355,   356,   357,   358,   359,     0,
     361,   362,   363,   364,     0,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,     0,   378,
     379,     0,   380,     0,   382,   383,   384,   385,   386,     0,
     560,   388,     0,     0,   561,   390,   391,   392,   393,     0,
     394,   395,   396,   397,   398,   399,   400,     0,     0,   401,
     402,   403,   404,   405,     0,     0,   406,   407,   408,   409,
     410,   411,   412,     0,   413,     0,   415,   416,   417,   418,
       0,     0,   419,     0,     0,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   461,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      84,    85,    86,    87,    88,    89,    90,    91,     0,    92,
      93,    94,     0,     0,     0,     0,     0,     0,     0,    95,
      96,     0,    97,    98,    99,     0,   101,   102,   103,   104,
     105,     0,   107,   108,     0,   109,   110,   111,   112,   113,
     114,     0,     0,   115,   116,   117,   118,   119,     0,   120,
     121,   122,   123,   124,     0,     0,     0,   126,   127,   128,
     129,   130,     0,   132,   133,   134,     0,   135,   136,   137,
     138,   139,   140,     0,     0,   142,   143,   144,     0,     0,
       0,     0,     0,     0,     0,   146,   147,   148,   149,   150,
     151,   152,   153,   154,     0,   155,     0,   156,   157,   158,
     159,   160,   161,     0,   162,   163,   164,   165,   166,     0,
       0,   167,   168,   169,   170,   171,     0,   172,   173,   174,
       0,   175,   176,   177,     0,   178,   179,   180,   181,   182,
     183,   184,   185,   186,     0,   187,     0,   188,   189,   190,
     191,     0,   192,     0,   193,     0,     0,     0,   196,   197,
     198,   199,     0,   200,     0,   201,   202,     0,   203,   204,
     205,   206,   568,     0,   209,   210,   211,   212,     0,   213,
     214,   215,   216,   217,   218,     0,   219,     0,   221,   222,
     223,   224,   225,   226,   227,     0,   228,     0,   229,     0,
       0,   232,     0,   234,   235,   236,   237,   238,     0,     0,
     239,     0,   241,     0,     0,   243,   244,   245,     0,     0,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,     0,   264,   265,
     266,   267,   268,     0,   269,   270,     0,   272,     0,   273,
     274,   275,   276,   277,   278,     0,   279,   280,     0,   526,
     281,   282,   283,     0,     0,   284,   285,     0,   287,     0,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
       0,   299,   300,   301,   302,   303,   304,   305,   306,   307,
       0,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,     0,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,     0,   334,
     335,     0,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,     0,   350,   351,   352,   353,
     354,     0,   355,   356,   357,   358,   359,     0,   361,   362,
     363,   364,     0,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,     0,   378,   379,     0,
     380,     0,   382,   383,   384,   385,   386,     0,   387,   388,
       0,     0,   389,   390,   391,   392,   393,     0,   394,   395,
     396,   397,   398,   399,   400,     0,     0,   401,   402,   403,
     404,   405,     0,     0,   406,   407,   408,   409,   410,   411,
     412,     0,   413,     0,   415,   416,   417,   418,     0,     0,
     419,     0,     0,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   461,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    84,    85,
      86,    87,    88,    89,    90,    91,   595,    92,    93,    94,
       0,     0,     0,     0,     0,     0,     0,    95,    96,     0,
      97,    98,    99,     0,   101,   102,   103,   104,   105,     0,
     107,   108,     0,   109,   110,   111,   112,   113,   114,     0,
       0,   115,   116,   117,   118,   119,     0,   120,   121,   122,
     123,   124,     0,     0,     0,   126,   127,   128,   129,   130,
       0,   132,   133,   134,     0,   135,   136,   137,   138,   139,
     140,     0,     0,   142,   143,   144,     0,     0,     0,     0,
       0,     0,     0,   146,   147,   148,   149,   150,   151,   152,
     153,   154,     0,   155,     0,   156,   157,   158,   159,   160,
     161,     0,   162,   163,   164,   165,   166,     0,     0,   167,
     168,   169,   170,   171,     0,   172,   173,   174,     0,   175,
     176,   177,     0,   178,   179,   180,   181,   182,   183,   184,
     185,   186,     0,   187,     0,   188,   189,   190,   191,     0,
     192,     0,   193,     0,     0,     0,   196,   197,   198,   199,
       0,   200,     0,   201,   202,     0,   203,   204,   205,   206,
     207,     0,   209,   210,   211,   212,     0,   213,   214,   215,
     216,   217,   218,     0,   219,     0,   221,   222,   223,   224,
     225,   226,   227,     0,   228,     0,   229,     0,     0,   232,
       0,   234,   235,   236,   237,   238,     0,     0,   239,     0,
     241,     0,     0,   243,   244,   245,     0,     0,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,     0,   264,   265,   266,   267,
     268,     0,   269,   270,     0,   272,     0,   273,   274,   275,
     276,   277,   278,     0,   279,   280,     0,     0,   281,   282,
     283,     0,     0,   284,   285,     0,   287,     0,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,     0,   299,
     300,   301,   302,   303,   304,   305,   306,   307,     0,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,     0,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,     0,   334,   335,     0,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,     0,   350,   351,   352,   353,   354,     0,
     355,   356,   357,   358,   359,     0,   361,   362,   363,   364,
       0,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,     0,   378,   379,     0,   380,     0,
     382,   383,   384,   385,   386,     0,   387,   388,     0,     0,
     389,   390,   391,   392,   393,     0,   394,   395,   396,   397,
     398,   399,   400,     0,     0,   401,   402,   403,   404,   405,
       0,     0,   406,   407,   408,   409,   410,   411,   412,     0,
     413,     0,   415,   416,   417,   418,     0,     0,   419,     0,
       0,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   461,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    84,    85,    86,    87,
      88,    89,    90,    91,     0,    92,    93,    94,     0,     0,
       0,     0,     0,     0,     0,    95,    96,     0,    97,    98,
      99,     0,   101,   102,   103,   104,   105,     0,   107,   108,
       0,   109,   110,   111,   112,   113,   114,     0,     0,   115,
     116,   117,   118,   119,     0,   120,   121,   122,   123,   124,
       0,     0,     0,   126,   127,   128,   129,   130,     0,   132,
     133,   134,     0,   135,   136,   137,   138,   139,   140,     0,
       0,   142,   143,   144,     0,     0,     0,     0,     0,     0,
       0,   146,   147,   148,   149,   150,   151,   152,   153,   154,
       0,   155,     0,   156,   157,   158,   159,   160,   161,     0,
     162,   163,   164,   165,   166,     0,     0,   167,   168,   169,
     170,   171,     0,   172,   173,   174,     0,   175,   176,   177,
       0,   178,   179,   180,   181,   182,   183,   184,   185,   186,
       0,   187,     0,   188,   189,   190,   191,     0,   192,     0,
     193,     0,     0,     0,   196,   197,   198,  1440,     0,   200,
       0,   201,   202,     0,   203,   204,   205,   206,   207,     0,
     209,   210,   211,   212,     0,   213,   214,   215,   216,   217,
     218,     0,   219,     0,   221,   222,   223,   224,   225,   226,
     227,     0,   228,     0,   229,     0,     0,   232,     0,   234,
     235,   236,   237,   238,     0,     0,   239,     0,   241,     0,
       0,   243,   244,  1441,     0,     0,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,     0,   264,   265,   266,   267,   268,     0,
     269,   270,     0,   272,     0,   273,   274,   275,   276,   277,
     278,     0,   279,   280,     0,     0,   281,   282,   283,     0,
       0,   284,   285,     0,   287,     0,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,     0,   299,   300,   301,
     302,   303,   304,   305,   306,   307,     0,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,     0,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,     0,   334,   335,     0,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,     0,   350,   351,   352,   353,   354,     0,   355,   356,
     357,   358,   359,     0,   361,   362,   363,   364,     0,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,     0,   378,   379,  1442,   380,     0,   382,  1443,
     384,  1444,   386,     0,   387,   388,     0,     0,   389,   390,
     391,   392,   393,     0,   394,   395,   396,   397,   398,   399,
     400,     0,     0,   401,   402,  1445,   404,   405,     0,     0,
     406,   407,   408,   409,   410,   411,   412,     0,   413,     0,
     415,   416,   417,   418,     0,     0,   419,     0,     0,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   461,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    84,    85,    86,    87,    88,    89,
      90,    91,     0,    92,    93,    94,     0,     0,     0,     0,
       0,  1962,     0,    95,    96,     0,    97,    98,    99,     0,
     101,   102,   103,   104,   105,     0,   107,   108,     0,   109,
     110,   111,   112,   113,   114,     0,     0,   115,   116,   117,
     118,   119,     0,   120,   121,   122,   123,   124,     0,     0,
       0,   126,   127,   128,   129,   130,     0,   132,   133,   134,
       0,   135,   136,   137,   138,   139,   140,     0,     0,   142,
     143,   144,     0,     0,     0,     0,     0,     0,     0,   146,
     147,   148,   149,   150,   151,   152,   153,   154,     0,   155,
       0,   156,   157,   158,   159,   160,   161,     0,   162,   163,
     164,   165,   166,     0,     0,   167,   168,   169,   170,   171,
       0,   172,   173,   174,     0,   175,   176,   177,     0,   178,
     179,   180,   181,   182,   183,   184,   185,   186,     0,   187,
       0,   188,   189,   190,   191,     0,   192,     0,   193,     0,
       0,     0,   196,   197,   198,   199,     0,   200,     0,   201,
     202,     0,   203,   204,   205,   206,   207,     0,   209,   210,
     211,   212,     0,   213,   214,   215,   216,   217,   218,     0,
     219,     0,   221,   222,   223,   224,   225,   226,   227,     0,
     228,     0,   229,     0,     0,   232,     0,   234,   235,   236,
     237,   238,     0,     0,   239,     0,   241,     0,     0,   243,
     244,   245,     0,     0,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,     0,   264,   265,   266,   267,   268,     0,   269,   270,
       0,   272,     0,   273,   274,   275,   276,   277,   278,     0,
     279,   280,     0,     0,   281,   282,   283,     0,     0,   284,
     285,     0,   287,     0,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,     0,   299,   300,   301,   302,   303,
     304,   305,   306,   307,     0,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,     0,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,     0,   334,   335,     0,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,     0,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
     359,     0,   361,   362,   363,   364,     0,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
       0,   378,   379,     0,   380,     0,   382,   383,   384,   385,
     386,     0,   387,   388,     0,     0,   389,   390,   391,   392,
     393,     0,   394,   395,   396,   397,   398,   399,   400,     0,
       0,   401,   402,   403,   404,   405,     0,     0,   406,   407,
     408,   409,   410,   411,   412,     0,   413,     0,   415,   416,
     417,   418,     0,     0,   419,     0,     0,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   461,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    84,    85,    86,    87,    88,    89,    90,    91,
       0,    92,    93,    94,     0,     0,     0,     0,     0,  1976,
       0,    95,    96,     0,    97,    98,    99,     0,   101,   102,
     103,   104,   105,     0,   107,   108,     0,   109,   110,   111,
     112,   113,   114,     0,     0,   115,   116,   117,   118,   119,
       0,   120,   121,   122,   123,   124,     0,     0,     0,   126,
     127,   128,   129,   130,     0,   132,   133,   134,     0,   135,
     136,   137,   138,   139,   140,     0,     0,   142,   143,   144,
       0,     0,     0,     0,     0,     0,     0,   146,   147,   148,
     149,   150,   151,   152,   153,   154,     0,   155,     0,   156,
     157,   158,   159,   160,   161,     0,   162,   163,   164,   165,
     166,     0,     0,   167,   168,   169,   170,   171,     0,   172,
     173,   174,     0,   175,   176,   177,     0,   178,   179,   180,
     181,   182,   183,   184,   185,   186,     0,   187,     0,   188,
     189,   190,   191,     0,   192,     0,   193,     0,     0,     0,
     196,   197,   198,   199,     0,   200,     0,   201,   202,     0,
     203,   204,   205,   206,   207,     0,   209,   210,   211,   212,
       0,   213,   214,   215,   216,   217,   218,     0,   219,     0,
     221,   222,   223,   224,   225,   226,   227,     0,   228,     0,
     229,     0,     0,   232,     0,   234,   235,   236,   237,   238,
       0,     0,   239,     0,   241,     0,     0,   243,   244,   245,
       0,     0,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,     0,
     264,   265,   266,   267,   268,     0,   269,   270,     0,   272,
       0,   273,   274,   275,   276,   277,   278,     0,   279,   280,
       0,     0,   281,   282,   283,     0,     0,   284,   285,     0,
     287,     0,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,     0,   299,   300,   301,   302,   303,   304,   305,
     306,   307,     0,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,     0,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
       0,   334,   335,     0,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,     0,   350,   351,
     352,   353,   354,     0,   355,   356,   357,   358,   359,     0,
     361,   362,   363,   364,     0,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,     0,   378,
     379,     0,   380,     0,   382,   383,   384,   385,   386,     0,
     387,   388,     0,     0,   389,   390,   391,   392,   393,     0,
     394,   395,   396,   397,   398,   399,   400,     0,     0,   401,
     402,   403,   404,   405,     0,     0,   406,   407,   408,   409,
     410,   411,   412,     0,   413,     0,   415,   416,   417,   418,
       0,     0,   419,     0,     0,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   461,     0,  2133,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      84,    85,    86,    87,    88,    89,    90,    91,     0,    92,
      93,    94,     0,     0,     0,     0,     0,     0,     0,    95,
      96,     0,    97,    98,    99,     0,   101,   102,   103,   104,
     105,     0,   107,   108,     0,   109,   110,   111,   112,   113,
     114,     0,     0,   115,   116,   117,   118,   119,     0,   120,
     121,   122,   123,   124,     0,     0,     0,   126,   127,   128,
     129,   130,     0,   132,   133,   134,     0,   135,   136,   137,
     138,   139,   140,     0,     0,   142,   143,   144,     0,     0,
       0,     0,     0,     0,     0,   146,   147,   148,   149,   150,
     151,   152,   153,   154,     0,   155,     0,   156,   157,   158,
     159,   160,   161,     0,   162,   163,   164,   165,   166,     0,
       0,   167,   168,   169,   170,   171,     0,   172,   173,   174,
       0,   175,   176,   177,     0,   178,   179,   180,   181,   182,
     183,   184,   185,   186,     0,   187,     0,   188,   189,   190,
     191,     0,   192,     0,   193,     0,     0,     0,   196,   197,
     198,   199,     0,   200,     0,   201,   202,     0,   203,   204,
     205,   206,   207,     0,   209,   210,   211,   212,     0,   213,
     214,   215,   216,   217,   218,     0,   219,     0,   221,   222,
     223,   224,   225,   226,   227,     0,   228,     0,   229,     0,
       0,   232,     0,   234,   235,   236,   237,   238,     0,     0,
     239,     0,   241,     0,     0,   243,   244,   245,     0,     0,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,     0,   264,   265,
     266,   267,   268,     0,   269,   270,     0,   272,     0,   273,
     274,   275,   276,   277,   278,     0,   279,   280,     0,     0,
     281,   282,   283,     0,     0,   284,   285,     0,   287,     0,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
       0,   299,   300,   301,   302,   303,   304,   305,   306,   307,
       0,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,     0,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,     0,   334,
     335,     0,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,     0,   350,   351,   352,   353,
     354,     0,   355,   356,   357,   358,   359,     0,   361,   362,
     363,   364,     0,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,     0,   378,   379,     0,
     380,     0,   382,   383,   384,   385,   386,     0,   387,   388,
       0,     0,   389,   390,   391,   392,   393,     0,   394,   395,
     396,   397,   398,   399,   400,     0,     0,   401,   402,   403,
     404,   405,     0,     0,   406,   407,   408,   409,   410,   411,
     412,     0,   413,     0,   415,   416,   417,   418,     0,     0,
     419,     0,     0,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   461,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    84,    85,
      86,    87,    88,    89,    90,    91,     0,    92,    93,    94,
       0,     0,     0,     0,     0,     0,     0,    95,    96,     0,
      97,    98,    99,     0,   101,   102,   103,   104,   105,     0,
     107,   108,     0,   109,   110,   111,   112,   113,   114,     0,
       0,   115,   116,   117,   118,   119,     0,   120,   121,   122,
     123,   124,     0,     0,     0,   126,   127,   128,   129,   130,
       0,   132,   133,   134,     0,   135,   136,   137,   138,   139,
     140,     0,     0,   142,   143,   144,     0,     0,     0,     0,
       0,     0,     0,   146,   147,   148,   149,   150,   151,   152,
     153,   154,     0,   155,     0,   156,   157,   158,   159,   160,
     161,     0,   162,   163,   164,   165,   166,     0,     0,   167,
     168,   169,   170,   171,     0,   172,   173,   174,     0,   175,
     176,   177,     0,   178,   179,   180,   181,   182,   183,   184,
     185,   186,     0,   187,     0,   188,   189,   190,   191,     0,
     192,     0,   193,     0,     0,     0,   196,   197,   198,   199,
       0,   200,     0,   201,   202,     0,   203,   204,   205,   206,
     207,     0,   209,   210,   211,   212,     0,   213,   214,   215,
     216,   217,   218,     0,   219,     0,   221,   222,   223,   224,
     225,   226,   227,     0,   228,     0,   229,     0,     0,   232,
       0,   234,   235,   236,   237,   238,     0,     0,   239,     0,
     241,     0,     0,   243,   244,   245,     0,     0,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,     0,   264,   265,   266,   267,
     268,     0,   269,   270,     0,   272,     0,   273,   274,   275,
     276,   277,   278,     0,   279,   280,     0,     0,   281,   282,
     283,     0,     0,   284,   285,     0,   287,     0,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,     0,   299,
     300,   301,   302,   303,   304,   305,   306,   307,     0,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,     0,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,     0,   334,   335,     0,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,     0,   350,   351,   352,   353,   354,     0,
     355,   356,   357,   358,   359,     0,   361,   362,   363,   364,
       0,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,     0,   378,   379,     0,   380,     0,
     382,   383,   384,   385,   386,     0,   387,   388,     0,     0,
     389,   390,   391,   392,   393,     0,   394,   395,   396,   397,
     398,   399,   400,     0,     0,   401,   402,   403,   404,   405,
       0,     0,   406,   407,   408,   409,   410,   411,   412,     0,
     413,     0,   415,   416,   417,   418,     0,     0,   419,     0,
       0,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   461,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    84,    85,    86,    87,
      88,    89,    90,    91,     0,    92,    93,    94,     0,     0,
       0,     0,     0,     0,     0,    95,    96,     0,    97,    98,
      99,     0,   101,   102,   103,   104,   105,     0,   107,   108,
       0,   109,   110,   111,   112,   113,   114,     0,     0,   115,
     116,   117,   118,   119,     0,   120,   121,   122,   123,   124,
       0,     0,     0,   126,   127,   128,   129,   130,     0,   132,
     133,   134,     0,   135,   136,   137,   138,   139,   140,     0,
       0,   142,   143,   144,     0,     0,     0,     0,     0,     0,
       0,   146,   147,   148,   149,   150,   151,   152,   153,   154,
       0,   155,     0,   156,   157,   158,   159,   160,   161,     0,
     162,   163,   164,   165,   166,     0,     0,   167,   168,   169,
     170,   171,     0,   172,   173,   174,     0,   175,   176,   177,
       0,   178,   179,   180,   181,   182,   183,   184,   185,   186,
       0,   187,     0,   188,   189,   190,   191,     0,   192,     0,
     193,     0,     0,     0,   196,   197,   198,   199,     0,   200,
       0,   201,   202,     0,   203,   204,   205,   206,   207,     0,
     209,   210,   211,   212,     0,   213,   214,   215,   216,   217,
     218,     0,   219,     0,   221,   222,   223,   224,   225,   226,
     227,     0,   228,     0,   229,     0,     0,   232,     0,   234,
     235,   236,   237,   238,     0,     0,   239,     0,   241,     0,
       0,   243,   244,   518,     0,     0,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,     0,   264,   265,   266,   267,   268,     0,
     269,   270,     0,   272,     0,   273,   274,   275,   276,   277,
     278,     0,   279,   280,     0,     0,   281,   282,   283,     0,
       0,   284,   285,     0,   287,     0,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,     0,   299,   300,   301,
     302,   303,   304,   305,   306,   307,     0,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,     0,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,     0,   334,   335,     0,   337,   338,
     339,   340,   341,   342,   343,   519,   345,   346,   347,   348,
     349,     0,   350,   351,   352,   353,   520,     0,   355,   356,
     357,   358,   359,     0,   361,   362,   363,   364,     0,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,     0,   378,   379,     0,   380,     0,   382,   383,
     384,   385,   386,     0,   521,   388,     0,     0,   389,   390,
     391,   392,   393,     0,   394,   395,   396,   397,   398,   399,
     400,     0,     0,   401,   402,   403,   404,   405,     0,     0,
     406,   407,   408,   409,   410,   411,   412,     0,   413,     0,
     415,   416,   417,   418,     0,     0,   419,     0,     0,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   461,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    84,    85,    86,    87,    88,    89,
      90,    91,     0,    92,    93,    94,     0,     0,     0,     0,
       0,     0,     0,    95,    96,     0,    97,    98,    99,     0,
     101,   102,   103,   104,   105,     0,   107,   108,     0,   109,
     110,   111,   112,   113,   114,     0,     0,   115,   116,   117,
     118,   119,     0,   120,   121,   122,   123,   124,     0,     0,
       0,   126,   127,   128,   129,   130,     0,   132,   133,   134,
       0,   135,   136,   137,   138,   139,   140,     0,     0,   142,
     143,   144,     0,     0,     0,     0,     0,     0,     0,   146,
     147,   148,   149,   150,   151,   152,   153,   154,     0,   155,
       0,   156,   157,   158,   159,   160,   161,     0,   162,   163,
     164,   165,   166,     0,     0,   167,   168,   169,   170,   171,
       0,   172,   173,   174,     0,   175,   176,   177,     0,   178,
     179,   180,   181,   182,   183,   184,   185,   186,     0,   187,
       0,   188,   189,   190,   191,     0,   192,     0,   193,     0,
       0,     0,   196,   197,   198,   199,     0,   200,     0,   201,
     202,     0,   203,   204,   205,   206,   207,     0,   209,   210,
     211,   212,     0,   213,   214,   215,   216,   217,   218,     0,
     219,     0,   221,   222,   223,   224,   225,   226,   227,     0,
     228,     0,   229,     0,     0,   232,     0,   234,   235,   236,
     237,   238,     0,     0,   239,     0,   241,     0,     0,   243,
     244,   245,     0,     0,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,     0,   264,   265,   266,   267,   268,     0,   269,   270,
       0,   272,     0,   273,   274,   275,   276,   277,   278,     0,
     279,   280,     0,     0,   281,   282,   283,     0,     0,   284,
     285,     0,   287,     0,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,     0,   299,   300,   301,   302,   303,
     304,   305,   306,   307,     0,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   534,   321,     0,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,     0,   334,   335,     0,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,     0,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
     359,     0,   361,   362,   363,   364,     0,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
       0,   378,   379,     0,   380,     0,   382,   383,   384,   385,
     386,     0,   387,   388,     0,     0,   389,   390,   391,   392,
     393,     0,   394,   395,   396,   397,   398,   399,   400,     0,
       0,   401,   402,   403,   404,   405,     0,     0,   406,   407,
     408,   409,   410,   411,   412,     0,   413,     0,   415,   416,
     417,   418,     0,     0,   419,     0,     0,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   461,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    84,    85,    86,    87,    88,    89,    90,    91,
       0,    92,    93,    94,     0,     0,     0,     0,     0,     0,
       0,    95,    96,     0,    97,    98,    99,     0,   101,   102,
     103,   104,   105,     0,   107,   108,     0,   109,   110,   111,
     112,   113,   114,     0,     0,   115,   116,   117,   118,   119,
       0,   120,   121,   122,   123,   124,     0,     0,     0,   126,
     127,   128,   129,   130,     0,   132,   133,   134,     0,   135,
     136,   137,   138,   139,   140,     0,     0,   142,   143,   144,
       0,     0,     0,     0,     0,     0,     0,   146,   147,   148,
     149,   150,   151,   152,   153,   154,     0,   155,     0,   156,
     157,   158,   159,   160,   161,     0,   162,   163,   164,   165,
     166,     0,     0,   167,   168,   169,   170,   171,     0,   172,
     173,   174,     0,   175,   176,   177,     0,   178,   179,   180,
     181,   182,   183,   184,   185,   186,     0,   187,     0,   188,
     189,   190,   191,     0,   192,     0,   193,     0,     0,     0,
     196,   197,   198,   199,     0,   200,     0,   201,   202,     0,
     203,   204,   205,   206,   563,     0,   209,   210,   211,   212,
       0,   213,   214,   215,   216,   217,   218,     0,   219,     0,
     221,   222,   223,   224,   225,   226,   227,     0,   228,     0,
     229,     0,     0,   232,     0,   234,   235,   236,   237,   238,
       0,     0,   239,     0,   241,     0,     0,   243,   244,   245,
       0,     0,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,     0,
     264,   265,   266,   267,   268,     0,   269,   270,     0,   272,
       0,   273,   274,   275,   276,   277,   278,     0,   279,   280,
       0,     0,   281,   282,   283,     0,     0,   284,   285,     0,
     287,     0,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,     0,   299,   300,   301,   302,   303,   304,   305,
     306,   307,     0,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,     0,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
       0,   334,   335,     0,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,     0,   350,   351,
     352,   353,   354,     0,   355,   356,   357,   358,   359,     0,
     361,   362,   363,   364,     0,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,     0,   378,
     379,     0,   380,     0,   382,   383,   384,   385,   386,     0,
     387,   388,     0,     0,   389,   390,   391,   392,   393,     0,
     394,   395,   396,   397,   398,   399,   400,     0,     0,   401,
     402,   403,   404,   405,     0,     0,   406,   407,   408,   409,
     410,   411,   412,     0,   413,     0,   415,   416,   417,   418,
       0,     0,   419,     0,     0,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   461,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      84,    85,    86,    87,    88,    89,    90,    91,     0,    92,
      93,    94,     0,     0,     0,     0,     0,     0,     0,    95,
      96,     0,    97,    98,    99,     0,   101,   102,   103,   104,
     105,     0,   107,   108,     0,   109,   110,   111,   112,   113,
     114,     0,     0,   115,   116,   117,   118,   119,     0,   120,
     121,   122,   123,   124,     0,     0,     0,   126,   127,   128,
     129,   130,     0,   132,   133,   134,     0,   135,   136,   137,
     138,   139,   140,     0,     0,   142,   143,   144,     0,     0,
       0,     0,     0,     0,     0,   146,   147,   148,   149,   150,
     151,   152,   153,   154,     0,   155,     0,   156,   157,   158,
     159,   160,   161,     0,   162,   163,   164,   165,   166,     0,
       0,   167,   168,   169,   170,   171,     0,   172,   173,   174,
       0,   175,   176,   177,     0,   178,   179,   180,   181,   182,
     183,   184,   185,   186,     0,   187,     0,   188,   189,   190,
     191,     0,   192,     0,   193,     0,     0,     0,   196,   197,
     198,   199,     0,   200,     0,   201,   202,     0,   203,   204,
     205,   206,   566,     0,   209,   210,   211,   212,     0,   213,
     214,   215,   216,   217,   218,     0,   219,     0,   221,   222,
     223,   224,   225,   226,   227,     0,   228,     0,   229,     0,
       0,   232,     0,   234,   235,   236,   237,   238,     0,     0,
     239,     0,   241,     0,     0,   243,   244,   245,     0,     0,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,     0,   264,   265,
     266,   267,   268,     0,   269,   270,     0,   272,     0,   273,
     274,   275,   276,   277,   278,     0,   279,   280,     0,     0,
     281,   282,   283,     0,     0,   284,   285,     0,   287,     0,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
       0,   299,   300,   301,   302,   303,   304,   305,   306,   307,
       0,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,     0,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,     0,   334,
     335,     0,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,     0,   350,   351,   352,   353,
     354,     0,   355,   356,   357,   358,   359,     0,   361,   362,
     363,   364,     0,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,     0,   378,   379,     0,
     380,     0,   382,   383,   384,   385,   386,     0,   387,   388,
       0,     0,   389,   390,   391,   392,   393,     0,   394,   395,
     396,   397,   398,   399,   400,     0,     0,   401,   402,   403,
     404,   405,     0,     0,   406,   407,   408,   409,   410,   411,
     412,     0,   413,     0,   415,   416,   417,   418,     0,     0,
     419,     0,     0,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   461,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    84,    85,
      86,    87,    88,    89,    90,    91,     0,    92,    93,    94,
       0,     0,     0,     0,     0,     0,     0,    95,    96,     0,
      97,    98,    99,     0,   101,   102,   103,   104,   105,     0,
     107,   108,     0,   109,   110,   111,   112,   113,   114,     0,
       0,   115,   116,   117,   118,   119,     0,   120,   121,   122,
     123,   124,     0,     0,     0,   126,   127,   128,   129,   130,
       0,   132,   133,   134,     0,   135,   136,   137,   138,   139,
     140,     0,     0,   142,   143,   144,     0,     0,     0,     0,
       0,     0,     0,   146,   147,   148,   149,   150,   151,   152,
     153,   154,     0,   155,     0,   156,   157,   158,   159,   160,
     161,     0,   162,   163,   164,   165,   166,     0,     0,   167,
     168,   169,   170,   171,     0,   172,   173,   174,     0,   175,
     176,   177,     0,   178,   179,   180,   181,   182,   183,   184,
     185,   186,     0,   187,     0,   188,   189,   190,   191,     0,
     192,     0,   193,     0,     0,     0,   196,   197,   198,   199,
       0,   200,     0,   201,   202,     0,   203,   204,   205,   206,
     570,     0,   209,   210,   211,   212,     0,   213,   214,   215,
     216,   217,   218,     0,   219,     0,   221,   222,   223,   224,
     225,   226,   227,     0,   228,     0,   229,     0,     0,   232,
       0,   234,   235,   236,   237,   238,     0,     0,   239,     0,
     241,     0,     0,   243,   244,   245,     0,     0,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,     0,   264,   265,   266,   267,
     268,     0,   269,   270,     0,   272,     0,   273,   274,   275,
     276,   277,   278,     0,   279,   280,     0,     0,   281,   282,
     283,     0,     0,   284,   285,     0,   287,     0,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,     0,   299,
     300,   301,   302,   303,   304,   305,   306,   307,     0,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,     0,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,     0,   334,   335,     0,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,     0,   350,   351,   352,   353,   354,     0,
     355,   356,   357,   358,   359,     0,   361,   362,   363,   364,
       0,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,     0,   378,   379,     0,   380,     0,
     382,   383,   384,   385,   386,     0,   387,   388,     0,     0,
     389,   390,   391,   392,   393,     0,   394,   395,   396,   397,
     398,   399,   400,     0,     0,   401,   402,   403,   404,   405,
       0,     0,   406,   407,   408,   409,   410,   411,   412,     0,
     413,     0,   415,   416,   417,   418,     0,     0,   419,     0,
       0,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   461,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    84,    85,    86,    87,
      88,    89,    90,    91,     0,    92,    93,    94,     0,     0,
       0,     0,     0,     0,     0,    95,    96,     0,    97,    98,
      99,     0,   101,   102,   103,   104,   105,     0,   107,   108,
       0,   109,   110,   111,   112,   113,   114,     0,     0,   115,
     116,   117,   118,   119,     0,   120,   121,   122,   123,   124,
       0,     0,     0,   126,   127,   128,   129,   130,     0,   132,
     133,   134,     0,   135,   136,   137,   138,   139,   140,     0,
       0,   142,   143,   144,     0,     0,     0,     0,     0,     0,
       0,   146,   147,   148,   149,   150,   151,   152,   153,   154,
       0,   155,     0,   156,   157,   158,   159,   160,   161,     0,
     162,   163,   164,   165,   166,     0,     0,   167,   168,   169,
     170,   171,     0,   172,   173,   174,     0,   175,   176,   177,
       0,   178,   179,   180,   181,   182,   183,   184,   185,   186,
       0,   187,     0,   188,   189,   190,   191,     0,   192,     0,
     193,     0,     0,     0,   196,   197,   198,   199,     0,   200,
       0,   201,   202,     0,   203,   204,   205,   206,   588,     0,
     209,   210,   211,   212,     0,   213,   214,   215,   216,   217,
     218,     0,   219,     0,   221,   222,   223,   224,   225,   226,
     227,     0,   228,     0,   229,     0,     0,   232,     0,   234,
     235,   236,   237,   238,     0,     0,   239,     0,   241,     0,
       0,   243,   244,   245,     0,     0,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,     0,   264,   265,   266,   267,   268,     0,
     269,   270,     0,   272,     0,   273,   274,   275,   276,   277,
     278,     0,   279,   280,     0,     0,   281,   282,   283,     0,
       0,   284,   285,     0,   287,     0,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,     0,   299,   300,   301,
     302,   303,   304,   305,   306,   307,     0,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,     0,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,     0,   334,   335,     0,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,     0,   350,   351,   352,   353,   354,     0,   355,   356,
     357,   358,   359,     0,   361,   362,   363,   364,     0,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,     0,   378,   379,     0,   380,     0,   382,   383,
     384,   385,   386,     0,   387,   388,     0,     0,   389,   390,
     391,   392,   393,     0,   394,   395,   396,   397,   398,   399,
     400,     0,     0,   401,   402,   403,   404,   405,     0,     0,
     406,   407,   408,   409,   410,   411,   412,     0,   413,     0,
     415,   416,   417,   418,     0,     0,   419,     0,     0,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   461,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    84,    85,    86,    87,    88,    89,
      90,    91,     0,    92,    93,    94,     0,     0,     0,     0,
       0,     0,     0,    95,    96,     0,    97,    98,    99,     0,
     101,   102,   103,   104,   105,     0,   107,   108,     0,   109,
     110,   111,   112,   113,   114,     0,     0,   115,   116,   117,
     118,   119,     0,   120,   121,   122,   123,   124,     0,     0,
       0,   126,   127,   128,   129,   130,     0,   132,   133,   134,
       0,   135,   136,   137,   138,   139,   140,     0,     0,   142,
     143,   144,     0,     0,     0,     0,     0,     0,     0,   146,
     147,   148,   149,   150,   151,   152,   153,   154,     0,   155,
       0,   156,   157,   158,   159,   160,   161,     0,   162,   163,
     164,   165,   166,     0,     0,   167,   168,   169,   170,   171,
       0,   172,   173,   174,     0,   175,   176,   177,     0,   178,
     179,   180,   181,   182,   183,   184,   185,   186,     0,   187,
       0,   188,   189,   190,   191,     0,   192,     0,   193,     0,
       0,     0,   196,   197,   198,   199,     0,   200,     0,   201,
     202,     0,   203,   204,   205,   206,   603,     0,   209,   210,
     211,   212,     0,   213,   214,   215,   216,   217,   218,     0,
     219,     0,   221,   222,   223,   224,   225,   226,   227,     0,
     228,     0,   229,     0,     0,   232,     0,   234,   235,   236,
     237,   238,     0,     0,   239,     0,   241,     0,     0,   243,
     244,   245,     0,     0,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,     0,   264,   265,   266,   267,   268,     0,   269,   270,
       0,   272,     0,   273,   274,   275,   276,   277,   278,     0,
     279,   280,     0,     0,   281,   282,   283,     0,     0,   284,
     285,     0,   287,     0,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,     0,   299,   300,   301,   302,   303,
     304,   305,   306,   307,     0,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,     0,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,     0,   334,   335,     0,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,     0,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
     359,     0,   361,   362,   363,   364,     0,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
       0,   378,   379,     0,   380,     0,   382,   383,   384,   385,
     386,     0,   387,   388,     0,     0,   389,   390,   391,   392,
     393,     0,   394,   395,   396,   397,   398,   399,   400,     0,
       0,   401,   402,   403,   404,   405,     0,     0,   406,   407,
     408,   409,   410,   411,   412,     0,   413,     0,   415,   416,
     417,   418,     0,     0,   419,     0,     0,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   461,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    84,    85,    86,    87,    88,    89,    90,    91,
       0,    92,    93,    94,     0,     0,     0,     0,     0,     0,
       0,    95,    96,     0,    97,    98,    99,     0,   101,   102,
     103,   104,   105,     0,   107,   108,     0,   109,   110,   111,
     112,   113,   114,     0,     0,   115,   116,   117,   118,   119,
       0,   120,   121,   122,   123,   124,     0,     0,     0,   126,
     127,   128,   129,   130,     0,   132,   133,   134,     0,   135,
     136,   137,   138,   139,   140,     0,     0,   142,   143,   144,
       0,     0,     0,     0,     0,     0,     0,   146,   147,   148,
     149,   150,   151,   152,   153,   154,     0,   155,     0,   156,
     157,   158,   159,   160,   161,     0,   162,   163,   164,   165,
     166,     0,     0,   167,   168,   169,   170,   171,     0,   172,
     173,   174,     0,   175,   176,   177,     0,   178,   179,   180,
     181,   182,   183,   184,   185,   186,     0,   187,     0,   188,
     189,   190,   191,     0,   192,     0,   193,     0,     0,     0,
     196,   197,   198,   199,     0,   200,     0,   201,   202,     0,
     203,   204,   205,   206,   607,     0,   209,   210,   211,   212,
       0,   213,   214,   215,   216,   217,   218,     0,   219,     0,
     221,   222,   223,   224,   225,   226,   227,     0,   228,     0,
     229,     0,     0,   232,     0,   234,   235,   236,   237,   238,
       0,     0,   239,     0,   241,     0,     0,   243,   244,   245,
       0,     0,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,     0,
     264,   265,   266,   267,   268,     0,   269,   270,     0,   272,
       0,   273,   274,   275,   276,   277,   278,     0,   279,   280,
       0,     0,   281,   282,   283,     0,     0,   284,   285,     0,
     287,     0,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,     0,   299,   300,   301,   302,   303,   304,   305,
     306,   307,     0,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,     0,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
       0,   334,   335,     0,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,     0,   350,   351,
     352,   353,   354,     0,   355,   356,   357,   358,   359,     0,
     361,   362,   363,   364,     0,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,     0,   378,
     379,     0,   380,     0,   382,   383,   384,   385,   386,     0,
     387,   388,     0,     0,   389,   390,   391,   392,   393,     0,
     394,   395,   396,   397,   398,   399,   400,     0,     0,   401,
     402,   403,   404,   405,     0,     0,   406,   407,   408,   409,
     410,   411,   412,     0,   413,     0,   415,   416,   417,   418,
       0,     0,   419,     0,     0,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   461,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      84,    85,    86,    87,    88,    89,    90,    91,     0,    92,
      93,    94,     0,     0,     0,     0,     0,     0,     0,    95,
      96,     0,    97,    98,    99,     0,   101,   102,   103,   104,
     105,     0,   107,   108,     0,   109,   110,   111,   112,   113,
     114,     0,     0,   115,   116,   117,   118,   119,     0,   120,
     121,   122,   123,   124,     0,     0,     0,   126,   127,   128,
     129,   130,     0,   132,   133,   134,     0,   135,   136,   137,
     138,   139,   140,     0,     0,   142,   143,   144,     0,     0,
       0,     0,     0,     0,     0,   146,   147,   148,   149,   150,
     151,   152,   153,   154,     0,   155,     0,   156,   157,   158,
     159,   160,   161,     0,   162,   163,   164,   165,   166,     0,
       0,   167,   168,   169,   170,   171,     0,   172,   173,   174,
       0,   175,   176,   177,     0,   178,   179,   180,   181,   182,
     183,   184,   185,   186,     0,   187,     0,   188,   189,   190,
     191,     0,   192,     0,   193,     0,     0,     0,   196,   197,
     198,   199,     0,   200,     0,   201,   202,     0,   203,   204,
     205,   206,   610,     0,   209,   210,   211,   212,     0,   213,
     214,   215,   216,   217,   218,     0,   219,     0,   221,   222,
     223,   224,   225,   226,   227,     0,   228,     0,   229,     0,
       0,   232,     0,   234,   235,   236,   237,   238,     0,     0,
     239,     0,   241,     0,     0,   243,   244,   245,     0,     0,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,     0,   264,   265,
     266,   267,   268,     0,   269,   270,     0,   272,     0,   273,
     274,   275,   276,   277,   278,     0,   279,   280,     0,     0,
     281,   282,   283,     0,     0,   284,   285,     0,   287,     0,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
       0,   299,   300,   301,   302,   303,   304,   305,   306,   307,
       0,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,     0,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,     0,   334,
     335,     0,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,     0,   350,   351,   352,   353,
     354,     0,   355,   356,   357,   358,   359,     0,   361,   362,
     363,   364,     0,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,     0,   378,   379,     0,
     380,     0,   382,   383,   384,   385,   386,     0,   387,   388,
       0,     0,   389,   390,   391,   392,   393,     0,   394,   395,
     396,   397,   398,   399,   400,     0,     0,   401,   402,   403,
     404,   405,     0,     0,   406,   407,   408,   409,   410,   411,
     412,     0,   413,     0,   415,   416,   417,   418,     0,     0,
     419,     0,     0,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   461,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    84,    85,
      86,    87,    88,    89,    90,    91,     0,    92,    93,    94,
       0,     0,     0,     0,     0,     0,     0,    95,    96,     0,
      97,    98,    99,     0,   101,   102,   103,   104,   105,     0,
     107,   108,     0,   109,   110,   111,   112,   113,   114,     0,
       0,   115,   116,   117,   118,   119,     0,   120,   121,   122,
     123,   124,     0,     0,     0,   126,   127,   128,   129,   130,
       0,   132,   133,   134,     0,   135,   136,   137,   138,   139,
     140,     0,     0,   142,   143,   144,     0,     0,     0,     0,
       0,     0,     0,   146,   147,   148,   149,   150,   151,   152,
     153,   154,     0,   155,     0,   156,   157,   158,   159,   160,
     161,     0,   162,   163,   164,   165,   166,     0,     0,   167,
     168,   169,   170,   171,     0,   172,   173,   174,     0,   175,
     176,   177,     0,   178,   179,   180,   181,   182,   183,   184,
     185,   186,     0,   187,     0,   188,   189,   190,   191,     0,
     192,     0,   193,     0,     0,     0,   196,   197,   198,   199,
       0,   200,     0,   201,   202,     0,   203,   204,   205,   206,
     207,     0,   209,   210,   211,   212,     0,   213,   214,   215,
     216,   217,   218,     0,   219,     0,   221,   222,   223,   224,
     225,   226,   227,     0,   228,     0,   229,     0,     0,   232,
       0,   234,   235,   236,   237,   238,     0,     0,   239,     0,
     241,     0,     0,   243,   244,   245,     0,     0,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,     0,   264,   265,   266,   267,
     268,     0,   269,   270,     0,   272,     0,   273,   274,   275,
     276,   277,   278,     0,   279,   280,     0,     0,   281,   282,
     283,     0,     0,   284,   285,     0,   287,     0,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,     0,   299,
     300,   301,   302,   303,   304,   305,   306,   307,     0,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,     0,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,     0,   334,   335,     0,
     337,   338,   339,   340,   341,   342,   343,   519,   345,   346,
     347,   348,   349,     0,   350,   351,   352,   353,   354,     0,
     355,   356,   357,   358,   359,     0,   361,   362,   363,   364,
       0,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,     0,   378,   379,     0,   380,     0,
     382,   383,   384,   385,   386,     0,   521,   388,     0,     0,
     389,   390,   391,   392,   393,     0,   394,   395,   396,   397,
     398,   399,   400,     0,     0,   401,   402,   403,   404,   405,
       0,     0,   406,   407,   408,   409,   410,   411,   412,     0,
     413,     0,   415,   416,   417,   418,     0,     0,   419,     0,
       0,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   461,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    84,    85,    86,    87,
      88,    89,    90,    91,     0,    92,    93,    94,     0,     0,
       0,     0,     0,     0,     0,    95,    96,     0,    97,    98,
      99,     0,   101,   102,   103,   104,   105,     0,   107,   108,
       0,   109,   110,   111,   112,   113,   114,     0,     0,   115,
     116,   117,   118,   119,     0,   120,   121,   122,   123,   124,
       0,     0,     0,   126,   127,   128,   129,   130,     0,   132,
     133,   134,     0,   135,   136,   137,   138,   139,   140,     0,
       0,   142,   143,   144,     0,     0,     0,     0,     0,     0,
       0,   146,   147,   148,   149,   150,   151,   152,   153,   154,
       0,   155,     0,   156,   157,   158,   159,   160,   161,     0,
     162,   163,   164,   165,   166,     0,     0,   167,   168,   169,
     170,   171,     0,   172,   173,   174,     0,   175,   176,   177,
       0,   178,   179,   180,   181,   182,   183,   184,   185,   186,
       0,   187,     0,   188,   189,   190,   191,     0,   192,     0,
     193,     0,     0,     0,   196,   197,   198,   199,     0,   200,
       0,   201,   202,     0,   203,   204,   205,   206,   926,     0,
     209,   210,   211,   212,     0,   213,   214,   215,   216,   217,
     218,     0,   219,     0,   221,   222,   223,   224,   225,   226,
     227,     0,   228,     0,   229,     0,     0,   232,     0,   234,
     235,   236,   237,   238,     0,     0,   239,     0,   241,     0,
       0,   243,   244,   245,     0,     0,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,     0,   264,   265,   266,   267,   268,     0,
     269,   270,     0,   272,     0,   273,   274,   275,   276,   277,
     278,     0,   279,   280,     0,     0,   281,   282,   283,     0,
       0,   284,   285,     0,   287,     0,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,     0,   299,   300,   301,
     302,   303,   304,   305,   306,   307,     0,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,     0,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,     0,   334,   335,     0,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,     0,   350,   351,   352,   353,   354,     0,   355,   356,
     357,   358,   359,     0,   361,   362,   363,   364,     0,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,     0,   378,   379,     0,   380,     0,   382,   383,
     384,   385,   386,     0,   387,   388,     0,     0,   389,   390,
     391,   392,   393,     0,   394,   395,   396,   397,   398,   399,
     400,     0,     0,   401,   402,   403,   404,   405,     0,     0,
     406,   407,   408,   409,   410,   411,   412,     0,   413,     0,
     415,   416,   417,   418,     0,     0,   419,     0,     0,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   461,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    84,    85,    86,    87,    88,    89,
      90,    91,     0,    92,    93,    94,     0,     0,     0,     0,
       0,     0,     0,    95,    96,     0,    97,    98,    99,     0,
     101,   102,   103,   104,   105,     0,   107,   108,     0,   109,
     110,   111,   112,   113,   114,     0,     0,   115,   116,   117,
     118,   119,     0,   120,   121,   122,   123,   124,     0,     0,
       0,   126,   127,   128,   129,   130,     0,   132,   133,   134,
       0,   135,   136,   137,   138,   139,   140,     0,     0,   142,
     143,   144,     0,     0,     0,     0,     0,     0,     0,   146,
     147,   148,   149,   150,   151,   152,   153,   154,     0,   155,
       0,   156,   157,   158,   159,   160,   161,     0,   162,   163,
     164,   165,   166,     0,     0,   167,   168,   169,   170,   171,
       0,   172,   173,   174,     0,   175,   176,   177,     0,   178,
     179,   180,   181,   182,   183,   184,   185,   186,     0,   187,
       0,   188,   189,   190,   191,     0,   192,     0,   193,     0,
       0,     0,   196,   197,   198,   199,     0,   200,     0,   201,
     202,     0,   203,   204,   205,   206,   928,     0,   209,   210,
     211,   212,     0,   213,   214,   215,   216,   217,   218,     0,
     219,     0,   221,   222,   223,   224,   225,   226,   227,     0,
     228,     0,   229,     0,     0,   232,     0,   234,   235,   236,
     237,   238,     0,     0,   239,     0,   241,     0,     0,   243,
     244,   245,     0,     0,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,     0,   264,   265,   266,   267,   268,     0,   269,   270,
       0,   272,     0,   273,   274,   275,   276,   277,   278,     0,
     279,   280,     0,     0,   281,   282,   283,     0,     0,   284,
     285,     0,   287,     0,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,     0,   299,   300,   301,   302,   303,
     304,   305,   306,   307,     0,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,     0,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,     0,   334,   335,     0,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,     0,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
     359,     0,   361,   362,   363,   364,     0,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
       0,   378,   379,     0,   380,     0,   382,   383,   384,   385,
     386,     0,   387,   388,     0,     0,   389,   390,   391,   392,
     393,     0,   394,   395,   396,   397,   398,   399,   400,     0,
       0,   401,   402,   403,   404,   405,     0,     0,   406,   407,
     408,   409,   410,   411,   412,     0,   413,     0,   415,   416,
     417,   418,     0,     0,   419,     0,     0,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   461,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    84,    85,    86,    87,    88,    89,    90,    91,
       0,    92,    93,    94,     0,     0,     0,     0,     0,  1138,
       0,    95,    96,     0,    97,    98,    99,     0,   101,   102,
     103,   104,   105,     0,   107,   108,     0,   109,   110,   111,
     112,   113,   114,     0,     0,   115,   116,   117,   118,   119,
       0,   120,   121,   122,   123,   124,     0,     0,     0,   126,
     127,   128,   129,   130,     0,   132,   133,   134,     0,   135,
     136,   137,   138,   139,   140,     0,     0,   142,   143,   144,
       0,     0,     0,     0,     0,     0,     0,   146,   147,   148,
     149,   150,   151,   152,   153,   154,     0,   155,     0,   156,
     157,   158,   159,   160,   161,     0,   162,   163,   164,   165,
     166,     0,     0,   167,   168,   169,   170,   171,     0,   172,
     173,   174,     0,   175,   176,   177,     0,   178,   179,   180,
     181,   182,   183,   184,   185,   186,     0,   187,     0,   188,
     189,   190,   191,     0,   192,     0,   193,     0,     0,     0,
     196,   197,   198,   199,     0,   200,     0,   201,   202,     0,
     203,   204,   205,   206,   207,     0,   209,   210,   211,   212,
       0,   213,   214,   215,   216,   217,   218,     0,   219,     0,
     221,   222,   223,   224,   225,   226,   227,     0,   228,     0,
     229,     0,     0,   232,     0,   234,   235,   236,   237,   238,
       0,     0,   239,     0,   241,     0,     0,   243,   244,   245,
       0,     0,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,     0,
     264,   265,   266,   267,   268,     0,   269,   270,     0,   272,
       0,   273,   274,   275,   276,   277,   278,     0,   279,   280,
       0,     0,   281,   282,   283,     0,     0,   284,   285,     0,
     287,     0,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,     0,   299,   300,   301,   302,   303,   304,   305,
     306,   307,     0,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,     0,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
       0,   334,   335,     0,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,     0,   350,   351,
     352,   353,   354,     0,     0,   356,   357,   358,   359,     0,
     361,   362,   363,   364,     0,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,     0,   378,
     379,     0,   380,     0,   382,   383,   384,   385,   386,     0,
     387,   388,     0,     0,   389,   390,   391,   392,   393,     0,
     394,   395,   396,   397,   398,   399,   400,     0,     0,   401,
     402,   403,   404,   405,     0,     0,   406,   407,   408,   409,
     410,   411,   412,     0,   413,     0,   415,   416,   417,   418,
       0,     0,   419,     0,     0,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   461,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      84,    85,    86,    87,    88,    89,    90,    91,     0,    92,
      93,    94,     0,     0,     0,     0,     0,     0,     0,    95,
      96,     0,    97,    98,    99,     0,   101,   102,   103,   104,
     105,     0,   107,   108,     0,   109,   110,   111,   112,   113,
     114,     0,     0,   115,   116,   117,   118,   119,     0,   120,
     121,   122,   123,   124,     0,     0,     0,   126,   127,   128,
     129,   130,     0,   132,   133,   134,     0,   135,   136,   137,
     138,   139,   140,     0,     0,   142,   143,   144,     0,     0,
       0,     0,     0,     0,     0,   146,   147,   148,   149,   150,
     151,   152,   153,   154,     0,   155,     0,   156,   157,   158,
     159,   160,   161,     0,   162,   163,   164,   165,   166,     0,
       0,   167,   168,   169,   170,   171,     0,   172,   173,   174,
       0,   175,   176,   177,     0,   178,   179,   180,   181,   182,
     183,   184,   185,   186,     0,   187,     0,   188,   189,   190,
     191,     0,   192,     0,   193,     0,     0,     0,   196,   197,
     198,   199,     0,   200,     0,   201,   202,     0,   203,   204,
     205,   206,  1268,     0,   209,   210,   211,   212,     0,   213,
     214,   215,   216,   217,   218,     0,   219,     0,   221,   222,
     223,   224,   225,   226,   227,     0,   228,     0,   229,     0,
       0,   232,     0,   234,   235,   236,   237,   238,     0,     0,
     239,     0,   241,     0,     0,   243,   244,   245,     0,     0,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,     0,   264,   265,
     266,   267,   268,     0,   269,   270,     0,   272,     0,   273,
     274,   275,   276,   277,   278,     0,   279,   280,     0,     0,
     281,   282,   283,     0,     0,   284,   285,     0,   287,     0,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
       0,   299,   300,   301,   302,   303,   304,   305,   306,   307,
       0,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,     0,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,     0,   334,
     335,     0,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,     0,   350,   351,   352,   353,
     354,     0,   355,   356,   357,   358,   359,     0,   361,   362,
     363,   364,     0,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,     0,   378,   379,     0,
     380,     0,   382,   383,   384,   385,   386,     0,   387,   388,
       0,     0,   389,   390,   391,   392,   393,     0,   394,   395,
     396,   397,   398,   399,   400,     0,     0,   401,   402,   403,
     404,   405,     0,     0,   406,   407,   408,   409,   410,   411,
     412,     0,   413,     0,   415,   416,   417,   418,     0,     0,
     419,     0,     0,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   461,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    84,    85,
      86,    87,    88,    89,    90,    91,     0,    92,    93,    94,
       0,     0,     0,     0,     0,     0,     0,    95,    96,     0,
      97,    98,    99,     0,   101,   102,   103,   104,   105,     0,
     107,   108,     0,   109,   110,   111,   112,   113,   114,     0,
       0,   115,   116,   117,   118,   119,     0,   120,   121,   122,
     123,   124,     0,     0,     0,   126,   127,   128,   129,   130,
       0,   132,   133,   134,     0,   135,   136,   137,   138,   139,
     140,     0,     0,   142,   143,   144,     0,     0,     0,     0,
       0,     0,     0,   146,   147,   148,   149,   150,   151,   152,
     153,   154,     0,   155,     0,   156,   157,   158,   159,   160,
     161,     0,   162,   163,   164,   165,   166,     0,     0,   167,
     168,   169,   170,   171,     0,   172,   173,   174,     0,   175,
     176,   177,     0,   178,   179,   180,   181,   182,   183,   184,
     185,   186,     0,   187,     0,   188,   189,   190,   191,     0,
     192,     0,   193,     0,     0,     0,   196,   197,   198,   199,
       0,   200,     0,   201,   202,     0,   203,   204,   205,   206,
    1281,     0,   209,   210,   211,   212,     0,   213,   214,   215,
     216,   217,   218,     0,   219,     0,   221,   222,   223,   224,
     225,   226,   227,     0,   228,     0,   229,     0,     0,   232,
       0,   234,   235,   236,   237,   238,     0,     0,   239,     0,
     241,     0,     0,   243,   244,   245,     0,     0,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,     0,   264,   265,   266,   267,
     268,     0,   269,   270,     0,   272,     0,   273,   274,   275,
     276,   277,   278,     0,   279,   280,     0,     0,   281,   282,
     283,     0,     0,   284,   285,     0,   287,     0,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,     0,   299,
     300,   301,   302,   303,   304,   305,   306,   307,     0,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,     0,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,     0,   334,   335,     0,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,     0,   350,   351,   352,   353,   354,     0,
     355,   356,   357,   358,   359,     0,   361,   362,   363,   364,
       0,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,     0,   378,   379,     0,   380,     0,
     382,   383,   384,   385,   386,     0,   387,   388,     0,     0,
     389,   390,   391,   392,   393,     0,   394,   395,   396,   397,
     398,   399,   400,     0,     0,   401,   402,   403,   404,   405,
       0,     0,   406,   407,   408,   409,   410,   411,   412,     0,
     413,     0,   415,   416,   417,   418,     0,     0,   419,     0,
       0,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   461,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    84,    85,    86,    87,
      88,    89,    90,    91,     0,    92,    93,    94,     0,     0,
       0,     0,     0,     0,     0,    95,    96,     0,    97,    98,
      99,     0,   101,   102,   103,   104,   105,     0,   107,   108,
       0,   109,   110,   111,   112,   113,   114,     0,     0,   115,
     116,   117,   118,   119,     0,   120,   121,   122,   123,   124,
       0,     0,     0,   126,   127,   128,   129,   130,     0,   132,
     133,   134,     0,   135,   136,   137,   138,   139,   140,     0,
       0,   142,   143,   144,     0,     0,     0,     0,     0,     0,
       0,   146,   147,   148,   149,   150,   151,   152,   153,   154,
       0,   155,     0,   156,   157,   158,   159,   160,   161,     0,
     162,   163,   164,   165,   166,     0,     0,   167,   168,   169,
     170,   171,     0,   172,   173,   174,     0,   175,   176,   177,
       0,   178,   179,   180,   181,   182,   183,   184,   185,   186,
       0,   187,     0,   188,   189,   190,   191,     0,   192,     0,
     193,     0,     0,     0,   196,   197,   198,   199,     0,   200,
       0,   201,   202,     0,   203,   204,   205,   206,  1511,     0,
     209,   210,   211,   212,     0,   213,   214,   215,   216,   217,
     218,     0,   219,     0,   221,   222,   223,   224,   225,   226,
     227,     0,   228,     0,   229,     0,     0,   232,     0,   234,
     235,   236,   237,   238,     0,     0,   239,     0,   241,     0,
       0,   243,   244,   245,     0,     0,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,     0,   264,   265,   266,   267,   268,     0,
     269,   270,     0,   272,     0,   273,   274,   275,   276,   277,
     278,     0,   279,   280,     0,     0,   281,   282,   283,     0,
       0,   284,   285,     0,   287,     0,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,     0,   299,   300,   301,
     302,   303,   304,   305,   306,   307,     0,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,     0,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,     0,   334,   335,     0,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,     0,   350,   351,   352,   353,   354,     0,   355,   356,
     357,   358,   359,     0,   361,   362,   363,   364,     0,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,     0,   378,   379,     0,   380,     0,   382,   383,
     384,   385,   386,     0,   387,   388,     0,     0,   389,   390,
     391,   392,   393,     0,   394,   395,   396,   397,   398,   399,
     400,     0,     0,   401,   402,   403,   404,   405,     0,     0,
     406,   407,   408,   409,   410,   411,   412,     0,   413,     0,
     415,   416,   417,   418,     0,     0,   419,     0,     0,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   461,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    84,    85,    86,    87,    88,    89,
      90,    91,     0,    92,    93,    94,     0,     0,     0,     0,
       0,     0,     0,    95,    96,     0,    97,    98,    99,     0,
     101,   102,   103,   104,   105,     0,   107,   108,     0,   109,
     110,   111,   112,   113,   114,     0,     0,   115,   116,   117,
     118,   119,     0,   120,   121,   122,   123,   124,     0,     0,
       0,   126,   127,   128,   129,   130,     0,   132,   133,   134,
       0,   135,   136,   137,   138,   139,   140,     0,     0,   142,
     143,   144,     0,     0,     0,     0,     0,     0,     0,   146,
     147,   148,   149,   150,   151,   152,   153,   154,     0,   155,
       0,   156,   157,   158,   159,   160,   161,     0,   162,   163,
     164,   165,   166,     0,     0,   167,   168,   169,   170,   171,
       0,   172,   173,   174,     0,   175,   176,   177,     0,   178,
     179,   180,   181,   182,   183,   184,   185,   186,     0,   187,
       0,   188,   189,   190,   191,     0,   192,     0,   193,     0,
       0,     0,   196,   197,   198,   199,     0,   200,     0,   201,
     202,     0,   203,   204,   205,   206,  1523,     0,   209,   210,
     211,   212,     0,   213,   214,   215,   216,   217,   218,     0,
     219,     0,   221,   222,   223,   224,   225,   226,   227,     0,
     228,     0,   229,     0,     0,   232,     0,   234,   235,   236,
     237,   238,     0,     0,   239,     0,   241,     0,     0,   243,
     244,   245,     0,     0,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,     0,   264,   265,   266,   267,   268,     0,   269,   270,
       0,   272,     0,   273,   274,   275,   276,   277,   278,     0,
     279,   280,     0,     0,   281,   282,   283,     0,     0,   284,
     285,     0,   287,     0,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,     0,   299,   300,   301,   302,   303,
     304,   305,   306,   307,     0,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,     0,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,     0,   334,   335,     0,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,     0,
     350,   351,   352,   353,   354,     0,   355,   356,   357,   358,
     359,     0,   361,   362,   363,   364,     0,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
       0,   378,   379,     0,   380,     0,   382,   383,   384,   385,
     386,     0,   387,   388,     0,     0,   389,   390,   391,   392,
     393,     0,   394,   395,   396,   397,   398,   399,   400,     0,
       0,   401,   402,   403,   404,   405,     0,     0,   406,   407,
     408,   409,   410,   411,   412,     0,   413,     0,   415,   416,
     417,   418,     0,     0,   419,     0,     0,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   461,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    84,    85,    86,    87,    88,    89,    90,    91,
       0,    92,    93,    94,     0,     0,     0,     0,     0,     0,
       0,    95,    96,     0,    97,    98,    99,     0,   101,   102,
     103,   104,   105,     0,   107,   108,     0,   109,   110,   111,
     112,   113,   114,     0,     0,   115,   116,   117,   118,   119,
       0,   120,   121,   122,   123,   124,     0,     0,     0,   126,
     127,   128,   129,   130,     0,   132,   133,   134,     0,   135,
     136,   137,   138,   139,   140,     0,     0,   142,   143,   144,
       0,     0,     0,     0,     0,     0,     0,   146,   147,   148,
     149,   150,   151,   152,   153,   154,     0,   155,     0,   156,
     157,   158,   159,   160,   161,     0,   162,   163,   164,   165,
     166,     0,     0,   167,   168,   169,   170,   171,     0,   172,
     173,   174,     0,   175,   176,   177,     0,   178,   179,   180,
     181,   182,   183,   184,   185,   186,     0,   187,     0,   188,
     189,   190,   191,     0,   192,     0,   193,     0,     0,     0,
     196,   197,   198,   199,     0,   200,     0,   201,   202,     0,
     203,   204,   205,   206,  1525,     0,   209,   210,   211,   212,
       0,   213,   214,   215,   216,   217,   218,     0,   219,     0,
     221,   222,   223,   224,   225,   226,   227,     0,   228,     0,
     229,     0,     0,   232,     0,   234,   235,   236,   237,   238,
       0,     0,   239,     0,   241,     0,     0,   243,   244,   245,
       0,     0,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,     0,
     264,   265,   266,   267,   268,     0,   269,   270,     0,   272,
       0,   273,   274,   275,   276,   277,   278,     0,   279,   280,
       0,     0,   281,   282,   283,     0,     0,   284,   285,     0,
     287,     0,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,     0,   299,   300,   301,   302,   303,   304,   305,
     306,   307,     0,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,     0,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
       0,   334,   335,     0,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,     0,   350,   351,
     352,   353,   354,     0,   355,   356,   357,   358,   359,     0,
     361,   362,   363,   364,     0,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,     0,   378,
     379,     0,   380,     0,   382,   383,   384,   385,   386,     0,
     387,   388,     0,     0,   389,   390,   391,   392,   393,     0,
     394,   395,   396,   397,   398,   399,   400,     0,     0,   401,
     402,   403,   404,   405,     0,     0,   406,   407,   408,   409,
     410,   411,   412,     0,   413,     0,   415,   416,   417,   418,
       0,     0,   419,     0,     0,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   461,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      84,    85,    86,    87,    88,    89,    90,    91,     0,    92,
      93,    94,     0,     0,     0,     0,     0,     0,     0,    95,
      96,     0,    97,    98,    99,     0,   101,   102,   103,   104,
     105,     0,   107,   108,     0,   109,   110,   111,   112,   113,
     114,     0,     0,   115,   116,   117,   118,   119,     0,   120,
     121,   122,   123,   124,     0,     0,     0,   126,   127,   128,
     129,   130,     0,   132,   133,   134,     0,   135,   136,   137,
     138,   139,   140,     0,     0,   142,   143,   144,     0,     0,
       0,     0,     0,     0,     0,   146,   147,   148,   149,   150,
     151,   152,   153,   154,     0,   155,     0,   156,   157,   158,
     159,   160,   161,     0,   162,   163,   164,   165,   166,     0,
       0,   167,   168,   169,   170,   171,     0,   172,   173,   174,
       0,   175,   176,   177,     0,   178,   179,   180,   181,   182,
     183,   184,   185,   186,     0,   187,     0,   188,   189,   190,
     191,     0,   192,     0,   193,     0,     0,     0,   196,   197,
     198,   199,     0,   200,     0,   201,   202,     0,   203,   204,
     205,   206,  2076,     0,   209,   210,   211,   212,     0,   213,
     214,   215,   216,   217,   218,     0,   219,     0,   221,   222,
     223,   224,   225,   226,   227,     0,   228,     0,   229,     0,
       0,   232,     0,   234,   235,   236,   237,   238,     0,     0,
     239,     0,   241,     0,     0,   243,   244,   245,     0,     0,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,     0,   264,   265,
     266,   267,   268,     0,   269,   270,     0,   272,     0,   273,
     274,   275,   276,   277,   278,     0,   279,   280,     0,     0,
     281,   282,   283,     0,     0,   284,   285,     0,   287,     0,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
       0,   299,   300,   301,   302,   303,   304,   305,   306,   307,
       0,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,     0,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,     0,   334,
     335,     0,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,     0,   350,   351,   352,   353,
     354,     0,   355,   356,   357,   358,   359,     0,   361,   362,
     363,   364,     0,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,     0,   378,   379,     0,
     380,     0,   382,   383,   384,   385,   386,     0,   387,   388,
       0,     0,   389,   390,   391,   392,   393,     0,   394,   395,
     396,   397,   398,   399,   400,     0,     0,   401,   402,   403,
     404,   405,     0,     0,   406,   407,   408,   409,   410,   411,
     412,     0,   413,     0,   415,   416,   417,   418,     0,     0,
     419,     0,     0,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   461,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    84,    85,
      86,    87,    88,    89,    90,    91,     0,    92,    93,    94,
       0,     0,     0,     0,     0,     0,     0,    95,    96,     0,
      97,    98,    99,     0,   101,   102,   103,   104,   105,     0,
     107,   108,     0,   109,   110,   111,   112,   113,   114,     0,
       0,   115,   116,   117,   118,   119,     0,   120,   121,   122,
     123,   124,     0,     0,     0,   126,   127,   128,   129,   130,
       0,   132,   133,   134,     0,   135,   136,   137,   138,   139,
     140,     0,     0,   142,   143,   144,     0,     0,     0,     0,
       0,     0,     0,   146,   147,   148,   149,   150,   151,   152,
     153,   154,     0,   155,     0,   156,   157,   158,   159,   160,
     161,     0,   162,   163,   164,   165,   166,     0,     0,   167,
     168,   169,   170,   171,     0,   172,   173,   174,     0,   175,
     176,   177,     0,   178,   179,   180,   181,   182,   183,   184,
     185,   186,     0,   187,     0,   188,   189,   190,   191,     0,
     192,     0,   193,     0,     0,     0,   196,   197,   198,   199,
       0,   200,     0,   201,   202,     0,   203,   204,   205,   206,
     207,     0,   209,   210,   211,   212,     0,   213,   214,   215,
     216,   217,   218,     0,   219,     0,   221,   222,   223,   224,
     225,   226,   227,     0,   228,     0,   229,     0,     0,   232,
       0,   234,   235,   236,   237,   238,     0,     0,   239,     0,
     241,     0,     0,   243,   244,   245,     0,     0,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,     0,   264,   265,   266,   267,
     268,     0,   269,   270,     0,   272,     0,   273,   274,   275,
     276,   277,   278,     0,   279,   280,     0,     0,   281,   282,
     283,     0,     0,   284,   285,     0,   287,     0,   289,   290,
     291,   292,   293,   294,   295,     0,   297,   298,     0,   299,
     300,   301,   302,   303,   304,   305,   306,   307,     0,   308,
     309,   310,   311,   312,   313,   314,     0,   316,   317,   318,
     319,   320,   321,     0,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,     0,   334,   335,     0,
     337,   338,   339,   340,     0,   342,   343,   344,   345,   346,
     347,   348,   349,     0,   350,   351,   352,   353,   354,     0,
     355,   356,   357,   358,   359,     0,   361,   362,   363,   364,
       0,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,     0,   378,   379,     0,   380,     0,
     382,   383,   384,   385,   386,     0,   387,   388,     0,     0,
     389,   390,   391,   392,   393,     0,   394,   395,   396,   397,
     398,   399,   400,     0,     0,   401,   402,   403,   404,   405,
       0,     0,   406,   407,   408,   409,   410,   411,   412,     0,
     413,     0,   415,   416,   417,   418,     0,     0,   419,     0,
       0,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   975,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    84,    85,    86,    87,
      88,    89,    90,    91,     0,    92,    93,    94,     0,     0,
       0,     0,     0,     0,     0,    95,    96,     0,    97,    98,
      99,   100,   101,   102,   103,     0,   976,   106,   977,   978,
       0,   109,   110,   111,   112,   113,   114,     0,     0,   115,
     116,   979,   980,   119,     0,   120,   121,   122,   123,     0,
       0,   125,     0,   126,   127,   128,   129,   130,   131,   132,
     133,   134,     0,   135,   136,   137,   138,   139,   140,     0,
     141,   142,   143,   144,     0,     0,     0,   145,     0,     0,
       0,   146,   147,   148,   149,   150,   151,   981,   982,   154,
       0,   155,     0,   156,   157,   158,   159,   160,   161,     0,
     162,   163,   164,   165,   166,     0,     0,   167,   168,   660,
     170,   171,     0,   172,   173,   174,     0,   175,   176,   177,
       0,   178,   179,   180,   181,     0,   183,   184,   185,     0,
       0,   187,     0,   188,   189,   983,   191,     0,   192,     0,
     193,   194,     0,   195,   196,   197,   198,   199,     0,   200,
       0,     0,   202,     0,   203,   204,   205,   206,   207,   208,
     209,   210,   211,   212,     0,   213,   214,   215,   216,   217,
     218,     0,   219,   220,     0,   222,   223,   224,   225,   984,
     985,     0,   986,     0,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,     0,     0,   239,   240,   241,   242,
       0,   243,   244,   245,     0,     0,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   987,   263,   988,   265,   266,   267,     0,     0,
     269,   270,   271,   272,     0,     0,   274,   989,   276,   277,
     278,     0,   279,   280,     0,     0,   281,   282,   283,     0,
       0,   284,     0,   286,   287,   288,     0,   290,   291,   292,
     293,   294,   295,   296,   297,   298,     0,   299,   300,     0,
     302,   303,     0,   305,   306,   307,     0,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   990,   318,   319,   320,
     321,     0,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,     0,   334,   335,   336,   337,   338,
     339,     0,   341,   342,   343,   344,   345,   346,   347,   348,
     349,     0,   350,   351,   352,   353,   354,     0,   355,   991,
     357,   358,   359,   360,   361,   362,   992,   364,     0,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,     0,     0,   378,   379,     0,   380,   381,   382,   383,
     384,   385,   386,     0,   993,   994,     0,     0,   389,   390,
       0,   392,     0,     0,   394,   395,   396,   397,   398,   399,
     400,     0,     0,   401,   402,   403,   404,   405,     0,     0,
     406,   407,   408,   409,   410,     0,   995,     0,   413,   414,
     415,   416,   417,   418,     0,     0,   419,     0,     0,   420,
     421,   422,   423,   424,   425,   975,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   437,   438,   439,     0,
      84,    85,    86,    87,    88,    89,    90,    91,     0,    92,
      93,    94,     0,     0,     0,     0,     0,     0,     0,    95,
      96,     0,    97,    98,    99,   100,   101,   102,   103,     0,
     976,   106,   977,   978,     0,   109,   110,   111,   112,   113,
     114,     0,     0,   115,   116,   979,   980,   119,     0,   120,
     121,   122,   123,     0,     0,   125,     0,   126,   127,   128,
     129,   130,   131,   132,   133,   134,     0,   135,   136,   137,
     138,   139,   140,     0,   141,   142,   143,   144,     0,     0,
       0,   145,     0,     0,     0,   146,   147,   148,   149,   150,
     151,   981,   982,   154,     0,   155,     0,   156,   157,   158,
     159,   160,   161,     0,   162,   163,   164,   165,   166,     0,
       0,   167,   168,   660,   170,   171,     0,   172,   173,   174,
       0,   175,   176,   177,     0,   178,   179,   180,   181,     0,
     183,   184,   185,     0,     0,   187,     0,   188,   189,   983,
     191,     0,   192,     0,   193,   194,     0,   195,   196,   197,
     198,   199,     0,   200,     0,     0,   202,     0,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,     0,   213,
     214,   215,   216,   217,   218,     0,   219,   220,     0,   222,
     223,   224,   225,   984,   985,     0,   986,     0,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,     0,     0,
     239,   240,   241,   242,     0,   243,   244,   245,     0,     0,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   987,   263,   988,   265,
     266,   267,     0,     0,   269,   270,   271,   272,     0,     0,
     274,   989,   276,   277,   278,     0,   279,   280,     0,     0,
     281,   282,   283,     0,     0,   284,     0,   286,   287,   288,
       0,   290,   291,   292,   293,   294,   295,   296,   297,   298,
       0,   299,   300,     0,   302,   303,     0,   305,   306,   307,
       0,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     990,   318,   319,   320,   321,     0,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,     0,   334,
     335,   336,   337,   338,   339,     0,   341,   342,   343,   344,
     345,   346,   347,   348,   349,     0,   350,   351,   352,   353,
     354,     0,   355,     0,   357,   358,   359,   360,   361,   362,
     992,   364,     0,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,     0,     0,   378,   379,     0,
     380,   381,   382,   383,   384,   385,   386,     0,   993,   994,
       0,     0,   389,   390,     0,   392,     0,     0,   394,   395,
     396,   397,   398,   399,   400,     0,     0,   401,   402,   403,
     404,   405,     0,     0,   406,   407,   408,   409,   410,     0,
     995,     0,   413,   414,   415,   416,   417,   418,     0,     0,
     419,     0,     0,   420,   421,   422,   423,   424,   425,     0,
     784,     0,     0,     0,     0,     0,   785,     0,     0,     0,
     437,   438,   439,   797,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   798,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   799,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     786,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   800,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   801,     0,     0,   802,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   803,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   787,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   804,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1542,     0,     0,
       0,   789,   806,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   807,     0,     0,     0,     0,     0,  1543,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   809,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   791
};

static const yytype_int16 yycheck[] =
{
       6,   622,   567,   487,    31,   582,     6,   811,   517,   576,
     608,   554,   622,   797,   657,   658,   486,     6,    52,    17,
     809,     0,     0,   784,   685,   529,     0,  1009,   574,  1521,
    1043,  1067,   675,     0,   533,    16,  1452,   786,    16,   789,
    1774,   696,   952,  1527,   491,  1529,  1822,   924,   780,   924,
    1706,   924,  1412,   924,   823,    26,     0,    54,    30,  1854,
    1846,  1472,     9,  1861,     0,   814,    54,   628,     0,   769,
     492,  1733,   493,    49,    11,     5,  1518,  2080,  2083,     5,
      57,   493,   646,   647,     5,  1739,    72,    13,    14,   567,
       5,   569,    57,   571,     0,  2086,     5,     5,  1449,    11,
     944,     5,     5,  2151,     0,    13,    14,   671,     5,    80,
      16,     5,  1463,   612,     9,     5,    13,    14,     5,    39,
     730,     5,   112,  2131,  1113,    31,  1161,  1159,    40,   164,
       5,  1070,    74,     5,   164,     3,     4,     5,   498,     4,
     587,     9,    84,   165,     9,  1587,    26,  1011,    54,   105,
    1763,   134,    66,    39,     9,   117,   205,  2165,  1738,    91,
      72,   231,   574,    92,   119,    57,    26,     3,   107,     5,
     737,  2248,  1675,    33,   189,   264,     4,   551,   266,   333,
    2297,     9,   272,    26,   551,  2034,   272,   231,   798,   493,
      33,   801,   802,   697,   117,    91,   695,    77,   114,     3,
     117,   164,   112,    81,   626,    85,    58,   991,    74,   132,
     622,   165,   105,  2404,    66,   627,   127,   158,    84,   311,
     724,    11,   255,   114,   112,    57,    30,    31,   178,    26,
      36,  2279,  1793,   113,  2174,  2217,   165,   199,   252,   178,
    2248,   195,    26,  2234,   112,    26,   124,   161,    11,   154,
      40,  1190,    33,    11,   376,  2195,   210,  2513,   115,   390,
     821,   822,   237,   427,    20,   219,   195,   751,   144,   179,
     574,   107,    29,   156,   456,    63,    64,  1933,   306,   156,
     779,   210,    72,    11,   827,   467,  1646,   237,   410,   279,
     219,   468,  2078,   337,   471,   411,    53,   115,   237,   179,
    1792,   240,   433,  1957,  1966,  1866,   334,   471,  1970,    72,
     190,   187,    40,   467,    70,   121,   245,   222,   622,  2575,
     732,   733,   337,   627,   357,   182,  2476,     5,  2478,   344,
     127,   423,   215,   994,   266,  2526,   204,   407,   981,   982,
    2189,   251,   178,   127,    72,  1045,   989,  1789,   325,  1791,
     261,   467,   293,   343,   931,  2472,   249,   225,   388,   163,
     325,   165,   377,   407,   182,   256,   341,  1306,   256,  2377,
     266,   248,   467,   225,   297,   329,  1956,  2317,   467,   467,
    1731,   471,  1733,    11,   298,   471,   746,   377,    11,  2002,
    1893,   341,    15,  2401,   326,   409,    19,   467,   944,  1412,
     329,   237,   341,   777,   240,   283,    29,    30,   423,  2559,
     777,   432,    40,  2461,     0,   979,   980,   249,  1454,    11,
    1181,   377,   471,   467,   988,   388,   456,   417,   732,   733,
     326,  1275,   453,   325,  2511,   471,   471,  1444,  1445,   469,
     430,  2217,  2447,   426,    72,   467,   388,   409,  1015,  1149,
    2106,  1486,     8,  1485,   374,    78,   411,  2448,  1262,    15,
      16,    17,   946,   453,   367,   368,   493,  1480,  1237,   939,
     449,   449,   942,  1037,  1038,   449,  2138,   467,  2132,   465,
     950,  2143,   449,   469,  2146,  1474,   366,   493,   374,   369,
     404,   467,   409,   325,   471,  1062,  1063,   413,   430,   420,
     360,  2483,  2505,  2511,   382,   341,   471,   467,   165,   448,
     516,   517,   493,   449,   492,  1014,   321,   360,   350,  2011,
     554,   519,   388,  1292,  1023,   472,   463,   533,  1027,  1075,
     127,   953,   944,   954,   430,   465,   468,   467,   470,   469,
    2024,   467,   954,   449,   541,  1112,   467,  1046,  1047,  1110,
     531,   463,   467,   541,  2352,  1059,  2351,   432,   467,   467,
     432,  2347,   534,   467,   543,   543,   572,   573,   574,   543,
     467,   466,   468,   467,   470,   546,   543,   467,   453,   360,
     467,   453,  2348,   467,   333,   334,   492,   493,    22,  2000,
     458,   459,   467,   458,   459,   467,   470,  2253,  1462,   543,
    1210,   142,   430,   458,   459,    47,   612,   543,  1078,   421,
    1220,  2273,   448,  1223,   154,  1966,   622,   421,  1648,  1970,
     411,   627,   628,   629,   622,   453,   381,   284,   383,   627,
     458,   459,  2074,  1646,   251,   541,   430,   543,   644,   256,
     944,  1206,   311,   231,  2004,    74,  1676,   456,   626,   465,
     954,   231,  1198,   469,   251,    84,  1356,  1357,  1597,   453,
     469,  1361,   203,  1075,   261,  1308,   672,  2453,   695,   236,
     460,   461,   462,   463,  1272,   344,   467,   104,  1276,  1589,
    2446,  1279,   222,   189,  2176,   691,   692,   693,   305,   695,
    1233,  1234,  1235,   324,  1633,   211,  1396,  1397,   132,   356,
     698,  1179,   460,   461,   462,   463,     4,  2483,   377,   715,
     708,     9,   268,   169,  1653,  1722,  1723,  1724,  1725,   350,
     626,   146,   720,   263,  1456,  1380,   732,   733,  1206,  1275,
      74,   272,   730,   249,   732,   733,  1619,  1620,  1621,   181,
      84,  1545,    22,  1682,   186,   231,  1216,  1225,    28,   337,
     468,  1221,  1230,   471,   423,   661,    66,   337,   764,   381,
     393,   383,   768,   769,     8,   762,   763,    11,   765,   225,
     423,  1075,   311,   779,   762,   763,   340,   765,     4,   221,
    2131,  2547,   114,     9,  1196,   756,  1198,  2138,  2574,   695,
     343,   797,  2143,  2527,  2528,  2146,    40,   467,  1373,  1568,
    1375,  1376,   112,    47,  1553,   344,  1253,     4,   235,  1822,
    2302,   238,     9,  1312,  2165,   821,   822,   823,   467,   407,
     107,  1476,   469,  2307,   377,   231,   231,   407,    72,   450,
     458,   459,   460,   461,   462,   463,   270,   353,   377,   209,
     463,  2337,   813,  2577,   266,  2341,    91,  2343,  1598,   333,
     334,   337,   132,  1603,    13,    14,   762,   763,   168,   765,
     127,   193,   403,  1275,   417,   488,   458,   459,   460,   461,
     462,   463,   450,    30,    31,  1374,   460,   468,  1290,   467,
     471,    13,    14,  1822,   423,   152,   163,   467,  1924,   323,
     324,   178,  1196,   409,  1198,   471,   140,  2248,   454,   455,
     456,  1400,   458,   459,   460,   461,   462,   463,  1451,   432,
     467,   534,   432,   355,   467,   164,   350,   249,   343,   251,
       5,   407,  2273,     8,   468,   381,  1524,   383,  1526,    14,
     453,   337,   337,   453,    91,   468,    21,   181,   944,  1438,
      25,   251,   186,   467,   467,   469,   256,   467,   954,   205,
     237,   407,   377,   240,  1654,  1655,  1656,  1657,    53,  1869,
    1660,  1661,  1662,  1663,  1664,  1665,  1666,  1667,  1668,  1669,
    1847,  1275,  1847,   954,  1847,   953,  1847,   221,   333,   334,
     468,   467,   146,   471,  2400,   991,  1290,   467,   298,   256,
     270,  2004,   417,   450,   261,  2437,  2438,   333,   334,  1803,
      22,   407,   407,   313,   209,   430,    28,  1584,  1014,   468,
    1710,  1711,   471,  1802,  1020,   468,   147,  1023,   471,  1680,
    1681,  1027,   732,   733,   268,   343,  2377,   319,   453,  1790,
     127,   147,  1011,  1011,  1032,  1041,   147,  1011,  1044,  1045,
    1046,  1047,   467,   323,  1011,   147,   467,   953,  1054,  1055,
    2401,  1801,  1841,  1803,   341,   152,  2498,   468,   154,   377,
     471,   467,   467,   159,  1070,  1071,  1072,  1073,  1074,  1075,
     350,  2563,   430,  1079,   432,  1011,  2058,  1083,   465,   468,
     467,  1087,   469,   251,  1090,  1091,  1092,  1093,  1094,  1095,
    1096,  1097,  1098,   423,   404,  1101,  2512,   468,   343,   417,
     471,    80,  1108,  2042,  1110,  1011,  1761,   467,   434,   469,
     132,   355,   430,  2529,   462,  1527,  1528,  1529,    35,   467,
    1118,   469,  1689,   469,   462,  1131,   222,   750,   395,   467,
     147,   469,   377,    22,   414,   453,    22,    54,   405,    28,
    1610,   468,    28,  1149,   471,   169,   147,  1128,   468,   467,
     169,   471,  1158,  1159,   251,   468,   147,   266,   471,   256,
    2511,   448,   377,   468,   261,   189,   471,   263,     8,  2585,
     189,    11,   417,   154,  1080,    15,    16,    17,   159,   343,
     467,   142,    35,   220,  1190,   430,   343,   104,  1687,   467,
    1196,   211,  1198,   154,   468,     5,   468,   471,   159,   471,
    1136,   225,     5,  1770,  2217,    22,   225,   451,   453,   467,
     467,    28,  1822,   377,   458,   459,   460,   461,   462,   463,
     377,   159,   467,  1527,  1528,  1529,   381,   467,   383,   249,
    1136,  1237,   467,  2215,  1240,  1241,  2040,  1243,   381,  1743,
     383,   222,   203,   132,    22,   467,   132,   271,   270,   294,
      28,  2012,   271,   417,   468,   468,   468,   471,   471,   471,
     417,   222,     5,     5,   421,  2049,   430,   629,   467,  1275,
    1868,   188,   548,   430,   550,  1821,   468,  1823,  2217,   471,
     468,   467,   263,   471,  1290,   468,  1292,   307,   471,   453,
     468,   467,  1290,   471,  1837,   467,   453,   319,   395,     5,
    1306,   323,   263,   467,   467,   467,  1312,  1313,   405,   467,
     467,   272,  1318,   337,   468,   132,   468,   471,   235,   471,
     468,   238,   467,   471,   947,   629,   949,    49,   350,     5,
    1266,  1358,   249,   353,   468,   277,   205,   471,    22,  2278,
     468,   467,  2281,   471,    28,   468,   468,   467,   471,   471,
    1356,  1357,  1358,   468,   132,  1361,   471,   381,   468,   383,
    1266,   471,   381,   280,   383,   431,   467,  1373,  1374,  1375,
    1376,    93,   471,  1400,   468,  1381,   468,   471,   467,   471,
     404,   270,    95,   407,   270,   404,    35,   350,   407,   409,
    1396,  1397,   414,   159,  1400,   468,   118,   468,   471,   468,
     471,   468,   471,  2103,   471,  1817,   263,   324,  1414,  1821,
    1416,  1823,  1418,   468,   136,  1982,   471,   468,   140,   468,
     471,  2031,   471,   159,   261,   629,   730,   344,   268,  1996,
     319,   220,  1438,   319,   323,   797,  2225,   323,   160,   467,
    1467,   163,   403,  1449,   388,  2043,  2044,   364,   132,  1449,
      84,   467,  1358,   270,   176,   468,   468,  1463,   471,   471,
    1449,   350,   468,  1463,   350,   471,   468,   471,   388,   471,
    2483,  1477,   468,    53,  1463,   471,  1971,   518,  1973,   520,
      53,   388,  1991,  1462,  1462,   242,  1492,  2187,  1462,   388,
     468,   473,   270,   797,  1400,  1462,   388,   430,    91,   147,
       8,   251,   319,    11,  1510,   251,   323,    15,    16,    17,
     467,  1417,    35,  1817,   469,   471,   420,  1821,   467,  1823,
     467,  1527,  1528,  1529,    34,   414,  1462,  1433,   414,   426,
     467,   467,     9,   350,   256,  1533,   386,   386,    11,   471,
     386,   319,   264,  1449,  2483,   323,   467,   279,   256,   467,
     388,   468,  2252,   172,   155,   164,  1462,  1463,   468,  1182,
     411,  1467,  1568,    35,   467,   203,   471,   353,   629,  1192,
     211,  1194,   350,  2216,  1197,   267,   471,   467,  1576,   211,
    1203,   251,  1205,   305,   211,   272,   270,   468,   303,   264,
     423,  1597,   467,   797,  1217,   147,   147,   414,   430,  1222,
     251,   266,   266,  1226,  1227,  1228,  1229,  2217,  1231,  1232,
      35,   343,  2024,    34,   454,   455,   456,   465,   458,   459,
     460,   461,   462,   463,  1630,   251,   465,  1633,   388,   991,
     388,   467,   388,   388,  1640,   319,   414,   468,  1644,   323,
     468,  1647,   468,   164,   468,   377,   468,  1653,  1654,  1655,
    1656,  1657,   468,   468,  1660,  1661,  1662,  1663,  1664,  1665,
    1666,  1667,  1668,  1669,   469,   471,   350,  1673,  1674,   468,
     468,   468,   468,   450,   450,  2221,  1682,  1613,   186,   450,
     468,  1687,  2325,   468,  1718,   417,   468,   991,  1694,  1716,
     164,  1697,   467,  1699,   468,  1693,   468,   388,   430,   207,
    1706,  1707,   276,   467,  1710,  1711,  1733,  1613,  1070,  1715,
    1716,  2332,   142,   467,   467,  2185,   427,   427,  2261,   417,
    2024,   453,  2332,   266,   154,  1731,   456,  1733,   452,   159,
     414,  1731,   267,  1733,   267,   467,   797,   267,  1744,  2543,
     409,  2318,  1731,   471,  1733,   230,   388,  1753,   251,   467,
     629,   147,   189,   270,   147,   147,   468,  2303,   388,   388,
     268,   468,   466,  1769,   388,   388,  1070,   468,   468,   471,
     264,   266,   430,   203,    35,   147,     6,   147,   341,   465,
     572,    11,  2266,  2282,   240,    15,   468,   991,    18,    19,
      20,   138,   222,    23,    11,  2279,    26,   164,   159,    29,
      30,   468,   468,   453,   472,   468,   164,  2428,   467,  2221,
    1716,  1817,   468,   427,   164,  1821,  1822,  1823,   377,   471,
     172,   468,   468,   468,  1822,  1731,   326,  1733,  1190,   416,
    2407,    82,   467,   263,   267,   147,   628,   629,   168,   467,
      70,    35,   272,   398,    35,   467,  1844,    77,    78,    79,
      80,    81,   467,  2323,    78,   411,   466,   468,   466,   164,
      54,   468,   467,   467,   629,   468,  1070,   210,   468,   468,
     467,   275,   210,  2483,   379,  2374,   467,    53,  1884,   273,
    2426,   175,   430,   191,   456,   180,  1190,  2386,   256,   456,
     256,  2303,   388,   468,    35,  2307,   388,   467,   251,  2383,
     105,   467,   430,   266,     8,   467,    35,    11,   466,   164,
     104,    15,    16,    17,   467,   429,   285,  2221,   797,   210,
    2332,  1927,  1928,  2488,  2545,   467,  1932,  1933,    32,  1865,
     991,  1937,  2402,   467,  1940,  1941,  2482,    84,   128,  1945,
     313,   468,   467,   467,  1306,   211,   454,   455,   456,   112,
     458,   459,   460,   461,   462,   463,    35,    72,   147,  1865,
    1966,   119,   147,    35,  1970,    53,  1966,   468,    35,   334,
    1970,   416,   334,   403,   168,   179,   467,  1966,  1601,   467,
      72,  1970,   471,    35,   411,  1991,  1190,   398,  1986,    35,
    1988,    66,   269,    66,   188,   471,   467,    35,   456,  2303,
     256,   350,  1306,  2307,   179,   797,   233,   467,   398,  1070,
     256,    35,   467,   467,  2426,   269,  2428,    77,  2024,    79,
     269,    81,   468,   467,   249,   266,   333,  2033,  2332,   821,
     822,   823,   797,   471,   320,   465,  2042,   191,   468,   469,
     266,   235,    32,  2049,   238,   266,   117,   467,    21,   409,
     543,  1804,  1817,    66,  1204,   249,  1522,  1993,  1994,    72,
    1966,  1995,  1767,  2401,  1970,  2161,  2479,  1850,  2036,  2485,
    2482,    84,  2566,  2310,  2542,  2530,  2236,  1516,  1528,   784,
    1855,  2482,  1578,  2540,  1821,  1513,   280,  1993,  1994,  2480,
    1582,  2345,   939,  2426,  2545,   750,  1844,  2103,  1477,   112,
    2106,   114,  1306,   207,   725,  1175,  1492,  1149,  1747,  2115,
    2116,   629,   991,  2119,  2393,   772,  1987,   771,  1174,  1733,
    1463,   774,  2426,  1957,  2428,  2131,  1972,  2274,  1731,  1190,
     324,  2131,  2138,  2545,  2377,  2376,  2388,  2143,  2138,  2389,
    2146,  2147,  2131,  2143,  1293,  2081,  2146,  2153,  2154,  2138,
     344,  2469,  2157,  2470,  2143,   168,  2457,  2146,  2147,  2165,
    1105,  2167,  1785,  1480,   268,  2165,  1417,  1314,  1243,  1415,
     364,    92,  1585,  1108,  2369,  2081,  2165,  1290,  2482,   756,
     193,  2187,  1128,  1768,   954,    -1,  1809,    -1,  1129,    -1,
      -1,  1070,    -1,    -1,    -1,    -1,    -1,     8,    -1,   991,
      11,  1824,  1825,  1826,  1827,  1828,  1829,  1830,  1831,  1832,
    1833,  2217,    -1,    -1,    -1,  2221,    -1,    -1,    -1,  2217,
     450,    -1,    -1,    -1,   454,    -1,   991,    -1,    -1,    40,
      -1,    -1,  2138,   463,    -1,  1597,    47,  2143,   251,    -1,
    2146,  2545,  2248,   256,   165,  1306,  2252,  2253,  2248,    -1,
      -1,    -1,    -1,    -1,    -1,  2282,   486,   487,   488,  2248,
      -1,    72,    -1,  2269,    -1,    -1,    -1,  2273,    -1,    -1,
      -1,  1633,  2278,  2273,   195,  2281,  2282,    -1,  1070,   797,
      -1,    -1,    -1,    -1,  2273,   298,    -1,  2293,   518,   210,
     520,  1653,  2228,  1597,    -1,    -1,   526,  2303,   219,    -1,
     313,  2307,  2308,    -1,   534,  1070,    -1,    -1,    -1,    -1,
      -1,  1190,    -1,  2249,    -1,    -1,   546,    -1,  1110,    -1,
    1682,    -1,  2228,    -1,   245,    -1,  2332,    -1,   558,  1633,
      -1,    -1,    -1,    -1,  2332,    -1,    -1,    -1,  2336,    -1,
      -1,    -1,    -1,  2249,  1706,   266,    -1,    -1,  2346,  1653,
     454,   455,   456,    -1,   458,   459,   460,   461,   462,   463,
      -1,   591,   592,   593,    35,    -1,    -1,  2273,  2374,    -1,
     181,  2377,    -1,    -1,    -1,   186,  2282,  2377,  1682,    -1,
    2386,    -1,    -1,    54,    -1,    -1,    -1,  2393,  2377,    -1,
     450,   404,    -1,  1597,    -1,  2401,    -1,    -1,  1190,    -1,
      -1,  2401,  1706,   633,    -1,    -1,    -1,    -1,   329,    -1,
     221,    -1,  2401,    -1,  2350,  2421,    -1,    -1,    -1,    -1,
    2426,    -1,  2428,    -1,    -1,  1190,    -1,  1306,    -1,  1633,
    2428,    -1,    -1,   104,    -1,  2433,    -1,  2435,    -1,    -1,
      -1,  2439,  2440,    -1,  2350,  1237,    -1,    -1,    -1,  1653,
    2456,  2457,    -1,    -1,    -1,    -1,    -1,   268,    -1,    -1,
    1822,  2397,    -1,    -1,    -1,    -1,   526,    -1,    -1,    -1,
      -1,    -1,    -1,   991,    -1,    -1,  2482,  2483,  1682,    -1,
      -1,    -1,    -1,    -1,    -1,  2483,    -1,    -1,    -1,    -1,
     411,  2397,    -1,    -1,    -1,    -1,    -1,    -1,   558,    -1,
    1292,    -1,  1706,    -1,   734,  2511,    -1,  2513,    -1,    -1,
      -1,  2511,    -1,    -1,  1306,    -1,    -1,   188,  1822,    -1,
     750,   751,  2511,    -1,    -1,   622,   756,   757,   758,    -1,
     627,   591,   592,   593,    -1,    -1,  1597,    -1,    -1,  2545,
      -1,  1306,    -1,    -1,   355,    -1,    -1,  2545,    -1,    -1,
      -1,    -1,  1070,   783,   784,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2186,   235,    -1,   796,   238,  2504,  2575,
    2576,  1933,  1633,    -1,    -1,    -1,    -1,    -1,   249,    -1,
      -1,    -1,    -1,   813,    -1,    -1,    -1,   817,    -1,    -1,
      -1,    -1,  1653,    -1,    -1,  2218,  2219,    -1,  2504,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,
    2233,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1822,    -1,
      -1,  1682,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1933,
      -1,    -1,    -1,   730,    -1,   732,   733,    -1,    -1,    -1,
     451,    -1,    -1,    -1,    -1,  1706,    -1,   458,   459,   460,
     461,   462,   463,   324,    -1,     8,    -1,    -1,    11,    -1,
      -1,    -1,    15,    16,    17,    -1,    -1,    -1,    -1,  2292,
      -1,    -1,  1190,   344,   734,    -1,    -1,    -1,    -1,    32,
    2042,    -1,    -1,    -1,    -1,    -1,    -1,  2049,    -1,    -1,
     920,    -1,    -1,   364,    -1,   925,    -1,   757,    -1,    -1,
      -1,   798,    -1,   933,   801,   802,    -1,    -1,    -1,   939,
      -1,    -1,   942,    -1,    -1,    -1,   946,   947,  1597,   949,
     950,    -1,   952,   783,    -1,    -1,    -1,    -1,    -1,  1933,
      -1,    -1,    -1,    -1,    -1,    -1,   796,    -1,  2042,    -1,
      -1,    -1,    -1,    -1,  2106,  2049,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1633,    -1,    -1,   817,    -1,    -1,
      -1,  1822,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1653,    -1,  1568,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1356,  1357,    -1,  1306,    -1,
    1361,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2106,  1682,    -1,  1597,    -1,    -1,    -1,    -1,
      -1,    -1,     8,  1043,    -1,    11,    -1,    -1,    -1,    15,
      16,    17,    -1,    -1,    -1,  1396,  1397,  1706,    -1,    -1,
      -1,    -1,  1597,    -1,    -1,    -1,    32,    -1,  2042,    -1,
      -1,  1633,    -1,    -1,    40,  2049,    -1,    -1,  1078,    -1,
      -1,    47,    -1,    -1,   207,  2217,    -1,    -1,    -1,    -1,
      -1,  1653,   959,   960,    -1,   925,    -1,    -1,  1633,    -1,
      -1,     8,  1933,    -1,    11,    -1,    72,  1107,    15,    16,
      17,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1653,    -1,
    1682,  2253,   952,    -1,    -1,    32,    -1,  1127,    -1,  1129,
      -1,    -1,  2106,    -1,    -1,    -1,    -1,    -1,  1138,    -1,
    1140,    -1,    -1,  2217,  1706,   268,  2278,  1682,    -1,  2281,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1025,  1026,
      -1,    -1,    -1,    -1,    -1,    -1,  1033,    -1,  1035,  1036,
      -1,  1706,  1172,  1822,    -1,    -1,    -1,    -1,    -1,  2253,
      -1,  1181,  1182,  1050,    -1,  1052,    -1,    -1,    -1,    -1,
      -1,    -1,  1192,  1193,  1194,  1195,    -1,  1197,  1065,  1066,
      -1,    -1,    -1,  1203,  2278,  1205,    -1,  2281,    -1,    -1,
      -1,  2042,    -1,    -1,    -1,   181,  1216,  1217,  2049,    -1,
     186,  1221,  1222,    -1,    -1,    -1,  1226,  1227,  1228,  1229,
      -1,  1231,  1232,    -1,    -1,    -1,    -1,    -1,     0,    -1,
      -1,   207,   208,  2217,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1251,  1252,    -1,    -1,   221,    -1,    -1,    -1,    -1,
    1822,    -1,    -1,    -1,  1264,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2106,    -1,  1107,    -1,  2253,
      -1,    -1,    -1,    -1,  1933,   251,    -1,  1822,   254,    -1,
      -1,  1158,  1159,    -1,    -1,    -1,    -1,  1127,    -1,  1129,
     207,    -1,   268,    -1,  2278,   271,    -1,  2281,    -1,  1597,
      -1,    -1,    -1,  1654,  1655,  1656,  1657,    -1,    -1,  1660,
    1661,  1662,  1663,  1664,  1665,  1666,  1667,  1668,  1669,    91,
      -1,   454,   455,   456,    -1,   458,   459,   460,   461,   462,
     463,    -1,  1172,  1210,    -1,  1633,    -1,    -1,    -1,    -1,
      -1,  2483,    -1,  1220,    -1,    -1,  1223,    -1,    -1,    -1,
      -1,   268,    -1,    -1,    -1,  1653,    -1,    -1,    -1,  1710,
    1711,  1933,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     142,    -1,    -1,    -1,    -1,    -1,  2217,    -1,    -1,   355,
      -1,    -1,   154,  2042,  1682,    -1,    -1,   159,  1933,    -1,
    2049,    -1,   164,    -1,    -1,    -1,    -1,    -1,    -1,  2483,
     172,    -1,  1412,   175,    -1,    -1,    -1,    -1,  1706,    -1,
      -1,  1251,  2253,  1290,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1302,    -1,     8,    -1,    -1,
      11,   203,  1442,    -1,    15,    16,    17,  2278,    -1,  1449,
    2281,    -1,    -1,    -1,    -1,    -1,    -1,  2106,    -1,    -1,
     222,    32,    -1,  1463,    -1,    -1,    -1,  1467,    -1,    -1,
    1470,    -1,  1472,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2042,    -1,    -1,    -1,    -1,   451,    -1,  2049,   454,   455,
     456,    -1,   458,   459,   460,   461,   462,   463,    -1,    -1,
      -1,   263,    -1,    -1,   266,   471,    -1,  2042,    -1,  2483,
     272,    -1,    -1,    -1,  2049,    -1,    -1,    -1,  1518,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1822,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2106,    -1,    -1,   454,   455,   456,
      -1,   458,   459,   460,   461,   462,   463,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   326,    -1,    -1,    -1,  2217,    -1,
      -1,  2106,    -1,    -1,    -1,    -1,    -1,    -1,  1578,    -1,
      -1,    -1,    -1,  1583,    -1,    -1,  1453,  1587,  1588,  1589,
    1590,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1601,    -1,    -1,  2253,    -1,  1606,    -1,    -1,    -1,
    1610,    -1,  1442,     8,    -1,   377,    11,  1484,  1485,    -1,
      15,    16,    17,    -1,    -1,    -1,    -1,    -1,    -1,  2278,
      -1,    -1,  2281,    -1,    -1,    -1,   207,    -1,    -1,    -1,
      -1,   403,    -1,    -1,    -1,  1933,  1646,    -1,    -1,    -1,
      -1,    -1,  2483,    -1,    -1,  2217,    -1,    -1,     3,    -1,
      -1,    -1,    -1,     8,    -1,   427,    11,   429,   430,    -1,
      15,    16,    17,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2217,    -1,    -1,    -1,    -1,    32,    -1,    -1,
      35,  2253,    -1,    -1,    -1,    40,    -1,   268,    -1,    -1,
      -1,    -1,    47,   465,    -1,    -1,   468,   469,   470,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2278,    -1,  2253,  2281,
    1720,    -1,    -1,    -1,    -1,    -1,    -1,    72,  1728,  1729,
    1730,  1731,    -1,  1733,  1734,    -1,    -1,    -1,  1738,  1739,
      -1,    -1,    -1,  2278,    35,    -1,  2281,    -1,    -1,    -1,
    1617,  1618,    -1,  1583,  2042,  1622,    -1,    -1,  1588,  1589,
    1590,  2049,  2103,    54,    -1,    -1,    -1,  1767,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1606,    -1,    -1,    -1,
      -1,    -1,    -1,  1783,    -1,  1785,    -1,    -1,    -1,  1789,
    1790,  1791,    -1,  1793,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1809,
      -1,  1811,   207,   104,   105,    -1,    -1,    -1,  2106,    -1,
      -1,   112,    -1,    -1,  1824,  1825,  1826,  1827,  1828,  1829,
    1830,  1831,  1832,  1833,  2483,    -1,   181,    -1,    -1,    -1,
      -1,   186,    -1,    -1,    -1,    -1,  2187,    -1,  1848,    -1,
      -1,   516,   517,    -1,    -1,  1855,    -1,    -1,    -1,    -1,
      -1,    -1,   207,   208,    -1,    -1,  1866,    -1,    -1,  1869,
      -1,    -1,    -1,   268,    -1,    -1,   221,   168,    -1,    -1,
      -1,    -1,    -1,   454,   455,   456,    -1,   458,   459,   460,
     461,   462,   463,    -1,    -1,    -1,    -1,   188,  1728,  1729,
    1730,    -1,    -1,    -1,    -1,    -1,   251,   572,   573,   254,
      -1,  2252,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2483,    -1,   268,    -1,    -1,   271,    -1,    -1,  2217,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   235,    -1,  1946,   238,  2483,  1949,
    1950,  1951,  1952,  1783,    -1,  1822,  1956,  1957,   249,  1959,
     251,    -1,  1962,   628,    -1,  2253,  1966,    -1,    -1,    -1,
    1970,    -1,    -1,    -1,    -1,    -1,  1976,    -1,    -1,   644,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,
    2278,    -1,    -1,  2281,    -1,  1995,    -1,    -1,    -1,    -1,
    2000,    -1,    -1,  1870,  2004,    -1,    -1,   672,    -1,    -1,
     355,    -1,  2012,    -1,    -1,    -1,    -1,    -1,  1848,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   691,   692,   693,    -1,
     695,    -1,    -1,   324,    -1,    -1,    -1,  2037,    -1,  1869,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     715,    -1,    -1,   344,    -1,    -1,    -1,    -1,    -1,   454,
     455,   456,    -1,   458,   459,   460,   461,   462,   463,    -1,
      -1,    -1,    -1,   364,  2074,   366,    -1,    -1,   369,    -1,
    2080,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2091,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   764,
      -1,    -1,    -1,   768,   769,    -1,   451,    -1,    -1,   454,
     455,   456,    -1,   458,   459,   460,   461,   462,   463,  1949,
    1950,  1951,  1952,    -1,     0,    -1,    -1,    -1,    -1,    -1,
      -1,  2131,  2132,    -1,    -1,    -1,  2136,    -1,  2138,    -1,
      -1,    -1,    18,  2143,    -1,    -1,  2146,  2147,    -1,  2149,
      -1,  2151,    28,    -1,    30,    31,   821,   822,   823,    -1,
      -1,    -1,    -1,    -1,  2031,  2165,    -1,    -1,    -1,  2036,
      46,    -1,    -1,    -1,    -1,    -1,   467,    -1,    -1,    55,
      -1,    -1,    -1,  2050,  2051,  2185,  2186,    -1,    -1,    -1,
      -1,    67,    -1,    -1,  2194,  2483,    -1,    -1,    -1,    -1,
      -1,    -1,    78,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   709,    -1,    89,    -1,    91,    -1,    -1,  2218,  2219,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2230,    -1,   108,  2233,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2245,   122,    -1,  2248,   747,
      -1,    -1,     8,    -1,    -1,    11,   132,    -1,    -1,    15,
      16,    17,   138,    -1,    -1,    -1,  2266,    -1,    -1,    -1,
     146,    -1,   148,  2273,    -1,    -1,    -1,    -1,    -1,  2279,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    22,  2288,    -1,
      -1,    -1,  2292,    28,    -1,    -1,    -1,    -1,    -1,    -1,
      35,  2301,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    54,
      -1,    -1,    -1,  2323,    -1,    -1,    -1,    -1,   826,    -1,
      -1,    -1,    -1,   831,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2208,  2209,    -1,    -1,    -1,    -1,    -1,   224,  2349,
    2217,    -1,    -1,    -1,    -1,  1020,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2194,    -1,    -1,    -1,     0,   104,
      -1,    -1,    -1,    -1,    -1,    -1,  1041,  2377,    -1,  1044,
      -1,    -1,  1047,  2383,    -1,    -1,    -1,    -1,  2388,  1054,
    1055,    -1,    -1,    -1,    -1,    -1,    -1,   132,    -1,    -1,
      -1,  2401,  2402,  2403,  2404,    -1,  1071,  1072,  1073,  1074,
      -1,    -1,    -1,    -1,  1079,  2245,   292,    -1,  1083,   295,
      -1,    -1,  1087,    -1,    -1,  1090,  1091,  1092,  1093,  1094,
    1095,  1096,  1097,  1098,    -1,    -1,  1101,  2437,  2438,    -1,
      -1,    -1,    -1,  1108,    -1,  1110,    -1,   323,    -1,    -1,
      -1,   207,    -1,   188,    -1,   331,    -1,    -1,    -1,    91,
      -1,  2461,    -1,    -1,    -1,  2332,  1131,   343,    -1,  2469,
      -1,  2301,    -1,    -1,   350,    -1,    -1,    -1,   354,  2479,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   364,    -1,
      -1,    -1,    -1,  1158,  1159,    -1,    -1,    -1,  2498,    -1,
     235,   377,    -1,   238,    -1,  2505,    -1,    -1,    -1,    -1,
     142,  2511,   268,    -1,   249,    -1,     0,    -1,    -1,  2349,
    1018,    -1,   154,    -1,    -1,    -1,  2526,   159,    -1,    -1,
      -1,    -1,   164,    -1,    -1,   270,   412,    -1,    -1,    -1,
     172,   417,  1040,   175,    -1,   280,    -1,  1045,     8,    -1,
      -1,    11,    -1,    -1,   430,    15,    16,    17,  1056,  1057,
    1058,    -1,  1060,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   203,  1237,    -1,    -1,  1240,  1241,   453,  1243,    -1,
      40,    -1,    -1,    -1,   319,    -1,    -1,    47,   323,   324,
     222,   467,    -1,    -1,   470,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    91,  1106,   344,
      -1,    -1,    72,    -1,    -1,   350,  2483,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1292,    -1,   364,
      -1,   263,    -1,    -1,   266,    -1,    -1,    -1,    -1,    -1,
     272,    -1,    -1,    -1,    -1,    -1,    -1,  1145,  1313,    -1,
      -1,    -1,    -1,  1318,    -1,    -1,    -1,    -1,   142,  1157,
      -1,    -1,    -1,    -1,  1162,    -1,    -1,    -1,    -1,    -1,
     154,    -1,    -1,    -1,    -1,   159,    -1,    -1,    -1,   414,
     164,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   172,    -1,
      -1,   175,    -1,  1358,   326,    -1,    -1,    -1,   454,   455,
     456,    -1,   458,   459,   460,   461,   462,   463,  1373,    -1,
    1375,  1376,    -1,    -1,    -1,    -1,  1381,    -1,    -1,   203,
      -1,   181,    -1,    -1,    -1,    -1,   186,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   222,    -1,
      -1,    -1,    -1,    -1,    -1,   377,    -1,   207,   208,  1414,
      -1,  1416,    -1,  1418,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   221,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   403,    -1,    -1,    -1,    -1,    -1,     8,    -1,   263,
      11,    -1,   266,    -1,    15,    16,    17,    -1,   272,    -1,
      -1,   251,    -1,    -1,   254,   427,    -1,   429,   430,    -1,
      -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,   268,    40,
      -1,    -1,  1477,    -1,    -1,    -1,    47,    -1,  1316,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1492,    -1,    -1,
      -1,    -1,    -1,   465,    -1,    -1,   468,   469,   470,  1337,
      -1,    72,   326,    -1,    -1,  1510,     8,    -1,    -1,    11,
      -1,    -1,    -1,    15,    16,    17,  1354,    -1,  1356,  1357,
      -1,  1359,    -1,  1361,    -1,    -1,    -1,  1365,    -1,    -1,
      32,    -1,    -1,    -1,  1372,    -1,    -1,    -1,    40,  1377,
      -1,    -1,    -1,    -1,    -1,    47,    -1,    -1,    -1,  1387,
    1388,  1389,  1390,   377,    -1,   355,    -1,    -1,  1396,  1397,
      -1,  1399,    -1,  1568,    -1,    -1,    -1,    -1,    -1,    -1,
      72,    -1,  1410,    -1,    -1,  1413,    -1,    -1,    -1,   403,
      -1,    -1,  1420,  1421,  1422,  1423,  1424,  1425,  1426,  1427,
    1428,  1429,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   427,    -1,   429,   430,    -1,    -1,    -1,
     181,    -1,    -1,    -1,    -1,   186,    -1,    -1,    -1,    -1,
      -1,    -1,  1460,    -1,    -1,  1630,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1640,   207,   208,    -1,  1644,
      -1,   465,  1647,    -1,   468,   469,   470,    -1,    -1,    -1,
     221,   451,    -1,    -1,   454,   455,   456,    -1,   458,   459,
     460,   461,   462,   463,    -1,    -1,    -1,    -1,  1673,  1674,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   181,
     251,    -1,    -1,   254,   186,    -1,    -1,    -1,    -1,  1694,
      -1,    -1,  1697,    -1,  1699,    -1,    -1,   268,    -1,    -1,
     271,    -1,  1707,    -1,    -1,   207,   208,    -1,    -1,    -1,
    1715,  1716,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   221,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     8,
      -1,    -1,    11,  1571,  1572,  1573,    15,    16,    17,  1744,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1753,   251,
      -1,    -1,   254,    32,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    40,    -1,    -1,  1769,    -1,   268,    -1,    47,   271,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   355,    -1,    -1,    -1,    -1,    -1,
      -1,  1629,    -1,    72,    -1,    -1,    -1,  1635,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1650,  1651,  1652,    -1,  1654,  1655,  1656,  1657,
      -1,    -1,  1660,  1661,  1662,  1663,  1664,  1665,  1666,  1667,
    1668,  1669,  1670,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1690,   355,    -1,    -1,    -1,  1695,  1696,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1709,  1710,  1711,  1712,    -1,  1714,    -1,    -1,  1884,
     451,    -1,    -1,   454,   455,   456,    -1,   458,   459,   460,
     461,   462,   463,    -1,    -1,    -1,    -1,   468,    -1,    -1,
      -1,    -1,   181,    -1,    -1,    -1,    -1,   186,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1927,  1928,    -1,    -1,    -1,  1932,   207,   208,
      -1,    -1,  1937,    -1,    -1,  1940,  1941,    -1,    -1,    -1,
    1945,    -1,   221,    -1,    -1,    -1,    -1,    -1,  1786,   451,
      -1,    -1,   454,   455,   456,    -1,   458,   459,   460,   461,
     462,   463,    -1,    -1,    -1,    -1,   468,    -1,    -1,    -1,
      -1,    -1,   251,    -1,    -1,   254,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1991,    -1,    -1,   268,
      -1,     8,   271,    -1,    11,    -1,    -1,    -1,    15,    16,
      17,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,     8,    -1,    -1,    11,    -1,    -1,
      -1,    -1,    -1,    40,    -1,    -1,    -1,    -1,  2033,    -1,
      47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    40,  1885,    -1,    -1,
      -1,  1889,  1890,    47,  1892,    72,    -1,  1895,  1896,  1897,
    1898,    -1,    -1,    -1,  1902,  1903,  1904,  1905,  1906,  1907,
    1908,  1909,  1910,  1911,  1912,  1913,   355,     8,    72,    -1,
      11,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1926,    -1,
      -1,  1929,    -1,  1931,    -1,    -1,    -1,  1935,    -1,    -1,
    1938,  1939,    -1,    -1,  1942,  1943,    -1,    -1,    -1,    40,
    2115,  2116,    -1,    -1,  2119,    -1,    47,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,     8,    -1,    -1,    11,    -1,    -1,    -1,    15,    16,
      17,    72,    -1,    -1,    -1,  1983,   140,    -1,  2153,  2154,
      -1,    -1,  1990,    -1,    -1,    32,    -1,    -1,    -1,    -1,
      -1,    -1,  2167,    40,   181,  2003,    -1,    -1,     8,   186,
      47,    11,   451,    -1,    -1,   454,   455,   456,    -1,   458,
     459,   460,   461,   462,   463,    -1,    -1,   181,    -1,   468,
       8,    -1,   186,    11,    -1,    72,    -1,    15,    16,    17,
      40,    -1,    -1,    -1,   221,    -1,    -1,    47,    -1,   140,
      -1,    -1,    -1,    -1,    32,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    40,    -1,    -1,    -1,    -1,   221,    -1,    47,
      -1,    -1,    72,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     181,   268,    -1,    -1,    72,   186,    -1,    -1,    -1,    -1,
      -1,  2099,    -1,    -1,  2269,  2103,    -1,    -1,    -1,    -1,
      -1,  2109,  2110,  2111,   268,    -1,  2114,  2282,    -1,  2117,
    2118,    -1,    -1,    -1,  2122,    -1,    -1,    -1,  2293,    -1,
     221,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     140,    -1,    -1,  2308,   181,    -1,    -1,    -1,    -1,   186,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     207,   208,    -1,    -1,    -1,    -1,    -1,   268,   355,    -1,
      -1,   181,    -1,    -1,   221,    -1,   186,    -1,    -1,  2187,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   355,    -1,   181,    -1,    -1,    -1,  2205,   186,    -1,
      -1,    -1,    -1,    -1,   251,    -1,    -1,   254,    -1,    -1,
      -1,   221,    -1,    -1,    -1,    -1,    -1,    -1,  2393,   207,
     208,   268,    -1,    -1,   271,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   221,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2251,  2252,    -1,  2421,    -1,  2256,  2257,
    2258,    -1,    -1,    -1,   355,    -1,    -1,    -1,   268,    -1,
      -1,    -1,    -1,   251,   451,    -1,   254,   454,   455,   456,
      -1,   458,   459,   460,   461,   462,   463,    -1,  2286,  2287,
     268,  2456,  2457,   271,    -1,    -1,    -1,   451,    -1,    -1,
      -1,  2299,    -1,    -1,   458,   459,   460,   461,   462,   463,
      -1,    -1,    -1,  2311,    -1,    -1,    -1,    -1,   355,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2513,    -1,
      -1,    -1,    -1,    -1,    -1,   355,    -1,    -1,    -1,    -1,
     451,    -1,    -1,    -1,    -1,    -1,    -1,   458,   459,   460,
     461,   462,   463,  2371,    -1,    -1,    -1,   355,    -1,    -1,
      -1,    -1,    -1,    -1,  2382,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2399,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2575,  2576,    -1,    -1,   451,  2413,    -1,   454,   455,   456,
      -1,   458,   459,   460,   461,   462,   463,    -1,    -1,    -1,
      -1,   468,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   451,    -1,    -1,    -1,    -1,    -1,    -1,   458,   459,
     460,   461,   462,   463,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   451,    -1,    -1,   454,   455,   456,    -1,
     458,   459,   460,   461,   462,   463,    -1,    -1,    -1,    -1,
     468,    -1,  2490,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,  2516,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,  2587,
      85,    86,    87,    88,    89,    90,    -1,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,    -1,
     115,   116,   117,   118,   119,   120,    -1,   122,   123,   124,
     125,   126,   127,    -1,   129,   130,   131,   132,   133,    -1,
     135,   136,   137,    -1,   139,   140,   141,    -1,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,    -1,
     155,   156,   157,   158,    -1,   160,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,    -1,   171,    -1,   173,   174,
      -1,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,    -1,   187,   188,   189,   190,   191,   192,    -1,   194,
     195,   196,   197,   198,   199,   200,   201,   202,    -1,   204,
      -1,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,    -1,    -1,   218,   219,   220,   221,    -1,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,    -1,   264,
     265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,    -1,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,    -1,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,    -1,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,    -1,    -1,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,    -1,    -1,
     405,   406,   407,   408,   409,   410,    -1,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,    -1,    -1,    -1,
      -1,    -1,    -1,   458,   459,   460,    -1,    -1,    -1,    -1,
      -1,    -1,   467,   468,    -1,    -1,    -1,   472,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    -1,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,    -1,
     115,   116,   117,   118,   119,   120,    -1,   122,   123,   124,
     125,   126,    -1,    -1,   129,   130,   131,   132,   133,    -1,
     135,   136,   137,    -1,   139,   140,   141,    -1,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,    -1,
     155,   156,   157,   158,    -1,   160,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,    -1,   171,    -1,   173,   174,
      -1,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,    -1,   187,   188,   189,   190,   191,   192,    -1,   194,
     195,   196,   197,   198,   199,   200,   201,   202,    -1,   204,
      -1,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,    -1,    -1,   218,   219,   220,   221,    -1,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,    -1,   264,
     265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,    -1,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,    -1,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,    -1,    -1,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,    -1,    -1,
     405,   406,   407,   408,   409,   410,    -1,   412,   413,   414,
     415,   416,   417,   418,    -1,   420,   421,   422,   423,   424,
     425,    -1,    -1,   428,    -1,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,    -1,   453,    -1,
      -1,    -1,    -1,   458,   459,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   467,   468,    -1,    -1,    -1,   472,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    -1,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,    -1,
     115,   116,   117,   118,   119,   120,    -1,   122,   123,   124,
     125,   126,    -1,    -1,   129,   130,   131,   132,   133,    -1,
     135,   136,   137,    -1,   139,   140,   141,    -1,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,    -1,
     155,   156,   157,   158,    -1,   160,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,    -1,   171,    -1,   173,   174,
      -1,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,    -1,   187,   188,   189,   190,   191,   192,    -1,   194,
     195,   196,   197,   198,   199,   200,   201,   202,    -1,   204,
      -1,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,    -1,    -1,   218,   219,   220,   221,    -1,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,    -1,   264,
     265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,    -1,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,    -1,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,    -1,    -1,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,    -1,    -1,
     405,   406,   407,   408,   409,   410,    -1,   412,   413,   414,
     415,   416,   417,   418,    -1,   420,   421,   422,   423,   424,
     425,    -1,    -1,   428,    -1,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,    -1,   453,    -1,
      -1,    -1,    -1,   458,   459,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   467,    -1,    -1,    -1,    -1,   472,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    -1,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,    -1,
     115,   116,   117,   118,   119,   120,    -1,   122,   123,   124,
     125,   126,    -1,    -1,   129,   130,   131,   132,   133,    -1,
     135,   136,   137,    -1,   139,   140,   141,    -1,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,    -1,
     155,   156,   157,   158,    -1,   160,    -1,   162,   163,   164,
     165,   166,   167,   168,   169,    -1,   171,    -1,   173,   174,
      -1,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,    -1,   187,   188,   189,   190,   191,   192,    -1,   194,
     195,   196,   197,   198,   199,   200,   201,   202,    -1,   204,
      -1,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,    -1,   217,   218,   219,   220,   221,    -1,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,    -1,   264,
     265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,    -1,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,    -1,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,    -1,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,    -1,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,    -1,    -1,
     405,   406,   407,   408,   409,   410,    -1,   412,   413,   414,
     415,   416,   417,   418,    -1,   420,   421,   422,   423,   424,
     425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,    -1,    -1,    -1,
      -1,    -1,    -1,   458,   459,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   467,    -1,    -1,    -1,    -1,   472,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    -1,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,    -1,
     115,   116,   117,   118,   119,   120,    -1,   122,   123,   124,
     125,   126,    -1,    -1,   129,   130,   131,   132,   133,    -1,
     135,   136,   137,    -1,   139,   140,   141,    -1,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,    -1,
     155,   156,   157,   158,    -1,   160,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,    -1,   171,    -1,   173,   174,
      -1,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,    -1,   187,   188,   189,   190,   191,   192,    -1,   194,
     195,   196,   197,   198,   199,   200,   201,   202,    -1,   204,
      -1,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,    -1,    -1,   218,   219,   220,   221,    -1,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,    -1,   264,
     265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,    -1,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,    -1,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,    -1,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,    -1,    -1,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,    -1,    -1,
     405,   406,   407,   408,   409,   410,    -1,   412,   413,   414,
     415,   416,   417,   418,    -1,   420,   421,   422,   423,   424,
     425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,    -1,    -1,    -1,
      -1,    -1,    -1,   458,   459,   460,    -1,    -1,    -1,    -1,
      -1,    -1,   467,    -1,    -1,    -1,    -1,   472,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    -1,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,    -1,
     115,   116,   117,   118,   119,   120,    -1,   122,   123,   124,
     125,   126,    -1,    -1,   129,   130,   131,   132,   133,    -1,
     135,   136,   137,    -1,   139,   140,   141,    -1,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,    -1,
     155,   156,   157,   158,    -1,   160,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,    -1,   171,    -1,   173,   174,
      -1,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,    -1,   187,   188,   189,   190,   191,   192,    -1,   194,
     195,   196,   197,   198,   199,   200,   201,   202,    -1,   204,
      -1,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,    -1,    -1,   218,   219,   220,   221,    -1,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,    -1,   264,
     265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,    -1,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,    -1,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,    -1,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,    -1,    -1,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,    -1,    -1,
     405,   406,   407,   408,   409,   410,    -1,   412,   413,   414,
     415,   416,   417,   418,    -1,   420,   421,   422,   423,   424,
     425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,    -1,    -1,    -1,
      -1,    -1,    -1,   458,   459,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   467,    -1,    -1,    -1,    -1,   472,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    -1,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,    -1,
     115,   116,   117,   118,   119,   120,    -1,   122,   123,   124,
     125,   126,    -1,    -1,   129,   130,   131,   132,   133,    -1,
     135,   136,   137,    -1,   139,   140,   141,    -1,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,    -1,
     155,   156,   157,   158,    -1,   160,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,    -1,   171,    -1,   173,   174,
      -1,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,    -1,   187,   188,   189,   190,   191,   192,    -1,   194,
     195,   196,   197,   198,   199,   200,   201,   202,    -1,   204,
      -1,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,    -1,    -1,   218,   219,   220,   221,    -1,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,    -1,   264,
     265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,    -1,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,    -1,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,    -1,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,    -1,    -1,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,    -1,    -1,
     405,   406,   407,   408,   409,   410,    -1,   412,   413,   414,
     415,   416,   417,   418,    -1,   420,   421,   422,   423,   424,
     425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,    -1,    -1,    -1,
      -1,    -1,    -1,   458,   459,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   467,   468,    -1,    -1,    -1,   472,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    -1,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,    -1,
     115,   116,   117,   118,   119,   120,    -1,   122,   123,   124,
     125,   126,    -1,    -1,   129,   130,   131,   132,   133,    -1,
     135,   136,   137,    -1,   139,   140,   141,    -1,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,    -1,
     155,   156,   157,   158,    -1,   160,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,    -1,   171,    -1,   173,   174,
      -1,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,    -1,   187,   188,   189,   190,   191,   192,    -1,   194,
     195,   196,   197,   198,   199,   200,   201,   202,    -1,   204,
      -1,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,    -1,    -1,   218,   219,   220,   221,    -1,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,    -1,   264,
     265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,    -1,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,    -1,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,    -1,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,    -1,    -1,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,    -1,    -1,
     405,   406,   407,   408,   409,   410,    -1,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,    -1,    -1,    -1,
      -1,    -1,    -1,   458,   459,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   467,    -1,    -1,    -1,    -1,   472,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    -1,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,    -1,
     115,   116,   117,   118,   119,   120,    -1,   122,   123,   124,
     125,   126,    -1,    -1,   129,   130,   131,   132,   133,    -1,
     135,   136,   137,    -1,   139,   140,   141,    -1,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,    -1,
     155,   156,   157,   158,    -1,   160,    -1,   162,   163,   164,
     165,   166,   167,   168,   169,    -1,   171,    -1,   173,   174,
      -1,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,    -1,   187,   188,   189,   190,   191,   192,    -1,   194,
     195,   196,   197,   198,   199,   200,   201,   202,    -1,   204,
      -1,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,    -1,    -1,   218,   219,   220,   221,    -1,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,    -1,   264,
     265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,    -1,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,    -1,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,    -1,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,    -1,    -1,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,    -1,    -1,
     405,   406,   407,   408,   409,   410,    -1,   412,   413,   414,
     415,   416,   417,   418,    -1,   420,   421,   422,   423,   424,
     425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,    -1,    -1,    -1,
      -1,    -1,    -1,   458,   459,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   467,    -1,    -1,    -1,    -1,   472,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    -1,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,    -1,
     115,   116,   117,   118,   119,   120,    -1,   122,   123,   124,
     125,   126,    -1,    -1,   129,   130,   131,   132,   133,    -1,
     135,   136,   137,    -1,   139,   140,   141,    -1,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,    -1,
     155,   156,   157,   158,    -1,   160,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,    -1,   171,    -1,   173,   174,
      -1,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,    -1,   187,   188,   189,   190,   191,   192,    -1,   194,
     195,   196,   197,   198,   199,   200,   201,   202,    -1,   204,
      -1,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,    -1,    -1,   218,   219,   220,   221,    -1,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,    -1,   264,
     265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,    -1,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,    -1,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,    -1,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,    -1,    -1,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,    -1,    -1,
     405,   406,   407,   408,   409,   410,    -1,   412,   413,   414,
     415,   416,   417,   418,    -1,   420,   421,   422,   423,   424,
     425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,    -1,    -1,    -1,
      -1,    -1,    -1,   458,   459,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   467,    -1,    -1,    -1,    -1,   472,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    -1,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,    -1,
     115,   116,   117,   118,   119,   120,    -1,   122,   123,   124,
     125,   126,    -1,    -1,   129,   130,   131,   132,   133,    -1,
     135,   136,   137,    -1,   139,   140,   141,    -1,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,    -1,
     155,   156,   157,   158,    -1,   160,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,    -1,   171,    -1,   173,   174,
      -1,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,    -1,   187,   188,   189,   190,   191,   192,    -1,   194,
     195,   196,   197,   198,   199,   200,   201,   202,    -1,   204,
      -1,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,    -1,    -1,   218,   219,   220,   221,    -1,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,    -1,   264,
     265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,    -1,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,    -1,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,    -1,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,    -1,    -1,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,    -1,    -1,
     405,   406,   407,   408,   409,   410,    -1,   412,   413,   414,
     415,   416,   417,   418,    -1,   420,   421,   422,   423,   424,
     425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,    -1,    -1,    -1,
      -1,    -1,    -1,   458,   459,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   467,    -1,    -1,    -1,    -1,   472,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    -1,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,    -1,
     115,   116,   117,   118,   119,   120,    -1,   122,   123,   124,
     125,   126,    -1,    -1,   129,   130,   131,   132,   133,    -1,
     135,   136,   137,    -1,   139,   140,   141,    -1,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,    -1,
     155,   156,   157,   158,    -1,   160,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,    -1,   171,    -1,   173,   174,
      -1,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,    -1,   187,   188,   189,   190,   191,   192,    -1,   194,
     195,   196,   197,   198,   199,   200,   201,   202,    -1,   204,
      -1,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,    -1,    -1,   218,   219,   220,   221,    -1,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,    -1,   264,
     265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,    -1,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,    -1,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,    -1,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,    -1,    -1,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,    -1,    -1,
     405,   406,   407,   408,   409,   410,    -1,   412,   413,   414,
     415,   416,   417,   418,    -1,   420,   421,   422,   423,   424,
     425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,    -1,    -1,    -1,
      -1,    -1,    -1,   458,   459,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   467,    -1,    -1,    -1,    -1,   472,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    -1,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,    -1,
     115,   116,   117,   118,   119,   120,    -1,   122,   123,   124,
     125,   126,    -1,    -1,   129,   130,   131,   132,   133,    -1,
     135,   136,   137,    -1,   139,   140,   141,    -1,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,    -1,
     155,   156,   157,   158,    -1,   160,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,    -1,   171,    -1,   173,   174,
      -1,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,    -1,   187,   188,   189,   190,   191,   192,    -1,   194,
     195,   196,   197,   198,   199,   200,   201,   202,    -1,   204,
      -1,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,    -1,    -1,   218,   219,   220,   221,    -1,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,    -1,   264,
     265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,    -1,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,    -1,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,    -1,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,    -1,    -1,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,    -1,    -1,
     405,   406,   407,   408,   409,   410,    -1,   412,   413,   414,
     415,   416,   417,   418,    -1,   420,   421,   422,   423,   424,
     425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,    -1,    -1,    -1,
      -1,    -1,    -1,   458,   459,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   467,    -1,    -1,    -1,    -1,   472,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    -1,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,    -1,
     115,   116,   117,   118,   119,   120,    -1,   122,   123,   124,
     125,   126,    -1,    -1,   129,   130,   131,   132,   133,    -1,
     135,   136,   137,    -1,   139,   140,   141,    -1,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,    -1,
     155,   156,   157,   158,    -1,   160,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,    -1,   171,    -1,   173,   174,
      -1,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,    -1,   187,   188,   189,   190,   191,   192,    -1,   194,
     195,   196,   197,   198,   199,   200,   201,   202,    -1,   204,
      -1,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,    -1,    -1,   218,   219,   220,   221,    -1,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,    -1,   264,
     265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,    -1,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,    -1,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,    -1,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,    -1,    -1,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,    -1,    -1,
     405,   406,   407,   408,   409,   410,    -1,   412,   413,   414,
     415,   416,   417,   418,    -1,   420,   421,   422,   423,   424,
     425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,    -1,    -1,    -1,
      -1,    -1,    -1,   458,   459,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   467,    -1,    -1,    -1,    -1,   472,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    -1,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,    -1,
     115,   116,   117,   118,   119,   120,    -1,   122,   123,   124,
     125,   126,    -1,    -1,   129,   130,   131,   132,   133,    -1,
     135,   136,   137,    -1,   139,   140,   141,    -1,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,    -1,
     155,   156,   157,   158,    -1,   160,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,    -1,   171,    -1,   173,   174,
      -1,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,    -1,   187,   188,   189,   190,   191,   192,    -1,   194,
     195,   196,   197,   198,   199,   200,   201,   202,    -1,   204,
      -1,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,    -1,    -1,   218,   219,   220,   221,    -1,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,    -1,   264,
     265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,    -1,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,    -1,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,    -1,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,    -1,    -1,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,    -1,    -1,
     405,   406,   407,   408,   409,   410,    -1,   412,   413,   414,
     415,   416,   417,   418,    -1,   420,   421,   422,   423,   424,
     425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,    -1,    -1,    -1,
      -1,    -1,    -1,   458,   459,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   467,    -1,    -1,    -1,    -1,   472,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    -1,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,    -1,   113,    -1,
     115,   116,   117,   118,   119,   120,    -1,   122,   123,   124,
     125,   126,    -1,    -1,   129,   130,   131,   132,   133,    -1,
     135,   136,   137,    -1,   139,   140,   141,    -1,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,    -1,
     155,   156,   157,   158,    -1,   160,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,    -1,   171,    -1,   173,   174,
      -1,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,    -1,   187,   188,   189,   190,   191,   192,    -1,   194,
     195,   196,   197,   198,   199,   200,   201,   202,    -1,   204,
      -1,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,    -1,    -1,   218,   219,   220,   221,    -1,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,    -1,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,    -1,   264,
     265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,    -1,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,    -1,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,    -1,   378,   379,   380,   381,   382,   383,   384,
      -1,   386,   387,    -1,    -1,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,    -1,    -1,
     405,   406,   407,   408,   409,   410,    -1,   412,   413,   414,
     415,   416,   417,   418,    -1,   420,   421,   422,   423,   424,
     425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   458,   459,    -1,    -1,     3,     4,     5,
       6,     7,   467,     9,    10,    -1,    -1,   472,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    -1,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      -1,    67,    68,    69,    70,    71,    -1,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    -1,    85,
      86,    87,    88,    89,    90,    -1,    92,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,    -1,   113,    -1,   115,
     116,   117,   118,   119,   120,    -1,   122,   123,   124,   125,
     126,    -1,    -1,   129,   130,   131,   132,   133,    -1,   135,
     136,   137,    -1,   139,   140,   141,    -1,   143,   144,   145,
     146,   147,   148,   149,   150,   151,   152,   153,    -1,   155,
     156,   157,   158,    -1,   160,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,    -1,   171,    -1,   173,   174,    -1,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
      -1,   187,   188,   189,   190,   191,   192,    -1,   194,   195,
     196,   197,   198,   199,   200,   201,   202,    -1,   204,    -1,
     206,   207,   208,   209,   210,   211,   212,   213,   214,   215,
      -1,    -1,   218,   219,   220,   221,    -1,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,    -1,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,    -1,   264,   265,
      -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,    -1,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,    -1,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
      -1,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,    -1,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,    -1,   375,
     376,    -1,   378,   379,   380,   381,   382,   383,   384,    -1,
     386,   387,    -1,    -1,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,    -1,    -1,   405,
     406,   407,   408,   409,   410,    -1,   412,   413,   414,   415,
     416,   417,   418,    -1,   420,   421,   422,   423,   424,   425,
      -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   458,   459,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   467,    -1,    -1,    -1,    -1,   472,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    -1,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      -1,    67,    68,    69,    70,    71,    -1,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    -1,    85,
      86,    87,    88,    89,    90,    -1,    92,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,    -1,   113,    -1,   115,
     116,   117,   118,   119,   120,    -1,   122,   123,   124,   125,
     126,    -1,    -1,   129,   130,   131,   132,   133,    -1,   135,
     136,   137,    -1,   139,   140,   141,    -1,   143,   144,   145,
     146,   147,   148,   149,   150,   151,   152,   153,    -1,   155,
     156,   157,   158,    -1,   160,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,    -1,   171,    -1,   173,   174,    -1,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
      -1,   187,   188,   189,   190,   191,   192,    -1,   194,   195,
     196,   197,   198,   199,   200,   201,   202,    -1,   204,    -1,
     206,    -1,   208,   209,   210,   211,   212,   213,   214,   215,
      -1,    -1,   218,   219,   220,   221,    -1,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,    -1,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,    -1,   264,   265,
      -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,    -1,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,    -1,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
      -1,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,    -1,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,    -1,   375,
     376,    -1,   378,   379,   380,   381,   382,   383,   384,    -1,
     386,   387,    -1,    -1,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,    -1,    -1,   405,
     406,   407,   408,   409,   410,    -1,   412,   413,   414,   415,
     416,   417,   418,    -1,   420,   421,   422,   423,   424,   425,
      -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   458,   459,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   467,    -1,    -1,    -1,    -1,   472,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    -1,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      -1,    67,    68,    69,    70,    71,    -1,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    -1,    85,
      86,    87,    88,    89,    90,    -1,    92,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,    -1,   115,
     116,   117,   118,   119,   120,    -1,   122,   123,   124,   125,
     126,    -1,    -1,   129,   130,   131,   132,   133,    -1,   135,
     136,   137,    -1,   139,   140,   141,    -1,   143,   144,   145,
     146,   147,   148,   149,   150,   151,   152,   153,    -1,   155,
     156,   157,   158,    -1,   160,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,    -1,   171,    -1,   173,   174,    -1,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
      -1,   187,   188,   189,   190,   191,   192,    -1,   194,   195,
     196,   197,   198,   199,   200,   201,   202,    -1,   204,    -1,
     206,    -1,    -1,   209,   210,   211,   212,   213,   214,   215,
      -1,    -1,   218,   219,   220,   221,    -1,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,    -1,   252,   253,    -1,   255,
     256,   257,   258,   259,   260,   261,   262,    -1,   264,   265,
      -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,    -1,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,    -1,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
      -1,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,    -1,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,    -1,   375,
     376,    -1,   378,   379,   380,   381,   382,   383,   384,    -1,
     386,   387,    -1,    -1,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,    -1,    -1,   405,
     406,   407,   408,   409,   410,    -1,   412,   413,   414,   415,
     416,   417,   418,    -1,   420,   421,   422,   423,   424,   425,
      -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,    -1,    -1,    -1,    -1,
      -1,    -1,   458,   459,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   467,    -1,    -1,    -1,    -1,   472,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    43,    44,    45,
      46,    -1,    48,    49,    50,    51,    -1,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      -1,    67,    68,    69,    70,    71,    -1,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    -1,    85,
      86,    87,    88,    89,    90,    -1,    92,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,    -1,   115,
     116,   117,   118,   119,   120,    -1,   122,   123,   124,   125,
     126,    -1,    -1,   129,   130,   131,   132,   133,    -1,   135,
     136,   137,    -1,   139,    -1,   141,    -1,   143,   144,   145,
     146,   147,   148,   149,   150,   151,   152,   153,    -1,   155,
     156,   157,   158,    -1,   160,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,    -1,   171,    -1,   173,   174,    -1,
     176,   177,   178,   179,   180,    -1,   182,   183,   184,   185,
      -1,   187,   188,   189,   190,   191,   192,    -1,   194,   195,
     196,   197,   198,   199,   200,   201,   202,    -1,   204,    -1,
     206,    -1,    -1,   209,   210,   211,   212,   213,   214,   215,
      -1,    -1,   218,   219,   220,    -1,    -1,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,    -1,   252,   253,    -1,   255,
     256,   257,   258,   259,   260,   261,   262,    -1,   264,   265,
      -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,    -1,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,    -1,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
      -1,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
     356,   357,   358,   359,    -1,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,    -1,   375,
     376,    -1,   378,   379,   380,   381,   382,   383,   384,    -1,
     386,   387,    -1,    -1,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,    -1,    -1,   405,
     406,   407,   408,   409,   410,    -1,   412,   413,   414,   415,
     416,   417,   418,    -1,   420,   421,   422,   423,   424,   425,
      -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   458,   459,     3,    -1,    -1,    -1,    -1,    -1,
      -1,   467,    -1,    -1,    -1,    -1,   472,    -1,    -1,    18,
      19,    20,    21,    22,    23,    24,    25,    -1,    27,    28,
      29,    -1,    -1,    -1,    -1,    -1,    35,    -1,    37,    38,
      -1,    40,    41,    42,    -1,    44,    45,    46,    47,    48,
      -1,    50,    51,    -1,    53,    54,    55,    56,    57,    58,
      -1,    -1,    61,    62,    63,    64,    65,    -1,    67,    68,
      69,    70,    71,    -1,    -1,    -1,    75,    76,    77,    78,
      79,    -1,    81,    82,    83,    -1,    85,    86,    87,    88,
      89,    90,    -1,    92,    93,    94,    95,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   103,   104,   105,   106,   107,   108,
     109,   110,   111,    -1,   113,    -1,   115,   116,   117,   118,
     119,   120,    -1,   122,   123,   124,   125,   126,    -1,    -1,
     129,   130,   131,   132,   133,    -1,   135,   136,   137,    -1,
     139,   140,   141,    -1,   143,   144,   145,   146,   147,   148,
     149,   150,   151,    -1,   153,    -1,   155,   156,   157,   158,
      -1,   160,    -1,   162,    -1,    -1,   165,   166,   167,   168,
     169,    -1,   171,    -1,   173,   174,    -1,   176,   177,   178,
     179,   180,    -1,   182,   183,   184,   185,    -1,   187,   188,
     189,   190,   191,   192,    -1,   194,   195,   196,   197,   198,
     199,   200,   201,   202,    -1,   204,    -1,   206,    -1,    -1,
     209,   210,   211,   212,   213,   214,   215,    -1,    -1,   218,
     219,   220,    -1,    -1,   223,   224,   225,    -1,    -1,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,    -1,   252,   253,    -1,   255,    -1,   257,   258,
     259,   260,   261,   262,    -1,   264,   265,    -1,    -1,   268,
     269,   270,    -1,    -1,   273,   274,    -1,   276,    -1,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,    -1,
     289,   290,   291,   292,   293,   294,   295,   296,   297,    -1,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,    -1,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,    -1,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,    -1,   344,   345,   346,   347,   348,
      -1,   350,   351,   352,   353,   354,    -1,   356,   357,   358,
     359,    -1,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,    -1,   375,   376,    -1,   378,
      -1,   380,   381,   382,   383,   384,    -1,   386,   387,    -1,
      -1,   390,   391,   392,   393,   394,    -1,   396,   397,   398,
     399,   400,   401,   402,    -1,    -1,   405,   406,   407,   408,
     409,    -1,    -1,   412,   413,   414,   415,   416,   417,   418,
      -1,   420,    -1,   422,   423,   424,   425,    -1,    -1,   428,
      -1,    -1,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,    -1,    -1,    -1,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   468,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    -1,    53,    54,    55,    56,    57,
      58,    -1,    60,    61,    62,    63,    64,    65,    -1,    67,
      68,    69,    70,    71,    -1,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    -1,    85,    86,    87,
      88,    89,    90,    -1,    92,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,    -1,   113,    -1,   115,   116,   117,
     118,   119,   120,    -1,   122,   123,   124,   125,   126,    -1,
      -1,   129,   130,   131,   132,   133,    -1,   135,   136,   137,
      -1,   139,   140,   141,    -1,   143,   144,   145,   146,   147,
     148,   149,   150,   151,    -1,   153,    -1,   155,   156,   157,
     158,    -1,   160,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,    -1,   171,    -1,   173,   174,    -1,   176,   177,
     178,   179,   180,   181,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,   191,   192,    -1,   194,   195,   196,   197,
     198,   199,   200,   201,   202,    -1,   204,    -1,   206,   207,
     208,   209,   210,   211,   212,   213,   214,   215,   216,    -1,
     218,   219,   220,   221,    -1,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,    -1,   252,   253,   254,   255,    -1,   257,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,   267,
     268,   269,   270,    -1,    -1,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
      -1,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,    -1,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,    -1,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,    -1,   386,   387,
      -1,    -1,   390,   391,   392,   393,   394,    -1,   396,   397,
     398,   399,   400,   401,   402,    -1,    -1,   405,   406,   407,
     408,   409,   410,    -1,   412,   413,   414,   415,   416,   417,
     418,    -1,   420,   421,   422,   423,   424,   425,    -1,    -1,
     428,    -1,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,    -1,    -1,   453,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   467,
      -1,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    -1,    53,    54,    55,    56,
      57,    58,    -1,    60,    61,    62,    63,    64,    65,    -1,
      67,    68,    69,    70,    71,    -1,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    -1,    85,    86,
      87,    88,    89,    90,    -1,    92,    93,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,    -1,   113,    -1,   115,   116,
     117,   118,   119,   120,    -1,   122,   123,   124,   125,   126,
      -1,    -1,   129,   130,   131,   132,   133,    -1,   135,   136,
     137,    -1,   139,   140,   141,    -1,   143,   144,   145,   146,
     147,   148,   149,   150,   151,    -1,   153,    -1,   155,   156,
     157,   158,    -1,   160,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,    -1,   171,    -1,   173,   174,    -1,   176,
     177,   178,   179,   180,   181,   182,   183,   184,   185,    -1,
     187,   188,   189,   190,   191,   192,    -1,   194,   195,   196,
     197,   198,   199,   200,   201,   202,    -1,   204,    -1,   206,
     207,   208,   209,   210,   211,   212,   213,   214,   215,   216,
      -1,   218,   219,   220,   221,    -1,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,    -1,   252,   253,   254,   255,    -1,
     257,   258,   259,   260,   261,   262,    -1,   264,   265,    -1,
     267,   268,   269,   270,    -1,    -1,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,    -1,   289,   290,   291,   292,   293,   294,   295,   296,
     297,    -1,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,    -1,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,    -1,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,    -1,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,    -1,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,    -1,   375,   376,
      -1,   378,   379,   380,   381,   382,   383,   384,    -1,   386,
     387,    -1,    -1,   390,   391,   392,   393,   394,    -1,   396,
     397,   398,   399,   400,   401,   402,    -1,    -1,   405,   406,
     407,   408,   409,   410,    -1,   412,   413,   414,   415,   416,
     417,   418,    -1,   420,   421,   422,   423,   424,   425,    -1,
      -1,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,    -1,    -1,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     467,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    -1,    53,    54,    55,    56,
      57,    58,    -1,    60,    61,    62,    63,    64,    65,    -1,
      67,    68,    69,    70,    71,    -1,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    -1,    85,    86,
      87,    88,    89,    90,    -1,    92,    93,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,    -1,   113,    -1,   115,   116,
     117,   118,   119,   120,    -1,   122,   123,   124,   125,   126,
      -1,    -1,   129,   130,   131,   132,   133,    -1,   135,   136,
     137,    -1,   139,   140,   141,    -1,   143,   144,   145,   146,
     147,   148,   149,   150,   151,    -1,   153,    -1,   155,   156,
     157,   158,    -1,   160,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,    -1,   171,    -1,   173,   174,    -1,   176,
     177,   178,   179,   180,   181,   182,   183,   184,   185,    -1,
     187,   188,   189,   190,   191,   192,    -1,   194,   195,   196,
     197,   198,   199,   200,   201,   202,    -1,   204,    -1,   206,
     207,   208,   209,   210,   211,   212,   213,   214,   215,    -1,
      -1,   218,   219,   220,   221,    -1,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,    -1,   252,   253,   254,   255,    -1,
     257,   258,   259,   260,   261,   262,    -1,   264,   265,    -1,
      -1,   268,   269,   270,    -1,    -1,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,    -1,   289,   290,   291,   292,   293,   294,   295,   296,
     297,    -1,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,    -1,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,    -1,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,    -1,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,    -1,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,    -1,   375,   376,
      -1,   378,   379,   380,   381,   382,   383,   384,    -1,   386,
     387,    -1,    -1,   390,   391,   392,   393,   394,    -1,   396,
     397,   398,   399,   400,   401,   402,    -1,    -1,   405,   406,
     407,   408,   409,   410,    -1,   412,   413,   414,   415,   416,
     417,   418,    -1,   420,   421,   422,   423,   424,   425,    -1,
      -1,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,    -1,    -1,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     467,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    -1,    53,    54,    55,    56,
      57,    58,    -1,    60,    61,    62,    63,    64,    65,    -1,
      67,    68,    69,    70,    71,    -1,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    -1,    85,    86,
      87,    88,    89,    90,    -1,    92,    93,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,    -1,   113,    -1,   115,   116,
     117,   118,   119,   120,    -1,   122,   123,   124,   125,   126,
      -1,    -1,   129,   130,   131,   132,   133,    -1,   135,   136,
     137,    -1,   139,   140,   141,    -1,   143,   144,   145,   146,
     147,   148,   149,   150,   151,    -1,   153,    -1,   155,   156,
     157,   158,    -1,   160,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,    -1,   171,    -1,   173,   174,    -1,   176,
     177,   178,   179,   180,   181,   182,   183,   184,   185,    -1,
     187,   188,   189,   190,   191,   192,    -1,   194,   195,   196,
     197,   198,   199,   200,   201,   202,    -1,   204,    -1,   206,
     207,   208,   209,   210,   211,   212,   213,   214,   215,    -1,
      -1,   218,   219,   220,   221,    -1,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,    -1,   252,   253,   254,   255,    -1,
     257,   258,   259,   260,   261,   262,    -1,   264,   265,    -1,
      -1,   268,   269,   270,    -1,    -1,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,    -1,   289,   290,   291,   292,   293,   294,   295,   296,
     297,    -1,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,    -1,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,    -1,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,    -1,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,    -1,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,    -1,   375,   376,
      -1,   378,   379,   380,   381,   382,   383,   384,    -1,   386,
     387,    -1,    -1,   390,   391,   392,   393,   394,    -1,   396,
     397,   398,   399,   400,   401,   402,    -1,    -1,   405,   406,
     407,   408,   409,   410,    -1,   412,   413,   414,   415,   416,
     417,   418,    -1,   420,   421,   422,   423,   424,   425,    -1,
      -1,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,    -1,    -1,     3,     4,     5,    -1,
      -1,    -1,     9,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     467,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    -1,    53,    54,    55,    56,
      57,    58,    -1,    -1,    61,    62,    63,    64,    65,    -1,
      67,    68,    69,    70,    71,    -1,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    -1,    85,    86,
      87,    88,    89,    90,    -1,    92,    93,    94,    95,    -1,
      -1,    -1,    99,    -1,    -1,    -1,   103,   104,   105,   106,
     107,   108,   109,   110,   111,    -1,   113,    -1,   115,   116,
     117,   118,   119,   120,    -1,   122,   123,   124,   125,   126,
      -1,    -1,   129,   130,   131,   132,   133,    -1,   135,   136,
     137,    -1,   139,   140,   141,    -1,   143,   144,   145,   146,
     147,   148,   149,   150,   151,   152,   153,    -1,   155,   156,
     157,   158,    -1,   160,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,    -1,   171,    -1,   173,   174,    -1,   176,
     177,   178,   179,   180,   181,   182,   183,   184,   185,    -1,
     187,   188,   189,   190,   191,   192,    -1,   194,   195,   196,
     197,   198,   199,   200,   201,   202,    -1,   204,    -1,   206,
     207,   208,   209,   210,   211,   212,   213,   214,   215,    -1,
      -1,   218,   219,   220,   221,    -1,   223,   224,   225,    -1,
      -1,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,    -1,   252,   253,   254,   255,    -1,
     257,   258,   259,   260,   261,   262,    -1,   264,   265,   266,
      -1,   268,   269,   270,    -1,    -1,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,    -1,   289,   290,   291,   292,   293,   294,   295,   296,
     297,    -1,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,    -1,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,    -1,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,    -1,   344,   345,   346,
     347,   348,    -1,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,    -1,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,    -1,   375,   376,
      -1,   378,   379,   380,   381,   382,   383,   384,    -1,   386,
     387,    -1,    -1,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,    -1,    -1,   405,   406,
     407,   408,   409,    -1,    -1,   412,   413,   414,   415,   416,
     417,   418,    -1,   420,   421,   422,   423,   424,   425,    -1,
      -1,   428,    -1,    -1,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,    -1,    -1,     3,    -1,    -1,    -1,
      -1,   458,   459,   460,    -1,    -1,    -1,    -1,    -1,    -1,
     467,    18,    19,    20,    21,    22,    23,    24,    25,    -1,
      27,    28,    29,    30,    31,    -1,    -1,    -1,    -1,    -1,
      37,    38,    -1,    40,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    -1,    53,    54,    55,    56,
      57,    58,    -1,    -1,    61,    62,    63,    64,    65,    -1,
      67,    68,    69,    70,    71,    -1,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    -1,    85,    86,
      87,    88,    89,    90,    -1,    92,    93,    94,    95,    -1,
      -1,    -1,    99,    -1,    -1,    -1,   103,   104,   105,   106,
     107,   108,   109,   110,   111,    -1,   113,    -1,   115,   116,
     117,   118,   119,   120,    -1,   122,   123,   124,   125,   126,
      -1,    -1,   129,   130,   131,   132,   133,    -1,   135,   136,
     137,    -1,   139,   140,   141,    -1,   143,   144,   145,   146,
     147,   148,   149,   150,   151,    -1,   153,    -1,   155,   156,
     157,   158,    -1,   160,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,    -1,   171,    -1,   173,   174,    -1,   176,
     177,   178,   179,   180,   181,   182,   183,   184,   185,    -1,
     187,   188,   189,   190,   191,   192,    -1,   194,   195,   196,
     197,   198,   199,   200,   201,   202,    -1,   204,    -1,   206,
     207,   208,   209,   210,   211,   212,   213,   214,   215,    -1,
      -1,   218,   219,   220,   221,    -1,   223,   224,   225,    -1,
      -1,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,    -1,   252,   253,   254,   255,    -1,
     257,   258,   259,   260,   261,   262,    -1,   264,   265,    -1,
      -1,   268,   269,   270,    -1,    -1,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,    -1,   289,   290,   291,   292,   293,   294,   295,   296,
     297,    -1,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,    -1,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,    -1,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,    -1,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,    -1,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,    -1,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,    -1,   386,
     387,    -1,    -1,   390,   391,   392,   393,   394,    -1,   396,
     397,   398,   399,   400,   401,   402,    -1,    -1,   405,   406,
     407,   408,   409,    -1,    -1,   412,   413,   414,   415,   416,
     417,   418,    -1,   420,   421,   422,   423,   424,   425,    -1,
      -1,   428,    -1,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,    -1,    -1,   453,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     467,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    -1,    44,    45,
      46,    47,    48,    -1,    50,    51,    -1,    53,    54,    55,
      56,    57,    58,    -1,    -1,    61,    62,    63,    64,    65,
      -1,    67,    68,    69,    70,    71,    -1,    -1,    -1,    75,
      76,    77,    78,    79,    -1,    81,    82,    83,    -1,    85,
      86,    87,    88,    89,    90,    -1,    -1,    93,    94,    95,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,   104,   105,
     106,   107,   108,   109,   110,   111,    -1,   113,    -1,   115,
     116,   117,   118,   119,   120,    -1,   122,   123,   124,   125,
     126,    -1,    -1,   129,   130,   131,   132,   133,    -1,   135,
     136,   137,    -1,   139,   140,   141,    -1,   143,   144,   145,
     146,   147,   148,   149,   150,   151,    -1,   153,    -1,   155,
     156,   157,   158,    -1,   160,    -1,   162,    -1,    -1,    -1,
     166,   167,   168,   169,    -1,   171,    -1,   173,   174,    -1,
     176,   177,   178,   179,   180,    -1,   182,   183,   184,   185,
      -1,   187,   188,   189,   190,   191,   192,    -1,   194,    -1,
     196,   197,   198,   199,   200,   201,   202,    -1,   204,    -1,
     206,    -1,    -1,   209,    -1,   211,   212,   213,   214,   215,
      -1,    -1,   218,    -1,   220,    -1,    -1,   223,   224,   225,
      -1,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,    -1,
     246,   247,   248,   249,   250,    -1,   252,   253,    -1,   255,
      -1,   257,   258,   259,   260,   261,   262,    -1,   264,   265,
      -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,    -1,
     276,    -1,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,    -1,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,    -1,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
      -1,   327,   328,    -1,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,    -1,   350,   351,   352,   353,   354,    -1,
     356,   357,   358,   359,    -1,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,    -1,   375,
     376,   377,   378,    -1,   380,   381,   382,   383,   384,    -1,
     386,   387,    -1,    -1,   390,   391,   392,   393,   394,    -1,
     396,   397,   398,   399,   400,   401,   402,    -1,    -1,   405,
     406,   407,   408,   409,    -1,    -1,   412,   413,   414,   415,
     416,   417,   418,    -1,   420,    -1,   422,   423,   424,   425,
      -1,    -1,   428,    -1,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,    -1,    -1,   453,     3,    -1,
       5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   467,    -1,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,    44,
      45,    46,    47,    48,    -1,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    -1,    -1,    61,    62,    63,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    -1,    -1,
      75,    76,    77,    78,    79,    -1,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    -1,    -1,    93,    94,
      95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,   104,
     105,   106,   107,   108,   109,   110,   111,    -1,   113,    -1,
     115,   116,   117,   118,   119,   120,    -1,   122,   123,   124,
     125,   126,    -1,    -1,   129,   130,   131,   132,   133,    -1,
     135,   136,   137,    -1,   139,   140,   141,    -1,   143,   144,
     145,   146,   147,   148,   149,   150,   151,    -1,   153,    -1,
     155,   156,   157,   158,    -1,   160,    -1,   162,    -1,    -1,
      -1,   166,   167,   168,   169,    -1,   171,    -1,   173,   174,
      -1,   176,   177,   178,   179,   180,    -1,   182,   183,   184,
     185,    -1,   187,   188,   189,   190,   191,   192,    -1,   194,
      -1,   196,   197,   198,   199,   200,   201,   202,    -1,   204,
      -1,   206,    -1,    -1,   209,    -1,   211,   212,   213,   214,
     215,    -1,    -1,   218,    -1,   220,    -1,    -1,   223,   224,
     225,    -1,    -1,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
      -1,   246,   247,   248,   249,   250,    -1,   252,   253,    -1,
     255,    -1,   257,   258,   259,   260,   261,   262,    -1,   264,
     265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,
      -1,   276,    -1,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,    -1,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,    -1,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,    -1,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,    -1,   350,   351,   352,   353,   354,
      -1,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,    -1,   378,    -1,   380,   381,   382,   383,   384,
      -1,   386,   387,    -1,    -1,   390,   391,   392,   393,   394,
      -1,   396,   397,   398,   399,   400,   401,   402,    -1,    -1,
     405,   406,   407,   408,   409,    -1,    -1,   412,   413,   414,
     415,   416,   417,   418,    -1,   420,    -1,   422,   423,   424,
     425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,    -1,    -1,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   467,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,    44,
      45,    46,    47,    48,    -1,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    -1,    -1,    61,    62,    63,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    -1,    -1,
      75,    76,    77,    78,    79,    -1,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    -1,    -1,    93,    94,
      95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,   104,
     105,   106,   107,   108,   109,   110,   111,    -1,   113,    -1,
     115,   116,   117,   118,   119,   120,    -1,   122,   123,   124,
     125,   126,    -1,    -1,   129,   130,   131,   132,   133,    -1,
     135,   136,   137,    -1,   139,   140,   141,    -1,   143,   144,
     145,   146,   147,   148,   149,   150,   151,    -1,   153,    -1,
     155,   156,   157,   158,    -1,   160,    -1,   162,    -1,    -1,
      -1,   166,   167,   168,   169,    -1,   171,    -1,   173,   174,
      -1,   176,   177,   178,   179,   180,    -1,   182,   183,   184,
     185,    -1,   187,   188,   189,   190,   191,   192,    -1,   194,
      -1,   196,   197,   198,   199,   200,   201,   202,    -1,   204,
      -1,   206,    -1,    -1,   209,    -1,   211,   212,   213,   214,
     215,    -1,    -1,   218,    -1,   220,    -1,    -1,   223,   224,
     225,    -1,    -1,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
      -1,   246,   247,   248,   249,   250,    -1,   252,   253,    -1,
     255,    -1,   257,   258,   259,   260,   261,   262,    -1,   264,
     265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,
      -1,   276,    -1,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,    -1,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,    -1,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,    -1,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,    -1,   350,   351,   352,   353,   354,
      -1,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,    -1,   378,    -1,   380,   381,   382,   383,   384,
      -1,   386,   387,    -1,    -1,   390,   391,   392,   393,   394,
      -1,   396,   397,   398,   399,   400,   401,   402,    -1,    -1,
     405,   406,   407,   408,   409,    -1,    -1,   412,   413,   414,
     415,   416,   417,   418,    -1,   420,    -1,   422,   423,   424,
     425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,    -1,    -1,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   467,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,    44,
      45,    46,    47,    48,    -1,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    -1,    -1,    61,    62,    63,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    -1,    -1,
      75,    76,    77,    78,    79,    -1,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    -1,    -1,    93,    94,
      95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,   104,
     105,   106,   107,   108,   109,   110,   111,    -1,   113,    -1,
     115,   116,   117,   118,   119,   120,    -1,   122,   123,   124,
     125,   126,    -1,    -1,   129,   130,   131,   132,   133,    -1,
     135,   136,   137,    -1,   139,   140,   141,    -1,   143,   144,
     145,   146,   147,   148,   149,   150,   151,    -1,   153,    -1,
     155,   156,   157,   158,    -1,   160,    -1,   162,    -1,    -1,
      -1,   166,   167,   168,   169,    -1,   171,    -1,   173,   174,
      -1,   176,   177,   178,   179,   180,    -1,   182,   183,   184,
     185,    -1,   187,   188,   189,   190,   191,   192,    -1,   194,
      -1,   196,   197,   198,   199,   200,   201,   202,    -1,   204,
      -1,   206,    -1,    -1,   209,    -1,   211,   212,   213,   214,
     215,    -1,    -1,   218,    -1,   220,    -1,    -1,   223,   224,
     225,    -1,    -1,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
      -1,   246,   247,   248,   249,   250,    -1,   252,   253,    -1,
     255,    -1,   257,   258,   259,   260,   261,   262,    -1,   264,
     265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,
      -1,   276,    -1,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,    -1,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,    -1,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,    -1,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,    -1,   350,   351,   352,   353,   354,
      -1,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,    -1,   378,    -1,   380,   381,   382,   383,   384,
      -1,   386,   387,    -1,    -1,   390,   391,   392,   393,   394,
      -1,   396,   397,   398,   399,   400,   401,   402,    -1,    -1,
     405,   406,   407,   408,   409,    -1,    -1,   412,   413,   414,
     415,   416,   417,   418,    -1,   420,    -1,   422,   423,   424,
     425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,    -1,    -1,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   467,    18,    19,    20,    21,    22,    23,    24,
      25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,    44,
      45,    46,    47,    48,    -1,    50,    51,    -1,    53,    54,
      55,    56,    57,    58,    -1,    -1,    61,    62,    63,    64,
      65,    -1,    67,    68,    69,    70,    71,    -1,    -1,    -1,
      75,    76,    77,    78,    79,    -1,    81,    82,    83,    -1,
      85,    86,    87,    88,    89,    90,    -1,    -1,    93,    94,
      95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,   104,
     105,   106,   107,   108,   109,   110,   111,    -1,   113,    -1,
     115,   116,   117,   118,   119,   120,    -1,   122,   123,   124,
     125,   126,    -1,    -1,   129,   130,   131,   132,   133,    -1,
     135,   136,   137,    -1,   139,   140,   141,    -1,   143,   144,
     145,   146,   147,   148,   149,   150,   151,    -1,   153,    -1,
     155,   156,   157,   158,    -1,   160,    -1,   162,    -1,    -1,
      -1,   166,   167,   168,   169,    -1,   171,    -1,   173,   174,
      -1,   176,   177,   178,   179,   180,    -1,   182,   183,   184,
     185,    -1,   187,   188,   189,   190,   191,   192,    -1,   194,
      -1,   196,   197,   198,   199,   200,   201,   202,    -1,   204,
      -1,   206,    -1,    -1,   209,    -1,   211,   212,   213,   214,
     215,    -1,    -1,   218,    -1,   220,    -1,    -1,   223,   224,
     225,    -1,    -1,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
      -1,   246,   247,   248,   249,   250,    -1,   252,   253,    -1,
     255,    -1,   257,   258,   259,   260,   261,   262,    -1,   264,
     265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,
      -1,   276,    -1,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,    -1,   289,   290,   291,   292,   293,   294,
     295,   296,   297,    -1,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,    -1,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,    -1,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,    -1,   350,   351,   352,   353,   354,
      -1,   356,   357,   358,   359,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,    -1,
     375,   376,    -1,   378,    -1,   380,   381,   382,   383,   384,
      -1,   386,   387,    -1,    -1,   390,   391,   392,   393,   394,
      -1,   396,   397,   398,   399,   400,   401,   402,    -1,    -1,
     405,   406,   407,   408,   409,    -1,    -1,   412,   413,   414,
     415,   416,   417,   418,    -1,   420,    -1,   422,   423,   424,
     425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,    -1,    -1,    -1,    -1,
      -1,     3,     4,     5,    -1,    -1,     8,     9,    -1,    -1,
      -1,    -1,   467,    15,    16,    17,    18,    19,    20,    21,
      22,    23,    24,    25,    26,    27,    28,    29,    30,    31,
      32,    33,    34,    35,    36,    37,    38,    39,    40,    41,
      42,    43,    44,    45,    46,    -1,    48,    49,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    74,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    86,    87,    88,    89,    90,    91,
      92,    93,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   129,   130,   131,
     132,   133,   134,   135,   136,   137,   138,   139,   140,   141,
     142,   143,   144,   145,   146,    -1,   148,   149,   150,    -1,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,   166,   167,   168,   169,   170,   171,
     172,    -1,   174,   175,   176,   177,   178,   179,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   195,    -1,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,    -1,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,    -1,   275,   276,   277,    -1,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,    -1,
     292,   293,    -1,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,    -1,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,    -1,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
      -1,   393,    -1,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,    -1,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   448,   449,   450,    -1,
       3,    -1,   454,   455,   456,     8,   458,   459,   460,   461,
     462,   463,    15,    16,    17,    18,    19,    20,    21,    22,
      23,    24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,
      -1,    44,    45,    46,    47,    48,    -1,    50,    51,    -1,
      53,    54,    55,    56,    57,    58,    -1,    -1,    61,    62,
      63,    64,    65,    -1,    67,    68,    69,    70,    71,    -1,
      -1,    -1,    75,    76,    77,    78,    79,    -1,    81,    82,
      83,    -1,    85,    86,    87,    88,    89,    90,    -1,    -1,
      93,    94,    95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     103,   104,   105,   106,   107,   108,   109,   110,   111,    -1,
     113,    -1,   115,   116,   117,   118,   119,   120,    -1,   122,
     123,   124,   125,   126,    -1,    -1,   129,   130,   131,   132,
     133,    -1,   135,   136,   137,    -1,   139,   140,   141,    -1,
     143,   144,   145,   146,   147,   148,   149,   150,   151,    -1,
     153,    -1,   155,   156,   157,   158,    -1,   160,    -1,   162,
      -1,    -1,    -1,   166,   167,   168,   169,    -1,   171,    -1,
     173,   174,    -1,   176,   177,   178,   179,   180,    -1,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,   191,   192,
      -1,   194,    -1,   196,   197,   198,   199,   200,   201,   202,
      -1,   204,    -1,   206,    -1,    -1,   209,    -1,   211,   212,
     213,   214,   215,    -1,    -1,   218,    -1,   220,    -1,    -1,
     223,   224,   225,    -1,    -1,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,    -1,   246,   247,   248,   249,   250,    -1,   252,
     253,    -1,   255,    -1,   257,   258,   259,   260,   261,   262,
      -1,   264,   265,    -1,    -1,   268,   269,   270,    -1,    -1,
     273,   274,    -1,   276,    -1,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,    -1,   289,   290,   291,   292,
     293,   294,   295,   296,   297,    -1,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
      -1,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,    -1,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
      -1,   344,   345,   346,   347,   348,    -1,   350,   351,   352,
     353,   354,    -1,   356,   357,   358,   359,    -1,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,    -1,   375,   376,    -1,   378,    -1,   380,   381,   382,
     383,   384,    -1,   386,   387,    -1,    -1,   390,   391,   392,
     393,   394,    -1,   396,   397,   398,   399,   400,   401,   402,
      -1,    -1,   405,   406,   407,   408,   409,    -1,    -1,   412,
     413,   414,   415,   416,   417,   418,    -1,   420,    -1,   422,
     423,   424,   425,    -1,    -1,   428,    -1,    -1,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,    -1,    -1,
      -1,   454,   455,   456,    -1,   458,   459,   460,   461,   462,
     463,     8,    -1,    -1,    11,    -1,    -1,    -1,    15,    16,
      17,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     8,
      -1,    -1,    11,    -1,    -1,    32,    15,    16,    17,    -1,
      -1,    -1,    -1,    40,    -1,    -1,    -1,    -1,     8,    -1,
      47,    11,    -1,    32,    -1,    15,    16,    17,    -1,    -1,
      -1,    40,    -1,     8,    -1,    -1,    11,    -1,    47,    -1,
      -1,    -1,    32,    -1,    -1,    72,    -1,    -1,    -1,    -1,
      40,    -1,     8,    -1,    -1,    11,    -1,    47,    -1,    15,
      16,    17,    -1,    72,    -1,    40,    -1,    -1,    -1,    -1,
       8,    -1,    47,    11,    -1,    -1,    32,    15,    16,    17,
      -1,    -1,    72,    -1,    40,    -1,    -1,    -1,    -1,    -1,
      -1,    47,    -1,    -1,    32,    -1,    -1,    72,    -1,    -1,
      -1,    -1,    40,    -1,    -1,    -1,    -1,    -1,    -1,    47,
      -1,     8,    -1,    -1,    11,    -1,    72,    -1,    15,    16,
      17,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    72,    32,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    40,    -1,    -1,    -1,    -1,    -1,    -1,
      47,    -1,    -1,    -1,   181,    -1,    -1,    -1,    -1,   186,
      -1,    -1,    -1,    -1,    -1,   140,    -1,    -1,    -1,    -1,
      -1,    -1,   181,    -1,    -1,    72,    -1,   186,    -1,    -1,
     207,   208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   181,    -1,    -1,   221,    -1,   186,    -1,   207,   208,
      -1,    -1,    -1,    -1,    -1,    -1,   181,    -1,    -1,    -1,
      -1,   186,   221,    -1,    -1,    -1,    -1,   207,   208,    -1,
      -1,    -1,    -1,    -1,   251,   181,    -1,   254,    -1,    -1,
     186,   221,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   268,   251,   181,   271,   254,   221,    -1,   186,    -1,
      -1,   207,   208,    -1,    -1,    -1,    -1,    -1,    -1,   268,
      -1,   251,   271,    -1,   254,   221,    -1,    -1,    -1,   207,
     208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   268,    -1,
      -1,   271,    -1,   221,   181,    -1,    -1,    -1,    -1,   186,
      -1,    -1,    -1,   268,    -1,   251,    -1,    -1,   254,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     207,   208,   268,   251,    -1,   271,   254,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   221,    -1,    -1,    -1,   355,    -1,
     268,    -1,    -1,   271,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   355,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   251,    -1,    -1,   254,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   355,    -1,    -1,    -1,    -1,
      -1,   268,    -1,    -1,   271,    -1,    -1,    -1,    -1,    -1,
     355,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   355,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   355,    -1,    -1,
      -1,    -1,    -1,    -1,   451,    -1,    -1,   454,   455,   456,
      -1,   458,   459,   460,   461,   462,   463,    -1,    -1,    -1,
      -1,   468,   451,    -1,    -1,   454,   455,   456,    -1,   458,
     459,   460,   461,   462,   463,    -1,    -1,    -1,   355,   468,
      -1,   451,    -1,    -1,   454,   455,   456,    -1,   458,   459,
     460,   461,   462,   463,    -1,    -1,   451,    -1,   468,    -1,
      -1,    -1,    -1,   458,   459,   460,   461,   462,   463,    -1,
      -1,    -1,    -1,    -1,    -1,   451,    -1,    -1,   454,   455,
     456,    -1,   458,   459,   460,   461,   462,   463,    -1,    -1,
      -1,    -1,   468,   451,    -1,    -1,   454,   455,   456,    -1,
     458,   459,   460,   461,   462,   463,    -1,    -1,    -1,    -1,
     468,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   451,     3,    -1,   454,   455,   456,
      -1,   458,   459,   460,   461,   462,   463,    -1,    -1,   466,
      18,    19,    20,    21,    22,    23,    24,    25,    26,    27,
      28,    29,    30,    31,    32,    33,    34,    35,    36,    37,
      38,    39,    40,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,    71,    72,    73,    74,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    86,    87,
      88,    89,    90,    91,    92,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
     138,   139,   140,   141,   142,   143,   144,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   169,   170,   171,   172,   173,   174,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   460,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    -1,    44,    45,    46,    47,    48,    -1,
      50,    51,    -1,    53,    54,    55,    56,    57,    58,    -1,
      -1,    61,    62,    63,    64,    65,    -1,    67,    68,    69,
      70,    71,    -1,    -1,    -1,    75,    76,    77,    78,    79,
      -1,    81,    82,    83,    -1,    85,    86,    87,    88,    89,
      90,    -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   103,   104,   105,   106,   107,   108,   109,
     110,   111,    -1,   113,    -1,   115,   116,   117,   118,   119,
     120,    -1,   122,   123,   124,   125,   126,    -1,    -1,   129,
     130,   131,   132,   133,    -1,   135,   136,   137,    -1,   139,
     140,   141,    -1,   143,   144,   145,   146,   147,   148,   149,
     150,   151,    -1,   153,    -1,   155,   156,   157,   158,    -1,
     160,    -1,   162,    -1,    -1,    -1,   166,   167,   168,   169,
      -1,   171,    -1,   173,   174,    -1,   176,   177,   178,   179,
     180,    -1,   182,   183,   184,   185,    -1,   187,   188,   189,
     190,   191,   192,    -1,   194,    -1,   196,   197,   198,   199,
     200,   201,   202,    -1,   204,    -1,   206,    -1,    -1,   209,
      -1,   211,   212,   213,   214,   215,    -1,    -1,   218,    -1,
     220,    -1,    -1,   223,   224,   225,    -1,    -1,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,    -1,   246,   247,   248,   249,
     250,    -1,   252,   253,    -1,   255,    -1,   257,   258,   259,
     260,   261,   262,    -1,   264,   265,    -1,    -1,   268,   269,
     270,    -1,    -1,   273,   274,    -1,   276,    -1,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,    -1,   289,
     290,   291,   292,   293,   294,   295,   296,   297,    -1,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,    -1,   327,   328,    -1,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,    -1,
     350,   351,   352,   353,   354,    -1,   356,   357,   358,   359,
      -1,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,    -1,   375,   376,    -1,   378,    -1,
     380,   381,   382,   383,   384,    -1,   386,   387,    -1,    -1,
     390,   391,   392,   393,   394,    -1,   396,   397,   398,   399,
     400,   401,   402,    -1,    -1,   405,   406,   407,   408,   409,
      -1,    -1,   412,   413,   414,   415,   416,   417,   418,    -1,
     420,    -1,   422,   423,   424,   425,    -1,    -1,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,     3,     4,     5,    -1,    -1,    -1,     9,    -1,    -1,
     460,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      -1,    53,    54,    55,    56,    57,    58,    -1,    -1,    61,
      62,    63,    64,    65,    -1,    67,    68,    69,    70,    71,
      -1,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    -1,    85,    86,    87,    88,    89,    90,    -1,
      92,    93,    94,    95,    -1,    -1,    -1,    99,    -1,    -1,
      -1,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,    -1,   115,   116,   117,   118,   119,   120,    -1,
     122,   123,   124,   125,   126,    -1,    -1,   129,   130,   131,
     132,   133,    -1,   135,   136,   137,    -1,   139,   140,   141,
      -1,   143,   144,   145,   146,   147,   148,   149,   150,   151,
     152,   153,    -1,   155,   156,   157,   158,    -1,   160,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,    -1,   171,
      -1,   173,   174,    -1,   176,   177,   178,   179,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,   190,   191,
     192,    -1,   194,   195,   196,   197,   198,   199,   200,   201,
     202,    -1,   204,    -1,   206,   207,   208,   209,   210,   211,
     212,   213,   214,   215,    -1,    -1,   218,   219,   220,   221,
      -1,   223,   224,   225,    -1,    -1,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,    -1,
     252,   253,   254,   255,    -1,   257,   258,   259,   260,   261,
     262,    -1,   264,   265,   266,    -1,   268,   269,   270,    -1,
      -1,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,    -1,   289,   290,   291,
     292,   293,   294,   295,   296,   297,    -1,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,    -1,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,    -1,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,    -1,   344,   345,   346,   347,   348,    -1,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,    -1,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,    -1,   375,   376,    -1,   378,   379,   380,   381,
     382,   383,   384,    -1,   386,   387,    -1,    -1,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,    -1,    -1,   405,   406,   407,   408,   409,    -1,    -1,
     412,   413,   414,   415,   416,   417,   418,    -1,   420,   421,
     422,   423,   424,   425,    -1,    -1,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,     3,
       4,     5,    -1,    -1,    -1,     9,   458,   459,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    -1,    53,
      54,    55,    56,    57,    58,    -1,    -1,    61,    62,    63,
      64,    65,    -1,    67,    68,    69,    70,    71,    -1,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      -1,    85,    86,    87,    88,    89,    90,    -1,    92,    93,
      94,    95,    -1,    -1,    -1,    99,    -1,    -1,    -1,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
      -1,   115,   116,   117,   118,   119,   120,    -1,   122,   123,
     124,   125,   126,    -1,    -1,   129,   130,   131,   132,   133,
      -1,   135,   136,   137,    -1,   139,   140,   141,    -1,   143,
     144,   145,   146,   147,   148,   149,   150,   151,   152,   153,
      -1,   155,   156,   157,   158,    -1,   160,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,    -1,   171,    -1,   173,
     174,    -1,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,    -1,   187,   188,   189,   190,   191,   192,    -1,
     194,   195,   196,   197,   198,   199,   200,   201,   202,    -1,
     204,    -1,   206,   207,   208,   209,   210,   211,   212,   213,
     214,   215,    -1,    -1,   218,   219,   220,   221,    -1,   223,
     224,   225,    -1,    -1,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,    -1,   252,   253,
     254,   255,    -1,   257,   258,   259,   260,   261,   262,    -1,
     264,   265,   266,    -1,   268,   269,   270,    -1,    -1,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,    -1,   289,   290,   291,   292,   293,
     294,   295,   296,   297,    -1,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,    -1,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,    -1,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,    -1,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,    -1,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
      -1,   375,   376,    -1,   378,   379,   380,   381,   382,   383,
     384,    -1,   386,   387,    -1,    -1,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,    -1,
      -1,   405,   406,   407,   408,   409,    -1,    -1,   412,   413,
     414,   415,   416,   417,   418,    -1,   420,   421,   422,   423,
     424,   425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,     3,     4,     5,
      -1,    -1,    -1,     9,   458,   459,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    -1,    53,    54,    55,
      56,    57,    58,    -1,    -1,    61,    62,    63,    64,    65,
      -1,    67,    68,    69,    70,    71,    -1,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    -1,    85,
      86,    87,    88,    89,    90,    -1,    92,    93,    94,    95,
      -1,    -1,    -1,    99,    -1,    -1,    -1,   103,   104,   105,
     106,   107,   108,   109,   110,   111,    -1,   113,    -1,   115,
     116,   117,   118,   119,   120,    -1,   122,   123,   124,   125,
     126,    -1,    -1,   129,   130,   131,   132,   133,    -1,   135,
     136,   137,    -1,   139,   140,   141,    -1,   143,   144,   145,
     146,   147,   148,   149,   150,   151,   152,   153,    -1,   155,
     156,   157,   158,    -1,   160,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,    -1,   171,    -1,   173,   174,    -1,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
      -1,   187,   188,   189,   190,   191,   192,    -1,   194,   195,
     196,   197,   198,   199,   200,   201,   202,    -1,   204,    -1,
     206,   207,   208,   209,   210,   211,   212,   213,   214,   215,
      -1,    -1,   218,   219,   220,   221,    -1,   223,   224,   225,
      -1,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,    -1,   252,   253,   254,   255,
      -1,   257,   258,   259,   260,   261,   262,    -1,   264,   265,
     266,    -1,   268,   269,   270,    -1,    -1,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,    -1,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,    -1,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
      -1,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,    -1,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,    -1,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,    -1,   375,
     376,    -1,   378,   379,   380,   381,   382,   383,   384,    -1,
     386,   387,    -1,    -1,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,    -1,    -1,   405,
     406,   407,   408,   409,    -1,    -1,   412,   413,   414,   415,
     416,   417,   418,    -1,   420,   421,   422,   423,   424,   425,
      -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,    -1,    -1,     8,    -1,    -1,
      11,    -1,   458,   459,    15,    16,    17,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,     8,    -1,    -1,    11,    -1,
      -1,    32,    15,    16,    17,    36,    -1,    -1,    -1,    40,
      -1,    -1,    -1,    -1,     8,    -1,    47,    11,    -1,    32,
      -1,    15,    16,    17,    -1,    -1,    -1,    40,    -1,    -1,
      -1,    -1,    -1,    -1,    47,    -1,    -1,    -1,    32,    -1,
      -1,    72,    -1,    -1,    -1,    -1,    40,    -1,     8,    -1,
      -1,    11,    -1,    47,    -1,    15,    16,    17,    -1,    72,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    32,    -1,    -1,    35,    -1,    -1,    72,    -1,
      40,    -1,    -1,    -1,    -1,    -1,    -1,    47,    -1,     8,
     121,    -1,    11,    -1,    -1,    -1,    15,    16,    17,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    72,    32,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    40,    -1,    -1,    -1,    -1,    -1,    -1,    47,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   159,    -1,    -1,    -1,
     181,   164,    -1,    72,    -1,   186,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   158,    -1,    -1,    -1,   181,    -1,
      -1,    -1,    -1,   186,    -1,    -1,   207,   208,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   181,    -1,    -1,
     221,    -1,   186,    -1,   207,   208,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   221,    -1,
      -1,    -1,    -1,   207,   208,    -1,    -1,    -1,    -1,    -1,
     251,   181,    -1,   254,    -1,    -1,   186,   221,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   268,   251,    -1,
     271,   254,    -1,    -1,    -1,    -1,    -1,   207,   208,    -1,
      -1,    -1,    -1,    -1,    -1,   268,    -1,   251,   271,    -1,
     254,   221,   181,    -1,    -1,    -1,    -1,   186,    -1,    -1,
      -1,    -1,    -1,    -1,   268,    -1,    -1,   271,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   207,   208,
      -1,   251,    -1,    -1,   254,    -1,    -1,    -1,    -1,   293,
      -1,    -1,   221,    -1,    -1,    -1,     8,    -1,   268,    11,
      -1,   271,    -1,    15,    16,    17,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   355,    -1,    -1,    -1,    -1,    -1,
      32,    -1,   251,    35,    -1,   254,    -1,    -1,    40,    -1,
      -1,    -1,   355,    -1,    -1,    47,    -1,    -1,    -1,   268,
      -1,     8,   271,    -1,    11,    -1,    -1,    -1,    15,    16,
      17,   355,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   288,
      72,    -1,    -1,    -1,    -1,    32,    -1,    -1,    -1,    -1,
     411,    -1,    -1,    40,    -1,    -1,    -1,    -1,    -1,    -1,
      47,    -1,    -1,    -1,    -1,   355,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    72,    -1,    -1,    -1,    -1,
     451,    -1,    -1,   454,   455,   456,    -1,   458,   459,   460,
     461,   462,   463,    -1,    -1,    -1,   355,    -1,   451,    -1,
      -1,   454,   455,   456,    -1,   458,   459,   460,   461,   462,
     463,    -1,    -1,    -1,    -1,    -1,    -1,   451,    -1,    -1,
     454,   455,   456,    -1,   458,   459,   460,   461,   462,   463,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   181,
      -1,    -1,    -1,    -1,   186,    -1,    -1,    -1,    -1,    -1,
      -1,   451,    -1,    -1,   454,   455,   456,    -1,   458,   459,
     460,   461,   462,   463,    -1,   207,   208,   164,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   221,
      -1,    -1,    -1,     8,   181,    -1,    11,    -1,    -1,   186,
      -1,    -1,   451,    -1,    -1,   454,   455,   456,    -1,   458,
     459,   460,   461,   462,   463,    -1,    -1,    -1,    -1,   251,
     207,   208,   254,    -1,    -1,    40,    -1,    -1,    -1,    -1,
      -1,    -1,    47,    -1,   221,    -1,   268,     8,    -1,   271,
      11,    -1,    -1,    -1,    15,    16,    17,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    -1,    -1,    -1,    72,    -1,    -1,
      -1,    32,    -1,    -1,   251,    -1,    -1,   254,    -1,    40,
      -1,    -1,    -1,    -1,    -1,    -1,    47,    -1,    -1,     8,
      -1,   268,    11,    -1,   271,    -1,    15,    16,    17,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    72,    -1,    32,    73,    -1,    -1,    -1,    -1,    -1,
      -1,    40,    -1,     8,    -1,    -1,    11,    -1,    47,    88,
      15,    16,    17,   355,    -1,   140,    -1,    -1,    -1,    -1,
      -1,     8,    -1,    -1,    11,    -1,    -1,    32,    15,    16,
      17,    -1,    -1,    72,    -1,    40,    -1,    -1,    -1,    -1,
      -1,    -1,    47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    40,    -1,    -1,   181,    -1,   355,    -1,
      47,   186,   141,    -1,    -1,    -1,    -1,    72,    -1,    -1,
     149,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   161,    -1,    -1,    72,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   221,    -1,    -1,    -1,
     181,    -1,    -1,    -1,    -1,   186,    -1,    -1,    -1,   451,
     189,    -1,   454,   455,   456,    -1,   458,   459,   460,   461,
     462,   463,    -1,    -1,    -1,    -1,   207,   208,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     221,    -1,   181,   268,    -1,    -1,    -1,   186,    -1,    -1,
      -1,    -1,    -1,    -1,   451,   234,    -1,   454,   455,   456,
      -1,   458,   459,   460,   461,   462,   463,    -1,   207,   208,
     251,    -1,    -1,   254,    -1,    -1,   181,    -1,    -1,    -1,
      -1,   186,   221,    -1,    -1,    -1,    -1,   268,    -1,    -1,
     271,    -1,    -1,    -1,   181,    -1,    -1,    -1,    -1,   186,
      -1,    -1,   207,   208,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   290,   251,    -1,    -1,   254,   221,    -1,    -1,    -1,
     207,   208,    -1,    -1,    -1,   304,    -1,    -1,    -1,   268,
     355,    -1,   271,    -1,   221,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   251,    -1,    -1,   254,
      -1,    -1,    -1,    -1,    -1,    -1,   335,    -1,   337,    -1,
      -1,    -1,    -1,   268,    -1,   344,    -1,   254,   347,    -1,
      -1,    -1,    -1,    -1,   355,    -1,    -1,    -1,    -1,    -1,
      -1,   268,    -1,    -1,    -1,    -1,    -1,   366,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   377,    -1,
      -1,    -1,    -1,    -1,   385,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   393,    -1,   355,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   451,    -1,    -1,    -1,
      -1,    -1,    -1,   458,   459,   460,   461,   462,   463,    -1,
      -1,    -1,    -1,    -1,   423,    -1,    -1,    -1,    -1,    -1,
     355,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   355,    -1,
     451,    -1,    -1,   454,   455,   456,    -1,   458,   459,   460,
     461,   462,   463,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   451,    -1,    -1,   454,   455,   456,    -1,   458,
     459,   460,   461,   462,   463,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   451,    -1,    -1,   454,
     455,   456,    -1,   458,   459,   460,   461,   462,   463,    -1,
      -1,    -1,    -1,     3,   451,     5,    -1,   454,   455,   456,
      -1,   458,   459,   460,   461,   462,   463,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    31,    32,    33,    34,    35,    36,    37,    38,    39,
      40,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,    71,    72,    73,    74,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    86,    87,    88,    89,
      90,    91,    92,    93,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,   116,   117,   118,   119,
     120,   121,   122,   123,   124,   125,   126,   127,   128,   129,
     130,   131,   132,   133,   134,   135,   136,   137,   138,   139,
     140,   141,   142,   143,   144,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,   166,   167,   168,   169,
     170,   171,   172,   173,   174,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     210,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    26,    27,    28,    29,    30,    31,
      32,    33,    34,    35,    36,    37,    38,    39,    40,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,    73,    74,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    86,    87,    88,    89,    90,    91,
      92,    93,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   129,   130,   131,
     132,   133,   134,   135,   136,   137,   138,   139,   140,   141,
     142,   143,   144,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,   166,   167,   168,   169,   170,   171,
     172,   173,   174,   175,   176,   177,   178,   179,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    26,    27,    28,    29,    30,    31,    32,    33,
      34,    35,    36,    37,    38,    39,    40,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
      74,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    86,    87,    88,    89,    90,    91,    92,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   127,   128,   129,   130,   131,   132,   133,
     134,   135,   136,   137,   138,   139,   140,   141,   142,   143,
     144,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   173,
     174,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   210,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    -1,    53,    54,    55,
      56,    57,    58,    -1,    60,    61,    62,    63,    64,    65,
      -1,    67,    68,    69,    70,    71,    -1,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    -1,    85,
      86,    87,    88,    89,    90,    -1,    92,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,    -1,   113,    -1,   115,
     116,   117,   118,   119,   120,    -1,   122,   123,   124,   125,
     126,    -1,    -1,   129,   130,   131,   132,   133,    -1,   135,
     136,   137,    -1,   139,   140,   141,    -1,   143,   144,   145,
     146,   147,   148,   149,   150,   151,    -1,   153,    -1,   155,
     156,   157,   158,    -1,   160,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,    -1,   171,    -1,   173,   174,    -1,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
      -1,   187,   188,   189,   190,   191,   192,    -1,   194,   195,
     196,   197,   198,   199,   200,   201,   202,    -1,   204,    -1,
     206,   207,   208,   209,   210,   211,   212,   213,   214,   215,
      -1,    -1,   218,   219,   220,   221,    -1,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,    -1,   252,   253,   254,   255,
      -1,   257,   258,   259,   260,   261,   262,    -1,   264,   265,
      -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,    -1,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,    -1,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
      -1,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,    -1,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,    -1,   375,
     376,    -1,   378,   379,   380,   381,   382,   383,   384,    -1,
     386,   387,    -1,    -1,   390,   391,   392,   393,   394,    -1,
     396,   397,   398,   399,   400,   401,   402,    -1,    -1,   405,
     406,   407,   408,   409,   410,    -1,   412,   413,   414,   415,
     416,   417,   418,    -1,   420,   421,   422,   423,   424,   425,
      -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,     3,    -1,     5,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    -1,    53,    54,    55,    56,    57,
      58,    -1,    -1,    61,    62,    63,    64,    65,    -1,    67,
      68,    69,    70,    71,    -1,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    -1,    85,    86,    87,
      88,    89,    90,    -1,    92,    93,    94,    95,    -1,    -1,
      -1,    99,    -1,    -1,    -1,   103,   104,   105,   106,   107,
     108,   109,   110,   111,    -1,   113,    -1,   115,   116,   117,
     118,   119,   120,    -1,   122,   123,   124,   125,   126,    -1,
      -1,   129,   130,   131,   132,   133,    -1,   135,   136,   137,
      -1,   139,   140,   141,    -1,   143,   144,   145,   146,   147,
     148,   149,   150,   151,   152,   153,    -1,   155,   156,   157,
     158,    -1,   160,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,    -1,   171,    -1,   173,   174,    -1,   176,   177,
     178,   179,   180,   181,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,   191,   192,    -1,   194,   195,   196,   197,
     198,   199,   200,   201,   202,    -1,   204,    -1,   206,   207,
     208,   209,   210,   211,   212,   213,   214,   215,    -1,    -1,
     218,   219,   220,   221,    -1,   223,   224,   225,    -1,    -1,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,    -1,   252,   253,   254,   255,    -1,   257,
     258,   259,   260,   261,   262,    -1,   264,   265,   266,    -1,
     268,   269,   270,    -1,    -1,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
      -1,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,    -1,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,    -1,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,    -1,   375,   376,    -1,
     378,   379,   380,   381,   382,   383,   384,    -1,   386,   387,
      -1,    -1,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,    -1,    -1,   405,   406,   407,
     408,   409,    -1,    -1,   412,   413,   414,   415,   416,   417,
     418,    -1,   420,   421,   422,   423,   424,   425,    -1,    -1,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      30,    31,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    -1,    53,    54,    55,    56,    57,    58,    -1,
      -1,    61,    62,    63,    64,    65,    -1,    67,    68,    69,
      70,    71,    -1,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    -1,    85,    86,    87,    88,    89,
      90,    -1,    92,    93,    94,    95,    -1,    -1,    -1,    99,
      -1,    -1,    -1,   103,   104,   105,   106,   107,   108,   109,
     110,   111,    -1,   113,    -1,   115,   116,   117,   118,   119,
     120,    -1,   122,   123,   124,   125,   126,    -1,    -1,   129,
     130,   131,   132,   133,    -1,   135,   136,   137,    -1,   139,
     140,   141,    -1,   143,   144,   145,   146,   147,   148,   149,
     150,   151,    -1,   153,    -1,   155,   156,   157,   158,    -1,
     160,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
      -1,   171,    -1,   173,   174,    -1,   176,   177,   178,   179,
     180,   181,   182,   183,   184,   185,    -1,   187,   188,   189,
     190,   191,   192,    -1,   194,   195,   196,   197,   198,   199,
     200,   201,   202,    -1,   204,    -1,   206,   207,   208,   209,
     210,   211,   212,   213,   214,   215,    -1,    -1,   218,   219,
     220,   221,    -1,   223,   224,   225,    -1,    -1,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,    -1,   252,   253,   254,   255,    -1,   257,   258,   259,
     260,   261,   262,    -1,   264,   265,    -1,    -1,   268,   269,
     270,    -1,    -1,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,    -1,   289,
     290,   291,   292,   293,   294,   295,   296,   297,    -1,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,    -1,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,    -1,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
      -1,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,    -1,   375,   376,    -1,   378,   379,
     380,   381,   382,   383,   384,    -1,   386,   387,    -1,    -1,
     390,   391,   392,   393,   394,    -1,   396,   397,   398,   399,
     400,   401,   402,    -1,    -1,   405,   406,   407,   408,   409,
      -1,    -1,   412,   413,   414,   415,   416,   417,   418,    -1,
     420,   421,   422,   423,   424,   425,    -1,    -1,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      -1,    53,    54,    55,    56,    57,    58,    -1,    -1,    61,
      62,    63,    64,    65,    -1,    67,    68,    69,    70,    71,
      -1,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    -1,    85,    86,    87,    88,    89,    90,    -1,
      92,    93,    94,    95,    -1,    -1,    -1,    99,    -1,    -1,
      -1,   103,   104,   105,   106,   107,   108,   109,   110,   111,
      -1,   113,    -1,   115,   116,   117,   118,   119,   120,    -1,
     122,   123,   124,   125,   126,    -1,    -1,   129,   130,   131,
     132,   133,    -1,   135,   136,   137,    -1,   139,   140,   141,
      -1,   143,   144,   145,   146,   147,   148,   149,   150,   151,
      -1,   153,    -1,   155,   156,   157,   158,    -1,   160,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,    -1,   171,
      -1,   173,   174,    -1,   176,   177,   178,   179,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,   190,   191,
     192,    -1,   194,   195,   196,   197,   198,   199,   200,   201,
     202,    -1,   204,    -1,   206,   207,   208,   209,   210,   211,
     212,   213,   214,   215,    -1,    -1,   218,   219,   220,   221,
      -1,   223,   224,   225,    -1,    -1,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,    -1,
     252,   253,   254,   255,    -1,   257,   258,   259,   260,   261,
     262,    -1,   264,   265,    -1,    -1,   268,   269,   270,    -1,
      -1,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,    -1,   289,   290,   291,
     292,   293,   294,   295,   296,   297,    -1,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,    -1,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,    -1,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,    -1,   344,   345,   346,   347,   348,    -1,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,    -1,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,    -1,   375,   376,    -1,   378,   379,   380,   381,
     382,   383,   384,    -1,   386,   387,    -1,    -1,   390,   391,
     392,   393,   394,    -1,   396,   397,   398,   399,   400,   401,
     402,    -1,    -1,   405,   406,   407,   408,   409,    -1,    -1,
     412,   413,   414,   415,   416,   417,   418,    -1,   420,   421,
     422,   423,   424,   425,    -1,    -1,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,
      44,    45,    46,    47,    48,    -1,    50,    51,    -1,    53,
      54,    55,    56,    57,    58,    -1,    -1,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    -1,    -1,
      74,    75,    76,    77,    78,    79,    -1,    81,    82,    83,
      84,    85,    86,    87,    88,    89,    90,    -1,    -1,    93,
      94,    95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,
     104,   105,   106,   107,   108,   109,   110,   111,    -1,   113,
      -1,   115,   116,   117,   118,   119,   120,    -1,   122,   123,
     124,   125,   126,    -1,    -1,   129,   130,   131,   132,   133,
      -1,   135,   136,   137,    -1,   139,   140,   141,    -1,   143,
     144,   145,   146,   147,   148,   149,   150,   151,    -1,   153,
      -1,   155,   156,   157,   158,    -1,   160,   161,   162,    -1,
      -1,    -1,   166,   167,   168,   169,    -1,   171,    -1,   173,
     174,    -1,   176,   177,   178,   179,   180,    -1,   182,   183,
     184,   185,    -1,   187,   188,   189,   190,   191,   192,    -1,
     194,    -1,   196,   197,   198,   199,   200,   201,   202,    -1,
     204,    -1,   206,    -1,    -1,   209,    -1,   211,   212,   213,
     214,   215,    -1,    -1,   218,    -1,   220,    -1,    -1,   223,
     224,   225,    -1,    -1,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,    -1,   246,   247,   248,   249,   250,    -1,   252,   253,
      -1,   255,    -1,   257,   258,   259,   260,   261,   262,    -1,
     264,   265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,
     274,    -1,   276,    -1,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,    -1,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,    -1,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,    -1,   327,   328,    -1,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,    -1,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,   359,    -1,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
      -1,   375,   376,    -1,   378,    -1,   380,   381,   382,   383,
     384,    -1,   386,   387,    -1,    -1,   390,   391,   392,   393,
     394,    -1,   396,   397,   398,   399,   400,   401,   402,    -1,
     404,   405,   406,   407,   408,   409,    -1,    -1,   412,   413,
     414,   415,   416,   417,   418,    -1,   420,    -1,   422,   423,
     424,   425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    -1,    44,    45,
      46,    47,    48,    -1,    50,    51,    -1,    53,    54,    55,
      56,    57,    58,    -1,    -1,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    -1,    -1,    -1,    75,
      76,    77,    78,    79,    -1,    81,    82,    83,    84,    85,
      86,    87,    88,    89,    90,    -1,    -1,    93,    94,    95,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,   104,   105,
     106,   107,   108,   109,   110,   111,    -1,   113,    -1,   115,
     116,   117,   118,   119,   120,    -1,   122,   123,   124,   125,
     126,    -1,    -1,   129,   130,   131,   132,   133,    -1,   135,
     136,   137,    -1,   139,   140,   141,    -1,   143,   144,   145,
     146,   147,   148,   149,   150,   151,    -1,   153,    -1,   155,
     156,   157,   158,    -1,   160,   161,   162,    -1,    -1,    -1,
     166,   167,   168,   169,    -1,   171,    -1,   173,   174,    -1,
     176,   177,   178,   179,   180,    -1,   182,   183,   184,   185,
      -1,   187,   188,   189,   190,   191,   192,    -1,   194,    -1,
     196,   197,   198,   199,   200,   201,   202,    -1,   204,    -1,
     206,    -1,    -1,   209,    -1,   211,   212,   213,   214,   215,
      -1,    -1,   218,    -1,   220,   221,    -1,   223,   224,   225,
      -1,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,    -1,
     246,   247,   248,   249,   250,    -1,   252,   253,    -1,   255,
      -1,   257,   258,   259,   260,   261,   262,    -1,   264,   265,
      -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,    -1,
     276,    -1,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,    -1,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
      -1,   327,   328,    -1,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,    -1,   350,   351,   352,   353,   354,    -1,
     356,   357,   358,   359,    -1,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,    -1,   375,
     376,    -1,   378,    -1,   380,   381,   382,   383,   384,    -1,
     386,   387,    -1,    -1,   390,   391,   392,   393,   394,    -1,
     396,   397,   398,   399,   400,   401,   402,    -1,   404,   405,
     406,   407,   408,   409,    -1,    -1,   412,   413,   414,   415,
     416,   417,   418,    -1,   420,    -1,   422,   423,   424,   425,
      -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    30,    31,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    -1,    44,    45,    46,    47,
      48,    -1,    50,    51,    -1,    53,    54,    55,    56,    57,
      58,    -1,    -1,    61,    62,    63,    64,    65,    -1,    67,
      68,    69,    70,    71,    -1,    -1,    -1,    75,    76,    77,
      78,    79,    -1,    81,    82,    83,    -1,    85,    86,    87,
      88,    89,    90,    -1,    -1,    93,    94,    95,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   103,   104,   105,   106,   107,
     108,   109,   110,   111,    -1,   113,    -1,   115,   116,   117,
     118,   119,   120,    -1,   122,   123,   124,   125,   126,    -1,
      -1,   129,   130,   131,   132,   133,    -1,   135,   136,   137,
      -1,   139,   140,   141,    -1,   143,   144,   145,   146,   147,
     148,   149,   150,   151,    -1,   153,    -1,   155,   156,   157,
     158,    -1,   160,    -1,   162,    -1,    -1,    -1,   166,   167,
     168,   169,    -1,   171,    -1,   173,   174,    -1,   176,   177,
     178,   179,   180,    -1,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,   191,   192,    -1,   194,    -1,   196,   197,
     198,   199,   200,   201,   202,    -1,   204,    -1,   206,    -1,
      -1,   209,    -1,   211,   212,   213,   214,   215,    -1,    -1,
     218,    -1,   220,    -1,    -1,   223,   224,   225,    -1,    -1,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,    -1,   246,   247,
     248,   249,   250,    -1,   252,   253,    -1,   255,    -1,   257,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,    -1,
     268,   269,   270,    -1,    -1,   273,   274,    -1,   276,    -1,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
      -1,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,    -1,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,    -1,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,    -1,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,    -1,   375,   376,    -1,
     378,    -1,   380,   381,   382,   383,   384,    -1,   386,   387,
      -1,    -1,   390,   391,   392,   393,   394,    -1,   396,   397,
     398,   399,   400,   401,   402,    -1,    -1,   405,   406,   407,
     408,   409,    -1,    -1,   412,   413,   414,   415,   416,   417,
     418,    -1,   420,    -1,   422,   423,   424,   425,    -1,    -1,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    26,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    -1,    44,    45,    46,    47,    48,    -1,
      50,    51,    -1,    53,    54,    55,    56,    57,    58,    -1,
      -1,    61,    62,    63,    64,    65,    -1,    67,    68,    69,
      70,    71,    -1,    -1,    -1,    75,    76,    77,    78,    79,
      -1,    81,    82,    83,    -1,    85,    86,    87,    88,    89,
      90,    -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   103,   104,   105,   106,   107,   108,   109,
     110,   111,    -1,   113,    -1,   115,   116,   117,   118,   119,
     120,    -1,   122,   123,   124,   125,   126,    -1,    -1,   129,
     130,   131,   132,   133,    -1,   135,   136,   137,    -1,   139,
     140,   141,    -1,   143,   144,   145,   146,   147,   148,   149,
     150,   151,    -1,   153,    -1,   155,   156,   157,   158,    -1,
     160,    -1,   162,    -1,    -1,    -1,   166,   167,   168,   169,
      -1,   171,    -1,   173,   174,    -1,   176,   177,   178,   179,
     180,    -1,   182,   183,   184,   185,    -1,   187,   188,   189,
     190,   191,   192,    -1,   194,    -1,   196,   197,   198,   199,
     200,   201,   202,    -1,   204,    -1,   206,    -1,    -1,   209,
      -1,   211,   212,   213,   214,   215,    -1,    -1,   218,    -1,
     220,    -1,    -1,   223,   224,   225,    -1,    -1,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,    -1,   246,   247,   248,   249,
     250,    -1,   252,   253,    -1,   255,    -1,   257,   258,   259,
     260,   261,   262,    -1,   264,   265,    -1,    -1,   268,   269,
     270,    -1,    -1,   273,   274,    -1,   276,    -1,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,    -1,   289,
     290,   291,   292,   293,   294,   295,   296,   297,    -1,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,    -1,   327,   328,    -1,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,    -1,
     350,   351,   352,   353,   354,    -1,   356,   357,   358,   359,
      -1,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,    -1,   375,   376,    -1,   378,    -1,
     380,   381,   382,   383,   384,    -1,   386,   387,    -1,    -1,
     390,   391,   392,   393,   394,    -1,   396,   397,   398,   399,
     400,   401,   402,    -1,    -1,   405,   406,   407,   408,   409,
      -1,    -1,   412,   413,   414,   415,   416,   417,   418,    -1,
     420,    -1,   422,   423,   424,   425,    -1,    -1,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    26,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    -1,    44,    45,    46,    47,    48,    -1,    50,    51,
      -1,    53,    54,    55,    56,    57,    58,    -1,    -1,    61,
      62,    63,    64,    65,    -1,    67,    68,    69,    70,    71,
      -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,    81,
      82,    83,    -1,    85,    86,    87,    88,    89,    90,    -1,
      -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   103,   104,   105,   106,   107,   108,   109,   110,   111,
      -1,   113,    -1,   115,   116,   117,   118,   119,   120,    -1,
     122,   123,   124,   125,   126,    -1,    -1,   129,   130,   131,
     132,   133,    -1,   135,   136,   137,    -1,   139,   140,   141,
      -1,   143,   144,   145,   146,   147,   148,   149,   150,   151,
      -1,   153,    -1,   155,   156,   157,   158,    -1,   160,    -1,
     162,    -1,    -1,    -1,   166,   167,   168,   169,    -1,   171,
      -1,   173,   174,    -1,   176,   177,   178,   179,   180,    -1,
     182,   183,   184,   185,    -1,   187,   188,   189,   190,   191,
     192,    -1,   194,    -1,   196,   197,   198,   199,   200,   201,
     202,    -1,   204,    -1,   206,    -1,    -1,   209,    -1,   211,
     212,   213,   214,   215,    -1,    -1,   218,    -1,   220,    -1,
      -1,   223,   224,   225,    -1,    -1,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,    -1,   246,   247,   248,   249,   250,    -1,
     252,   253,    -1,   255,    -1,   257,   258,   259,   260,   261,
     262,    -1,   264,   265,    -1,    -1,   268,   269,   270,    -1,
      -1,   273,   274,    -1,   276,    -1,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,    -1,   289,   290,   291,
     292,   293,   294,   295,   296,   297,    -1,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,    -1,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,    -1,   327,   328,    -1,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,    -1,   344,   345,   346,   347,   348,    -1,   350,   351,
     352,   353,   354,    -1,   356,   357,   358,   359,    -1,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,    -1,   375,   376,    -1,   378,    -1,   380,   381,
     382,   383,   384,    -1,   386,   387,    -1,    -1,   390,   391,
     392,   393,   394,    -1,   396,   397,   398,   399,   400,   401,
     402,    -1,    -1,   405,   406,   407,   408,   409,    -1,    -1,
     412,   413,   414,   415,   416,   417,   418,    -1,   420,    -1,
     422,   423,   424,   425,    -1,    -1,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,
      44,    45,    46,    47,    48,    -1,    50,    51,    -1,    53,
      54,    55,    56,    57,    58,    -1,    -1,    61,    62,    63,
      64,    65,    -1,    67,    68,    69,    70,    71,    -1,    -1,
      -1,    75,    76,    77,    78,    79,    -1,    81,    82,    83,
      -1,    85,    86,    87,    88,    89,    90,    -1,    -1,    93,
      94,    95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,
     104,   105,   106,   107,   108,   109,   110,   111,    -1,   113,
      -1,   115,   116,   117,   118,   119,   120,    -1,   122,   123,
     124,   125,   126,    -1,    -1,   129,   130,   131,   132,   133,
      -1,   135,   136,   137,    -1,   139,   140,   141,    -1,   143,
     144,   145,   146,   147,   148,   149,   150,   151,    -1,   153,
      -1,   155,   156,   157,   158,    -1,   160,    -1,   162,    -1,
      -1,    -1,   166,   167,   168,   169,    -1,   171,    -1,   173,
     174,    -1,   176,   177,   178,   179,   180,    -1,   182,   183,
     184,   185,    -1,   187,   188,   189,   190,   191,   192,    -1,
     194,    -1,   196,   197,   198,   199,   200,   201,   202,    -1,
     204,    -1,   206,    -1,    -1,   209,    -1,   211,   212,   213,
     214,   215,    -1,    -1,   218,    -1,   220,    -1,    -1,   223,
     224,   225,    -1,    -1,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,    -1,   246,   247,   248,   249,   250,    -1,   252,   253,
      -1,   255,    -1,   257,   258,   259,   260,   261,   262,    -1,
     264,   265,    -1,   267,   268,   269,   270,    -1,    -1,   273,
     274,    -1,   276,    -1,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,    -1,   289,   290,   291,   292,   293,
     294,   295,   296,   297,    -1,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,    -1,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,    -1,   327,   328,    -1,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,    -1,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,   359,    -1,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
      -1,   375,   376,    -1,   378,    -1,   380,   381,   382,   383,
     384,    -1,   386,   387,    -1,    -1,   390,   391,   392,   393,
     394,    -1,   396,   397,   398,   399,   400,   401,   402,    -1,
      -1,   405,   406,   407,   408,   409,    -1,    -1,   412,   413,
     414,   415,   416,   417,   418,    -1,   420,    -1,   422,   423,
     424,   425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      26,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    -1,    44,    45,
      46,    47,    48,    -1,    50,    51,    -1,    53,    54,    55,
      56,    57,    58,    -1,    -1,    61,    62,    63,    64,    65,
      -1,    67,    68,    69,    70,    71,    -1,    -1,    -1,    75,
      76,    77,    78,    79,    -1,    81,    82,    83,    -1,    85,
      86,    87,    88,    89,    90,    -1,    -1,    93,    94,    95,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,   104,   105,
     106,   107,   108,   109,   110,   111,    -1,   113,    -1,   115,
     116,   117,   118,   119,   120,    -1,   122,   123,   124,   125,
     126,    -1,    -1,   129,   130,   131,   132,   133,    -1,   135,
     136,   137,    -1,   139,   140,   141,    -1,   143,   144,   145,
     146,   147,   148,   149,   150,   151,    -1,   153,    -1,   155,
     156,   157,   158,    -1,   160,    -1,   162,    -1,    -1,    -1,
     166,   167,   168,   169,    -1,   171,    -1,   173,   174,    -1,
     176,   177,   178,   179,   180,    -1,   182,   183,   184,   185,
      -1,   187,   188,   189,   190,   191,   192,    -1,   194,    -1,
     196,   197,   198,   199,   200,   201,   202,    -1,   204,    -1,
     206,    -1,    -1,   209,    -1,   211,   212,   213,   214,   215,
      -1,    -1,   218,    -1,   220,    -1,    -1,   223,   224,   225,
      -1,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,    -1,
     246,   247,   248,   249,   250,    -1,   252,   253,    -1,   255,
      -1,   257,   258,   259,   260,   261,   262,    -1,   264,   265,
      -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,    -1,
     276,    -1,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,    -1,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,    -1,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
      -1,   327,   328,    -1,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,    -1,   350,   351,   352,   353,   354,    -1,
     356,   357,   358,   359,    -1,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,    -1,   375,
     376,    -1,   378,    -1,   380,   381,   382,   383,   384,    -1,
     386,   387,    -1,    -1,   390,   391,   392,   393,   394,    -1,
     396,   397,   398,   399,   400,   401,   402,    -1,    -1,   405,
     406,   407,   408,   409,    -1,    -1,   412,   413,   414,   415,
     416,   417,   418,    -1,   420,    -1,   422,   423,   424,   425,
      -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    -1,    44,    45,    46,    47,
      48,    -1,    50,    51,    -1,    53,    54,    55,    56,    57,
      58,    -1,    -1,    61,    62,    63,    64,    65,    -1,    67,
      68,    69,    70,    71,    -1,    -1,    -1,    75,    76,    77,
      78,    79,    -1,    81,    82,    83,    -1,    85,    86,    87,
      88,    89,    90,    -1,    -1,    93,    94,    95,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   103,   104,   105,   106,   107,
     108,   109,   110,   111,    -1,   113,    -1,   115,   116,   117,
     118,   119,   120,    -1,   122,   123,   124,   125,   126,    -1,
      -1,   129,   130,   131,   132,   133,    -1,   135,   136,   137,
      -1,   139,   140,   141,    -1,   143,   144,   145,   146,   147,
     148,   149,   150,   151,    -1,   153,    -1,   155,   156,   157,
     158,    -1,   160,    -1,   162,    -1,    -1,    -1,   166,   167,
     168,   169,    -1,   171,    -1,   173,   174,    -1,   176,   177,
     178,   179,   180,    -1,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,   191,   192,    -1,   194,    -1,   196,   197,
     198,   199,   200,   201,   202,    -1,   204,    -1,   206,    -1,
      -1,   209,    -1,   211,   212,   213,   214,   215,    -1,    -1,
     218,    -1,   220,    -1,    -1,   223,   224,   225,    -1,    -1,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,    -1,   246,   247,
     248,   249,   250,    -1,   252,   253,    -1,   255,    -1,   257,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,   267,
     268,   269,   270,    -1,    -1,   273,   274,    -1,   276,    -1,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
      -1,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,    -1,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,    -1,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,    -1,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,    -1,   375,   376,    -1,
     378,    -1,   380,   381,   382,   383,   384,    -1,   386,   387,
      -1,    -1,   390,   391,   392,   393,   394,    -1,   396,   397,
     398,   399,   400,   401,   402,    -1,    -1,   405,   406,   407,
     408,   409,    -1,    -1,   412,   413,   414,   415,   416,   417,
     418,    -1,   420,    -1,   422,   423,   424,   425,    -1,    -1,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    26,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    -1,    44,    45,    46,    47,    48,    -1,
      50,    51,    -1,    53,    54,    55,    56,    57,    58,    -1,
      -1,    61,    62,    63,    64,    65,    -1,    67,    68,    69,
      70,    71,    -1,    -1,    -1,    75,    76,    77,    78,    79,
      -1,    81,    82,    83,    -1,    85,    86,    87,    88,    89,
      90,    -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   103,   104,   105,   106,   107,   108,   109,
     110,   111,    -1,   113,    -1,   115,   116,   117,   118,   119,
     120,    -1,   122,   123,   124,   125,   126,    -1,    -1,   129,
     130,   131,   132,   133,    -1,   135,   136,   137,    -1,   139,
     140,   141,    -1,   143,   144,   145,   146,   147,   148,   149,
     150,   151,    -1,   153,    -1,   155,   156,   157,   158,    -1,
     160,    -1,   162,    -1,    -1,    -1,   166,   167,   168,   169,
      -1,   171,    -1,   173,   174,    -1,   176,   177,   178,   179,
     180,    -1,   182,   183,   184,   185,    -1,   187,   188,   189,
     190,   191,   192,    -1,   194,    -1,   196,   197,   198,   199,
     200,   201,   202,    -1,   204,    -1,   206,    -1,    -1,   209,
      -1,   211,   212,   213,   214,   215,    -1,    -1,   218,    -1,
     220,    -1,    -1,   223,   224,   225,    -1,    -1,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,    -1,   246,   247,   248,   249,
     250,    -1,   252,   253,    -1,   255,    -1,   257,   258,   259,
     260,   261,   262,    -1,   264,   265,    -1,    -1,   268,   269,
     270,    -1,    -1,   273,   274,    -1,   276,    -1,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,    -1,   289,
     290,   291,   292,   293,   294,   295,   296,   297,    -1,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,    -1,   327,   328,    -1,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,    -1,
     350,   351,   352,   353,   354,    -1,   356,   357,   358,   359,
      -1,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,    -1,   375,   376,    -1,   378,    -1,
     380,   381,   382,   383,   384,    -1,   386,   387,    -1,    -1,
     390,   391,   392,   393,   394,    -1,   396,   397,   398,   399,
     400,   401,   402,    -1,    -1,   405,   406,   407,   408,   409,
      -1,    -1,   412,   413,   414,   415,   416,   417,   418,    -1,
     420,    -1,   422,   423,   424,   425,    -1,    -1,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    -1,    44,    45,    46,    47,    48,    -1,    50,    51,
      -1,    53,    54,    55,    56,    57,    58,    -1,    -1,    61,
      62,    63,    64,    65,    -1,    67,    68,    69,    70,    71,
      -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,    81,
      82,    83,    -1,    85,    86,    87,    88,    89,    90,    -1,
      -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   103,   104,   105,   106,   107,   108,   109,   110,   111,
      -1,   113,    -1,   115,   116,   117,   118,   119,   120,    -1,
     122,   123,   124,   125,   126,    -1,    -1,   129,   130,   131,
     132,   133,    -1,   135,   136,   137,    -1,   139,   140,   141,
      -1,   143,   144,   145,   146,   147,   148,   149,   150,   151,
      -1,   153,    -1,   155,   156,   157,   158,    -1,   160,    -1,
     162,    -1,    -1,    -1,   166,   167,   168,   169,    -1,   171,
      -1,   173,   174,    -1,   176,   177,   178,   179,   180,    -1,
     182,   183,   184,   185,    -1,   187,   188,   189,   190,   191,
     192,    -1,   194,    -1,   196,   197,   198,   199,   200,   201,
     202,    -1,   204,    -1,   206,    -1,    -1,   209,    -1,   211,
     212,   213,   214,   215,    -1,    -1,   218,    -1,   220,    -1,
      -1,   223,   224,   225,    -1,    -1,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,    -1,   246,   247,   248,   249,   250,    -1,
     252,   253,    -1,   255,    -1,   257,   258,   259,   260,   261,
     262,    -1,   264,   265,    -1,    -1,   268,   269,   270,    -1,
      -1,   273,   274,    -1,   276,    -1,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,    -1,   289,   290,   291,
     292,   293,   294,   295,   296,   297,    -1,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,    -1,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,    -1,   327,   328,    -1,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,    -1,   344,   345,   346,   347,   348,    -1,   350,   351,
     352,   353,   354,    -1,   356,   357,   358,   359,    -1,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,    -1,   375,   376,   377,   378,    -1,   380,   381,
     382,   383,   384,    -1,   386,   387,    -1,    -1,   390,   391,
     392,   393,   394,    -1,   396,   397,   398,   399,   400,   401,
     402,    -1,    -1,   405,   406,   407,   408,   409,    -1,    -1,
     412,   413,   414,   415,   416,   417,   418,    -1,   420,    -1,
     422,   423,   424,   425,    -1,    -1,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    35,    -1,    37,    38,    -1,    40,    41,    42,    -1,
      44,    45,    46,    47,    48,    -1,    50,    51,    -1,    53,
      54,    55,    56,    57,    58,    -1,    -1,    61,    62,    63,
      64,    65,    -1,    67,    68,    69,    70,    71,    -1,    -1,
      -1,    75,    76,    77,    78,    79,    -1,    81,    82,    83,
      -1,    85,    86,    87,    88,    89,    90,    -1,    -1,    93,
      94,    95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,
     104,   105,   106,   107,   108,   109,   110,   111,    -1,   113,
      -1,   115,   116,   117,   118,   119,   120,    -1,   122,   123,
     124,   125,   126,    -1,    -1,   129,   130,   131,   132,   133,
      -1,   135,   136,   137,    -1,   139,   140,   141,    -1,   143,
     144,   145,   146,   147,   148,   149,   150,   151,    -1,   153,
      -1,   155,   156,   157,   158,    -1,   160,    -1,   162,    -1,
      -1,    -1,   166,   167,   168,   169,    -1,   171,    -1,   173,
     174,    -1,   176,   177,   178,   179,   180,    -1,   182,   183,
     184,   185,    -1,   187,   188,   189,   190,   191,   192,    -1,
     194,    -1,   196,   197,   198,   199,   200,   201,   202,    -1,
     204,    -1,   206,    -1,    -1,   209,    -1,   211,   212,   213,
     214,   215,    -1,    -1,   218,    -1,   220,    -1,    -1,   223,
     224,   225,    -1,    -1,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,    -1,   246,   247,   248,   249,   250,    -1,   252,   253,
      -1,   255,    -1,   257,   258,   259,   260,   261,   262,    -1,
     264,   265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,
     274,    -1,   276,    -1,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,    -1,   289,   290,   291,   292,   293,
     294,   295,   296,   297,    -1,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,    -1,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,    -1,   327,   328,    -1,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,    -1,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,   359,    -1,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
      -1,   375,   376,    -1,   378,    -1,   380,   381,   382,   383,
     384,    -1,   386,   387,    -1,    -1,   390,   391,   392,   393,
     394,    -1,   396,   397,   398,   399,   400,   401,   402,    -1,
      -1,   405,   406,   407,   408,   409,    -1,    -1,   412,   413,
     414,   415,   416,   417,   418,    -1,   420,    -1,   422,   423,
     424,   425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    35,
      -1,    37,    38,    -1,    40,    41,    42,    -1,    44,    45,
      46,    47,    48,    -1,    50,    51,    -1,    53,    54,    55,
      56,    57,    58,    -1,    -1,    61,    62,    63,    64,    65,
      -1,    67,    68,    69,    70,    71,    -1,    -1,    -1,    75,
      76,    77,    78,    79,    -1,    81,    82,    83,    -1,    85,
      86,    87,    88,    89,    90,    -1,    -1,    93,    94,    95,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,   104,   105,
     106,   107,   108,   109,   110,   111,    -1,   113,    -1,   115,
     116,   117,   118,   119,   120,    -1,   122,   123,   124,   125,
     126,    -1,    -1,   129,   130,   131,   132,   133,    -1,   135,
     136,   137,    -1,   139,   140,   141,    -1,   143,   144,   145,
     146,   147,   148,   149,   150,   151,    -1,   153,    -1,   155,
     156,   157,   158,    -1,   160,    -1,   162,    -1,    -1,    -1,
     166,   167,   168,   169,    -1,   171,    -1,   173,   174,    -1,
     176,   177,   178,   179,   180,    -1,   182,   183,   184,   185,
      -1,   187,   188,   189,   190,   191,   192,    -1,   194,    -1,
     196,   197,   198,   199,   200,   201,   202,    -1,   204,    -1,
     206,    -1,    -1,   209,    -1,   211,   212,   213,   214,   215,
      -1,    -1,   218,    -1,   220,    -1,    -1,   223,   224,   225,
      -1,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,    -1,
     246,   247,   248,   249,   250,    -1,   252,   253,    -1,   255,
      -1,   257,   258,   259,   260,   261,   262,    -1,   264,   265,
      -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,    -1,
     276,    -1,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,    -1,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,    -1,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
      -1,   327,   328,    -1,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,    -1,   350,   351,   352,   353,   354,    -1,
     356,   357,   358,   359,    -1,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,    -1,   375,
     376,    -1,   378,    -1,   380,   381,   382,   383,   384,    -1,
     386,   387,    -1,    -1,   390,   391,   392,   393,   394,    -1,
     396,   397,   398,   399,   400,   401,   402,    -1,    -1,   405,
     406,   407,   408,   409,    -1,    -1,   412,   413,   414,   415,
     416,   417,   418,    -1,   420,    -1,   422,   423,   424,   425,
      -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,     3,    -1,     5,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    -1,    44,    45,    46,    47,
      48,    -1,    50,    51,    -1,    53,    54,    55,    56,    57,
      58,    -1,    -1,    61,    62,    63,    64,    65,    -1,    67,
      68,    69,    70,    71,    -1,    -1,    -1,    75,    76,    77,
      78,    79,    -1,    81,    82,    83,    -1,    85,    86,    87,
      88,    89,    90,    -1,    -1,    93,    94,    95,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   103,   104,   105,   106,   107,
     108,   109,   110,   111,    -1,   113,    -1,   115,   116,   117,
     118,   119,   120,    -1,   122,   123,   124,   125,   126,    -1,
      -1,   129,   130,   131,   132,   133,    -1,   135,   136,   137,
      -1,   139,   140,   141,    -1,   143,   144,   145,   146,   147,
     148,   149,   150,   151,    -1,   153,    -1,   155,   156,   157,
     158,    -1,   160,    -1,   162,    -1,    -1,    -1,   166,   167,
     168,   169,    -1,   171,    -1,   173,   174,    -1,   176,   177,
     178,   179,   180,    -1,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,   191,   192,    -1,   194,    -1,   196,   197,
     198,   199,   200,   201,   202,    -1,   204,    -1,   206,    -1,
      -1,   209,    -1,   211,   212,   213,   214,   215,    -1,    -1,
     218,    -1,   220,    -1,    -1,   223,   224,   225,    -1,    -1,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,    -1,   246,   247,
     248,   249,   250,    -1,   252,   253,    -1,   255,    -1,   257,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,    -1,
     268,   269,   270,    -1,    -1,   273,   274,    -1,   276,    -1,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
      -1,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,    -1,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,    -1,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,    -1,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,    -1,   375,   376,    -1,
     378,    -1,   380,   381,   382,   383,   384,    -1,   386,   387,
      -1,    -1,   390,   391,   392,   393,   394,    -1,   396,   397,
     398,   399,   400,   401,   402,    -1,    -1,   405,   406,   407,
     408,   409,    -1,    -1,   412,   413,   414,   415,   416,   417,
     418,    -1,   420,    -1,   422,   423,   424,   425,    -1,    -1,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    -1,    44,    45,    46,    47,    48,    -1,
      50,    51,    -1,    53,    54,    55,    56,    57,    58,    -1,
      -1,    61,    62,    63,    64,    65,    -1,    67,    68,    69,
      70,    71,    -1,    -1,    -1,    75,    76,    77,    78,    79,
      -1,    81,    82,    83,    -1,    85,    86,    87,    88,    89,
      90,    -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   103,   104,   105,   106,   107,   108,   109,
     110,   111,    -1,   113,    -1,   115,   116,   117,   118,   119,
     120,    -1,   122,   123,   124,   125,   126,    -1,    -1,   129,
     130,   131,   132,   133,    -1,   135,   136,   137,    -1,   139,
     140,   141,    -1,   143,   144,   145,   146,   147,   148,   149,
     150,   151,    -1,   153,    -1,   155,   156,   157,   158,    -1,
     160,    -1,   162,    -1,    -1,    -1,   166,   167,   168,   169,
      -1,   171,    -1,   173,   174,    -1,   176,   177,   178,   179,
     180,    -1,   182,   183,   184,   185,    -1,   187,   188,   189,
     190,   191,   192,    -1,   194,    -1,   196,   197,   198,   199,
     200,   201,   202,    -1,   204,    -1,   206,    -1,    -1,   209,
      -1,   211,   212,   213,   214,   215,    -1,    -1,   218,    -1,
     220,    -1,    -1,   223,   224,   225,    -1,    -1,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,    -1,   246,   247,   248,   249,
     250,    -1,   252,   253,    -1,   255,    -1,   257,   258,   259,
     260,   261,   262,    -1,   264,   265,    -1,    -1,   268,   269,
     270,    -1,    -1,   273,   274,    -1,   276,    -1,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,    -1,   289,
     290,   291,   292,   293,   294,   295,   296,   297,    -1,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,    -1,   327,   328,    -1,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,    -1,
     350,   351,   352,   353,   354,    -1,   356,   357,   358,   359,
      -1,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,    -1,   375,   376,    -1,   378,    -1,
     380,   381,   382,   383,   384,    -1,   386,   387,    -1,    -1,
     390,   391,   392,   393,   394,    -1,   396,   397,   398,   399,
     400,   401,   402,    -1,    -1,   405,   406,   407,   408,   409,
      -1,    -1,   412,   413,   414,   415,   416,   417,   418,    -1,
     420,    -1,   422,   423,   424,   425,    -1,    -1,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    -1,    44,    45,    46,    47,    48,    -1,    50,    51,
      -1,    53,    54,    55,    56,    57,    58,    -1,    -1,    61,
      62,    63,    64,    65,    -1,    67,    68,    69,    70,    71,
      -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,    81,
      82,    83,    -1,    85,    86,    87,    88,    89,    90,    -1,
      -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   103,   104,   105,   106,   107,   108,   109,   110,   111,
      -1,   113,    -1,   115,   116,   117,   118,   119,   120,    -1,
     122,   123,   124,   125,   126,    -1,    -1,   129,   130,   131,
     132,   133,    -1,   135,   136,   137,    -1,   139,   140,   141,
      -1,   143,   144,   145,   146,   147,   148,   149,   150,   151,
      -1,   153,    -1,   155,   156,   157,   158,    -1,   160,    -1,
     162,    -1,    -1,    -1,   166,   167,   168,   169,    -1,   171,
      -1,   173,   174,    -1,   176,   177,   178,   179,   180,    -1,
     182,   183,   184,   185,    -1,   187,   188,   189,   190,   191,
     192,    -1,   194,    -1,   196,   197,   198,   199,   200,   201,
     202,    -1,   204,    -1,   206,    -1,    -1,   209,    -1,   211,
     212,   213,   214,   215,    -1,    -1,   218,    -1,   220,    -1,
      -1,   223,   224,   225,    -1,    -1,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,    -1,   246,   247,   248,   249,   250,    -1,
     252,   253,    -1,   255,    -1,   257,   258,   259,   260,   261,
     262,    -1,   264,   265,    -1,    -1,   268,   269,   270,    -1,
      -1,   273,   274,    -1,   276,    -1,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,    -1,   289,   290,   291,
     292,   293,   294,   295,   296,   297,    -1,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,    -1,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,    -1,   327,   328,    -1,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,    -1,   344,   345,   346,   347,   348,    -1,   350,   351,
     352,   353,   354,    -1,   356,   357,   358,   359,    -1,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,    -1,   375,   376,    -1,   378,    -1,   380,   381,
     382,   383,   384,    -1,   386,   387,    -1,    -1,   390,   391,
     392,   393,   394,    -1,   396,   397,   398,   399,   400,   401,
     402,    -1,    -1,   405,   406,   407,   408,   409,    -1,    -1,
     412,   413,   414,   415,   416,   417,   418,    -1,   420,    -1,
     422,   423,   424,   425,    -1,    -1,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,
      44,    45,    46,    47,    48,    -1,    50,    51,    -1,    53,
      54,    55,    56,    57,    58,    -1,    -1,    61,    62,    63,
      64,    65,    -1,    67,    68,    69,    70,    71,    -1,    -1,
      -1,    75,    76,    77,    78,    79,    -1,    81,    82,    83,
      -1,    85,    86,    87,    88,    89,    90,    -1,    -1,    93,
      94,    95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,
     104,   105,   106,   107,   108,   109,   110,   111,    -1,   113,
      -1,   115,   116,   117,   118,   119,   120,    -1,   122,   123,
     124,   125,   126,    -1,    -1,   129,   130,   131,   132,   133,
      -1,   135,   136,   137,    -1,   139,   140,   141,    -1,   143,
     144,   145,   146,   147,   148,   149,   150,   151,    -1,   153,
      -1,   155,   156,   157,   158,    -1,   160,    -1,   162,    -1,
      -1,    -1,   166,   167,   168,   169,    -1,   171,    -1,   173,
     174,    -1,   176,   177,   178,   179,   180,    -1,   182,   183,
     184,   185,    -1,   187,   188,   189,   190,   191,   192,    -1,
     194,    -1,   196,   197,   198,   199,   200,   201,   202,    -1,
     204,    -1,   206,    -1,    -1,   209,    -1,   211,   212,   213,
     214,   215,    -1,    -1,   218,    -1,   220,    -1,    -1,   223,
     224,   225,    -1,    -1,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,    -1,   246,   247,   248,   249,   250,    -1,   252,   253,
      -1,   255,    -1,   257,   258,   259,   260,   261,   262,    -1,
     264,   265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,
     274,    -1,   276,    -1,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,    -1,   289,   290,   291,   292,   293,
     294,   295,   296,   297,    -1,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,    -1,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,    -1,   327,   328,    -1,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,    -1,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,   359,    -1,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
      -1,   375,   376,    -1,   378,    -1,   380,   381,   382,   383,
     384,    -1,   386,   387,    -1,    -1,   390,   391,   392,   393,
     394,    -1,   396,   397,   398,   399,   400,   401,   402,    -1,
      -1,   405,   406,   407,   408,   409,    -1,    -1,   412,   413,
     414,   415,   416,   417,   418,    -1,   420,    -1,   422,   423,
     424,   425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    -1,    44,    45,
      46,    47,    48,    -1,    50,    51,    -1,    53,    54,    55,
      56,    57,    58,    -1,    -1,    61,    62,    63,    64,    65,
      -1,    67,    68,    69,    70,    71,    -1,    -1,    -1,    75,
      76,    77,    78,    79,    -1,    81,    82,    83,    -1,    85,
      86,    87,    88,    89,    90,    -1,    -1,    93,    94,    95,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,   104,   105,
     106,   107,   108,   109,   110,   111,    -1,   113,    -1,   115,
     116,   117,   118,   119,   120,    -1,   122,   123,   124,   125,
     126,    -1,    -1,   129,   130,   131,   132,   133,    -1,   135,
     136,   137,    -1,   139,   140,   141,    -1,   143,   144,   145,
     146,   147,   148,   149,   150,   151,    -1,   153,    -1,   155,
     156,   157,   158,    -1,   160,    -1,   162,    -1,    -1,    -1,
     166,   167,   168,   169,    -1,   171,    -1,   173,   174,    -1,
     176,   177,   178,   179,   180,    -1,   182,   183,   184,   185,
      -1,   187,   188,   189,   190,   191,   192,    -1,   194,    -1,
     196,   197,   198,   199,   200,   201,   202,    -1,   204,    -1,
     206,    -1,    -1,   209,    -1,   211,   212,   213,   214,   215,
      -1,    -1,   218,    -1,   220,    -1,    -1,   223,   224,   225,
      -1,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,    -1,
     246,   247,   248,   249,   250,    -1,   252,   253,    -1,   255,
      -1,   257,   258,   259,   260,   261,   262,    -1,   264,   265,
      -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,    -1,
     276,    -1,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,    -1,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,    -1,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
      -1,   327,   328,    -1,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,    -1,   350,   351,   352,   353,   354,    -1,
     356,   357,   358,   359,    -1,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,    -1,   375,
     376,    -1,   378,    -1,   380,   381,   382,   383,   384,    -1,
     386,   387,    -1,    -1,   390,   391,   392,   393,   394,    -1,
     396,   397,   398,   399,   400,   401,   402,    -1,    -1,   405,
     406,   407,   408,   409,    -1,    -1,   412,   413,   414,   415,
     416,   417,   418,    -1,   420,    -1,   422,   423,   424,   425,
      -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    -1,    44,    45,    46,    47,
      48,    -1,    50,    51,    -1,    53,    54,    55,    56,    57,
      58,    -1,    -1,    61,    62,    63,    64,    65,    -1,    67,
      68,    69,    70,    71,    -1,    -1,    -1,    75,    76,    77,
      78,    79,    -1,    81,    82,    83,    -1,    85,    86,    87,
      88,    89,    90,    -1,    -1,    93,    94,    95,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   103,   104,   105,   106,   107,
     108,   109,   110,   111,    -1,   113,    -1,   115,   116,   117,
     118,   119,   120,    -1,   122,   123,   124,   125,   126,    -1,
      -1,   129,   130,   131,   132,   133,    -1,   135,   136,   137,
      -1,   139,   140,   141,    -1,   143,   144,   145,   146,   147,
     148,   149,   150,   151,    -1,   153,    -1,   155,   156,   157,
     158,    -1,   160,    -1,   162,    -1,    -1,    -1,   166,   167,
     168,   169,    -1,   171,    -1,   173,   174,    -1,   176,   177,
     178,   179,   180,    -1,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,   191,   192,    -1,   194,    -1,   196,   197,
     198,   199,   200,   201,   202,    -1,   204,    -1,   206,    -1,
      -1,   209,    -1,   211,   212,   213,   214,   215,    -1,    -1,
     218,    -1,   220,    -1,    -1,   223,   224,   225,    -1,    -1,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,    -1,   246,   247,
     248,   249,   250,    -1,   252,   253,    -1,   255,    -1,   257,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,    -1,
     268,   269,   270,    -1,    -1,   273,   274,    -1,   276,    -1,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
      -1,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,    -1,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,    -1,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,    -1,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,    -1,   375,   376,    -1,
     378,    -1,   380,   381,   382,   383,   384,    -1,   386,   387,
      -1,    -1,   390,   391,   392,   393,   394,    -1,   396,   397,
     398,   399,   400,   401,   402,    -1,    -1,   405,   406,   407,
     408,   409,    -1,    -1,   412,   413,   414,   415,   416,   417,
     418,    -1,   420,    -1,   422,   423,   424,   425,    -1,    -1,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    -1,    44,    45,    46,    47,    48,    -1,
      50,    51,    -1,    53,    54,    55,    56,    57,    58,    -1,
      -1,    61,    62,    63,    64,    65,    -1,    67,    68,    69,
      70,    71,    -1,    -1,    -1,    75,    76,    77,    78,    79,
      -1,    81,    82,    83,    -1,    85,    86,    87,    88,    89,
      90,    -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   103,   104,   105,   106,   107,   108,   109,
     110,   111,    -1,   113,    -1,   115,   116,   117,   118,   119,
     120,    -1,   122,   123,   124,   125,   126,    -1,    -1,   129,
     130,   131,   132,   133,    -1,   135,   136,   137,    -1,   139,
     140,   141,    -1,   143,   144,   145,   146,   147,   148,   149,
     150,   151,    -1,   153,    -1,   155,   156,   157,   158,    -1,
     160,    -1,   162,    -1,    -1,    -1,   166,   167,   168,   169,
      -1,   171,    -1,   173,   174,    -1,   176,   177,   178,   179,
     180,    -1,   182,   183,   184,   185,    -1,   187,   188,   189,
     190,   191,   192,    -1,   194,    -1,   196,   197,   198,   199,
     200,   201,   202,    -1,   204,    -1,   206,    -1,    -1,   209,
      -1,   211,   212,   213,   214,   215,    -1,    -1,   218,    -1,
     220,    -1,    -1,   223,   224,   225,    -1,    -1,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,    -1,   246,   247,   248,   249,
     250,    -1,   252,   253,    -1,   255,    -1,   257,   258,   259,
     260,   261,   262,    -1,   264,   265,    -1,    -1,   268,   269,
     270,    -1,    -1,   273,   274,    -1,   276,    -1,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,    -1,   289,
     290,   291,   292,   293,   294,   295,   296,   297,    -1,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,    -1,   327,   328,    -1,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,    -1,
     350,   351,   352,   353,   354,    -1,   356,   357,   358,   359,
      -1,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,    -1,   375,   376,    -1,   378,    -1,
     380,   381,   382,   383,   384,    -1,   386,   387,    -1,    -1,
     390,   391,   392,   393,   394,    -1,   396,   397,   398,   399,
     400,   401,   402,    -1,    -1,   405,   406,   407,   408,   409,
      -1,    -1,   412,   413,   414,   415,   416,   417,   418,    -1,
     420,    -1,   422,   423,   424,   425,    -1,    -1,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    -1,    44,    45,    46,    47,    48,    -1,    50,    51,
      -1,    53,    54,    55,    56,    57,    58,    -1,    -1,    61,
      62,    63,    64,    65,    -1,    67,    68,    69,    70,    71,
      -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,    81,
      82,    83,    -1,    85,    86,    87,    88,    89,    90,    -1,
      -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   103,   104,   105,   106,   107,   108,   109,   110,   111,
      -1,   113,    -1,   115,   116,   117,   118,   119,   120,    -1,
     122,   123,   124,   125,   126,    -1,    -1,   129,   130,   131,
     132,   133,    -1,   135,   136,   137,    -1,   139,   140,   141,
      -1,   143,   144,   145,   146,   147,   148,   149,   150,   151,
      -1,   153,    -1,   155,   156,   157,   158,    -1,   160,    -1,
     162,    -1,    -1,    -1,   166,   167,   168,   169,    -1,   171,
      -1,   173,   174,    -1,   176,   177,   178,   179,   180,    -1,
     182,   183,   184,   185,    -1,   187,   188,   189,   190,   191,
     192,    -1,   194,    -1,   196,   197,   198,   199,   200,   201,
     202,    -1,   204,    -1,   206,    -1,    -1,   209,    -1,   211,
     212,   213,   214,   215,    -1,    -1,   218,    -1,   220,    -1,
      -1,   223,   224,   225,    -1,    -1,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,    -1,   246,   247,   248,   249,   250,    -1,
     252,   253,    -1,   255,    -1,   257,   258,   259,   260,   261,
     262,    -1,   264,   265,    -1,    -1,   268,   269,   270,    -1,
      -1,   273,   274,    -1,   276,    -1,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,    -1,   289,   290,   291,
     292,   293,   294,   295,   296,   297,    -1,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,    -1,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,    -1,   327,   328,    -1,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,    -1,   344,   345,   346,   347,   348,    -1,   350,   351,
     352,   353,   354,    -1,   356,   357,   358,   359,    -1,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,    -1,   375,   376,    -1,   378,    -1,   380,   381,
     382,   383,   384,    -1,   386,   387,    -1,    -1,   390,   391,
     392,   393,   394,    -1,   396,   397,   398,   399,   400,   401,
     402,    -1,    -1,   405,   406,   407,   408,   409,    -1,    -1,
     412,   413,   414,   415,   416,   417,   418,    -1,   420,    -1,
     422,   423,   424,   425,    -1,    -1,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,
      44,    45,    46,    47,    48,    -1,    50,    51,    -1,    53,
      54,    55,    56,    57,    58,    -1,    -1,    61,    62,    63,
      64,    65,    -1,    67,    68,    69,    70,    71,    -1,    -1,
      -1,    75,    76,    77,    78,    79,    -1,    81,    82,    83,
      -1,    85,    86,    87,    88,    89,    90,    -1,    -1,    93,
      94,    95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,
     104,   105,   106,   107,   108,   109,   110,   111,    -1,   113,
      -1,   115,   116,   117,   118,   119,   120,    -1,   122,   123,
     124,   125,   126,    -1,    -1,   129,   130,   131,   132,   133,
      -1,   135,   136,   137,    -1,   139,   140,   141,    -1,   143,
     144,   145,   146,   147,   148,   149,   150,   151,    -1,   153,
      -1,   155,   156,   157,   158,    -1,   160,    -1,   162,    -1,
      -1,    -1,   166,   167,   168,   169,    -1,   171,    -1,   173,
     174,    -1,   176,   177,   178,   179,   180,    -1,   182,   183,
     184,   185,    -1,   187,   188,   189,   190,   191,   192,    -1,
     194,    -1,   196,   197,   198,   199,   200,   201,   202,    -1,
     204,    -1,   206,    -1,    -1,   209,    -1,   211,   212,   213,
     214,   215,    -1,    -1,   218,    -1,   220,    -1,    -1,   223,
     224,   225,    -1,    -1,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,    -1,   246,   247,   248,   249,   250,    -1,   252,   253,
      -1,   255,    -1,   257,   258,   259,   260,   261,   262,    -1,
     264,   265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,
     274,    -1,   276,    -1,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,    -1,   289,   290,   291,   292,   293,
     294,   295,   296,   297,    -1,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,    -1,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,    -1,   327,   328,    -1,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,    -1,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,   359,    -1,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
      -1,   375,   376,    -1,   378,    -1,   380,   381,   382,   383,
     384,    -1,   386,   387,    -1,    -1,   390,   391,   392,   393,
     394,    -1,   396,   397,   398,   399,   400,   401,   402,    -1,
      -1,   405,   406,   407,   408,   409,    -1,    -1,   412,   413,
     414,   415,   416,   417,   418,    -1,   420,    -1,   422,   423,
     424,   425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    -1,    44,    45,
      46,    47,    48,    -1,    50,    51,    -1,    53,    54,    55,
      56,    57,    58,    -1,    -1,    61,    62,    63,    64,    65,
      -1,    67,    68,    69,    70,    71,    -1,    -1,    -1,    75,
      76,    77,    78,    79,    -1,    81,    82,    83,    -1,    85,
      86,    87,    88,    89,    90,    -1,    -1,    93,    94,    95,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,   104,   105,
     106,   107,   108,   109,   110,   111,    -1,   113,    -1,   115,
     116,   117,   118,   119,   120,    -1,   122,   123,   124,   125,
     126,    -1,    -1,   129,   130,   131,   132,   133,    -1,   135,
     136,   137,    -1,   139,   140,   141,    -1,   143,   144,   145,
     146,   147,   148,   149,   150,   151,    -1,   153,    -1,   155,
     156,   157,   158,    -1,   160,    -1,   162,    -1,    -1,    -1,
     166,   167,   168,   169,    -1,   171,    -1,   173,   174,    -1,
     176,   177,   178,   179,   180,    -1,   182,   183,   184,   185,
      -1,   187,   188,   189,   190,   191,   192,    -1,   194,    -1,
     196,   197,   198,   199,   200,   201,   202,    -1,   204,    -1,
     206,    -1,    -1,   209,    -1,   211,   212,   213,   214,   215,
      -1,    -1,   218,    -1,   220,    -1,    -1,   223,   224,   225,
      -1,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,    -1,
     246,   247,   248,   249,   250,    -1,   252,   253,    -1,   255,
      -1,   257,   258,   259,   260,   261,   262,    -1,   264,   265,
      -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,    -1,
     276,    -1,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,    -1,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,    -1,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
      -1,   327,   328,    -1,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,    -1,   350,   351,   352,   353,   354,    -1,
     356,   357,   358,   359,    -1,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,    -1,   375,
     376,    -1,   378,    -1,   380,   381,   382,   383,   384,    -1,
     386,   387,    -1,    -1,   390,   391,   392,   393,   394,    -1,
     396,   397,   398,   399,   400,   401,   402,    -1,    -1,   405,
     406,   407,   408,   409,    -1,    -1,   412,   413,   414,   415,
     416,   417,   418,    -1,   420,    -1,   422,   423,   424,   425,
      -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    -1,    44,    45,    46,    47,
      48,    -1,    50,    51,    -1,    53,    54,    55,    56,    57,
      58,    -1,    -1,    61,    62,    63,    64,    65,    -1,    67,
      68,    69,    70,    71,    -1,    -1,    -1,    75,    76,    77,
      78,    79,    -1,    81,    82,    83,    -1,    85,    86,    87,
      88,    89,    90,    -1,    -1,    93,    94,    95,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   103,   104,   105,   106,   107,
     108,   109,   110,   111,    -1,   113,    -1,   115,   116,   117,
     118,   119,   120,    -1,   122,   123,   124,   125,   126,    -1,
      -1,   129,   130,   131,   132,   133,    -1,   135,   136,   137,
      -1,   139,   140,   141,    -1,   143,   144,   145,   146,   147,
     148,   149,   150,   151,    -1,   153,    -1,   155,   156,   157,
     158,    -1,   160,    -1,   162,    -1,    -1,    -1,   166,   167,
     168,   169,    -1,   171,    -1,   173,   174,    -1,   176,   177,
     178,   179,   180,    -1,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,   191,   192,    -1,   194,    -1,   196,   197,
     198,   199,   200,   201,   202,    -1,   204,    -1,   206,    -1,
      -1,   209,    -1,   211,   212,   213,   214,   215,    -1,    -1,
     218,    -1,   220,    -1,    -1,   223,   224,   225,    -1,    -1,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,    -1,   246,   247,
     248,   249,   250,    -1,   252,   253,    -1,   255,    -1,   257,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,    -1,
     268,   269,   270,    -1,    -1,   273,   274,    -1,   276,    -1,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
      -1,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,    -1,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,    -1,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,    -1,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,    -1,   375,   376,    -1,
     378,    -1,   380,   381,   382,   383,   384,    -1,   386,   387,
      -1,    -1,   390,   391,   392,   393,   394,    -1,   396,   397,
     398,   399,   400,   401,   402,    -1,    -1,   405,   406,   407,
     408,   409,    -1,    -1,   412,   413,   414,   415,   416,   417,
     418,    -1,   420,    -1,   422,   423,   424,   425,    -1,    -1,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    -1,    44,    45,    46,    47,    48,    -1,
      50,    51,    -1,    53,    54,    55,    56,    57,    58,    -1,
      -1,    61,    62,    63,    64,    65,    -1,    67,    68,    69,
      70,    71,    -1,    -1,    -1,    75,    76,    77,    78,    79,
      -1,    81,    82,    83,    -1,    85,    86,    87,    88,    89,
      90,    -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   103,   104,   105,   106,   107,   108,   109,
     110,   111,    -1,   113,    -1,   115,   116,   117,   118,   119,
     120,    -1,   122,   123,   124,   125,   126,    -1,    -1,   129,
     130,   131,   132,   133,    -1,   135,   136,   137,    -1,   139,
     140,   141,    -1,   143,   144,   145,   146,   147,   148,   149,
     150,   151,    -1,   153,    -1,   155,   156,   157,   158,    -1,
     160,    -1,   162,    -1,    -1,    -1,   166,   167,   168,   169,
      -1,   171,    -1,   173,   174,    -1,   176,   177,   178,   179,
     180,    -1,   182,   183,   184,   185,    -1,   187,   188,   189,
     190,   191,   192,    -1,   194,    -1,   196,   197,   198,   199,
     200,   201,   202,    -1,   204,    -1,   206,    -1,    -1,   209,
      -1,   211,   212,   213,   214,   215,    -1,    -1,   218,    -1,
     220,    -1,    -1,   223,   224,   225,    -1,    -1,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,    -1,   246,   247,   248,   249,
     250,    -1,   252,   253,    -1,   255,    -1,   257,   258,   259,
     260,   261,   262,    -1,   264,   265,    -1,    -1,   268,   269,
     270,    -1,    -1,   273,   274,    -1,   276,    -1,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,    -1,   289,
     290,   291,   292,   293,   294,   295,   296,   297,    -1,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,    -1,   327,   328,    -1,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,    -1,
     350,   351,   352,   353,   354,    -1,   356,   357,   358,   359,
      -1,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,    -1,   375,   376,    -1,   378,    -1,
     380,   381,   382,   383,   384,    -1,   386,   387,    -1,    -1,
     390,   391,   392,   393,   394,    -1,   396,   397,   398,   399,
     400,   401,   402,    -1,    -1,   405,   406,   407,   408,   409,
      -1,    -1,   412,   413,   414,   415,   416,   417,   418,    -1,
     420,    -1,   422,   423,   424,   425,    -1,    -1,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    -1,    44,    45,    46,    47,    48,    -1,    50,    51,
      -1,    53,    54,    55,    56,    57,    58,    -1,    -1,    61,
      62,    63,    64,    65,    -1,    67,    68,    69,    70,    71,
      -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,    81,
      82,    83,    -1,    85,    86,    87,    88,    89,    90,    -1,
      -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   103,   104,   105,   106,   107,   108,   109,   110,   111,
      -1,   113,    -1,   115,   116,   117,   118,   119,   120,    -1,
     122,   123,   124,   125,   126,    -1,    -1,   129,   130,   131,
     132,   133,    -1,   135,   136,   137,    -1,   139,   140,   141,
      -1,   143,   144,   145,   146,   147,   148,   149,   150,   151,
      -1,   153,    -1,   155,   156,   157,   158,    -1,   160,    -1,
     162,    -1,    -1,    -1,   166,   167,   168,   169,    -1,   171,
      -1,   173,   174,    -1,   176,   177,   178,   179,   180,    -1,
     182,   183,   184,   185,    -1,   187,   188,   189,   190,   191,
     192,    -1,   194,    -1,   196,   197,   198,   199,   200,   201,
     202,    -1,   204,    -1,   206,    -1,    -1,   209,    -1,   211,
     212,   213,   214,   215,    -1,    -1,   218,    -1,   220,    -1,
      -1,   223,   224,   225,    -1,    -1,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,    -1,   246,   247,   248,   249,   250,    -1,
     252,   253,    -1,   255,    -1,   257,   258,   259,   260,   261,
     262,    -1,   264,   265,    -1,    -1,   268,   269,   270,    -1,
      -1,   273,   274,    -1,   276,    -1,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,    -1,   289,   290,   291,
     292,   293,   294,   295,   296,   297,    -1,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,    -1,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,    -1,   327,   328,    -1,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,    -1,   344,   345,   346,   347,   348,    -1,   350,   351,
     352,   353,   354,    -1,   356,   357,   358,   359,    -1,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,    -1,   375,   376,    -1,   378,    -1,   380,   381,
     382,   383,   384,    -1,   386,   387,    -1,    -1,   390,   391,
     392,   393,   394,    -1,   396,   397,   398,   399,   400,   401,
     402,    -1,    -1,   405,   406,   407,   408,   409,    -1,    -1,
     412,   413,   414,   415,   416,   417,   418,    -1,   420,    -1,
     422,   423,   424,   425,    -1,    -1,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,
      44,    45,    46,    47,    48,    -1,    50,    51,    -1,    53,
      54,    55,    56,    57,    58,    -1,    -1,    61,    62,    63,
      64,    65,    -1,    67,    68,    69,    70,    71,    -1,    -1,
      -1,    75,    76,    77,    78,    79,    -1,    81,    82,    83,
      -1,    85,    86,    87,    88,    89,    90,    -1,    -1,    93,
      94,    95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,
     104,   105,   106,   107,   108,   109,   110,   111,    -1,   113,
      -1,   115,   116,   117,   118,   119,   120,    -1,   122,   123,
     124,   125,   126,    -1,    -1,   129,   130,   131,   132,   133,
      -1,   135,   136,   137,    -1,   139,   140,   141,    -1,   143,
     144,   145,   146,   147,   148,   149,   150,   151,    -1,   153,
      -1,   155,   156,   157,   158,    -1,   160,    -1,   162,    -1,
      -1,    -1,   166,   167,   168,   169,    -1,   171,    -1,   173,
     174,    -1,   176,   177,   178,   179,   180,    -1,   182,   183,
     184,   185,    -1,   187,   188,   189,   190,   191,   192,    -1,
     194,    -1,   196,   197,   198,   199,   200,   201,   202,    -1,
     204,    -1,   206,    -1,    -1,   209,    -1,   211,   212,   213,
     214,   215,    -1,    -1,   218,    -1,   220,    -1,    -1,   223,
     224,   225,    -1,    -1,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,    -1,   246,   247,   248,   249,   250,    -1,   252,   253,
      -1,   255,    -1,   257,   258,   259,   260,   261,   262,    -1,
     264,   265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,
     274,    -1,   276,    -1,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,    -1,   289,   290,   291,   292,   293,
     294,   295,   296,   297,    -1,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,    -1,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,    -1,   327,   328,    -1,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,    -1,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,   359,    -1,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
      -1,   375,   376,    -1,   378,    -1,   380,   381,   382,   383,
     384,    -1,   386,   387,    -1,    -1,   390,   391,   392,   393,
     394,    -1,   396,   397,   398,   399,   400,   401,   402,    -1,
      -1,   405,   406,   407,   408,   409,    -1,    -1,   412,   413,
     414,   415,   416,   417,   418,    -1,   420,    -1,   422,   423,
     424,   425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    35,
      -1,    37,    38,    -1,    40,    41,    42,    -1,    44,    45,
      46,    47,    48,    -1,    50,    51,    -1,    53,    54,    55,
      56,    57,    58,    -1,    -1,    61,    62,    63,    64,    65,
      -1,    67,    68,    69,    70,    71,    -1,    -1,    -1,    75,
      76,    77,    78,    79,    -1,    81,    82,    83,    -1,    85,
      86,    87,    88,    89,    90,    -1,    -1,    93,    94,    95,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,   104,   105,
     106,   107,   108,   109,   110,   111,    -1,   113,    -1,   115,
     116,   117,   118,   119,   120,    -1,   122,   123,   124,   125,
     126,    -1,    -1,   129,   130,   131,   132,   133,    -1,   135,
     136,   137,    -1,   139,   140,   141,    -1,   143,   144,   145,
     146,   147,   148,   149,   150,   151,    -1,   153,    -1,   155,
     156,   157,   158,    -1,   160,    -1,   162,    -1,    -1,    -1,
     166,   167,   168,   169,    -1,   171,    -1,   173,   174,    -1,
     176,   177,   178,   179,   180,    -1,   182,   183,   184,   185,
      -1,   187,   188,   189,   190,   191,   192,    -1,   194,    -1,
     196,   197,   198,   199,   200,   201,   202,    -1,   204,    -1,
     206,    -1,    -1,   209,    -1,   211,   212,   213,   214,   215,
      -1,    -1,   218,    -1,   220,    -1,    -1,   223,   224,   225,
      -1,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,    -1,
     246,   247,   248,   249,   250,    -1,   252,   253,    -1,   255,
      -1,   257,   258,   259,   260,   261,   262,    -1,   264,   265,
      -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,    -1,
     276,    -1,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,    -1,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,    -1,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
      -1,   327,   328,    -1,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,    -1,    -1,   351,   352,   353,   354,    -1,
     356,   357,   358,   359,    -1,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,    -1,   375,
     376,    -1,   378,    -1,   380,   381,   382,   383,   384,    -1,
     386,   387,    -1,    -1,   390,   391,   392,   393,   394,    -1,
     396,   397,   398,   399,   400,   401,   402,    -1,    -1,   405,
     406,   407,   408,   409,    -1,    -1,   412,   413,   414,   415,
     416,   417,   418,    -1,   420,    -1,   422,   423,   424,   425,
      -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    -1,    44,    45,    46,    47,
      48,    -1,    50,    51,    -1,    53,    54,    55,    56,    57,
      58,    -1,    -1,    61,    62,    63,    64,    65,    -1,    67,
      68,    69,    70,    71,    -1,    -1,    -1,    75,    76,    77,
      78,    79,    -1,    81,    82,    83,    -1,    85,    86,    87,
      88,    89,    90,    -1,    -1,    93,    94,    95,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   103,   104,   105,   106,   107,
     108,   109,   110,   111,    -1,   113,    -1,   115,   116,   117,
     118,   119,   120,    -1,   122,   123,   124,   125,   126,    -1,
      -1,   129,   130,   131,   132,   133,    -1,   135,   136,   137,
      -1,   139,   140,   141,    -1,   143,   144,   145,   146,   147,
     148,   149,   150,   151,    -1,   153,    -1,   155,   156,   157,
     158,    -1,   160,    -1,   162,    -1,    -1,    -1,   166,   167,
     168,   169,    -1,   171,    -1,   173,   174,    -1,   176,   177,
     178,   179,   180,    -1,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,   191,   192,    -1,   194,    -1,   196,   197,
     198,   199,   200,   201,   202,    -1,   204,    -1,   206,    -1,
      -1,   209,    -1,   211,   212,   213,   214,   215,    -1,    -1,
     218,    -1,   220,    -1,    -1,   223,   224,   225,    -1,    -1,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,    -1,   246,   247,
     248,   249,   250,    -1,   252,   253,    -1,   255,    -1,   257,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,    -1,
     268,   269,   270,    -1,    -1,   273,   274,    -1,   276,    -1,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
      -1,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,    -1,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,    -1,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,    -1,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,    -1,   375,   376,    -1,
     378,    -1,   380,   381,   382,   383,   384,    -1,   386,   387,
      -1,    -1,   390,   391,   392,   393,   394,    -1,   396,   397,
     398,   399,   400,   401,   402,    -1,    -1,   405,   406,   407,
     408,   409,    -1,    -1,   412,   413,   414,   415,   416,   417,
     418,    -1,   420,    -1,   422,   423,   424,   425,    -1,    -1,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    -1,    44,    45,    46,    47,    48,    -1,
      50,    51,    -1,    53,    54,    55,    56,    57,    58,    -1,
      -1,    61,    62,    63,    64,    65,    -1,    67,    68,    69,
      70,    71,    -1,    -1,    -1,    75,    76,    77,    78,    79,
      -1,    81,    82,    83,    -1,    85,    86,    87,    88,    89,
      90,    -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   103,   104,   105,   106,   107,   108,   109,
     110,   111,    -1,   113,    -1,   115,   116,   117,   118,   119,
     120,    -1,   122,   123,   124,   125,   126,    -1,    -1,   129,
     130,   131,   132,   133,    -1,   135,   136,   137,    -1,   139,
     140,   141,    -1,   143,   144,   145,   146,   147,   148,   149,
     150,   151,    -1,   153,    -1,   155,   156,   157,   158,    -1,
     160,    -1,   162,    -1,    -1,    -1,   166,   167,   168,   169,
      -1,   171,    -1,   173,   174,    -1,   176,   177,   178,   179,
     180,    -1,   182,   183,   184,   185,    -1,   187,   188,   189,
     190,   191,   192,    -1,   194,    -1,   196,   197,   198,   199,
     200,   201,   202,    -1,   204,    -1,   206,    -1,    -1,   209,
      -1,   211,   212,   213,   214,   215,    -1,    -1,   218,    -1,
     220,    -1,    -1,   223,   224,   225,    -1,    -1,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,    -1,   246,   247,   248,   249,
     250,    -1,   252,   253,    -1,   255,    -1,   257,   258,   259,
     260,   261,   262,    -1,   264,   265,    -1,    -1,   268,   269,
     270,    -1,    -1,   273,   274,    -1,   276,    -1,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,    -1,   289,
     290,   291,   292,   293,   294,   295,   296,   297,    -1,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,    -1,   327,   328,    -1,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,    -1,
     350,   351,   352,   353,   354,    -1,   356,   357,   358,   359,
      -1,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,    -1,   375,   376,    -1,   378,    -1,
     380,   381,   382,   383,   384,    -1,   386,   387,    -1,    -1,
     390,   391,   392,   393,   394,    -1,   396,   397,   398,   399,
     400,   401,   402,    -1,    -1,   405,   406,   407,   408,   409,
      -1,    -1,   412,   413,   414,   415,   416,   417,   418,    -1,
     420,    -1,   422,   423,   424,   425,    -1,    -1,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    -1,    44,    45,    46,    47,    48,    -1,    50,    51,
      -1,    53,    54,    55,    56,    57,    58,    -1,    -1,    61,
      62,    63,    64,    65,    -1,    67,    68,    69,    70,    71,
      -1,    -1,    -1,    75,    76,    77,    78,    79,    -1,    81,
      82,    83,    -1,    85,    86,    87,    88,    89,    90,    -1,
      -1,    93,    94,    95,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   103,   104,   105,   106,   107,   108,   109,   110,   111,
      -1,   113,    -1,   115,   116,   117,   118,   119,   120,    -1,
     122,   123,   124,   125,   126,    -1,    -1,   129,   130,   131,
     132,   133,    -1,   135,   136,   137,    -1,   139,   140,   141,
      -1,   143,   144,   145,   146,   147,   148,   149,   150,   151,
      -1,   153,    -1,   155,   156,   157,   158,    -1,   160,    -1,
     162,    -1,    -1,    -1,   166,   167,   168,   169,    -1,   171,
      -1,   173,   174,    -1,   176,   177,   178,   179,   180,    -1,
     182,   183,   184,   185,    -1,   187,   188,   189,   190,   191,
     192,    -1,   194,    -1,   196,   197,   198,   199,   200,   201,
     202,    -1,   204,    -1,   206,    -1,    -1,   209,    -1,   211,
     212,   213,   214,   215,    -1,    -1,   218,    -1,   220,    -1,
      -1,   223,   224,   225,    -1,    -1,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,    -1,   246,   247,   248,   249,   250,    -1,
     252,   253,    -1,   255,    -1,   257,   258,   259,   260,   261,
     262,    -1,   264,   265,    -1,    -1,   268,   269,   270,    -1,
      -1,   273,   274,    -1,   276,    -1,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,    -1,   289,   290,   291,
     292,   293,   294,   295,   296,   297,    -1,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,    -1,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,    -1,   327,   328,    -1,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,    -1,   344,   345,   346,   347,   348,    -1,   350,   351,
     352,   353,   354,    -1,   356,   357,   358,   359,    -1,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,    -1,   375,   376,    -1,   378,    -1,   380,   381,
     382,   383,   384,    -1,   386,   387,    -1,    -1,   390,   391,
     392,   393,   394,    -1,   396,   397,   398,   399,   400,   401,
     402,    -1,    -1,   405,   406,   407,   408,   409,    -1,    -1,
     412,   413,   414,   415,   416,   417,   418,    -1,   420,    -1,
     422,   423,   424,   425,    -1,    -1,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    21,    22,    23,
      24,    25,    -1,    27,    28,    29,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    37,    38,    -1,    40,    41,    42,    -1,
      44,    45,    46,    47,    48,    -1,    50,    51,    -1,    53,
      54,    55,    56,    57,    58,    -1,    -1,    61,    62,    63,
      64,    65,    -1,    67,    68,    69,    70,    71,    -1,    -1,
      -1,    75,    76,    77,    78,    79,    -1,    81,    82,    83,
      -1,    85,    86,    87,    88,    89,    90,    -1,    -1,    93,
      94,    95,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,
     104,   105,   106,   107,   108,   109,   110,   111,    -1,   113,
      -1,   115,   116,   117,   118,   119,   120,    -1,   122,   123,
     124,   125,   126,    -1,    -1,   129,   130,   131,   132,   133,
      -1,   135,   136,   137,    -1,   139,   140,   141,    -1,   143,
     144,   145,   146,   147,   148,   149,   150,   151,    -1,   153,
      -1,   155,   156,   157,   158,    -1,   160,    -1,   162,    -1,
      -1,    -1,   166,   167,   168,   169,    -1,   171,    -1,   173,
     174,    -1,   176,   177,   178,   179,   180,    -1,   182,   183,
     184,   185,    -1,   187,   188,   189,   190,   191,   192,    -1,
     194,    -1,   196,   197,   198,   199,   200,   201,   202,    -1,
     204,    -1,   206,    -1,    -1,   209,    -1,   211,   212,   213,
     214,   215,    -1,    -1,   218,    -1,   220,    -1,    -1,   223,
     224,   225,    -1,    -1,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,    -1,   246,   247,   248,   249,   250,    -1,   252,   253,
      -1,   255,    -1,   257,   258,   259,   260,   261,   262,    -1,
     264,   265,    -1,    -1,   268,   269,   270,    -1,    -1,   273,
     274,    -1,   276,    -1,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,    -1,   289,   290,   291,   292,   293,
     294,   295,   296,   297,    -1,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,    -1,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,    -1,   327,   328,    -1,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,    -1,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,   359,    -1,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
      -1,   375,   376,    -1,   378,    -1,   380,   381,   382,   383,
     384,    -1,   386,   387,    -1,    -1,   390,   391,   392,   393,
     394,    -1,   396,   397,   398,   399,   400,   401,   402,    -1,
      -1,   405,   406,   407,   408,   409,    -1,    -1,   412,   413,
     414,   415,   416,   417,   418,    -1,   420,    -1,   422,   423,
     424,   425,    -1,    -1,   428,    -1,    -1,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    21,    22,    23,    24,    25,
      -1,    27,    28,    29,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    37,    38,    -1,    40,    41,    42,    -1,    44,    45,
      46,    47,    48,    -1,    50,    51,    -1,    53,    54,    55,
      56,    57,    58,    -1,    -1,    61,    62,    63,    64,    65,
      -1,    67,    68,    69,    70,    71,    -1,    -1,    -1,    75,
      76,    77,    78,    79,    -1,    81,    82,    83,    -1,    85,
      86,    87,    88,    89,    90,    -1,    -1,    93,    94,    95,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   103,   104,   105,
     106,   107,   108,   109,   110,   111,    -1,   113,    -1,   115,
     116,   117,   118,   119,   120,    -1,   122,   123,   124,   125,
     126,    -1,    -1,   129,   130,   131,   132,   133,    -1,   135,
     136,   137,    -1,   139,   140,   141,    -1,   143,   144,   145,
     146,   147,   148,   149,   150,   151,    -1,   153,    -1,   155,
     156,   157,   158,    -1,   160,    -1,   162,    -1,    -1,    -1,
     166,   167,   168,   169,    -1,   171,    -1,   173,   174,    -1,
     176,   177,   178,   179,   180,    -1,   182,   183,   184,   185,
      -1,   187,   188,   189,   190,   191,   192,    -1,   194,    -1,
     196,   197,   198,   199,   200,   201,   202,    -1,   204,    -1,
     206,    -1,    -1,   209,    -1,   211,   212,   213,   214,   215,
      -1,    -1,   218,    -1,   220,    -1,    -1,   223,   224,   225,
      -1,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,    -1,
     246,   247,   248,   249,   250,    -1,   252,   253,    -1,   255,
      -1,   257,   258,   259,   260,   261,   262,    -1,   264,   265,
      -1,    -1,   268,   269,   270,    -1,    -1,   273,   274,    -1,
     276,    -1,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,    -1,   289,   290,   291,   292,   293,   294,   295,
     296,   297,    -1,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,    -1,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
      -1,   327,   328,    -1,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,    -1,   350,   351,   352,   353,   354,    -1,
     356,   357,   358,   359,    -1,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,    -1,   375,
     376,    -1,   378,    -1,   380,   381,   382,   383,   384,    -1,
     386,   387,    -1,    -1,   390,   391,   392,   393,   394,    -1,
     396,   397,   398,   399,   400,   401,   402,    -1,    -1,   405,
     406,   407,   408,   409,    -1,    -1,   412,   413,   414,   415,
     416,   417,   418,    -1,   420,    -1,   422,   423,   424,   425,
      -1,    -1,   428,    -1,    -1,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    -1,    44,    45,    46,    47,
      48,    -1,    50,    51,    -1,    53,    54,    55,    56,    57,
      58,    -1,    -1,    61,    62,    63,    64,    65,    -1,    67,
      68,    69,    70,    71,    -1,    -1,    -1,    75,    76,    77,
      78,    79,    -1,    81,    82,    83,    -1,    85,    86,    87,
      88,    89,    90,    -1,    -1,    93,    94,    95,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   103,   104,   105,   106,   107,
     108,   109,   110,   111,    -1,   113,    -1,   115,   116,   117,
     118,   119,   120,    -1,   122,   123,   124,   125,   126,    -1,
      -1,   129,   130,   131,   132,   133,    -1,   135,   136,   137,
      -1,   139,   140,   141,    -1,   143,   144,   145,   146,   147,
     148,   149,   150,   151,    -1,   153,    -1,   155,   156,   157,
     158,    -1,   160,    -1,   162,    -1,    -1,    -1,   166,   167,
     168,   169,    -1,   171,    -1,   173,   174,    -1,   176,   177,
     178,   179,   180,    -1,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,   191,   192,    -1,   194,    -1,   196,   197,
     198,   199,   200,   201,   202,    -1,   204,    -1,   206,    -1,
      -1,   209,    -1,   211,   212,   213,   214,   215,    -1,    -1,
     218,    -1,   220,    -1,    -1,   223,   224,   225,    -1,    -1,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,    -1,   246,   247,
     248,   249,   250,    -1,   252,   253,    -1,   255,    -1,   257,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,    -1,
     268,   269,   270,    -1,    -1,   273,   274,    -1,   276,    -1,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
      -1,   289,   290,   291,   292,   293,   294,   295,   296,   297,
      -1,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,    -1,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,    -1,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,    -1,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,    -1,   375,   376,    -1,
     378,    -1,   380,   381,   382,   383,   384,    -1,   386,   387,
      -1,    -1,   390,   391,   392,   393,   394,    -1,   396,   397,
     398,   399,   400,   401,   402,    -1,    -1,   405,   406,   407,
     408,   409,    -1,    -1,   412,   413,   414,   415,   416,   417,
     418,    -1,   420,    -1,   422,   423,   424,   425,    -1,    -1,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,    19,
      20,    21,    22,    23,    24,    25,    -1,    27,    28,    29,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,    38,    -1,
      40,    41,    42,    -1,    44,    45,    46,    47,    48,    -1,
      50,    51,    -1,    53,    54,    55,    56,    57,    58,    -1,
      -1,    61,    62,    63,    64,    65,    -1,    67,    68,    69,
      70,    71,    -1,    -1,    -1,    75,    76,    77,    78,    79,
      -1,    81,    82,    83,    -1,    85,    86,    87,    88,    89,
      90,    -1,    -1,    93,    94,    95,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   103,   104,   105,   106,   107,   108,   109,
     110,   111,    -1,   113,    -1,   115,   116,   117,   118,   119,
     120,    -1,   122,   123,   124,   125,   126,    -1,    -1,   129,
     130,   131,   132,   133,    -1,   135,   136,   137,    -1,   139,
     140,   141,    -1,   143,   144,   145,   146,   147,   148,   149,
     150,   151,    -1,   153,    -1,   155,   156,   157,   158,    -1,
     160,    -1,   162,    -1,    -1,    -1,   166,   167,   168,   169,
      -1,   171,    -1,   173,   174,    -1,   176,   177,   178,   179,
     180,    -1,   182,   183,   184,   185,    -1,   187,   188,   189,
     190,   191,   192,    -1,   194,    -1,   196,   197,   198,   199,
     200,   201,   202,    -1,   204,    -1,   206,    -1,    -1,   209,
      -1,   211,   212,   213,   214,   215,    -1,    -1,   218,    -1,
     220,    -1,    -1,   223,   224,   225,    -1,    -1,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,    -1,   246,   247,   248,   249,
     250,    -1,   252,   253,    -1,   255,    -1,   257,   258,   259,
     260,   261,   262,    -1,   264,   265,    -1,    -1,   268,   269,
     270,    -1,    -1,   273,   274,    -1,   276,    -1,   278,   279,
     280,   281,   282,   283,   284,    -1,   286,   287,    -1,   289,
     290,   291,   292,   293,   294,   295,   296,   297,    -1,   299,
     300,   301,   302,   303,   304,   305,    -1,   307,   308,   309,
     310,   311,   312,    -1,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,    -1,   327,   328,    -1,
     330,   331,   332,   333,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,    -1,
     350,   351,   352,   353,   354,    -1,   356,   357,   358,   359,
      -1,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,    -1,   375,   376,    -1,   378,    -1,
     380,   381,   382,   383,   384,    -1,   386,   387,    -1,    -1,
     390,   391,   392,   393,   394,    -1,   396,   397,   398,   399,
     400,   401,   402,    -1,    -1,   405,   406,   407,   408,   409,
      -1,    -1,   412,   413,   414,   415,   416,   417,   418,    -1,
     420,    -1,   422,   423,   424,   425,    -1,    -1,   428,    -1,
      -1,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,    21,
      22,    23,    24,    25,    -1,    27,    28,    29,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    37,    38,    -1,    40,    41,
      42,    43,    44,    45,    46,    -1,    48,    49,    50,    51,
      -1,    53,    54,    55,    56,    57,    58,    -1,    -1,    61,
      62,    63,    64,    65,    -1,    67,    68,    69,    70,    -1,
      -1,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    -1,    85,    86,    87,    88,    89,    90,    -1,
      92,    93,    94,    95,    -1,    -1,    -1,    99,    -1,    -1,
      -1,   103,   104,   105,   106,   107,   108,   109,   110,   111,
      -1,   113,    -1,   115,   116,   117,   118,   119,   120,    -1,
     122,   123,   124,   125,   126,    -1,    -1,   129,   130,   131,
     132,   133,    -1,   135,   136,   137,    -1,   139,   140,   141,
      -1,   143,   144,   145,   146,    -1,   148,   149,   150,    -1,
      -1,   153,    -1,   155,   156,   157,   158,    -1,   160,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,    -1,   171,
      -1,    -1,   174,    -1,   176,   177,   178,   179,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,   190,   191,
     192,    -1,   194,   195,    -1,   197,   198,   199,   200,   201,
     202,    -1,   204,    -1,   206,   207,   208,   209,   210,   211,
     212,   213,   214,   215,    -1,    -1,   218,   219,   220,   221,
      -1,   223,   224,   225,    -1,    -1,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,    -1,    -1,
     252,   253,   254,   255,    -1,    -1,   258,   259,   260,   261,
     262,    -1,   264,   265,    -1,    -1,   268,   269,   270,    -1,
      -1,   273,    -1,   275,   276,   277,    -1,   279,   280,   281,
     282,   283,   284,   285,   286,   287,    -1,   289,   290,    -1,
     292,   293,    -1,   295,   296,   297,    -1,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,    -1,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,    -1,   327,   328,   329,   330,   331,
     332,    -1,   334,   335,   336,   337,   338,   339,   340,   341,
     342,    -1,   344,   345,   346,   347,   348,    -1,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,    -1,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,    -1,    -1,   375,   376,    -1,   378,   379,   380,   381,
     382,   383,   384,    -1,   386,   387,    -1,    -1,   390,   391,
      -1,   393,    -1,    -1,   396,   397,   398,   399,   400,   401,
     402,    -1,    -1,   405,   406,   407,   408,   409,    -1,    -1,
     412,   413,   414,   415,   416,    -1,   418,    -1,   420,   421,
     422,   423,   424,   425,    -1,    -1,   428,    -1,    -1,   431,
     432,   433,   434,   435,   436,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   448,   449,   450,    -1,
      18,    19,    20,    21,    22,    23,    24,    25,    -1,    27,
      28,    29,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    37,
      38,    -1,    40,    41,    42,    43,    44,    45,    46,    -1,
      48,    49,    50,    51,    -1,    53,    54,    55,    56,    57,
      58,    -1,    -1,    61,    62,    63,    64,    65,    -1,    67,
      68,    69,    70,    -1,    -1,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    -1,    85,    86,    87,
      88,    89,    90,    -1,    92,    93,    94,    95,    -1,    -1,
      -1,    99,    -1,    -1,    -1,   103,   104,   105,   106,   107,
     108,   109,   110,   111,    -1,   113,    -1,   115,   116,   117,
     118,   119,   120,    -1,   122,   123,   124,   125,   126,    -1,
      -1,   129,   130,   131,   132,   133,    -1,   135,   136,   137,
      -1,   139,   140,   141,    -1,   143,   144,   145,   146,    -1,
     148,   149,   150,    -1,    -1,   153,    -1,   155,   156,   157,
     158,    -1,   160,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,    -1,   171,    -1,    -1,   174,    -1,   176,   177,
     178,   179,   180,   181,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,   191,   192,    -1,   194,   195,    -1,   197,
     198,   199,   200,   201,   202,    -1,   204,    -1,   206,   207,
     208,   209,   210,   211,   212,   213,   214,   215,    -1,    -1,
     218,   219,   220,   221,    -1,   223,   224,   225,    -1,    -1,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,    -1,    -1,   252,   253,   254,   255,    -1,    -1,
     258,   259,   260,   261,   262,    -1,   264,   265,    -1,    -1,
     268,   269,   270,    -1,    -1,   273,    -1,   275,   276,   277,
      -1,   279,   280,   281,   282,   283,   284,   285,   286,   287,
      -1,   289,   290,    -1,   292,   293,    -1,   295,   296,   297,
      -1,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,    -1,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,    -1,   327,
     328,   329,   330,   331,   332,    -1,   334,   335,   336,   337,
     338,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,    -1,   350,    -1,   352,   353,   354,   355,   356,   357,
     358,   359,    -1,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,    -1,    -1,   375,   376,    -1,
     378,   379,   380,   381,   382,   383,   384,    -1,   386,   387,
      -1,    -1,   390,   391,    -1,   393,    -1,    -1,   396,   397,
     398,   399,   400,   401,   402,    -1,    -1,   405,   406,   407,
     408,   409,    -1,    -1,   412,   413,   414,   415,   416,    -1,
     418,    -1,   420,   421,   422,   423,   424,   425,    -1,    -1,
     428,    -1,    -1,   431,   432,   433,   434,   435,   436,    -1,
      22,    -1,    -1,    -1,    -1,    -1,    28,    -1,    -1,    -1,
     448,   449,   450,    35,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    54,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   104,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     132,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   188,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   235,    -1,    -1,   238,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   249,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   270,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   319,    -1,    -1,
      -1,   323,   324,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   344,    -1,    -1,    -1,    -1,    -1,   350,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   364,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   414
};

/* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
   symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,    18,    28,    30,    31,    46,    55,    67,    78,    89,
      91,   108,   122,   132,   138,   146,   148,   224,   292,   295,
     323,   331,   343,   350,   354,   364,   377,   412,   417,   430,
     453,   467,   475,   476,   477,   478,   489,   490,   492,   496,
     510,   511,   513,   515,   522,   524,   570,   576,   577,   594,
     595,   596,   597,   598,   599,   636,   755,   758,   761,   768,
     769,   770,   777,   781,   787,   789,   794,   798,   799,   802,
     803,   805,   806,   808,   390,   433,   523,   189,   337,   344,
     377,   423,   523,     3,    18,    19,    20,    21,    22,    23,
      24,    25,    27,    28,    29,    37,    38,    40,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    53,
      54,    55,    56,    57,    58,    61,    62,    63,    64,    65,
      67,    68,    69,    70,    71,    73,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    85,    86,    87,    88,    89,
      90,    92,    93,    94,    95,    99,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   113,   115,   116,   117,   118,
     119,   120,   122,   123,   124,   125,   126,   129,   130,   131,
     132,   133,   135,   136,   137,   139,   140,   141,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   153,   155,   156,
     157,   158,   160,   162,   163,   165,   166,   167,   168,   169,
     171,   173,   174,   176,   177,   178,   179,   180,   181,   182,
     183,   184,   185,   187,   188,   189,   190,   191,   192,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   204,   206,
     207,   208,   209,   210,   211,   212,   213,   214,   215,   218,
     219,   220,   221,   223,   224,   225,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   252,
     253,   254,   255,   257,   258,   259,   260,   261,   262,   264,
     265,   268,   269,   270,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     344,   345,   346,   347,   348,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   375,   376,
     378,   379,   380,   381,   382,   383,   384,   386,   387,   390,
     391,   392,   393,   394,   396,   397,   398,   399,   400,   401,
     402,   405,   406,   407,   408,   409,   412,   413,   414,   415,
     416,   417,   418,   420,   421,   422,   423,   424,   425,   428,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     685,   742,   746,   748,   811,   812,   813,   523,    49,   467,
     589,   169,   225,   271,   337,   381,   383,   404,   407,   568,
     767,     3,    26,   295,   740,   746,   811,    20,    73,    88,
     141,   149,   161,   189,   234,   290,   304,   335,   337,   344,
     347,   366,   377,   384,   393,   423,   571,   572,   575,   523,
     740,    91,   421,   467,   492,   576,   594,   773,   777,   794,
     808,     5,   745,   788,   746,   740,    26,   386,   390,   746,
     800,   801,   804,   523,    26,   127,   606,   607,   225,   337,
     348,   386,   782,   783,   804,   523,   267,   647,   738,   746,
     165,   467,   791,   467,   311,   600,   601,   740,   600,   595,
     596,   599,     0,   470,   117,   199,   409,   142,   203,   272,
     403,   608,   609,   595,   597,   598,   471,   421,   771,    26,
     386,   390,   804,   180,   738,   740,   180,   738,   180,   647,
     180,   738,   467,   465,   469,   729,   731,   492,   576,   594,
     757,   794,   738,   381,   383,   381,   383,   321,   180,   746,
     311,   344,   377,   423,   189,    26,   740,   236,   393,   105,
     377,   423,   340,   180,   573,   746,   749,   180,   739,   740,
     180,   740,   467,   514,   568,   773,     3,   417,   774,   776,
     777,   779,   780,   811,   812,   813,   771,   456,   467,   467,
     756,   450,   209,   469,   266,     4,     6,     7,     8,     9,
      10,    48,    50,    51,    59,    60,    63,    64,    71,    73,
      96,    97,    98,    99,   100,   101,   102,   109,   110,   112,
     131,   147,   151,   152,   157,   201,   202,   204,   226,   227,
     244,   246,   251,   256,   257,   259,   268,   278,   291,   308,
     333,   349,   358,   373,   386,   387,   392,   394,   395,   410,
     418,   451,   458,   459,   460,   467,   472,   595,   662,   665,
     668,   669,   670,   672,   673,   674,   675,   677,   678,   682,
     684,   685,   686,   688,   701,   705,   723,   728,   735,   736,
     742,   743,   744,   745,   746,   734,   735,   782,   745,   782,
     450,   164,   388,   456,   467,   738,   460,   731,     3,   163,
     165,   421,   777,   790,   792,   163,   793,   682,   709,   600,
     471,   467,   751,   468,   468,   477,   164,   205,   647,   795,
      26,   127,   605,   605,    53,   605,   154,   159,   222,   263,
     614,   616,   617,   629,   631,   632,   633,   608,   609,   467,
     738,   450,   209,   147,    22,    28,   132,   270,   319,   323,
     350,   414,   483,   486,   487,   319,   147,    35,    54,   104,
     188,   235,   238,   249,   280,   319,   324,   344,   350,   364,
     486,   516,   519,   147,   319,   350,   486,   147,   319,   350,
     486,    26,   127,   419,   460,   468,   682,   710,   711,   748,
     752,   682,   730,     3,    26,    30,    31,    32,    33,    34,
      35,    36,    39,    52,    59,    60,    66,    72,    74,    84,
      91,    96,    97,    98,   100,   101,   102,   112,   114,   121,
     127,   128,   134,   138,   142,   152,   154,   159,   161,   164,
     170,   172,   175,   186,   193,   203,   205,   216,   217,   222,
     226,   227,   251,   256,   263,   266,   267,   271,   272,   288,
     298,   313,   326,   343,   349,   360,   374,   377,   385,   388,
     389,   395,   403,   404,   410,   411,   419,   426,   427,   429,
     430,   460,   741,   753,   811,   812,   813,   814,   729,   468,
     467,   558,   568,   251,   759,   423,   180,   738,   180,   738,
     810,   738,    80,   764,   434,    81,   124,   283,   382,   147,
      57,   325,   471,   574,   469,   750,   147,   471,   574,   147,
     266,   709,   377,   468,   471,     4,   152,   266,   395,   458,
     459,   518,   521,   744,   745,   772,   774,   775,   778,   773,
     518,   778,   784,   786,   710,     3,    48,    50,    51,    63,
      64,   109,   110,   157,   201,   202,   204,   244,   246,   259,
     308,   351,   358,   386,   387,   418,   659,   661,   663,   665,
     667,   669,   670,   671,   673,   674,   677,   678,   712,   748,
     811,    35,   220,   746,   467,   732,   420,   676,   682,   727,
     467,   676,   676,   467,   159,   467,   467,   467,   664,   664,
     294,   595,   467,   467,   666,   467,   467,    63,    64,   676,
     682,   467,   664,   467,   467,   467,   467,   467,   432,   453,
     467,   679,   467,   679,   467,   467,   682,   682,   682,   595,
     682,   709,   732,   731,   745,   467,   467,   745,     3,     8,
      11,    15,    16,    17,    32,    35,    40,    47,    72,   181,
     186,   207,   208,   221,   251,   254,   268,   271,   355,   451,
     454,   455,   456,   458,   459,   460,   461,   462,   463,   703,
     704,   705,   707,   431,   689,   277,   682,   205,   471,   602,
     467,   745,   731,   602,     3,   112,   225,   518,   678,   745,
     785,    95,   112,   786,   112,   786,   738,   468,   471,   771,
     468,   471,   601,   739,    35,   795,   494,   738,    35,   746,
     350,   597,   597,   610,   611,   682,   597,   156,   248,   623,
     211,   249,   307,   353,   409,    26,   618,   682,   458,   459,
     619,   620,   682,   684,   629,   630,   617,   616,   614,   615,
     159,   632,   261,   634,   614,   629,   709,   751,   220,   738,
      66,    74,    84,   161,   180,   298,   404,   539,   549,   564,
     746,    74,    84,   491,    84,   491,   467,   388,   467,   537,
     231,   407,   537,    84,   471,   388,   738,   661,   518,    53,
     520,   518,   518,   104,   235,   238,    53,   388,   430,   453,
     517,   242,   337,   517,   519,   647,    84,   388,   491,   337,
     738,   388,   337,   710,   710,   711,   468,   471,   608,   609,
      13,    14,   466,   473,   388,   557,   562,   746,   430,   587,
     311,   423,   147,    91,   511,   524,   760,   761,   806,   738,
     251,   512,   516,   251,   467,   558,    35,   558,   180,   552,
     746,   765,   573,   749,   741,   469,   739,   740,   740,   749,
     468,   180,   738,   810,   773,   779,     4,   744,     4,   744,
     471,   468,   471,   661,    34,   660,   107,   178,   237,   240,
     341,   448,   467,   680,   681,   468,   471,   664,   750,   757,
     709,   729,   467,   426,   724,   725,   682,   709,   467,   744,
     744,   709,     3,   107,   178,   237,   240,   341,   448,   713,
     714,   745,   744,   744,   744,   676,   676,   682,     8,    15,
      16,    17,   454,   455,   456,   458,   459,   460,   461,   462,
     463,   703,   708,   746,   682,   715,   458,   459,   467,   683,
     684,   705,   717,   468,   709,   682,   709,   718,   386,   386,
     744,   744,   682,    52,   164,   217,   389,   682,   709,   721,
     468,   471,   744,   472,   744,   680,   659,   682,   682,   682,
     682,     5,   753,   754,   386,    39,   374,   733,   749,   682,
     467,   595,   722,   127,   152,   251,   256,   261,   395,   405,
     682,   256,   467,   682,   388,    47,   181,   186,   221,   355,
     682,   682,   682,   682,   682,   682,   682,   682,   682,   682,
      26,    33,   360,   702,   172,   155,   690,   333,   467,   701,
     169,   225,   377,   381,   383,   407,   603,   738,   736,   164,
     637,   710,   637,   467,   745,   468,   738,   790,   738,   798,
     682,   468,   467,   411,   797,   112,   279,   467,   493,   594,
      35,   746,   467,   498,   507,   509,   746,   471,    36,   121,
     411,   612,   333,   334,   458,   459,   620,   622,   684,   353,
     211,   267,   471,     4,   621,   744,   621,   333,   334,   622,
     737,   738,   255,   357,   635,   630,   615,   468,   319,   486,
     467,   180,   549,   740,   211,   251,   211,   411,   467,   542,
     659,   740,   746,   180,   740,   180,   746,    22,   132,   350,
     482,   485,   532,   547,   753,   740,   541,   561,   753,   740,
     483,   740,   319,   350,   486,   516,   518,   749,   740,   518,
     749,   740,   518,   319,   350,   486,   740,   740,   740,   740,
     319,   350,   486,   740,   740,   608,   608,   608,   419,   711,
     468,   682,   682,   682,   730,   303,   583,   468,   471,   264,
     164,   388,   578,   423,   738,   746,   568,   467,   147,   147,
     221,   539,   549,   553,   556,   565,   567,   746,   430,   432,
     544,   146,   594,   430,   766,   251,   266,   574,   741,   574,
     266,   574,   251,    35,   784,    34,   660,   465,   465,   388,
     388,   388,   467,   388,   744,   659,   664,   468,   709,   682,
     134,   725,   726,    35,   468,   682,   468,   468,   468,   468,
     164,   468,   468,   468,   471,   468,   469,   288,   716,   468,
     683,   683,   682,    11,    15,    16,    17,   186,   207,   268,
     454,   455,   456,   458,   459,   460,   461,   462,   463,   705,
     683,   468,   468,   159,   164,   719,   720,   468,   450,   450,
     468,   468,    35,   721,   709,   721,   721,   164,   468,   732,
     682,   468,   468,   468,   450,   683,   683,   140,   709,   164,
     127,   152,   256,   261,   395,   405,   467,   140,   708,   682,
     374,   733,   682,   722,   682,   388,   467,   595,   467,   467,
     276,   694,   381,   383,   381,   383,   738,   377,   604,   604,
     604,   216,   334,   467,   595,   638,   639,   640,   647,   650,
     685,   687,   688,   746,   427,   655,   608,   655,   744,   680,
     751,   757,   638,   427,   796,   417,   376,   410,   502,   497,
     506,   746,   266,   499,   746,   503,   509,   471,   637,   456,
     732,   611,   268,   703,   706,   452,   613,     4,   744,   622,
     267,   409,   619,   471,   230,   388,   682,   251,   564,   467,
     147,   467,   542,   189,   562,   525,   270,   535,   525,    22,
     132,   323,   324,   350,   479,   480,   481,   487,   488,   147,
     574,   147,   574,   532,   547,   532,   468,   471,   528,   745,
     468,   471,   456,   469,   388,   337,    84,   388,   491,   337,
     388,   388,   388,   337,   468,   468,   468,   711,   466,   367,
     368,   592,   745,   557,   583,   738,   558,   759,   377,   562,
     738,   738,   810,   738,   468,   471,   264,   537,   264,   266,
     536,   740,   430,   809,   537,    35,   147,   738,   749,   147,
     465,   744,   466,   744,   178,   237,   681,   237,   681,   681,
     744,   240,   468,   468,   385,   682,   138,   659,   468,   682,
     682,   708,   682,   719,   659,   683,   683,   683,   683,   127,
     251,   261,   683,   683,   683,   683,   683,   683,   683,   683,
     683,   683,   682,   682,   720,   719,   679,   679,   659,   468,
     468,   468,   709,   468,   472,   745,   682,    32,    32,   682,
     468,   682,   164,   467,   712,   682,   468,   140,   683,   683,
     140,   140,   682,   682,   609,   427,   467,   695,   746,   604,
     604,   604,   604,   738,   738,   738,   595,   650,   164,   595,
     639,   640,    35,   641,   642,   746,   471,    92,   165,   195,
     210,   219,   245,   329,   644,   642,    35,   641,   643,   746,
     453,   654,   731,   682,   172,   624,   468,   624,   468,   468,
     682,   326,   501,   416,   468,   471,   732,    82,   501,   468,
     471,   498,   796,   682,   467,   613,   156,   215,   267,   738,
     740,   468,   147,   562,   549,   562,   525,   552,   468,   114,
     193,   249,   251,   548,   467,   559,   168,   112,   179,   251,
     537,   517,   105,   112,   168,   251,   366,   369,   519,   537,
     350,   481,   398,   740,   746,   485,   561,   250,   268,   351,
     458,   459,   518,   526,   563,   659,   706,   745,   748,   814,
     753,   740,   740,   740,   740,   740,   740,   740,   740,   740,
     740,   608,   517,   592,   467,   766,   180,   738,   468,   512,
     467,    35,   546,   544,   553,    78,   514,   105,   249,   594,
     552,   411,   763,   574,   810,   744,   466,   466,   468,   682,
     468,   468,   720,   164,   127,   261,   467,   468,   680,   682,
     682,   682,   712,   468,   682,    32,    32,   682,   682,   140,
     468,   468,   682,   696,   746,   738,   738,   738,   738,   642,
     643,   467,   468,     5,   746,   747,   467,   639,   210,   275,
     645,   639,   645,   210,   644,   645,   210,   379,   648,   467,
     746,   467,   273,    53,   175,   628,   745,   628,   745,   735,
     594,   279,   594,   497,   266,   467,   495,   456,   509,   501,
     708,   525,   549,   468,   468,   430,   555,   115,   182,   191,
     114,   413,   532,   550,    66,    72,    84,   112,   114,   168,
     193,   251,   256,   298,   313,   404,   530,   531,   543,    29,
      53,   569,   180,   256,   518,   682,   569,   256,   458,   459,
     521,   746,   659,   574,   574,   748,   750,   456,   388,   388,
     468,   467,   584,   588,   411,   579,   581,   562,    35,   251,
     467,   766,   556,   146,   594,   144,   187,   536,   117,   132,
     297,   809,   105,   430,   807,   266,   746,   762,   467,    35,
     466,   683,   164,   467,   712,   468,   682,   682,   682,   468,
     285,   697,   651,   652,   687,   641,   467,   739,   639,   266,
     411,   646,   639,   210,   639,   742,   656,   657,   746,   467,
     656,   746,   467,   625,   626,   627,   682,   682,   429,   691,
     691,   502,    84,   467,   500,   508,   687,   746,   128,   682,
     468,   313,   555,   467,   545,   525,   468,   471,   467,   749,
     740,   683,   569,   115,   182,   114,   256,   211,   738,   555,
     112,    35,   147,    72,   658,   750,   462,   526,   740,   740,
     586,   593,   753,    49,    93,   118,   136,   140,   160,   163,
     176,   256,   264,   305,   590,   517,   119,   468,   594,   147,
      35,   468,   740,   809,    26,    77,    85,   113,   179,   190,
     366,   369,   540,   540,   334,   334,    58,    66,   225,   738,
     508,   683,   712,   468,    53,   608,   468,   471,    35,   653,
     739,   468,   682,   467,   639,   646,   467,   468,   471,   659,
     656,   468,   468,   471,   692,   693,   746,   416,   740,   682,
     468,   471,    72,   504,   504,   252,   409,   738,   525,   551,
     554,   753,   532,   682,   251,   531,    35,   555,   558,   179,
     749,   411,   484,   462,   398,   468,   471,   460,   467,   518,
     585,   778,    35,   582,   745,   582,   251,   256,   305,   582,
     582,   584,   745,   766,   807,   738,   594,   544,   514,    66,
     269,    66,   763,   468,   468,   709,   306,   334,   698,   654,
     651,   467,   468,   739,   709,   657,   658,   468,   626,   471,
      35,   594,   468,   655,   500,   749,   505,   749,   505,   350,
     558,   468,   471,   456,   468,   179,   233,   566,   467,   527,
     682,   398,   586,   580,   591,   778,   745,   745,   256,   562,
     460,   562,   745,   745,    35,   467,   807,   536,   809,   269,
     269,   467,   766,    47,    95,   400,   682,   699,   700,   699,
     468,   656,   468,   468,   693,   695,   504,   612,   612,   507,
     566,   554,   526,   249,   538,   527,   165,   284,   356,   266,
     533,   534,   560,   516,   468,   471,   562,   594,   508,   655,
     700,   333,   158,   293,   158,   293,   468,   320,   649,   505,
     613,   613,   655,   534,   191,   117,   409,   266,   560,   266,
     533,   468,   591,   807,   468,    32,   467,   612,   525,    57,
     249,   325,   350,   529,   529,   766,   700,   682,   613,    21,
     112,   256,   655,   468
};

#define yyerrok		(yyerrstatus = 0)
#define yyclearin	(yychar = YYEMPTY)
#define YYEMPTY		(-2)
#define YYEOF		0

#define YYACCEPT	goto yyacceptlab
#define YYABORT		goto yyabortlab
#define YYERROR		goto yyerrorlab


/* Like YYERROR except do call yyerror.  This remains here temporarily
   to ease the transition to the new meaning of YYERROR, for GCC.
   Once GCC version 2 has supplanted version 1, this can go.  */

#define YYFAIL		goto yyerrlab

#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)					\
do								\
  if (yychar == YYEMPTY && yylen == 1)				\
    {								\
      yychar = (Token);						\
      yylval = (Value);						\
      yytoken = YYTRANSLATE (yychar);				\
      YYPOPSTACK (1);						\
      goto yybackup;						\
    }								\
  else								\
    {								\
      yyerror (&yylloc, yyscanner, YY_("syntax error: cannot back up")); \
      YYERROR;							\
    }								\
while (YYID (0))


#define YYTERROR	1
#define YYERRCODE	256


/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#define YYRHSLOC(Rhs, K) ((Rhs)[K])
#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)				\
    do									\
      if (YYID (N))                                                    \
	{								\
	  (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;	\
	  (Current).first_column = YYRHSLOC (Rhs, 1).first_column;	\
	  (Current).last_line    = YYRHSLOC (Rhs, N).last_line;		\
	  (Current).last_column  = YYRHSLOC (Rhs, N).last_column;	\
	}								\
      else								\
	{								\
	  (Current).first_line   = (Current).last_line   =		\
	    YYRHSLOC (Rhs, 0).last_line;				\
	  (Current).first_column = (Current).last_column =		\
	    YYRHSLOC (Rhs, 0).last_column;				\
	}								\
    while (YYID (0))
#endif


/* YY_LOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

#ifndef YY_LOCATION_PRINT
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
#  define YY_LOCATION_PRINT(File, Loc)			\
     fprintf (File, "%d.%d-%d.%d",			\
	      (Loc).first_line, (Loc).first_column,	\
	      (Loc).last_line,  (Loc).last_column)
# else
#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
# endif
#endif


/* YYLEX -- calling `yylex' with the right arguments.  */

#ifdef YYLEX_PARAM
# define YYLEX yylex (&yylval, &yylloc, YYLEX_PARAM)
#else
# define YYLEX yylex (&yylval, &yylloc, yyscanner)
#endif

/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)			\
do {						\
  if (yydebug)					\
    YYFPRINTF Args;				\
} while (YYID (0))

# define YY_SYMBOL_PRINT(Title, Type, Value, Location)			  \
do {									  \
  if (yydebug)								  \
    {									  \
      YYFPRINTF (stderr, "%s ", Title);					  \
      yy_symbol_print (stderr,						  \
		  Type, Value, Location, yyscanner); \
      YYFPRINTF (stderr, "\n");						  \
    }									  \
} while (YYID (0))


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
#else
static void
yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  if (!yyvaluep)
    return;
  YYUSE (yylocationp);
  YYUSE (yyscanner);
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# else
  YYUSE (yyoutput);
# endif
  switch (yytype)
    {
      default:
	break;
    }
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
#else
static void
yy_symbol_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  if (yytype < YYNTOKENS)
    YYFPRINTF (yyoutput, "token %s (", yytname[yytype]);
  else
    YYFPRINTF (yyoutput, "nterm %s (", yytname[yytype]);

  YY_LOCATION_PRINT (yyoutput, *yylocationp);
  YYFPRINTF (yyoutput, ": ");
  yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_stack_print (yytype_int16 *bottom, yytype_int16 *top)
#else
static void
yy_stack_print (bottom, top)
    yytype_int16 *bottom;
    yytype_int16 *top;
#endif
{
  YYFPRINTF (stderr, "Stack now");
  for (; bottom <= top; ++bottom)
    YYFPRINTF (stderr, " %d", *bottom);
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)				\
do {								\
  if (yydebug)							\
    yy_stack_print ((Bottom), (Top));				\
} while (YYID (0))


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_reduce_print (YYSTYPE *yyvsp, YYLTYPE *yylsp, int yyrule, core_yyscan_t yyscanner)
#else
static void
yy_reduce_print (yyvsp, yylsp, yyrule, yyscanner)
    YYSTYPE *yyvsp;
    YYLTYPE *yylsp;
    int yyrule;
    core_yyscan_t yyscanner;
#endif
{
  int yynrhs = yyr2[yyrule];
  int yyi;
  unsigned long int yylno = yyrline[yyrule];
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
	     yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      fprintf (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
		       &(yyvsp[(yyi + 1) - (yynrhs)])
		       , &(yylsp[(yyi + 1) - (yynrhs)])		       , yyscanner);
      fprintf (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)		\
do {					\
  if (yydebug)				\
    yy_reduce_print (yyvsp, yylsp, Rule, yyscanner); \
} while (YYID (0))

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef	YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif



#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static YYSIZE_T
yystrlen (const char *yystr)
#else
static YYSIZE_T
yystrlen (yystr)
    const char *yystr;
#endif
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static char *
yystpcpy (char *yydest, const char *yysrc)
#else
static char *
yystpcpy (yydest, yysrc)
    char *yydest;
    const char *yysrc;
#endif
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
	switch (*++yyp)
	  {
	  case '\'':
	  case ',':
	    goto do_not_strip_quotes;

	  case '\\':
	    if (*++yyp != '\\')
	      goto do_not_strip_quotes;
	    /* Fall through.  */
	  default:
	    if (yyres)
	      yyres[yyn] = *yyp;
	    yyn++;
	    break;

	  case '"':
	    if (yyres)
	      yyres[yyn] = '\0';
	    return yyn;
	  }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into YYRESULT an error message about the unexpected token
   YYCHAR while in state YYSTATE.  Return the number of bytes copied,
   including the terminating null byte.  If YYRESULT is null, do not
   copy anything; just return the number of bytes that would be
   copied.  As a special case, return 0 if an ordinary "syntax error"
   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
   size calculation.  */
static YYSIZE_T
yysyntax_error (char *yyresult, int yystate, int yychar)
{
  int yyn = yypact[yystate];

  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
    return 0;
  else
    {
      int yytype = YYTRANSLATE (yychar);
      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
      YYSIZE_T yysize = yysize0;
      YYSIZE_T yysize1;
      int yysize_overflow = 0;
      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
      int yyx;

# if 0
      /* This is so xgettext sees the translatable formats that are
	 constructed on the fly.  */
      YY_("syntax error, unexpected %s");
      YY_("syntax error, unexpected %s, expecting %s");
      YY_("syntax error, unexpected %s, expecting %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
# endif
      char *yyfmt;
      char const *yyf;
      static char const yyunexpected[] = "syntax error, unexpected %s";
      static char const yyexpecting[] = ", expecting %s";
      static char const yyor[] = " or %s";
      char yyformat[sizeof yyunexpected
		    + sizeof yyexpecting - 1
		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
		       * (sizeof yyor - 1))];
      char const *yyprefix = yyexpecting;

      /* Start YYX at -YYN if negative to avoid negative indexes in
	 YYCHECK.  */
      int yyxbegin = yyn < 0 ? -yyn : 0;

      /* Stay within bounds of both yycheck and yytname.  */
      int yychecklim = YYLAST - yyn + 1;
      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
      int yycount = 1;

      yyarg[0] = yytname[yytype];
      yyfmt = yystpcpy (yyformat, yyunexpected);

      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
	  {
	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
	      {
		yycount = 1;
		yysize = yysize0;
		yyformat[sizeof yyunexpected - 1] = '\0';
		break;
	      }
	    yyarg[yycount++] = yytname[yyx];
	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
	    yysize_overflow |= (yysize1 < yysize);
	    yysize = yysize1;
	    yyfmt = yystpcpy (yyfmt, yyprefix);
	    yyprefix = yyor;
	  }

      yyf = YY_(yyformat);
      yysize1 = yysize + yystrlen (yyf);
      yysize_overflow |= (yysize1 < yysize);
      yysize = yysize1;

      if (yysize_overflow)
	return YYSIZE_MAXIMUM;

      if (yyresult)
	{
	  /* Avoid sprintf, as that infringes on the user's name space.
	     Don't have undefined behavior even if the translation
	     produced a string with the wrong number of "%s"s.  */
	  char *yyp = yyresult;
	  int yyi = 0;
	  while ((*yyp = *yyf) != '\0')
	    {
	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
		{
		  yyp += yytnamerr (yyp, yyarg[yyi++]);
		  yyf += 2;
		}
	      else
		{
		  yyp++;
		  yyf++;
		}
	    }
	}
      return yysize;
    }
}
#endif /* YYERROR_VERBOSE */


/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, YYLTYPE *yylocationp, core_yyscan_t yyscanner)
#else
static void
yydestruct (yymsg, yytype, yyvaluep, yylocationp, yyscanner)
    const char *yymsg;
    int yytype;
    YYSTYPE *yyvaluep;
    YYLTYPE *yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  YYUSE (yyvaluep);
  YYUSE (yylocationp);
  YYUSE (yyscanner);

  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  switch (yytype)
    {

      default:
	break;
    }
}


/* Prevent warnings from -Wmissing-prototypes.  */

#ifdef YYPARSE_PARAM
#if defined __STDC__ || defined __cplusplus
int yyparse (void *YYPARSE_PARAM);
#else
int yyparse ();
#endif
#else /* ! YYPARSE_PARAM */
#if defined __STDC__ || defined __cplusplus
int yyparse (core_yyscan_t yyscanner);
#else
int yyparse ();
#endif
#endif /* ! YYPARSE_PARAM */






/*----------.
| yyparse.  |
`----------*/

#ifdef YYPARSE_PARAM
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (void *YYPARSE_PARAM)
#else
int
yyparse (YYPARSE_PARAM)
    void *YYPARSE_PARAM;
#endif
#else /* ! YYPARSE_PARAM */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (core_yyscan_t yyscanner)
#else
int
yyparse (yyscanner)
    core_yyscan_t yyscanner;
#endif
#endif
{
  /* The look-ahead symbol.  */
int yychar;

/* The semantic value of the look-ahead symbol.  */
YYSTYPE yylval;

/* Number of syntax errors so far.  */
int yynerrs;
/* Location data for the look-ahead symbol.  */
YYLTYPE yylloc;

  int yystate;
  int yyn;
  int yyresult;
  /* Number of tokens to shift before error messages enabled.  */
  int yyerrstatus;
  /* Look-ahead token as an internal (translated) token number.  */
  int yytoken = 0;
#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

  /* Three stacks and their tools:
     `yyss': related to states,
     `yyvs': related to semantic values,
     `yyls': related to locations.

     Refer to the stacks thru separate pointers, to allow yyoverflow
     to reallocate them elsewhere.  */

  /* The state stack.  */
  yytype_int16 yyssa[YYINITDEPTH];
  yytype_int16 *yyss = yyssa;
  yytype_int16 *yyssp;

  /* The semantic value stack.  */
  YYSTYPE yyvsa[YYINITDEPTH];
  YYSTYPE *yyvs = yyvsa;
  YYSTYPE *yyvsp;

  /* The location stack.  */
  YYLTYPE yylsa[YYINITDEPTH];
  YYLTYPE *yyls = yylsa;
  YYLTYPE *yylsp;
  /* The locations where the error started and ended.  */
  YYLTYPE yyerror_range[2];

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))

  YYSIZE_T yystacksize = YYINITDEPTH;

  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;
  YYLTYPE yyloc;

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY;		/* Cause a token to be read.  */

  /* Initialize stack pointers.
     Waste one element of value and location stack
     so that they stay on the same level as the state stack.
     The wasted elements are never initialized.  */

  yyssp = yyss;
  yyvsp = yyvs;
  yylsp = yyls;
#if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
  /* Initialize the default location before parsing starts.  */
  yylloc.first_line   = yylloc.last_line   = 1;
  yylloc.first_column = yylloc.last_column = 0;
#endif

  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
	/* Give user a chance to reallocate the stack.  Use copies of
	   these so that the &'s don't force the real ones into
	   memory.  */
	YYSTYPE *yyvs1 = yyvs;
	yytype_int16 *yyss1 = yyss;
	YYLTYPE *yyls1 = yyls;

	/* Each stack pointer address is followed by the size of the
	   data in use in that stack, in bytes.  This used to be a
	   conditional around just the two extra args, but that might
	   be undefined if yyoverflow is a macro.  */
	yyoverflow (YY_("memory exhausted"),
		    &yyss1, yysize * sizeof (*yyssp),
		    &yyvs1, yysize * sizeof (*yyvsp),
		    &yyls1, yysize * sizeof (*yylsp),
		    &yystacksize);
	yyls = yyls1;
	yyss = yyss1;
	yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
	goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
	yystacksize = YYMAXDEPTH;

      {
	yytype_int16 *yyss1 = yyss;
	union yyalloc *yyptr =
	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
	if (! yyptr)
	  goto yyexhaustedlab;
	YYSTACK_RELOCATE (yyss);
	YYSTACK_RELOCATE (yyvs);
	YYSTACK_RELOCATE (yyls);
#  undef YYSTACK_RELOCATE
	if (yyss1 != yyssa)
	  YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;
      yylsp = yyls + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
		  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
	YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     look-ahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to look-ahead token.  */
  yyn = yypact[yystate];
  if (yyn == YYPACT_NINF)
    goto yydefault;

  /* Not known => get a look-ahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid look-ahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = YYLEX;
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yyn == 0 || yyn == YYTABLE_NINF)
	goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the look-ahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token unless it is eof.  */
  if (yychar != YYEOF)
    yychar = YYEMPTY;

  yystate = yyn;
  *++yyvsp = yylval;
  *++yylsp = yylloc;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     `$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];

  /* Default location.  */
  YYLLOC_DEFAULT (yyloc, (yylsp - yylen), yylen);
  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 2:
#line 451 "third_party/libpg_query/grammar/grammar.y"
    {
				pg_yyget_extra(yyscanner)->parsetree = (yyvsp[(1) - (1)].list);
			;}
    break;

  case 3:
#line 467 "third_party/libpg_query/grammar/grammar.y"
    {
					if ((yyvsp[(1) - (3)].list) != NIL)
					{
						/* update length of previous stmt */
						updateRawStmtEnd(llast_node(PGRawStmt, (yyvsp[(1) - (3)].list)), (yylsp[(2) - (3)]));
					}
					if ((yyvsp[(3) - (3)].node) != NULL)
						(yyval.list) = lappend((yyvsp[(1) - (3)].list), makeRawStmt((yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]) + 1));
					else
						(yyval.list) = (yyvsp[(1) - (3)].list);
				;}
    break;

  case 4:
#line 479 "third_party/libpg_query/grammar/grammar.y"
    {
					if ((yyvsp[(1) - (1)].node) != NULL)
						(yyval.list) = list_make1(makeRawStmt((yyvsp[(1) - (1)].node), 0));
					else
						(yyval.list) = NIL;
				;}
    break;

  case 35:
#line 518 "third_party/libpg_query/grammar/grammar.y"
    { (yyval.node) = NULL; ;}
    break;

  case 36:
#line 10 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_TABLE;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 37:
#line 19 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_TABLE;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 38:
#line 28 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_INDEX;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 39:
#line 37 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_INDEX;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 40:
#line 46 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_SEQUENCE;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 41:
#line 55 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_SEQUENCE;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 42:
#line 64 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_VIEW;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 43:
#line 73 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_VIEW;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 44:
#line 86 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 45:
#line 88 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 46:
#line 93 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = (yyvsp[(3) - (3)].node); ;}
    break;

  case 47:
#line 94 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = NULL; ;}
    break;

  case 48:
#line 100 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 49:
#line 104 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 50:
#line 108 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					if (strcmp((yyvsp[(2) - (2)].defelt)->defname, "as") == 0 ||
						strcmp((yyvsp[(2) - (2)].defelt)->defname, "restart") == 0 ||
						strcmp((yyvsp[(2) - (2)].defelt)->defname, "owned_by") == 0)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("sequence option \"%s\" not supported here", (yyvsp[(2) - (2)].defelt)->defname),
								 parser_errposition((yylsp[(2) - (2)]))));
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
				;}
    break;

  case 51:
#line 119 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("generated", (PGNode *) makeInteger((yyvsp[(3) - (3)].ival)), (yylsp[(1) - (3)]));
				;}
    break;

  case 52:
#line 127 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 53:
#line 131 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 54:
#line 140 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(2) - (2)].node);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 55:
#line 149 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(5) - (5)].node);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 56:
#line 158 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(3) - (3)].node);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 57:
#line 167 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(6) - (6)].node);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 58:
#line 176 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ColumnDefault;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (yyvsp[(4) - (4)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 59:
#line 185 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropNotNull;
					n->name = (yyvsp[(3) - (6)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 60:
#line 193 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetNotNull;
					n->name = (yyvsp[(3) - (6)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 61:
#line 201 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetStatistics;
					n->name = (yyvsp[(3) - (6)].str);
					n->def = (PGNode *) makeInteger((yyvsp[(6) - (6)].ival));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 62:
#line 210 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetOptions;
					n->name = (yyvsp[(3) - (5)].str);
					n->def = (PGNode *) (yyvsp[(5) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 63:
#line 219 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ResetOptions;
					n->name = (yyvsp[(3) - (5)].str);
					n->def = (PGNode *) (yyvsp[(5) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 64:
#line 228 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetStorage;
					n->name = (yyvsp[(3) - (6)].str);
					n->def = (PGNode *) makeString((yyvsp[(6) - (6)].str));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 65:
#line 237 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGConstraint *c = makeNode(PGConstraint);

					c->contype = PG_CONSTR_IDENTITY;
					c->generated_when = (yyvsp[(6) - (9)].ival);
					c->options = (yyvsp[(9) - (9)].list);
					c->location = (yylsp[(5) - (9)]);

					n->subtype = PG_AT_AddIdentity;
					n->name = (yyvsp[(3) - (9)].str);
					n->def = (PGNode *) c;

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 66:
#line 254 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetIdentity;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (PGNode *) (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 67:
#line 263 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = AT_DropIdentity;
					n->name = (yyvsp[(3) - (5)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 68:
#line 272 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = AT_DropIdentity;
					n->name = (yyvsp[(3) - (7)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 69:
#line 281 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropColumn;
					n->name = (yyvsp[(5) - (6)].str);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 70:
#line 291 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropColumn;
					n->name = (yyvsp[(3) - (4)].str);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 71:
#line 304 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGColumnDef *def = makeNode(PGColumnDef);
					n->subtype = PG_AT_AlterColumnType;
					n->name = (yyvsp[(3) - (8)].str);
					n->def = (PGNode *) def;
					/* We only use these fields of the PGColumnDef node */
					def->typeName = (yyvsp[(6) - (8)].typnam);
					def->collClause = (PGCollateClause *) (yyvsp[(7) - (8)].node);
					def->raw_default = (yyvsp[(8) - (8)].node);
					def->location = (yylsp[(3) - (8)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 72:
#line 319 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AlterColumnGenericOptions;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (PGNode *) (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 73:
#line 328 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddConstraint;
					n->def = (yyvsp[(2) - (2)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 74:
#line 336 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGConstraint *c = makeNode(PGConstraint);
					n->subtype = PG_AT_AlterConstraint;
					n->def = (PGNode *) c;
					c->contype = PG_CONSTR_FOREIGN; /* others not supported, yet */
					c->conname = (yyvsp[(3) - (4)].str);
					processCASbits((yyvsp[(4) - (4)].ival), (yylsp[(4) - (4)]), "ALTER CONSTRAINT statement",
									&c->deferrable,
									&c->initdeferred,
									NULL, NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 75:
#line 351 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ValidateConstraint;
					n->name = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 76:
#line 359 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropConstraint;
					n->name = (yyvsp[(5) - (6)].str);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 77:
#line 369 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropConstraint;
					n->name = (yyvsp[(3) - (4)].str);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 78:
#line 379 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetLogged;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 79:
#line 386 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetUnLogged;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 80:
#line 393 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetRelOptions;
					n->def = (PGNode *)(yyvsp[(2) - (2)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 81:
#line 401 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ResetRelOptions;
					n->def = (PGNode *)(yyvsp[(2) - (2)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 82:
#line 408 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_GenericOptions;
					n->def = (PGNode *)(yyvsp[(1) - (1)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 83:
#line 418 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 84:
#line 419 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = NULL; ;}
    break;

  case 85:
#line 425 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(1) - (1)].defelt);
				;}
    break;

  case 86:
#line 429 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
					(yyval.defelt)->defaction = PG_DEFELEM_SET;
				;}
    break;

  case 87:
#line 434 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
					(yyval.defelt)->defaction = PG_DEFELEM_ADD;
				;}
    break;

  case 88:
#line 439 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElemExtended(NULL, (yyvsp[(2) - (2)].str), NULL, DEFELEM_DROP, (yylsp[(2) - (2)]));
				;}
    break;

  case 89:
#line 446 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 90:
#line 447 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 91:
#line 452 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 92:
#line 456 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 1; ;}
    break;

  case 93:
#line 457 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 0; ;}
    break;

  case 94:
#line 8 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = (yyvsp[(2) - (2)].str);
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 95:
#line 14 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = (yyvsp[(3) - (3)].str);
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 96:
#line 20 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = NULL;
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 97:
#line 26 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = NULL;
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 98:
#line 7 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SCHEMA;
					n->subname = (yyvsp[(3) - (6)].str);
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 99:
#line 16 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 100:
#line 26 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 101:
#line 36 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 102:
#line 46 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 103:
#line 56 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 104:
#line 66 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 105:
#line 76 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_INDEX;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 106:
#line 86 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_INDEX;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 107:
#line 96 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_COLUMN;
					n->relationType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (8)].range);
					n->subname = (yyvsp[(6) - (8)].str);
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 108:
#line 107 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_COLUMN;
					n->relationType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (10)].range);
					n->subname = (yyvsp[(8) - (10)].str);
					n->newname = (yyvsp[(10) - (10)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 109:
#line 118 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABCONSTRAINT;
					n->relation = (yyvsp[(3) - (8)].range);
					n->subname = (yyvsp[(6) - (8)].str);
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 110:
#line 128 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABCONSTRAINT;
					n->relation = (yyvsp[(5) - (10)].range);
					n->subname = (yyvsp[(8) - (10)].str);
					n->newname = (yyvsp[(10) - (10)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 111:
#line 140 "third_party/libpg_query/grammar/statements/rename.y"
    { (yyval.ival) = COLUMN; ;}
    break;

  case 112:
#line 141 "third_party/libpg_query/grammar/statements/rename.y"
    { (yyval.ival) = 0; ;}
    break;

  case 113:
#line 10 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(5) - (7)].istmt)->relation = (yyvsp[(4) - (7)].range);
					(yyvsp[(5) - (7)].istmt)->onConflictClause = (yyvsp[(6) - (7)].onconflict);
					(yyvsp[(5) - (7)].istmt)->returningList = (yyvsp[(7) - (7)].list);
					(yyvsp[(5) - (7)].istmt)->withClause = (yyvsp[(1) - (7)].with);
					(yyval.node) = (PGNode *) (yyvsp[(5) - (7)].istmt);
				;}
    break;

  case 114:
#line 22 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = (yyvsp[(1) - (1)].node);
				;}
    break;

  case 115:
#line 28 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->override = (yyvsp[(2) - (4)].override);
					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
				;}
    break;

  case 116:
#line 35 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = (yyvsp[(2) - (4)].list);
					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
				;}
    break;

  case 117:
#line 41 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = (yyvsp[(2) - (7)].list);
					(yyval.istmt)->override = (yyvsp[(5) - (7)].override);
					(yyval.istmt)->selectStmt = (yyvsp[(7) - (7)].node);
				;}
    break;

  case 118:
#line 48 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = NULL;
				;}
    break;

  case 119:
#line 58 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
				;}
    break;

  case 120:
#line 62 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(1) - (3)].range)->alias = makeAlias((yyvsp[(3) - (3)].str), NIL);
					(yyval.range) = (yyvsp[(1) - (3)].range);
				;}
    break;

  case 121:
#line 71 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = makeNode(PGInferClause);
					(yyval.infer)->indexElems = (yyvsp[(2) - (4)].list);
					(yyval.infer)->whereClause = (yyvsp[(4) - (4)].node);
					(yyval.infer)->conname = NULL;
					(yyval.infer)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 122:
#line 80 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = makeNode(PGInferClause);
					(yyval.infer)->indexElems = NIL;
					(yyval.infer)->whereClause = NULL;
					(yyval.infer)->conname = (yyvsp[(3) - (3)].str);
					(yyval.infer)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 123:
#line 88 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = NULL;
				;}
    break;

  case 124:
#line 95 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.with) = (yyvsp[(1) - (1)].with); ;}
    break;

  case 125:
#line 96 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.with) = NULL; ;}
    break;

  case 126:
#line 102 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(1) - (2)].str);
					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.target)->val = NULL;
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 127:
#line 114 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(1) - (3)].target)->val = (PGNode *) (yyvsp[(3) - (3)].node);
					(yyval.list) = list_make1((yyvsp[(1) - (3)].target));
				;}
    break;

  case 128:
#line 119 "third_party/libpg_query/grammar/statements/insert.y"
    {
					int ncolumns = list_length((yyvsp[(2) - (5)].list));
					int i = 1;
					PGListCell *col_cell;

					/* Create a PGMultiAssignRef source for each target */
					foreach(col_cell, (yyvsp[(2) - (5)].list))
					{
						PGResTarget *res_col = (PGResTarget *) lfirst(col_cell);
						PGMultiAssignRef *r = makeNode(PGMultiAssignRef);

						r->source = (PGNode *) (yyvsp[(5) - (5)].node);
						r->colno = i;
						r->ncolumns = ncolumns;
						res_col->val = (PGNode *) r;
						i++;
					}

					(yyval.list) = (yyvsp[(2) - (5)].list);
				;}
    break;

  case 129:
#line 144 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = makeNode(PGOnConflictClause);
					(yyval.onconflict)->action = PG_ONCONFLICT_UPDATE;
					(yyval.onconflict)->infer = (yyvsp[(3) - (8)].infer);
					(yyval.onconflict)->targetList = (yyvsp[(7) - (8)].list);
					(yyval.onconflict)->whereClause = (yyvsp[(8) - (8)].node);
					(yyval.onconflict)->location = (yylsp[(1) - (8)]);
				;}
    break;

  case 130:
#line 154 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = makeNode(PGOnConflictClause);
					(yyval.onconflict)->action = PG_ONCONFLICT_NOTHING;
					(yyval.onconflict)->infer = (yyvsp[(3) - (5)].infer);
					(yyval.onconflict)->targetList = NIL;
					(yyval.onconflict)->whereClause = NULL;
					(yyval.onconflict)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 131:
#line 163 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = NULL;
				;}
    break;

  case 132:
#line 170 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = (yyvsp[(1) - (5)].str);
					(yyval.ielem)->expr = NULL;
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(2) - (5)].list);
					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].nullorder);
				;}
    break;

  case 133:
#line 181 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[(1) - (5)].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(2) - (5)].list);
					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].nullorder);
				;}
    break;

  case 134:
#line 192 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[(2) - (7)].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(4) - (7)].list);
					(yyval.ielem)->opclass = (yyvsp[(5) - (7)].list);
					(yyval.ielem)->ordering = (yyvsp[(6) - (7)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(7) - (7)].nullorder);
				;}
    break;

  case 135:
#line 206 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 136:
#line 207 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 137:
#line 213 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.override) = PG_OVERRIDING_USER_VALUE; ;}
    break;

  case 138:
#line 214 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.override) = OVERRIDING_SYSTEM_VALUE; ;}
    break;

  case 139:
#line 219 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 140:
#line 220 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].target)); ;}
    break;

  case 141:
#line 226 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 142:
#line 227 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 143:
#line 231 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 144:
#line 232 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 145:
#line 238 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 146:
#line 240 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
    break;

  case 147:
#line 245 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 148:
#line 246 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_concat((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].list)); ;}
    break;

  case 149:
#line 250 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].ielem)); ;}
    break;

  case 150:
#line 251 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].ielem)); ;}
    break;

  case 151:
#line 257 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(1) - (2)].str);
					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.target)->val = NULL;	/* upper production sets this */
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 152:
#line 8 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_NOTHING;
					n->name = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 153:
#line 15 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_ASSIGNMENT;
					n->name = (yyvsp[(2) - (4)].str);
					n->args = (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 154:
#line 23 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_CALL;
					n->name = (yyvsp[(2) - (5)].str);
					n->args = (yyvsp[(4) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 155:
#line 10 "third_party/libpg_query/grammar/statements/create_sequence.y"
    {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[(4) - (5)].range)->relpersistence = (yyvsp[(2) - (5)].ival);
					n->sequence = (yyvsp[(4) - (5)].range);
					n->options = (yyvsp[(5) - (5)].list);
					n->ownerId = InvalidOid;
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 156:
#line 20 "third_party/libpg_query/grammar/statements/create_sequence.y"
    {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[(7) - (8)].range)->relpersistence = (yyvsp[(2) - (8)].ival);
					n->sequence = (yyvsp[(7) - (8)].range);
					n->options = (yyvsp[(8) - (8)].list);
					n->ownerId = InvalidOid;
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 157:
#line 32 "third_party/libpg_query/grammar/statements/create_sequence.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 158:
#line 33 "third_party/libpg_query/grammar/statements/create_sequence.y"
    { (yyval.list) = NIL; ;}
    break;

  case 159:
#line 8 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(2) - (3)].str);
					n->params = (yyvsp[(3) - (3)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 160:
#line 16 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(7) - (9)].str);
					n->params = (yyvsp[(8) - (9)].list);
					ctas->query = (PGNode *) n;
					ctas->into = (yyvsp[(4) - (9)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = false;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(4) - (9)].into)->rel->relpersistence = (yyvsp[(2) - (9)].ival);
					(yyvsp[(4) - (9)].into)->skipData = !((yyvsp[(9) - (9)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 161:
#line 33 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(10) - (12)].str);
					n->params = (yyvsp[(11) - (12)].list);
					ctas->query = (PGNode *) n;
					ctas->into = (yyvsp[(7) - (12)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = true;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(7) - (12)].into)->rel->relpersistence = (yyvsp[(2) - (12)].ival);
					(yyvsp[(7) - (12)].into)->skipData = !((yyvsp[(12) - (12)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 162:
#line 51 "third_party/libpg_query/grammar/statements/execute.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 163:
#line 52 "third_party/libpg_query/grammar/statements/execute.y"
    { (yyval.list) = NIL; ;}
    break;

  case 164:
#line 10 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
					n->sequence = (yyvsp[(3) - (4)].range);
					n->options = (yyvsp[(4) - (4)].list);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 165:
#line 18 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
					n->sequence = (yyvsp[(5) - (6)].range);
					n->options = (yyvsp[(6) - (6)].list);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 166:
#line 29 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 167:
#line 30 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 168:
#line 34 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 169:
#line 35 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 170:
#line 36 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 171:
#line 41 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeFloat((yyvsp[(1) - (1)].str)); ;}
    break;

  case 172:
#line 42 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeFloat((yyvsp[(2) - (2)].str)); ;}
    break;

  case 173:
#line 44 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.value) = makeFloat((yyvsp[(2) - (2)].str));
					doNegateFloat((yyval.value));
				;}
    break;

  case 174:
#line 48 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeInteger((yyvsp[(1) - (1)].ival)); ;}
    break;

  case 175:
#line 53 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("as", (PGNode *)(yyvsp[(2) - (2)].typnam), (yylsp[(1) - (2)]));
				;}
    break;

  case 176:
#line 57 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cache", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 177:
#line 61 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 178:
#line 65 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(false), (yylsp[(1) - (2)]));
				;}
    break;

  case 179:
#line 69 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("increment", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 180:
#line 73 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("maxvalue", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 181:
#line 77 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("minvalue", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 182:
#line 81 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("maxvalue", NULL, (yylsp[(1) - (2)]));
				;}
    break;

  case 183:
#line 85 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("minvalue", NULL, (yylsp[(1) - (2)]));
				;}
    break;

  case 184:
#line 89 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("owned_by", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 185:
#line 93 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					/* not documented, only used by pg_dump */
					(yyval.defelt) = makeDefElem("sequence_name", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 186:
#line 98 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("start", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 187:
#line 102 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 188:
#line 106 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 189:
#line 112 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 190:
#line 113 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 191:
#line 117 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 192:
#line 118 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = + (yyvsp[(2) - (2)].ival); ;}
    break;

  case 193:
#line 119 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = - (yyvsp[(2) - (2)].ival); ;}
    break;

  case 194:
#line 3 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 195:
#line 10 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_BEGIN;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 196:
#line 16 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_START;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 197:
#line 22 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 198:
#line 29 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 199:
#line 36 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 200:
#line 45 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 201:
#line 46 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 202:
#line 47 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 203:
#line 9 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(4) - (9)].range)->relpersistence = (yyvsp[(2) - (9)].ival);
					n->relation = (yyvsp[(4) - (9)].range);
					n->tableElts = (yyvsp[(6) - (9)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(8) - (9)].list);
					n->oncommit = (yyvsp[(9) - (9)].oncommit);
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 204:
#line 24 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(7) - (12)].range)->relpersistence = (yyvsp[(2) - (12)].ival);
					n->relation = (yyvsp[(7) - (12)].range);
					n->tableElts = (yyvsp[(9) - (12)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(11) - (12)].list);
					n->oncommit = (yyvsp[(12) - (12)].oncommit);
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 205:
#line 41 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = 0; ;}
    break;

  case 206:
#line 43 "third_party/libpg_query/grammar/statements/create.y"
    {
					/*
					 * We must complain about conflicting options.
					 * We could, but choose not to, complain about redundant
					 * options (ie, where $2's bit is already set in $1).
					 */
					int		newspec = (yyvsp[(1) - (2)].ival) | (yyvsp[(2) - (2)].ival);

					/* special message for this case */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED)) == (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("constraint declared INITIALLY DEFERRED must be DEFERRABLE"),
								 parser_errposition((yylsp[(2) - (2)]))));
					/* generic message for other conflicts */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE)) == (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE) ||
						(newspec & (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED)) == (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("conflicting constraint properties"),
								 parser_errposition((yylsp[(2) - (2)]))));
					(yyval.ival) = newspec;
				;}
    break;

  case 207:
#line 69 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].typnam); ;}
    break;

  case 208:
#line 70 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
    break;

  case 209:
#line 71 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].list); ;}
    break;

  case 210:
#line 72 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].value); ;}
    break;

  case 211:
#line 73 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 212:
#line 74 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
    break;

  case 213:
#line 78 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 214:
#line 79 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 215:
#line 84 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 216:
#line 89 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_NOACTION; ;}
    break;

  case 217:
#line 90 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_RESTRICT; ;}
    break;

  case 218:
#line 91 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_CASCADE; ;}
    break;

  case 219:
#line 92 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_SETNULL; ;}
    break;

  case 220:
#line 93 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_SETDEFAULT; ;}
    break;

  case 221:
#line 99 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = castNode(PGConstraint, (yyvsp[(3) - (3)].node));
					n->conname = (yyvsp[(2) - (3)].str);
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 222:
#line 105 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 223:
#line 106 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 224:
#line 108 "third_party/libpg_query/grammar/statements/create.y"
    {
					/*
					 * Note: the PGCollateClause is momentarily included in
					 * the list built by ColQualList, but we split it out
					 * again in SplitColQualList.
					 */
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[(2) - (2)].list);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 225:
#line 125 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_NOTNULL;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 226:
#line 132 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_NULL;
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 227:
#line 139 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (2)]);
					n->keys = NULL;
					n->options = (yyvsp[(2) - (2)].list);
					n->indexname = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 228:
#line 149 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (3)]);
					n->keys = NULL;
					n->options = (yyvsp[(3) - (3)].list);
					n->indexname = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 229:
#line 159 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_CHECK;
					n->location = (yylsp[(1) - (5)]);
					n->is_no_inherit = (yyvsp[(5) - (5)].boolean);
					n->raw_expr = (yyvsp[(3) - (5)].node);
					n->cooked_expr = NULL;
					n->skip_validation = false;
					n->initially_valid = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 230:
#line 171 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_DEFAULT;
					n->location = (yylsp[(1) - (2)]);
					n->raw_expr = (yyvsp[(2) - (2)].node);
					n->cooked_expr = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 231:
#line 180 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_IDENTITY;
					n->generated_when = (yyvsp[(2) - (5)].ival);
					n->options = (yyvsp[(5) - (5)].list);
					n->location = (yylsp[(1) - (5)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 232:
#line 189 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_FOREIGN;
					n->location = (yylsp[(1) - (5)]);
					n->pktable			= (yyvsp[(2) - (5)].range);
					n->fk_attrs			= NIL;
					n->pk_attrs			= (yyvsp[(3) - (5)].list);
					n->fk_matchtype		= (yyvsp[(4) - (5)].ival);
					n->fk_upd_action	= (char) ((yyvsp[(5) - (5)].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[(5) - (5)].ival) & 0xFF);
					n->skip_validation  = false;
					n->initially_valid  = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 233:
#line 208 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 234:
#line 214 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
    break;

  case 235:
#line 220 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(1) - (1)].ival) << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); ;}
    break;

  case 236:
#line 222 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | ((yyvsp[(1) - (1)].ival) & 0xFF); ;}
    break;

  case 237:
#line 224 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(1) - (2)].ival) << 8) | ((yyvsp[(2) - (2)].ival) & 0xFF); ;}
    break;

  case 238:
#line 226 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(2) - (2)].ival) << 8) | ((yyvsp[(1) - (2)].ival) & 0xFF); ;}
    break;

  case 239:
#line 228 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); ;}
    break;

  case 240:
#line 233 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 241:
#line 234 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 242:
#line 238 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = ONCOMMIT_DROP; ;}
    break;

  case 243:
#line 239 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_DELETE_ROWS; ;}
    break;

  case 244:
#line 240 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_PRESERVE_ROWS; ;}
    break;

  case 245:
#line 241 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_NOOP; ;}
    break;

  case 246:
#line 246 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 247:
#line 250 "third_party/libpg_query/grammar/statements/create.y"
    {  (yyval.boolean) = true; ;}
    break;

  case 248:
#line 251 "third_party/libpg_query/grammar/statements/create.y"
    {  (yyval.boolean) = false; ;}
    break;

  case 249:
#line 257 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = castNode(PGConstraint, (yyvsp[(3) - (3)].node));
					n->conname = (yyvsp[(2) - (3)].str);
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 250:
#line 263 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 251:
#line 268 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_COMMENTS; ;}
    break;

  case 252:
#line 269 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_CONSTRAINTS; ;}
    break;

  case 253:
#line 270 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_DEFAULTS; ;}
    break;

  case 254:
#line 271 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_IDENTITY; ;}
    break;

  case 255:
#line 272 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_INDEXES; ;}
    break;

  case 256:
#line 273 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_STATISTICS; ;}
    break;

  case 257:
#line 274 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_STORAGE; ;}
    break;

  case 258:
#line 275 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_ALL; ;}
    break;

  case 259:
#line 281 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 260:
#line 282 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
    break;

  case 261:
#line 286 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(3) - (3)].str); ;}
    break;

  case 262:
#line 292 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_DEFERRABLE;
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 263:
#line 299 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_NOT_DEFERRABLE;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 264:
#line 306 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_DEFERRED;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 265:
#line 313 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_IMMEDIATE;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 266:
#line 324 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 267:
#line 325 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(true), (yylsp[(1) - (2)]))); ;}
    break;

  case 268:
#line 326 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(false), (yylsp[(1) - (2)]))); ;}
    break;

  case 269:
#line 327 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 270:
#line 331 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 271:
#line 336 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
    break;

  case 272:
#line 337 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) & ~(yyvsp[(3) - (3)].ival); ;}
    break;

  case 273:
#line 338 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = 0; ;}
    break;

  case 274:
#line 343 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 275:
#line 348 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NOT_DEFERRABLE; ;}
    break;

  case 276:
#line 349 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_DEFERRABLE; ;}
    break;

  case 277:
#line 350 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_INITIALLY_IMMEDIATE; ;}
    break;

  case 278:
#line 351 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_INITIALLY_DEFERRED; ;}
    break;

  case 279:
#line 352 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NOT_VALID; ;}
    break;

  case 280:
#line 353 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NO_INHERIT; ;}
    break;

  case 281:
#line 359 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->colname = (yyvsp[(1) - (4)].str);
					n->typeName = (yyvsp[(2) - (4)].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collOid = InvalidOid;
					n->fdwoptions = (yyvsp[(3) - (4)].list);
					SplitColQualList((yyvsp[(4) - (4)].list), &n->constraints, &n->collClause,
									 yyscanner);
					n->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 282:
#line 382 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 283:
#line 386 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 284:
#line 392 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 285:
#line 393 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
    break;

  case 286:
#line 397 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 287:
#line 401 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 288:
#line 402 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 289:
#line 403 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 290:
#line 408 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (PGNode *) (yyvsp[(3) - (3)].node), (yylsp[(1) - (3)]));
				;}
    break;

  case 291:
#line 412 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 292:
#line 419 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 293:
#line 420 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 294:
#line 425 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 295:
#line 426 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 296:
#line 431 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str));
				;}
    break;

  case 297:
#line 438 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 298:
#line 439 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 299:
#line 444 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 300:
#line 445 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 301:
#line 449 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
    break;

  case 302:
#line 455 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (PGNode *) (yyvsp[(3) - (3)].node), (yylsp[(1) - (3)]));
				;}
    break;

  case 303:
#line 459 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 304:
#line 463 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (5)].str), (yyvsp[(3) - (5)].str), (PGNode *) (yyvsp[(5) - (5)].node),
											 PG_DEFELEM_UNSPEC, (yylsp[(1) - (5)]));
				;}
    break;

  case 305:
#line 468 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str), NULL, PG_DEFELEM_UNSPEC, (yylsp[(1) - (3)]));
				;}
    break;

  case 306:
#line 475 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 307:
#line 476 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 308:
#line 480 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 309:
#line 482 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(1) - (4)].str)), (yyvsp[(2) - (4)].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 310:
#line 488 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(2) - (5)].str)), (yyvsp[(3) - (5)].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->setof = true;
					(yyval.typnam)->location = (yylsp[(2) - (5)]);
				;}
    break;

  case 311:
#line 499 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_CHECK;
					n->location = (yylsp[(1) - (5)]);
					n->raw_expr = (yyvsp[(3) - (5)].node);
					n->cooked_expr = NULL;
					processCASbits((yyvsp[(5) - (5)].ival), (yylsp[(5) - (5)]), "CHECK",
								   NULL, NULL, &n->skip_validation,
								   &n->is_no_inherit, yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 312:
#line 513 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (6)]);
					n->keys = (yyvsp[(3) - (6)].list);
					n->options = (yyvsp[(5) - (6)].list);
					n->indexname = NULL;
					processCASbits((yyvsp[(6) - (6)].ival), (yylsp[(6) - (6)]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 313:
#line 526 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (3)]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[(2) - (3)].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[(3) - (3)].ival), (yylsp[(3) - (3)]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 314:
#line 541 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (7)]);
					n->keys = (yyvsp[(4) - (7)].list);
					n->options = (yyvsp[(6) - (7)].list);
					n->indexname = NULL;
					processCASbits((yyvsp[(7) - (7)].ival), (yylsp[(7) - (7)]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 315:
#line 554 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (4)]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[(3) - (4)].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[(4) - (4)].ival), (yylsp[(4) - (4)]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 316:
#line 569 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_FOREIGN;
					n->location = (yylsp[(1) - (11)]);
					n->pktable			= (yyvsp[(7) - (11)].range);
					n->fk_attrs			= (yyvsp[(4) - (11)].list);
					n->pk_attrs			= (yyvsp[(8) - (11)].list);
					n->fk_matchtype		= (yyvsp[(9) - (11)].ival);
					n->fk_upd_action	= (char) ((yyvsp[(10) - (11)].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[(10) - (11)].ival) & 0xFF);
					processCASbits((yyvsp[(11) - (11)].ival), (yylsp[(11) - (11)]), "FOREIGN KEY",
								   &n->deferrable, &n->initdeferred,
								   &n->skip_validation, NULL,
								   yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 317:
#line 591 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 318:
#line 595 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 319:
#line 602 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_FULL;
			;}
    break;

  case 320:
#line 606 "third_party/libpg_query/grammar/statements/create.y"
    {
				ereport(ERROR,
						(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
						 errmsg("MATCH PARTIAL not yet implemented"),
						 parser_errposition((yylsp[(1) - (2)]))));
				(yyval.ival) = PG_FKCONSTR_MATCH_PARTIAL;
			;}
    break;

  case 321:
#line 614 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
			;}
    break;

  case 322:
#line 618 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
			;}
    break;

  case 323:
#line 626 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGTableLikeClause *n = makeNode(PGTableLikeClause);
					n->relation = (yyvsp[(2) - (3)].range);
					n->options = (yyvsp[(3) - (3)].ival);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 324:
#line 635 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 325:
#line 636 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 326:
#line 637 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 327:
#line 638 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 328:
#line 640 "third_party/libpg_query/grammar/statements/create.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 329:
#line 647 "third_party/libpg_query/grammar/statements/create.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 330:
#line 653 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_UNLOGGED; ;}
    break;

  case 331:
#line 654 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = RELPERSISTENCE_PERMANENT; ;}
    break;

  case 332:
#line 659 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_ATTRIBUTE_IDENTITY_ALWAYS; ;}
    break;

  case 333:
#line 660 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ATTRIBUTE_IDENTITY_BY_DEFAULT; ;}
    break;

  case 334:
#line 10 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 335:
#line 20 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (4)].objtype);
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 336:
#line 30 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 337:
#line 40 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (4)].objtype);
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 338:
#line 50 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->objects = list_make1(lappend((yyvsp[(5) - (6)].list), makeString((yyvsp[(3) - (6)].str))));
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = false;
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 339:
#line 60 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (8)].objtype);
					n->objects = list_make1(lappend((yyvsp[(7) - (8)].list), makeString((yyvsp[(5) - (8)].str))));
					n->behavior = (yyvsp[(8) - (8)].dbehavior);
					n->missing_ok = true;
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 340:
#line 73 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TABLE; ;}
    break;

  case 341:
#line 74 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_SEQUENCE; ;}
    break;

  case 342:
#line 75 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_VIEW; ;}
    break;

  case 343:
#line 76 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_MATVIEW; ;}
    break;

  case 344:
#line 77 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_INDEX; ;}
    break;

  case 345:
#line 78 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FOREIGN_TABLE; ;}
    break;

  case 346:
#line 79 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_COLLATION; ;}
    break;

  case 347:
#line 80 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_CONVERSION; ;}
    break;

  case 348:
#line 81 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_STATISTIC_EXT; ;}
    break;

  case 349:
#line 82 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSPARSER; ;}
    break;

  case 350:
#line 83 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSDICTIONARY; ;}
    break;

  case 351:
#line 84 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSTEMPLATE; ;}
    break;

  case 352:
#line 85 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSCONFIGURATION; ;}
    break;

  case 353:
#line 90 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_ACCESS_METHOD; ;}
    break;

  case 354:
#line 91 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_EVENT_TRIGGER; ;}
    break;

  case 355:
#line 92 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_EXTENSION; ;}
    break;

  case 356:
#line 93 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FDW; ;}
    break;

  case 357:
#line 94 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_PUBLICATION; ;}
    break;

  case 358:
#line 95 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_SCHEMA; ;}
    break;

  case 359:
#line 96 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FOREIGN_SERVER; ;}
    break;

  case 360:
#line 101 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 361:
#line 102 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 362:
#line 107 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_CASCADE; ;}
    break;

  case 363:
#line 108 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_RESTRICT; ;}
    break;

  case 364:
#line 109 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_RESTRICT; /* default */ ;}
    break;

  case 365:
#line 114 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_POLICY; ;}
    break;

  case 366:
#line 115 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_RULE; ;}
    break;

  case 367:
#line 116 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TRIGGER; ;}
    break;

  case 368:
#line 12 "third_party/libpg_query/grammar/statements/update.y"
    {
					PGUpdateStmt *n = makeNode(PGUpdateStmt);
					n->relation = (yyvsp[(3) - (8)].range);
					n->targetList = (yyvsp[(5) - (8)].list);
					n->fromClause = (yyvsp[(6) - (8)].list);
					n->whereClause = (yyvsp[(7) - (8)].node);
					n->returningList = (yyvsp[(8) - (8)].list);
					n->withClause = (yyvsp[(1) - (8)].with);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 369:
#line 3 "third_party/libpg_query/grammar/statements/copy.y"
    {
					PGCopyStmt *n = makeNode(PGCopyStmt);
					n->relation = (yyvsp[(3) - (11)].range);
					n->query = NULL;
					n->attlist = (yyvsp[(4) - (11)].list);
					n->is_from = (yyvsp[(6) - (11)].boolean);
					n->is_program = (yyvsp[(7) - (11)].boolean);
					n->filename = (yyvsp[(8) - (11)].str);

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[(8) - (11)]))));

					n->options = NIL;
					/* Concatenate user-supplied flags */
					if ((yyvsp[(2) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(2) - (11)].defelt));
					if ((yyvsp[(5) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(5) - (11)].defelt));
					if ((yyvsp[(9) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(9) - (11)].defelt));
					if ((yyvsp[(11) - (11)].list))
						n->options = list_concat(n->options, (yyvsp[(11) - (11)].list));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 370:
#line 31 "third_party/libpg_query/grammar/statements/copy.y"
    {
					PGCopyStmt *n = makeNode(PGCopyStmt);
					n->relation = NULL;
					n->query = (yyvsp[(3) - (9)].node);
					n->attlist = NIL;
					n->is_from = false;
					n->is_program = (yyvsp[(6) - (9)].boolean);
					n->filename = (yyvsp[(7) - (9)].str);
					n->options = (yyvsp[(9) - (9)].list);

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[(5) - (9)]))));

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 371:
#line 53 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = true; ;}
    break;

  case 372:
#line 54 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = false; ;}
    break;

  case 373:
#line 60 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(2) - (3)]));
				;}
    break;

  case 374:
#line 63 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 375:
#line 69 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 376:
#line 73 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 377:
#line 80 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 378:
#line 81 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 379:
#line 85 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 380:
#line 86 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 381:
#line 91 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = true; ;}
    break;

  case 382:
#line 92 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = false; ;}
    break;

  case 383:
#line 96 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 384:
#line 97 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 385:
#line 102 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 386:
#line 103 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].value); ;}
    break;

  case 387:
#line 104 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeNode(PGAStar); ;}
    break;

  case 388:
#line 105 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) (yyvsp[(2) - (3)].list); ;}
    break;

  case 389:
#line 106 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = NULL; ;}
    break;

  case 390:
#line 112 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 391:
#line 120 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[(1) - (2)]));
				;}
    break;

  case 392:
#line 123 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 393:
#line 128 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 394:
#line 129 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = NIL; ;}
    break;

  case 395:
#line 135 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[(1) - (1)]));
				;}
    break;

  case 396:
#line 138 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 397:
#line 144 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[(1) - (1)]));
				;}
    break;

  case 398:
#line 148 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 399:
#line 152 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("freeze", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 400:
#line 156 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 401:
#line 160 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("null", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 402:
#line 164 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("csv"), (yylsp[(1) - (1)]));
				;}
    break;

  case 403:
#line 168 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("header", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 404:
#line 172 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("quote", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 405:
#line 176 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("escape", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 406:
#line 180 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 407:
#line 184 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)makeNode(PGAStar), (yylsp[(1) - (3)]));
				;}
    break;

  case 408:
#line 188 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_not_null", (PGNode *)(yyvsp[(4) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 409:
#line 192 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_null", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 410:
#line 196 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("encoding", (PGNode *)makeString((yyvsp[(2) - (2)].str)), (yylsp[(1) - (2)]));
				;}
    break;

  case 411:
#line 203 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 412:
#line 209 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 413:
#line 210 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = NULL; ;}
    break;

  case 414:
#line 211 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = NULL; ;}
    break;

  case 415:
#line 217 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 416:
#line 221 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 419:
#line 52 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 420:
#line 53 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 421:
#line 68 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 422:
#line 70 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list), NIL,
										NULL, NULL, NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (2)].node);
				;}
    break;

  case 423:
#line 77 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(3) - (4)].list),
										(PGNode*) list_nth((yyvsp[(4) - (4)].list), 0), (PGNode*) list_nth((yyvsp[(4) - (4)].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (4)].node);
				;}
    break;

  case 424:
#line 85 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(4) - (4)].list),
										(PGNode*) list_nth((yyvsp[(3) - (4)].list), 0), (PGNode*) list_nth((yyvsp[(3) - (4)].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (4)].node);
				;}
    break;

  case 425:
#line 93 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (2)].node), NULL, NIL,
										NULL, NULL,
										(yyvsp[(1) - (2)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (2)].node);
				;}
    break;

  case 426:
#line 101 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].list), NIL,
										NULL, NULL,
										(yyvsp[(1) - (3)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (3)].node);
				;}
    break;

  case 427:
#line 109 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(4) - (5)].list),
										(PGNode*) list_nth((yyvsp[(5) - (5)].list), 0), (PGNode*) list_nth((yyvsp[(5) - (5)].list), 1),
										(yyvsp[(1) - (5)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (5)].node);
				;}
    break;

  case 428:
#line 117 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(5) - (5)].list),
										(PGNode*) list_nth((yyvsp[(4) - (5)].list), 0), (PGNode*) list_nth((yyvsp[(4) - (5)].list), 1),
										(yyvsp[(1) - (5)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (5)].node);
				;}
    break;

  case 429:
#line 127 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 430:
#line 128 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 431:
#line 158 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->targetList = (yyvsp[(3) - (9)].list);
					n->intoClause = (yyvsp[(4) - (9)].into);
					n->fromClause = (yyvsp[(5) - (9)].list);
					n->whereClause = (yyvsp[(6) - (9)].node);
					n->groupClause = (yyvsp[(7) - (9)].list);
					n->havingClause = (yyvsp[(8) - (9)].node);
					n->windowClause = (yyvsp[(9) - (9)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 432:
#line 172 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->distinctClause = (yyvsp[(2) - (9)].list);
					n->targetList = (yyvsp[(3) - (9)].list);
					n->intoClause = (yyvsp[(4) - (9)].into);
					n->fromClause = (yyvsp[(5) - (9)].list);
					n->whereClause = (yyvsp[(6) - (9)].node);
					n->groupClause = (yyvsp[(7) - (9)].list);
					n->havingClause = (yyvsp[(8) - (9)].node);
					n->windowClause = (yyvsp[(9) - (9)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 433:
#line 184 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 434:
#line 186 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* same as SELECT * FROM relation_expr */
					PGColumnRef *cr = makeNode(PGColumnRef);
					PGResTarget *rt = makeNode(PGResTarget);
					PGSelectStmt *n = makeNode(PGSelectStmt);

					cr->fields = list_make1(makeNode(PGAStar));
					cr->location = -1;

					rt->name = NULL;
					rt->indirection = NIL;
					rt->val = (PGNode *)cr;
					rt->location = -1;

					n->targetList = list_make1(rt);
					n->fromClause = list_make1((yyvsp[(2) - (2)].range));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 435:
#line 205 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_UNION, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 436:
#line 209 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_INTERSECT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 437:
#line 213 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_EXCEPT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 438:
#line 230 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[(1) - (2)]);
			;}
    break;

  case 439:
#line 237 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[(1) - (2)]);
			;}
    break;

  case 440:
#line 244 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(3) - (3)].list);
				(yyval.with)->recursive = true;
				(yyval.with)->location = (yylsp[(1) - (3)]);
			;}
    break;

  case 441:
#line 253 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 442:
#line 254 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 443:
#line 258 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGCommonTableExpr *n = makeNode(PGCommonTableExpr);
				n->ctename = (yyvsp[(1) - (6)].str);
				n->aliascolnames = (yyvsp[(2) - (6)].list);
				n->ctequery = (yyvsp[(5) - (6)].node);
				n->location = (yylsp[(1) - (6)]);
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 444:
#line 270 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.into) = makeNode(PGIntoClause);
					(yyval.into)->rel = (yyvsp[(2) - (2)].range);
					(yyval.into)->colNames = NIL;
					(yyval.into)->options = NIL;
					(yyval.into)->onCommit = PG_ONCOMMIT_NOOP;
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;
				;}
    break;

  case 445:
#line 280 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.into) = NULL; ;}
    break;

  case 446:
#line 289 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 447:
#line 294 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 448:
#line 299 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 449:
#line 304 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 450:
#line 309 "third_party/libpg_query/grammar/statements/select.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (4)]))));
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 451:
#line 317 "third_party/libpg_query/grammar/statements/select.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (4)]))));
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 452:
#line 325 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_UNLOGGED;
				;}
    break;

  case 453:
#line 330 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(2) - (2)].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				;}
    break;

  case 454:
#line 335 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				;}
    break;

  case 455:
#line 341 "third_party/libpg_query/grammar/statements/select.y"
    {;}
    break;

  case 456:
#line 342 "third_party/libpg_query/grammar/statements/select.y"
    {;}
    break;

  case 457:
#line 346 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 458:
#line 347 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 459:
#line 348 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 460:
#line 355 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(NIL); ;}
    break;

  case 461:
#line 356 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
    break;

  case 462:
#line 360 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL;;}
    break;

  case 463:
#line 361 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 464:
#line 365 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list);;}
    break;

  case 465:
#line 366 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 466:
#line 370 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 467:
#line 374 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].sortby)); ;}
    break;

  case 468:
#line 375 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].sortby)); ;}
    break;

  case 469:
#line 379 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.sortby) = makeNode(PGSortBy);
					(yyval.sortby)->node = (yyvsp[(1) - (4)].node);
					(yyval.sortby)->sortby_dir = SORTBY_USING;
					(yyval.sortby)->sortby_nulls = (yyvsp[(4) - (4)].nullorder);
					(yyval.sortby)->useOp = (yyvsp[(3) - (4)].list);
					(yyval.sortby)->location = (yylsp[(3) - (4)]);
				;}
    break;

  case 470:
#line 388 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.sortby) = makeNode(PGSortBy);
					(yyval.sortby)->node = (yyvsp[(1) - (3)].node);
					(yyval.sortby)->sortby_dir = (yyvsp[(2) - (3)].sortorder);
					(yyval.sortby)->sortby_nulls = (yyvsp[(3) - (3)].nullorder);
					(yyval.sortby)->useOp = NIL;
					(yyval.sortby)->location = -1;		/* no operator */
				;}
    break;

  case 471:
#line 398 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_ASC; ;}
    break;

  case 472:
#line 399 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_DESC; ;}
    break;

  case 473:
#line 400 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_DEFAULT; ;}
    break;

  case 474:
#line 403 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_FIRST; ;}
    break;

  case 475:
#line 404 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_LAST; ;}
    break;

  case 476:
#line 405 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_DEFAULT; ;}
    break;

  case 477:
#line 409 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(2) - (2)].node), (yyvsp[(1) - (2)].node)); ;}
    break;

  case 478:
#line 410 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 479:
#line 411 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2(NULL, (yyvsp[(1) - (1)].node)); ;}
    break;

  case 480:
#line 412 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (1)].node), NULL); ;}
    break;

  case 481:
#line 416 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 482:
#line 417 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2(NULL,NULL); ;}
    break;

  case 483:
#line 422 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 484:
#line 424 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* Disabled because it was too confusing, bjm 2002-02-18 */
					ereport(ERROR,
							(errcode(PG_ERRCODE_SYNTAX_ERROR),
							 errmsg("LIMIT #,# syntax is not supported"),
							 errhint("Use separate LIMIT and OFFSET clauses."),
							 parser_errposition((yylsp[(1) - (4)]))));
				;}
    break;

  case 485:
#line 440 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(3) - (5)].node); ;}
    break;

  case 486:
#line 442 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeIntConst(1, -1); ;}
    break;

  case 487:
#line 447 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 488:
#line 450 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 489:
#line 454 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 490:
#line 456 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* LIMIT ALL is represented as a NULL constant */
					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
				;}
    break;

  case 491:
#line 463 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 492:
#line 483 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 493:
#line 485 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 494:
#line 487 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 495:
#line 491 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival),(yylsp[(1) - (1)])); ;}
    break;

  case 496:
#line 492 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str),(yylsp[(1) - (1)])); ;}
    break;

  case 497:
#line 496 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 498:
#line 497 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 499:
#line 500 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 500:
#line 501 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 501:
#line 526 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 502:
#line 527 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 503:
#line 531 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 504:
#line 532 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].node)); ;}
    break;

  case 505:
#line 536 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 506:
#line 537 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 507:
#line 542 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_EMPTY, NIL, (yylsp[(1) - (2)]));
				;}
    break;

  case 508:
#line 554 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 509:
#line 555 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 510:
#line 559 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 511:
#line 560 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 512:
#line 564 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 513:
#line 565 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 514:
#line 569 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 515:
#line 570 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 516:
#line 575 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGLockingClause *n = makeNode(PGLockingClause);
					n->lockedRels = (yyvsp[(2) - (3)].list);
					n->strength = (yyvsp[(1) - (3)].lockstrength);
					n->waitPolicy = (yyvsp[(3) - (3)].lockwaitpolicy);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 517:
#line 585 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = LCS_FORUPDATE; ;}
    break;

  case 518:
#line 586 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORNOKEYUPDATE; ;}
    break;

  case 519:
#line 587 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORSHARE; ;}
    break;

  case 520:
#line 588 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORKEYSHARE; ;}
    break;

  case 521:
#line 592 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 522:
#line 593 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 523:
#line 598 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = LockWaitError; ;}
    break;

  case 524:
#line 599 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = PGLockWaitSkip; ;}
    break;

  case 525:
#line 600 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = PGLockWaitBlock; ;}
    break;

  case 526:
#line 610 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->valuesLists = list_make1((yyvsp[(3) - (4)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 527:
#line 616 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = (PGSelectStmt *) (yyvsp[(1) - (5)].node);
					n->valuesLists = lappend(n->valuesLists, (yyvsp[(4) - (5)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 528:
#line 633 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 529:
#line 634 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 530:
#line 638 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 531:
#line 639 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 532:
#line 646 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyvsp[(1) - (2)].range)->alias = (yyvsp[(2) - (2)].alias);
					(yyval.node) = (PGNode *) (yyvsp[(1) - (2)].range);
				;}
    break;

  case 533:
#line 651 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeTableSample *n = (PGRangeTableSample *) (yyvsp[(3) - (3)].node);
					(yyvsp[(1) - (3)].range)->alias = (yyvsp[(2) - (3)].alias);
					/* relation_expr goes inside the PGRangeTableSample node */
					n->relation = (PGNode *) (yyvsp[(1) - (3)].range);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 534:
#line 659 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[(1) - (2)].node);
					n->alias = (PGAlias*) linitial((yyvsp[(2) - (2)].list));
					n->coldeflist = (PGList*) lsecond((yyvsp[(2) - (2)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 535:
#line 666 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[(2) - (3)].node);
					n->lateral = true;
					n->alias = (PGAlias*) linitial((yyvsp[(3) - (3)].list));
					n->coldeflist = (PGList*) lsecond((yyvsp[(3) - (3)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 536:
#line 674 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeSubselect *n = makeNode(PGRangeSubselect);
					n->lateral = false;
					n->subquery = (yyvsp[(1) - (2)].node);
					n->alias = (yyvsp[(2) - (2)].alias);
					/*
					 * The SQL spec does not permit a subselect
					 * (<derived_table>) without an alias clause,
					 * so we don't either.  This avoids the problem
					 * of needing to invent a unique refname for it.
					 * That could be surmounted if there's sufficient
					 * popular demand, but for now let's just implement
					 * the spec and see if anyone complains.
					 * However, it does seem like a good idea to emit
					 * an error message that's better than "syntax error".
					 */
					if ((yyvsp[(2) - (2)].alias) == NULL)
					{
						if (IsA((yyvsp[(1) - (2)].node), PGSelectStmt) &&
							((PGSelectStmt *) (yyvsp[(1) - (2)].node))->valuesLists)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("VALUES in FROM must have an alias"),
									 errhint("For example, FROM (VALUES ...) [AS] foo."),
									 parser_errposition((yylsp[(1) - (2)]))));
						else
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("subquery in FROM must have an alias"),
									 errhint("For example, FROM (SELECT ...) [AS] foo."),
									 parser_errposition((yylsp[(1) - (2)]))));
					}
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 537:
#line 709 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeSubselect *n = makeNode(PGRangeSubselect);
					n->lateral = true;
					n->subquery = (yyvsp[(2) - (3)].node);
					n->alias = (yyvsp[(3) - (3)].alias);
					/* same comment as above */
					if ((yyvsp[(3) - (3)].alias) == NULL)
					{
						if (IsA((yyvsp[(2) - (3)].node), PGSelectStmt) &&
							((PGSelectStmt *) (yyvsp[(2) - (3)].node))->valuesLists)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("VALUES in FROM must have an alias"),
									 errhint("For example, FROM (VALUES ...) [AS] foo."),
									 parser_errposition((yylsp[(2) - (3)]))));
						else
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("subquery in FROM must have an alias"),
									 errhint("For example, FROM (SELECT ...) [AS] foo."),
									 parser_errposition((yylsp[(2) - (3)]))));
					}
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 538:
#line 734 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) (yyvsp[(1) - (1)].jexpr);
				;}
    break;

  case 539:
#line 738 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyvsp[(2) - (4)].jexpr)->alias = (yyvsp[(4) - (4)].alias);
					(yyval.node) = (PGNode *) (yyvsp[(2) - (4)].jexpr);
				;}
    break;

  case 540:
#line 764 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.jexpr) = (yyvsp[(2) - (3)].jexpr);
				;}
    break;

  case 541:
#line 768 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* CROSS JOIN is same as unqualified inner join */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(4) - (4)].node);
					n->usingClause = NIL;
					n->quals = NULL;
					(yyval.jexpr) = n;
				;}
    break;

  case 542:
#line 780 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[(2) - (5)].jtype);
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (5)].node);
					n->rarg = (yyvsp[(4) - (5)].node);
					if ((yyvsp[(5) - (5)].node) != NULL && IsA((yyvsp[(5) - (5)].node), PGList))
						n->usingClause = (PGList *) (yyvsp[(5) - (5)].node); /* USING clause */
					else
						n->quals = (yyvsp[(5) - (5)].node); /* ON clause */
					(yyval.jexpr) = n;
				;}
    break;

  case 543:
#line 793 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* letting join_type reduce to empty doesn't work */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(3) - (4)].node);
					if ((yyvsp[(4) - (4)].node) != NULL && IsA((yyvsp[(4) - (4)].node), PGList))
						n->usingClause = (PGList *) (yyvsp[(4) - (4)].node); /* USING clause */
					else
						n->quals = (yyvsp[(4) - (4)].node); /* ON clause */
					(yyval.jexpr) = n;
				;}
    break;

  case 544:
#line 807 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[(3) - (5)].jtype);
					n->isNatural = true;
					n->larg = (yyvsp[(1) - (5)].node);
					n->rarg = (yyvsp[(5) - (5)].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					(yyval.jexpr) = n;
				;}
    break;

  case 545:
#line 818 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* letting join_type reduce to empty doesn't work */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = true;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(4) - (4)].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					(yyval.jexpr) = n;
				;}
    break;

  case 546:
#line 833 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(2) - (5)].str);
					(yyval.alias)->colnames = (yyvsp[(4) - (5)].list);
				;}
    break;

  case 547:
#line 839 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(2) - (2)].str);
				;}
    break;

  case 548:
#line 844 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(1) - (4)].str);
					(yyval.alias)->colnames = (yyvsp[(3) - (4)].list);
				;}
    break;

  case 549:
#line 850 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(1) - (1)].str);
				;}
    break;

  case 550:
#line 856 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.alias) = (yyvsp[(1) - (1)].alias); ;}
    break;

  case 551:
#line 857 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.alias) = NULL; ;}
    break;

  case 552:
#line 866 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2((yyvsp[(1) - (1)].alias), NIL);
				;}
    break;

  case 553:
#line 870 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(NULL, (yyvsp[(3) - (4)].list));
				;}
    break;

  case 554:
#line 874 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAlias *a = makeNode(PGAlias);
					a->aliasname = (yyvsp[(2) - (5)].str);
					(yyval.list) = list_make2(a, (yyvsp[(4) - (5)].list));
				;}
    break;

  case 555:
#line 880 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAlias *a = makeNode(PGAlias);
					a->aliasname = (yyvsp[(1) - (4)].str);
					(yyval.list) = list_make2(a, (yyvsp[(3) - (4)].list));
				;}
    break;

  case 556:
#line 886 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(NULL, NIL);
				;}
    break;

  case 557:
#line 891 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_FULL; ;}
    break;

  case 558:
#line 892 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_LEFT; ;}
    break;

  case 559:
#line 893 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_RIGHT; ;}
    break;

  case 560:
#line 894 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_INNER; ;}
    break;

  case 561:
#line 898 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 562:
#line 899 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 563:
#line 911 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) (yyvsp[(3) - (4)].list); ;}
    break;

  case 564:
#line 912 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 565:
#line 918 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* inheritance query, implicitly */
					(yyval.range) = (yyvsp[(1) - (1)].range);
					(yyval.range)->inh = true;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 566:
#line 925 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* inheritance query, explicitly */
					(yyval.range) = (yyvsp[(1) - (2)].range);
					(yyval.range)->inh = true;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 567:
#line 932 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* no inheritance */
					(yyval.range) = (yyvsp[(2) - (2)].range);
					(yyval.range)->inh = false;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 568:
#line 939 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* no inheritance, SQL99-style syntax */
					(yyval.range) = (yyvsp[(3) - (4)].range);
					(yyval.range)->inh = false;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 569:
#line 962 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeTableSample *n = makeNode(PGRangeTableSample);
					/* n->relation will be filled in later */
					n->method = (yyvsp[(2) - (6)].list);
					n->args = (yyvsp[(4) - (6)].list);
					n->repeatable = (yyvsp[(6) - (6)].node);
					n->location = (yylsp[(2) - (6)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 570:
#line 974 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) (yyvsp[(3) - (4)].node); ;}
    break;

  case 571:
#line 975 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 572:
#line 991 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = makeNode(PGRangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[(2) - (2)].boolean);
					n->is_rowsfrom = false;
					n->functions = list_make1(list_make2((yyvsp[(1) - (2)].node), NIL));
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 573:
#line 1001 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = makeNode(PGRangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[(6) - (6)].boolean);
					n->is_rowsfrom = true;
					n->functions = (yyvsp[(4) - (6)].list);
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 574:
#line 1013 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list)); ;}
    break;

  case 575:
#line 1017 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 576:
#line 1018 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 577:
#line 1021 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 578:
#line 1022 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 579:
#line 1025 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 580:
#line 1026 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 581:
#line 1031 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 582:
#line 1032 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 583:
#line 1038 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 584:
#line 1042 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 585:
#line 1048 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->colname = (yyvsp[(1) - (3)].str);
					n->typeName = (yyvsp[(2) - (3)].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collClause = (PGCollateClause *) (yyvsp[(3) - (3)].node);
					n->collOid = InvalidOid;
					n->constraints = NIL;
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 586:
#line 1069 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[(2) - (2)].list);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 587:
#line 1076 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 588:
#line 1089 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[(2) - (2)].list);
				;}
    break;

  case 589:
#line 1094 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[(3) - (3)].list);
					(yyval.typnam)->setof = true;
				;}
    break;

  case 590:
#line 1101 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (5)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(4) - (5)].ival)));
				;}
    break;

  case 591:
#line 1106 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (6)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(5) - (6)].ival)));
					(yyval.typnam)->setof = true;
				;}
    break;

  case 592:
#line 1112 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
				;}
    break;

  case 593:
#line 1117 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
					(yyval.typnam)->setof = true;
				;}
    break;

  case 594:
#line 1126 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeInteger(-1)); ;}
    break;

  case 595:
#line 1128 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = lappend((yyvsp[(1) - (4)].list), makeInteger((yyvsp[(3) - (4)].ival))); ;}
    break;

  case 596:
#line 1130 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = NIL; ;}
    break;

  case 597:
#line 1134 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 598:
#line 1135 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 599:
#line 1136 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 600:
#line 1137 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 601:
#line 1138 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 602:
#line 1140 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
				;}
    break;

  case 603:
#line 1145 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (4)].typnam);
					(yyval.typnam)->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											 makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
				;}
    break;

  case 604:
#line 1164 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 605:
#line 1165 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 606:
#line 1166 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 607:
#line 1167 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 608:
#line 1179 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = makeTypeName((yyvsp[(1) - (2)].str));
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 609:
#line 1185 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(1) - (3)].str)), (yyvsp[(2) - (3)].list)));
					(yyval.typnam)->typmods = (yyvsp[(3) - (3)].list);
					(yyval.typnam)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 610:
#line 1192 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 611:
#line 1193 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 612:
#line 1200 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 613:
#line 1205 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 614:
#line 1210 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int2");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 615:
#line 1215 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int8");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 616:
#line 1220 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 617:
#line 1225 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (2)].typnam);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 618:
#line 1230 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float8");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 619:
#line 1235 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 620:
#line 1241 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 621:
#line 1247 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 622:
#line 1253 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("bool");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 623:
#line 1260 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Check FLOAT() precision limits assuming IEEE floating
					 * types - thomas 1997-09-18
					 */
					if ((yyvsp[(2) - (3)].ival) < 1)
						ereport(ERROR,
								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be at least 1 bit"),
								 parser_errposition((yylsp[(2) - (3)]))));
					else if ((yyvsp[(2) - (3)].ival) <= 24)
						(yyval.typnam) = SystemTypeName("float4");
					else if ((yyvsp[(2) - (3)].ival) <= 53)
						(yyval.typnam) = SystemTypeName("float8");
					else
						ereport(ERROR,
								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be less than 54 bits"),
								 parser_errposition((yylsp[(2) - (3)]))));
				;}
    break;

  case 624:
#line 1281 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float8");
				;}
    break;

  case 625:
#line 1291 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 626:
#line 1295 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 627:
#line 1303 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 628:
#line 1307 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
					(yyval.typnam)->typmods = NIL;
				;}
    break;

  case 629:
#line 1315 "third_party/libpg_query/grammar/statements/select.y"
    {
					const char *typname;

					typname = (yyvsp[(2) - (5)].boolean) ? "varbit" : "bit";
					(yyval.typnam) = SystemTypeName(typname);
					(yyval.typnam)->typmods = (yyvsp[(4) - (5)].list);
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 630:
#line 1327 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* bit defaults to bit(1), varbit to no limit */
					if ((yyvsp[(2) - (2)].boolean))
					{
						(yyval.typnam) = SystemTypeName("varbit");
					}
					else
					{
						(yyval.typnam) = SystemTypeName("bit");
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					}
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 631:
#line 1348 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 632:
#line 1352 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 633:
#line 1358 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 634:
#line 1362 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* Length was not specified so allow to be unrestricted.
					 * This handles problems with fixed-length (bpchar) strings
					 * which in column definitions must default to a length
					 * of one, but should not be constrained if the length
					 * was not specified.
					 */
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
					(yyval.typnam)->typmods = NIL;
				;}
    break;

  case 635:
#line 1375 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (4)].conststr));
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
					(yyval.typnam)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 636:
#line 1383 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (1)].conststr));
					/* char defaults to char(1), varchar to no limit */
					if (strcmp((yyvsp[(1) - (1)].conststr), "bpchar") == 0)
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 637:
#line 1393 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 638:
#line 1395 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 639:
#line 1397 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "varchar"; ;}
    break;

  case 640:
#line 1399 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 641:
#line 1401 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 642:
#line 1403 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 643:
#line 1407 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 644:
#line 1408 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 645:
#line 1416 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(5) - (5)].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 646:
#line 1425 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 647:
#line 1433 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(5) - (5)].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 648:
#line 1442 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 649:
#line 1453 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("interval");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 650:
#line 1460 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 651:
#line 1461 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 652:
#line 1462 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 653:
#line 1467 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR), (yylsp[(1) - (1)]))); ;}
    break;

  case 654:
#line 1469 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MONTH), (yylsp[(1) - (1)]))); ;}
    break;

  case 655:
#line 1471 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY), (yylsp[(1) - (1)]))); ;}
    break;

  case 656:
#line 1473 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR), (yylsp[(1) - (1)]))); ;}
    break;

  case 657:
#line 1475 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MINUTE), (yylsp[(1) - (1)]))); ;}
    break;

  case 658:
#line 1477 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 659:
#line 1479 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR) |
												 INTERVAL_MASK(MONTH), (yylsp[(1) - (3)])));
				;}
    break;

  case 660:
#line 1484 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR), (yylsp[(1) - (3)])));
				;}
    break;

  case 661:
#line 1489 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
				;}
    break;

  case 662:
#line 1495 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(3) - (3)].list);
					linitial((yyval.list)) = makeIntConst(INTERVAL_MASK(DAY) |
												INTERVAL_MASK(HOUR) |
												INTERVAL_MASK(MINUTE) |
												INTERVAL_MASK(SECOND), (yylsp[(1) - (3)]));
				;}
    break;

  case 663:
#line 1503 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
				;}
    break;

  case 664:
#line 1508 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(3) - (3)].list);
					linitial((yyval.list)) = makeIntConst(INTERVAL_MASK(HOUR) |
												INTERVAL_MASK(MINUTE) |
												INTERVAL_MASK(SECOND), (yylsp[(1) - (3)]));
				;}
    break;

  case 665:
#line 1515 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(3) - (3)].list);
					linitial((yyval.list)) = makeIntConst(INTERVAL_MASK(MINUTE) |
												INTERVAL_MASK(SECOND), (yylsp[(1) - (3)]));
				;}
    break;

  case 666:
#line 1521 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 667:
#line 1526 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(SECOND), (yylsp[(1) - (1)])));
				;}
    break;

  case 668:
#line 1530 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(makeIntConst(INTERVAL_MASK(SECOND), (yylsp[(1) - (4)])),
									makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
				;}
    break;

  case 669:
#line 1565 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 670:
#line 1567 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), (yylsp[(2) - (3)])); ;}
    break;

  case 671:
#line 1569 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = (yyvsp[(1) - (3)].node);
					n->collname = (yyvsp[(3) - (3)].list);
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 672:
#line 1577 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("timezone"),
											   list_make2((yyvsp[(5) - (5)].node), (yyvsp[(1) - (5)].node)),
											   (yylsp[(2) - (5)]));
				;}
    break;

  case 673:
#line 1592 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 674:
#line 1594 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 675:
#line 1596 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 676:
#line 1598 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 677:
#line 1600 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 678:
#line 1602 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 679:
#line 1604 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 680:
#line 1606 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 681:
#line 1608 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 682:
#line 1610 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 683:
#line 1612 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 684:
#line 1614 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 685:
#line 1616 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 686:
#line 1618 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 687:
#line 1621 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 688:
#line 1623 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 689:
#line 1625 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
    break;

  case 690:
#line 1628 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeAndExpr((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 691:
#line 1630 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeOrExpr((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 692:
#line 1632 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeNotExpr((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 693:
#line 1634 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeNotExpr((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 694:
#line 1637 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "~~",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 695:
#line 1642 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make3((yyvsp[(1) - (5)].node), (yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 696:
#line 1649 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "!~~",
												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
				;}
    break;

  case 697:
#line 1654 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("not_like_escape"),
											   list_make3((yyvsp[(1) - (6)].node), (yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 698:
#line 1661 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "~~*",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 699:
#line 1666 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make2((yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "~~*",
												   (yyvsp[(1) - (5)].node), (PGNode *) n, (yylsp[(2) - (5)]));
				;}
    break;

  case 700:
#line 1674 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "!~~*",
												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
				;}
    break;

  case 701:
#line 1679 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("not_like_escape"),
											   list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "!~~*",
												   (yyvsp[(1) - (6)].node), (PGNode *) n, (yylsp[(2) - (6)]));
				;}
    break;

  case 702:
#line 1688 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(4) - (4)].node), makeNullAConst(-1)),
											   (yylsp[(2) - (4)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
												   (yyvsp[(1) - (4)].node), (PGNode *) n, (yylsp[(2) - (4)]));
				;}
    break;

  case 703:
#line 1696 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
												   (yyvsp[(1) - (6)].node), (PGNode *) n, (yylsp[(2) - (6)]));
				;}
    break;

  case 704:
#line 1704 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(5) - (5)].node), makeNullAConst(-1)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
												   (yyvsp[(1) - (5)].node), (PGNode *) n, (yylsp[(2) - (5)]));
				;}
    break;

  case 705:
#line 1712 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
											   (yylsp[(2) - (7)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
												   (yyvsp[(1) - (7)].node), (PGNode *) n, (yylsp[(2) - (7)]));
				;}
    break;

  case 706:
#line 1730 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					n->nulltesttype = PG_IS_NULL;
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 707:
#line 1738 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
					n->nulltesttype = PG_IS_NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 708:
#line 1746 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 709:
#line 1754 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 710:
#line 1762 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 711:
#line 1770 "third_party/libpg_query/grammar/statements/select.y"
    {
					if (list_length((yyvsp[(1) - (3)].list)) != 2)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on left side of OVERLAPS expression"),
								 parser_errposition((yylsp[(1) - (3)]))));
					if (list_length((yyvsp[(3) - (3)].list)) != 2)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on right side of OVERLAPS expression"),
								 parser_errposition((yylsp[(3) - (3)]))));
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlaps"),
											   list_concat((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)),
											   (yylsp[(2) - (3)]));
				;}
    break;

  case 712:
#line 1786 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = PG_IS_TRUE;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 713:
#line 1794 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_TRUE;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 714:
#line 1802 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = IS_FALSE;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 715:
#line 1810 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_FALSE;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 716:
#line 1818 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = IS_UNKNOWN;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 717:
#line 1826 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_UNKNOWN;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 718:
#line 1834 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
				;}
    break;

  case 719:
#line 1838 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 720:
#line 1842 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
				;}
    break;

  case 721:
#line 1846 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
				;}
    break;

  case 722:
#line 1850 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN,
												   "BETWEEN",
												   (yyvsp[(1) - (6)].node),
												   (PGNode *) list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
												   (yylsp[(2) - (6)]));
				;}
    break;

  case 723:
#line 1858 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN,
												   "NOT BETWEEN",
												   (yyvsp[(1) - (7)].node),
												   (PGNode *) list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
												   (yylsp[(2) - (7)]));
				;}
    break;

  case 724:
#line 1866 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN_SYM,
												   "BETWEEN SYMMETRIC",
												   (yyvsp[(1) - (6)].node),
												   (PGNode *) list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
												   (yylsp[(2) - (6)]));
				;}
    break;

  case 725:
#line 1874 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN_SYM,
												   "NOT BETWEEN SYMMETRIC",
												   (yyvsp[(1) - (7)].node),
												   (PGNode *) list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
												   (yylsp[(2) - (7)]));
				;}
    break;

  case 726:
#line 1882 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* in_expr returns a PGSubLink or a list of a_exprs */
					if (IsA((yyvsp[(3) - (3)].node), PGSubLink))
					{
						/* generate foo = ANY (subquery) */
						PGSubLink *n = (PGSubLink *) (yyvsp[(3) - (3)].node);
						n->subLinkType = PG_ANY_SUBLINK;
						n->subLinkId = 0;
						n->testexpr = (yyvsp[(1) - (3)].node);
						n->operName = NIL;		/* show it's IN not = ANY */
						n->location = (yylsp[(2) - (3)]);
						(yyval.node) = (PGNode *)n;
					}
					else
					{
						/* generate scalar IN expression */
						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
					}
				;}
    break;

  case 727:
#line 1902 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* in_expr returns a PGSubLink or a list of a_exprs */
					if (IsA((yyvsp[(4) - (4)].node), PGSubLink))
					{
						/* generate NOT (foo = ANY (subquery)) */
						/* Make an = ANY node */
						PGSubLink *n = (PGSubLink *) (yyvsp[(4) - (4)].node);
						n->subLinkType = PG_ANY_SUBLINK;
						n->subLinkId = 0;
						n->testexpr = (yyvsp[(1) - (4)].node);
						n->operName = NIL;		/* show it's IN not = ANY */
						n->location = (yylsp[(2) - (4)]);
						/* Stick a NOT on top; must have same parse location */
						(yyval.node) = makeNotExpr((PGNode *) n, (yylsp[(2) - (4)]));
					}
					else
					{
						/* generate scalar NOT IN expression */
						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "<>", (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
					}
				;}
    break;

  case 728:
#line 1924 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = (yyvsp[(3) - (4)].subquerytype);
					n->subLinkId = 0;
					n->testexpr = (yyvsp[(1) - (4)].node);
					n->operName = (yyvsp[(2) - (4)].list);
					n->subselect = (yyvsp[(4) - (4)].node);
					n->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 729:
#line 1935 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(3) - (6)].subquerytype) == PG_ANY_SUBLINK)
						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ANY, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
					else
						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ALL, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 730:
#line 1942 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * The SQL spec only allows DEFAULT in "contextually typed
					 * expressions", but for us, it's easier to allow it in
					 * any a_expr and then throw error during parse analysis
					 * if it's in an inappropriate context.  This way also
					 * lets us say something smarter than "syntax error".
					 */
					PGSetToDefault *n = makeNode(PGSetToDefault);
					/* parse analysis will fill in the rest */
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 731:
#line 1967 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 732:
#line 1969 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), (yylsp[(2) - (3)])); ;}
    break;

  case 733:
#line 1971 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 734:
#line 1973 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 735:
#line 1975 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 736:
#line 1977 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 737:
#line 1979 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 738:
#line 1981 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 739:
#line 1983 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 740:
#line 1985 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 741:
#line 1987 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 742:
#line 1989 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 743:
#line 1991 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 744:
#line 1993 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 745:
#line 1995 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 746:
#line 1997 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 747:
#line 1999 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 748:
#line 2001 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 749:
#line 2003 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
    break;

  case 750:
#line 2005 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
				;}
    break;

  case 751:
#line 2009 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 752:
#line 2013 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
				;}
    break;

  case 753:
#line 2017 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
				;}
    break;

  case 754:
#line 2030 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 755:
#line 2031 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 756:
#line 2033 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = makeParamRef(0, (yylsp[(1) - (2)]));
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = makeParamRef(0, (yylsp[(1) - (2)]));
				;}
    break;

  case 757:
#line 2045 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGParamRef *p = makeNode(PGParamRef);
					p->number = (yyvsp[(1) - (2)].ival);
					p->location = (yylsp[(1) - (2)]);
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (PGNode *) p;
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = (PGNode *) p;
				;}
    break;

  case 758:
#line 2060 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(4) - (4)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (yyvsp[(2) - (4)].node);
						n->indirection = check_indirection((yyvsp[(4) - (4)].list), yyscanner);
						(yyval.node) = (PGNode *)n;
					}
					else
						(yyval.node) = (yyvsp[(2) - (4)].node);
				;}
    break;

  case 759:
#line 2072 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 760:
#line 2074 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 761:
#line 2076 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_EXPR_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(1) - (1)].node);
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 762:
#line 2087 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Because the select_with_parens nonterminal is designed
					 * to "eat" as many levels of parens as possible, the
					 * '(' a_expr ')' opt_indirection production above will
					 * fail to match a sub-SELECT with indirection decoration;
					 * the sub-SELECT won't be regarded as an a_expr as long
					 * as there are parens around it.  To support applying
					 * subscripting or field selection to a sub-SELECT result,
					 * we need this redundant-looking production.
					 */
					PGSubLink *n = makeNode(PGSubLink);
					PGAIndirection *a = makeNode(PGAIndirection);
					n->subLinkType = PG_EXPR_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(1) - (2)].node);
					n->location = (yylsp[(1) - (2)]);
					a->arg = (PGNode *)n;
					a->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.node) = (PGNode *)a;
				;}
    break;

  case 763:
#line 2111 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_EXISTS_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(2) - (2)].node);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 764:
#line 2124 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall((yyvsp[(1) - (3)].list), NIL, (yylsp[(1) - (3)]));
				;}
    break;

  case 765:
#line 2128 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (5)].list), (yyvsp[(3) - (5)].list), (yylsp[(1) - (5)]));
					n->agg_order = (yyvsp[(4) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 766:
#line 2134 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), list_make1((yyvsp[(4) - (6)].node)), (yylsp[(1) - (6)]));
					n->func_variadic = true;
					n->agg_order = (yyvsp[(5) - (6)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 767:
#line 2141 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (8)].list), lappend((yyvsp[(3) - (8)].list), (yyvsp[(6) - (8)].node)), (yylsp[(1) - (8)]));
					n->func_variadic = true;
					n->agg_order = (yyvsp[(7) - (8)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 768:
#line 2148 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), (yyvsp[(4) - (6)].list), (yylsp[(1) - (6)]));
					n->agg_order = (yyvsp[(5) - (6)].list);
					/* Ideally we'd mark the PGFuncCall node to indicate
					 * "must be an aggregate", but there's no provision
					 * for that in PGFuncCall at the moment.
					 */
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 769:
#line 2158 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), (yyvsp[(4) - (6)].list), (yylsp[(1) - (6)]));
					n->agg_order = (yyvsp[(5) - (6)].list);
					n->agg_distinct = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 770:
#line 2165 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * We consider AGGREGATE(*) to invoke a parameterless
					 * aggregate.  This does the right thing for COUNT(*),
					 * and there are no other aggregates in SQL that accept
					 * '*' as parameter.
					 *
					 * The PGFuncCall node is also marked agg_star = true,
					 * so that later processing can detect what the argument
					 * really was.
					 */
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (4)].list), NIL, (yylsp[(1) - (4)]));
					n->agg_star = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 771:
#line 2193 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = (PGFuncCall *) (yyvsp[(1) - (4)].node);
					/*
					 * The order clause for WITHIN GROUP and the one for
					 * plain-aggregate ORDER BY share a field, so we have to
					 * check here that at most one is present.  We also check
					 * for DISTINCT and VARIADIC here to give a better error
					 * location.  Other consistency checks are deferred to
					 * parse analysis.
					 */
					if ((yyvsp[(2) - (4)].list) != NIL)
					{
						if (n->agg_order != NIL)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use multiple ORDER BY clauses with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						if (n->agg_distinct)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use DISTINCT with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						if (n->func_variadic)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use VARIADIC with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						n->agg_order = (yyvsp[(2) - (4)].list);
						n->agg_within_group = true;
					}
					n->agg_filter = (yyvsp[(3) - (4)].node);
					n->over = (yyvsp[(4) - (4)].windef);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 772:
#line 2228 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 773:
#line 2238 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 774:
#line 2239 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 775:
#line 2247 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("pg_collation_for"),
											   list_make1((yyvsp[(4) - (5)].node)),
											   (yylsp[(1) - (5)]));
				;}
    break;

  case 776:
#line 2253 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_DATE, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 777:
#line 2257 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIME, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 778:
#line 2261 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIME_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 779:
#line 2265 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIMESTAMP, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 780:
#line 2269 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIMESTAMP_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 781:
#line 2273 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIME, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 782:
#line 2277 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIME_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 783:
#line 2281 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIMESTAMP, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 784:
#line 2285 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIMESTAMP_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 785:
#line 2289 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_ROLE, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 786:
#line 2293 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 787:
#line 2297 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_SESSION_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 788:
#line 2301 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 789:
#line 2305 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_CATALOG, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 790:
#line 2309 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_SCHEMA, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 791:
#line 2313 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].typnam), (yylsp[(1) - (6)])); ;}
    break;

  case 792:
#line 2315 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("date_part"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 793:
#line 2319 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* overlay(A PLACING B FROM C FOR D) is converted to
					 * overlay(A, B, C, D)
					 * overlay(A PLACING B FROM C) is converted to
					 * overlay(A, B, C)
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlay"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 794:
#line 2328 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* position(A in B) is converted to position(B, A) */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("position"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 795:
#line 2333 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* substring(A from B for C) is converted to
					 * substring(A, B, C) - thomas 2000-11-28
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("substring"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 796:
#line 2340 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* TREAT(expr AS target) converts expr of a particular type to target,
					 * which is defined to be a subtype of the original expression.
					 * In SQL99, this is intended for use with structured UDTs,
					 * but let's make this a generally useful form allowing stronger
					 * coercions than are handled by implicit casting.
					 *
					 * Convert SystemTypeName() to SystemFuncName() even though
					 * at the moment they result in the same thing.
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName(((PGValue *)llast((yyvsp[(5) - (6)].typnam)->names))->val.str),
												list_make1((yyvsp[(3) - (6)].node)),
												(yylsp[(1) - (6)]));
				;}
    break;

  case 797:
#line 2355 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* various trim expressions are defined in SQL
					 * - thomas 1997-07-19
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("trim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 798:
#line 2362 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("ltrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 799:
#line 2366 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("rtrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 800:
#line 2370 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("trim"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 801:
#line 2374 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NULLIF, "=", (yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(1) - (6)]));
				;}
    break;

  case 802:
#line 2378 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCoalesceExpr *c = makeNode(PGCoalesceExpr);
					c->args = (yyvsp[(3) - (4)].list);
					c->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)c;
				;}
    break;

  case 803:
#line 2391 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
    break;

  case 804:
#line 2392 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 805:
#line 2396 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(4) - (5)].node); ;}
    break;

  case 806:
#line 2397 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 807:
#line 2405 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 808:
#line 2406 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 809:
#line 2410 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].windef)); ;}
    break;

  case 810:
#line 2412 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].windef)); ;}
    break;

  case 811:
#line 2417 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(3) - (3)].windef);
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.windef) = n;
				;}
    break;

  case 812:
#line 2425 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.windef) = (yyvsp[(2) - (2)].windef); ;}
    break;

  case 813:
#line 2427 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->name = (yyvsp[(2) - (2)].str);
					n->refname = NULL;
					n->partitionClause = NIL;
					n->orderClause = NIL;
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.windef) = n;
				;}
    break;

  case 814:
#line 2440 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.windef) = NULL; ;}
    break;

  case 815:
#line 2445 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->name = NULL;
					n->refname = (yyvsp[(2) - (6)].str);
					n->partitionClause = (yyvsp[(3) - (6)].list);
					n->orderClause = (yyvsp[(4) - (6)].list);
					/* copy relevant fields of opt_frame_clause */
					n->frameOptions = (yyvsp[(5) - (6)].windef)->frameOptions;
					n->startOffset = (yyvsp[(5) - (6)].windef)->startOffset;
					n->endOffset = (yyvsp[(5) - (6)].windef)->endOffset;
					n->location = (yylsp[(1) - (6)]);
					(yyval.windef) = n;
				;}
    break;

  case 816:
#line 2470 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 817:
#line 2471 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = NULL; ;}
    break;

  case 818:
#line 2474 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 819:
#line 2475 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 820:
#line 2487 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(2) - (2)].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_RANGE;
					if (n->frameOptions & (FRAMEOPTION_START_VALUE_PRECEDING |
										   FRAMEOPTION_END_VALUE_PRECEDING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("RANGE PRECEDING is only supported with UNBOUNDED"),
								 parser_errposition((yylsp[(1) - (2)]))));
					if (n->frameOptions & (FRAMEOPTION_START_VALUE_FOLLOWING |
										   FRAMEOPTION_END_VALUE_FOLLOWING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("RANGE FOLLOWING is only supported with UNBOUNDED"),
								 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.windef) = n;
				;}
    break;

  case 821:
#line 2505 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(2) - (2)].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_ROWS;
					(yyval.windef) = n;
				;}
    break;

  case 822:
#line 2511 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 823:
#line 2521 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(1) - (1)].windef);
					/* reject invalid cases */
					if (n->frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[(1) - (1)]))));
					if (n->frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot end with current row"),
								 parser_errposition((yylsp[(1) - (1)]))));
					n->frameOptions |= FRAMEOPTION_END_CURRENT_ROW;
					(yyval.windef) = n;
				;}
    break;

  case 824:
#line 2538 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n1 = (yyvsp[(2) - (4)].windef);
					PGWindowDef *n2 = (yyvsp[(4) - (4)].windef);
					/* form merged options */
					int		frameOptions = n1->frameOptions;
					/* shift converts START_ options to END_ options */
					frameOptions |= n2->frameOptions << 1;
					frameOptions |= FRAMEOPTION_BETWEEN;
					/* reject invalid cases */
					if (frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[(2) - (4)]))));
					if (frameOptions & FRAMEOPTION_END_UNBOUNDED_PRECEDING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame end cannot be UNBOUNDED PRECEDING"),
								 parser_errposition((yylsp[(4) - (4)]))));
					if ((frameOptions & FRAMEOPTION_START_CURRENT_ROW) &&
						(frameOptions & FRAMEOPTION_END_VALUE_PRECEDING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from current row cannot have preceding rows"),
								 parser_errposition((yylsp[(4) - (4)]))));
					if ((frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING) &&
						(frameOptions & (FRAMEOPTION_END_VALUE_PRECEDING |
										 FRAMEOPTION_END_CURRENT_ROW)))
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot have preceding rows"),
								 parser_errposition((yylsp[(4) - (4)]))));
					n1->frameOptions = frameOptions;
					n1->endOffset = n2->startOffset;
					(yyval.windef) = n1;
				;}
    break;

  case 825:
#line 2583 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_PRECEDING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 826:
#line 2591 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_FOLLOWING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 827:
#line 2599 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_CURRENT_ROW;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 828:
#line 2607 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_PRECEDING;
					n->startOffset = (yyvsp[(1) - (2)].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 829:
#line 2615 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_FOLLOWING;
					n->startOffset = (yyvsp[(1) - (2)].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 830:
#line 2635 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 831:
#line 2636 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 832:
#line 2637 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(2) - (5)].list), (yyvsp[(4) - (5)].node)); ;}
    break;

  case 833:
#line 2640 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
    break;

  case 834:
#line 2641 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
    break;

  case 835:
#line 2642 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ALL_SUBLINK; ;}
    break;

  case 836:
#line 2645 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 837:
#line 2646 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) (yyvsp[(1) - (1)].conststr); ;}
    break;

  case 838:
#line 2649 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "+"; ;}
    break;

  case 839:
#line 2650 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "-"; ;}
    break;

  case 840:
#line 2651 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "*"; ;}
    break;

  case 841:
#line 2652 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "/"; ;}
    break;

  case 842:
#line 2653 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "%"; ;}
    break;

  case 843:
#line 2654 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "^"; ;}
    break;

  case 844:
#line 2655 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<"; ;}
    break;

  case 845:
#line 2656 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = ">"; ;}
    break;

  case 846:
#line 2657 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "="; ;}
    break;

  case 847:
#line 2658 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<="; ;}
    break;

  case 848:
#line 2659 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = ">="; ;}
    break;

  case 849:
#line 2660 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<>"; ;}
    break;

  case 850:
#line 2664 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 851:
#line 2666 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 852:
#line 2671 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 853:
#line 2673 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 854:
#line 2678 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 855:
#line 2680 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 856:
#line 2682 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~")); ;}
    break;

  case 857:
#line 2684 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~")); ;}
    break;

  case 858:
#line 2686 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~*")); ;}
    break;

  case 859:
#line 2688 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~*")); ;}
    break;

  case 860:
#line 2702 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 861:
#line 2704 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lcons(makeString((yyvsp[(1) - (3)].str)), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 862:
#line 2708 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 863:
#line 2712 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 864:
#line 2719 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 865:
#line 2723 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 866:
#line 2729 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(1) - (1)].node);
				;}
    break;

  case 867:
#line 2733 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[(1) - (3)].str);
					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) na;
				;}
    break;

  case 868:
#line 2742 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[(1) - (3)].str);
					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) na;
				;}
    break;

  case 869:
#line 2752 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].typnam)); ;}
    break;

  case 870:
#line 2753 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].typnam)); ;}
    break;

  case 871:
#line 2758 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(makeStringConst((yyvsp[(1) - (3)].str), (yylsp[(1) - (3)])), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 872:
#line 2761 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 873:
#line 2768 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 874:
#line 2769 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "year"; ;}
    break;

  case 875:
#line 2770 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "month"; ;}
    break;

  case 876:
#line 2771 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "day"; ;}
    break;

  case 877:
#line 2772 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "hour"; ;}
    break;

  case 878:
#line 2773 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "minute"; ;}
    break;

  case 879:
#line 2774 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "second"; ;}
    break;

  case 880:
#line 2775 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 881:
#line 2786 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make4((yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].node), (yyvsp[(3) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 882:
#line 2790 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 883:
#line 2797 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 884:
#line 2803 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(3) - (3)].node), (yyvsp[(1) - (3)].node)); ;}
    break;

  case 885:
#line 2804 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 886:
#line 2821 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 887:
#line 2825 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* not legal per SQL99, but might as well allow it */
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yyvsp[(2) - (3)].node));
				;}
    break;

  case 888:
#line 2830 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node));
				;}
    break;

  case 889:
#line 2834 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Since there are no cases where this syntax allows
					 * a textual FOR value, we forcibly cast the argument
					 * to int4.  The possible matches in pg_proc are
					 * substring(text,int4) and substring(text,text),
					 * and we don't want the parser to choose the latter,
					 * which it is likely to do if the second argument
					 * is unknown or doesn't have an implicit cast to int4.
					 */
					(yyval.list) = list_make3((yyvsp[(1) - (2)].node), makeIntConst(1, -1),
									makeTypeCast((yyvsp[(2) - (2)].node),
												 SystemTypeName("int4"), -1));
				;}
    break;

  case 890:
#line 2849 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(1) - (1)].list);
				;}
    break;

  case 891:
#line 2853 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 892:
#line 2857 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 893:
#line 2860 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 894:
#line 2863 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(3) - (3)].list), (yyvsp[(1) - (3)].node)); ;}
    break;

  case 895:
#line 2864 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 896:
#line 2865 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 897:
#line 2869 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subselect = (yyvsp[(1) - (1)].node);
					/* other fields will be filled later */
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 898:
#line 2875 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *)(yyvsp[(2) - (3)].list); ;}
    break;

  case 899:
#line 2886 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCaseExpr *c = makeNode(PGCaseExpr);
					c->casetype = InvalidOid; /* not analyzed yet */
					c->arg = (PGExpr *) (yyvsp[(2) - (5)].node);
					c->args = (yyvsp[(3) - (5)].list);
					c->defresult = (PGExpr *) (yyvsp[(4) - (5)].node);
					c->location = (yylsp[(1) - (5)]);
					(yyval.node) = (PGNode *)c;
				;}
    break;

  case 900:
#line 2899 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 901:
#line 2900 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 902:
#line 2905 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCaseWhen *w = makeNode(PGCaseWhen);
					w->expr = (PGExpr *) (yyvsp[(2) - (4)].node);
					w->result = (PGExpr *) (yyvsp[(4) - (4)].node);
					w->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)w;
				;}
    break;

  case 903:
#line 2915 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 904:
#line 2916 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 905:
#line 2919 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 906:
#line 2920 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 907:
#line 2924 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeColumnRef((yyvsp[(1) - (1)].str), NIL, (yylsp[(1) - (1)]), yyscanner);
				;}
    break;

  case 908:
#line 2928 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeColumnRef((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].list), (yylsp[(1) - (2)]), yyscanner);
				;}
    break;

  case 909:
#line 2935 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeString((yyvsp[(2) - (2)].str));
				;}
    break;

  case 910:
#line 2939 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeNode(PGAStar);
				;}
    break;

  case 911:
#line 2943 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = false;
					ai->lidx = NULL;
					ai->uidx = (yyvsp[(2) - (3)].node);
					(yyval.node) = (PGNode *) ai;
				;}
    break;

  case 912:
#line 2951 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = true;
					ai->lidx = (yyvsp[(2) - (5)].node);
					ai->uidx = (yyvsp[(4) - (5)].node);
					(yyval.node) = (PGNode *) ai;
				;}
    break;

  case 913:
#line 2961 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 914:
#line 2962 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 915:
#line 2966 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 916:
#line 2967 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 917:
#line 2971 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 918:
#line 2972 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 921:
#line 2986 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 922:
#line 2987 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 923:
#line 2991 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 924:
#line 2992 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
    break;

  case 925:
#line 2996 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(3) - (3)].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (3)].node);
					(yyval.target)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 926:
#line 3012 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(2) - (2)].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (2)].node);
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 927:
#line 3020 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (1)].node);
					(yyval.target)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 928:
#line 3028 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnRef *n = makeNode(PGColumnRef);
					n->fields = list_make1(makeNode(PGAStar));
					n->location = (yylsp[(1) - (1)]);

					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)n;
					(yyval.target)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 929:
#line 3049 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].range)); ;}
    break;

  case 930:
#line 3050 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].range)); ;}
    break;

  case 931:
#line 3062 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = makeRangeVar(NULL, (yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 932:
#line 3066 "third_party/libpg_query/grammar/statements/select.y"
    {
					check_qualified_name((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.range) = makeRangeVar(NULL, NULL, (yylsp[(1) - (2)]));
					switch (list_length((yyvsp[(2) - (2)].list)))
					{
						case 1:
							(yyval.range)->catalogname = NULL;
							(yyval.range)->schemaname = (yyvsp[(1) - (2)].str);
							(yyval.range)->relname = strVal(linitial((yyvsp[(2) - (2)].list)));
							break;
						case 2:
							(yyval.range)->catalogname = (yyvsp[(1) - (2)].str);
							(yyval.range)->schemaname = strVal(linitial((yyvsp[(2) - (2)].list)));
							(yyval.range)->relname = strVal(lsecond((yyvsp[(2) - (2)].list)));
							break;
						default:
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("improper qualified name (too many dotted names): %s",
											NameListToString(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)))),
									 parser_errposition((yylsp[(1) - (2)]))));
							break;
					}
				;}
    break;

  case 933:
#line 3093 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 934:
#line 3095 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 935:
#line 3099 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 936:
#line 3101 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 937:
#line 3112 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 938:
#line 3114 "third_party/libpg_query/grammar/statements/select.y"
    {
						(yyval.list) = check_func_name(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)),
											 yyscanner);
					;}
    break;

  case 939:
#line 3125 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival), (yylsp[(1) - (1)]));
				;}
    break;

  case 940:
#line 3129 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 941:
#line 3133 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 942:
#line 3137 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 943:
#line 3141 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* This is a bit constant per SQL99:
					 * Without Feature F511, "BIT data type",
					 * a <general literal> shall not be a
					 * <bit string literal> or a <hex string literal>.
					 */
					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 944:
#line 3150 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* generic type 'literal' syntax */
					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (2)].list));
					t->location = (yylsp[(1) - (2)]);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), t);
				;}
    break;

  case 945:
#line 3157 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* generic syntax with a type modifier */
					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (6)].list));
					PGListCell *lc;

					/*
					 * We must use func_arg_list and opt_sort_clause in the
					 * production to avoid reduce/reduce conflicts, but we
					 * don't actually wish to allow PGNamedArgExpr in this
					 * context, nor ORDER BY.
					 */
					foreach(lc, (yyvsp[(3) - (6)].list))
					{
						PGNamedArgExpr *arg = (PGNamedArgExpr *) lfirst(lc);

						if (IsA(arg, PGNamedArgExpr))
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have parameter name"),
									 parser_errposition(arg->location)));
					}
					if ((yyvsp[(4) - (6)].list) != NIL)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have ORDER BY"),
									 parser_errposition((yylsp[(4) - (6)]))));

					t->typmods = (yyvsp[(3) - (6)].list);
					t->location = (yylsp[(1) - (6)]);
					(yyval.node) = makeStringConstCast((yyvsp[(6) - (6)].str), (yylsp[(6) - (6)]), t);
				;}
    break;

  case 946:
#line 3189 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), (yyvsp[(1) - (2)].typnam));
				;}
    break;

  case 947:
#line 3193 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGTypeName *t = (yyvsp[(1) - (3)].typnam);
					t->typmods = (yyvsp[(3) - (3)].list);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), t);
				;}
    break;

  case 948:
#line 3199 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGTypeName *t = (yyvsp[(1) - (5)].typnam);
					t->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.node) = makeStringConstCast((yyvsp[(5) - (5)].str), (yylsp[(5) - (5)]), t);
				;}
    break;

  case 949:
#line 3207 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGTypeName *t = (yyvsp[(1) - (6)].typnam);
					if ((yyvsp[(6) - (6)].list) != NIL)
					{
						t->typmods = lappend((yyvsp[(6) - (6)].list), makeParamRef(0, (yylsp[(3) - (6)])));
					}
					else
						t->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
												makeParamRef(0, (yylsp[(3) - (6)])));
					(yyval.node) = makeParamRefCast(0, (yylsp[(5) - (6)]), t);
				;}
    break;

  case 950:
#line 3219 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBoolAConst(true, (yylsp[(1) - (1)]));
				;}
    break;

  case 951:
#line 3223 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBoolAConst(false, (yylsp[(1) - (1)]));
				;}
    break;

  case 952:
#line 3227 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
				;}
    break;

  case 953:
#line 3232 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 954:
#line 3233 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 955:
#line 3249 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 956:
#line 3250 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 957:
#line 3251 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 958:
#line 3254 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 959:
#line 3255 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 960:
#line 3260 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 961:
#line 3261 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 962:
#line 3262 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 963:
#line 3265 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 964:
#line 3266 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)); ;}
    break;

  case 965:
#line 3270 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(2) - (2)].str))); ;}
    break;

  case 966:
#line 3272 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 967:
#line 3276 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 968:
#line 3277 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 970:
#line 3288 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 971:
#line 3289 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 972:
#line 3290 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 973:
#line 3291 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 974:
#line 3292 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 975:
#line 3295 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 976:
#line 3296 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 977:
#line 8 "third_party/libpg_query/grammar/statements/prepare.y"
    {
					PGPrepareStmt *n = makeNode(PGPrepareStmt);
					n->name = (yyvsp[(2) - (5)].str);
					n->argtypes = (yyvsp[(3) - (5)].list);
					n->query = (yyvsp[(5) - (5)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 978:
#line 18 "third_party/libpg_query/grammar/statements/prepare.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 979:
#line 19 "third_party/libpg_query/grammar/statements/prepare.y"
    { (yyval.list) = NIL; ;}
    break;

  case 984:
#line 8 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					/* ...but not both */
					n->schemaname = (yyvsp[(3) - (4)].str);
					n->schemaElts = (yyvsp[(4) - (4)].list);
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 985:
#line 17 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					/* ...but not here */
					n->schemaname = (yyvsp[(6) - (7)].str);
					if ((yyvsp[(7) - (7)].list) != NIL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("CREATE SCHEMA IF NOT EXISTS cannot include schema elements"),
								 parser_errposition((yylsp[(7) - (7)]))));
					n->schemaElts = (yyvsp[(7) - (7)].list);
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 986:
#line 35 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					if ((yyloc) < 0)			/* see comments for YYLLOC_DEFAULT */
						(yyloc) = (yylsp[(2) - (2)]);
					(yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node));
				;}
    break;

  case 987:
#line 41 "third_party/libpg_query/grammar/statements/create_schema.y"
    { (yyval.list) = NIL; ;}
    break;

  case 992:
#line 11 "third_party/libpg_query/grammar/statements/index.y"
    {
					PGIndexStmt *n = makeNode(PGIndexStmt);
					n->unique = (yyvsp[(2) - (13)].boolean);
					n->concurrent = (yyvsp[(4) - (13)].boolean);
					n->idxname = (yyvsp[(5) - (13)].str);
					n->relation = (yyvsp[(7) - (13)].range);
					n->accessMethod = (yyvsp[(8) - (13)].str);
					n->indexParams = (yyvsp[(10) - (13)].list);
					n->options = (yyvsp[(12) - (13)].list);
					n->whereClause = (yyvsp[(13) - (13)].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;
					n->transformed = false;
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 993:
#line 36 "third_party/libpg_query/grammar/statements/index.y"
    {
					PGIndexStmt *n = makeNode(PGIndexStmt);
					n->unique = (yyvsp[(2) - (16)].boolean);
					n->concurrent = (yyvsp[(4) - (16)].boolean);
					n->idxname = (yyvsp[(8) - (16)].str);
					n->relation = (yyvsp[(10) - (16)].range);
					n->accessMethod = (yyvsp[(11) - (16)].str);
					n->indexParams = (yyvsp[(13) - (16)].list);
					n->options = (yyvsp[(15) - (16)].list);
					n->whereClause = (yyvsp[(16) - (16)].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;
					n->transformed = false;
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 994:
#line 62 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 995:
#line 66 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
    break;

  case 996:
#line 67 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (char*) DEFAULT_INDEX_TYPE; ;}
    break;

  case 997:
#line 72 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = true; ;}
    break;

  case 998:
#line 73 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = false; ;}
    break;

  case 999:
#line 78 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1000:
#line 79 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = NULL; ;}
    break;

  case 1001:
#line 83 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1002:
#line 84 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1003:
#line 89 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1004:
#line 90 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1005:
#line 8 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1006:
#line 17 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1007:
#line 26 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1008:
#line 35 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1009:
#line 44 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1010:
#line 53 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1011:
#line 6 "third_party/libpg_query/grammar/statements/checkpoint.y"
    {
					PGCheckPointStmt *n = makeNode(PGCheckPointStmt);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1012:
#line 10 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(2) - (2)].node);
					n->options = NIL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1013:
#line 17 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(4) - (4)].node);
					n->options = list_make1(makeDefElem("analyze", NULL, (yylsp[(2) - (4)])));
					if ((yyvsp[(3) - (4)].boolean))
						n->options = lappend(n->options,
											 makeDefElem("verbose", NULL, (yylsp[(3) - (4)])));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1014:
#line 27 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(3) - (3)].node);
					n->options = list_make1(makeDefElem("verbose", NULL, (yylsp[(2) - (3)])));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1015:
#line 34 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(5) - (5)].node);
					n->options = (yyvsp[(3) - (5)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1016:
#line 44 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1017:
#line 45 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1018:
#line 50 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 1019:
#line 51 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].value); ;}
    break;

  case 1020:
#line 52 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1026:
#line 65 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1027:
#line 66 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1028:
#line 67 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1029:
#line 68 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1030:
#line 73 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1031:
#line 74 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1032:
#line 80 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 1033:
#line 84 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 1034:
#line 91 "third_party/libpg_query/grammar/statements/explain.y"
    {;}
    break;

  case 1035:
#line 92 "third_party/libpg_query/grammar/statements/explain.y"
    {;}
    break;

  case 1036:
#line 97 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "true"; ;}
    break;

  case 1037:
#line 98 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "false"; ;}
    break;

  case 1038:
#line 99 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "on"; ;}
    break;

  case 1039:
#line 105 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1040:
#line 111 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 1041:
#line 118 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1042:
#line 119 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "analyze"; ;}
    break;

  case 1043:
#line 11 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(2) - (2)].vsetstmt);
					n->is_local = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1044:
#line 17 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->is_local = true;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1045:
#line 23 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->is_local = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1046:
#line 32 "third_party/libpg_query/grammar/statements/variable_set.y"
    {(yyval.vsetstmt) = (yyvsp[(1) - (1)].vsetstmt);;}
    break;

  case 1047:
#line 34 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_CURRENT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1048:
#line 42 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (char*) "timezone";
					if ((yyvsp[(3) - (3)].node) != NULL)
						n->args = list_make1((yyvsp[(3) - (3)].node));
					else
						n->kind = VAR_SET_DEFAULT;
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1049:
#line 53 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (char*) "search_path";
					n->args = list_make1(makeStringConst((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)])));
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1050:
#line 65 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[(1) - (3)].str);
					n->args = (yyvsp[(3) - (3)].list);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1051:
#line 73 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[(1) - (3)].str);
					n->args = (yyvsp[(3) - (3)].list);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1052:
#line 81 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1053:
#line 88 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1054:
#line 98 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)])); ;}
    break;

  case 1055:
#line 100 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
    break;

  case 1056:
#line 106 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1057:
#line 110 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1058:
#line 114 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGTypeName *t = (yyvsp[(1) - (3)].typnam);
					if ((yyvsp[(3) - (3)].list) != NIL)
					{
						PGAConst *n = (PGAConst *) linitial((yyvsp[(3) - (3)].list));
						if ((n->val.val.ival & ~(INTERVAL_MASK(HOUR) | INTERVAL_MASK(MINUTE))) != 0)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("time zone interval must be HOUR or HOUR TO MINUTE"),
									 parser_errposition((yylsp[(3) - (3)]))));
					}
					t->typmods = (yyvsp[(3) - (3)].list);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), t);
				;}
    break;

  case 1059:
#line 129 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGTypeName *t = (yyvsp[(1) - (5)].typnam);
					t->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.node) = makeStringConstCast((yyvsp[(5) - (5)].str), (yylsp[(5) - (5)]), t);
				;}
    break;

  case 1060:
#line 135 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
    break;

  case 1061:
#line 136 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1062:
#line 137 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1063:
#line 141 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 1064:
#line 142 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 1065:
#line 8 "third_party/libpg_query/grammar/statements/load.y"
    {
					PGLoadStmt *n = makeNode(PGLoadStmt);
					n->filename = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1066:
#line 16 "third_party/libpg_query/grammar/statements/load.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1067:
#line 9 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (4)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (4)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (4)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1068:
#line 23 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (5)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (5)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (5)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = (yyvsp[(5) - (5)].range);
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1069:
#line 37 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = (PGVacuumStmt *) (yyvsp[(5) - (5)].node);
					n->options |= PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (5)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (5)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (5)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1070:
#line 49 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM | (yyvsp[(3) - (4)].ival);
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1071:
#line 57 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM | (yyvsp[(3) - (6)].ival);
					n->relation = (yyvsp[(5) - (6)].range);
					n->va_cols = (yyvsp[(6) - (6)].list);
					if (n->va_cols != NIL)	/* implies analyze */
						n->options |= PG_VACOPT_ANALYZE;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1072:
#line 70 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_ANALYZE; ;}
    break;

  case 1073:
#line 71 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_VERBOSE; ;}
    break;

  case 1074:
#line 72 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_FREEZE; ;}
    break;

  case 1075:
#line 73 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_FULL; ;}
    break;

  case 1076:
#line 75 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					if (strcmp((yyvsp[(1) - (1)].str), "disable_page_skipping") == 0)
						(yyval.ival) = PG_VACOPT_DISABLE_PAGE_SKIPPING;
					else
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
							 errmsg("unrecognized VACUUM option \"%s\"", (yyvsp[(1) - (1)].str)),
									 parser_errposition((yylsp[(1) - (1)]))));
				;}
    break;

  case 1077:
#line 87 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1078:
#line 88 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1079:
#line 93 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 1080:
#line 94 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
    break;

  case 1081:
#line 98 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1082:
#line 99 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1083:
#line 9 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGDeleteStmt *n = makeNode(PGDeleteStmt);
					n->relation = (yyvsp[(4) - (7)].range);
					n->usingClause = (yyvsp[(5) - (7)].list);
					n->whereClause = (yyvsp[(6) - (7)].node);
					n->returningList = (yyvsp[(7) - (7)].list);
					n->withClause = (yyvsp[(1) - (7)].with);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1084:
#line 22 "third_party/libpg_query/grammar/statements/delete.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
				;}
    break;

  case 1085:
#line 26 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGAlias *alias = makeNode(PGAlias);
					alias->aliasname = (yyvsp[(2) - (2)].str);
					(yyvsp[(1) - (2)].range)->alias = alias;
					(yyval.range) = (yyvsp[(1) - (2)].range);
				;}
    break;

  case 1086:
#line 33 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGAlias *alias = makeNode(PGAlias);
					alias->aliasname = (yyvsp[(3) - (3)].str);
					(yyvsp[(1) - (3)].range)->alias = alias;
					(yyval.range) = (yyvsp[(1) - (3)].range);
				;}
    break;

  case 1087:
#line 43 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 1088:
#line 44 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1089:
#line 50 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1090:
#line 51 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1091:
#line 10 "third_party/libpg_query/grammar/statements/analyze.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_ANALYZE;
					if ((yyvsp[(2) - (2)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1092:
#line 20 "third_party/libpg_query/grammar/statements/analyze.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_ANALYZE;
					if ((yyvsp[(2) - (4)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = (yyvsp[(3) - (4)].range);
					n->va_cols = (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1093:
#line 2 "third_party/libpg_query/grammar/statements/variable_reset.y"
    { (yyval.node) = (PGNode *) (yyvsp[(2) - (2)].vsetstmt); ;}
    break;

  case 1094:
#line 8 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (yyvsp[(1) - (1)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1095:
#line 15 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET_ALL;
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1096:
#line 24 "third_party/libpg_query/grammar/statements/variable_reset.y"
    { (yyval.vsetstmt) = (yyvsp[(1) - (1)].vsetstmt); ;}
    break;

  case 1097:
#line 26 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (char*) "timezone";
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1098:
#line 33 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (char*) "transaction_isolation";
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1099:
#line 4 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1100:
#line 10 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (char*) "timezone";
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1101:
#line 16 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (char*) "transaction_isolation";
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1102:
#line 22 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (char*) "all";
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1105:
#line 31 "third_party/libpg_query/grammar/statements/variable_show.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1106:
#line 33 "third_party/libpg_query/grammar/statements/variable_show.y"
    { (yyval.str) = psprintf("%s.%s", (yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str)); ;}
    break;

  case 1107:
#line 7 "third_party/libpg_query/grammar/statements/call.y"
    {
					PGCallStmt *n = makeNode(PGCallStmt);
					n->func = (yyvsp[(2) - (2)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1108:
#line 10 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(4) - (9)].range);
					n->view->relpersistence = (yyvsp[(2) - (9)].ival);
					n->aliases = (yyvsp[(5) - (9)].list);
					n->query = (yyvsp[(8) - (9)].node);
					n->replace = false;
					n->options = (yyvsp[(6) - (9)].list);
					n->withCheckOption = (yyvsp[(9) - (9)].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1109:
#line 23 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(6) - (11)].range);
					n->view->relpersistence = (yyvsp[(4) - (11)].ival);
					n->aliases = (yyvsp[(7) - (11)].list);
					n->query = (yyvsp[(10) - (11)].node);
					n->replace = true;
					n->options = (yyvsp[(8) - (11)].list);
					n->withCheckOption = (yyvsp[(11) - (11)].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1110:
#line 36 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(5) - (12)].range);
					n->view->relpersistence = (yyvsp[(2) - (12)].ival);
					n->aliases = (yyvsp[(7) - (12)].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[(11) - (12)].node));
					n->replace = false;
					n->options = (yyvsp[(9) - (12)].list);
					n->withCheckOption = (yyvsp[(12) - (12)].viewcheckoption);
					if (n->withCheckOption != PG_NO_CHECK_OPTION)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[(12) - (12)]))));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1111:
#line 54 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(7) - (14)].range);
					n->view->relpersistence = (yyvsp[(4) - (14)].ival);
					n->aliases = (yyvsp[(9) - (14)].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[(13) - (14)].node));
					n->replace = true;
					n->options = (yyvsp[(11) - (14)].list);
					n->withCheckOption = (yyvsp[(14) - (14)].viewcheckoption);
					if (n->withCheckOption != PG_NO_CHECK_OPTION)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[(14) - (14)]))));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1112:
#line 74 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; ;}
    break;

  case 1113:
#line 75 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; ;}
    break;

  case 1114:
#line 76 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = PG_LOCAL_CHECK_OPTION; ;}
    break;

  case 1115:
#line 77 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = PG_NO_CHECK_OPTION; ;}
    break;

  case 1116:
#line 12 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(6) - (7)].node);
					ctas->into = (yyvsp[(4) - (7)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = false;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(4) - (7)].into)->rel->relpersistence = (yyvsp[(2) - (7)].ival);
					(yyvsp[(4) - (7)].into)->skipData = !((yyvsp[(7) - (7)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1117:
#line 25 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(9) - (10)].node);
					ctas->into = (yyvsp[(7) - (10)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = true;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(7) - (10)].into)->rel->relpersistence = (yyvsp[(2) - (10)].ival);
					(yyvsp[(7) - (10)].into)->skipData = !((yyvsp[(10) - (10)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1118:
#line 41 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1119:
#line 42 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1120:
#line 43 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1121:
#line 49 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					(yyval.into) = makeNode(PGIntoClause);
					(yyval.into)->rel = (yyvsp[(1) - (4)].range);
					(yyval.into)->colNames = (yyvsp[(2) - (4)].list);
					(yyval.into)->options = (yyvsp[(3) - (4)].list);
					(yyval.into)->onCommit = (yyvsp[(4) - (4)].oncommit);
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;		/* might get changed later */
				;}
    break;


/* Line 1267 of yacc.c.  */
#line 22020 "third_party/libpg_query/grammar/grammar_out.cpp"
      default: break;
    }
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;
  *++yylsp = yyloc;

  /* Now `shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*------------------------------------.
| yyerrlab -- here on detecting error |
`------------------------------------*/
yyerrlab:
  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (&yylloc, yyscanner, YY_("syntax error"));
#else
      {
	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
	  {
	    YYSIZE_T yyalloc = 2 * yysize;
	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
	    if (yymsg != yymsgbuf)
	      YYSTACK_FREE (yymsg);
	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
	    if (yymsg)
	      yymsg_alloc = yyalloc;
	    else
	      {
		yymsg = yymsgbuf;
		yymsg_alloc = sizeof yymsgbuf;
	      }
	  }

	if (0 < yysize && yysize <= yymsg_alloc)
	  {
	    (void) yysyntax_error (yymsg, yystate, yychar);
	    yyerror (&yylloc, yyscanner, yymsg);
	  }
	else
	  {
	    yyerror (&yylloc, yyscanner, YY_("syntax error"));
	    if (yysize != 0)
	      goto yyexhaustedlab;
	  }
      }
#endif
    }

  yyerror_range[0] = yylloc;

  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse look-ahead token after an
	 error, discard it.  */

      if (yychar <= YYEOF)
	{
	  /* Return failure if at end of input.  */
	  if (yychar == YYEOF)
	    YYABORT;
	}
      else
	{
	  yydestruct ("Error: discarding",
		      yytoken, &yylval, &yylloc, yyscanner);
	  yychar = YYEMPTY;
	}
    }

  /* Else will try to reuse look-ahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  yyerror_range[0] = yylsp[1-yylen];
  /* Do not reclaim the symbols of the rule which action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;	/* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (yyn != YYPACT_NINF)
	{
	  yyn += YYTERROR;
	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
	    {
	      yyn = yytable[yyn];
	      if (0 < yyn)
		break;
	    }
	}

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
	YYABORT;

      yyerror_range[0] = *yylsp;
      yydestruct ("Error: popping",
		  yystos[yystate], yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  *++yyvsp = yylval;

  yyerror_range[1] = yylloc;
  /* Using YYLLOC is tempting, but would change the location of
     the look-ahead.  YYLOC is available though.  */
  YYLLOC_DEFAULT (yyloc, (yyerror_range - 1), 2);
  *++yylsp = yyloc;

  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#ifndef yyoverflow
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (&yylloc, yyscanner, YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEOF && yychar != YYEMPTY)
     yydestruct ("Cleanup: discarding lookahead",
		 yytoken, &yylval, &yylloc, yyscanner);
  /* Do not reclaim the symbols of the rule which action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
		  yystos[*yyssp], yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  /* Make sure YYID is used.  */
  return YYID (yyresult);
}


#line 67 "third_party/libpg_query/grammar/statements/create_as.y"


#line 1 "third_party/libpg_query/grammar/grammar.cpp"
/*
 * The signature of this function is required by bison.  However, we
 * ignore the passed yylloc and instead use the last token position
 * available from the scanner.
 */
static void
base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner, const char *msg)
{
	parser_yyerror(msg);
}

static PGRawStmt *
makeRawStmt(PGNode *stmt, int stmt_location)
{
	PGRawStmt    *rs = makeNode(PGRawStmt);

	rs->stmt = stmt;
	rs->stmt_location = stmt_location;
	rs->stmt_len = 0;			/* might get changed later */
	return rs;
}

/* Adjust a PGRawStmt to reflect that it doesn't run to the end of the string */
static void
updateRawStmtEnd(PGRawStmt *rs, int end_location)
{
	/*
	 * If we already set the length, don't change it.  This is for situations
	 * like "select foo ;; select bar" where the same statement will be last
	 * in the string for more than one semicolon.
	 */
	if (rs->stmt_len > 0)
		return;

	/* OK, update length of PGRawStmt */
	rs->stmt_len = end_location - rs->stmt_location;
}

static PGNode *
makeColumnRef(char *colname, PGList *indirection,
			  int location, core_yyscan_t yyscanner)
{
	/*
	 * Generate a PGColumnRef node, with an PGAIndirection node added if there
	 * is any subscripting in the specified indirection list.  However,
	 * any field selection at the start of the indirection list must be
	 * transposed into the "fields" part of the PGColumnRef node.
	 */
	PGColumnRef  *c = makeNode(PGColumnRef);
	int		nfields = 0;
	PGListCell *l;

	c->location = location;
	foreach(l, indirection)
	{
		if (IsA(lfirst(l), PGAIndices))
		{
			PGAIndirection *i = makeNode(PGAIndirection);

			if (nfields == 0)
			{
				/* easy case - all indirection goes to PGAIndirection */
				c->fields = list_make1(makeString(colname));
				i->indirection = check_indirection(indirection, yyscanner);
			}
			else
			{
				/* got to split the list in two */
				i->indirection = check_indirection(list_copy_tail(indirection,
																  nfields),
												   yyscanner);
				indirection = list_truncate(indirection, nfields);
				c->fields = lcons(makeString(colname), indirection);
			}
			i->arg = (PGNode *) c;
			return (PGNode *) i;
		}
		else if (IsA(lfirst(l), PGAStar))
		{
			/* We only allow '*' at the end of a PGColumnRef */
			if (lnext(l) != NULL)
				parser_yyerror("improper use of \"*\"");
		}
		nfields++;
	}
	/* No subscripting, so all indirection gets added to field list */
	c->fields = lcons(makeString(colname), indirection);
	return (PGNode *) c;
}

static PGNode *
makeTypeCast(PGNode *arg, PGTypeName *tpname, int location)
{
	PGTypeCast *n = makeNode(PGTypeCast);
	n->arg = arg;
	n->typeName = tpname;
	n->location = location;
	return (PGNode *) n;
}

static PGNode *
makeStringConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGString;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeStringConstCast(char *str, int location, PGTypeName *tpname)
{
	PGNode *s = makeStringConst(str, location);

	return makeTypeCast(s, tpname, -1);
}

static PGNode *
makeIntConst(int val, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGInteger;
	n->val.val.ival = val;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeFloatConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGFloat;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeBitStringConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGBitString;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeNullAConst(int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGNull;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeAConst(PGValue *v, int location)
{
	PGNode *n;

	switch (v->type)
	{
		case T_PGFloat:
			n = makeFloatConst(v->val.str, location);
			break;

		case T_PGInteger:
			n = makeIntConst(v->val.ival, location);
			break;

		case T_PGString:
		default:
			n = makeStringConst(v->val.str, location);
			break;
	}

	return n;
}

/* makeBoolAConst()
 * Create an PGAConst string node and put it inside a boolean cast.
 */
static PGNode *
makeBoolAConst(bool state, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGString;
	n->val.val.str = (state ? (char*) "t" : (char*) "f");
	n->location = location;

	return makeTypeCast((PGNode *)n, SystemTypeName("bool"), -1);
}

/* check_qualified_name --- check the result of qualified_name production
 *
 * It's easiest to let the grammar production for qualified_name allow
 * subscripts and '*', which we then must reject here.
 */
static void
check_qualified_name(PGList *names, core_yyscan_t yyscanner)
{
	PGListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), PGString))
			parser_yyerror("syntax error");
	}
}

/* check_func_name --- check the result of func_name production
 *
 * It's easiest to let the grammar production for func_name allow subscripts
 * and '*', which we then must reject here.
 */
static PGList *
check_func_name(PGList *names, core_yyscan_t yyscanner)
{
	PGListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), PGString))
			parser_yyerror("syntax error");
	}
	return names;
}

/* check_indirection --- check the result of indirection production
 *
 * We only allow '*' at the end of the list, but it's hard to enforce that
 * in the grammar, so do it here.
 */
static PGList *
check_indirection(PGList *indirection, core_yyscan_t yyscanner)
{
	PGListCell *l;

	foreach(l, indirection)
	{
		if (IsA(lfirst(l), PGAStar))
		{
			if (lnext(l) != NULL)
				parser_yyerror("improper use of \"*\"");
		}
	}
	return indirection;
}

/* makeParamRef
 * Creates a new PGParamRef node
 */
static PGNode* makeParamRef(int number, int location)
{
	PGParamRef *p = makeNode(PGParamRef);
	p->number = number;
	p->location = location;
	return (PGNode *) p;
}

static PGNode *
makeParamRefCast(int number, int location, PGTypeName *tpname)
{
	PGNode *p = makeParamRef(number, location);
	return makeTypeCast(p, tpname, -1);
}

/* insertSelectOptions()
 * Insert ORDER BY, etc into an already-constructed SelectStmt.
 *
 * This routine is just to avoid duplicating code in PGSelectStmt productions.
 */
static void
insertSelectOptions(PGSelectStmt *stmt,
					PGList *sortClause, PGList *lockingClause,
					PGNode *limitOffset, PGNode *limitCount,
					PGWithClause *withClause,
					core_yyscan_t yyscanner)
{
	Assert(IsA(stmt, PGSelectStmt));

	/*
	 * Tests here are to reject constructs like
	 *	(SELECT foo ORDER BY bar) ORDER BY baz
	 */
	if (sortClause)
	{
		if (stmt->sortClause)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple ORDER BY clauses not allowed"),
					 parser_errposition(exprLocation((PGNode *) sortClause))));
		stmt->sortClause = sortClause;
	}
	/* We can handle multiple locking clauses, though */
	stmt->lockingClause = list_concat(stmt->lockingClause, lockingClause);
	if (limitOffset)
	{
		if (stmt->limitOffset)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple OFFSET clauses not allowed"),
					 parser_errposition(exprLocation(limitOffset))));
		stmt->limitOffset = limitOffset;
	}
	if (limitCount)
	{
		if (stmt->limitCount)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple LIMIT clauses not allowed"),
					 parser_errposition(exprLocation(limitCount))));
		stmt->limitCount = limitCount;
	}
	if (withClause)
	{
		if (stmt->withClause)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple WITH clauses not allowed"),
					 parser_errposition(exprLocation((PGNode *) withClause))));
		stmt->withClause = withClause;
	}
}

static PGNode *
makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg)
{
	PGSelectStmt *n = makeNode(PGSelectStmt);

	n->op = op;
	n->all = all;
	n->larg = (PGSelectStmt *) larg;
	n->rarg = (PGSelectStmt *) rarg;
	return (PGNode *) n;
}

/* SystemFuncName()
 * Build a properly-qualified reference to a built-in function.
 */
PGList *
SystemFuncName(const char *name)
{
	return list_make2(makeString(DEFAULT_SCHEMA), makeString(name));
}

/* SystemTypeName()
 * Build a properly-qualified reference to a built-in type.
 *
 * typmod is defaulted, but may be changed afterwards by caller.
 * Likewise for the location.
 */
PGTypeName *
SystemTypeName(const char *name)
{
	return makeTypeNameFromNameList(list_make2(makeString(DEFAULT_SCHEMA),
											   makeString(name)));
}

/* doNegate()
 * Handle negation of a numeric constant.
 *
 * Formerly, we did this here because the optimizer couldn't cope with
 * indexquals that looked like "var = -4" --- it wants "var = const"
 * and a unary minus operator applied to a constant didn't qualify.
 * As of Postgres 7.0, that problem doesn't exist anymore because there
 * is a constant-subexpression simplifier in the optimizer.  However,
 * there's still a good reason for doing this here, which is that we can
 * postpone committing to a particular internal representation for simple
 * negative constants.	It's better to leave "-123.456" in string form
 * until we know what the desired type is.
 */
static PGNode *
doNegate(PGNode *n, int location)
{
	if (IsA(n, PGAConst))
	{
		PGAConst *con = (PGAConst *)n;

		/* report the constant's location as that of the '-' sign */
		con->location = location;

		if (con->val.type == T_PGInteger)
		{
			con->val.val.ival = -con->val.val.ival;
			return n;
		}
		if (con->val.type == T_PGFloat)
		{
			doNegateFloat(&con->val);
			return n;
		}
	}

	return (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", NULL, n, location);
}

static void
doNegateFloat(PGValue *v)
{
	char   *oldval = v->val.str;

	Assert(IsA(v, PGFloat));
	if (*oldval == '+')
		oldval++;
	if (*oldval == '-')
		v->val.str = oldval+1;	/* just strip the '-' */
	else
		v->val.str = psprintf("-%s", oldval);
}

static PGNode *
makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location)
{
	PGNode	   *lexp = lexpr;

	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
	while (IsA(lexp, PGAExpr) &&
		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
		lexp = ((PGAExpr *) lexp)->lexpr;
	/* Flatten "a AND b AND c ..." to a single PGBoolExpr on sight */
	if (IsA(lexp, PGBoolExpr))
	{
		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;

		if (blexpr->boolop == PG_AND_EXPR)
		{
			blexpr->args = lappend(blexpr->args, rexpr);
			return (PGNode *) blexpr;
		}
	}
	return (PGNode *) makeBoolExpr(PG_AND_EXPR, list_make2(lexpr, rexpr), location);
}

static PGNode *
makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location)
{
	PGNode	   *lexp = lexpr;

	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
	while (IsA(lexp, PGAExpr) &&
		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
		lexp = ((PGAExpr *) lexp)->lexpr;
	/* Flatten "a OR b OR c ..." to a single PGBoolExpr on sight */
	if (IsA(lexp, PGBoolExpr))
	{
		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;

		if (blexpr->boolop == PG_OR_EXPR)
		{
			blexpr->args = lappend(blexpr->args, rexpr);
			return (PGNode *) blexpr;
		}
	}
	return (PGNode *) makeBoolExpr(PG_OR_EXPR, list_make2(lexpr, rexpr), location);
}

static PGNode *
makeNotExpr(PGNode *expr, int location)
{
	return (PGNode *) makeBoolExpr(PG_NOT_EXPR, list_make1(expr), location);
}

static PGNode *
makeSQLValueFunction(PGSQLValueFunctionOp op, int32_t typmod, int location)
{
	PGSQLValueFunction *svf = makeNode(PGSQLValueFunction);

	svf->op = op;
	/* svf->type will be filled during parse analysis */
	svf->typmod = typmod;
	svf->location = location;
	return (PGNode *) svf;
}

/* Separate PGConstraint nodes from COLLATE clauses in a */
static void
SplitColQualList(PGList *qualList,
				 PGList **constraintList, PGCollateClause **collClause,
				 core_yyscan_t yyscanner)
{
	PGListCell   *cell;
	PGListCell   *prev;
	PGListCell   *next;

	*collClause = NULL;
	prev = NULL;
	for (cell = list_head(qualList); cell; cell = next)
	{
		PGNode   *n = (PGNode *) lfirst(cell);

		next = lnext(cell);
		if (IsA(n, PGConstraint))
		{
			/* keep it in list */
			prev = cell;
			continue;
		}
		if (IsA(n, PGCollateClause))
		{
			PGCollateClause *c = (PGCollateClause *) n;

			if (*collClause)
				ereport(ERROR,
						(errcode(PG_ERRCODE_SYNTAX_ERROR),
						 errmsg("multiple COLLATE clauses not allowed"),
						 parser_errposition(c->location)));
			*collClause = c;
		}
		else
			elog(ERROR, "unexpected node type %d", (int) n->type);
		/* remove non-Constraint nodes from qualList */
		qualList = list_delete_cell(qualList, cell, prev);
	}
	*constraintList = qualList;
}

/*
 * Process result of ConstraintAttributeSpec, and set appropriate bool flags
 * in the output command node.  Pass NULL for any flags the particular
 * command doesn't support.
 */
static void
processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner)
{
	/* defaults */
	if (deferrable)
		*deferrable = false;
	if (initdeferred)
		*initdeferred = false;
	if (not_valid)
		*not_valid = false;

	if (cas_bits & (CAS_DEFERRABLE | CAS_INITIALLY_DEFERRED))
	{
		if (deferrable)
			*deferrable = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_INITIALLY_DEFERRED)
	{
		if (initdeferred)
			*initdeferred = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_NOT_VALID)
	{
		if (not_valid)
			*not_valid = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NOT VALID",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_NO_INHERIT)
	{
		if (no_inherit)
			*no_inherit = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NO INHERIT",
							constrType),
					 parser_errposition(location)));
	}
}

/*----------
 * Recursive view transformation
 *
 * Convert
 *
 *     CREATE RECURSIVE VIEW relname (aliases) AS query
 *
 * to
 *
 *     CREATE VIEW relname (aliases) AS
 *         WITH RECURSIVE relname (aliases) AS (query)
 *         SELECT aliases FROM relname
 *
 * Actually, just the WITH ... part, which is then inserted into the original
 * view as the query.
 * ----------
 */
static PGNode *
makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query)
{
	PGSelectStmt *s = makeNode(PGSelectStmt);
	PGWithClause *w = makeNode(PGWithClause);
	PGCommonTableExpr *cte = makeNode(PGCommonTableExpr);
	PGList	   *tl = NIL;
	PGListCell   *lc;

	/* create common table expression */
	cte->ctename = relname;
	cte->aliascolnames = aliases;
	cte->ctequery = query;
	cte->location = -1;

	/* create WITH clause and attach CTE */
	w->recursive = true;
	w->ctes = list_make1(cte);
	w->location = -1;

	/* create target list for the new SELECT from the alias list of the
	 * recursive view specification */
	foreach (lc, aliases)
	{
		PGResTarget *rt = makeNode(PGResTarget);

		rt->name = NULL;
		rt->indirection = NIL;
		rt->val = makeColumnRef(strVal(lfirst(lc)), NIL, -1, 0);
		rt->location = -1;

		tl = lappend(tl, rt);
	}

	/* create new SELECT combining WITH clause, target list, and fake FROM
	 * clause */
	s->withClause = w;
	s->targetList = tl;
	s->fromClause = list_make1(makeRangeVar(NULL, relname, -1));

	return (PGNode *) s;
}

/* parser_init()
 * Initialize to parse one query string
 */
void
parser_init(base_yy_extra_type *yyext)
{
	yyext->parsetree = NIL;		/* in case grammar forgets to set it */
}
} // namespace duckdb_libpgquery
