/* A Bison parser, made by GNU Bison 2.3.  */

/* Skeleton implementation for Bison's Yacc-like parsers in C

   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
   Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street, Fifth Floor,
   Boston, MA 02110-1301, USA.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "2.3"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Using locations.  */
#define YYLSP_NEEDED 1

/* Substitute the variable and function names.  */
#define yyparse base_yyparse
#define yylex   base_yylex
#define yyerror base_yyerror
#define yylval  base_yylval
#define yychar  base_yychar
#define yydebug base_yydebug
#define yynerrs base_yynerrs
#define yylloc base_yylloc

/* Tokens.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
   /* Put the tokens into the symbol table, so that GDB and other debuggers
      know about them.  */
   enum yytokentype {
     IDENT = 258,
     FCONST = 259,
     SCONST = 260,
     BCONST = 261,
     XCONST = 262,
     Op = 263,
     ICONST = 264,
     PARAM = 265,
     TYPECAST = 266,
     DOT_DOT = 267,
     COLON_EQUALS = 268,
     EQUALS_GREATER = 269,
     LAMBDA_ARROW = 270,
     LESS_EQUALS = 271,
     GREATER_EQUALS = 272,
     NOT_EQUALS = 273,
     ABORT_P = 274,
     ABSOLUTE_P = 275,
     ACCESS = 276,
     ACTION = 277,
     ADD_P = 278,
     ADMIN = 279,
     AFTER = 280,
     AGGREGATE = 281,
     ALL = 282,
     ALSO = 283,
     ALTER = 284,
     ALWAYS = 285,
     ANALYSE = 286,
     ANALYZE = 287,
     AND = 288,
     ANY = 289,
     ARRAY = 290,
     AS = 291,
     ASC_P = 292,
     ASSERTION = 293,
     ASSIGNMENT = 294,
     ASYMMETRIC = 295,
     AT = 296,
     ATTACH = 297,
     ATTRIBUTE = 298,
     AUTHORIZATION = 299,
     BACKWARD = 300,
     BEFORE = 301,
     BEGIN_P = 302,
     BETWEEN = 303,
     BIGINT = 304,
     BINARY = 305,
     BIT = 306,
     BOOLEAN_P = 307,
     BOTH = 308,
     BY = 309,
     CACHE = 310,
     CALL_P = 311,
     CALLED = 312,
     CASCADE = 313,
     CASCADED = 314,
     CASE = 315,
     CAST = 316,
     CATALOG_P = 317,
     CHAIN = 318,
     CHAR_P = 319,
     CHARACTER = 320,
     CHARACTERISTICS = 321,
     CHECK_P = 322,
     CHECKPOINT = 323,
     CLASS = 324,
     CLOSE = 325,
     CLUSTER = 326,
     COALESCE = 327,
     COLLATE = 328,
     COLLATION = 329,
     COLUMN = 330,
     COLUMNS = 331,
     COMMENT = 332,
     COMMENTS = 333,
     COMMIT = 334,
     COMMITTED = 335,
     COMPRESSION = 336,
     CONCURRENTLY = 337,
     CONFIGURATION = 338,
     CONFLICT = 339,
     CONNECTION = 340,
     CONSTRAINT = 341,
     CONSTRAINTS = 342,
     CONTENT_P = 343,
     CONTINUE_P = 344,
     CONVERSION_P = 345,
     COPY = 346,
     COST = 347,
     CREATE_P = 348,
     CROSS = 349,
     CSV = 350,
     CUBE = 351,
     CURRENT_P = 352,
     CURRENT_CATALOG = 353,
     CURRENT_DATE = 354,
     CURRENT_ROLE = 355,
     CURRENT_SCHEMA = 356,
     CURRENT_TIME = 357,
     CURRENT_TIMESTAMP = 358,
     CURRENT_USER = 359,
     CURSOR = 360,
     CYCLE = 361,
     DATA_P = 362,
     DATABASE = 363,
     DAY_P = 364,
     DAYS_P = 365,
     DEALLOCATE = 366,
     DEC = 367,
     DECIMAL_P = 368,
     DECLARE = 369,
     DEFAULT = 370,
     DEFAULTS = 371,
     DEFERRABLE = 372,
     DEFERRED = 373,
     DEFINER = 374,
     DELETE_P = 375,
     DELIMITER = 376,
     DELIMITERS = 377,
     DEPENDS = 378,
     DESC_P = 379,
     DESCRIBE = 380,
     DETACH = 381,
     DICTIONARY = 382,
     DISABLE_P = 383,
     DISCARD = 384,
     DISTINCT = 385,
     DO = 386,
     DOCUMENT_P = 387,
     DOMAIN_P = 388,
     DOUBLE_P = 389,
     DROP = 390,
     EACH = 391,
     ELSE = 392,
     ENABLE_P = 393,
     ENCODING = 394,
     ENCRYPTED = 395,
     END_P = 396,
     ENUM_P = 397,
     ESCAPE = 398,
     EVENT = 399,
     EXCEPT = 400,
     EXCLUDE = 401,
     EXCLUDING = 402,
     EXCLUSIVE = 403,
     EXECUTE = 404,
     EXISTS = 405,
     EXPLAIN = 406,
     EXPORT_P = 407,
     EXPORT_STATE = 408,
     EXTENSION = 409,
     EXTERNAL = 410,
     EXTRACT = 411,
     FALSE_P = 412,
     FAMILY = 413,
     FETCH = 414,
     FILTER = 415,
     FIRST_P = 416,
     FLOAT_P = 417,
     FOLLOWING = 418,
     FOR = 419,
     FORCE = 420,
     FOREIGN = 421,
     FORWARD = 422,
     FREEZE = 423,
     FROM = 424,
     FULL = 425,
     FUNCTION = 426,
     FUNCTIONS = 427,
     GENERATED = 428,
     GLOB = 429,
     GLOBAL = 430,
     GRANT = 431,
     GRANTED = 432,
     GROUP_P = 433,
     GROUPING = 434,
     GROUPING_ID = 435,
     HANDLER = 436,
     HAVING = 437,
     HEADER_P = 438,
     HOLD = 439,
     HOUR_P = 440,
     HOURS_P = 441,
     IDENTITY_P = 442,
     IF_P = 443,
     IGNORE_P = 444,
     ILIKE = 445,
     IMMEDIATE = 446,
     IMMUTABLE = 447,
     IMPLICIT_P = 448,
     IMPORT_P = 449,
     IN_P = 450,
     INCLUDING = 451,
     INCREMENT = 452,
     INDEX = 453,
     INDEXES = 454,
     INHERIT = 455,
     INHERITS = 456,
     INITIALLY = 457,
     INLINE_P = 458,
     INNER_P = 459,
     INOUT = 460,
     INPUT_P = 461,
     INSENSITIVE = 462,
     INSERT = 463,
     INSTALL = 464,
     INSTEAD = 465,
     INT_P = 466,
     INTEGER = 467,
     INTERSECT = 468,
     INTERVAL = 469,
     INTO = 470,
     INVOKER = 471,
     IS = 472,
     ISNULL = 473,
     ISOLATION = 474,
     JOIN = 475,
     JSON = 476,
     KEY = 477,
     LABEL = 478,
     LANGUAGE = 479,
     LARGE_P = 480,
     LAST_P = 481,
     LATERAL_P = 482,
     LEADING = 483,
     LEAKPROOF = 484,
     LEFT = 485,
     LEVEL = 486,
     LIKE = 487,
     LIMIT = 488,
     LISTEN = 489,
     LOAD = 490,
     LOCAL = 491,
     LOCALTIME = 492,
     LOCALTIMESTAMP = 493,
     LOCATION = 494,
     LOCK_P = 495,
     LOCKED = 496,
     LOGGED = 497,
     MACRO = 498,
     MAP = 499,
     MAPPING = 500,
     MATCH = 501,
     MATERIALIZED = 502,
     MAXVALUE = 503,
     METHOD = 504,
     MICROSECOND_P = 505,
     MICROSECONDS_P = 506,
     MILLISECOND_P = 507,
     MILLISECONDS_P = 508,
     MINUTE_P = 509,
     MINUTES_P = 510,
     MINVALUE = 511,
     MODE = 512,
     MONTH_P = 513,
     MONTHS_P = 514,
     MOVE = 515,
     NAME_P = 516,
     NAMES = 517,
     NATIONAL = 518,
     NATURAL = 519,
     NCHAR = 520,
     NEW = 521,
     NEXT = 522,
     NO = 523,
     NONE = 524,
     NOT = 525,
     NOTHING = 526,
     NOTIFY = 527,
     NOTNULL = 528,
     NOWAIT = 529,
     NULL_P = 530,
     NULLIF = 531,
     NULLS_P = 532,
     NUMERIC = 533,
     OBJECT_P = 534,
     OF = 535,
     OFF = 536,
     OFFSET = 537,
     OIDS = 538,
     OLD = 539,
     ON = 540,
     ONLY = 541,
     OPERATOR = 542,
     OPTION = 543,
     OPTIONS = 544,
     OR = 545,
     ORDER = 546,
     ORDINALITY = 547,
     OUT_P = 548,
     OUTER_P = 549,
     OVER = 550,
     OVERLAPS = 551,
     OVERLAY = 552,
     OVERRIDING = 553,
     OWNED = 554,
     OWNER = 555,
     PARALLEL = 556,
     PARSER = 557,
     PARTIAL = 558,
     PARTITION = 559,
     PASSING = 560,
     PASSWORD = 561,
     PERCENT = 562,
     PLACING = 563,
     PLANS = 564,
     POLICY = 565,
     POSITION = 566,
     PRAGMA_P = 567,
     PRECEDING = 568,
     PRECISION = 569,
     PREPARE = 570,
     PREPARED = 571,
     PRESERVE = 572,
     PRIMARY = 573,
     PRIOR = 574,
     PRIVILEGES = 575,
     PROCEDURAL = 576,
     PROCEDURE = 577,
     PROGRAM = 578,
     PUBLICATION = 579,
     QUALIFY = 580,
     QUOTE = 581,
     RANGE = 582,
     READ_P = 583,
     REAL = 584,
     REASSIGN = 585,
     RECHECK = 586,
     RECURSIVE = 587,
     REF = 588,
     REFERENCES = 589,
     REFERENCING = 590,
     REFRESH = 591,
     REINDEX = 592,
     RELATIVE_P = 593,
     RELEASE = 594,
     RENAME = 595,
     REPEATABLE = 596,
     REPLACE = 597,
     REPLICA = 598,
     RESET = 599,
     RESPECT_P = 600,
     RESTART = 601,
     RESTRICT = 602,
     RETURNING = 603,
     RETURNS = 604,
     REVOKE = 605,
     RIGHT = 606,
     ROLE = 607,
     ROLLBACK = 608,
     ROLLUP = 609,
     ROW = 610,
     ROWS = 611,
     RULE = 612,
     SAMPLE = 613,
     SAVEPOINT = 614,
     SCHEMA = 615,
     SCHEMAS = 616,
     SCROLL = 617,
     SEARCH = 618,
     SECOND_P = 619,
     SECONDS_P = 620,
     SECURITY = 621,
     SELECT = 622,
     SEQUENCE = 623,
     SEQUENCES = 624,
     SERIALIZABLE = 625,
     SERVER = 626,
     SESSION = 627,
     SESSION_USER = 628,
     SET = 629,
     SETOF = 630,
     SETS = 631,
     SHARE = 632,
     SHOW = 633,
     SIMILAR = 634,
     SIMPLE = 635,
     SKIP = 636,
     SMALLINT = 637,
     SNAPSHOT = 638,
     SOME = 639,
     SQL_P = 640,
     STABLE = 641,
     STANDALONE_P = 642,
     START = 643,
     STATEMENT = 644,
     STATISTICS = 645,
     STDIN = 646,
     STDOUT = 647,
     STORAGE = 648,
     STORED = 649,
     STRICT_P = 650,
     STRIP_P = 651,
     STRUCT = 652,
     SUBSCRIPTION = 653,
     SUBSTRING = 654,
     SUMMARIZE = 655,
     SYMMETRIC = 656,
     SYSID = 657,
     SYSTEM_P = 658,
     TABLE = 659,
     TABLES = 660,
     TABLESAMPLE = 661,
     TABLESPACE = 662,
     TEMP = 663,
     TEMPLATE = 664,
     TEMPORARY = 665,
     TEXT_P = 666,
     THEN = 667,
     TIME = 668,
     TIMESTAMP = 669,
     TO = 670,
     TRAILING = 671,
     TRANSACTION = 672,
     TRANSFORM = 673,
     TREAT = 674,
     TRIGGER = 675,
     TRIM = 676,
     TRUE_P = 677,
     TRUNCATE = 678,
     TRUSTED = 679,
     TRY_CAST = 680,
     TYPE_P = 681,
     TYPES_P = 682,
     UNBOUNDED = 683,
     UNCOMMITTED = 684,
     UNENCRYPTED = 685,
     UNION = 686,
     UNIQUE = 687,
     UNKNOWN = 688,
     UNLISTEN = 689,
     UNLOGGED = 690,
     UNTIL = 691,
     UPDATE = 692,
     USER = 693,
     USING = 694,
     VACUUM = 695,
     VALID = 696,
     VALIDATE = 697,
     VALIDATOR = 698,
     VALUE_P = 699,
     VALUES = 700,
     VARCHAR = 701,
     VARIADIC = 702,
     VARYING = 703,
     VERBOSE = 704,
     VERSION_P = 705,
     VIEW = 706,
     VIEWS = 707,
     VIRTUAL = 708,
     VOLATILE = 709,
     WHEN = 710,
     WHERE = 711,
     WHITESPACE_P = 712,
     WINDOW = 713,
     WITH = 714,
     WITHIN = 715,
     WITHOUT = 716,
     WORK = 717,
     WRAPPER = 718,
     WRITE_P = 719,
     XML_P = 720,
     XMLATTRIBUTES = 721,
     XMLCONCAT = 722,
     XMLELEMENT = 723,
     XMLEXISTS = 724,
     XMLFOREST = 725,
     XMLNAMESPACES = 726,
     XMLPARSE = 727,
     XMLPI = 728,
     XMLROOT = 729,
     XMLSERIALIZE = 730,
     XMLTABLE = 731,
     YEAR_P = 732,
     YEARS_P = 733,
     YES_P = 734,
     ZONE = 735,
     NOT_LA = 736,
     NULLS_LA = 737,
     WITH_LA = 738,
     POSTFIXOP = 739,
     UMINUS = 740
   };
#endif
/* Tokens.  */
#define IDENT 258
#define FCONST 259
#define SCONST 260
#define BCONST 261
#define XCONST 262
#define Op 263
#define ICONST 264
#define PARAM 265
#define TYPECAST 266
#define DOT_DOT 267
#define COLON_EQUALS 268
#define EQUALS_GREATER 269
#define LAMBDA_ARROW 270
#define LESS_EQUALS 271
#define GREATER_EQUALS 272
#define NOT_EQUALS 273
#define ABORT_P 274
#define ABSOLUTE_P 275
#define ACCESS 276
#define ACTION 277
#define ADD_P 278
#define ADMIN 279
#define AFTER 280
#define AGGREGATE 281
#define ALL 282
#define ALSO 283
#define ALTER 284
#define ALWAYS 285
#define ANALYSE 286
#define ANALYZE 287
#define AND 288
#define ANY 289
#define ARRAY 290
#define AS 291
#define ASC_P 292
#define ASSERTION 293
#define ASSIGNMENT 294
#define ASYMMETRIC 295
#define AT 296
#define ATTACH 297
#define ATTRIBUTE 298
#define AUTHORIZATION 299
#define BACKWARD 300
#define BEFORE 301
#define BEGIN_P 302
#define BETWEEN 303
#define BIGINT 304
#define BINARY 305
#define BIT 306
#define BOOLEAN_P 307
#define BOTH 308
#define BY 309
#define CACHE 310
#define CALL_P 311
#define CALLED 312
#define CASCADE 313
#define CASCADED 314
#define CASE 315
#define CAST 316
#define CATALOG_P 317
#define CHAIN 318
#define CHAR_P 319
#define CHARACTER 320
#define CHARACTERISTICS 321
#define CHECK_P 322
#define CHECKPOINT 323
#define CLASS 324
#define CLOSE 325
#define CLUSTER 326
#define COALESCE 327
#define COLLATE 328
#define COLLATION 329
#define COLUMN 330
#define COLUMNS 331
#define COMMENT 332
#define COMMENTS 333
#define COMMIT 334
#define COMMITTED 335
#define COMPRESSION 336
#define CONCURRENTLY 337
#define CONFIGURATION 338
#define CONFLICT 339
#define CONNECTION 340
#define CONSTRAINT 341
#define CONSTRAINTS 342
#define CONTENT_P 343
#define CONTINUE_P 344
#define CONVERSION_P 345
#define COPY 346
#define COST 347
#define CREATE_P 348
#define CROSS 349
#define CSV 350
#define CUBE 351
#define CURRENT_P 352
#define CURRENT_CATALOG 353
#define CURRENT_DATE 354
#define CURRENT_ROLE 355
#define CURRENT_SCHEMA 356
#define CURRENT_TIME 357
#define CURRENT_TIMESTAMP 358
#define CURRENT_USER 359
#define CURSOR 360
#define CYCLE 361
#define DATA_P 362
#define DATABASE 363
#define DAY_P 364
#define DAYS_P 365
#define DEALLOCATE 366
#define DEC 367
#define DECIMAL_P 368
#define DECLARE 369
#define DEFAULT 370
#define DEFAULTS 371
#define DEFERRABLE 372
#define DEFERRED 373
#define DEFINER 374
#define DELETE_P 375
#define DELIMITER 376
#define DELIMITERS 377
#define DEPENDS 378
#define DESC_P 379
#define DESCRIBE 380
#define DETACH 381
#define DICTIONARY 382
#define DISABLE_P 383
#define DISCARD 384
#define DISTINCT 385
#define DO 386
#define DOCUMENT_P 387
#define DOMAIN_P 388
#define DOUBLE_P 389
#define DROP 390
#define EACH 391
#define ELSE 392
#define ENABLE_P 393
#define ENCODING 394
#define ENCRYPTED 395
#define END_P 396
#define ENUM_P 397
#define ESCAPE 398
#define EVENT 399
#define EXCEPT 400
#define EXCLUDE 401
#define EXCLUDING 402
#define EXCLUSIVE 403
#define EXECUTE 404
#define EXISTS 405
#define EXPLAIN 406
#define EXPORT_P 407
#define EXPORT_STATE 408
#define EXTENSION 409
#define EXTERNAL 410
#define EXTRACT 411
#define FALSE_P 412
#define FAMILY 413
#define FETCH 414
#define FILTER 415
#define FIRST_P 416
#define FLOAT_P 417
#define FOLLOWING 418
#define FOR 419
#define FORCE 420
#define FOREIGN 421
#define FORWARD 422
#define FREEZE 423
#define FROM 424
#define FULL 425
#define FUNCTION 426
#define FUNCTIONS 427
#define GENERATED 428
#define GLOB 429
#define GLOBAL 430
#define GRANT 431
#define GRANTED 432
#define GROUP_P 433
#define GROUPING 434
#define GROUPING_ID 435
#define HANDLER 436
#define HAVING 437
#define HEADER_P 438
#define HOLD 439
#define HOUR_P 440
#define HOURS_P 441
#define IDENTITY_P 442
#define IF_P 443
#define IGNORE_P 444
#define ILIKE 445
#define IMMEDIATE 446
#define IMMUTABLE 447
#define IMPLICIT_P 448
#define IMPORT_P 449
#define IN_P 450
#define INCLUDING 451
#define INCREMENT 452
#define INDEX 453
#define INDEXES 454
#define INHERIT 455
#define INHERITS 456
#define INITIALLY 457
#define INLINE_P 458
#define INNER_P 459
#define INOUT 460
#define INPUT_P 461
#define INSENSITIVE 462
#define INSERT 463
#define INSTALL 464
#define INSTEAD 465
#define INT_P 466
#define INTEGER 467
#define INTERSECT 468
#define INTERVAL 469
#define INTO 470
#define INVOKER 471
#define IS 472
#define ISNULL 473
#define ISOLATION 474
#define JOIN 475
#define JSON 476
#define KEY 477
#define LABEL 478
#define LANGUAGE 479
#define LARGE_P 480
#define LAST_P 481
#define LATERAL_P 482
#define LEADING 483
#define LEAKPROOF 484
#define LEFT 485
#define LEVEL 486
#define LIKE 487
#define LIMIT 488
#define LISTEN 489
#define LOAD 490
#define LOCAL 491
#define LOCALTIME 492
#define LOCALTIMESTAMP 493
#define LOCATION 494
#define LOCK_P 495
#define LOCKED 496
#define LOGGED 497
#define MACRO 498
#define MAP 499
#define MAPPING 500
#define MATCH 501
#define MATERIALIZED 502
#define MAXVALUE 503
#define METHOD 504
#define MICROSECOND_P 505
#define MICROSECONDS_P 506
#define MILLISECOND_P 507
#define MILLISECONDS_P 508
#define MINUTE_P 509
#define MINUTES_P 510
#define MINVALUE 511
#define MODE 512
#define MONTH_P 513
#define MONTHS_P 514
#define MOVE 515
#define NAME_P 516
#define NAMES 517
#define NATIONAL 518
#define NATURAL 519
#define NCHAR 520
#define NEW 521
#define NEXT 522
#define NO 523
#define NONE 524
#define NOT 525
#define NOTHING 526
#define NOTIFY 527
#define NOTNULL 528
#define NOWAIT 529
#define NULL_P 530
#define NULLIF 531
#define NULLS_P 532
#define NUMERIC 533
#define OBJECT_P 534
#define OF 535
#define OFF 536
#define OFFSET 537
#define OIDS 538
#define OLD 539
#define ON 540
#define ONLY 541
#define OPERATOR 542
#define OPTION 543
#define OPTIONS 544
#define OR 545
#define ORDER 546
#define ORDINALITY 547
#define OUT_P 548
#define OUTER_P 549
#define OVER 550
#define OVERLAPS 551
#define OVERLAY 552
#define OVERRIDING 553
#define OWNED 554
#define OWNER 555
#define PARALLEL 556
#define PARSER 557
#define PARTIAL 558
#define PARTITION 559
#define PASSING 560
#define PASSWORD 561
#define PERCENT 562
#define PLACING 563
#define PLANS 564
#define POLICY 565
#define POSITION 566
#define PRAGMA_P 567
#define PRECEDING 568
#define PRECISION 569
#define PREPARE 570
#define PREPARED 571
#define PRESERVE 572
#define PRIMARY 573
#define PRIOR 574
#define PRIVILEGES 575
#define PROCEDURAL 576
#define PROCEDURE 577
#define PROGRAM 578
#define PUBLICATION 579
#define QUALIFY 580
#define QUOTE 581
#define RANGE 582
#define READ_P 583
#define REAL 584
#define REASSIGN 585
#define RECHECK 586
#define RECURSIVE 587
#define REF 588
#define REFERENCES 589
#define REFERENCING 590
#define REFRESH 591
#define REINDEX 592
#define RELATIVE_P 593
#define RELEASE 594
#define RENAME 595
#define REPEATABLE 596
#define REPLACE 597
#define REPLICA 598
#define RESET 599
#define RESPECT_P 600
#define RESTART 601
#define RESTRICT 602
#define RETURNING 603
#define RETURNS 604
#define REVOKE 605
#define RIGHT 606
#define ROLE 607
#define ROLLBACK 608
#define ROLLUP 609
#define ROW 610
#define ROWS 611
#define RULE 612
#define SAMPLE 613
#define SAVEPOINT 614
#define SCHEMA 615
#define SCHEMAS 616
#define SCROLL 617
#define SEARCH 618
#define SECOND_P 619
#define SECONDS_P 620
#define SECURITY 621
#define SELECT 622
#define SEQUENCE 623
#define SEQUENCES 624
#define SERIALIZABLE 625
#define SERVER 626
#define SESSION 627
#define SESSION_USER 628
#define SET 629
#define SETOF 630
#define SETS 631
#define SHARE 632
#define SHOW 633
#define SIMILAR 634
#define SIMPLE 635
#define SKIP 636
#define SMALLINT 637
#define SNAPSHOT 638
#define SOME 639
#define SQL_P 640
#define STABLE 641
#define STANDALONE_P 642
#define START 643
#define STATEMENT 644
#define STATISTICS 645
#define STDIN 646
#define STDOUT 647
#define STORAGE 648
#define STORED 649
#define STRICT_P 650
#define STRIP_P 651
#define STRUCT 652
#define SUBSCRIPTION 653
#define SUBSTRING 654
#define SUMMARIZE 655
#define SYMMETRIC 656
#define SYSID 657
#define SYSTEM_P 658
#define TABLE 659
#define TABLES 660
#define TABLESAMPLE 661
#define TABLESPACE 662
#define TEMP 663
#define TEMPLATE 664
#define TEMPORARY 665
#define TEXT_P 666
#define THEN 667
#define TIME 668
#define TIMESTAMP 669
#define TO 670
#define TRAILING 671
#define TRANSACTION 672
#define TRANSFORM 673
#define TREAT 674
#define TRIGGER 675
#define TRIM 676
#define TRUE_P 677
#define TRUNCATE 678
#define TRUSTED 679
#define TRY_CAST 680
#define TYPE_P 681
#define TYPES_P 682
#define UNBOUNDED 683
#define UNCOMMITTED 684
#define UNENCRYPTED 685
#define UNION 686
#define UNIQUE 687
#define UNKNOWN 688
#define UNLISTEN 689
#define UNLOGGED 690
#define UNTIL 691
#define UPDATE 692
#define USER 693
#define USING 694
#define VACUUM 695
#define VALID 696
#define VALIDATE 697
#define VALIDATOR 698
#define VALUE_P 699
#define VALUES 700
#define VARCHAR 701
#define VARIADIC 702
#define VARYING 703
#define VERBOSE 704
#define VERSION_P 705
#define VIEW 706
#define VIEWS 707
#define VIRTUAL 708
#define VOLATILE 709
#define WHEN 710
#define WHERE 711
#define WHITESPACE_P 712
#define WINDOW 713
#define WITH 714
#define WITHIN 715
#define WITHOUT 716
#define WORK 717
#define WRAPPER 718
#define WRITE_P 719
#define XML_P 720
#define XMLATTRIBUTES 721
#define XMLCONCAT 722
#define XMLELEMENT 723
#define XMLEXISTS 724
#define XMLFOREST 725
#define XMLNAMESPACES 726
#define XMLPARSE 727
#define XMLPI 728
#define XMLROOT 729
#define XMLSERIALIZE 730
#define XMLTABLE 731
#define YEAR_P 732
#define YEARS_P 733
#define YES_P 734
#define ZONE 735
#define NOT_LA 736
#define NULLS_LA 737
#define WITH_LA 738
#define POSTFIXOP 739
#define UMINUS 740




/* Copy the first part of user declarations.  */
#line 1 "third_party/libpg_query/grammar/grammar.y.tmp"

#line 1 "third_party/libpg_query/grammar/grammar.hpp"
/*#define YYDEBUG 1*/
/*-------------------------------------------------------------------------
 *
 * gram.y
 *	  POSTGRESQL BISON rules/actions
 *
 * Portions Copyright (c) 1996-2017, PostgreSQL Global Development PGGroup
 * Portions Copyright (c) 1994, Regents of the University of California
 *
 *
 * IDENTIFICATION
 *	  src/backend/parser/gram.y
 *
 * HISTORY
 *	  AUTHOR			DATE			MAJOR EVENT
 *	  Andrew Yu			Sept, 1994		POSTQUEL to SQL conversion
 *	  Andrew Yu			Oct, 1994		lispy code conversion
 *
 * NOTES
 *	  CAPITALS are used to represent terminal symbols.
 *	  non-capitals are used to represent non-terminals.
 *
 *	  In general, nothing in this file should initiate database accesses
 *	  nor depend on changeable state (such as SET variables).  If you do
 *	  database accesses, your code will fail when we have aborted the
 *	  current transaction and are just parsing commands to find the next
 *	  ROLLBACK or COMMIT.  If you make use of SET variables, then you
 *	  will do the wrong thing in multi-query strings like this:
 *			SET constraint_exclusion TO off; SELECT * FROM foo;
 *	  because the entire string is parsed by gram.y before the SET gets
 *	  executed.  Anything that depends on the database or changeable state
 *	  should be handled during parse analysis so that it happens at the
 *	  right time not the wrong time.
 *
 * WARNINGS
 *	  If you use a list, make sure the datum is a node so that the printing
 *	  routines work.
 *
 *	  Sometimes we assign constants to makeStrings. Make sure we don't free
 *	  those.
 *
 *-------------------------------------------------------------------------
 */
#include "pg_functions.hpp"
#include <string.h>

#include <ctype.h>
#include <limits.h>

#include "nodes/makefuncs.hpp"
#include "nodes/nodeFuncs.hpp"
#include "parser/gramparse.hpp"
#include "parser/parser.hpp"
#include "utils/datetime.hpp"

namespace duckdb_libpgquery {
#define DEFAULT_SCHEMA "main"

/*
 * Location tracking support --- simpler than bison's default, since we only
 * want to track the start position not the end position of each nonterminal.
 */
#define YYLLOC_DEFAULT(Current, Rhs, N) \
	do { \
		if ((N) > 0) \
			(Current) = (Rhs)[1]; \
		else \
			(Current) = (-1); \
	} while (0)

/*
 * The above macro assigns -1 (unknown) as the parse location of any
 * nonterminal that was reduced from an empty rule, or whose leftmost
 * component was reduced from an empty rule.  This is problematic
 * for nonterminals defined like
 *		OptFooList: / * EMPTY * / { ... } | OptFooList Foo { ... } ;
 * because we'll set -1 as the location during the first reduction and then
 * copy it during each subsequent reduction, leaving us with -1 for the
 * location even when the list is not empty.  To fix that, do this in the
 * action for the nonempty rule(s):
 *		if (@$ < 0) @$ = @2;
 * (Although we have many nonterminals that follow this pattern, we only
 * bother with fixing @$ like this when the nonterminal's parse location
 * is actually referenced in some rule.)
 *
 * A cleaner answer would be to make YYLLOC_DEFAULT scan all the Rhs
 * locations until it's found one that's not -1.  Then we'd get a correct
 * location for any nonterminal that isn't entirely empty.  But this way
 * would add overhead to every rule reduction, and so far there's not been
 * a compelling reason to pay that overhead.
 */

/*
 * Bison doesn't allocate anything that needs to live across parser calls,
 * so we can easily have it use palloc instead of malloc.  This prevents
 * memory leaks if we error out during parsing.  Note this only works with
 * bison >= 2.0.  However, in bison 1.875 the default is to use alloca()
 * if possible, so there's not really much problem anyhow, at least if
 * you're building with gcc.
 */
#define YYMALLOC palloc
#define YYFREE   pfree
#define YYINITDEPTH 1000

/* yields an integer bitmask of these flags: */
#define CAS_NOT_DEFERRABLE			0x01
#define CAS_DEFERRABLE				0x02
#define CAS_INITIALLY_IMMEDIATE		0x04
#define CAS_INITIALLY_DEFERRED		0x08
#define CAS_NOT_VALID				0x10
#define CAS_NO_INHERIT				0x20


#define parser_yyerror(msg)  scanner_yyerror(msg, yyscanner)
#define parser_errposition(pos)  scanner_errposition(pos, yyscanner)

static void base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner,
						 const char *msg);
static PGRawStmt *makeRawStmt(PGNode *stmt, int stmt_location);
static void updateRawStmtEnd(PGRawStmt *rs, int end_location);
static PGNode *makeColumnRef(char *colname, PGList *indirection,
						   int location, core_yyscan_t yyscanner);
static PGNode *makeTypeCast(PGNode *arg, PGTypeName *tpname, int trycast, int location);
static PGNode *makeStringConst(char *str, int location);
static PGNode *makeStringConstCast(char *str, int location, PGTypeName *tpname);
static PGNode *makeIntervalNode(char *str, int location, PGList *typmods);
static PGNode *makeIntervalNode(int val, int location, PGList *typmods);
static PGNode *makeIntervalNode(PGNode *arg, int location, PGList *typmods);
static PGNode *makeSampleSize(PGValue *sample_size, bool is_percentage);
static PGNode *makeSampleOptions(PGNode *sample_size, char *method, int seed, int location);
static PGNode *makeIntConst(int val, int location);
static PGNode *makeFloatConst(char *str, int location);
static PGNode *makeBitStringConst(char *str, int location);
static PGNode *makeNullAConst(int location);
static PGNode *makeAConst(PGValue *v, int location);
static PGNode *makeBoolAConst(bool state, int location);
static PGNode *makeParamRef(int number, int location);
static void check_qualified_name(PGList *names, core_yyscan_t yyscanner);
static PGList *check_func_name(PGList *names, core_yyscan_t yyscanner);
static PGList *check_indirection(PGList *indirection, core_yyscan_t yyscanner);
static void insertSelectOptions(PGSelectStmt *stmt,
								PGList *sortClause, PGList *lockingClause,
								PGNode *limitOffset, PGNode *limitCount,
								PGWithClause *withClause,
								core_yyscan_t yyscanner);
static PGNode *makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg);
static PGNode *doNegate(PGNode *n, int location);
static void doNegateFloat(PGValue *v);
static PGNode *makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location);
static PGNode *makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location);
static PGNode *makeNotExpr(PGNode *expr, int location);
static PGNode *makeSQLValueFunction(PGSQLValueFunctionOp op, int32_t typmod,
								  int location);
static void SplitColQualList(PGList *qualList,
							 PGList **constraintList, PGCollateClause **collClause,
							 core_yyscan_t yyscanner);
static void processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner);
static PGNode *makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query);
static PGNode *makeLimitPercent(PGNode *limit_percent);



/* Enabling traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* Enabling the token table.  */
#ifndef YYTOKEN_TABLE
# define YYTOKEN_TABLE 0
#endif

#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
typedef union YYSTYPE
#line 14 "third_party/libpg_query/grammar/grammar.y"
{
	core_YYSTYPE		core_yystype;
	/* these fields must match core_YYSTYPE: */
	int					ival;
	char				*str;
	const char			*keyword;
	const char          *conststr;

	char				chr;
	bool				boolean;
	PGJoinType			jtype;
	PGDropBehavior		dbehavior;
	PGOnCommitAction		oncommit;
	PGOnCreateConflict		oncreateconflict;
	PGList				*list;
	PGNode				*node;
	PGValue				*value;
	PGObjectType			objtype;
	PGTypeName			*typnam;
	PGObjectWithArgs		*objwithargs;
	PGDefElem				*defelt;
	PGSortBy				*sortby;
	PGWindowDef			*windef;
	PGJoinExpr			*jexpr;
	PGIndexElem			*ielem;
	PGAlias				*alias;
	PGRangeVar			*range;
	PGIntoClause			*into;
	PGWithClause			*with;
	PGInferClause			*infer;
	PGOnConflictClause	*onconflict;
	PGAIndices			*aind;
	PGResTarget			*target;
	PGInsertStmt			*istmt;
	PGVariableSetStmt		*vsetstmt;
	PGOverridingKind       override;
	PGSortByDir            sortorder;
	PGSortByNulls          nullorder;
	PGLockClauseStrength lockstrength;
	PGLockWaitPolicy lockwaitpolicy;
	PGSubLinkType subquerytype;
	PGViewCheckOption viewcheckoption;
}
/* Line 193 of yacc.c.  */
#line 1284 "third_party/libpg_query/grammar/grammar_out.cpp"
	YYSTYPE;
# define yystype YYSTYPE /* obsolescent; will be withdrawn */
# define YYSTYPE_IS_DECLARED 1
# define YYSTYPE_IS_TRIVIAL 1
#endif

#if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
typedef struct YYLTYPE
{
  int first_line;
  int first_column;
  int last_line;
  int last_column;
} YYLTYPE;
# define yyltype YYLTYPE /* obsolescent; will be withdrawn */
# define YYLTYPE_IS_DECLARED 1
# define YYLTYPE_IS_TRIVIAL 1
#endif


/* Copy the second part of user declarations.  */


/* Line 216 of yacc.c.  */
#line 1309 "third_party/libpg_query/grammar/grammar_out.cpp"

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#elif (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
typedef signed char yytype_int8;
#else
typedef short int yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(msgid) dgettext ("bison-runtime", msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(msgid) msgid
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(e) ((void) (e))
#else
# define YYUSE(e) /* empty */
#endif

/* Identity function, used to suppress warnings about constant conditions.  */
#ifndef lint
# define YYID(n) (n)
#else
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static int
YYID (int i)
#else
static int
YYID (i)
    int i;
#endif
{
  return i;
}
#endif

#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#     ifndef _STDLIB_H
#      define _STDLIB_H 1
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's `empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (YYID (0))
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined _STDLIB_H \
       && ! ((defined YYMALLOC || defined malloc) \
	     && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef _STDLIB_H
#    define _STDLIB_H 1
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
	 || (defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL \
	     && defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss;
  YYSTYPE yyvs;
    YYLTYPE yyls;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
      + 2 * YYSTACK_GAP_MAXIMUM)

/* Copy COUNT objects from FROM to TO.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(To, From, Count) \
      __builtin_memcpy (To, From, (Count) * sizeof (*(From)))
#  else
#   define YYCOPY(To, From, Count)		\
      do					\
	{					\
	  YYSIZE_T yyi;				\
	  for (yyi = 0; yyi < (Count); yyi++)	\
	    (To)[yyi] = (From)[yyi];		\
	}					\
      while (YYID (0))
#  endif
# endif

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack)					\
    do									\
      {									\
	YYSIZE_T yynewbytes;						\
	YYCOPY (&yyptr->Stack, Stack, yysize);				\
	Stack = &yyptr->Stack;						\
	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
	yyptr += yynewbytes / sizeof (*yyptr);				\
      }									\
    while (YYID (0))

#endif

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  596
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   54648

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  507
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  395
/* YYNRULES -- Number of rules.  */
#define YYNRULES  1839
/* YYNRULES -- Number of states.  */
#define YYNSTATES  3030

/* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   740

#define YYTRANSLATE(YYX)						\
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[YYLEX] -- Bison symbol number corresponding to YYLEX.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,   504,     2,   492,     2,     2,
     497,   498,   490,   488,   501,   489,   499,   491,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   506,   500,
     484,   486,   485,   505,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,   495,     2,   496,   493,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   502,     2,   503,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   487,
     494
};

#if YYDEBUG
/* YYPRHS[YYN] -- Index of the first RHS symbol of rule number YYN in
   YYRHS.  */
static const yytype_uint16 yyprhs[] =
{
       0,     0,     3,     5,     9,    11,    13,    15,    17,    19,
      21,    23,    25,    27,    29,    31,    33,    35,    37,    39,
      41,    43,    45,    47,    49,    51,    53,    55,    57,    59,
      61,    63,    65,    67,    69,    71,    73,    75,    77,    79,
      80,    85,    92,    97,   104,   109,   116,   121,   128,   130,
     133,   137,   140,   142,   146,   149,   153,   155,   159,   162,
     168,   172,   179,   184,   191,   198,   205,   211,   217,   224,
     234,   239,   245,   253,   260,   265,   275,   280,   283,   288,
     292,   299,   304,   307,   310,   313,   316,   318,   321,   322,
     324,   327,   330,   333,   335,   339,   344,   347,   349,   350,
     353,   357,   360,   364,   373,   375,   376,   378,   382,   389,
     396,   405,   412,   421,   428,   437,   444,   453,   462,   473,
     482,   493,   495,   496,   504,   506,   511,   516,   524,   527,
     529,   533,   538,   542,   543,   545,   546,   549,   553,   559,
     568,   574,   575,   581,   587,   595,   598,   599,   601,   603,
     605,   609,   612,   613,   615,   616,   618,   622,   624,   628,
     630,   633,   635,   639,   642,   645,   650,   656,   662,   671,
     673,   674,   678,   688,   701,   705,   706,   711,   718,   720,
     723,   725,   727,   728,   730,   733,   736,   738,   741,   744,
     746,   749,   753,   756,   759,   762,   765,   769,   773,   777,
     779,   783,   785,   786,   788,   791,   794,   797,   800,   803,
     806,   809,   812,   814,   816,   817,   827,   840,   852,   853,
     856,   858,   860,   862,   864,   866,   868,   872,   873,   875,
     878,   880,   882,   885,   888,   892,   894,   896,   899,   902,
     904,   907,   911,   917,   921,   924,   930,   938,   944,   947,
     951,   953,   955,   958,   961,   962,   967,   968,   972,   977,
     982,   983,   987,   990,   991,   995,   997,   999,  1001,  1003,
    1005,  1007,  1009,  1011,  1013,  1015,  1019,  1023,  1025,  1028,
    1031,  1034,  1037,  1040,  1043,  1044,  1048,  1052,  1056,  1057,
    1059,  1062,  1064,  1067,  1070,  1073,  1076,  1081,  1083,  1087,
    1089,  1093,  1095,  1097,  1099,  1101,  1105,  1107,  1110,  1111,
    1113,  1116,  1117,  1119,  1123,  1124,  1127,  1128,  1132,  1136,
    1138,  1144,  1148,  1150,  1154,  1156,  1159,  1161,  1166,  1172,
    1178,  1185,  1189,  1197,  1202,  1214,  1216,  1220,  1223,  1226,
    1229,  1230,  1234,  1236,  1238,  1241,  1244,  1247,  1250,  1252,
    1253,  1255,  1258,  1265,  1270,  1277,  1282,  1289,  1298,  1303,
    1310,  1312,  1314,  1316,  1318,  1321,  1323,  1326,  1328,  1331,
    1333,  1335,  1337,  1341,  1345,  1349,  1353,  1356,  1359,  1361,
    1365,  1367,  1369,  1371,  1373,  1377,  1379,  1381,  1382,  1384,
    1386,  1388,  1390,  1394,  1403,  1411,  1413,  1415,  1418,  1422,
    1431,  1443,  1453,  1455,  1457,  1461,  1462,  1464,  1468,  1470,
    1471,  1473,  1474,  1476,  1477,  1479,  1483,  1485,  1487,  1489,
    1493,  1494,  1497,  1500,  1501,  1504,  1505,  1507,  1508,  1510,
    1512,  1514,  1518,  1522,  1524,  1526,  1530,  1534,  1538,  1542,
    1547,  1551,  1554,  1556,  1558,  1560,  1562,  1564,  1568,  1570,
    1572,  1576,  1580,  1582,  1585,  1590,  1595,  1598,  1602,  1608,
    1614,  1616,  1618,  1630,  1642,  1644,  1647,  1652,  1657,  1662,
    1665,  1668,  1672,  1674,  1678,  1685,  1688,  1689,  1693,  1697,
    1702,  1707,  1712,  1717,  1721,  1724,  1726,  1728,  1729,  1731,
    1733,  1734,  1736,  1742,  1744,  1745,  1748,  1751,  1752,  1754,
    1755,  1759,  1765,  1771,  1773,  1777,  1782,  1786,  1788,  1790,
    1791,  1794,  1797,  1798,  1801,  1804,  1806,  1808,  1810,  1811,
    1814,  1819,  1825,  1830,  1833,  1837,  1840,  1843,  1846,  1849,
    1851,  1854,  1858,  1859,  1861,  1862,  1868,  1870,  1875,  1882,
    1885,  1887,  1888,  1893,  1894,  1896,  1898,  1901,  1904,  1907,
    1909,  1911,  1914,  1917,  1919,  1921,  1923,  1925,  1927,  1929,
    1933,  1937,  1941,  1942,  1944,  1948,  1950,  1953,  1955,  1957,
    1959,  1961,  1963,  1966,  1971,  1976,  1982,  1984,  1986,  1989,
    1990,  1993,  1994,  1996,  2000,  2002,  2003,  2005,  2008,  2012,
    2015,  2020,  2023,  2027,  2030,  2031,  2033,  2036,  2037,  2042,
    2048,  2050,  2053,  2056,  2057,  2059,  2063,  2065,  2068,  2072,
    2076,  2080,  2084,  2088,  2090,  2095,  2099,  2104,  2110,  2115,
    2121,  2126,  2132,  2135,  2140,  2142,  2144,  2145,  2147,  2152,
    2158,  2163,  2164,  2167,  2170,  2173,  2175,  2177,  2178,  2183,
    2186,  2188,  2191,  2194,  2199,  2202,  2209,  2212,  2214,  2218,
    2223,  2224,  2227,  2228,  2231,  2232,  2234,  2238,  2242,  2245,
    2246,  2249,  2254,  2256,  2258,  2261,  2265,  2271,  2278,  2281,
    2285,  2291,  2297,  2301,  2306,  2307,  2309,  2311,  2313,  2315,
    2317,  2320,  2325,  2327,  2329,  2331,  2333,  2336,  2340,  2341,
    2343,  2345,  2347,  2349,  2351,  2354,  2357,  2360,  2363,  2366,
    2368,  2372,  2373,  2375,  2377,  2379,  2381,  2387,  2390,  2392,
    2394,  2396,  2398,  2403,  2405,  2408,  2411,  2413,  2417,  2421,
    2424,  2426,  2427,  2433,  2436,  2442,  2445,  2447,  2451,  2455,
    2456,  2458,  2460,  2462,  2464,  2466,  2468,  2470,  2472,  2474,
    2476,  2478,  2480,  2482,  2484,  2486,  2488,  2490,  2492,  2494,
    2496,  2498,  2500,  2502,  2504,  2508,  2512,  2516,  2520,  2524,
    2528,  2532,  2533,  2535,  2539,  2543,  2549,  2552,  2555,  2559,
    2563,  2567,  2571,  2575,  2579,  2583,  2587,  2591,  2595,  2599,
    2603,  2607,  2610,  2613,  2617,  2621,  2624,  2627,  2631,  2635,
    2641,  2646,  2653,  2657,  2663,  2668,  2675,  2680,  2687,  2693,
    2701,  2705,  2708,  2713,  2717,  2720,  2722,  2726,  2730,  2734,
    2738,  2742,  2747,  2751,  2756,  2760,  2765,  2771,  2778,  2785,
    2793,  2800,  2808,  2815,  2823,  2827,  2832,  2837,  2844,  2846,
    2851,  2853,  2857,  2860,  2863,  2867,  2871,  2875,  2879,  2883,
    2887,  2891,  2895,  2899,  2903,  2907,  2911,  2915,  2918,  2921,
    2927,  2934,  2941,  2949,  2951,  2953,  2956,  2959,  2962,  2967,
    2969,  2972,  2974,  2977,  2980,  2985,  2989,  2996,  3004,  3014,
    3022,  3030,  3035,  3041,  3043,  3045,  3047,  3053,  3055,  3057,
    3062,  3064,  3069,  3071,  3076,  3078,  3083,  3085,  3087,  3089,
    3091,  3093,  3095,  3102,  3109,  3114,  3119,  3124,  3129,  3136,
    3142,  3148,  3154,  3159,  3166,  3171,  3177,  3178,  3184,  3185,
    3187,  3188,  3191,  3192,  3194,  3198,  3202,  3205,  3208,  3209,
    3216,  3218,  3219,  3223,  3224,  3227,  3230,  3231,  3233,  3238,
    3241,  3244,  3247,  3250,  3253,  3258,  3262,  3264,  3270,  3274,
    3276,  3280,  3282,  3285,  3287,  3289,  3291,  3293,  3295,  3297,
    3299,  3301,  3303,  3305,  3307,  3309,  3311,  3313,  3315,  3317,
    3319,  3321,  3326,  3328,  3333,  3335,  3340,  3342,  3345,  3347,
    3350,  3352,  3355,  3357,  3361,  3363,  3367,  3369,  3372,  3374,
    3375,  3377,  3381,  3383,  3387,  3391,  3393,  3397,  3401,  3402,
    3404,  3406,  3408,  3410,  3412,  3414,  3416,  3418,  3420,  3422,
    3427,  3431,  3434,  3438,  3439,  3443,  3447,  3450,  3453,  3455,
    3456,  3459,  3462,  3466,  3469,  3471,  3473,  3477,  3483,  3485,
    3488,  3493,  3496,  3497,  3499,  3500,  3502,  3505,  3508,  3512,
    3518,  3520,  3521,  3523,  3526,  3527,  3530,  3532,  3533,  3535,
    3536,  3538,  3542,  3544,  3547,  3551,  3554,  3556,  3560,  3566,
    3571,  3574,  3576,  3577,  3581,  3583,  3587,  3589,  3592,  3597,
    3600,  3601,  3603,  3607,  3609,  3612,  3614,  3618,  3620,  3623,
    3625,  3627,  3629,  3632,  3634,  3636,  3639,  3641,  3643,  3646,
    3654,  3657,  3663,  3667,  3671,  3673,  3675,  3677,  3679,  3681,
    3683,  3685,  3687,  3689,  3691,  3693,  3695,  3697,  3699,  3701,
    3703,  3705,  3707,  3709,  3711,  3714,  3717,  3721,  3725,  3726,
    3728,  3730,  3732,  3734,  3736,  3738,  3740,  3746,  3750,  3751,
    3753,  3755,  3757,  3759,  3764,  3772,  3775,  3776,  3778,  3780,
    3782,  3784,  3798,  3815,  3817,  3820,  3821,  3823,  3824,  3826,
    3827,  3830,  3831,  3833,  3834,  3841,  3850,  3857,  3866,  3873,
    3882,  3885,  3887,  3892,  3896,  3899,  3904,  3908,  3914,  3916,
    3917,  3919,  3921,  3922,  3924,  3926,  3928,  3930,  3932,  3934,
    3936,  3938,  3940,  3942,  3944,  3948,  3950,  3952,  3954,  3956,
    3958,  3960,  3963,  3965,  3967,  3970,  3974,  3978,  3982,  3984,
    3988,  3992,  3995,  3999,  4003,  4007,  4011,  4013,  4015,  4017,
    4019,  4023,  4029,  4031,  4033,  4035,  4037,  4041,  4044,  4047,
    4051,  4053,  4055,  4060,  4066,  4072,  4077,  4084,  4086,  4088,
    4090,  4092,  4094,  4096,  4097,  4099,  4103,  4105,  4106,  4114,
    4116,  4119,  4123,  4126,  4127,  4130,  4131,  4134,  4139,  4142,
    4144,  4146,  4148,  4151,  4155,  4158,  4161,  4164,  4167,  4171,
    4176,  4179,  4181,  4183,  4185,  4187,  4191,  4194,  4204,  4216,
    4229,  4244,  4248,  4253,  4258,  4259,  4267,  4278,  4288,  4291,
    4295,  4296,  4301,  4303,  4305,  4307,  4309,  4311,  4313,  4315,
    4317,  4319,  4321,  4323,  4325,  4327,  4329,  4331,  4333,  4335,
    4337,  4339,  4341,  4343,  4345,  4347,  4349,  4351,  4353,  4355,
    4357,  4359,  4361,  4363,  4365,  4367,  4369,  4371,  4373,  4375,
    4377,  4379,  4381,  4383,  4385,  4387,  4389,  4391,  4393,  4395,
    4397,  4399,  4401,  4403,  4405,  4407,  4409,  4411,  4413,  4415,
    4417,  4419,  4421,  4423,  4425,  4427,  4429,  4431,  4433,  4435,
    4437,  4439,  4441,  4443,  4445,  4447,  4449,  4451,  4453,  4455,
    4457,  4459,  4461,  4463,  4465,  4467,  4469,  4471,  4473,  4475,
    4477,  4479,  4481,  4483,  4485,  4487,  4489,  4491,  4493,  4495,
    4497,  4499,  4501,  4503,  4505,  4507,  4509,  4511,  4513,  4515,
    4517,  4519,  4521,  4523,  4525,  4527,  4529,  4531,  4533,  4535,
    4537,  4539,  4541,  4543,  4545,  4547,  4549,  4551,  4553,  4555,
    4557,  4559,  4561,  4563,  4565,  4567,  4569,  4571,  4573,  4575,
    4577,  4579,  4581,  4583,  4585,  4587,  4589,  4591,  4593,  4595,
    4597,  4599,  4601,  4603,  4605,  4607,  4609,  4611,  4613,  4615,
    4617,  4619,  4621,  4623,  4625,  4627,  4629,  4631,  4633,  4635,
    4637,  4639,  4641,  4643,  4645,  4647,  4649,  4651,  4653,  4655,
    4657,  4659,  4661,  4663,  4665,  4667,  4669,  4671,  4673,  4675,
    4677,  4679,  4681,  4683,  4685,  4687,  4689,  4691,  4693,  4695,
    4697,  4699,  4701,  4703,  4705,  4707,  4709,  4711,  4713,  4715,
    4717,  4719,  4721,  4723,  4725,  4727,  4729,  4731,  4733,  4735,
    4737,  4739,  4741,  4743,  4745,  4747,  4749,  4751,  4753,  4755,
    4757,  4759,  4761,  4763,  4765,  4767,  4769,  4771,  4773,  4775,
    4777,  4779,  4781,  4783,  4785,  4787,  4789,  4791,  4793,  4795,
    4797,  4799,  4801,  4803,  4805,  4807,  4809,  4811,  4813,  4815,
    4817,  4819,  4821,  4823,  4825,  4827,  4829,  4831,  4833,  4835,
    4837,  4839,  4841,  4843,  4845,  4847,  4849,  4851,  4853,  4855,
    4857,  4859,  4861,  4863,  4865,  4867,  4869,  4871,  4873,  4875,
    4877,  4879,  4881,  4883,  4885,  4887,  4889,  4891,  4893,  4895,
    4897,  4899,  4901,  4903,  4905,  4907,  4909,  4911,  4913,  4915,
    4917,  4919,  4921,  4923,  4925,  4927,  4929,  4931,  4933,  4935,
    4937,  4939,  4941,  4943,  4945,  4947,  4949,  4951,  4953,  4955,
    4957,  4959,  4961,  4963,  4965,  4967,  4969,  4971,  4973,  4975,
    4977,  4979,  4981,  4983,  4985,  4987,  4989,  4991,  4993,  4995,
    4997,  4999,  5001,  5003,  5005,  5007,  5009,  5011,  5013,  5015,
    5017,  5019,  5021,  5023,  5025,  5027,  5029,  5031,  5033,  5035,
    5037,  5039,  5041,  5043,  5045,  5047,  5049,  5051,  5053,  5055,
    5057,  5059,  5061,  5063,  5065,  5067,  5069,  5071,  5073,  5075,
    5077,  5079,  5081,  5083,  5085,  5087,  5089,  5091,  5093,  5095,
    5097,  5099,  5101,  5103,  5105,  5107,  5109,  5111,  5113,  5115,
    5117,  5119,  5121,  5123,  5125,  5127,  5129,  5131,  5133,  5135,
    5137,  5139,  5141,  5143,  5145,  5147,  5149,  5151,  5153,  5155,
    5157,  5159,  5161,  5163,  5165,  5167,  5169,  5171,  5173,  5175,
    5177,  5179,  5181,  5183,  5185,  5187,  5189,  5191,  5193,  5195,
    5197,  5199,  5201,  5203,  5205,  5207,  5209,  5211,  5213,  5215,
    5217,  5219,  5221,  5223,  5225,  5227,  5229,  5231,  5233,  5235,
    5237,  5239,  5241,  5243,  5245,  5247,  5249,  5251,  5253,  5255,
    5257,  5259,  5261,  5263,  5265,  5267,  5269,  5271,  5273,  5275,
    5277,  5279,  5281,  5283,  5285,  5287,  5289,  5291,  5293,  5295,
    5297,  5299,  5301,  5303,  5305,  5307,  5309,  5311,  5313,  5315,
    5317,  5319,  5321,  5323,  5325,  5327,  5329,  5331,  5333,  5335,
    5337,  5339,  5341,  5343,  5345,  5347,  5349,  5351,  5353,  5355,
    5357,  5359,  5361,  5363,  5365,  5367,  5369,  5371,  5373,  5375,
    5377,  5379,  5381,  5383,  5385,  5387,  5389,  5391,  5393,  5395,
    5397,  5399,  5401,  5403,  5405,  5407,  5409,  5411,  5413,  5415,
    5417,  5419,  5421,  5423,  5425,  5427,  5429,  5431,  5433,  5435
};

/* YYRHS -- A `-1'-separated list of the rules' RHS.  */
static const yytype_int16 yyrhs[] =
{
     508,     0,    -1,   509,    -1,   509,   500,   510,    -1,   510,
      -1,   850,    -1,   552,    -1,   511,    -1,   882,    -1,   889,
      -1,   851,    -1,   619,    -1,   892,    -1,   523,    -1,   615,
      -1,   840,    -1,   548,    -1,   561,    -1,   522,    -1,   878,
      -1,   608,    -1,   550,    -1,   854,    -1,   852,    -1,   853,
      -1,   843,    -1,   528,    -1,   871,    -1,   547,    -1,   837,
      -1,   526,    -1,   636,    -1,   559,    -1,   618,    -1,   873,
      -1,   883,    -1,   865,    -1,   886,    -1,   890,    -1,    -1,
      29,   404,   705,   519,    -1,    29,   404,   188,   150,   705,
     519,    -1,    29,   198,   817,   519,    -1,    29,   198,   188,
     150,   817,   519,    -1,    29,   368,   817,   519,    -1,    29,
     368,   188,   150,   817,   519,    -1,    29,   451,   817,   519,
      -1,    29,   451,   188,   150,   817,   519,    -1,   514,    -1,
     512,   514,    -1,   374,   115,   747,    -1,   135,   115,    -1,
     346,    -1,   346,   554,   555,    -1,   374,   556,    -1,   374,
     173,   607,    -1,   518,    -1,   515,   501,   518,    -1,    23,
     586,    -1,    23,   188,   270,   150,   586,    -1,    23,    75,
     586,    -1,    23,    75,   188,   270,   150,   586,    -1,    29,
     527,   826,   513,    -1,    29,   527,   826,   135,   270,   275,
      -1,    29,   527,   826,   374,   270,   275,    -1,    29,   527,
     826,   374,   390,   558,    -1,    29,   527,   826,   374,   574,
      -1,    29,   527,   826,   344,   574,    -1,    29,   527,   826,
     374,   393,   826,    -1,    29,   527,   826,    23,   173,   607,
      36,   187,   564,    -1,    29,   527,   826,   512,    -1,    29,
     527,   826,   135,   187,    -1,    29,   527,   826,   135,   187,
     188,   150,    -1,   135,   527,   188,   150,   826,   612,    -1,
     135,   527,   826,   612,    -1,    29,   527,   826,   521,   426,
     717,   714,   517,   612,    -1,    29,   527,   826,   520,    -1,
      23,   576,    -1,    29,    86,   820,   562,    -1,   442,    86,
     820,    -1,   135,    86,   188,   150,   820,   612,    -1,   135,
      86,   820,   612,    -1,   374,   242,    -1,   374,   435,    -1,
     374,   574,    -1,   344,   574,    -1,   520,    -1,   439,   747,
      -1,    -1,   569,    -1,   374,   569,    -1,    23,   569,    -1,
     135,   584,    -1,   516,    -1,   519,   501,   516,    -1,   289,
     497,   515,   498,    -1,   374,   107,    -1,   374,    -1,    -1,
     111,   820,    -1,   111,   315,   820,    -1,   111,    27,    -1,
     111,   315,    27,    -1,    93,   426,   831,    36,   142,   497,
     524,   498,    -1,   525,    -1,    -1,   825,    -1,   525,   501,
     825,    -1,    29,   360,   820,   340,   415,   820,    -1,    29,
     404,   705,   340,   415,   820,    -1,    29,   404,   188,   150,
     705,   340,   415,   820,    -1,    29,   368,   817,   340,   415,
     820,    -1,    29,   368,   188,   150,   817,   340,   415,   820,
      -1,    29,   451,   817,   340,   415,   820,    -1,    29,   451,
     188,   150,   817,   340,   415,   820,    -1,    29,   198,   817,
     340,   415,   820,    -1,    29,   198,   188,   150,   817,   340,
     415,   820,    -1,    29,   404,   705,   340,   527,   820,   415,
     820,    -1,    29,   404,   188,   150,   705,   340,   527,   820,
     415,   820,    -1,    29,   404,   705,   340,    86,   820,   415,
     820,    -1,    29,   404,   188,   150,   705,   340,    86,   820,
     415,   820,    -1,    75,    -1,    -1,   532,   208,   215,   530,
     529,   535,   537,    -1,   636,    -1,   298,   538,   444,   636,
      -1,   497,   542,   498,   636,    -1,   497,   542,   498,   298,
     538,   444,   636,    -1,   115,   445,    -1,   817,    -1,   817,
      36,   826,    -1,   497,   545,   498,   711,    -1,   285,    86,
     820,    -1,    -1,   641,    -1,    -1,   826,   804,    -1,   546,
     486,   747,    -1,   497,   539,   498,   486,   747,    -1,   285,
      84,   531,   131,   437,   374,   544,   711,    -1,   285,    84,
     531,   131,   271,    -1,    -1,   826,   540,   541,   655,   656,
      -1,   752,   540,   541,   655,   656,    -1,   497,   747,   498,
     540,   541,   655,   656,    -1,   348,   807,    -1,    -1,   438,
      -1,   403,    -1,   546,    -1,   539,   501,   546,    -1,    73,
     831,    -1,    -1,   831,    -1,    -1,   533,    -1,   542,   501,
     533,    -1,   534,    -1,   543,   501,   534,    -1,   543,    -1,
     543,   501,    -1,   536,    -1,   545,   501,   536,    -1,   826,
     804,    -1,   312,   826,    -1,   312,   826,   486,   870,    -1,
     312,   826,   497,   782,   498,    -1,    93,   606,   368,   817,
     549,    -1,    93,   606,   368,   188,   270,   150,   817,   549,
      -1,   553,    -1,    -1,   149,   820,   551,    -1,    93,   606,
     404,   894,    36,   149,   820,   551,   893,    -1,    93,   606,
     404,   188,   270,   150,   894,    36,   149,   820,   551,   893,
      -1,   497,   780,   498,    -1,    -1,    29,   368,   817,   553,
      -1,    29,   368,   188,   150,   817,   553,    -1,   556,    -1,
     553,   556,    -1,   459,    -1,   483,    -1,    -1,     4,    -1,
     488,     4,    -1,   489,     4,    -1,   558,    -1,    36,   719,
      -1,    55,   555,    -1,   106,    -1,   268,   106,    -1,   197,
     557,   555,    -1,   248,   555,    -1,   256,   555,    -1,   268,
     248,    -1,   268,   256,    -1,   299,    54,   831,    -1,   368,
     261,   831,    -1,   388,   554,   555,    -1,   346,    -1,   346,
     554,   555,    -1,    54,    -1,    -1,   824,    -1,   488,   824,
      -1,   489,   824,    -1,    19,   560,    -1,    47,   560,    -1,
     388,   560,    -1,    79,   560,    -1,   141,   560,    -1,   353,
     560,    -1,   462,    -1,   417,    -1,    -1,    93,   606,   404,
     817,   497,   593,   498,   581,   573,    -1,    93,   606,   404,
     188,   270,   150,   817,   497,   593,   498,   581,   573,    -1,
      93,   290,   342,   606,   404,   817,   497,   593,   498,   581,
     573,    -1,    -1,   562,   585,    -1,   601,    -1,   901,    -1,
     776,    -1,   555,    -1,   825,    -1,   269,    -1,   497,   553,
     498,    -1,    -1,   825,    -1,   268,    22,    -1,   347,    -1,
      58,    -1,   374,   275,    -1,   374,   115,    -1,    86,   820,
     568,    -1,   568,    -1,   580,    -1,    73,   831,    -1,   270,
     275,    -1,   275,    -1,   432,   592,    -1,   318,   222,   592,
      -1,    67,   497,   747,   498,   575,    -1,   439,    81,   820,
      -1,   115,   748,    -1,   173,   607,    36,   187,   564,    -1,
     173,   607,    36,   497,   747,   498,   453,    -1,   334,   817,
     595,   604,   571,    -1,   584,   565,    -1,   285,   437,   566,
      -1,   570,    -1,   597,    -1,   570,   597,    -1,   597,   570,
      -1,    -1,   289,   497,   587,   498,    -1,    -1,   285,    79,
     135,    -1,   285,    79,   120,   356,    -1,   285,    79,   317,
     356,    -1,    -1,   497,   578,   498,    -1,   268,   200,    -1,
      -1,    86,   820,   602,    -1,   602,    -1,    78,    -1,    87,
      -1,   116,    -1,   187,    -1,   199,    -1,   390,    -1,   393,
      -1,    27,    -1,   598,    -1,   578,   501,   598,    -1,   439,
     198,   589,    -1,   117,    -1,   270,   117,    -1,   202,   118,
      -1,   202,   191,    -1,   459,   574,    -1,   459,   283,    -1,
     461,   283,    -1,    -1,   497,   588,   498,    -1,   583,   196,
     577,    -1,   583,   147,   577,    -1,    -1,   835,    -1,   270,
     117,    -1,   117,    -1,   202,   191,    -1,   202,   118,    -1,
     270,   441,    -1,   268,   200,    -1,   826,   717,   572,   596,
      -1,   569,    -1,   587,   501,   569,    -1,   591,    -1,   588,
     501,   591,    -1,   826,    -1,   586,    -1,   605,    -1,   576,
      -1,   835,   486,   563,    -1,   835,    -1,   459,   582,    -1,
      -1,   603,    -1,   603,   501,    -1,    -1,   826,    -1,   497,
     599,   498,    -1,    -1,   596,   567,    -1,    -1,   285,   120,
     566,    -1,   835,   486,   563,    -1,   835,    -1,   835,   499,
     835,   486,   563,    -1,   835,   499,   835,    -1,   594,    -1,
     599,   501,   594,    -1,   599,    -1,   599,   501,    -1,   717,
      -1,   828,   832,   492,   426,    -1,   375,   828,   832,   492,
     426,    -1,    67,   497,   747,   498,   562,    -1,   432,   497,
     600,   498,   592,   562,    -1,   432,   579,   562,    -1,   318,
     222,   497,   600,   498,   592,   562,    -1,   318,   222,   579,
     562,    -1,   166,   222,   497,   600,   498,   334,   817,   595,
     604,   571,   562,    -1,   590,    -1,   603,   501,   590,    -1,
     246,   170,    -1,   246,   303,    -1,   246,   380,    -1,    -1,
     232,   817,   583,    -1,   410,    -1,   408,    -1,   236,   410,
      -1,   236,   408,    -1,   175,   410,    -1,   175,   408,    -1,
     435,    -1,    -1,    30,    -1,    54,   115,    -1,   135,   609,
     188,   150,   611,   612,    -1,   135,   609,   611,   612,    -1,
     135,   610,   188,   150,   818,   612,    -1,   135,   610,   818,
     612,    -1,   135,   613,   820,   285,   831,   612,    -1,   135,
     613,   188,   150,   820,   285,   831,   612,    -1,   135,   426,
     614,   612,    -1,   135,   426,   188,   150,   614,   612,    -1,
     404,    -1,   368,    -1,   171,    -1,   243,    -1,   243,   404,
      -1,   451,    -1,   247,   451,    -1,   198,    -1,   166,   404,
      -1,    74,    -1,    90,    -1,   390,    -1,   411,   363,   302,
      -1,   411,   363,   127,    -1,   411,   363,   409,    -1,   411,
     363,    83,    -1,    21,   249,    -1,   144,   420,    -1,   154,
      -1,   166,   107,   463,    -1,   324,    -1,   360,    -1,   371,
      -1,   831,    -1,   611,   501,   831,    -1,    58,    -1,   347,
      -1,    -1,   310,    -1,   357,    -1,   420,    -1,   717,    -1,
     614,   501,   717,    -1,    93,   606,   616,   817,   617,    36,
     404,   636,    -1,    93,   606,   616,   817,   617,    36,   747,
      -1,   171,    -1,   243,    -1,   497,   498,    -1,   497,   782,
     498,    -1,   532,   437,   879,   374,   544,   694,   880,   537,
      -1,    91,   631,   817,   595,   629,   620,   625,   634,   621,
     554,   626,    -1,    91,   497,   839,   498,   415,   625,   634,
     554,   626,    -1,   169,    -1,   415,    -1,   623,   122,   825,
      -1,    -1,   633,    -1,   622,   501,   633,    -1,   439,    -1,
      -1,    36,    -1,    -1,   323,    -1,    -1,   630,    -1,   497,
     635,   498,    -1,   862,    -1,   555,    -1,   490,    -1,   497,
     622,   498,    -1,    -1,   835,   627,    -1,   459,   283,    -1,
      -1,   630,   632,    -1,    -1,    50,    -1,    -1,    50,    -1,
     283,    -1,   168,    -1,   121,   624,   825,    -1,   275,   624,
     825,    -1,    95,    -1,   183,    -1,   326,   624,   825,    -1,
     143,   624,   825,    -1,   165,   326,   599,    -1,   165,   326,
     490,    -1,   165,   270,   275,   599,    -1,   165,   275,   599,
      -1,   139,   825,    -1,   862,    -1,   825,    -1,   391,    -1,
     392,    -1,   628,    -1,   635,   501,   628,    -1,   638,    -1,
     637,    -1,   497,   638,   498,    -1,   497,   637,   498,    -1,
     640,    -1,   639,   652,    -1,   639,   651,   685,   658,    -1,
     639,   651,   657,   686,    -1,   641,   639,    -1,   641,   639,
     652,    -1,   641,   639,   651,   685,   658,    -1,   641,   639,
     651,   657,   686,    -1,   640,    -1,   637,    -1,   367,   649,
     806,   644,   694,   711,   674,   683,   757,   684,   662,    -1,
     367,   648,   808,   644,   694,   711,   674,   683,   757,   684,
     662,    -1,   693,    -1,   404,   705,    -1,   639,   431,   647,
     639,    -1,   639,   213,   647,   639,    -1,   639,   145,   647,
     639,    -1,   459,   642,    -1,   483,   642,    -1,   459,   332,
     642,    -1,   643,    -1,   642,   501,   643,    -1,   820,   833,
      36,   497,   839,   498,    -1,   215,   645,    -1,    -1,   410,
     646,   817,    -1,   408,   646,   817,    -1,   236,   410,   646,
     817,    -1,   236,   408,   646,   817,    -1,   175,   410,   646,
     817,    -1,   175,   408,   646,   817,    -1,   435,   646,   817,
      -1,   404,   817,    -1,   817,    -1,   404,    -1,    -1,    27,
      -1,   130,    -1,    -1,   130,    -1,   130,   285,   497,   780,
     498,    -1,    27,    -1,    -1,   189,   277,    -1,   345,   277,
      -1,    -1,   652,    -1,    -1,   291,    54,   653,    -1,   291,
      54,    27,   655,   656,    -1,   291,    54,   490,   655,   656,
      -1,   654,    -1,   653,   501,   654,    -1,   747,   439,   776,
     656,    -1,   747,   655,   656,    -1,    37,    -1,   124,    -1,
      -1,   482,   161,    -1,   482,   226,    -1,    -1,   659,   660,
      -1,   660,   659,    -1,   659,    -1,   660,    -1,   657,    -1,
      -1,   233,   668,    -1,   233,   668,   501,   669,    -1,   159,
     673,   670,   672,   286,    -1,   159,   673,   672,   286,    -1,
     282,   669,    -1,   282,   670,   672,    -1,     4,   492,    -1,
       9,   492,    -1,     4,   307,    -1,     9,   307,    -1,     9,
      -1,     9,   356,    -1,   439,   358,   664,    -1,    -1,   826,
      -1,    -1,   663,   497,   661,   498,   667,    -1,   661,    -1,
     661,   497,   826,   498,    -1,   661,   497,   826,   501,     9,
     498,    -1,   406,   664,    -1,   665,    -1,    -1,   341,   497,
       9,   498,    -1,    -1,   747,    -1,    27,    -1,   747,   492,
      -1,     4,   307,    -1,     9,   307,    -1,   747,    -1,   749,
      -1,   488,   671,    -1,   489,   671,    -1,   824,    -1,     4,
      -1,   355,    -1,   356,    -1,   161,    -1,   267,    -1,   178,
      54,   676,    -1,   178,    54,    27,    -1,   178,    54,   490,
      -1,    -1,   677,    -1,   675,   501,   677,    -1,   675,    -1,
     675,   501,    -1,   747,    -1,   678,    -1,   680,    -1,   679,
      -1,   681,    -1,   497,   498,    -1,   354,   497,   780,   498,
      -1,    96,   497,   780,   498,    -1,   179,   376,   497,   676,
     498,    -1,   179,    -1,   180,    -1,   182,   747,    -1,    -1,
     325,   747,    -1,    -1,   687,    -1,   164,   328,   286,    -1,
     685,    -1,    -1,   688,    -1,   687,   688,    -1,   689,   690,
     691,    -1,   164,   437,    -1,   164,   268,   222,   437,    -1,
     164,   377,    -1,   164,   222,   377,    -1,   280,   816,    -1,
      -1,   274,    -1,   381,   241,    -1,    -1,   445,   497,   780,
     498,    -1,   692,   501,   497,   780,   498,    -1,   692,    -1,
     692,   501,    -1,   169,   696,    -1,    -1,   697,    -1,   695,
     501,   697,    -1,   695,    -1,   695,   501,    -1,   705,   700,
     666,    -1,   706,   701,   666,    -1,   227,   706,   701,    -1,
     637,   700,   666,    -1,   227,   637,   700,    -1,   698,    -1,
     497,   698,   498,   699,    -1,   497,   698,   498,    -1,   697,
      94,   220,   697,    -1,   697,   702,   220,   697,   704,    -1,
     697,   220,   697,   704,    -1,   697,   264,   702,   220,   697,
      -1,   697,   264,   220,   697,    -1,    36,   826,   497,   819,
     498,    -1,    36,   827,    -1,   826,   497,   819,   498,    -1,
     826,    -1,   699,    -1,    -1,   699,    -1,    36,   497,   712,
     498,    -1,    36,   826,   497,   712,   498,    -1,   826,   497,
     712,   498,    -1,    -1,   170,   703,    -1,   230,   703,    -1,
     351,   703,    -1,   204,    -1,   294,    -1,    -1,   439,   497,
     819,   498,    -1,   285,   747,    -1,   817,    -1,   817,   490,
      -1,   286,   817,    -1,   286,   497,   817,   498,    -1,   752,
     710,    -1,   356,   169,   497,   708,   498,   710,    -1,   752,
     709,    -1,   707,    -1,   708,   501,   707,    -1,    36,   497,
     712,   498,    -1,    -1,   483,   292,    -1,    -1,   456,   747,
      -1,    -1,   713,    -1,   712,   501,   713,    -1,   826,   717,
     714,    -1,    73,   831,    -1,    -1,   826,   717,    -1,   715,
     501,   826,   717,    -1,   355,    -1,   397,    -1,   719,   718,
      -1,   375,   719,   718,    -1,   719,    35,   495,   824,   496,
      -1,   375,   719,    35,   495,   824,   496,    -1,   719,    35,
      -1,   375,   719,    35,    -1,   716,   497,   715,   498,   718,
      -1,   244,   497,   784,   498,   718,    -1,   718,   495,   496,
      -1,   718,   495,   824,   496,    -1,    -1,   721,    -1,   723,
      -1,   725,    -1,   729,    -1,   735,    -1,   736,   746,    -1,
     736,   497,   824,   498,    -1,   723,    -1,   726,    -1,   730,
      -1,   735,    -1,   830,   722,    -1,   497,   780,   498,    -1,
      -1,   211,    -1,   212,    -1,   382,    -1,    49,    -1,   329,
      -1,   162,   724,    -1,   134,   314,    -1,   113,   722,    -1,
     112,   722,    -1,   278,   722,    -1,    52,    -1,   497,   824,
     498,    -1,    -1,   727,    -1,   728,    -1,   727,    -1,   728,
      -1,    51,   734,   497,   780,   498,    -1,    51,   734,    -1,
     731,    -1,   732,    -1,   731,    -1,   732,    -1,   733,   497,
     824,   498,    -1,   733,    -1,    65,   734,    -1,    64,   734,
      -1,   446,    -1,   263,    65,   734,    -1,   263,    64,   734,
      -1,   265,   734,    -1,   448,    -1,    -1,   414,   497,   824,
     498,   737,    -1,   414,   737,    -1,   413,   497,   824,   498,
     737,    -1,   413,   737,    -1,   214,    -1,   483,   413,   480,
      -1,   461,   413,   480,    -1,    -1,   477,    -1,   478,    -1,
     258,    -1,   259,    -1,   109,    -1,   110,    -1,   185,    -1,
     186,    -1,   254,    -1,   255,    -1,   364,    -1,   365,    -1,
     252,    -1,   253,    -1,   250,    -1,   251,    -1,   738,    -1,
     739,    -1,   740,    -1,   741,    -1,   742,    -1,   743,    -1,
     744,    -1,   745,    -1,   738,   415,   739,    -1,   740,   415,
     741,    -1,   740,   415,   742,    -1,   740,   415,   743,    -1,
     741,   415,   742,    -1,   741,   415,   743,    -1,   742,   415,
     743,    -1,    -1,   749,    -1,   747,    11,   717,    -1,   747,
      73,   831,    -1,   747,    41,   413,   480,   747,    -1,   488,
     747,    -1,   489,   747,    -1,   747,   488,   747,    -1,   747,
     489,   747,    -1,   747,   490,   747,    -1,   747,   491,   747,
      -1,   747,   492,   747,    -1,   747,   493,   747,    -1,   747,
     484,   747,    -1,   747,   485,   747,    -1,   747,   486,   747,
      -1,   747,    16,   747,    -1,   747,    17,   747,    -1,   747,
      18,   747,    -1,   747,   775,   747,    -1,   775,   747,    -1,
     747,   775,    -1,   747,    33,   747,    -1,   747,   290,   747,
      -1,   270,   747,    -1,   481,   747,    -1,   747,   174,   747,
      -1,   747,   232,   747,    -1,   747,   232,   747,   143,   747,
      -1,   747,   481,   232,   747,    -1,   747,   481,   232,   747,
     143,   747,    -1,   747,   190,   747,    -1,   747,   190,   747,
     143,   747,    -1,   747,   481,   190,   747,    -1,   747,   481,
     190,   747,   143,   747,    -1,   747,   379,   415,   747,    -1,
     747,   379,   415,   747,   143,   747,    -1,   747,   481,   379,
     415,   747,    -1,   747,   481,   379,   415,   747,   143,   747,
      -1,   747,   217,   275,    -1,   747,   218,    -1,   747,   217,
     270,   275,    -1,   747,   270,   275,    -1,   747,   273,    -1,
     768,    -1,   502,   771,   503,    -1,   495,   781,   496,    -1,
     747,    15,   747,    -1,   768,   296,   768,    -1,   747,   217,
     422,    -1,   747,   217,   270,   422,    -1,   747,   217,   157,
      -1,   747,   217,   270,   157,    -1,   747,   217,   433,    -1,
     747,   217,   270,   433,    -1,   747,   217,   130,   169,   747,
      -1,   747,   217,   270,   130,   169,   747,    -1,   747,   217,
     280,   497,   784,   498,    -1,   747,   217,   270,   280,   497,
     784,   498,    -1,   747,    48,   805,   748,    33,   747,    -1,
     747,   481,    48,   805,   748,    33,   747,    -1,   747,    48,
     401,   748,    33,   747,    -1,   747,   481,    48,   401,   748,
      33,   747,    -1,   747,   195,   794,    -1,   747,   481,   195,
     794,    -1,   747,   777,   772,   637,    -1,   747,   777,   772,
     497,   747,   498,    -1,   115,    -1,    35,   495,   781,   496,
      -1,   749,    -1,   748,    11,   717,    -1,   488,   748,    -1,
     489,   748,    -1,   748,   488,   748,    -1,   748,   489,   748,
      -1,   748,   490,   748,    -1,   748,   491,   748,    -1,   748,
     492,   748,    -1,   748,   493,   748,    -1,   748,   484,   748,
      -1,   748,   485,   748,    -1,   748,   486,   748,    -1,   748,
      16,   748,    -1,   748,    17,   748,    -1,   748,    18,   748,
      -1,   748,   775,   748,    -1,   775,   748,    -1,   748,   775,
      -1,   748,   217,   130,   169,   748,    -1,   748,   217,   270,
     130,   169,   748,    -1,   748,   217,   280,   497,   784,   498,
      -1,   748,   217,   270,   280,   497,   784,   498,    -1,   800,
      -1,   823,    -1,   504,     9,    -1,   505,   804,    -1,    10,
     804,    -1,   497,   747,   498,   804,    -1,   795,    -1,   751,
     804,    -1,   637,    -1,   637,   803,    -1,   150,   637,    -1,
     682,   497,   780,   498,    -1,   822,   497,   498,    -1,   822,
     497,   782,   651,   650,   498,    -1,   822,   497,   447,   783,
     651,   650,   498,    -1,   822,   497,   782,   501,   447,   783,
     651,   650,   498,    -1,   822,   497,    27,   782,   651,   650,
     498,    -1,   822,   497,   130,   782,   651,   650,   498,    -1,
     822,   497,   490,   498,    -1,   750,   754,   755,   756,   760,
      -1,   753,    -1,   750,    -1,   753,    -1,    74,   164,   497,
     747,   498,    -1,    99,    -1,   102,    -1,   102,   497,   824,
     498,    -1,   103,    -1,   103,   497,   824,   498,    -1,   237,
      -1,   237,   497,   824,   498,    -1,   238,    -1,   238,   497,
     824,   498,    -1,   100,    -1,   104,    -1,   373,    -1,   438,
      -1,    98,    -1,   101,    -1,    61,   497,   747,    36,   717,
     498,    -1,   425,   497,   747,    36,   717,   498,    -1,   156,
     497,   785,   498,    -1,   297,   497,   787,   498,    -1,   311,
     497,   789,   498,    -1,   399,   497,   790,   498,    -1,   419,
     497,   747,    36,   717,   498,    -1,   421,   497,    53,   793,
     498,    -1,   421,   497,   228,   793,   498,    -1,   421,   497,
     416,   793,   498,    -1,   421,   497,   793,   498,    -1,   276,
     497,   747,   501,   747,   498,    -1,    72,   497,   780,   498,
      -1,   460,   178,   497,   652,   498,    -1,    -1,   160,   497,
     456,   747,   498,    -1,    -1,   153,    -1,    -1,   458,   758,
      -1,    -1,   759,    -1,   758,   501,   759,    -1,   826,    36,
     761,    -1,   295,   761,    -1,   295,   826,    -1,    -1,   497,
     762,   763,   651,   764,   498,    -1,   826,    -1,    -1,   304,
      54,   779,    -1,    -1,   327,   765,    -1,   356,   765,    -1,
      -1,   766,    -1,    48,   766,    33,   766,    -1,   428,   313,
      -1,   428,   163,    -1,    97,   355,    -1,   747,   313,    -1,
     747,   163,    -1,   355,   497,   780,   498,    -1,   355,   497,
     498,    -1,   767,    -1,   497,   779,   501,   747,   498,    -1,
     827,   506,   747,    -1,   769,    -1,   770,   501,   769,    -1,
     770,    -1,   770,   501,    -1,    34,    -1,   384,    -1,    27,
      -1,     8,    -1,   774,    -1,   488,    -1,   489,    -1,   490,
      -1,   491,    -1,   492,    -1,   493,    -1,   484,    -1,   485,
      -1,   486,    -1,    16,    -1,    17,    -1,    18,    -1,     8,
      -1,   287,   497,   778,   498,    -1,   773,    -1,   287,   497,
     778,   498,    -1,   773,    -1,   287,   497,   778,   498,    -1,
     232,    -1,   481,   232,    -1,   174,    -1,   481,   174,    -1,
     190,    -1,   481,   190,    -1,   773,    -1,   826,   499,   778,
      -1,   747,    -1,   779,   501,   747,    -1,   779,    -1,   779,
     501,    -1,   780,    -1,    -1,   783,    -1,   782,   501,   783,
      -1,   747,    -1,   834,    13,   747,    -1,   834,    14,   747,
      -1,   717,    -1,   784,   501,   717,    -1,   786,   169,   747,
      -1,    -1,     3,    -1,   738,    -1,   739,    -1,   740,    -1,
     741,    -1,   742,    -1,   743,    -1,   744,    -1,   745,    -1,
     825,    -1,   747,   788,   791,   792,    -1,   747,   788,   791,
      -1,   308,   747,    -1,   748,   195,   748,    -1,    -1,   747,
     791,   792,    -1,   747,   792,   791,    -1,   747,   791,    -1,
     747,   792,    -1,   779,    -1,    -1,   169,   747,    -1,   164,
     747,    -1,   747,   169,   780,    -1,   169,   780,    -1,   780,
      -1,   637,    -1,   497,   780,   498,    -1,    60,   799,   796,
     798,   141,    -1,   797,    -1,   796,   797,    -1,   455,   747,
     412,   747,    -1,   137,   747,    -1,    -1,   747,    -1,    -1,
     826,    -1,   826,   803,    -1,   499,   821,    -1,   495,   747,
     496,    -1,   495,   802,   506,   802,   496,    -1,   747,    -1,
      -1,   801,    -1,   803,   801,    -1,    -1,   804,   801,    -1,
      40,    -1,    -1,   808,    -1,    -1,   809,    -1,   807,   501,
     809,    -1,   807,    -1,   807,   501,    -1,   747,    36,   836,
      -1,   747,     3,    -1,   747,    -1,   490,   811,   815,    -1,
     826,   499,   490,   811,   815,    -1,   146,   497,   819,   498,
      -1,   146,   826,    -1,   810,    -1,    -1,   747,    36,   826,
      -1,   812,    -1,   813,   501,   812,    -1,   813,    -1,   813,
     501,    -1,   342,   497,   814,   498,    -1,   342,   812,    -1,
      -1,   817,    -1,   816,   501,   817,    -1,   827,    -1,   826,
     803,    -1,   820,    -1,   818,   501,   820,    -1,   818,    -1,
     818,   501,    -1,   826,    -1,   835,    -1,   829,    -1,   826,
     803,    -1,   824,    -1,     4,    -1,   825,   804,    -1,     6,
      -1,     7,    -1,   822,   825,    -1,   822,   497,   782,   651,
     650,   498,   825,    -1,   720,   825,    -1,   736,   497,   747,
     498,   746,    -1,   736,   824,   746,    -1,   736,   825,   746,
      -1,   422,    -1,   157,    -1,   275,    -1,     9,    -1,     5,
      -1,     3,    -1,   895,    -1,   896,    -1,   826,    -1,     5,
      -1,     3,    -1,   895,    -1,   900,    -1,     3,    -1,   895,
      -1,   897,    -1,     3,    -1,   895,    -1,   898,    -1,   826,
      -1,   826,   832,    -1,   499,   821,    -1,   832,   499,   821,
      -1,   497,   818,   498,    -1,    -1,   828,    -1,     3,    -1,
     899,    -1,   895,    -1,   901,    -1,   835,    -1,     5,    -1,
     315,   820,   838,    36,   839,    -1,   497,   784,   498,    -1,
      -1,   636,    -1,   528,    -1,   618,    -1,   878,    -1,    93,
     360,   826,   841,    -1,    93,   360,   188,   270,   150,   826,
     841,    -1,   841,   842,    -1,    -1,   561,    -1,   843,    -1,
     548,    -1,   890,    -1,    93,   849,   198,   846,   847,   285,
     817,   845,   497,   545,   498,   848,   711,    -1,    93,   849,
     198,   846,   188,   270,   150,   589,   285,   817,   845,   497,
     545,   498,   848,   711,    -1,   826,    -1,   439,   844,    -1,
      -1,    82,    -1,    -1,   589,    -1,    -1,   459,   574,    -1,
      -1,   432,    -1,    -1,    29,   404,   705,   374,   360,   820,
      -1,    29,   404,   188,   150,   705,   374,   360,   820,    -1,
      29,   368,   817,   374,   360,   820,    -1,    29,   368,   188,
     150,   817,   374,   360,   820,    -1,    29,   451,   817,   374,
     360,   820,    -1,    29,   451,   188,   150,   817,   374,   360,
     820,    -1,   165,    68,    -1,    68,    -1,   152,   108,   825,
     626,    -1,   194,   108,   825,    -1,   151,   857,    -1,   151,
     861,   855,   857,    -1,   151,   449,   857,    -1,   151,   497,
     860,   498,   857,    -1,   449,    -1,    -1,   862,    -1,   555,
      -1,    -1,   636,    -1,   528,    -1,   618,    -1,   878,    -1,
     892,    -1,     3,    -1,   895,    -1,   899,    -1,   858,    -1,
     825,    -1,   863,    -1,   860,   501,   863,    -1,    32,    -1,
      31,    -1,   422,    -1,   157,    -1,   285,    -1,   859,    -1,
     864,   856,    -1,   858,    -1,   861,    -1,   374,   866,    -1,
     374,   236,   866,    -1,   374,   372,   866,    -1,   374,   175,
     866,    -1,   867,    -1,   888,   169,    97,    -1,   413,   480,
     869,    -1,   360,   825,    -1,   888,   415,   870,    -1,   888,
     486,   870,    -1,   888,   415,   115,    -1,   888,   486,   115,
      -1,   862,    -1,   555,    -1,   825,    -1,     3,    -1,   736,
     825,   746,    -1,   736,   497,   824,   498,   825,    -1,   555,
      -1,   115,    -1,   236,    -1,   868,    -1,   870,   501,   868,
      -1,   235,   872,    -1,   209,   872,    -1,   165,   209,   872,
      -1,   825,    -1,   826,    -1,   440,   875,   877,   855,    -1,
     440,   875,   877,   855,   817,    -1,   440,   875,   877,   855,
     882,    -1,   440,   497,   876,   498,    -1,   440,   497,   876,
     498,   817,   833,    -1,   861,    -1,   449,    -1,   168,    -1,
     170,    -1,     3,    -1,   170,    -1,    -1,   874,    -1,   876,
     501,   874,    -1,   168,    -1,    -1,   532,   120,   169,   879,
     881,   880,   537,    -1,   705,    -1,   705,   826,    -1,   705,
      36,   826,    -1,   456,   747,    -1,    -1,   439,   696,    -1,
      -1,   861,   855,    -1,   861,   855,   817,   833,    -1,   344,
     885,    -1,   888,    -1,    27,    -1,   884,    -1,   413,   480,
      -1,   417,   219,   231,    -1,   887,   636,    -1,   400,   636,
      -1,   400,   888,    -1,   887,   888,    -1,   887,   413,   480,
      -1,   887,   417,   219,   231,    -1,   887,    27,    -1,   887,
      -1,   378,    -1,   125,    -1,   826,    -1,   888,   499,   826,
      -1,    56,   750,    -1,    93,   606,   451,   817,   595,   848,
      36,   636,   891,    -1,    93,   290,   342,   606,   451,   817,
     595,   848,    36,   636,   891,    -1,    93,   606,   332,   451,
     817,   497,   599,   498,   848,    36,   636,   891,    -1,    93,
     290,   342,   606,   332,   451,   817,   497,   599,   498,   848,
      36,   636,   891,    -1,   459,    67,   288,    -1,   459,    59,
      67,   288,    -1,   459,   236,    67,   288,    -1,    -1,    93,
     606,   404,   894,    36,   636,   893,    -1,    93,   606,   404,
     188,   270,   150,   894,    36,   636,   893,    -1,    93,   290,
     342,   606,   404,   894,    36,   636,   893,    -1,   459,   107,
      -1,   459,   268,   107,    -1,    -1,   817,   595,   581,   573,
      -1,    19,    -1,    20,    -1,    21,    -1,    22,    -1,    23,
      -1,    24,    -1,    25,    -1,    26,    -1,    28,    -1,    29,
      -1,    30,    -1,    38,    -1,    39,    -1,    41,    -1,    42,
      -1,    43,    -1,    45,    -1,    46,    -1,    47,    -1,    54,
      -1,    55,    -1,    56,    -1,    57,    -1,    59,    -1,    62,
      -1,    63,    -1,    66,    -1,    68,    -1,    69,    -1,    70,
      -1,    71,    -1,    76,    -1,    77,    -1,    78,    -1,    79,
      -1,    80,    -1,    81,    -1,    83,    -1,    84,    -1,    85,
      -1,    87,    -1,    88,    -1,    89,    -1,    90,    -1,    91,
      -1,    92,    -1,    95,    -1,    96,    -1,    97,    -1,   105,
      -1,   106,    -1,   107,    -1,   108,    -1,   109,    -1,   110,
      -1,   111,    -1,   114,    -1,   116,    -1,   118,    -1,   119,
      -1,   120,    -1,   121,    -1,   122,    -1,   123,    -1,   125,
      -1,   126,    -1,   127,    -1,   128,    -1,   129,    -1,   132,
      -1,   133,    -1,   134,    -1,   135,    -1,   136,    -1,   138,
      -1,   139,    -1,   140,    -1,   142,    -1,   143,    -1,   144,
      -1,   146,    -1,   147,    -1,   148,    -1,   149,    -1,   151,
      -1,   152,    -1,   153,    -1,   154,    -1,   155,    -1,   158,
      -1,   160,    -1,   161,    -1,   163,    -1,   165,    -1,   167,
      -1,   171,    -1,   172,    -1,   173,    -1,   175,    -1,   177,
      -1,   181,    -1,   183,    -1,   184,    -1,   185,    -1,   186,
      -1,   187,    -1,   188,    -1,   189,    -1,   191,    -1,   192,
      -1,   193,    -1,   194,    -1,   196,    -1,   197,    -1,   198,
      -1,   199,    -1,   200,    -1,   201,    -1,   203,    -1,   206,
      -1,   207,    -1,   208,    -1,   209,    -1,   210,    -1,   216,
      -1,   219,    -1,   221,    -1,   222,    -1,   223,    -1,   224,
      -1,   225,    -1,   226,    -1,   229,    -1,   231,    -1,   234,
      -1,   235,    -1,   236,    -1,   239,    -1,   240,    -1,   241,
      -1,   242,    -1,   243,    -1,   245,    -1,   246,    -1,   247,
      -1,   248,    -1,   249,    -1,   250,    -1,   251,    -1,   252,
      -1,   253,    -1,   254,    -1,   255,    -1,   256,    -1,   257,
      -1,   258,    -1,   259,    -1,   260,    -1,   261,    -1,   262,
      -1,   266,    -1,   267,    -1,   268,    -1,   271,    -1,   272,
      -1,   274,    -1,   277,    -1,   279,    -1,   280,    -1,   281,
      -1,   283,    -1,   284,    -1,   287,    -1,   288,    -1,   289,
      -1,   292,    -1,   295,    -1,   298,    -1,   299,    -1,   300,
      -1,   301,    -1,   302,    -1,   303,    -1,   304,    -1,   305,
      -1,   306,    -1,   307,    -1,   309,    -1,   310,    -1,   312,
      -1,   313,    -1,   315,    -1,   316,    -1,   317,    -1,   319,
      -1,   320,    -1,   321,    -1,   322,    -1,   323,    -1,   324,
      -1,   326,    -1,   327,    -1,   328,    -1,   330,    -1,   331,
      -1,   332,    -1,   333,    -1,   335,    -1,   336,    -1,   337,
      -1,   338,    -1,   339,    -1,   340,    -1,   341,    -1,   342,
      -1,   343,    -1,   344,    -1,   345,    -1,   346,    -1,   349,
      -1,   350,    -1,   352,    -1,   353,    -1,   354,    -1,   356,
      -1,   357,    -1,   358,    -1,   359,    -1,   360,    -1,   361,
      -1,   362,    -1,   363,    -1,   364,    -1,   365,    -1,   366,
      -1,   368,    -1,   369,    -1,   370,    -1,   371,    -1,   372,
      -1,   374,    -1,   376,    -1,   377,    -1,   378,    -1,   380,
      -1,   381,    -1,   383,    -1,   385,    -1,   386,    -1,   387,
      -1,   388,    -1,   389,    -1,   390,    -1,   391,    -1,   392,
      -1,   393,    -1,   394,    -1,   395,    -1,   396,    -1,   398,
      -1,   400,    -1,   402,    -1,   403,    -1,   405,    -1,   407,
      -1,   408,    -1,   409,    -1,   410,    -1,   411,    -1,   417,
      -1,   418,    -1,   420,    -1,   423,    -1,   424,    -1,   426,
      -1,   427,    -1,   428,    -1,   429,    -1,   430,    -1,   433,
      -1,   434,    -1,   435,    -1,   436,    -1,   437,    -1,   440,
      -1,   441,    -1,   442,    -1,   443,    -1,   444,    -1,   448,
      -1,   450,    -1,   451,    -1,   452,    -1,   453,    -1,   454,
      -1,   457,    -1,   460,    -1,   461,    -1,   462,    -1,   463,
      -1,   464,    -1,   465,    -1,   477,    -1,   478,    -1,   479,
      -1,   480,    -1,    48,    -1,    49,    -1,    51,    -1,    52,
      -1,    64,    -1,    65,    -1,    72,    -1,   112,    -1,   113,
      -1,   150,    -1,   156,    -1,   162,    -1,   179,    -1,   180,
      -1,   205,    -1,   211,    -1,   212,    -1,   214,    -1,   244,
      -1,   263,    -1,   265,    -1,   269,    -1,   276,    -1,   278,
      -1,   293,    -1,   297,    -1,   311,    -1,   314,    -1,   329,
      -1,   355,    -1,   375,    -1,   382,    -1,   397,    -1,   399,
      -1,   413,    -1,   414,    -1,   419,    -1,   421,    -1,   425,
      -1,   445,    -1,   446,    -1,   466,    -1,   467,    -1,   468,
      -1,   469,    -1,   470,    -1,   471,    -1,   472,    -1,   473,
      -1,   474,    -1,   475,    -1,   476,    -1,    44,    -1,    50,
      -1,    74,    -1,    82,    -1,    94,    -1,   101,    -1,   168,
      -1,   170,    -1,   174,    -1,   190,    -1,   204,    -1,   217,
      -1,   218,    -1,   220,    -1,   230,    -1,   232,    -1,   244,
      -1,   264,    -1,   273,    -1,   294,    -1,   296,    -1,   351,
      -1,   379,    -1,   397,    -1,   406,    -1,   449,    -1,    44,
      -1,    50,    -1,    74,    -1,    82,    -1,    94,    -1,   101,
      -1,   168,    -1,   170,    -1,   174,    -1,   190,    -1,   204,
      -1,   217,    -1,   218,    -1,   220,    -1,   230,    -1,   232,
      -1,   264,    -1,   273,    -1,   294,    -1,   296,    -1,   351,
      -1,   379,    -1,   406,    -1,   425,    -1,   449,    -1,    48,
      -1,    49,    -1,    51,    -1,    52,    -1,    65,    -1,    64,
      -1,    72,    -1,   112,    -1,   113,    -1,   150,    -1,   156,
      -1,   162,    -1,   179,    -1,   180,    -1,   205,    -1,   212,
      -1,   214,    -1,   211,    -1,   244,    -1,   263,    -1,   265,
      -1,   269,    -1,   276,    -1,   278,    -1,   293,    -1,   297,
      -1,   311,    -1,   314,    -1,   329,    -1,   355,    -1,   375,
      -1,   382,    -1,   397,    -1,   399,    -1,   413,    -1,   414,
      -1,   419,    -1,   421,    -1,   425,    -1,   445,    -1,   446,
      -1,   466,    -1,   467,    -1,   468,    -1,   469,    -1,   470,
      -1,   471,    -1,   472,    -1,   473,    -1,   474,    -1,   475,
      -1,   476,    -1,    44,    -1,    50,    -1,    74,    -1,    82,
      -1,    94,    -1,   101,    -1,   168,    -1,   170,    -1,   174,
      -1,   190,    -1,   204,    -1,   217,    -1,   218,    -1,   220,
      -1,   230,    -1,   232,    -1,   244,    -1,   264,    -1,   273,
      -1,   294,    -1,   296,    -1,   351,    -1,   379,    -1,   397,
      -1,   406,    -1,   425,    -1,   449,    -1,    27,    -1,    31,
      -1,    32,    -1,    33,    -1,    34,    -1,    35,    -1,    36,
      -1,    37,    -1,    40,    -1,    53,    -1,    58,    -1,    60,
      -1,    61,    -1,    67,    -1,    73,    -1,    75,    -1,    86,
      -1,    93,    -1,    98,    -1,    99,    -1,   100,    -1,   102,
      -1,   103,    -1,   104,    -1,   115,    -1,   117,    -1,   124,
      -1,   130,    -1,   131,    -1,   137,    -1,   141,    -1,   145,
      -1,   157,    -1,   159,    -1,   164,    -1,   166,    -1,   169,
      -1,   176,    -1,   178,    -1,   182,    -1,   195,    -1,   202,
      -1,   213,    -1,   215,    -1,   227,    -1,   228,    -1,   233,
      -1,   237,    -1,   238,    -1,   270,    -1,   275,    -1,   282,
      -1,   285,    -1,   286,    -1,   290,    -1,   291,    -1,   308,
      -1,   318,    -1,   325,    -1,   334,    -1,   347,    -1,   348,
      -1,   367,    -1,   373,    -1,   384,    -1,   401,    -1,   404,
      -1,   412,    -1,   415,    -1,   416,    -1,   422,    -1,   431,
      -1,   432,    -1,   438,    -1,   439,    -1,   447,    -1,   455,
      -1,   456,    -1,   458,    -1,   459,    -1
};

/* YYRLINE[YYN] -- source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,   467,   467,   483,   495,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,   537,   539,
       9,    18,    27,    36,    45,    54,    63,    72,    85,    87,
      93,    94,    99,   103,   107,   118,   126,   130,   139,   148,
     157,   166,   175,   184,   192,   200,   209,   218,   227,   236,
     253,   262,   271,   280,   290,   303,   319,   328,   336,   351,
     359,   369,   379,   386,   393,   401,   408,   419,   420,   425,
     429,   434,   439,   447,   448,   453,   457,   458,   459,     7,
      13,    19,    25,     7,    17,    18,    21,    23,     6,    15,
      25,    35,    45,    55,    65,    75,    85,    95,   106,   117,
     127,   140,   141,     8,    21,    27,    34,    40,    47,    57,
      61,    70,    79,    88,    95,    96,   101,   113,   118,   143,
     153,   163,   169,   180,   191,   206,   207,   213,   214,   219,
     220,   226,   227,   231,   232,   237,   239,   245,   246,   250,
     251,   254,   255,   260,     7,    14,    22,     9,    19,    32,
      33,     7,    14,    31,    51,    52,     9,    17,    29,    30,
      34,    35,    36,    41,    42,    43,    48,    52,    56,    60,
      64,    68,    72,    76,    80,    84,    88,    92,    97,   101,
     105,   112,   113,   117,   118,   119,     2,     9,    15,    21,
      28,    35,    45,    46,    47,     7,    21,    36,    56,    57,
      84,    85,    86,    87,    88,    89,    93,    94,    99,   104,
     105,   106,   107,   108,   113,   120,   121,   122,   139,   146,
     153,   163,   173,   185,   193,   202,   211,   234,   253,   260,
     265,   267,   269,   271,   274,   279,   280,   284,   285,   286,
     287,   292,   296,   297,   302,   309,   314,   315,   316,   317,
     318,   319,   320,   321,   327,   328,   332,   337,   344,   351,
     358,   370,   371,   372,   373,   377,   382,   383,   384,   389,
     394,   395,   396,   397,   398,   399,   404,   427,   431,   438,
     439,   443,   447,   448,   449,   453,   457,   465,   466,   471,
     472,   473,   477,   485,   486,   491,   492,   496,   501,   505,
     509,   514,   522,   523,   527,   528,   532,   533,   539,   550,
     563,   577,   591,   605,   619,   642,   646,   653,   657,   665,
     670,   677,   687,   688,   689,   690,   691,   698,   705,   706,
     711,   712,     9,    19,    29,    39,    49,    59,    69,    79,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   113,   114,   115,   116,
     117,   118,   119,   124,   125,   130,   131,   132,   137,   138,
     139,   142,   143,     8,    20,    36,    37,    41,    45,     7,
       1,    30,    53,    54,    59,    63,    68,    72,    80,    81,
      85,    86,    91,    92,    96,    97,   102,   103,   104,   105,
     106,   111,   119,   123,   128,   129,   134,   138,   143,   147,
     151,   155,   159,   163,   167,   171,   175,   179,   183,   187,
     191,   195,   203,   209,   210,   211,   216,   220,    47,    48,
      52,    53,    68,    69,    76,    84,    92,   100,   108,   116,
     127,   128,   155,   171,   188,   189,   208,   212,   216,   233,
     240,   247,   257,   258,   261,   273,   284,   292,   297,   302,
     307,   312,   320,   328,   333,   338,   345,   346,   350,   351,
     352,   359,   360,   364,   365,   369,   370,   371,   375,   376,
     380,   381,   391,   404,   405,   408,   417,   428,   429,   430,
     433,   434,   435,   439,   440,   441,   442,   446,   447,   451,
     453,   469,   471,   476,   479,   487,   491,   495,   499,   503,
     507,   514,   519,   526,   527,   531,   535,   539,   543,   550,
     557,   558,   563,   564,   568,   569,   574,   576,   578,   583,
     603,   604,   606,   611,   612,   616,   617,   620,   621,   646,
     647,   652,   657,   661,   662,   666,   667,   671,   672,   673,
     674,   675,   679,   692,   699,   706,   713,   714,   718,   719,
     723,   724,   728,   729,   733,   734,   738,   739,   743,   754,
     755,   756,   757,   761,   762,   767,   768,   769,   778,   784,
     793,   794,   807,   808,   812,   813,   817,   818,   824,   830,
     838,   846,   855,   864,   868,   894,   898,   911,   925,   940,
     952,   968,   974,   979,   985,   992,   993,  1001,  1005,  1009,
    1015,  1022,  1027,  1028,  1029,  1030,  1034,  1035,  1047,  1048,
    1053,  1060,  1067,  1074,  1106,  1117,  1130,  1135,  1136,  1139,
    1140,  1143,  1144,  1149,  1150,  1155,  1159,  1165,  1186,  1194,
    1207,  1210,  1214,  1214,  1216,  1221,  1228,  1233,  1239,  1244,
    1250,  1256,  1265,  1267,  1270,  1274,  1275,  1276,  1277,  1278,
    1279,  1284,  1304,  1305,  1306,  1307,  1318,  1332,  1333,  1339,
    1344,  1349,  1354,  1359,  1364,  1369,  1374,  1380,  1386,  1392,
    1399,  1421,  1430,  1434,  1442,  1446,  1454,  1466,  1487,  1491,
    1497,  1501,  1514,  1522,  1532,  1534,  1536,  1538,  1540,  1542,
    1547,  1548,  1555,  1564,  1572,  1581,  1592,  1600,  1601,  1602,
    1606,  1606,  1609,  1609,  1612,  1612,  1615,  1615,  1618,  1618,
    1621,  1621,  1624,  1624,  1627,  1627,  1630,  1632,  1634,  1636,
    1638,  1640,  1642,  1644,  1646,  1651,  1656,  1662,  1669,  1674,
    1680,  1686,  1717,  1719,  1721,  1729,  1744,  1746,  1748,  1750,
    1752,  1754,  1756,  1758,  1760,  1762,  1764,  1766,  1768,  1770,
    1773,  1775,  1777,  1780,  1782,  1784,  1786,  1789,  1794,  1799,
    1806,  1811,  1818,  1823,  1830,  1835,  1843,  1851,  1859,  1867,
    1885,  1893,  1901,  1909,  1917,  1925,  1929,  1933,  1937,  1945,
    1961,  1969,  1977,  1985,  1993,  2001,  2009,  2013,  2017,  2021,
    2025,  2033,  2041,  2049,  2057,  2077,  2099,  2110,  2117,  2131,
    2147,  2149,  2151,  2153,  2155,  2157,  2159,  2161,  2163,  2165,
    2167,  2169,  2171,  2173,  2175,  2177,  2179,  2181,  2183,  2185,
    2189,  2193,  2197,  2211,  2212,  2213,  2220,  2232,  2247,  2259,
    2261,  2273,  2284,  2308,  2319,  2328,  2332,  2339,  2347,  2355,
    2366,  2374,  2402,  2438,  2449,  2450,  2457,  2463,  2467,  2471,
    2475,  2479,  2483,  2487,  2491,  2495,  2499,  2503,  2507,  2511,
    2515,  2519,  2523,  2525,  2527,  2531,  2540,  2545,  2552,  2567,
    2574,  2578,  2582,  2586,  2590,  2604,  2605,  2609,  2610,  2614,
    2615,  2622,  2623,  2627,  2628,  2633,  2641,  2643,  2657,  2660,
    2687,  2688,  2691,  2692,  2703,  2709,  2716,  2725,  2742,  2787,
    2795,  2803,  2811,  2819,  2840,  2841,  2844,  2845,  2849,  2859,
    2860,  2864,  2865,  2869,  2870,  2871,  2874,  2875,  2878,  2879,
    2880,  2881,  2882,  2883,  2884,  2885,  2886,  2887,  2888,  2889,
    2892,  2894,  2899,  2901,  2906,  2908,  2910,  2912,  2914,  2916,
    2918,  2920,  2934,  2936,  2940,  2944,  2951,  2956,  2974,  2979,
    2987,  2991,  2997,  3001,  3010,  3021,  3022,  3026,  3030,  3037,
    3038,  3039,  3040,  3041,  3042,  3043,  3044,  3045,  3046,  3056,
    3060,  3067,  3074,  3075,  3091,  3095,  3100,  3104,  3119,  3124,
    3128,  3131,  3134,  3135,  3136,  3139,  3146,  3156,  3170,  3171,
    3175,  3186,  3187,  3190,  3191,  3194,  3198,  3205,  3209,  3217,
    3228,  3229,  3233,  3234,  3238,  3239,  3242,  3243,  3253,  3254,
    3258,  3259,  3263,  3264,  3267,  3283,  3291,  3299,  3314,  3332,
    3333,  3336,  3337,  3340,  3344,  3345,  3349,  3350,  3353,  3354,
    3355,  3365,  3366,  3377,  3381,  3408,  3410,  3416,  3417,  3420,
    3422,  3432,  3435,  3446,  3450,  3454,  3466,  3470,  3479,  3486,
    3524,  3528,  3532,  3536,  3540,  3544,  3548,  3554,  3555,  3571,
    3572,  3573,  3576,  3577,  3583,  3584,  3585,  3588,  3589,  3590,
    3593,  3594,  3595,  3598,  3599,  3602,  3604,  3609,  3610,  3613,
    3621,  3622,  3623,  3624,  3627,  3628,     7,    18,    19,    23,
      24,    25,    26,     7,    16,    34,    41,    46,    47,    48,
      49,     8,    33,    62,    66,    67,    72,    73,    78,    79,
      83,    84,    89,    90,     7,    16,    25,    34,    43,    52,
       5,    11,     7,    20,     9,    16,    26,    33,    44,    45,
      50,    51,    52,    57,    58,    59,    60,    61,    65,    66,
      67,    72,    73,    78,    82,    90,    91,    96,    97,    98,
     104,   109,   117,   118,    10,    16,    22,    28,    38,    39,
      47,    58,    70,    78,    86,    93,   103,   105,   111,   115,
     119,   134,   141,   142,   143,   147,   148,     7,    14,    20,
      28,    29,     8,    22,    36,    48,    56,    70,    71,    72,
      73,    74,    87,    88,    93,    94,    98,    99,     7,    21,
      25,    32,    43,    44,    50,    51,     9,    19,     2,     7,
      14,    24,    25,    32,     3,    10,    17,    24,    31,    38,
      45,    52,    61,    61,    63,    64,     6,     8,    21,    34,
      52,    74,    75,    76,    77,    11,    24,    37,    54,    55,
      56,    61,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    74,    74,
      74,    74,    74,    74,    74,    74,    74,    74,    75,    75,
      75,    75,    75,    75,    75,    75,    75,    75,    75,    75,
      75,    75,    75,    75,    75,    75,    75,    75,    75,    75,
      75,    75,    75,    75,    75,    75,    75,    75,    75,    75,
      75,    75,    75,    75,    75,    75,    75,    75,    75,    75,
      75,    75,    75,    75,    75,    75,    75,    75,    75,    75,
      76,    76,    76,    76,    76,    76,    76,    76,    76,    76,
      76,    76,    76,    76,    76,    76,    76,    76,    76,    76,
      76,    76,    76,    76,    76,    76,    77,    77,    77,    77,
      77,    77,    77,    77,    77,    77,    77,    77,    77,    77,
      77,    77,    77,    77,    77,    77,    77,    77,    77,    77,
      77,    78,    78,    78,    78,    78,    78,    78,    78,    78,
      78,    78,    78,    78,    78,    78,    78,    78,    78,    78,
      78,    78,    78,    78,    78,    78,    78,    78,    78,    78,
      78,    78,    78,    78,    78,    78,    78,    78,    78,    78,
      78,    78,    78,    78,    78,    78,    78,    78,    78,    78,
      78,    78,    78,    79,    79,    79,    79,    79,    79,    79,
      79,    79,    79,    79,    79,    79,    79,    79,    79,    79,
      79,    79,    79,    79,    79,    79,    79,    79,    79,    79,
      80,    80,    80,    80,    80,    80,    80,    80,    80,    80,
      80,    80,    80,    80,    80,    80,    80,    80,    80,    80,
      80,    80,    80,    80,    80,    80,    80,    80,    80,    80,
      80,    80,    80,    80,    80,    80,    80,    80,    80,    80,
      80,    80,    80,    80,    80,    80,    80,    80,    80,    80,
      80,    80,    80,    80,    80,    80,    80,    80,    80,    80,
      80,    80,    80,    80,    80,    80,    80,    80,    80,    80,
      80,    80,    80,    80,    80,    80,    80,    80,    80,    80
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || YYTOKEN_TABLE
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "IDENT", "FCONST", "SCONST", "BCONST",
  "XCONST", "Op", "ICONST", "PARAM", "TYPECAST", "DOT_DOT", "COLON_EQUALS",
  "EQUALS_GREATER", "LAMBDA_ARROW", "LESS_EQUALS", "GREATER_EQUALS",
  "NOT_EQUALS", "ABORT_P", "ABSOLUTE_P", "ACCESS", "ACTION", "ADD_P",
  "ADMIN", "AFTER", "AGGREGATE", "ALL", "ALSO", "ALTER", "ALWAYS",
  "ANALYSE", "ANALYZE", "AND", "ANY", "ARRAY", "AS", "ASC_P", "ASSERTION",
  "ASSIGNMENT", "ASYMMETRIC", "AT", "ATTACH", "ATTRIBUTE", "AUTHORIZATION",
  "BACKWARD", "BEFORE", "BEGIN_P", "BETWEEN", "BIGINT", "BINARY", "BIT",
  "BOOLEAN_P", "BOTH", "BY", "CACHE", "CALL_P", "CALLED", "CASCADE",
  "CASCADED", "CASE", "CAST", "CATALOG_P", "CHAIN", "CHAR_P", "CHARACTER",
  "CHARACTERISTICS", "CHECK_P", "CHECKPOINT", "CLASS", "CLOSE", "CLUSTER",
  "COALESCE", "COLLATE", "COLLATION", "COLUMN", "COLUMNS", "COMMENT",
  "COMMENTS", "COMMIT", "COMMITTED", "COMPRESSION", "CONCURRENTLY",
  "CONFIGURATION", "CONFLICT", "CONNECTION", "CONSTRAINT", "CONSTRAINTS",
  "CONTENT_P", "CONTINUE_P", "CONVERSION_P", "COPY", "COST", "CREATE_P",
  "CROSS", "CSV", "CUBE", "CURRENT_P", "CURRENT_CATALOG", "CURRENT_DATE",
  "CURRENT_ROLE", "CURRENT_SCHEMA", "CURRENT_TIME", "CURRENT_TIMESTAMP",
  "CURRENT_USER", "CURSOR", "CYCLE", "DATA_P", "DATABASE", "DAY_P",
  "DAYS_P", "DEALLOCATE", "DEC", "DECIMAL_P", "DECLARE", "DEFAULT",
  "DEFAULTS", "DEFERRABLE", "DEFERRED", "DEFINER", "DELETE_P", "DELIMITER",
  "DELIMITERS", "DEPENDS", "DESC_P", "DESCRIBE", "DETACH", "DICTIONARY",
  "DISABLE_P", "DISCARD", "DISTINCT", "DO", "DOCUMENT_P", "DOMAIN_P",
  "DOUBLE_P", "DROP", "EACH", "ELSE", "ENABLE_P", "ENCODING", "ENCRYPTED",
  "END_P", "ENUM_P", "ESCAPE", "EVENT", "EXCEPT", "EXCLUDE", "EXCLUDING",
  "EXCLUSIVE", "EXECUTE", "EXISTS", "EXPLAIN", "EXPORT_P", "EXPORT_STATE",
  "EXTENSION", "EXTERNAL", "EXTRACT", "FALSE_P", "FAMILY", "FETCH",
  "FILTER", "FIRST_P", "FLOAT_P", "FOLLOWING", "FOR", "FORCE", "FOREIGN",
  "FORWARD", "FREEZE", "FROM", "FULL", "FUNCTION", "FUNCTIONS",
  "GENERATED", "GLOB", "GLOBAL", "GRANT", "GRANTED", "GROUP_P", "GROUPING",
  "GROUPING_ID", "HANDLER", "HAVING", "HEADER_P", "HOLD", "HOUR_P",
  "HOURS_P", "IDENTITY_P", "IF_P", "IGNORE_P", "ILIKE", "IMMEDIATE",
  "IMMUTABLE", "IMPLICIT_P", "IMPORT_P", "IN_P", "INCLUDING", "INCREMENT",
  "INDEX", "INDEXES", "INHERIT", "INHERITS", "INITIALLY", "INLINE_P",
  "INNER_P", "INOUT", "INPUT_P", "INSENSITIVE", "INSERT", "INSTALL",
  "INSTEAD", "INT_P", "INTEGER", "INTERSECT", "INTERVAL", "INTO",
  "INVOKER", "IS", "ISNULL", "ISOLATION", "JOIN", "JSON", "KEY", "LABEL",
  "LANGUAGE", "LARGE_P", "LAST_P", "LATERAL_P", "LEADING", "LEAKPROOF",
  "LEFT", "LEVEL", "LIKE", "LIMIT", "LISTEN", "LOAD", "LOCAL", "LOCALTIME",
  "LOCALTIMESTAMP", "LOCATION", "LOCK_P", "LOCKED", "LOGGED", "MACRO",
  "MAP", "MAPPING", "MATCH", "MATERIALIZED", "MAXVALUE", "METHOD",
  "MICROSECOND_P", "MICROSECONDS_P", "MILLISECOND_P", "MILLISECONDS_P",
  "MINUTE_P", "MINUTES_P", "MINVALUE", "MODE", "MONTH_P", "MONTHS_P",
  "MOVE", "NAME_P", "NAMES", "NATIONAL", "NATURAL", "NCHAR", "NEW", "NEXT",
  "NO", "NONE", "NOT", "NOTHING", "NOTIFY", "NOTNULL", "NOWAIT", "NULL_P",
  "NULLIF", "NULLS_P", "NUMERIC", "OBJECT_P", "OF", "OFF", "OFFSET",
  "OIDS", "OLD", "ON", "ONLY", "OPERATOR", "OPTION", "OPTIONS", "OR",
  "ORDER", "ORDINALITY", "OUT_P", "OUTER_P", "OVER", "OVERLAPS", "OVERLAY",
  "OVERRIDING", "OWNED", "OWNER", "PARALLEL", "PARSER", "PARTIAL",
  "PARTITION", "PASSING", "PASSWORD", "PERCENT", "PLACING", "PLANS",
  "POLICY", "POSITION", "PRAGMA_P", "PRECEDING", "PRECISION", "PREPARE",
  "PREPARED", "PRESERVE", "PRIMARY", "PRIOR", "PRIVILEGES", "PROCEDURAL",
  "PROCEDURE", "PROGRAM", "PUBLICATION", "QUALIFY", "QUOTE", "RANGE",
  "READ_P", "REAL", "REASSIGN", "RECHECK", "RECURSIVE", "REF",
  "REFERENCES", "REFERENCING", "REFRESH", "REINDEX", "RELATIVE_P",
  "RELEASE", "RENAME", "REPEATABLE", "REPLACE", "REPLICA", "RESET",
  "RESPECT_P", "RESTART", "RESTRICT", "RETURNING", "RETURNS", "REVOKE",
  "RIGHT", "ROLE", "ROLLBACK", "ROLLUP", "ROW", "ROWS", "RULE", "SAMPLE",
  "SAVEPOINT", "SCHEMA", "SCHEMAS", "SCROLL", "SEARCH", "SECOND_P",
  "SECONDS_P", "SECURITY", "SELECT", "SEQUENCE", "SEQUENCES",
  "SERIALIZABLE", "SERVER", "SESSION", "SESSION_USER", "SET", "SETOF",
  "SETS", "SHARE", "SHOW", "SIMILAR", "SIMPLE", "SKIP", "SMALLINT",
  "SNAPSHOT", "SOME", "SQL_P", "STABLE", "STANDALONE_P", "START",
  "STATEMENT", "STATISTICS", "STDIN", "STDOUT", "STORAGE", "STORED",
  "STRICT_P", "STRIP_P", "STRUCT", "SUBSCRIPTION", "SUBSTRING",
  "SUMMARIZE", "SYMMETRIC", "SYSID", "SYSTEM_P", "TABLE", "TABLES",
  "TABLESAMPLE", "TABLESPACE", "TEMP", "TEMPLATE", "TEMPORARY", "TEXT_P",
  "THEN", "TIME", "TIMESTAMP", "TO", "TRAILING", "TRANSACTION",
  "TRANSFORM", "TREAT", "TRIGGER", "TRIM", "TRUE_P", "TRUNCATE", "TRUSTED",
  "TRY_CAST", "TYPE_P", "TYPES_P", "UNBOUNDED", "UNCOMMITTED",
  "UNENCRYPTED", "UNION", "UNIQUE", "UNKNOWN", "UNLISTEN", "UNLOGGED",
  "UNTIL", "UPDATE", "USER", "USING", "VACUUM", "VALID", "VALIDATE",
  "VALIDATOR", "VALUE_P", "VALUES", "VARCHAR", "VARIADIC", "VARYING",
  "VERBOSE", "VERSION_P", "VIEW", "VIEWS", "VIRTUAL", "VOLATILE", "WHEN",
  "WHERE", "WHITESPACE_P", "WINDOW", "WITH", "WITHIN", "WITHOUT", "WORK",
  "WRAPPER", "WRITE_P", "XML_P", "XMLATTRIBUTES", "XMLCONCAT",
  "XMLELEMENT", "XMLEXISTS", "XMLFOREST", "XMLNAMESPACES", "XMLPARSE",
  "XMLPI", "XMLROOT", "XMLSERIALIZE", "XMLTABLE", "YEAR_P", "YEARS_P",
  "YES_P", "ZONE", "NOT_LA", "NULLS_LA", "WITH_LA", "'<'", "'>'", "'='",
  "POSTFIXOP", "'+'", "'-'", "'*'", "'/'", "'%'", "'^'", "UMINUS", "'['",
  "']'", "'('", "')'", "'.'", "';'", "','", "'{'", "'}'", "'#'", "'?'",
  "':'", "$accept", "stmtblock", "stmtmulti", "stmt", "AlterTableStmt",
  "alter_identity_column_option_list", "alter_column_default",
  "alter_identity_column_option", "alter_generic_option_list",
  "alter_table_cmd", "alter_using", "alter_generic_option_elem",
  "alter_table_cmds", "alter_generic_options", "opt_set_data",
  "DeallocateStmt", "CreateEnumStmt", "opt_enum_val_list", "enum_val_list",
  "RenameStmt", "opt_column", "InsertStmt", "insert_rest", "insert_target",
  "opt_conf_expr", "opt_with_clause", "insert_column_item", "set_clause",
  "opt_on_conflict", "index_elem", "returning_clause", "override_kind",
  "set_target_list", "opt_collate", "opt_class", "insert_column_list",
  "set_clause_list", "set_clause_list_opt_comma", "index_params",
  "set_target", "PragmaStmt", "CreateSeqStmt", "OptSeqOptList",
  "ExecuteStmt", "execute_param_clause", "AlterSeqStmt", "SeqOptList",
  "opt_with", "NumericOnly", "SeqOptElem", "opt_by", "SignedIconst",
  "TransactionStmt", "opt_transaction", "CreateStmt",
  "ConstraintAttributeSpec", "def_arg", "OptParenthesizedSeqOptList",
  "generic_option_arg", "key_action", "ColConstraint", "ColConstraintElem",
  "generic_option_elem", "key_update", "key_actions",
  "create_generic_options", "OnCommitOption", "reloptions",
  "opt_no_inherit", "TableConstraint", "TableLikeOption", "reloption_list",
  "ExistingIndex", "ConstraintAttr", "OptWith", "definition",
  "TableLikeOptionList", "generic_option_name", "ConstraintAttributeElem",
  "columnDef", "generic_option_list", "def_list", "index_name",
  "TableElement", "def_elem", "opt_definition", "OptTableElementList",
  "columnElem", "opt_column_list", "ColQualList", "key_delete",
  "reloption_elem", "columnList", "columnList_opt_comma", "func_type",
  "ConstraintElem", "TableElementList", "key_match", "TableLikeClause",
  "OptTemp", "generated_when", "DropStmt", "drop_type_any_name",
  "drop_type_name", "any_name_list", "opt_drop_behavior",
  "drop_type_name_on_any_name", "type_name_list", "CreateFunctionStmt",
  "macro_alias", "param_list", "UpdateStmt", "CopyStmt", "copy_from",
  "copy_delimiter", "copy_generic_opt_arg_list", "opt_using", "opt_as",
  "opt_program", "copy_options", "copy_generic_opt_arg",
  "copy_generic_opt_elem", "opt_oids", "copy_opt_list", "opt_binary",
  "copy_opt_item", "copy_generic_opt_arg_list_item", "copy_file_name",
  "copy_generic_opt_list", "SelectStmt", "select_with_parens",
  "select_no_parens", "select_clause", "simple_select", "with_clause",
  "cte_list", "common_table_expr", "into_clause", "OptTempTableName",
  "opt_table", "all_or_distinct", "distinct_clause", "opt_all_clause",
  "opt_ignore_nulls", "opt_sort_clause", "sort_clause", "sortby_list",
  "sortby", "opt_asc_desc", "opt_nulls_order", "select_limit",
  "opt_select_limit", "limit_clause", "offset_clause", "sample_count",
  "sample_clause", "opt_sample_func", "tablesample_entry",
  "tablesample_clause", "opt_tablesample_clause", "opt_repeatable_clause",
  "select_limit_value", "select_offset_value", "select_fetch_first_value",
  "I_or_F_const", "row_or_rows", "first_or_next", "group_clause",
  "group_by_list", "group_by_list_opt_comma", "group_by_item",
  "empty_grouping_set", "rollup_clause", "cube_clause",
  "grouping_sets_clause", "grouping_or_grouping_id", "having_clause",
  "qualify_clause", "for_locking_clause", "opt_for_locking_clause",
  "for_locking_items", "for_locking_item", "for_locking_strength",
  "locked_rels_list", "opt_nowait_or_skip", "values_clause",
  "values_clause_opt_comma", "from_clause", "from_list",
  "from_list_opt_comma", "table_ref", "joined_table", "alias_clause",
  "opt_alias_clause", "func_alias_clause", "join_type", "join_outer",
  "join_qual", "relation_expr", "func_table", "rowsfrom_item",
  "rowsfrom_list", "opt_col_def_list", "opt_ordinality", "where_clause",
  "TableFuncElementList", "TableFuncElement", "opt_collate_clause",
  "colid_type_list", "RowOrStruct", "Typename", "opt_array_bounds",
  "SimpleTypename", "ConstTypename", "GenericType", "opt_type_modifiers",
  "Numeric", "opt_float", "Bit", "ConstBit", "BitWithLength",
  "BitWithoutLength", "Character", "ConstCharacter", "CharacterWithLength",
  "CharacterWithoutLength", "character", "opt_varying", "ConstDatetime",
  "ConstInterval", "opt_timezone", "year_keyword", "month_keyword",
  "day_keyword", "hour_keyword", "minute_keyword", "second_keyword",
  "millisecond_keyword", "microsecond_keyword", "opt_interval", "a_expr",
  "b_expr", "c_expr", "func_application", "func_expr",
  "func_expr_windowless", "func_expr_common_subexpr",
  "within_group_clause", "filter_clause", "export_clause", "window_clause",
  "window_definition_list", "window_definition", "over_clause",
  "window_specification", "opt_existing_window_name",
  "opt_partition_clause", "opt_frame_clause", "frame_extent",
  "frame_bound", "qualified_row", "row", "dict_arg", "dict_arguments",
  "dict_arguments_opt_comma", "sub_type", "all_Op", "MathOp", "qual_Op",
  "qual_all_Op", "subquery_Op", "any_operator", "expr_list",
  "expr_list_opt_comma", "opt_expr_list_opt_comma", "func_arg_list",
  "func_arg_expr", "type_list", "extract_list", "extract_arg",
  "overlay_list", "overlay_placing", "position_list", "substr_list",
  "substr_from", "substr_for", "trim_list", "in_expr", "case_expr",
  "when_clause_list", "when_clause", "case_default", "case_arg",
  "columnref", "indirection_el", "opt_slice_bound", "indirection",
  "opt_indirection", "opt_asymmetric", "opt_target_list_opt_comma",
  "target_list", "target_list_opt_comma", "target_el", "except_list",
  "opt_except_list", "replace_list_el", "replace_list",
  "replace_list_opt_comma", "opt_replace_list", "qualified_name_list",
  "qualified_name", "name_list", "name_list_opt_comma", "name",
  "attr_name", "func_name", "AexprConst", "Iconst", "Sconst", "ColId",
  "ColIdOrString", "type_function_name", "function_name_token",
  "type_name_token", "any_name", "attrs", "opt_name_list", "param_name",
  "ColLabel", "ColLabelOrString", "PrepareStmt", "prep_type_clause",
  "PreparableStmt", "CreateSchemaStmt", "OptSchemaEltList", "schema_stmt",
  "IndexStmt", "access_method", "access_method_clause", "opt_concurrently",
  "opt_index_name", "opt_reloptions", "opt_unique",
  "AlterObjectSchemaStmt", "CheckPointStmt", "ExportStmt", "ImportStmt",
  "ExplainStmt", "opt_verbose", "explain_option_arg", "ExplainableStmt",
  "NonReservedWord", "NonReservedWord_or_Sconst", "explain_option_list",
  "analyze_keyword", "opt_boolean_or_string", "explain_option_elem",
  "explain_option_name", "VariableSetStmt", "set_rest", "generic_set",
  "var_value", "zone_value", "var_list", "LoadStmt", "file_name",
  "VacuumStmt", "vacuum_option_elem", "opt_full", "vacuum_option_list",
  "opt_freeze", "DeleteStmt", "relation_expr_opt_alias",
  "where_or_current_clause", "using_clause", "AnalyzeStmt",
  "VariableResetStmt", "generic_reset", "reset_rest", "VariableShowStmt",
  "show_or_describe", "var_name", "CallStmt", "ViewStmt",
  "opt_check_option", "CreateAsStmt", "opt_with_data", "create_as_target",
  "unreserved_keyword", "col_name_keyword", "func_name_keyword",
  "type_name_keyword", "other_keyword", "type_func_name_keyword",
  "reserved_keyword", 0
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[YYLEX-NUM] -- Internal token number corresponding to
   token YYLEX-NUM.  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,    60,    62,    61,   739,    43,    45,
      42,    47,    37,    94,   740,    91,    93,    40,    41,    46,
      59,    44,   123,   125,    35,    63,    58
};
# endif

/* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   507,   508,   509,   509,   510,   510,   510,   510,   510,
     510,   510,   510,   510,   510,   510,   510,   510,   510,   510,
     510,   510,   510,   510,   510,   510,   510,   510,   510,   510,
     510,   510,   510,   510,   510,   510,   510,   510,   510,   510,
     511,   511,   511,   511,   511,   511,   511,   511,   512,   512,
     513,   513,   514,   514,   514,   514,   515,   515,   516,   516,
     516,   516,   516,   516,   516,   516,   516,   516,   516,   516,
     516,   516,   516,   516,   516,   516,   516,   516,   516,   516,
     516,   516,   516,   516,   516,   516,   516,   517,   517,   518,
     518,   518,   518,   519,   519,   520,   521,   521,   521,   522,
     522,   522,   522,   523,   524,   524,   525,   525,   526,   526,
     526,   526,   526,   526,   526,   526,   526,   526,   526,   526,
     526,   527,   527,   528,   529,   529,   529,   529,   529,   530,
     530,   531,   531,   531,   532,   532,   533,   534,   534,   535,
     535,   535,   536,   536,   536,   537,   537,   538,   538,   539,
     539,   540,   540,   541,   541,   542,   542,   543,   543,   544,
     544,   545,   545,   546,   547,   547,   547,   548,   548,   549,
     549,   550,   550,   550,   551,   551,   552,   552,   553,   553,
     554,   554,   554,   555,   555,   555,   555,   556,   556,   556,
     556,   556,   556,   556,   556,   556,   556,   556,   556,   556,
     556,   557,   557,   558,   558,   558,   559,   559,   559,   559,
     559,   559,   560,   560,   560,   561,   561,   561,   562,   562,
     563,   563,   563,   563,   563,   563,   564,   564,   565,   566,
     566,   566,   566,   566,   567,   567,   567,   567,   568,   568,
     568,   568,   568,   568,   568,   568,   568,   568,   569,   570,
     571,   571,   571,   571,   571,   572,   572,   573,   573,   573,
     573,   574,   575,   575,   576,   576,   577,   577,   577,   577,
     577,   577,   577,   577,   578,   578,   579,   580,   580,   580,
     580,   581,   581,   581,   581,   582,   583,   583,   583,   584,
     585,   585,   585,   585,   585,   585,   586,   587,   587,   588,
     588,   589,   590,   590,   590,   591,   591,   592,   592,   593,
     593,   593,   594,   595,   595,   596,   596,   597,   598,   598,
     598,   598,   599,   599,   600,   600,   601,   601,   601,   602,
     602,   602,   602,   602,   602,   603,   603,   604,   604,   604,
     604,   605,   606,   606,   606,   606,   606,   606,   606,   606,
     607,   607,   608,   608,   608,   608,   608,   608,   608,   608,
     609,   609,   609,   609,   609,   609,   609,   609,   609,   609,
     609,   609,   609,   609,   609,   609,   610,   610,   610,   610,
     610,   610,   610,   611,   611,   612,   612,   612,   613,   613,
     613,   614,   614,   615,   615,   616,   616,   617,   617,   618,
     619,   619,   620,   620,   621,   621,   622,   622,   623,   623,
     624,   624,   625,   625,   626,   626,   627,   627,   627,   627,
     627,   628,   629,   629,   630,   630,   631,   631,   632,   632,
     632,   632,   632,   632,   632,   632,   632,   632,   632,   632,
     632,   632,   633,   634,   634,   634,   635,   635,   636,   636,
     637,   637,   638,   638,   638,   638,   638,   638,   638,   638,
     639,   639,   640,   640,   640,   640,   640,   640,   640,   641,
     641,   641,   642,   642,   643,   644,   644,   645,   645,   645,
     645,   645,   645,   645,   645,   645,   646,   646,   647,   647,
     647,   648,   648,   649,   649,   650,   650,   650,   651,   651,
     652,   652,   652,   653,   653,   654,   654,   655,   655,   655,
     656,   656,   656,   657,   657,   657,   657,   658,   658,   659,
     659,   659,   659,   660,   660,   661,   661,   661,   661,   661,
     661,   662,   662,   663,   663,   664,   664,   664,   664,   665,
     666,   666,   667,   667,   668,   668,   668,   668,   668,   669,
     670,   670,   670,   671,   671,   672,   672,   673,   673,   674,
     674,   674,   674,   675,   675,   676,   676,   677,   677,   677,
     677,   677,   678,   679,   680,   681,   682,   682,   683,   683,
     684,   684,   685,   685,   686,   686,   687,   687,   688,   689,
     689,   689,   689,   690,   690,   691,   691,   691,   692,   692,
     693,   693,   694,   694,   695,   695,   696,   696,   697,   697,
     697,   697,   697,   697,   697,   698,   698,   698,   698,   698,
     698,   699,   699,   699,   699,   700,   700,   701,   701,   701,
     701,   701,   702,   702,   702,   702,   703,   703,   704,   704,
     705,   705,   705,   705,   706,   706,   707,   708,   708,   709,
     709,   710,   710,   711,   711,   712,   712,   713,   714,   714,
     715,   715,   716,   716,   717,   717,   717,   717,   717,   717,
     717,   717,   718,   718,   718,   719,   719,   719,   719,   719,
     719,   719,   720,   720,   720,   720,   721,   722,   722,   723,
     723,   723,   723,   723,   723,   723,   723,   723,   723,   723,
     724,   724,   725,   725,   726,   726,   727,   728,   729,   729,
     730,   730,   731,   732,   733,   733,   733,   733,   733,   733,
     734,   734,   735,   735,   735,   735,   736,   737,   737,   737,
     738,   738,   739,   739,   740,   740,   741,   741,   742,   742,
     743,   743,   744,   744,   745,   745,   746,   746,   746,   746,
     746,   746,   746,   746,   746,   746,   746,   746,   746,   746,
     746,   746,   747,   747,   747,   747,   747,   747,   747,   747,
     747,   747,   747,   747,   747,   747,   747,   747,   747,   747,
     747,   747,   747,   747,   747,   747,   747,   747,   747,   747,
     747,   747,   747,   747,   747,   747,   747,   747,   747,   747,
     747,   747,   747,   747,   747,   747,   747,   747,   747,   747,
     747,   747,   747,   747,   747,   747,   747,   747,   747,   747,
     747,   747,   747,   747,   747,   747,   747,   747,   747,   747,
     748,   748,   748,   748,   748,   748,   748,   748,   748,   748,
     748,   748,   748,   748,   748,   748,   748,   748,   748,   748,
     748,   748,   748,   749,   749,   749,   749,   749,   749,   749,
     749,   749,   749,   749,   749,   750,   750,   750,   750,   750,
     750,   750,   751,   751,   752,   752,   753,   753,   753,   753,
     753,   753,   753,   753,   753,   753,   753,   753,   753,   753,
     753,   753,   753,   753,   753,   753,   753,   753,   753,   753,
     753,   753,   753,   753,   753,   754,   754,   755,   755,   756,
     756,   757,   757,   758,   758,   759,   760,   760,   760,   761,
     762,   762,   763,   763,   764,   764,   764,   765,   765,   766,
     766,   766,   766,   766,   767,   767,   768,   768,   769,   770,
     770,   771,   771,   772,   772,   772,   773,   773,   774,   774,
     774,   774,   774,   774,   774,   774,   774,   774,   774,   774,
     775,   775,   776,   776,   777,   777,   777,   777,   777,   777,
     777,   777,   778,   778,   779,   779,   780,   780,   781,   781,
     782,   782,   783,   783,   783,   784,   784,   785,   785,   786,
     786,   786,   786,   786,   786,   786,   786,   786,   786,   787,
     787,   788,   789,   789,   790,   790,   790,   790,   790,   790,
     791,   792,   793,   793,   793,   794,   794,   795,   796,   796,
     797,   798,   798,   799,   799,   800,   800,   801,   801,   801,
     802,   802,   803,   803,   804,   804,   805,   805,   806,   806,
     807,   807,   808,   808,   809,   809,   809,   809,   809,   810,
     810,   811,   811,   812,   813,   813,   814,   814,   815,   815,
     815,   816,   816,   817,   817,   818,   818,   819,   819,   820,
     821,   822,   822,   823,   823,   823,   823,   823,   823,   823,
     823,   823,   823,   823,   823,   823,   823,   824,   825,   826,
     826,   826,   827,   827,   828,   828,   828,   829,   829,   829,
     830,   830,   830,   831,   831,   832,   832,   833,   833,   834,
     835,   835,   835,   835,   836,   836,   837,   838,   838,   839,
     839,   839,   839,   840,   840,   841,   841,   842,   842,   842,
     842,   843,   843,   844,   845,   845,   846,   846,   847,   847,
     848,   848,   849,   849,   850,   850,   850,   850,   850,   850,
     851,   851,   852,   853,   854,   854,   854,   854,   855,   855,
     856,   856,   856,   857,   857,   857,   857,   857,   858,   858,
     858,   859,   859,   860,   860,   861,   861,   862,   862,   862,
     862,   863,   864,   864,   865,   865,   865,   865,   866,   866,
     866,   866,   867,   867,   867,   867,   868,   868,   869,   869,
     869,   869,   869,   869,   869,   870,   870,   871,   871,   871,
     872,   872,   873,   873,   873,   873,   873,   874,   874,   874,
     874,   874,   875,   875,   876,   876,   877,   877,   878,   879,
     879,   879,   880,   880,   881,   881,   882,   882,   883,   884,
     884,   885,   885,   885,   886,   886,   886,   886,   886,   886,
     886,   886,   887,   887,   888,   888,   889,   890,   890,   890,
     890,   891,   891,   891,   891,   892,   892,   892,   893,   893,
     893,   894,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   895,   895,   895,   895,   895,   895,
     895,   895,   895,   895,   895,   895,   895,   895,   896,   896,
     896,   896,   896,   896,   896,   896,   896,   896,   896,   896,
     896,   896,   896,   896,   896,   896,   896,   896,   896,   896,
     896,   896,   896,   896,   896,   896,   896,   896,   896,   896,
     896,   896,   896,   896,   896,   896,   896,   896,   896,   896,
     896,   896,   896,   896,   896,   896,   896,   896,   896,   896,
     897,   897,   897,   897,   897,   897,   897,   897,   897,   897,
     897,   897,   897,   897,   897,   897,   897,   897,   897,   897,
     897,   897,   897,   897,   897,   897,   898,   898,   898,   898,
     898,   898,   898,   898,   898,   898,   898,   898,   898,   898,
     898,   898,   898,   898,   898,   898,   898,   898,   898,   898,
     898,   899,   899,   899,   899,   899,   899,   899,   899,   899,
     899,   899,   899,   899,   899,   899,   899,   899,   899,   899,
     899,   899,   899,   899,   899,   899,   899,   899,   899,   899,
     899,   899,   899,   899,   899,   899,   899,   899,   899,   899,
     899,   899,   899,   899,   899,   899,   899,   899,   899,   899,
     899,   899,   899,   900,   900,   900,   900,   900,   900,   900,
     900,   900,   900,   900,   900,   900,   900,   900,   900,   900,
     900,   900,   900,   900,   900,   900,   900,   900,   900,   900,
     901,   901,   901,   901,   901,   901,   901,   901,   901,   901,
     901,   901,   901,   901,   901,   901,   901,   901,   901,   901,
     901,   901,   901,   901,   901,   901,   901,   901,   901,   901,
     901,   901,   901,   901,   901,   901,   901,   901,   901,   901,
     901,   901,   901,   901,   901,   901,   901,   901,   901,   901,
     901,   901,   901,   901,   901,   901,   901,   901,   901,   901,
     901,   901,   901,   901,   901,   901,   901,   901,   901,   901,
     901,   901,   901,   901,   901,   901,   901,   901,   901,   901
};

/* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     0,
       4,     6,     4,     6,     4,     6,     4,     6,     1,     2,
       3,     2,     1,     3,     2,     3,     1,     3,     2,     5,
       3,     6,     4,     6,     6,     6,     5,     5,     6,     9,
       4,     5,     7,     6,     4,     9,     4,     2,     4,     3,
       6,     4,     2,     2,     2,     2,     1,     2,     0,     1,
       2,     2,     2,     1,     3,     4,     2,     1,     0,     2,
       3,     2,     3,     8,     1,     0,     1,     3,     6,     6,
       8,     6,     8,     6,     8,     6,     8,     8,    10,     8,
      10,     1,     0,     7,     1,     4,     4,     7,     2,     1,
       3,     4,     3,     0,     1,     0,     2,     3,     5,     8,
       5,     0,     5,     5,     7,     2,     0,     1,     1,     1,
       3,     2,     0,     1,     0,     1,     3,     1,     3,     1,
       2,     1,     3,     2,     2,     4,     5,     5,     8,     1,
       0,     3,     9,    12,     3,     0,     4,     6,     1,     2,
       1,     1,     0,     1,     2,     2,     1,     2,     2,     1,
       2,     3,     2,     2,     2,     2,     3,     3,     3,     1,
       3,     1,     0,     1,     2,     2,     2,     2,     2,     2,
       2,     2,     1,     1,     0,     9,    12,    11,     0,     2,
       1,     1,     1,     1,     1,     1,     3,     0,     1,     2,
       1,     1,     2,     2,     3,     1,     1,     2,     2,     1,
       2,     3,     5,     3,     2,     5,     7,     5,     2,     3,
       1,     1,     2,     2,     0,     4,     0,     3,     4,     4,
       0,     3,     2,     0,     3,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     3,     3,     1,     2,     2,
       2,     2,     2,     2,     0,     3,     3,     3,     0,     1,
       2,     1,     2,     2,     2,     2,     4,     1,     3,     1,
       3,     1,     1,     1,     1,     3,     1,     2,     0,     1,
       2,     0,     1,     3,     0,     2,     0,     3,     3,     1,
       5,     3,     1,     3,     1,     2,     1,     4,     5,     5,
       6,     3,     7,     4,    11,     1,     3,     2,     2,     2,
       0,     3,     1,     1,     2,     2,     2,     2,     1,     0,
       1,     2,     6,     4,     6,     4,     6,     8,     4,     6,
       1,     1,     1,     1,     2,     1,     2,     1,     2,     1,
       1,     1,     3,     3,     3,     3,     2,     2,     1,     3,
       1,     1,     1,     1,     3,     1,     1,     0,     1,     1,
       1,     1,     3,     8,     7,     1,     1,     2,     3,     8,
      11,     9,     1,     1,     3,     0,     1,     3,     1,     0,
       1,     0,     1,     0,     1,     3,     1,     1,     1,     3,
       0,     2,     2,     0,     2,     0,     1,     0,     1,     1,
       1,     3,     3,     1,     1,     3,     3,     3,     3,     4,
       3,     2,     1,     1,     1,     1,     1,     3,     1,     1,
       3,     3,     1,     2,     4,     4,     2,     3,     5,     5,
       1,     1,    11,    11,     1,     2,     4,     4,     4,     2,
       2,     3,     1,     3,     6,     2,     0,     3,     3,     4,
       4,     4,     4,     3,     2,     1,     1,     0,     1,     1,
       0,     1,     5,     1,     0,     2,     2,     0,     1,     0,
       3,     5,     5,     1,     3,     4,     3,     1,     1,     0,
       2,     2,     0,     2,     2,     1,     1,     1,     0,     2,
       4,     5,     4,     2,     3,     2,     2,     2,     2,     1,
       2,     3,     0,     1,     0,     5,     1,     4,     6,     2,
       1,     0,     4,     0,     1,     1,     2,     2,     2,     1,
       1,     2,     2,     1,     1,     1,     1,     1,     1,     3,
       3,     3,     0,     1,     3,     1,     2,     1,     1,     1,
       1,     1,     2,     4,     4,     5,     1,     1,     2,     0,
       2,     0,     1,     3,     1,     0,     1,     2,     3,     2,
       4,     2,     3,     2,     0,     1,     2,     0,     4,     5,
       1,     2,     2,     0,     1,     3,     1,     2,     3,     3,
       3,     3,     3,     1,     4,     3,     4,     5,     4,     5,
       4,     5,     2,     4,     1,     1,     0,     1,     4,     5,
       4,     0,     2,     2,     2,     1,     1,     0,     4,     2,
       1,     2,     2,     4,     2,     6,     2,     1,     3,     4,
       0,     2,     0,     2,     0,     1,     3,     3,     2,     0,
       2,     4,     1,     1,     2,     3,     5,     6,     2,     3,
       5,     5,     3,     4,     0,     1,     1,     1,     1,     1,
       2,     4,     1,     1,     1,     1,     2,     3,     0,     1,
       1,     1,     1,     1,     2,     2,     2,     2,     2,     1,
       3,     0,     1,     1,     1,     1,     5,     2,     1,     1,
       1,     1,     4,     1,     2,     2,     1,     3,     3,     2,
       1,     0,     5,     2,     5,     2,     1,     3,     3,     0,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     3,     3,     3,     3,     3,     3,
       3,     0,     1,     3,     3,     5,     2,     2,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     2,     2,     3,     3,     2,     2,     3,     3,     5,
       4,     6,     3,     5,     4,     6,     4,     6,     5,     7,
       3,     2,     4,     3,     2,     1,     3,     3,     3,     3,
       3,     4,     3,     4,     3,     4,     5,     6,     6,     7,
       6,     7,     6,     7,     3,     4,     4,     6,     1,     4,
       1,     3,     2,     2,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     2,     2,     5,
       6,     6,     7,     1,     1,     2,     2,     2,     4,     1,
       2,     1,     2,     2,     4,     3,     6,     7,     9,     7,
       7,     4,     5,     1,     1,     1,     5,     1,     1,     4,
       1,     4,     1,     4,     1,     4,     1,     1,     1,     1,
       1,     1,     6,     6,     4,     4,     4,     4,     6,     5,
       5,     5,     4,     6,     4,     5,     0,     5,     0,     1,
       0,     2,     0,     1,     3,     3,     2,     2,     0,     6,
       1,     0,     3,     0,     2,     2,     0,     1,     4,     2,
       2,     2,     2,     2,     4,     3,     1,     5,     3,     1,
       3,     1,     2,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     4,     1,     4,     1,     4,     1,     2,     1,     2,
       1,     2,     1,     3,     1,     3,     1,     2,     1,     0,
       1,     3,     1,     3,     3,     1,     3,     3,     0,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     4,
       3,     2,     3,     0,     3,     3,     2,     2,     1,     0,
       2,     2,     3,     2,     1,     1,     3,     5,     1,     2,
       4,     2,     0,     1,     0,     1,     2,     2,     3,     5,
       1,     0,     1,     2,     0,     2,     1,     0,     1,     0,
       1,     3,     1,     2,     3,     2,     1,     3,     5,     4,
       2,     1,     0,     3,     1,     3,     1,     2,     4,     2,
       0,     1,     3,     1,     2,     1,     3,     1,     2,     1,
       1,     1,     2,     1,     1,     2,     1,     1,     2,     7,
       2,     5,     3,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     2,     2,     3,     3,     0,     1,
       1,     1,     1,     1,     1,     1,     5,     3,     0,     1,
       1,     1,     1,     4,     7,     2,     0,     1,     1,     1,
       1,    13,    16,     1,     2,     0,     1,     0,     1,     0,
       2,     0,     1,     0,     6,     8,     6,     8,     6,     8,
       2,     1,     4,     3,     2,     4,     3,     5,     1,     0,
       1,     1,     0,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     3,     1,     1,     1,     1,     1,
       1,     2,     1,     1,     2,     3,     3,     3,     1,     3,
       3,     2,     3,     3,     3,     3,     1,     1,     1,     1,
       3,     5,     1,     1,     1,     1,     3,     2,     2,     3,
       1,     1,     4,     5,     5,     4,     6,     1,     1,     1,
       1,     1,     1,     0,     1,     3,     1,     0,     7,     1,
       2,     3,     2,     0,     2,     0,     2,     4,     2,     1,
       1,     1,     2,     3,     2,     2,     2,     2,     3,     4,
       2,     1,     1,     1,     1,     3,     2,     9,    11,    12,
      14,     3,     4,     4,     0,     7,    10,     9,     2,     3,
       0,     4,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1
};

/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
   means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
     135,   214,     0,  1176,  1175,   214,     0,  1151,   214,   427,
     349,     0,  1253,     0,   214,     0,   135,     0,     0,     0,
       0,     0,     0,     0,     0,   214,   494,     0,  1252,   214,
       0,     0,  1223,     0,     0,     0,     0,     0,     2,     4,
       7,    18,    13,    30,    26,     0,    28,    16,    21,     6,
      32,    17,    20,    14,    33,    11,    31,   461,   448,   499,
     460,   134,   600,   464,    29,    15,    25,     5,    10,    23,
      24,    22,  1159,    36,    27,    34,    19,     8,    35,    37,
    1251,     9,    38,    12,   213,   212,   206,     0,     0,     0,
       0,     0,   207,  1089,  1272,  1273,  1274,  1275,  1276,  1277,
    1278,  1279,  1280,  1281,  1282,  1283,  1284,  1285,  1286,  1287,
    1630,  1288,  1289,  1290,  1578,  1579,  1631,  1580,  1581,  1291,
    1292,  1293,  1294,  1295,  1296,  1297,  1582,  1583,  1298,  1299,
    1300,  1301,  1302,  1584,  1632,  1303,  1304,  1305,  1306,  1307,
    1308,  1633,  1309,  1310,  1311,  1312,  1313,  1314,  1315,  1316,
    1317,  1634,  1318,  1319,  1320,  1635,  1321,  1322,  1323,  1324,
    1325,  1326,  1327,  1585,  1586,  1328,  1329,  1330,  1331,  1332,
    1333,  1334,  1335,  1336,  1337,  1338,  1339,  1340,  1341,  1342,
    1343,  1344,  1345,  1346,  1347,  1348,  1349,  1350,  1351,  1352,
    1353,  1354,  1355,  1587,  1356,  1357,  1358,  1359,  1360,  1588,
    1361,  1362,  1363,  1589,  1364,  1365,  1366,  1636,  1637,  1367,
    1368,  1369,  1638,  1370,  1371,  1590,  1591,  1372,  1373,  1374,
    1375,  1376,  1377,  1378,  1379,  1639,  1380,  1381,  1382,  1383,
    1384,  1385,  1386,  1387,  1388,  1389,  1390,  1640,  1592,  1391,
    1392,  1393,  1394,  1395,  1593,  1594,  1595,  1396,  1641,  1642,
    1397,  1643,  1398,  1399,  1400,  1401,  1402,  1403,  1404,  1644,
    1405,  1645,  1406,  1407,  1408,  1409,  1410,  1411,  1412,  1413,
    1596,  1414,  1415,  1416,  1417,  1418,  1419,  1420,  1421,  1422,
    1423,  1424,  1425,  1426,  1427,  1428,  1429,  1430,  1431,  1597,
    1647,  1598,  1432,  1433,  1434,  1599,  1435,  1436,  1648,  1437,
    1600,  1438,  1601,  1439,  1440,  1441,  1442,  1443,  1444,  1445,
    1446,  1447,  1602,  1649,  1448,  1650,  1603,  1449,  1450,  1451,
    1452,  1453,  1454,  1455,  1456,  1457,  1458,  1459,  1460,  1604,
    1461,  1462,  1605,  1463,  1464,  1465,  1466,  1467,  1468,  1469,
    1470,  1471,  1472,  1473,  1474,  1606,  1475,  1476,  1477,  1478,
    1479,  1480,  1481,  1482,  1483,  1484,  1485,  1486,  1487,  1488,
    1489,  1490,  1491,  1492,  1651,  1493,  1494,  1495,  1607,  1496,
    1497,  1498,  1499,  1500,  1501,  1502,  1503,  1504,  1505,  1506,
    1507,  1508,  1509,  1510,  1511,  1512,  1608,  1513,  1514,  1515,
    1652,  1516,  1517,  1609,  1518,  1519,  1520,  1521,  1522,  1523,
    1524,  1525,  1526,  1527,  1528,  1529,  1530,  1610,  1531,  1611,
    1532,  1533,  1534,  1535,  1654,  1536,  1537,  1538,  1539,  1540,
    1612,  1613,  1541,  1542,  1614,  1543,  1615,  1544,  1545,  1616,
    1546,  1547,  1548,  1549,  1550,  1551,  1552,  1553,  1554,  1555,
    1556,  1557,  1558,  1559,  1560,  1617,  1618,  1561,  1655,  1562,
    1563,  1564,  1565,  1566,  1567,  1568,  1569,  1570,  1571,  1572,
    1573,  1619,  1620,  1621,  1622,  1623,  1624,  1625,  1626,  1627,
    1628,  1629,  1574,  1575,  1576,  1577,  1256,     0,     0,  1071,
    1090,  1091,  1099,   209,   426,   135,     0,     0,     0,     0,
       0,   343,   342,     0,  1142,   348,     0,     0,  1089,   101,
    1596,  1463,  1610,    99,  1069,  1090,     0,   369,   370,     0,
     378,     0,   362,   367,   363,     0,   388,   380,   389,   381,
     361,   382,   371,   360,     0,   390,     0,   365,     0,     0,
       0,   210,   175,   349,   135,     0,  1164,  1165,  1163,  1154,
    1159,  1166,  1167,     0,  1150,     0,     0,  1088,  1210,  1211,
    1208,  1207,   164,  1118,  1240,  1612,  1541,  1254,  1241,  1238,
    1239,   211,   493,   491,     0,  1039,  1370,  1408,  1500,  1511,
    1612,  1184,  1188,     0,   208,  1617,  1245,     0,  1246,  1093,
       0,   465,   640,  1092,  1063,  1222,     0,  1227,     0,  1477,
     469,   472,  1108,   470,   461,     0,     1,   135,     0,     0,
       0,   490,   490,     0,   490,     0,   453,   461,   456,   460,
     601,  1158,  1236,  1250,  1612,  1541,  1244,  1247,  1378,     0,
       0,  1378,     0,  1378,     0,  1378,     0,     0,  1031,     0,
    1032,  1072,  1120,  1121,  1119,     0,  1122,   314,   347,   346,
     345,   344,   349,  1378,  1126,  1103,     0,   395,   396,     0,
       0,     0,     0,     0,  1137,   102,   100,   376,   377,     0,
     368,   364,   366,     0,  1100,  1656,   692,  1657,   721,   699,
     721,   721,  1658,  1659,  1660,  1661,   688,   688,  1343,   701,
    1662,  1663,  1664,  1378,  1665,  1666,   689,   690,   726,  1667,
    1668,  1669,  1670,  1671,     0,     0,  1672,   721,  1673,   688,
    1674,  1675,   693,  1676,   662,     0,  1677,   691,   663,  1678,
     729,   729,  1679,   716,  1680,   387,     0,   391,   674,   675,
     676,   677,   702,   703,   678,   708,   709,   713,   679,   761,
     688,  1101,  1102,  1378,   387,   383,  1378,   387,  1065,  1378,
       0,     0,   171,     0,     0,  1156,  1168,  1681,  1682,  1683,
    1684,  1686,  1685,  1687,  1688,  1689,  1690,  1691,  1692,  1693,
    1694,  1695,  1698,  1696,  1697,  1699,  1700,  1701,  1702,  1703,
    1704,  1705,  1706,  1707,  1708,  1709,  1710,  1711,  1712,  1713,
    1714,  1715,  1716,  1717,  1718,  1719,  1720,  1721,  1722,  1723,
    1724,  1725,  1726,  1727,  1728,  1729,  1730,  1731,  1732,  1182,
       0,  1183,  1173,  1162,  1169,  1170,   135,   425,  1209,  1153,
       0,     0,     0,     0,  1242,     0,     0,     0,  1074,  1076,
    1077,   960,  1087,  1034,     0,  1579,  1580,  1581,  1024,     0,
    1582,  1583,  1584,  1632,   890,   877,   886,   891,   878,   880,
     887,  1585,  1586,   828,  1587,  1588,  1085,  1589,  1590,  1591,
    1593,  1594,  1595,   882,   884,  1597,  1598,     0,  1086,  1600,
    1601,  1444,  1603,  1604,  1606,  1607,   888,  1609,  1611,  1612,
    1613,  1614,  1615,  1084,  1616,   889,  1618,     0,     0,     0,
    1052,   979,     0,     0,     0,  1034,   861,     0,     0,   682,
     683,   704,   705,   684,   710,   711,   685,     0,  1046,   762,
     906,  1034,   873,   936,   805,     0,   859,   853,  1042,   476,
    1040,     0,   854,  1073,  1034,  1025,   476,  1038,  1187,  1185,
    1191,  1186,     0,     0,     0,     0,     0,   642,   641,  1064,
    1221,  1219,  1220,  1218,  1217,  1224,     0,  1226,  1159,   974,
     976,     0,  1025,   471,     0,     0,     0,   451,   450,     3,
       0,     0,  1229,     0,   488,   489,     0,     0,     0,     0,
       0,     0,     0,     0,   585,   515,   516,   518,   582,   586,
     594,     0,   457,     0,  1108,  1248,     0,     0,     0,   122,
     122,     0,     0,     0,     0,     0,    93,    42,    86,     0,
       0,     0,     0,   189,   202,     0,     0,     0,     0,     0,
     199,     0,     0,   182,    44,   176,   178,     0,   122,     0,
      40,     0,     0,     0,    46,  1089,     0,  1630,  1631,  1632,
    1633,  1634,   891,     0,  1636,  1637,  1638,  1639,  1640,  1641,
    1642,  1643,  1644,  1645,  1596,  1647,  1648,  1649,  1650,  1651,
    1652,  1610,  1654,  1616,     0,  1655,     0,   865,   982,   499,
     980,  1109,     0,  1090,  1096,  1030,     0,  1110,  1760,  1761,
    1762,  1763,  1764,  1765,  1766,  1767,  1768,  1769,  1770,  1771,
    1772,  1773,  1774,  1775,  1776,  1777,  1778,  1779,  1780,  1781,
    1782,  1783,  1784,  1785,  1786,  1787,  1788,  1789,  1790,  1791,
    1792,  1793,  1794,  1795,  1796,  1797,  1798,  1799,  1800,  1801,
    1802,  1803,  1804,  1805,  1806,  1807,  1808,  1809,  1810,  1811,
    1812,  1813,  1814,  1815,  1816,  1817,  1818,  1819,  1820,  1821,
    1822,  1823,  1824,  1825,  1826,  1827,  1828,  1829,  1830,  1831,
    1832,  1833,  1834,  1720,  1835,  1836,  1837,  1838,  1839,  1027,
    1070,  1112,  1111,  1113,  1033,     0,     0,   423,     0,     0,
    1123,     0,  1104,     0,     0,  1378,   170,  1378,   314,     0,
     314,     0,  1136,  1139,   379,   375,   373,   372,   374,   720,
     707,   715,   714,     0,   697,   696,   695,     0,   694,     0,
       0,   721,   721,   719,   698,   674,     0,     0,     0,   725,
       0,   723,   385,   386,     0,   358,     0,   668,   664,     0,
     734,   735,   736,   737,   744,   745,   742,   743,   738,   739,
     732,   733,   740,   741,   730,   731,     0,   746,   747,   748,
     749,   750,   751,   752,   753,   680,   686,     0,     0,   353,
       0,     0,   355,     0,     0,     0,   349,     0,   135,     0,
     183,  1178,  1179,  1177,     0,     0,  1161,   186,   203,  1172,
    1181,  1171,  1180,  1160,  1155,     0,  1152,   414,  1197,  1196,
    1205,   165,     0,   985,     0,   135,  1243,  1255,     0,   857,
     979,  1023,     0,     0,     0,     0,     0,     0,   863,   988,
       0,     0,   785,     0,     0,     0,  1003,     0,  1009,     0,
       0,     0,   786,   766,   767,     0,  1051,  1060,   978,     0,
     861,   974,     0,   939,   941,     0,  1092,     0,   855,   856,
     862,     0,  1080,     0,   761,   761,  1045,   960,     0,     0,
     957,   958,   959,     0,     0,     0,  1037,     0,   968,   970,
       0,     0,   801,   966,     0,   804,     0,     0,     0,     0,
     954,   955,   956,   948,   949,   950,   951,   952,   953,   964,
     947,   782,     0,     0,   908,   860,     0,   781,  1043,     0,
     603,     0,  1078,  1075,     0,  1026,   603,  1199,  1203,  1204,
    1202,     0,  1198,  1190,  1189,  1194,  1192,  1195,  1193,     0,
    1215,     0,  1212,   977,   598,   473,     0,     0,  1235,     0,
     129,     0,  1230,     0,   468,   467,   509,   509,   500,   503,
     509,   466,   557,   558,     0,     0,     0,     0,   591,   589,
    1074,  1087,   545,   519,   544,     0,     0,   523,     0,   549,
     762,   584,   455,   513,   514,   517,   454,     0,   587,     0,
     597,   585,   518,     0,  1237,  1249,     0,     0,     0,     0,
       0,  1378,     0,     0,    77,    58,   265,     0,   121,     0,
       0,     0,     0,     0,     0,     0,    85,    82,    83,    84,
       0,     0,     0,     0,   187,   188,   201,     0,   192,   193,
     190,   194,   195,     0,     0,   180,   181,     0,     0,     0,
       0,   179,     0,     0,     0,     0,     0,     0,     0,     0,
     499,   499,   499,   871,     0,   497,   498,     0,     0,  1028,
    1031,   413,   322,     0,   312,     0,     0,     0,     0,     0,
       0,   349,  1129,  1127,  1125,  1128,  1130,  1105,     0,     0,
       0,     0,   167,   169,     0,   311,   284,     0,  1141,     0,
       0,  1378,  1138,   301,     0,     0,     0,     0,   387,     0,
     718,   717,   669,   665,     0,     0,     0,     0,   392,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   387,
     384,   387,  1066,     0,   387,   174,     0,  1378,   314,     0,
    1157,  1174,   184,   204,   185,   205,   446,     0,   420,   428,
     433,   411,     0,   411,     0,   430,   434,   411,   429,   411,
     424,     0,   166,     0,  1117,     0,  1116,     0,  1035,     0,
       0,  1022,  1018,     0,     0,     0,     0,     0,   989,   990,
     991,   992,   993,   994,   995,   996,   997,     0,     0,   998,
       0,     0,     0,   946,   957,   958,   959,   954,   955,   956,
     948,   949,   950,   951,   952,   953,   972,     0,     0,     0,
       0,     0,     0,     0,     0,   830,     0,     0,   935,     0,
     974,  1008,     0,     0,     0,     0,     0,     0,   974,  1014,
       0,     0,     0,  1050,     0,  1047,   807,  1034,     0,   942,
     806,     0,     0,     0,  1082,  1083,   763,   808,   777,   778,
     779,   783,  1115,  1114,  1044,     0,  1036,     0,     0,   764,
     787,   792,     0,  1015,   824,     0,   812,     0,   800,     0,
     810,   814,   788,   803,     0,   784,     0,  1037,   969,   971,
       0,   967,     0,   774,   775,   776,   768,   769,   770,   771,
     772,   773,   780,   945,   943,   944,     0,     0,     0,   910,
       0,     0,   809,  1041,  1370,  1408,     0,   487,   487,   487,
     475,   485,     0,   654,   499,  1052,   654,     0,   761,   643,
    1108,  1225,  1213,  1214,   975,  1107,   135,     0,  1233,     0,
       0,     0,   141,   124,     0,  1231,     0,   157,   159,   603,
       0,  1034,   507,   508,   512,   512,     0,     0,   512,  1607,
    1496,     0,     0,     0,     0,   550,   592,     0,   583,   547,
     548,     0,   546,  1074,   551,  1073,   552,   555,   556,   524,
     593,  1061,   595,     0,   588,   459,   458,   599,     0,    43,
       0,  1378,    60,     0,     0,     0,     0,     0,     0,   218,
     256,   218,    98,  1378,   387,  1378,   387,  1276,  1344,  1512,
       0,    56,    89,     0,   289,   115,     0,   274,   319,    79,
      94,   108,     0,     0,    45,   177,   191,   196,   111,   200,
     197,  1146,   198,   122,     0,    41,     0,   109,     0,  1144,
       0,     0,    47,   113,  1148,   497,   497,   497,     0,   981,
       0,     0,     0,   983,   984,  1030,     0,   412,     0,   313,
       0,   422,   402,   403,   413,     0,   314,     0,   314,  1126,
       0,     0,  1106,   105,     0,     0,     0,     0,   304,   302,
     335,     0,   309,   303,   312,     0,     0,   260,     0,  1270,
       0,     0,   397,     0,     0,     0,     0,     0,   687,   700,
     359,   674,     0,   728,   727,   729,   729,   674,     0,   660,
       0,   672,     0,   712,   681,   754,   755,   756,   757,   758,
     759,   760,   352,   354,     0,   356,     0,     0,     0,   415,
       0,   418,     0,   417,   421,   416,   410,     0,   441,     0,
       0,     0,     0,     0,     0,  1206,   986,   492,   829,     0,
       0,  1019,     0,     0,   904,     0,   879,   881,   894,     0,
     883,   885,     0,   961,     0,     0,     0,   895,   832,   833,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   848,   847,   896,
     934,     0,     0,  1006,  1007,     0,   897,     0,     0,  1013,
       0,     0,     0,   902,     0,  1067,     0,     0,     0,  1059,
     858,   975,   940,   938,   864,   761,     0,     0,     0,     0,
       0,     0,     0,   813,   802,     0,   811,   815,     0,     0,
       0,   796,     0,     0,   794,   825,   790,     0,     0,   826,
       0,     0,   909,   918,   487,   487,   487,   487,   484,   486,
       0,     0,     0,     0,  1496,     0,   626,   606,   602,   604,
     613,   626,   631,   874,   652,   875,  1092,     0,   562,   497,
    1060,   562,     0,  1200,  1216,     0,  1234,     0,   146,   128,
     148,   147,     0,   155,     0,  1034,     0,   146,   130,     0,
     149,   160,  1233,     0,   163,     0,   501,   502,   504,     0,
     962,   512,   506,   554,   553,     0,   522,   590,   520,     0,
     596,     0,     0,     0,   264,     0,     0,     0,   218,     0,
     324,     0,   331,     0,   316,    78,     0,     0,     0,    52,
      97,    70,    62,    48,    76,     0,     0,    81,     0,    74,
      91,    92,    90,    95,     0,   248,   228,   261,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   499,   495,   496,   866,  1029,   444,
     445,   182,   443,   323,     0,     0,   311,     0,  1141,  1124,
     349,     0,     0,   104,   106,     0,   170,   314,     0,   288,
     284,   310,   282,   281,   283,     0,  1271,   175,     0,  1265,
    1140,     0,   398,     0,   394,     0,  1135,   706,   671,     0,
     724,   722,   670,     0,   666,   673,   387,     0,   447,     0,
     406,   442,   431,   436,     0,   440,   438,   437,   432,   435,
       0,  1021,  1017,     0,   876,   987,     0,   973,  1001,  1000,
     831,   843,   844,   845,  1002,     0,     0,     0,   840,   841,
     842,   834,   835,   836,   837,   838,   839,   846,  1011,  1010,
    1004,  1005,     0,   899,   900,   901,  1012,     0,  1068,  1049,
     974,  1054,  1056,     0,     0,   937,  1081,   765,     0,     0,
     793,  1016,   816,     0,     0,     0,   789,   961,     0,     0,
       0,     0,     0,   798,     0,     0,     0,     0,   872,     0,
       0,     0,     0,   478,   477,   483,   626,   631,     0,   461,
       0,   613,     0,   625,   541,   624,   607,     0,   637,   635,
       0,   637,     0,   637,     0,   541,     0,   627,   541,   624,
       0,   644,  1064,   653,     0,   579,     0,  1048,   579,     0,
     474,  1232,     0,  1228,     0,     0,     0,   136,   133,   123,
       0,     0,   158,   146,   137,   510,   511,     0,   505,   521,
    1062,   116,   218,     0,     0,    59,     0,   333,   276,   325,
     308,   291,     0,     0,     0,   219,     0,   296,     0,    51,
      71,     0,    67,     0,    96,     0,     0,     0,     0,     0,
      54,    66,     0,    49,     0,   387,   387,    57,   275,  1100,
    1656,  1657,  1658,  1659,  1660,  1661,  1662,  1663,  1664,  1665,
    1666,  1667,  1668,  1669,  1670,  1671,  1749,  1672,   225,  1673,
    1444,  1674,  1675,  1676,     0,  1677,   663,  1678,  1679,  1680,
     948,   949,   223,   318,   220,   326,   222,   224,     0,  1101,
     221,   321,   112,  1147,     0,   110,     0,  1145,   119,   117,
     114,  1149,   869,   870,   867,   497,   425,   405,     0,     0,
    1270,     0,     0,  1378,     0,   103,     0,  1141,   168,   311,
       0,   341,   260,   336,     0,  1270,  1268,     0,  1264,   393,
       0,     0,     0,   667,   661,   357,     0,   419,     0,   439,
    1020,   892,   903,   999,     0,     0,     0,     0,   898,   893,
    1057,  1058,  1053,   822,   820,   817,     0,   818,   797,     0,
       0,   795,   791,     0,   827,   905,     0,   921,   916,   917,
     482,   481,   480,   479,   612,   610,     0,   615,  1092,   622,
     534,   540,   611,     0,   605,     0,   636,   632,     0,   633,
       0,     0,   634,     0,   608,     0,  1092,   609,     0,   651,
       0,     0,   912,   866,   912,  1201,   145,   125,     0,   126,
     156,     0,     0,     0,     0,   150,   399,     0,   329,    61,
       0,   308,     0,   218,   293,   292,   295,   290,   294,   297,
       0,     0,     0,     0,     0,   277,     0,     0,     0,   239,
       0,     0,   308,     0,   315,   235,   236,   350,     0,     0,
       0,    63,    53,    50,    55,    64,     0,     0,    65,    68,
     659,    80,    73,  1749,  1756,     0,     0,     0,     0,     0,
       0,   401,   408,   182,     0,     0,   284,  1267,     0,     0,
       0,   311,   107,     0,     0,     0,  1270,     0,     0,   215,
       0,   257,     0,   172,  1269,     0,  1257,     0,  1133,  1134,
       0,     0,   407,   849,     0,     0,     0,  1055,   819,   823,
     821,   799,   907,   923,   920,   647,     0,   650,   614,     0,
       0,   529,   536,     0,   539,   533,     0,   616,     0,     0,
     618,   620,     0,     0,     0,   655,     0,     0,     0,  1069,
     560,  1319,  1590,  1495,   561,     0,   565,   559,   563,   568,
     570,   569,   571,   567,   578,     0,   581,  1079,   581,     0,
       0,     0,     0,   161,     0,   152,   152,     0,   138,   963,
       0,   218,     0,   307,   330,   255,     0,     0,   237,     0,
     244,     0,   279,   280,   278,   238,   308,   314,   240,     0,
     351,     0,    72,     0,    88,     0,     0,   320,   120,   118,
     868,   425,     0,  1141,   260,  1264,     0,     0,     0,   284,
     175,  1266,   273,   266,   267,   268,   269,   270,   271,   272,
     287,   286,   258,   259,     0,     0,     0,  1135,     0,   850,
       0,   851,     0,   499,   652,     0,     0,   646,     0,   527,
     525,   528,   530,   526,     0,     0,   623,   639,     0,   619,
     617,   628,     0,   659,     0,   630,     0,     0,     0,   572,
     566,   911,   913,     0,     0,   532,   532,     0,   132,     0,
     654,     0,     0,   154,   154,   140,     0,   314,   332,     0,
     299,   306,   298,     0,     0,   234,     0,   241,   340,   243,
     227,   658,     0,   387,     0,   327,   400,   404,     0,   217,
    1258,   311,     0,  1264,   260,  1270,     0,  1261,     0,     0,
    1141,   852,     0,   926,   645,   648,     0,   621,     0,     0,
       0,   656,   657,   629,     0,     0,     0,   564,     0,     0,
     580,     0,   463,   462,   127,   152,   131,   162,   151,   509,
     153,   509,     0,   340,   285,     0,     0,   263,   227,     0,
       0,   254,     0,    69,    87,    75,   328,     0,   311,  1259,
     216,   173,  1262,  1263,     0,   654,   922,     0,     0,     0,
       0,   537,     0,   543,   638,   574,     0,   573,   914,   915,
     534,   154,   512,   512,   654,   254,   300,   305,     0,   242,
     245,     0,   337,   338,   339,     0,   250,   247,   251,     0,
    1264,     0,  1131,  1578,  1320,  1548,     0,   924,   927,   925,
     919,   649,     0,     0,   535,   575,   531,   509,   143,   142,
     139,   218,   262,     0,     0,     0,     0,   252,     0,   253,
     226,  1260,  1141,     0,   931,   930,   929,   933,   932,   538,
       0,   512,   334,   246,   231,     0,   230,     0,   317,   249,
     654,     0,     0,   144,   229,   233,   232,  1132,   928,   542
};

/* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    37,    38,    39,    40,  2151,  2152,  2153,  1830,   986,
    2863,  1831,   987,   988,  2155,    41,    42,  2202,  2203,    43,
    1450,   536,  1762,  1389,  2583,    45,  2103,  1767,  2107,  2733,
    2363,  2102,  2109,  2843,  2909,  2104,  1768,  1769,  2734,  1770,
      46,    47,  1522,    48,   742,    49,  1523,  1477,  1258,  1006,
    1467,  1247,    50,    86,    51,  2142,  2453,  2923,  2165,  3018,
    2614,  2615,  1832,  2966,  2967,  2144,  2216,  1459,  2959,  1898,
    2790,  1836,  1819,  2616,  1907,  2743,  2491,  1833,  2395,  1899,
    2600,  2849,  1532,  1900,  2850,  2593,  1901,  1502,  1526,  2397,
    2968,  1837,  1503,  2141,  2454,  1446,  1902,  2921,  1903,   496,
    2619,    52,   528,   529,   734,  1195,   530,   715,    53,   653,
    1530,   537,    55,  1884,  2643,  2239,  2644,  1957,  1878,  1256,
    1954,  1576,  1506,  1257,   486,  1590,  2240,  2191,  1577,   538,
     886,    58,    59,    60,   577,   590,   591,  1360,  1740,  2070,
     956,   564,   565,  1872,   605,  1496,  1398,  1399,  1774,  2116,
    1425,  1426,   965,   966,  2692,  2902,  2693,  2694,  2551,  2552,
    2984,  1413,  1417,  1418,  1794,  1784,  1404,  2355,  2716,  2717,
    2718,  2719,  2720,  2721,  2722,   887,  2572,  2835,  1421,  1422,
     968,   969,   970,  1430,  1804,    62,    63,  1743,  2077,  2078,
    2079,  2080,  2333,  2334,  2348,  2344,  2557,  2700,  2081,  2082,
    2685,  2686,  2807,  2351,  2088,  2704,  2705,  2764,  1549,   716,
    1263,  1198,   718,   888,   719,  1174,   889,  1178,   721,   890,
     891,   892,   724,   893,   894,   895,   727,  1170,   896,   897,
    1189,  1217,  1218,  1219,  1220,  1221,  1222,  1223,  1224,  1225,
     939,  1644,   899,   900,   901,  2084,   902,  1354,  1729,  2063,
    2726,  2831,  2832,  2318,  2538,  2683,  2803,  2939,  2977,  2978,
     903,   904,  1303,  1304,  1305,  1726,  1349,  1350,   905,  2456,
    1352,  1637,   940,  1659,  1299,  1049,  1050,  1264,  1617,  1618,
    1640,  1986,  1647,  1652,  2013,  2014,  1660,  1694,   906,  1601,
    1602,  1972,  1272,   907,   630,  1056,   631,  1269,  1688,   916,
     908,   909,   910,  1296,  1297,  2029,  2292,  2293,  1665,  1800,
     582,  2025,  2696,   738,  1139,   911,   912,   913,   914,   942,
     584,  1051,   479,   730,  2910,  1152,   946,  1052,  1834,  1684,
      64,   813,   635,    65,  1150,  1514,    66,  2669,  2502,  1163,
    1534,  1911,   497,    67,    68,    69,    70,    71,   612,  1250,
     539,  1251,  1252,   800,    72,  1259,   802,   803,    73,   571,
     572,  1260,  1373,  1261,    74,   550,    75,   935,   587,   936,
     938,   541,   953,  2098,  1758,    77,    78,   558,   559,    79,
      80,   573,    81,    82,  2666,   542,  2219,  1887,   505,   481,
     482,   732,  1142,  1054,  1143
};

/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
   STATE-NUM.  */
#define YYPACT_NINF -2664
static const int yypact[] =
{
    4665,  -120,   965, -2664, -2664,  -120, 34615, -2664,  -120,    54,
    1193, 39395, -2664,  5999,  -120, 46087,   539,   190,   215,   380,
   39873, 39873, 46087, 46087, 40351,  -120,   252, 46565, -2664,  -120,
   24115, 37005,    10,   -99, 47043, 46087,  1343,   577,   156, -2664,
   -2664, -2664, -2664, -2664, -2664,    97, -2664, -2664, -2664, -2664,
   -2664, -2664, -2664, -2664, -2664, -2664, -2664,    98, -2664,    30,
     144,   -79,   197, -2664, -2664, -2664, -2664, -2664, -2664, -2664,
   -2664, -2664,   192, -2664, -2664, -2664, -2664, -2664, -2664, -2664,
   23636, -2664, -2664, -2664, -2664, -2664, -2664, 40829, 46087, 41307,
   37483, 41785, -2664,   109, -2664, -2664, -2664, -2664, -2664, -2664,
   -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664,
   -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664,
   -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664,
   -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664,
   -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664,
   -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664,
   -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664,
   -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664,
   -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664,
   -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664,
   -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664,
   -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664,
   -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664,
   -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664,
   -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664,
   -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664,
   -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664,
     148, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664,
   -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664,
   -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664,
   -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664,
   -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664,
   -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664,
   -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664,
   -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664,
   -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664,
   -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664,
   -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664,
   -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664,
   -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664,
   -2664, -2664, -2664, -2664, -2664, -2664, -2664,   150, -2664, -2664,
   -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664,
   -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664,
   -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664,
   -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664,
   -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664,
   -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664,
   -2664, -2664, -2664, -2664, -2664, -2664, -2664,   189,  -172, -2664,
     161, -2664, -2664, -2664, -2664,  1343, 42263,   300,   513,   382,
   47521, -2664, -2664, 46087, -2664, -2664,    39,   546, -2664, -2664,
   -2664, 42741, -2664, -2664, -2664, -2664,   527, -2664, -2664,   333,
   -2664,    83, -2664, -2664,   364,   337, -2664, -2664, -2664, -2664,
   -2664, -2664, -2664, -2664,   487, -2664, 52779, -2664, 47999, 48477,
   48955, -2664,   398,  1117,   981, 23157, -2664, -2664, -2664, -2664,
     192, -2664, -2664,   904, -2664, 39873,   904, -2664, -2664, -2664,
   -2664, -2664,  -179,   418, -2664,   449,   750, -2664, -2664, -2664,
     474, -2664, -2664,   697, 10252, 10252, 49433, 49433,   904, 49433,
     547, -2664, -2664,   -26, -2664,   -99, -2664,   -79,   474, -2664,
   24594, -2664,   510,  -172, -2664, -2664,   176,   892, 13773, 46087,
     540, -2664,   574,   540,   581,   589, -2664,  4665,   924,   895,
   37005,   273,   273,  1067,   273,   960,  1006, -2664,   683, -2664,
     619, -2664, 42263, -2664,   651,   925, -2664,   474,  1022,   425,
     818,  1041,  2607,  1046,   806,  1064,   809,  6731, 13773, 33181,
   -2664,  -172, -2664, -2664, -2664,   714, -2664,   724, -2664, -2664,
   -2664, -2664,   585,   955, -2664,   737,  1202, -2664, -2664,   793,
   43219, 43697, 42263, 42263,  1164, -2664, -2664, -2664, -2664,   787,
   -2664, -2664, -2664,    94, -2664, -2664, -2664, -2664,   815, -2664,
     815,   815, -2664, -2664, -2664, -2664,   768,   768,   958,   773,
   -2664, -2664, -2664,  1147, -2664, -2664, -2664, -2664, -2664, -2664,
   -2664, -2664, -2664, -2664,   805,   736, -2664,   815, -2664,   768,
   -2664, -2664, -2664, -2664, -2664, 54168, -2664, -2664, -2664, -2664,
     408,   437, -2664, -2664, -2664,    68,   827, -2664,  1293, -2664,
   -2664, -2664, -2664, -2664, -2664, -2664, -2664,   835, -2664,  5135,
     768, -2664, -2664,  1196,    73, -2664,  1201,   154, -2664,  1206,
    1058, 13773, -2664,  1023,   968, -2664, -2664, -2664, -2664, -2664,
   -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664,
   -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664,
   -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664,
   -2664, -2664, -2664, -2664, -2664, -2664,   -99, -2664, -2664, -2664,
   -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664,
    -138, -2664, -2664, 30999, -2664, -2664,   981,   887, -2664, -2664,
   30999, 14276, 53242,  1354, -2664,  1190, 46087,   906, -2664, -2664,
   -2664, -2664, -2664, -2664,   939,  1431,   105,  1433, 13773,   947,
     105,   105,   949,  1284, -2664, -2664, -2664,   163,   953,   970,
   -2664,   164,   164, -2664,   985,   990, -2664,   165,   993,  1013,
    1450,  1508,   120,  1021,  1027,   736,   105, 13773, -2664,  1029,
     164,  1031,  1033,  1039,  1515,  1050, -2664,  1538,  1069,   100,
     117,  1074,  1078, -2664,  1087, -2664,   166, 13773, 13773, 13773,
    1444, 13773,  7737, 42263,  1593, -2664,  -172,  1109,   904, -2664,
   -2664, -2664, -2664, -2664, -2664, -2664, -2664,   155,  5138, -2664,
    1150, -2664, -2664, -2664,  1311, 13773, -2664, -2664,  1110,  1400,
   -2664,   167, -2664, -2664, -2664,   -27,  1400, -2664, -2664, -2664,
   -2664, -2664,   178,  1516, 30043, 30521, 42263, -2664, -2664,  -172,
   -2664, -2664, -2664, -2664, -2664, -2664,   263, -2664,   192, 32192,
    1119,  1120,  -172,   540, 46087, 46087,  1585, -2664, -2664, -2664,
   37005, 42263, 49911,  1248, -2664, -2664,   -79,   -79,  9246,   -79,
     124,    27, 10755, 14779,  1459,  1348,   132,   131,  1470, -2664,
    1358,   960,  1006, 13773,   574, -2664,  1410, 42263, 35093,   255,
     500,  1146,  1238,  1159,    47,  1571, -2664,  1162, -2664,  1251,
   42263, 54168,   193, -2664,  1610,   193,   193,   473,  1614,  1255,
     244,  1411,   346,  -144,  1162,  2477, -2664, 37005,   128,   533,
    1162, 42263,  1256,   591,  1162,   114, 14276,   812,   847,   373,
     876,   940,   127, 14276,   950,   973,  1277,  1306,  1366,  1383,
    1398,  1406,  1447,  1462,   137,  1471,  1490,  1495,  1503,  1532,
    1542,   143,  1545,   171, 14276,  1547,  1175, -2664, 32192,   -44,
   -2664, -2664,  1556,   149, -2664, 28608,  1168, -2664, -2664, -2664,
   -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664,
   -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664,
   -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664,
   -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664,
   -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664,
   -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664,
   -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664,
   -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664,
   -2664, -2664, -2664, -2664, -2664,  1262, 46087,  1219,   311,  1529,
    1587, 33181,  1186,  1551, 42263,  1417,  2477,  1419,  1197,  1659,
     724,  1199, -2664, 50389, -2664, -2664, -2664, -2664, -2664, -2664,
    1200, -2664, -2664, 13773, -2664, -2664, -2664,  1693, -2664, 53242,
   53242,   815,   815, -2664, -2664,  1669,  1296,  1299,  1693, -2664,
    1693, -2664, -2664, -2664, 53242, -2664, 46087,  1220,  1221,  1693,
   -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664,
   -2664, -2664, -2664, -2664, -2664, -2664,  1693,  1298, -2664,  1302,
    1303,  1304, -2664, -2664, -2664, -2664, -2664, 46087, 46087, -2664,
   46087, 46087, -2664, 46087, 46087,  1216,   585, 44175,   981, 37961,
   -2664, -2664, -2664, -2664,   669,   776, -2664, -2664, -2664, -2664,
   -2664, -2664, -2664, -2664, -2664, 33181, -2664,  1774, -2664, -2664,
   -2664,  1225,   309, -2664,   413,  1343, -2664, -2664, 13773,  -172,
   13773, 32192,  1266, 13773, 13773,  1232,  1693,  1693, -2664,  2839,
    1693,  1693,  4042, 13773, 27471, 13773, 18300, 11258, 13773, 13773,
    8240, 13773,  4042,  1711,  1711, 25552, -2664,  1386, -2664,  1234,
    1944,  5698,  1230, -2664,  1237,  1236, -2664,  1229, -2664,  -172,
    -172, 13773, -2664, 13773,  3183,  3183, -2664,   184, 53242, 13773,
   13773, 13773, 13773, 13773, 32703,  1328,    99, 46087, 13773, 13773,
    1246,   867, -2664, 13773,  1469, -2664,  1257, 13773,  1331,   185,
   13773, 13773, 13773, 13773, 13773, 13773, 13773, 13773, 13773, -2664,
   -2664, 19795,   188,  1575,  1595,  -172,   -96,   738, 10252, 38439,
    1592,  6731, -2664,  -172, 29087,   140,  1592, -2664, -2664, -2664,
   -2664,   168, -2664, -2664, -2664, -2664,  1225, -2664,  1225,  1258,
   42263,   176, 36527, 13773, -2664, -2664,   480,  1267,  1326,   635,
    1732, 46087, -2664, 26031,  1559, -2664,   228,   228,  1273, -2664,
   31474,  1559, -2664, -2664, 18789,  1399,  1553,  1493, -2664, -2664,
    1474,  1476, -2664,  1283, 32228, 15282, 15282, -2664,  1218, 32192,
    1222, -2664, -2664, -2664, -2664, -2664, -2664,    28, -2664, 42263,
      -2,  1459,   131,  1294, -2664, -2664,   845,  1300, 50867, 46087,
    1569,  1526,  1578,  -135, -2664, -2664, -2664, 53242, -2664, 46087,
   46087, 51345, 51823, 33659, 46087, 33181, -2664, -2664, -2664, -2664,
   46087,   688, 46087,  3820, -2664, -2664, -2664,   193, -2664, -2664,
   -2664, -2664, -2664, 46087, 46087, -2664, -2664,   193, 46087, 46087,
     193, -2664,  1099, 46087, 46087, 46087, 46087,  1112, 46087, 46087,
     -39,   -39,  1514, -2664, 11761,   217, -2664, 13773, 13773, -2664,
   13773,  1483, -2664,   507, -2664,  1524,    40,  1357, 42263, 42263,
   46087,  1393, -2664, -2664, -2664, -2664, -2664, -2664, 33181,  1313,
    1314,  1664, -2664,  2477,  1665, 35571,   469,   709,  1359, 12264,
    1780,  1549, -2664, -2664,  1535, 13773,  1329,  1335,    68,   520,
   -2664, -2664,  1334,  1221,  1361,  1364,  1347,  1350, -2664,   588,
   53242,  1693,   103,  1352,  1355,  1322,  1280,   519,  1231,    73,
   -2664,   154, -2664,  1561,   170, -2664,  1448,  1584,   724,  1819,
   -2664, -2664, -2664, -2664, -2664, -2664, -2664,   608, 22678, -2664,
   -2664,  1828,   904,  1828,   571, -2664, -2664,  1828, -2664,  1828,
   -2664, 30999, -2664, 14276, -2664, 53242, -2664,  1367, -2664,  1376,
   13773,    57, -2664, 31555,  1375, 13773,  1377,  1378, -2664, -2664,
   -2664, -2664, -2664, -2664, -2664, -2664, -2664,  1379,  1709, -2664,
    1381,  1395,  4724, -2664, -2664, -2664, -2664, -2664, -2664, -2664,
   -2664, -2664, -2664, -2664, -2664, -2664, -2664,  1396,  1385, 31568,
    1401, 18300, 18300,  7737,  1397, -2664, 18300,  1402, -2664,  1403,
   31487,  1390,  1404, 31614, 12767, 13773, 12767, 12767, 32060, -2664,
    1405, 32105, 46087, -2664, 15785, -2664, -2664, -2664, 13773, 42263,
   -2664, 13773,  1407,  5943, -2664, -2664, -2664,   738,  3144,  3144,
    3144,  4042, -2664, -2664, -2664,  1416, -2664, 18300, 18300, -2664,
    4456,  1008,  7737, -2664, -2664,  1728, -2664,   927, -2664,  1409,
   -2664, -2664,  2764, -2664, 27471,  3655, 13773,   146, -2664, 13773,
    1246, 13773,  1496,  3144,  3144,  3144,   411,   411,   194,   194,
     194,   276,   738, -2664, -2664, -2664,  1413,  1415,  1418,  1761,
    1050, 13773, -2664, -2664,   584,   656, 42263,  2955,  3211,  3261,
   -2664, -2664, 21241,  1466,   -44,  1444,  1466,  1693,  3183, -2664,
     574, -2664, -2664, -2664, 32192, -2664,  1343, 21241,  1473,  1485,
    -104, 24115,  1633, -2664, 46087, -2664, 46087, -2664,  1430,  1592,
    1446, -2664, -2664, -2664,  1453,  1453, 13773,  2117,  1453,  1650,
    1651,   794,   794,  1218,  1652, -2664, -2664,  1504, -2664, -2664,
   -2664, 13773,  8743,  1242, -2664,  1249, -2664, -2664, -2664, -2664,
    1442, -2664, -2664,  1704, -2664, -2664, -2664, -2664,  1533,  1162,
   13773,  1677, -2664,   195,  1452,  1801,  -123,  1754, 46087, -2664,
    1666, -2664,   660,  1804,   170,  1806,   170, 33181, 33181, 33181,
     610, -2664, -2664,   904, -2664, -2664,   642, -2664,  -162, -2664,
   -2664, -2664,  1548,   682,  1162,  2477, -2664, -2664, -2664, -2664,
   -2664, -2664, -2664,   169,   698,  1162,  1550, -2664,  1554, -2664,
    1557,   769,  1162, -2664, -2664,   217,   217,   217, 14276, -2664,
    1685,  1689,  1482, 32192, 32192, 32192,  1472, -2664,   304, -2664,
   46087, -2664, -2664, -2664,  1483, 42263,  1477,  1935,   724, -2664,
    1640,   462, -2664,   904, 46087, 42263, 42263, 42263, -2664, -2664,
   -2664,  1486,  1501, -2664, 53242,   -38,  1700,  1706, 46087,  1555,
    1159,  1972, -2664,   658, 13270,  1862, 42263,  1519, -2664, -2664,
   -2664, -2664,  1693, -2664, -2664,  -133,  -133, -2664, 46087, -2664,
    1523, -2664,  1528, -2664, -2664, -2664, -2664, -2664, -2664, -2664,
   -2664, -2664, -2664, -2664, 46087, -2664, 42263,  1872,  1343, -2664,
   33181, -2664, 36049, -2664, -2664, -2664, -2664,   904, -2664,   904,
    1750, 46087, 29565,   904,   904, -2664, -2664, -2664, -2664, 32144,
   13773, -2664,  1885, 53242, -2664,  6184, -2664, -2664, -2664, 13773,
   -2664, -2664, 13773, -2664, 27471, 13773,  1858, -2664,  2018,  2018,
    5698, 53242, 18300, 18300, 18300, 18300,   269,  1031, 18300, 18300,
   18300, 18300, 18300, 18300, 18300, 18300, 18300, 19292,   562, -2664,
   -2664, 13773, 13773,  1868,  1858, 13773, -2664, 53242,  1536, -2664,
    1539,  1540, 13773, -2664, 53242,  1543,  1541,  7737, 32179, -2664,
    -172, 27957, -2664, 32192, -2664,  3183, 13773,  1716,  1942, 13773,
    1552, 13773,  1867, -2664, -2664,  1544, -2664, -2664, 53242, 13773,
    1558,  3344, 18300, 18300,  4791, -2664,  4810, 13773,  7737, -2664,
    1514,  1589, -2664,  1745,  1644,  1644,  1644,  1644, -2664, -2664,
   42263, 42263, 42263, 21720,  1886, 20762, 44653,  1560, -2664,  1412,
   -2664, 44653, 45131, -2664,  1576, -2664,  -172, 13773,  1887,   217,
    1386,  1887,  1565, -2664, -2664,  1566, -2664, 13773,  1718, -2664,
   -2664, -2664,  1628, -2664,   659, -2664,  1990,  1718, -2664,   668,
   -2664, 26031,  1473, 13773,  -172,   528, -2664, -2664, -2664,  1580,
   -2664,  1453, -2664, -2664, -2664,  1789, -2664, -2664, -2664, 42263,
   -2664, 46087, 27976,  1928, -2664, 46087, 46087, 46087, -2664, 46087,
    1579,  1581,   975,  1588, -2664,   975,  1909,   160,  1159,   244,
    6174,   -43, -2664, -2664, -2664,  1658, 46087, -2664, 46087, -2664,
   -2664, -2664, -2664, -2664, 33659, -2664, -2664, -2664, 33181, 26992,
   33181, 46087, 46087, 46087, 46087, 46087, 46087, 46087, 46087, 46087,
   46087,  1590,  1594,  1599,  1514, -2664, -2664, -2664, -2664, -2664,
   -2664,  -144, -2664, -2664,   304,  1601, 35571,  1343,  1359,  1587,
     585, 45609,  1603,  1586, -2664,   686,  2477,  1602,  2050, -2664,
     469, 35571, -2664, -2664, -2664,  2011, -2664,   398,   177, -2664,
   -2664,  1343, -2664,  1343, 32192, 46087,  1663, -2664,  1221,  1608,
   -2664, -2664,  1221, 53242, -2664, -2664,   170, 42263, -2664,   699,
   -2664, -2664, -2664, -2664, 46087,  1611, -2664,  1611, -2664, -2664,
   13773, 32192, -2664,  1615, -2664, 32192, 28005, -2664, 32192,  1868,
   -2664,  1346,  1346,  1346,  1690,  1947,   422,  1620,  1346,  1346,
    1346,   249,   249,    92,    92,    92,  2018,   562, 32192, 32192,
   -2664, -2664,  1621, -2664, -2664, -2664, -2664,  1623, 46087, -2664,
    5634, -2664,  1617,  1625, 46087, -2664, -2664,   281, 13773, 13773,
    4456, -2664,  4855, 13773, 53242,   722,  4456,   205, 13773,  2637,
    3320, 13773, 13773,  5118, 28024,  1626, 13773, 26510, -2664, 42263,
   42263, 42263, 42263, -2664, -2664, -2664, 44653, 45131,  1629, 20282,
    1412,  1630, 42263, -2664,  1724,  1645, 21241,  1921,  1851, -2664,
   21241,  1851,   839,  1851,  1926,  1724, 25073, -2664,  1724,  1653,
    1855, -2664,   568, 32192,  2094,  1967,  1656, -2664,  1967,   904,
   -2664, 32192, 10252, -2664,  1343,  1172, 46087,  -172,   -47, -2664,
    1670, 46087, -2664,  1718, 32192, -2664, -2664, 27471, -2664, -2664,
   -2664, -2664, -2664, 46087,  1657, -2664,  1662,   975, -2664, 46087,
    1702, -2664,   601,  1966,    48, -2664, 33181,  2901,   299, -2664,
    1979,  1893, -2664,   193, -2664, 13773,   299,  1894,   204, 46087,
   -2664, -2664,  2483, -2664, 53242,   170,   170, -2664, -2664,  1671,
    1672,  1673,  1674,  1686,  1687,  1691,  1692,  1694,  1695,  1696,
    1698,  1712,  1715,  1719,  1720,  1721,   805,  1722, -2664,  1723,
    1580,  1725,  1729,  1731, 53705,  1733,  1734,  1738,  1739,  1740,
     669,   776, -2664, -2664, -2664, -2664, -2664, -2664,   737,  1741,
   -2664,  1703, -2664, -2664,  1773, -2664,  1777, -2664, -2664, -2664,
   -2664, -2664, -2664, -2664, -2664,   217,   887,    84, 46087,  1705,
    1555,  2179,   538,  1953,  1746, -2664,   904,  1359, -2664, 35571,
     716,   504,  1706, -2664,   141,  1555, -2664,  2138,  1788, -2664,
    1964, 46087,  1753, -2664, -2664, -2664,  2216, -2664, 36049,  1611,
   32192, -2664, -2664, -2664, 18300,  2085,  1758, 53242, -2664, -2664,
   13773, -2664, -2664,  4456,  4456,  4855,   759, -2664,  4456, 13773,
   13773,  4456,  4456, 13773, -2664, -2664, 28084, 52301, -2664, -2664,
   -2664, -2664, -2664, -2664, -2664, -2664, 34137, 44653,  1760, -2664,
   38917, -2664, -2664, 46087,  1412, 21241, -2664, -2664,  1301, -2664,
   21241,  2038, -2664, 21241, -2664, 46087,  1762, -2664, 46087, -2664,
    9749, 13773,  1802,   904,  1802, -2664,  1763, -2664,  -104, -2664,
   -2664,  2176, 22199,  2132, 13773, -2664, -2664,  1767,   975, -2664,
    1932,  1702,  1770, -2664, -2664, -2664, -2664, -2664, -2664, -2664,
     803,  1772, 46087, 46087, 18300, -2664,   299,   629,   191, -2664,
    2048, 42263,  1702,  2190, -2664, -2664, -2664, -2664,  2157,  2237,
    2124, -2664, -2664, 32192, -2664, -2664,  1693,  1693, -2664, -2664,
    2202, -2664, -2664, -2664, -2664,   737,   221, 26992, 46087, 46087,
    1778, -2664, -2664,  -144,  2162,   808,   469, -2664,  1343, 42263,
    2136, 35571, -2664,  2251,  1790, 46087,  1555,   883,   883, -2664,
    1934, -2664,  1938, -2664, -2664,   187, -2664, 42263, -2664, -2664,
   22199,  1343, -2664,  3191, 18300, 53242,   828, -2664, -2664,  4456,
    4456,  4456, -2664,  1991, -2664, -2664,   849,  2260, -2664, 46087,
     -73,   -82,  1803,  1807, -2664, -2664,  1813, -2664, 13773,  1822,
   -2664, -2664, 21241,  1301,   869, -2664, 53242, 46087,   873, 53242,
   -2664,  1823,  -112,  1824, -2664,  7234,  1798, -2664, -2664, -2664,
   -2664, -2664, -2664, 32192, 32192, 46087,  1976, -2664,  1976, 10252,
    1879, 46087, 13773, -2664,   875,  2243,    51,   -29, 32192, -2664,
   42263, -2664, 33181, -2664,   975, -2664, 33181, 13773, -2664,    63,
    1690,  2288, -2664, -2664, -2664, -2664,  1702,   724, -2664, 46087,
   -2664,  2140, -2664, 46087,  1889,   290,  1899, -2664, -2664, -2664,
   -2664,   887,   904,  1359,  1706,  1788,  1835, 42263,  1343,   469,
     398, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664, -2664,
   -2664, -2664, -2664, -2664,  2266,  2051,  2269,  1663,   880,  3191,
     891, -2664,  2284,  1514,  1576, 34137,  1843, -2664,  1844, -2664,
   -2664, -2664, -2664, -2664, 46087,   810, -2664, 32192, 46087, -2664,
   -2664, -2664, 46087,  2202,   930, -2664, 13773,  1850, 13773, -2664,
   16288,  1840, -2664,  2312, 13773,  1911,  1911,  1343, -2664, 28103,
    1466, 22199, 46087, 46087, 46087, -2664,  1977,   724,   975,   932,
   -2664,  1866, -2664, 28510,  2078, -2664,     2, -2664,  2108, -2664,
    1860, -2664, 13773,   170,  1933, -2664, -2664, -2664,  2322, -2664,
   -2664, 35571,  1864,  1788,  1706,  1555,  2074, -2664,  2075,  1870,
    1359, -2664, 13773,   -16, -2664, -2664, 46087, -2664,   934,  1871,
    1873, -2664, -2664, -2664,  1875, 16288,  1881, -2664, 46087,  1890,
   32192,  2010, -2664, -2664, -2664,  2243, -2664, -2664, -2664,   228,
   -2664,   228, 26031,  2108, -2664, 33181, 26992,  2102,  1860, 13773,
      87,  2097,  2477, -2664, 32192, -2664, -2664,  1343, 35571, -2664,
   -2664, -2664, -2664, -2664, 22199,  1466,  1390, 16791, 16791,  1888,
     956, -2664,  2374,  2043, -2664, -2664,  1891, -2664, -2664, -2664,
   38917, 46087,  1453,  1453,  1466,  2097, -2664, -2664,  2188, -2664,
   -2664, 28589, -2664, -2664, -2664,   111,  2106, -2664,  2110,  1169,
    1788,   976, -2664, 17797,  2042,   438, 31521, -2664, -2664, -2664,
   -2664, -2664,  1895,  1901, -2664, -2664, -2664,   228, -2664, -2664,
   -2664, -2664, -2664,  1954,   412,   412,  2289, -2664,  1973, -2664,
   -2664, -2664,  1359,  2378, -2664, -2664, -2664, -2664, -2664, -2664,
    2403,  1453,   975, -2664, -2664,  2391, -2664,   136, -2664, -2664,
    1466, 17294,  1916, -2664, -2664, -2664, -2664, -2664, -2664, -2664
};

/* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -2664, -2664, -2664,  1818, -2664, -2664, -2664,   266, -2664,   957,
   -2664,   258,  -555,   597, -2664, -2664, -2664, -2664, -2664, -2664,
    -927,    31, -2664, -2664, -2664, -2664,    58,   312, -2664,  -412,
   -1877,  -141, -2664, -2496, -2574, -2664, -2664,  -472, -2404, -1686,
   -2664, -1103,   235, -2664, -2130, -2664,  -615,  -997,  -776,  -988,
   -2664,    37, -2664,  1227, -1102, -1769, -2445,  -474, -2664,  -549,
   -2664,  -302, -1767,  -519,  -505, -2664, -2318,  -939, -2664,  1475,
    -207, -2664,   636, -2664, -2125, -2664, -2664,   627, -2664,  -960,
   -2664, -2664, -1468,   250,  -455, -2335, -2141, -1781,  -635, -2664,
    -493,   306, -1735, -1010, -2664,   662, -2664,  -437, -2664,  -508,
   -2165, -2664, -2664, -2664,  1250,  -725, -2664,  1312, -2664, -2664,
   -2664,    33, -2664, -2664, -2664, -2664, -2664,  -558,   594, -2280,
   -2664,   529, -2664, -2664, -2664, -2664,   -28,   287, -2664,    13,
      56,    -4,   -11,     3,    21,    59,  1546,  1567, -2664, -1211,
     534, -2664, -2664, -1770,  -605,   -45, -2664,   706, -1361, -1737,
    -447,  1053,  1527,  1530,  -321,  -340, -2664,  -453, -2664, -1037,
   -2664, -2664,   708,  1096, -1249, -1269, -2664,   410, -2664,  -391,
    -324, -2664, -2664, -2664, -2664, -2664,   152,  -221,  -429,  1081,
   -2664,  1562, -2664, -2664, -2664, -2664, -2664, -1243, -2664,   758,
   -1968,   443, -1982, -1852,   198,   179, -1133,  -183,    26,   453,
    -283, -2664, -2664,  -276, -1717, -2375,  -291,  -290, -2664, -2664,
    -522, -1109,  -685, -2664, -2664,  -363,  -424, -2664, -2664, -2664,
     481,  1037, -2664, -2664,  1062,  2045, -2664,  -562,  2054,  -510,
    -671,  1263, -1075,  1264, -1016,  -785, -1081,  1265,  1268, -1226,
    3019, -1567,   464,    -5, -2664, -2358, -1624, -2664, -2664, -2664,
     -40, -2664,  -362, -2664,  -364, -2664, -2664, -2664,  -401, -2663,
   -2664,  1189,   879, -2664, -2664, -2664, -1262, -2664,  3788,   774,
   -2664, -1614,  -872,  -580,  1282,  -745,  -986, -1156, -2664, -2664,
   -2664, -2664, -2664, -2664, -1405, -1790,  -777,   843, -2664, -2664,
     959, -2664, -2664, -2664,  -572,  1056,  -564,  -836,   852, -2664,
     199,  1997, -1330, -2664,   821, -1926, -2664, -2664,   477, -2664,
      24,  -452, -1617,   829, -1013,    36, -2664,  3302,   180,  1836,
    -853, -2101, -2664, -2664,  -482, -2172,  -913, -2664,  -606, -2664,
   -2664, -2664, -1118, -2664,   674, -2664, -1099, -2664,  -229, -2664,
   -2664, -2114, -2664, -2664, -2664, -2664, -2664, -2664,  -434, -2664,
    -471,  -462, -2664, -2664,    19,  -788,  1330, -2664, -2664,   478,
   -2664,   979, -2664,   684, -2664,    70, -2664,  1191, -2664, -2664,
   -2664,    34,  1624,   461, -2664,  1203, -2664, -2664, -2664, -2664,
   -2664,   296, -2664, -1096, -2517,    82, -2343,  -625,    -6, -2664,
   -2664, -2664,  -530, -2664, -2099
};

/* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
   positive, shift that token.  If negative, reduce the rule which
   number is the opposite.  If zero, do what YYDEFACT says.
   If YYTABLE_NINF, syntax error.  */
#define YYTABLE_NINF -1760
static const yytype_int16 yytable[] =
{
     480,   476,  1147,   971,   717,   805,  1480,  1005,   941,  1229,
    1302,   646,  1232,    56,   606,  1253,   729,  1481,  1445,   929,
    1185,    61,  1636,  1140,  1539,   744,  1159,  1246,  1733,  2091,
    1307,    44,   595,    54,    76,   540,  1775,    61,  2117,  1778,
    1191,  2122,   477,   576,  1456,  2026,   735,  1512,  1513,  1309,
     608,  1515,  2145,  1452,  1516,  2479,    57,   581,  1492,  1144,
    2160,  1434,  2162,   745,   609,  1355,  1262,  1004,  2458,  1010,
    2460,  1014,    57,   799,  1988,  1989,  1543,   737,  1363,  2008,
    2110,  1485,    83,  2140,  2481,  2492,    57,  2495,  1674,  1675,
    2050,   551,   594,   616,   593,  2181,  2182,  2183,  -449,  2193,
    2347,  2291,   720,  1991,   484,  -729,   806,  2330,  1171,  1172,
    -721,   619,   822,   622, -1097,   626,   624,   607,  2085, -1097,
    2037,  2038,  -729,  1746,  2842,  -726,  1192, -1094, -1094,  -726,
    2601,  1192, -1635,  2085,  1148,  1183,    57,  2647,  1517,  1686,
   -1738, -1738, -1646,   923,  -452, -1072,  1370,  1596, -1653,  1799,
   -1749, -1749,  2663, -1646, -1098, -1653, -1756, -1756,   964,  2205,
     547,  1235, -1095, -1095,   822,  2597, -1098,  1796, -1635,  -688,
    -701,  -716,   547,   547,  2659,   601,   967,  1165,  2604,   930,
     585,  1367,  1240,   547, -1758, -1758,  1686,   822,  2687,  2918,
     659,  -449,  2767,  2708,  1970,   729,  2641,  1240,  1614,  1191,
     548,   548,   822,  1448,  1610,  1318,  -409,     3,     4,  1882,
     647,  -946,  1192,   822,  1483,  1723,  1465,   598,  -946,  1468,
    1469,  1166,  1724,  2280,  2735,  2811,  2245,  2247,  1192,  2345,
    2369,  2994,  -965,  1707,  2809,  1325,  2606,  -452,  2581,  -965,
    2844,  2624,  2845,   602,  1448,  2212,  2794,   603,  -182,  1405,
    1405,  3025,   603,  -182,  2795,  2173,  2741,  2962,  2870,  1730,
    1991,  2660,  1437,  1612,  2827,  1772,  2798,  1327,  1171,  1172,
    2911,  1490,  1802,   805,  2812,  2399,  2661,  2758,  1491,   562,
     805,   720,   648,   544,  2496,  1402,  2636,  1318,    26,  1457,
     960,   960,  1318,  1368,  1183,  1406,  1406,    84,   543,  2100,
     954,  1298,   729,  2149,  1817,   599,  1464,   810,  2754,   547,
    3003,  2937,  2735,  2781,  1175,  1475,  1817,  1325,   811,  2356,
     560,   603,  1310,   628,  2169,    31,   578,   629,  1186,  2617,
    1448,  2412,  2824,  2854,  2101,  1254,  1184,  2170,  2609,  1476,
    2938,  1449,    85,  2635,   931,  2347,   932,  2400,  2654,  1327,
    1187,  1365,  1773,  2618,  1327,  1407,  2929,  1144,  3028,  1708,
    1238,  1440,  1818,  1239,   962,   962,    33,  1226,  2554,  2387,
    2257,   649,  2558,  2653,  2137,  1709,   617,  2987,  1365,  1803,
    1710,  2610,   563,  -449,  2378,  -576, -1735, -1735,   720,   924,
    2963,  1403,   688,  1433,   805,   805,  1167,  2611,   588,  2265,
    2140,  1731,  2140,   955,  1408,  1408,  1870,   650,  2846,  2951,
    2813,  3026,  1371,   963,  1369,  1193,  1651,  1711,    36,  2810,
    1193,  2857,  1318,  2796,   545,  2261,  2262,  2263,  2264,  -452,
    2401,  2268,  2269,  2270,  2271,  2272,  2273,  2274,  2275,  2276,
    2277,  2751,  1636,   651,  1495,  2497,  -449,  2687,   978,  2085,
    2582,  2085,  1325,  3001,   979,  1883,  2869,  1494,  2662,  1455,
     925,   604,  1593,  2765,  1409,  1409,  2755,  2964,   628,  2513,
    3014,  2957,  1364,   816,  2544,  1938,  1940,  1941,  1812,  1175,
    1935,   729,  1458,  2735,  1327,  2309,  2310,   660,   546,  2598,
     652,  2866,  -452,  1386,  1613,  2612,  2586,  1184,   634,  2919,
    1687,  1193,  2613,  1168,  1382,  1892,    61,   586,  1869,  2509,
     637,  2940,  1600,  1442,  2125,  2120,   632,  1193,   633,   636,
     731,  2774,  2093,  2642,  1431,  1528,  2112,  2071,  2072,   804,
    2971,   595,  2931,  1796,   600,  1481,  2458,  1275,  2460,  2266,
    1936,    57,  1432,  1484,  1455,  1140,   628,  2052,  2995,  2267,
     629,   485,  2515,  1169,   801,    61,  2930,  -449,   480,   480,
     980,  1186,  1871,   972,  1712,  2688,   608,   720,  -946,  1194,
       3,     4,  1725,  1991,  1228,  1448,  2735,   596,  1186,  1470,
     609,  2259,   480,  1187,  2174,  2006,  1451,  2697,  1457,  -965,
      57,   594,  2701,  1536,  2677,  2703,  -449,  1188,  -449,  1931,
    1187,  3005,  -721,  -452,   927,   934, -1097,  1869,  2193,  2281,
      56, -1097,  1569,  2588,  1190,   808,  1744,  -726,    61,  1540,
    1541,  1053,   480,  1141, -1635,   933,   952,  1443,    44,  2599,
      54,    76,   533,   607, -1646,   628,   974, -1072,  2095,   629,
   -1653,   611,  -452,  1507,  -452, -1646, -1098, -1653,   943,  1578,
    2875,  2657,  1313,    57,  2874,  1231,   597,   717, -1098,  2868,
   -1635,  1173,  1177,  -716,  1361,  1747,  1244,  1245,  1291,   729,
     729,  2388,  1548,  1572,  1156,  1158,  1160,  1161,   822,    83,
    3015,  1244,  1245,  2146,   729,  2585,   627,  1348,  1597,  2375,
    1298,  1846,  2626,  2627,  1604,  2189,  2190,  1598,   610,   731,
    2658,  1849,  2516,  1475,  1852,  2640,  1479,  1649,   638,   805,
     639,   978,  2085,  2766,   981,  1508,  2085,   979,  1683,  2594,
    1518,  1471,  1636,   807,   642,   548,   809,  1476,  1566,  1472,
    2479,  1672,  -182,  -182,  2819,   480,  1310,  1598,  1144,  2003,
    2004,  2005,  2006,  2645,   654,   735,  1560,  2752,   920,  1318,
    1759,  3006,  1564,   658,  2376,   720,   720,  2500,  1140,  3016,
     487,  1380,  1509,  2587,  1381,   982,  2935,  1570,   661,   983,
     720,  1937,  1939,  1208,  1209,  1457,   657,   799,  1561,  1325,
    1574,  1458,  2864,  1598,  1913,   822,  3017,  2654,   662,  1518,
    1955,  1598,  2595,  1144,   649,  2147,  1676,   804,  2123,   984,
    1181,  1182,  1953,   822,   804,  1053,   731,  1592,   729,  2296,
    1593,  1327,  2228,  1920,  2690,  2458,  1307,  2460,  2232,  2691,
    2753,   488,   480,   980,  2744, -1733, -1733,    61,   601,   978,
     650,  2030,   978,  1457,  1942,   979,  1943,  2094,   979,  1945,
     503,  1960,  -499,  1455,   532,  1689,  1961,  -499,  1845,  1838,
     663,   480,   553,  2319,  2320,  2321,  2322,  1481,  1908,  1302,
   -1734, -1734,    57,   592,   592,  2655,  2201,   985,   978,  1186,
    1507,   480,   480,   480,   979,   480,   480,  2018,   595,  2020,
    2021,  1809,  2184,  1212,  1213,  1865,  1866,  1867,  3020, -1736,
   -1736,  1187,  2305,  1486,   720,   741,   602,  1962,  1186,   480,
    1278,  1345,  1346,  1347,  1348,  1188,    26,  2120,  1844,   547,
    2782,  1594,  1140,   652,  1595,   812,  -499,   620,   804,   804,
    1187,   640,  2085,   641,  1457,  1820,  2175,  1855,  1905,   814,
    1906,  2085,  1862,  1760,  1190,  2114,  2085,   729,  1300,  2085,
    1457,   980,  2649,    31,   980,  1394,  1395,  2673,  1401,   981,
    1379,  1489,   480, -1737, -1737,  1917,   480,   480,  2085,   609,
     609,  2783,   609, -1739, -1739,  -499,  2213,   480,  1458,   815,
    2784,  2220,  2848,   816,   603,  1390,   952,   981,  1755,  2852,
     980,  1231,   817,  1249,    33,   731, -1740, -1740,   534,  1509,
    1249,  1847,  2064,   491,  2065,   492,  1850,  1695,    34,  2785,
     928,  1436,    26,  1891,  2148,  1879,  2149,   722,  1880,  2338,
    1053,  1457,   607,   607,  1463,   607,  1317,  1053,  1921,  1318,
     495,  1595,    35,   720,  1696,  1959,  1458,   922,  1929,  1963,
    1455,  1964,   983,  1482,  2150,  1487,   535,  2750,  1053,    31,
     729,   944,  2172,  2339,   918,   919,  2085,   921,   805,  1325,
    2001,  2002,  2003,  2004,  2005,  2006, -1760,  2042,  2176,  2560,
     937,   805,   984,   628,  2066, -1072,  2067,   629,  1312,  2341,
    2786,   945,  2808,  1966,   533,  2019,    26,  1315,  2085,   947,
      33,  1327,  2787,    26,  2043,   729,  1927,   948,  1455,  1928,
    2808,  1362,  2391,   950,    34,   981,  1512,  1513,   981,  2157,
    1515,  2159,  1372,  1516,  1249,  1249,  1949,  2799,  2163,  1950,
     951,  2164,  2040,    31,   604,  1636,   973,  1458,    35,   960,
      31,   958,   978,  2906,   961,  2384,   720,  2386,   979,  2180,
     985,   975,  1761,  1458,   981,   978,   957,  1697,   959,  2089,
    2167,   979,  1698,  2168,   976,  1141,  1008,  1699,  2526,  1012,
     983,  2039,  2403,   983,    33,  1302,  2222,  2365,   989,  1593,
    2366,    33,  2410,    87,  2241,  -498,  2370,   480,    34,  2371,
    -498,   720,   977,   731,   731,    34,  2385,  2392,  1520,  1455,
    1009,  2085, -1760,  1013,  2487,  1808,   722,  1880,   731,   983,
    2343,   990,    35,   962,  2476,  1455,  1007,  2507, -1760,    35,
    2508,  2890,  2044, -1760,  1458,   991,    36,  2045,  2559,  2402,
    2562,  2411,  1145,    36,  1011,  2988,  2989,  2085,  2972,   984,
    2527,  1146,  3012,  1595,   992,  1149,  1343,  1344,  1345,  1346,
    1347,  1348,    92,   804,   980,   483,  1151,  2990,  1153,  -498,
   -1760,   531,   963,  2393,  1154,  2394,  1162,   980,   985,  1141,
    1164,   985,   561,  2198,  2230,  2231,   574,  2678,   801,    61,
    1595,  1568,   480,  1169,   480,  1173,  1455,   480,   480,  2367,
    1177,  2208,  1176,  2788,  3023,   993,  2789,   480,   634,   480,
     480,   480,   480,   480,   480,   480,    61,   985,  -498,  1700,
   -1741, -1741,   487,   722,    57,  1336,   632,  1179,   633,   636,
    1701,  2745,  1180,  3027,  2746,   480,  2773,   480,  2564,  1880,
    2085,  2567,   731,   480,   480,   480,   480,   480,  1141, -1742,
   -1742,    57,   480,   480,  1196,    88,  2801,   480,  1197,  1595,
     656,   480,  1199,    89,   480,   480,   480,   480,   480,   480,
     480,   480,   480,  1234,  1578,   480,  1227,  2804,    26,  2046,
    2805,  1230,   480,   488,   821,  1053,  1233,  1991,  1141,   740,
    2047,  2676, -1760, -1760, -1760,  1236,   994,  2821,   487,    90,
    2822,  2825,  1237,  2840,  2822,  2120,  2841,   480,  2880, -1743,
   -1743,  2841,  1820,  1741,  1255,    31,  1693, -1760,   981,  2881,
    1265, -1143,  1595,  2452,   729,  2337, -1744, -1744,   480,  1733,
     934,   981,  1763,  1268,  1750,   821,  1752,   743,  1991,   480,
     480, -1745, -1745,  1992,  1993,  1994,    91,   995,   592, -1746,
   -1746,  1266,   805,  2589,  2410,   996,    33,  1420,  2893,   488,
    2914,  2822,  2941,  2915,  1270,  2942,  -692,   997,  -699,  1853,
      34,   731,  2286,   983,  1273,    57,  1274,  1141,  1275,  1141,
    1276,  2253,  1860,  1801,  2981,  -689,   983,  2822,  1598,  1619,
   -1747, -1747,  2236,   729,    35,  1202,  1203,  1277,   998,  2260,
    2578,  2338,   722,  1854,  3002, -1748, -1748,  2841,    36,  2549,
     720,   729,    36,   489, -1750, -1750,  1861,  1279,  1053, -1760,
    -576,   480,   480,  2549,   480,  2282,  1343,  1344,  1345,  1346,
    1347,  1348,  2287, -1751, -1751,  2339,  2337,   729, -1752, -1752,
    -577,  2505,  1141,  -690,   729,  1000, -1753, -1753,  1280,  2800,
    -693,  2340,  2352,  1053,  1281,   491,  1283,   492,  1284,   480,
    1285,  2341,  1886,  1888,  1208,  1209,  1286,  1001,   729,    26,
    1909,   985,  1598,  -691,   731, -1754, -1754,  1287,  2952,   720,
    2953,  1748,   495,   490,   985, -1755, -1755,  1003, -1757, -1757,
   -1759, -1759,  1838,   723,  2461,  2342,  1288,   720,   487,  1497,
    1498,  1289,   804,  1797,  1798,  1290,    31,  -550,  -550,  2475,
    1210,  1211,  2338,    57,  1291,   804,  2698,  1053,   725,   731,
    1295, -1143,  1995,   720,   480,  1212,  1213,  -554,  -554,   480,
     720,   491,  1308,   492,  -553,  -553,  1311,  1356,  1376,  1378,
    1353,  1358,  2506,  1374,  1996,  1359,  2339,    33,  1384,   493,
    1383,  1387,  1393,   961,   720,   494,  3011,  2622,   495,   488,
     963,    34,  2340,  1997,  1427,   480,   480,   480,  1429,   595,
     480,  1435,  2341,  1453,  1212,  1213,  2771,  2455,   480,   480,
     480,   480,  2343,  1454,  2120,    35,  1455,  1460,   480,   729,
     722,   722,   480,  1461,  1466,   480,  1462,  3000,  1473,    36,
    1474,  1488,  1478,  1493,  1500,   722,  2342,  1501,  1505,  1510,
    1511,   480,   480,  1890,  1997,  1518,   480,  1521,   595,  1524,
    2631,  2632,  2482,  1519,  1525,  1527,  1529,  1535,   821,  1300,
     480,  1991,   822,   480,  1542,   480,  1992,  1993,  1994,  1544,
      26,  2504,  1545,  1555,  1565,  1551,  1552,  1556,  1557,  1558,
    2241,  1600,  1318,   729,   821,   480,  1591,  1991,  1664,  1605,
    1666,  1668,  1992,  1993,  1994,  1671,   480,  2083,  1669,  1670,
    2699,  1685,   723,  1692,  1703,   720,  1706,    31,  1300,  2298,
    1645,   480,  2083,  1727,  1704,  1728,  1749,   595,  1249,  1185,
    2068,  1742,  1958,  2343,  1756,  1757,  1693,   725,  1764,   634,
     480,  1249,   602,   592,  1776,  1787,  1786,    61,   477,  1788,
    1144,  1789,  2059,  1790,  1791,   480,   480,   632,    33,   633,
     636,  1814,  1807,   477,   729,  1598,  1815,  1810,  2076,   722,
    1816,   491,    34,   492,   480,   603,  1877,  1881,  1885,   720,
    1893,  1894,    57,  2076,  1895,  1896,  1914,   594,  1910,  1915,
    1916,  1141,  1141,  1141,  1579,   494,    35,  1918,   495,  1922,
   -1760, -1760, -1760,  1919,  2001,  2002,  2003,  2004,  2005,  2006,
      36,  1923,   478,  1302,  1924,  1925,  1944,   504,  1926,   723,
    1933,   504,  1946,  1934,  1947,  1948,   549,   549,   552,   504,
     557,  2452,  1053,   557,  1956,  1967,   557,   583,  1785,  1580,
     504,   504,  1968,  1974,   725,  1976,  1977,  1978,  1979,  1980,
     720,  1998,  1999,  2000,  1984,  2001,  2002,  2003,  2004,  2005,
    2006,  2015,  2630,  1981,  1983,  1581,  2036,  2041,   731,  1987,
    2009,  2010,  2016,  2023,   729,  2034,  2048,  1996,   480,  2195,
    2058,  2057,  2060,  1582,  2062,  2061,   557,  1583,  2106,  2206,
    2207,  2209,  2087,   583,   504,   583,   583,   583,   722,  2097,
    2099,  2111,  2113,  1996,   729,  2115,  -555,  -556,  2126,  1584,
    2226,  2127,  1585,  2129,  1141,  2130,   804,  2133,  2131,  2135,
     821,  2136,  2139,  1991,  2156,  2143,  2158,  1586,  1992,  1993,
    1994,  1909,  2185,  2171,   480,  2177,  2186,   731,  2188,  2178,
    1568,  2197,  2179,   480,  2196,  2299,   480,  1997,   805,   480,
    2187,  1481,  2200,  2214,  2210,   731,   480,   480,   480,   480,
     720,  2215,   480,   480,   480,   480,   480,   480,   480,   480,
     480,   480,  2211,  1997,    57,   480,   480,   729,  2221,   480,
    2936,   731,  2225,  2166,  2218,  2315,   480,  2227,   731,  2234,
     720,   480,  2237,   595,  2235,  2244,  2252,  2012,   723,  1991,
     480,   722,  2011,   480,  2283,   480,  2303,  2284,  2285,  2289,
    2317,  2304,   731,   480,  2288,  2316,   480,   480,  2069,  1587,
    2301,   480,   480,   725,   595,  2328,  2307,  1588,  2192,  2350,
    1562,  2336,  1563,  2359,  2360,  2354,  2362,   480,  2083,   480,
    2083,   595,  2364,  2204,  2368,  2379,   722,  2377,  2383,  2390,
    2389,   480,  2398,  1300,  2414,  2396,  2490,  2486,  2472,  -461,
    2494,   480,  2473,   720,  2323,  2324,  2325,  2474,  2478,  2489,
    1589,  2485,  2501,  -461,  2503,  1645,  1645,   480,  -461,   477,
    1645,   477,  1880,  2511,  1300,  2455,  2514,  2517,  2520,  2518,
    2748,  2519,  2858,  2521,  2535,  1623,  2546,   729,  2547,  2326,
    2550,  2329,  1249,  1624,  1625,  1626,  2851,  2242,  2925,  2243,
    2452,  2555,  2553,  2248,  2249,  2556,  2563,  2569,  2570,  2571,
    2568,  1645,  1645,  2380,  2573,  2590,  2584,  -461,  1141,  1996,
    2591,  2592,  1141,  2459,  1141,   729,  2596,  2620,  2621,  2625,
   -1094, -1733, -1734, -1735,  1998,  1999,  2000,  -461,  2001,  2002,
    2003,  2004,  2005,  2006,  2823, -1736, -1737,  2823,  2638,  2637,
   -1738, -1739,  2639, -1740, -1741, -1742,   729, -1743,  2883,   729,
    1998,  1999,  2000,  2646,  2001,  2002,  2003,  2004,  2005,  2006,
    2480, -1744,  2913,   720, -1745,  2648,   723,   723, -1746, -1747,
   -1748, -1750, -1751,  2650, -1752,  2484,  -461,   731, -1753,  1997,
   -1754,   723, -1755, -1756,  2498,  -461,  2499, -1757, -1758, -1759,
   -1095,   725,   725,  2651,   480,  2664,  2894,  2665,  2896,  2667,
    2670,   720,  2671,    57,  2674,  2675,   725,  2689,  2702,  2707,
    2725,  1568,  2731,  2737,  2729,  2739,  2740,  2742,  1813,  2747,
    2756,  2759,  2760,  2761,  2762,  2763,  2770,    57,  1821,    57,
    1824,  2861,   720,  1835,  2772,   720,  2777,  2778,  2779,  1839,
    2792,  1841,   480,   480,  2793,  2802,  2806,   480,   731,  2830,
    2814,  2834,   480,  1848,  2815,   480,   480,  2969,  1851,  2851,
     480,  2816,  1856,  1857,  1858,  1859,  2842,  1863,  1864,  2818,
    2826,  2828,   583,  2837,  2856,  2865,   644,  2860,  2862,   645,
     480,  2083,  2871,  2876,   480,  2083,  2878,   504,  2882,  2877,
    2886,  2898,  2887,  2540,  2541,  2542,  2543,  2895,  2899,  2457,
    2901,  2912,  2916,  2755,  2920,   723,   480,  2922,  2927,  2926,
    2908,  2928,  2932,  2933,   645,   504,   504,  2934,  2950,  2943,
    2958,  2944,   477,  2945,  2192,  -461,   477,  2577,  2579,  2947,
     725,   549,  2965,  2982,  2983,   722,  2980,  2537,  2992,  2985,
    1141,  2996,  2076,  3009,  2455,  2998,  2076,  3004,  3010,   480,
     915,   915,   557,   557,  2119,   557,   729,  3013,   731,  2994,
    2995,  3021,  3022,  3024,  3029,   949,   583,  2413,  1840,  2154,
      57,    57,  2417,  2372,  2580,   504,  1998,  1999,  2000,  2907,
    2001,  2002,  2003,  2004,  2005,  2006,   583,  2730,  2459,   628,
    2954,  2488,   947,   629,  2960,  2628,  3019,  2855,   583,  2999,
    2991,  2791,  2138,  1444,   722,  2161,  1645,  1645,  1645,  1645,
    2956,  2493,  1645,  1645,  1645,  1645,  1645,  1645,  1645,  1645,
    1645,  1645,   722,  2997,  2418,  2134,  2955,  1559,  2194,  2238,
    2672,  2477,  2118,  1366,   723,  1806,   583,   583,   583,   583,
    1385,  1538,   720,  1424,  2889,  1423,  2903,  2986,   722,  2128,
    1783,  2358,   804,  2656,  2946,   722,  2897,  2836,   480,   725,
    2574,   731,  1805,   991,   480,  2096,  1645,  1645,  2331,   991,
    2820,  2561,  2885,   480,   480,  2545,  2327,   480,  2884,   722,
    1428,  2891,   992,  2892,  2728,  2949,  2948,  2979,   992,  2575,
     480,  2083,  1609,  1611,  1615,  1732,    57,  1616,  2032,   480,
    2083,  2121,  1599,  2055,   480,  2083,  1876,   480,  2083,  2053,
    1971,  2576,   917,  2199,   480,   480,  2090,  2357,  2879,  1571,
    1965,   726,  1751,  2373,  1388,     0,   480,  2083,   480,     0,
     728,     0,   477,   993,     0,  1753,     0,   723,     0,   993,
       0,   477,     0,     0,     0,     0,   477,     0,   480,   477,
       0,  1627,  1628,  1629,     0,  1630,  1631,  1632,  1633,  1634,
    1635,  2076,   725,     0,     0,     0,  2076,     0,   477,  2076,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     978,  2459,   723,     0,     0,  2757,   979,     0,     0,     0,
       0,     0,     0,   991,     0,   821,     0,     0,  1991,     0,
     722,     0,  1267,  1992,  1993,  1994,  2406,   725,     0,     0,
       0,  2775,   992,     0,   480,  2083,  2652,     0,   480,   731,
    2529,     0,     0,  2776,   994,     0,     0,     0,     0,     0,
     994,     0,     0,     0,  2656,     0,     0,     0,  1249,     0,
       0,  2797,   480,     0,     0,     0,   480,  2083,     0,     0,
     731,     0,     0,   731,    57,     0,   477,     0,     0,   480,
       0,   595,     0,   993,   722,     0,     0,     0,     0,  1306,
       0,     0,     0,   480,     0,   995,   480,    57,     0,     0,
       0,   995,     0,   996,     0,     0,  1141,  2217,   477,   996,
    1141,   480,   980,     0,     0,   997,     0,     0,     0,     0,
     726,   997,     0,  2727,     0,     0,     0,     0,  2076,   728,
       0,     0,   583,     0,  2847,     0,     0,     0,     0,     0,
       0,  1300,  1317,     0,     0,  1318,   998,     0,     0,     0,
     504,   504,   998,     0,     0,   722,   583,   583,  1392,     0,
       0,  2873,     0,     0,     0,     0,     0,     0,     0,   480,
    2083,  2872,     0,     0,   994,  1325,     0,     0,     0,     0,
       0,     0, -1760,   583,  1447,     0,     0,  2457,     0,     0,
     480,     0,   480,  1000,   480,     0,   583,     0,   480,  1000,
       0,     0,     0,     0,    57,   480,  2083,  1327,     0,     0,
       0,   477,  1608,   583,   547,  1001,     0,   583,     0,     0,
    2904,  1001,     0,     0,  1996,   995,   480,   726,     0,     0,
       0,     0,     0,   996,     0,  1003,   728,     0,     0,     0,
       0,  1003,     0,     0,     0,   997,   480,   477,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   480,
       0,     0,     0,    57,     0,   722,   981,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   998,  2049,     0,  1141,
    2459,     0,     0,   480,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1997,   722,     0,     0,   480,  2083,
       0,   480,   480,     0,     0,     0,     0,     0, -1760,     0,
    2970,   723,     0,     0,     0,     0,     0,   999,  1200,  1201,
       0,   983,  2867,  1000, -1760, -1537,     0,     0,     0, -1760,
    2381,     0,     0,     0,     0,     0,   725,   480,  2601,     0,
     477,     0,     0,     0,  2602,  1001,     0,     0,  1645,     0,
       0,  1002,  1504,    57,     0,  2415,     0,  2603,     0,     0,
     583,     0,     0,     0,     0,  1003, -1760,     0,   722,  1533,
    2462,  2463,  2464,  2465,  2466,  2467,  2468,  2469,  2470,  2471,
     723,     0,     0,     0,     0,   480,  2604,     0,  2605,     0,
       0,     0,     0,     0,  1202,  1203,     0,     0,   723,     0,
       0,     0,  1550,     0,     0,   725,   726,     0,     0,     0,
       0,     0,     0,     0,     0,   728,     0,     0, -1537,   985,
       0,  1336,     0,   725,   723,     0,     0,     0,     0,     0,
       0,   723,     0,   645,   645,     0,   504,   504,  1645,   504,
     645,     0,     0,   583,  2606,     0,     0,     0,     0,   725,
       0,     0,     0,     0,     0,   723,   725,     0,     0,  1204,
    1205,  1206,  1207,  1208,  1209,     0,  2457,  1210,  1211,     0,
   -1537,     0,     0,  2607,     0,     0,     0,     0,     0,     0,
     725,     0,     0,     0, -1537,     0,     0,  1562,   722, -1537,
    1638,  1998,  1999,  2000, -1537,  2001,  2002,  2003,  2004,  2005,
    2006,  1663,     0, -1537,     0,     0,     0, -1537,  1645,     0,
       0,     0,     0, -1760,     0,     0,     0,     0,     0,     0,
       0,     0,  1317,     0,     0,  1318,   722,     0,     0,     0,
   -1760, -1760, -1760,   645,     0,     0,     0,     0, -1537,     0,
       0,  2608,     0,     0,     0,     0,  2609,     0,     0,     0,
       0,     0,     0,     0,     0,  1325,     0,   722, -1537,     0,
     722,     0,  1326,     0,   915,   583,     0,     0,     0,   821,
       0,     0,  1991,  1212,  1213,     0,   723,  1992,  1993,  1994,
       0, -1539,     0,     0,     0,     0,   583,  1327,   583,  2610,
       0,     0,     0,     0,   726,   726,     0,  1765,     0,  1771,
       0,   725,     0,   728,   728,  2611,     0, -1537,     0,   726,
   -1537,     0,     0,     0,     0, -1760, -1537,     0,   728,     0,
       0,     0,  1343,  1344,  1345,  1346,  1347,  1348,     0,     0,
       0, -1553,     0,     0,     0,   583,     0,     0,     0,     0,
     723,     0,     0,     0,  1447,   504,     0,     0,     0,     0,
   -1537,     0,     0,     0,     0,   504,  1822,   504,  1826,     0,
     504,     0,  1200,  1201,     0,   725,   504,     0,   504,     0,
       0,     0,     0, -1537, -1539,     0,     0,     0,     0,   645,
     504,     0,     0,     0,   645,   504,  1214,  1215,  1328,   504,
     504,   504,   504,     0,   504,   504,     0,     0,   821,     0,
       0,  1991,     0,  2612,  1329,     0,  1992,  1993,  1994,  1330,
    2613,   723,     0,     0,   583,   583,  1889,     0,     0,     0,
       0,     0,  1317,  2530, -1553,  1318, -1539,     0,     0,  2069,
       0,  1904,     0,   726,     0,     0,   725,     0,  1202,  1203,
   -1539,     0,   728,     0,     0, -1539,  1333,     0,     0,     0,
   -1539,     0,     0,     0,     0,  1325, -1537,     0,     0, -1539,
       0,     0, -1760, -1539, -1537,     0,     0,   722,     0,     0,
       0,     0,     0,     0,     0,     0, -1553,     0, -1760,     0,
       0, -1537,     0, -1537, -1537,     0,     0,  1327,     0,     0,
   -1553,     0,     0,     0, -1539, -1553,     0,     0,     0,     0,
   -1553,  1336,  2749,  1204,  1205,  1206,  1207,  1208,  1209, -1553,
       0,  1210,  1211, -1553, -1539,     0,     0,     0,     0,     0,
   -1537,   723,     0, -1537, -1537, -1537,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2768,  2769,     0,
       0,     0,     0,     0, -1553,     0,   725,     0,  1997,     0,
       0,   723,     0,     0,  2780,     0,     0,  2308,     0,     0,
       0,     0,   726, -1539, -1553,     0, -1539,     0,   504,     0,
       0,   728, -1539,     0,     0,  1306,   725,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0, -1760,     0,
       0,     0,     0,  1338,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0, -1760,     0, -1539,  1996,     0, -1760,
    1638,     0,     0, -1553,     0,     0, -1553,  1212,  1213,     0,
       0,     0, -1553,     0,   723,     0,     0,     0,     0, -1539,
    2838,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   583,     0,     0,     0, -1760,     0,  2086,   725,
       0,     0,     0,   898,   898,     0, -1553,     0,  2859,     0,
       0,     0,     0,  2086,     0,   726,     0,  2105,     0,     0,
    2108,     0,  1771,     0,   728,     0,     0,  1997,     0, -1553,
       0,     0,     0,     0,     0,  2069,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1339,     0,     0, -1760, -1760,
   -1760,  1336,  1343,  1344,  1345,  1346,  1347,  1348,     0,     0,
     726,     0, -1539,     0,     0,     0,  1048,  1055,     0,   728,
   -1539,     0,     0,     0,  1504,     0,     0,     0,     0,     0,
    1214,  1215,     0,  1317,     0,  2069,  1318, -1539,     0, -1539,
   -1539,  1320,  1321,  1322,   723,  1998,  1999,  2000,     0,  2001,
    2002,  2003,  2004,  2005,  2006,     0,     0,     0,  1323,     0,
       0,     0, -1553,     0,     0,     0,  1325,     0,     0,   725,
   -1553,     0,     0,  1326,     0,     0, -1539,     0,     0, -1539,
   -1539, -1539,   723,     0,     0,     0,  1504, -1553,     0, -1553,
   -1553,   583,     0, -1760,     0,     0,     0,     0,  1327,     0,
    1504,   583,   583,   583,     0,     0,     0,   725,     0,     0,
       0,     0,     0,   723,   504,     0,   723,     0,     0,     0,
       0,     0,   583,     0,     0,     0, -1553,     0,     0, -1553,
   -1553, -1553,     0,     0,  2233,     0,     0,     0,   725,     0,
       0,   725,     0,     0,     0,     0,     0,     0,     0,     0,
     645,     0,   583,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1504,  1504,     0,
       0,     0,     0,     0,  1998,  1999,  2000,     0,  2001,  2002,
    2003,  2004,  2005,  2006,     0,     0,     0,     0,     0,     0,
    1638,     0,     0,     0,     0, -1760,     0,     0,     0,  1328,
    1048,     0,  1343,  1344,  1345,  1346,  1347,  1348,     0,     0,
       0,     0,     0,   978,     0,  1329,     0,  1271,     0,   979,
    1330,     0,     0,     0,     0,     0,   991,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1331,  1332,     0,   992,  1282,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1333,     0,     0,
       0,     0,     0,     0,     0,     0,  1292,  1293,  1294,     0,
       0,  1301,     0,     0,     0,     0,   583,   583,   583,   478,
       0,  2086,  2335,     0,     0,     0,     0,  2335,  2349,     0,
       0,     0,     0,     0,  1357,  1334,   993,     0,  1335,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1336,     0,     0,     0,     0,  1771,     0,   726,
       0,     0,     0,   723,     0,   980,     0,     0,   728,     0,
       0,     0,     0,     0,     0,   583,     0,   504,     0,     0,
       0,  1504,  1447,  1504,     0,  1533,     0,  1400,   725,     0,
       0,  1414,  1419,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   504,     0,  2416,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   504,   504,   504,
     504,   504,   504,   504,   504,   504,   504,   994,   726,     0,
       0,     0,     0,     0,     0,     0,     0,   728,     0,     0,
       0,     0,  1904,     0,  1338,  1048,   726,   583,     0,     0,
       0,     0,  1048,     0,     0,   728,     0,  1447,     0,     0,
    1317,     0,     0,  1318,     0,     0,     0,     0,  1320,  1321,
    1322,  1533,   726,  1048,     0,     0,     0,     0,   995,   726,
       0,   728,     0,   583,     0,     0,   996,     0,   728,     0,
    1504,     0,     0,  1325,     0,     0,     0,     0,   997,     0,
    1326,     0,     0,   726,     0,     0,     0,     0,     0,     0,
       0,     0,   728,     0,     0,  1248,     0,     0,     0,   981,
       0,     0,  1248,     0,     0,  1327,     0,     0,     0,   998,
       0,     0,     0,     0,   504,     0,     0,     0,     0,     0,
    2522,     0,     0,     0,     0,     0,  1339,     0,     0,  1340,
    1341,  1342,     0,  1343,  1344,  1345,  1346,  1347,  1348,     0,
       0,     0,     0,  2539,     0,   583,   583,   583,   583,     0,
    1842,     0,  2335,  2349,   983,  2335,  1000,     0,  2548,     0,
       0,     0,  2086,     0,     0,     0,  2086,     0,     0,     0,
       0,     0,  2566,     0,     0,     0,     0,     0,  1001,     0,
       0,     0,     0,     0,  1843,     0,     0,     0,   915,  1314,
       0,     0,  2105,     0,     0,     0,     0,  1771,  1003,     0,
       0,     0,     0,  1638,   726,     0,  1328,     0,     0,  1447,
       0,     0,     0,   728,  1248,  1504,  1248,  1248,     0,     0,
       0,     0,  1329,     0,     0,     0,     0,  1330,     0,     0,
       0,     0,     0,     0,     0,  2629,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1331,
    1332,     0,   985,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1333,     0,     0,     0,   726,     0,
       0,     0,     0,     0,     0,     0,     0,   728,     0,     0,
       0,     0,  1603,     0,  1248,     0,     0,  1248,  1248,     0,
       0,     0,  1622,     0,  1639,     0,     0,  1650,  1653,  1658,
    1661,     0,  1334,     0,  1504,  1335,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1904,     0,     0,     0,  1336,
       0,     0,  1673,     0,     0,     0,     0,  2668,  1677,  1678,
    1679,  1680,  1681,     0,     0,     0,     0,  1690,  1691,   726,
       0,     0,  1702,     0,     0,     0,  1705,     0,   728,  1713,
    1714,  1715,  1716,  1717,  1718,  1719,  1720,  1721,     0,     0,
    1722,     0,     0,  2684,     0,     0,     0,   898,     0,     0,
    1048,     0,   478,  2335,     0,     0,  2695,     0,     0,   504,
       0,  2086,     0,     0,     0,     0,  2086,     0,     0,  2086,
       0,  2706,  1754,     0,  2709,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2736,     0,
       0,  1338,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1293,  1294,     0,     0,   645,   504,
       0,     0,     0,     0,     0,     0,     0,   583,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   726,
       0,     0,     0,     0,  1317,     0,     0,  1318,   728,     0,
       0,     0,     0,     0,   504,   504,     0,     0,     0,  1537,
       0,     0,     0,     0,     0,   583,     0,  1447,     0,   726,
    1546,   504,  1547,     0,     0,     0,     0,  1325,   728,     0,
       0,  1553,     0,   583, -1760,     0,  2736,     0,     0,     0,
       0,     0,     0,  1048,     0,     0,  1873,  1874,  1554,  1875,
       0,     0,     0,  1339,     0,   504,  1340,  1341,  1342,  1327,
    1343,  1344,  1345,  1346,  1347,  1348,     0,     0,  2086,     0,
       0,     0,     0,  2709,     0,     0,  1573,  1575,  1048,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2833,   726,     0,     0,   915,     0,   504,     0,     0,
       0,   728,     0,     0,     0,     0,   583,     0,  1606,  1607,
       0,     0,  1620,  1621,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   504,     0,     0,     0,   645,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1048,   583,     0,     0,     0,     0,     0,  1969,
       0,     0,     0,     0,  1975,     0,     0,     0,     0,     0,
   -1760,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   478,     0,     0,     0,     0, -1760,     0,     0,     0,
    2888, -1760,     0,     0,   504,     0,     0,     0,  2706,     0,
       0,     0,  1990,     0,     0,   -39,     0,     0,     0,     0,
       0,     0,     0,  1658,     0,  1658,  1658,  2736,   645,   645,
     645,     0,   726,  2028,     1,     0,  1351,  2031, -1760,     0,
    2033,   728,     0,     0,     2,     0,     3,     4,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1447,     0,     0,
       0,     0,     5,     0,     0,     0,     0,  1795,  1795,     0,
     726,     6,  2706,     0,     0,  2051,     0,  1351,  2054,   728,
    2056,     0,  1317,     7,  2833,  1318,     0,     0,     0,  1319,
    1320,  1321,  1322,  1336,     8,     0,     0,     0,  1771,     0,
       0,   726,     0,     0,   726,     0,     9,  1323,    10,     0,
     728,     0,     0,   728,  1447,  1325,     0,     0,     0,  1248,
    2736,     0,  1326,     0,     0,     0,    11,     0,     0,  1248,
       0,     0,  1248,     0,     0,     0,  2695,   645,     0,     0,
      12,     0,     0,     0,     0,  1400,     0,  1327,     0,  1317,
      13,     0,  1318,     0,     0,     0,    14,     0,     0,     0,
    1419,  1720,     0,     0,    15,     0,    16,    17,  1317,     0,
       0,  1318,     0,     0,     0,     0,     0,     0,     0,  2132,
      18,     0,  1325,     0,     0, -1760,  1351,     0,     0, -1760,
       0,     0,     0,  1351,     0,     0,     0,     0,     0,     0,
       0,  1325,     0,  1930,  1932,     0,     0,     0, -1760,    19,
       0,     0,     0,  1317,  1327,     0,  1318,     0,     0,     0,
       0,  1320,  1321,  1322,    20,     0,     0,     0,     0,     0,
    1248,     0,     0,  1327,     0,     0,     0,  1048,     0,     0,
       0,     0,     0,  1248,     0,     0,  1325,     0,  1328,     0,
      21,     0,     0,  1326,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1329,     0,     0,     0,     0,  1330,
       0,     0,     0,     0,     0,     0,     0,     0,  1327,     0,
       0,     0,     0,  2224,  2311,     0,     0, -1760,     0,     0,
       0,  1331,  1332,     0,  1343,  1344,  1345,  1346,  1347,  1348,
       0,     0,     0,  2312,     0,     0,  1333,     0,     0,     0,
       0,   726,     0,     0,     0, -1760,     0,     0,     0,     0,
     728,     0,     0,     0,     0,     0,     0,    22,     0,     0,
      23, -1760,     0,     0, -1760,     0, -1760,     0,     0,  2251,
       0,     0,     0,     0,  1334,     0,     0,  1335,  2255,     0,
   -1760,  2256,     0,     0,  2258, -1760,     0,     0,     0,    24,
       0,  1336,     0,     0,  1337,     0,     0,     0,    25,     0,
       0,     0,     0, -1760,     0,     0,     0,     0,     0,  1328,
    2278,  2279,    26,     0,  1754,     0,     0,     0,     0,    27,
       0,     0, -1760,    28,     0,  1329,  2290,     0,     0,  2092,
    1330,     0,     0,    29,     0,  2297,     0,     0,  2300,  1351,
    2302,     0,     0,     0,     0,    30,     0,     0,  2306,    31,
    1351,     0, -1760, -1760,  1646,     0,  2313,  2314,  1336,     0,
    1351,  1351,  1351,  2124,  2124,     0,     0,  1333,     0,  1351,
       0,     0,     0,     0,     0,     0,     0,  1336,     0,     0,
       0,     0,     0,  1338,     0,    32,  2353,     0,     0,     0,
      33,     0,     0,     0,     0,     0,  2361,     0,     0,     0,
       0,     0,     0,     0,    34,     0,  1317,     0, -1760,  1318,
       0,     0,  2374,     0,     0,     0,     0,     0,     0,     0,
       0,  1316,  1336,     0,     0,  1351,  1317,     0,    35,  1318,
       0,     0,     0,  1319,  1320,  1321,  1322,     0,     0,  1325,
       0,     0,    36,     0,     0,   -39, -1760,     0,     0,     0,
   -1760,  1323,     0,     0,  1324,     0,     0,     0,     0,  1325,
       0,     0,     0,     0,     0,     0,  1326,     0,  1351, -1760,
       0,  1327,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1351,     0,     0,  1339,     0,  1351,  1340,  1341,
    1342,  1327,  1343,  1344,  1345,  1346,  1347,  1348,     0,     0,
       0,     0,     0,     0,  2229,  1982,     0,     0,     0,     0,
       0,     0,     0,     0,  1338,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1200,  1201,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2533,     0,     0,     0,     0,     0,     0,     0,  2510,
       0,     0, -1760,     0,     0,     0,     0,     0,     0,  1343,
    1344,  1345,  1346,  1347,  1348,     0,     0,     0,     0,     0,
       0, -1760, -1760,     0,     0,     0,     0,     0,  1343,  1344,
    1345,  1346,  1347,  1348,     0,     0,     0,     0, -1760,     0,
       0,     0,  1328, -1760,     0,     0,     0,  2523,  2524,     0,
    1202,  1203,  2525,     0,     0,     0,     0,  2528,  1329,     0,
    2531,  2532,     0,  1330,     0,  2536,  1339,     0,     0,  1340,
    1341,  1342,     0,  1343,  1344,  1345,  1346,  1347,  1348,     0,
   -1760,     0,     0,     0,     0,  1331,  1332,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1333,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   898,     0,     0,     0,  1204,  1205,  1206,  1207,  1208,
    1209,  1351,     0,  1210,  1211,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1336,     0,     0,  1334,     0,
    1351,  1335,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2623,  1336,     0,  1351,  1337,  1646,
    1646,     0,  2007,     0,  1646,     0,     0,     0,  1351,     0,
       0,  1351,     0,     0,     0,     0,  1351,     0,     0,  1351,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1351,     0,     0,     0,  1351,  1351,  1351,  1351,  1351,
       0,  1248,     0,     0,     0,  1646,  1646,     0,  1351,  1351,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1351,     0,     0,  1351,     0,     0,     0, -1760,     0,  1212,
    1213,  1351,  1351,  1351,  1351,  1351,  1351,  1351,  1351,  1351,
    1351,     0,     0,     0,     0,     0,     0,  1338,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2028,
       0,     0,  1351,     0,     0,     0,     0,     0,  2679,  2680,
       0,     0,  2681,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2723,
    2724,     0,     0,     0,     0,     0,     0,     0,     0, -1760,
       0,     0,     0,  2738,     0,     0,  1343,  1344,  1345,  1346,
    1347,  1348,  1214,  1215,     0,     0,     0,     0,     0,  1339,
       0,     0,  1340,  1341,  1342,     0,  1343,  1344,  1345,  1346,
    1347,  1348,  1216,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1317,     0,     0,  1318,     0,     0,     0,  1319,
    1320,  1321,  1322,     0,     0,     0,     0,     0,     0,     0,
       0,  1351,  1351,  1351,     0,     0,     0,  1323,     0,     0,
    2294,     0,     0,     0,     0,  1325,     0,     0,     0,     0,
       0,     0,  1326,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1248,  1317,  1327,     0,  1318,
    1248,     0,     0,  1319,  1320,  1321,  1322,  2817,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1323,     0,     0,  1301,     0,     0,     0,     0,  1325,
       0,     0,     0,     0,     0,     0,  1326,     0,   898,     0,
       0,  2839,  1573,  1575,     0,     0,     0,  1351,     0,     0,
       0,     0,     0,  1351,     0,     0,  2853,     0,     0,     0,
       0,  1327,     0,     0,     0,     0,  2007,  2007,  1351,     0,
    1646,  1646,  1646,  1646,     0,     0,  1646,  1646,  1646,  1646,
    1646,  1646,  1646,  1646,  1646,  1646,  2007,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1328,     0,
       0,     0,     0,     0,     0,     0,  1351,     0,     0,  1351,
       0,  1351,     0,     0,  1329,  2007,  2007,     0,     0,  1330,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1351,
    1646,  1646,  1351,     0,  1351,     0,     0,     0,     0,  2723,
       0,  1331,  1332,  2900,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1333,     0,     0,     0,
       0,     0,  1328,     0,     0,     0,     0,     0,     0,     0,
       0,  2924,     0,     0,     0,     0,     0,     0,  1329,     0,
       0,     0,     0,  1330,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1334,     0,     0,  1335,     0,     0,
       0,     0,     0,     0,  2723,  1331,  1332,     0,     0,     0,
    1351,  1336,     0,     0,  1337,     0,     0,     0,  1573,  1575,
    1333,     0,     0,     0,     0,     0,     0,     0,  2961,  1248,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1317,     0,     0,  1318,     0,  2976,  2976,  1319,  1320,
    1321,  1322,     0,     0,     0,     0,     0,     0,  1334,     0,
       0,  1335,     0,     0,     0,     0,  1323,     0,     0,     0,
       0,     0,     0,     0,  1325,  1336,     0,     0,  1337,     0,
       0,  1326,  2976,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1351,  1338,     0,     0,  1327,     0,     0,     0,
     506,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1351,
    2976,     0,     0,  1351,  1351,     0,  1351,     0,     0,  2007,
    2007,  2007,  2007,     0,     0,     0,  2007,  2007,  2007,  2007,
    2007,  2007,  2007,  2007,  2007,  2007,  1351,  1351,     0,     0,
       0,     0,     0,   507,     0,     0,     0,  1338,  1351,     0,
       0,     0,     0,     0,     0,  1351,     0,     0,  1351,   508,
    1351,     0,     0,     0,  1351,     0,     0,  2007,  2007,     0,
       0,  1351,  1351,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1339,     0,  1328,  1340,  1341,
    1342,     0,  1343,  1344,  1345,  1346,  1347,  1348,     0,     0,
       0,     0,  1667,  1329,     0,     0,     0,     0,  1330,     0,
       0,  1351,     0,   509,     0,     0,     0,     0,     0,  1351,
       0,     0,     0,   510,     0,     0,     0,     0,     0,     0,
    1331,  1332,  1351,     0,     0,   511,     0,     0,     0,     0,
     512,     0,     0,     0,     0,  1333,     0,     0,     0,  1339,
       0,     0,  1340,  1341,  1342,     0,  1343,  1344,  1345,  1346,
    1347,  1348,  1317,     0,     0,  1318,  1667,   513,     0,  1319,
    1320,  1321,  1322,     0,     0,     0,     0,     0,     0,     0,
     991,     0,     0,  1334,     0,     0,  1335,  1323,  1248,     0,
       0,     0,     0,     0,     0,  1325,     0,     0,     0,   992,
    1336,     0,  1326,  1337,     0,     0,     0,     0,     0,     0,
       0,     0,   514,     0,     0,     0,   515,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1327,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     993,  2404,     0,     0,     0,     0,     0,     0,     0,  2405,
       0,     0,     0,     0,     0,     0,     0,     0,  1351,     0,
       0,     0,  1646,     0,     0,     0,     0,     0,     0,   516,
       0,  1351,  1351,  1351,     0,     0,  1351,     0,     0,  1351,
    1351,     0,  1338,   517,  1351,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2406,     0,     0,
       0,     0,     0,     0,     0,     0,   518,     0,  1328,   519,
       0,     0,     0,     0,     0,     0,     0,   520,     0,     0,
     521,   994,     0,     0,  1329,     0,     0,     0,     0,  1330,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   522,
       0,     0,  1646,     0,     0,     0,     0,     0,     0,     0,
       0,  1331,  1332,   523,     0,     0,     0,     0,     0,     0,
     524,  1351,     0,     0,     0,     0,  1333,     0,     0,   525,
       0,     0,   995,     0,  1339,   526,     0,  1340,  1341,  1342,
     996,  1343,  1344,  1345,  1346,  1347,  1348,     0,     0,     0,
       0,  2035,   997,     0,  2407,     0,     0,     0,     0,     0,
     527,     0,     0,     0,  1334,     0,     0,  1335,     0,     0,
       0,  2007,  1646,     0,     0,     0,     0,  1351,  1351,  1351,
       0,  1336,     0,   998,  1337,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1351,  1351,     0,     0,     0,     0,     0,     0,     0,
    1000,     0,     0,     0,     0,     0,  1351,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2007,     0,
       0,     0,  1001,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1003,  1338,  2408,     0,     0,  2409,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2007,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1351,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1351,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1351,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1339,     0,     0,  1340,  1341,
    1342,  1455,  1343,  1344,  1345,  1346,  1347,  1348,     0,     0,
       0,     0,  2254,     0,     0,     0,     0,     0,  1351,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1351,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1015,   818,   547,   819,   820,   821,
     822,   823,     0,     0,     0,     0,     0,     0,     0,  1351,
      94,    95,    96,    97,    98,    99,   100,   101,  1016,   102,
     103,   104,     0,     0,  1351,     0,   824,     0,     0,   105,
     106,     0,   107,   108,   109,  1017,   111,   112,   113,   114,
     825,  1018,   826,   827,     0,   119,   120,   121,   122,     0,
     123,   828,   829,   124,   125,   830,   831,   128,     0,   129,
     130,   131,   132,   832,     0,  1019,     0,   135,   136,   137,
     138,   139,   140,  1020,   142,   143,   144,     0,   145,   146,
     147,   148,   149,   150,     0,  1021,   152,   153,   154,   834,
     835,   836,  1022,   838,   839,   840,   156,   157,   158,   159,
     160,   161,   162,   841,   842,   165,   843,   166,     0,   167,
     168,   169,   170,   171,   172,     0,   173,   174,   175,   176,
     177,  1023,     0,   178,   179,   678,   181,   182,     0,   183,
     184,   185,     0,   186,   187,   188,     0,   189,   190,   191,
     192,   844,   194,   195,   196,   197,   198,   845,   846,   200,
       0,   201,   202,   847,   204,     0,   205,     0,   206,  1024,
       0,  1025,   209,   210,   211,  1026,   213,     0,   214,     0,
     848,   849,   217,     0,   218,   219,   220,   221,   222,   223,
     224,  1027,   226,   227,   228,   229,     0,   230,   231,   232,
     233,   234,   235,     0,   236,  1028,   238,   239,   240,   241,
     242,   243,   850,   851,     0,   852,     0,   247,  1029,  1030,
     250,  1031,   252,   253,   254,   255,   256,   257,     0,     0,
     258,  1032,   260,  1033,     0,   262,   263,   264,   853,   854,
     265,   266,   267,   268,   269,  1034,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   855,  1035,   856,   292,   293,   294,
     295,   857,   296,   297,  1036,   299,   858,   859,   301,   860,
     303,   304,   305,     0,   306,   307,     0,     0,   861,   309,
     310,     0,     0,   311,   312,  1037,   314,  1038,   862,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,     0,
     327,   328,   863,   330,   331,   332,   333,   334,   335,     0,
     336,   337,   338,   339,   340,   341,     0,   342,   343,   344,
     864,   346,   347,   348,   349,     0,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,     0,     0,
     362,   363,  1039,   365,   366,   367,   865,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,     0,   380,
     381,   382,   383,   384,   866,   385,   386,   387,   388,   389,
    1040,   391,   392,   867,   394,     0,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,  1041,   408,
     868,   410,     0,   411,   412,     0,   413,  1042,   415,   416,
     417,   418,   419,     0,   869,   870,     0,     0,   422,   423,
     871,   425,   872,   873,   427,   428,  1043,   430,   431,   432,
     433,   434,     0,     0,   435,   436,   437,   438,   439,   875,
       0,   440,   441,   442,   443,   444,   445,   876,  1044,   447,
    1045,   449,   450,   451,   452,   453,     0,     0,   454,     0,
       0,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   877,     0,     0,     0,     0,     0,     0,   878,
     879,  1046,     0,     0,     0,     0,   881,     0,   882,  1047,
       0,     0,     0,   883,     0,   884,   885,    93,   818,   547,
     819,   820,   821,   822,   823,     0,     0,     0,     0,     0,
       0,     0,     0,    94,    95,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,     0,     0,     0,     0,   824,
       0,     0,   105,   106,     0,   107,   108,   109,   110,   111,
     112,   113,   114,   825,   116,   826,   827,     0,   119,   120,
     121,   122,     0,   123,   828,   829,   124,   125,   830,   831,
     128,     0,   129,   130,   131,   132,   832,     0,   833,     0,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
       0,   145,   146,   147,   148,   149,   150,     0,   151,   152,
     153,   154,   834,   835,   836,   837,   838,   839,   840,   156,
     157,   158,   159,   160,   161,   162,   841,   842,   165,   843,
     166,     0,   167,   168,   169,   170,   171,   172,     0,   173,
     174,   175,   176,   177,     0,     0,   178,   179,   678,   181,
     182,     0,   183,   184,   185,     0,   186,   187,   188,     0,
     189,   190,   191,   192,   844,   194,   195,   196,   197,   198,
     845,   846,   200,     0,   201,   202,   847,   204,     0,   205,
       0,   206,   207,     0,   208,   209,   210,   211,   212,   213,
       0,   214,     0,   848,   849,   217,     0,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,     0,
     230,   231,   232,   233,   234,   235,     0,   236,   237,   238,
     239,   240,   241,   242,   243,   850,   851,     0,   852,     0,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,     0,     0,   258,   259,   260,   261,     0,   262,   263,
     264,   853,   854,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   855,   290,   856,
     292,   293,   294,   295,   857,   296,   297,   298,   299,   858,
     859,   301,   860,   303,   304,   305,     0,   306,   307,     0,
       0,   861,   309,   310,     0,     0,   311,   312,   313,   314,
     315,   862,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,     0,   327,   328,   863,   330,   331,   332,   333,
     334,   335,     0,   336,   337,   338,   339,   340,   341,     0,
     342,   343,   344,   864,   346,   347,   348,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,     0,     0,   362,   363,   364,   365,   366,   367,   865,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,    26,   380,   381,   382,   383,   384,   866,   385,   386,
     387,   388,   389,   390,   391,   392,   867,   394,     0,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   868,   410,     0,   411,   412,    31,   413,
     414,   415,   416,   417,   418,   419,     0,   869,   870,     0,
       0,   422,   423,   871,   425,   872,   873,   427,   428,   874,
     430,   431,   432,   433,   434,     0,     0,   435,   436,   437,
     438,   439,   875,     0,   440,   441,   442,   443,   444,   575,
     876,     0,   447,   448,   449,   450,   451,   452,   453,     0,
       0,   454,     0,    34,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   877,     0,    35,     0,     0,
       0,     0,   878,   879,     0,     0,     0,     0,     0,   881,
       0,   882,  2829,     0,     0,     0,   883,     0,   884,   885,
      93,   818,   547,   819,   820,   821,   822,   823,     0,     0,
       0,     0,     0,     0,     0,     0,    94,    95,    96,    97,
      98,    99,   100,   101,     0,   102,   103,   104,     0,     0,
       0,     0,   824,     0,     0,   105,   106,     0,   107,   108,
     109,   110,   111,   112,   113,   114,   825,   116,   826,   827,
       0,   119,   120,   121,   122,     0,   123,   828,   829,   124,
     125,   830,   831,   128,     0,   129,   130,   131,   132,   832,
       0,   833,     0,   135,   136,   137,   138,   139,   140,   141,
     142,   143,   144,     0,   145,   146,   147,   148,   149,   150,
       0,   151,   152,   153,   154,   834,   835,   836,   837,   838,
     839,   840,   156,   157,   158,   159,   160,   161,   162,   841,
     842,   165,   843,   166,     0,   167,   168,   169,   170,   171,
     172,     0,   173,   174,   175,   176,   177,     0,     0,   178,
     179,   678,   181,   182,     0,   183,   184,   185,     0,   186,
     187,   188,     0,   189,   190,   191,   192,   844,   194,   195,
     196,   197,   198,   845,   846,   200,     0,   201,   202,   847,
     204,     0,   205,     0,   206,   207,     0,   208,   209,   210,
     211,   212,   213,     0,   214,     0,   848,   849,   217,     0,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,     0,   230,   231,   232,   233,   234,   235,     0,
     236,   237,   238,   239,   240,   241,   242,   243,   850,   851,
       0,   852,     0,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,     0,     0,   258,   259,   260,   261,
       0,   262,   263,   264,   853,   854,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     855,   290,   856,   292,   293,   294,   295,   857,   296,   297,
     298,   299,   858,   859,   301,   860,   303,   304,   305,     0,
     306,   307,     0,     0,   861,   309,   310,     0,     0,   311,
     312,   313,   314,   315,   862,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,     0,   327,   328,   863,   330,
     331,   332,   333,   334,   335,     0,   336,   337,   338,   339,
     340,   341,     0,   342,   343,   344,   864,   346,   347,   348,
     349,     0,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,     0,     0,   362,   363,   364,   365,
     366,   367,   865,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,    26,   380,   381,   382,   383,   384,
     866,   385,   386,   387,   388,   389,   390,   391,   392,   867,
     394,     0,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   868,   410,     0,   411,
     412,    31,   413,   414,   415,   416,   417,   418,   419,     0,
     869,   870,     0,     0,   422,   423,   871,   425,   872,   873,
     427,   428,   874,   430,   431,   432,   433,   434,     0,     0,
     435,   436,   437,   438,   439,   875,     0,   440,   441,   442,
     443,   444,   575,   876,     0,   447,   448,   449,   450,   451,
     452,   453,     0,     0,   454,     0,    34,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   877,     0,
      35,     0,     0,     0,     0,   878,   879,     0,     0,     0,
       0,     0,   881,     0,   882,     0,     0,     0,     0,   883,
       0,   884,   885,    93,   818,   547,   819,   820,   821,   822,
     823,     0,     0,     0,     0,     0,     0,     0,     0,    94,
      95,    96,    97,    98,    99,   100,   101,     0,   102,   103,
     104,     0,     0,     0,     0,   824,     0,     0,   105,   106,
       0,   107,   108,   109,   110,   111,   112,   113,   114,   825,
     116,   826,   827,  1654,   119,   120,   121,   122,     0,   123,
     828,   829,   124,   125,   830,   831,   128,     0,   129,   130,
     131,   132,   832,     0,   833,     0,   135,   136,   137,   138,
     139,   140,   141,   142,   143,   144,     0,   145,   146,   147,
     148,   149,   150,     0,   151,   152,   153,   154,   834,   835,
     836,   837,   838,   839,   840,   156,   157,   158,   159,   160,
     161,   162,   841,   842,   165,   843,   166,     0,   167,   168,
     169,   170,   171,   172,     0,   173,   174,   175,   176,   177,
       0,     0,   178,   179,   678,   181,   182,     0,   183,   184,
     185,     0,   186,   187,   188,     0,   189,   190,   191,   192,
     844,   194,   195,   196,   197,   198,   845,   846,   200,     0,
     201,   202,   847,   204,     0,   205,     0,   206,   207,  1655,
     208,   209,   210,   211,   212,   213,     0,   214,     0,   848,
     849,   217,     0,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,     0,   230,   231,   232,   233,
     234,   235,     0,   236,   237,   238,   239,   240,   241,   242,
     243,   850,   851,     0,   852,     0,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,     0,  1656,   258,
     259,   260,   261,     0,   262,   263,   264,   853,   854,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   855,   290,   856,   292,   293,   294,   295,
     857,   296,   297,   298,   299,   858,   859,   301,   860,   303,
     304,   305,     0,   306,   307,     0,     0,   861,   309,   310,
       0,     0,   311,   312,   313,   314,   315,   862,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,     0,   327,
     328,   863,   330,   331,   332,   333,   334,   335,     0,   336,
     337,   338,   339,   340,   341,     0,   342,   343,   344,   864,
     346,   347,   348,   349,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,     0,     0,   362,
     363,   364,   365,   366,   367,   865,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,     0,   380,   381,
     382,   383,   384,   866,   385,   386,   387,   388,   389,   390,
     391,   392,   867,   394,     0,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   868,
     410,     0,   411,   412,     0,   413,   414,   415,   416,   417,
     418,   419,     0,   869,   870,     0,  1657,   422,   423,   871,
     425,   872,   873,   427,   428,   874,   430,   431,   432,   433,
     434,     0,     0,   435,   436,   437,   438,   439,   875,     0,
     440,   441,   442,   443,   444,   445,   876,     0,   447,   448,
     449,   450,   451,   452,   453,     0,     0,   454,     0,     0,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   877,     0,     0,     0,     0,     0,     0,   878,   879,
       0,     0,     0,     0,     0,   881,     0,   882,     0,     0,
       0,     0,   883,     0,   884,   885,    93,   818,   547,   819,
     820,   821,   822,   823,     0,     0,     0,     0,     0,     0,
       0,     0,    94,    95,    96,    97,    98,    99,   100,   101,
    -952,   102,   103,   104,     0,     0,     0,  -952,   824,     0,
       0,   105,   106,     0,   107,   108,   109,   110,   111,   112,
     113,   114,   825,   116,   826,   827,     0,   119,   120,   121,
     122,     0,   123,   828,   829,   124,   125,   830,   831,   128,
       0,   129,   130,   131,   132,   832,     0,   833,     0,   135,
     136,   137,   138,   139,   140,   141,   142,   143,   144,     0,
     145,   146,   147,   148,   149,   150,     0,   151,   152,   153,
     154,   834,   835,   836,   837,   838,   839,   840,   156,   157,
     158,   159,   160,   161,   162,   841,   842,   165,   843,   166,
       0,   167,   168,   169,   170,   171,   172,     0,   173,   174,
     175,   176,   177,     0,     0,   178,   179,   678,   181,   182,
       0,   183,   184,   185,     0,   186,   187,   188,     0,   189,
     190,   191,   192,   844,   194,   195,   196,   197,   198,   845,
     846,   200,     0,   201,   202,   847,   204,     0,   205,     0,
     206,   207,     0,   208,   209,   210,   211,   212,   213,     0,
     214,     0,   848,   849,   217,     0,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,     0,   230,
     231,   232,   233,   234,   235,     0,   236,   237,   238,   239,
     240,   241,   242,   243,   850,   851,     0,   852,     0,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
       0,     0,   258,   259,   260,   261,     0,   262,   263,   264,
     853,   854,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   855,   290,   856,   292,
     293,   294,   295,   857,   296,   297,   298,   299,   858,   859,
     301,   860,   303,   304,   305,     0,   306,   307,     0,     0,
     861,   309,   310,     0,     0,   311,   312,   313,   314,   315,
     862,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,     0,   327,   328,   863,   330,   331,   332,   333,   334,
     335,     0,   336,   337,   338,   339,   340,   341,     0,   342,
     343,   344,   864,   346,   347,   348,   349,     0,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
       0,     0,   362,   363,   364,   365,   366,   367,   865,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
       0,   380,   381,   382,   383,   384,   866,   385,   386,   387,
     388,   389,   390,   391,   392,   867,   394,  -952,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   868,   410,     0,   411,   412,     0,   413,   414,
     415,   416,   417,   418,   419,     0,   869,   870,     0,     0,
     422,   423,   871,   425,   872,   873,   427,   428,   874,   430,
     431,   432,   433,   434,     0,     0,   435,   436,   437,   438,
     439,   875,     0,   440,   441,   442,   443,   444,   445,   876,
       0,   447,   448,   449,   450,   451,   452,   453,     0,     0,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   877,     0,     0,     0,     0,     0,
       0,   878,   879,     0,     0,     0,     0,     0,   881,     0,
     882,     0,     0,     0,     0,   883,     0,   884,   885,    93,
     818,   547,   819,   820,   821,   822,   823,     0,     0,     0,
       0,     0,     0,     0,     0,    94,    95,    96,    97,    98,
      99,   100,   101,  1396,   102,   103,   104,     0,     0,     0,
       0,   824,     0,     0,   105,   106,     0,   107,   108,   109,
     110,   111,   112,   113,   114,   825,   116,   826,   827,     0,
     119,   120,   121,   122,     0,   123,   828,   829,   124,   125,
     830,   831,   128,     0,   129,   130,   131,   132,   832,     0,
     833,     0,   135,   136,   137,   138,   139,   140,   141,   142,
     143,   144,     0,   145,   146,   147,   148,   149,   150,     0,
     151,   152,   153,   154,   834,   835,   836,   837,   838,   839,
     840,   156,   157,   158,   159,   160,   161,   162,   841,   842,
     165,   843,   166,     0,   167,   168,   169,   170,   171,   172,
       0,   173,   174,   175,   176,   177,     0,     0,   178,   179,
     678,   181,   182,     0,   183,   184,   185,     0,   186,   187,
     188,     0,   189,   190,   191,   192,   844,   194,   195,   196,
     197,   198,   845,   846,   200,     0,   201,   202,   847,   204,
       0,   205,     0,   206,   207,     0,   208,   209,   210,   211,
     212,   213,     0,   214,     0,   848,   849,   217,     0,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,     0,   230,   231,   232,   233,   234,   235,     0,   236,
     237,   238,   239,   240,   241,   242,   243,   850,   851,     0,
     852,     0,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,     0,     0,   258,   259,   260,   261,     0,
     262,   263,   264,   853,   854,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   855,
     290,   856,   292,   293,   294,   295,   857,   296,   297,   298,
     299,   858,   859,   301,   860,   303,   304,   305,     0,   306,
     307,     0,     0,   861,   309,   310,     0,     0,   311,   312,
     313,   314,   315,   862,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,     0,   327,   328,   863,   330,   331,
     332,   333,   334,   335,     0,   336,   337,   338,   339,   340,
     341,     0,   342,   343,   344,   864,   346,   347,   348,   349,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,     0,     0,   362,   363,   364,   365,   366,
     367,   865,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,     0,   380,   381,   382,   383,   384,   866,
     385,   386,   387,   388,   389,   390,   391,   392,   867,   394,
       0,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   868,   410,     0,   411,   412,
       0,   413,   414,   415,   416,   417,   418,   419,     0,   869,
     870,     0,     0,   422,   423,   871,   425,   872,   873,   427,
     428,   874,   430,   431,   432,   433,   434,     0,     0,   435,
     436,   437,   438,   439,   875,     0,   440,   441,   442,   443,
     444,   445,   876,     0,   447,   448,   449,   450,   451,   452,
     453,     0,     0,   454,     0,     0,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   877,     0,     0,
       0,     0,     0,     0,   878,   879,  1397,     0,     0,     0,
       0,   881,     0,   882,     0,     0,     0,     0,   883,     0,
     884,   885,    93,   818,   547,   819,   820,   821,   822,   823,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,  2710,   102,   103,   104,
       0,     0,     0,     0,   824,     0,     0,   105,   106,     0,
     107,   108,   109,   110,   111,   112,   113,   114,   825,   116,
     826,   827,     0,   119,   120,   121,   122,     0,   123,   828,
     829,   124,   125,   830,   831,   128,     0,   129,   130,   131,
     132,   832,     0,   833,     0,   135,   136,   137,   138,   139,
     140,   141,   142,   143,   144,     0,   145,   146,   147,   148,
     149,   150,     0,   151,   152,  2711,   154,   834,   835,   836,
     837,   838,   839,   840,   156,   157,   158,   159,   160,   161,
     162,   841,   842,   165,   843,   166,     0,   167,   168,   169,
     170,   171,   172,     0,   173,   174,   175,   176,   177,     0,
       0,   178,   179,   678,   181,   182,     0,   183,   184,   185,
       0,   186,   187,   188,     0,   189,   190,   191,   192,   844,
     194,   195,   196,   197,   198,   845,   846,   200,     0,   201,
     202,   847,   204,     0,   205,     0,   206,   207,     0,   208,
     209,   210,   211,   212,   213,     0,   214,     0,  2712,   849,
     217,     0,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,     0,   230,   231,   232,   233,   234,
     235,     0,   236,   237,   238,   239,   240,   241,   242,   243,
     850,   851,     0,   852,     0,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,     0,     0,   258,   259,
     260,   261,     0,   262,   263,   264,   853,   854,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   855,   290,   856,   292,   293,   294,   295,   857,
     296,   297,   298,   299,   858,   859,   301,   860,   303,   304,
     305,     0,   306,   307,     0,     0,   861,   309,   310,     0,
       0,   311,   312,   313,   314,   315,   862,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,     0,   327,   328,
     863,   330,   331,   332,   333,   334,   335,     0,   336,   337,
     338,   339,   340,   341,     0,   342,   343,   344,   864,   346,
     347,   348,   349,     0,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,     0,     0,   362,   363,
     364,   365,   366,  2713,   865,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,     0,   380,   381,   382,
     383,   384,   866,   385,   386,   387,   388,   389,   390,   391,
     392,   867,   394,     0,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   868,   410,
       0,   411,   412,     0,   413,   414,   415,   416,   417,   418,
     419,     0,   869,   870,     0,     0,   422,   423,   871,   425,
     872,   873,   427,   428,   874,   430,   431,   432,   433,   434,
       0,     0,   435,   436,   437,   438,   439,   875,     0,   440,
     441,   442,   443,   444,   445,   876,     0,   447,   448,   449,
     450,   451,   452,   453,     0,     0,   454,     0,     0,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     877,     0,     0,     0,     0,     0,     0,   878,   879,  2714,
       0,     0,     0,     0,   881,     0,  2715,     0,     0,     0,
       0,   883,     0,   884,   885,    93,   818,   547,   819,   820,
     821,   822,   823,     0,     0,     0,     0,     0,     0,     0,
       0,    94,    95,    96,    97,    98,    99,   100,   101,     0,
     102,   103,   104,     0,     0,     0,     0,   824,     0,     0,
     105,   106,     0,   107,   108,   109,   110,   111,   112,   113,
     114,   825,   116,   826,   827,     0,   119,   120,   121,   122,
       0,   123,   828,   829,   124,   125,   830,   831,   128,     0,
     129,   130,   131,   132,   832,     0,   833,     0,   135,   136,
     137,   138,   139,   140,   141,   142,   143,   144,     0,   145,
     146,   147,   148,   149,   150,     0,   151,   152,   153,   154,
     834,   835,   836,   837,   838,   839,   840,   156,   157,   158,
     159,   160,   161,   162,   841,   842,   165,   843,   166,     0,
     167,   168,   169,   170,   171,   172,     0,   173,   174,   175,
     176,   177,     0,     0,   178,   179,   678,   181,   182,     0,
     183,   184,   185,     0,   186,   187,   188,     0,   189,   190,
     191,   192,   844,   194,   195,   196,   197,   198,   845,   846,
     200,     0,   201,   202,   847,   204,     0,   205,     0,   206,
     207,     0,   208,   209,   210,   211,   212,   213,     0,   214,
       0,   848,   849,   217,     0,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,     0,   230,   231,
     232,   233,   234,   235,     0,   236,   237,   238,   239,   240,
     241,   242,   243,   850,   851,     0,   852,     0,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,     0,
       0,   258,   259,   260,   261,     0,   262,   263,   264,   853,
     854,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   855,   290,   856,   292,   293,
     294,   295,   857,   296,   297,   298,   299,   858,   859,   301,
     860,   303,   304,   305,     0,   306,   307,     0,     0,   861,
     309,   310,     0,     0,   311,   312,   313,   314,   315,   862,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,   327,   328,   863,   330,   331,   332,   333,   334,   335,
       0,   336,   337,   338,   339,   340,   341,     0,   342,   343,
     344,   864,   346,   347,   348,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,     0,
       0,   362,   363,   364,   365,   366,   367,   865,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,     0,
     380,   381,   382,   383,   384,   866,   385,   386,   387,   388,
     389,   390,   391,   392,   867,   394,     0,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   868,   410,     0,   411,   412,     0,   413,   414,   415,
     416,   417,   418,   419,     0,   869,   870,     0,     0,   422,
     423,   871,   425,   872,   873,   427,   428,   874,   430,   431,
     432,   433,   434,     0,     0,   435,   436,   437,   438,   439,
     875,     0,   440,   441,   442,   443,   444,   445,   876,     0,
     447,   448,   449,   450,   451,   452,   453,     0,     0,   454,
       0,     0,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   877,     0,     0,     0,     0,     0,     0,
     878,   879,   880,     0,     0,     0,     0,   881,     0,   882,
       0,     0,     0,     0,   883,     0,   884,   885,    93,  1410,
     547,   819,   820,   821,  1411,   823,     0,     0,     0,     0,
       0,     0,     0,     0,    94,    95,    96,    97,    98,    99,
     100,   101,  1412,   102,   103,   104,     0,     0,     0,     0,
     824,     0,     0,   105,   106,     0,   107,   108,   109,   110,
     111,   112,   113,   114,   825,   116,   826,   827,     0,   119,
     120,   121,   122,     0,   123,   828,   829,   124,   125,   830,
     831,   128,     0,   129,   130,   131,   132,   832,     0,   833,
       0,   135,   136,   137,   138,   139,   140,   141,   142,   143,
     144,     0,   145,   146,   147,   148,   149,   150,     0,   151,
     152,   153,   154,   834,   835,   836,   837,   838,   839,   840,
     156,   157,   158,   159,   160,   161,   162,   841,   842,   165,
     843,   166,     0,   167,   168,   169,   170,   171,   172,     0,
     173,   174,   175,   176,   177,     0,     0,   178,   179,   678,
     181,   182,     0,   183,   184,   185,     0,   186,   187,   188,
       0,   189,   190,   191,   192,   844,   194,   195,   196,   197,
     198,   845,   846,   200,     0,   201,   202,   847,   204,     0,
     205,     0,   206,   207,     0,   208,   209,   210,   211,   212,
     213,     0,   214,     0,   848,   849,   217,     0,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,   237,
     238,   239,   240,   241,   242,   243,   850,   851,     0,   852,
       0,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,     0,     0,   258,   259,   260,   261,     0,   262,
     263,   264,   853,   854,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   855,   290,
     856,   292,   293,   294,   295,   857,   296,   297,   298,   299,
     858,   859,   301,   860,   303,   304,   305,     0,   306,   307,
       0,     0,   861,   309,   310,     0,     0,   311,   312,   313,
     314,   315,   862,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,     0,   327,   328,   863,   330,   331,   332,
     333,   334,   335,     0,   336,   337,   338,   339,   340,   341,
       0,   342,   343,   344,   864,   346,   347,   348,   349,     0,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,     0,     0,   362,   363,   364,   365,   366,   367,
     865,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,     0,   380,   381,   382,   383,   384,   866,   385,
     386,   387,   388,   389,   390,   391,   392,   867,   394,     0,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   868,   410,     0,   411,   412,     0,
     413,   414,   415,   416,   417,   418,   419,     0,   869,   870,
       0,     0,   422,   423,   871,   425,   872,   873,   427,   428,
     874,   430,   431,   432,   433,   434,     0,     0,   435,   436,
     437,   438,   439,   875,     0,   440,   441,   442,   443,   444,
     445,   876,     0,   447,   448,   449,   450,   451,   452,   453,
       0,     0,   454,     0,     0,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   877,     0,     0,     0,
       0,     0,     0,   878,   879,     0,     0,     0,     0,     0,
     881,     0,   882,     0,     0,     0,     0,   883,     0,   884,
     885,    93,   818,   547,   819,   820,   821,   822,   823,     0,
       0,     0,     0,     0,     0,     0,     0,    94,    95,    96,
      97,    98,    99,   100,   101,     0,   102,   103,   104,     0,
       0,     0,     0,   824,     0,     0,   105,   106,     0,   107,
     108,   109,   110,   111,   112,   113,   114,   825,   116,   826,
     827,     0,   119,   120,   121,   122,     0,   123,   828,   829,
     124,   125,   830,   831,   128,     0,   129,   130,   131,   132,
     832,     0,   833,     0,   135,   136,   137,   138,   139,   140,
     141,   142,   143,   144,     0,   145,   146,   147,   148,   149,
     150,     0,   151,   152,   153,   154,   834,   835,   836,   837,
     838,   839,   840,   156,   157,   158,   159,   160,   161,   162,
     841,   842,   165,   843,   166,     0,   167,   168,   169,   170,
     171,   172,     0,   173,   174,   175,   176,   177,     0,     0,
     178,   179,   678,   181,   182,     0,   183,   184,   185,     0,
     186,   187,   188,     0,   189,   190,   191,   192,   844,   194,
     195,   196,   197,   198,   845,   846,   200,     0,   201,   202,
     847,   204,     0,   205,     0,   206,   207,     0,   208,   209,
     210,   211,   212,   213,     0,   214,     0,   848,   849,   217,
       0,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,     0,   230,   231,   232,   233,   234,   235,
       0,   236,   237,   238,   239,   240,   241,   242,   243,   850,
     851,     0,   852,     0,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,     0,     0,   258,   259,   260,
     261,     0,   262,   263,   264,   853,   854,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   855,   290,   856,   292,   293,   294,   295,   857,   296,
     297,   298,   299,   858,   859,   301,   860,   303,   304,   305,
       0,   306,   307,     0,     0,   861,   309,   310,     0,     0,
     311,   312,   313,   314,   315,   862,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,     0,   327,   328,   863,
     330,   331,   332,   333,   334,   335,     0,   336,   337,   338,
     339,   340,   341,     0,   342,   343,   344,   864,   346,   347,
     348,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,     0,     0,   362,   363,   364,
     365,   366,   367,   865,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,     0,   380,   381,   382,   383,
     384,   866,   385,   386,   387,   388,   389,   390,   391,   392,
     867,   394,     0,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   868,   410,     0,
     411,   412,     0,   413,   414,   415,   416,   417,   418,   419,
       0,   869,   870,     0,     0,   422,   423,   871,   425,   872,
     873,   427,   428,   874,   430,   431,   432,   433,   434,     0,
       0,   435,   436,   437,   438,   439,   875,     0,   440,   441,
     442,   443,   444,   445,   876,     0,   447,   448,   449,   450,
     451,   452,   453,     0,     0,   454,     0,     0,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   877,
       0,     0,     0,     0,     0,     0,   878,   879,     0,     0,
       0,     0,     0,   881,     0,   882,  1648,     0,     0,     0,
     883,     0,   884,   885,  1015,   818,   547,   819,   820,   821,
     822,   823,     0,     0,     0,     0,     0,     0,     0,     0,
      94,    95,    96,    97,    98,    99,   100,   101,     0,   102,
     103,   104,     0,     0,     0,     0,   824,     0,     0,   105,
     106,     0,   107,   108,   109,  1017,   111,   112,   113,   114,
     825,  1018,   826,   827,     0,   119,   120,   121,   122,     0,
     123,   828,   829,   124,   125,   830,   831,   128,     0,   129,
     130,   131,   132,   832,     0,  1019,     0,   135,   136,   137,
     138,   139,   140,  1020,   142,   143,   144,     0,   145,   146,
     147,   148,   149,   150,     0,  1021,   152,   153,   154,   834,
     835,   836,  1022,   838,   839,   840,   156,   157,   158,   159,
     160,   161,   162,   841,   842,   165,   843,   166,     0,   167,
     168,   169,   170,   171,   172,     0,   173,   174,   175,   176,
     177,     0,     0,   178,   179,   678,   181,   182,     0,   183,
     184,   185,     0,   186,   187,   188,     0,   189,   190,   191,
     192,   844,   194,   195,   196,   197,   198,   845,   846,   200,
       0,   201,   202,   847,   204,     0,   205,     0,   206,  1024,
       0,  1025,   209,   210,   211,  1026,   213,     0,   214,     0,
     848,   849,   217,     0,   218,   219,   220,   221,   222,   223,
     224,  1027,   226,   227,   228,   229,     0,   230,   231,   232,
     233,   234,   235,     0,   236,  1028,   238,   239,   240,   241,
     242,   243,   850,   851,     0,   852,     0,   247,  1029,  1030,
     250,  1031,   252,   253,   254,   255,   256,   257,     0,     0,
     258,  1032,   260,  1033,     0,   262,   263,   264,   853,   854,
     265,   266,   267,   268,   269,  1034,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   855,  1035,   856,   292,   293,   294,
     295,   857,   296,   297,  1036,   299,   858,   859,   301,   860,
     303,   304,   305,     0,   306,   307,     0,     0,   861,   309,
     310,     0,     0,   311,   312,  1037,   314,  1038,   862,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,     0,
     327,   328,   863,   330,   331,   332,   333,   334,   335,     0,
     336,   337,   338,   339,   340,   341,     0,   342,   343,   344,
     864,   346,   347,   348,   349,     0,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,     0,     0,
     362,   363,  1039,   365,   366,   367,   865,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,     0,   380,
     381,   382,   383,   384,   866,   385,   386,   387,   388,   389,
    1040,   391,   392,   867,   394,     0,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,  1041,   408,
     868,   410,     0,   411,   412,     0,   413,  1042,   415,   416,
     417,   418,   419,     0,   869,   870,     0,     0,   422,   423,
     871,   425,   872,   873,   427,   428,  1043,   430,   431,   432,
     433,   434,     0,     0,   435,   436,   437,   438,   439,   875,
       0,   440,   441,   442,   443,   444,   445,   876,  1868,   447,
    1045,   449,   450,   451,   452,   453,     0,     0,   454,     0,
       0,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   877,     0,     0,     0,     0,     0,     0,   878,
     879,     0,     0,     0,     0,     0,   881,     0,   882,     0,
       0,     0,     0,   883,     0,   884,   885,  1015,   818,   547,
     819,   820,   821,   822,   823,     0,     0,     0,     0,     0,
       0,     0,     0,    94,    95,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,     0,     0,     0,     0,   824,
       0,     0,   105,   106,     0,   107,   108,   109,  1017,   111,
     112,   113,   114,   825,  1018,   826,   827,     0,   119,   120,
     121,   122,     0,   123,   828,   829,   124,   125,   830,   831,
     128,     0,   129,   130,   131,   132,   832,     0,  1019,     0,
     135,   136,   137,   138,   139,   140,  1020,   142,   143,   144,
       0,   145,   146,   147,   148,   149,   150,     0,  1021,   152,
     153,   154,   834,   835,   836,  1022,   838,   839,   840,   156,
     157,   158,   159,   160,   161,   162,   841,   842,   165,   843,
     166,     0,   167,   168,   169,   170,   171,   172,     0,   173,
     174,   175,   176,   177,     0,     0,   178,   179,   678,   181,
     182,     0,   183,   184,   185,     0,   186,   187,   188,     0,
     189,   190,   191,   192,   844,   194,   195,   196,   197,   198,
     845,   846,   200,     0,   201,   202,   847,   204,     0,   205,
       0,   206,  1024,     0,  1025,   209,   210,   211,  1026,   213,
       0,   214,     0,   848,   849,   217,     0,   218,   219,   220,
     221,   222,   223,   224,  1027,   226,   227,   228,   229,     0,
     230,   231,   232,   233,   234,   235,     0,   236,  1028,   238,
     239,   240,   241,   242,   243,   850,   851,     0,   852,     0,
     247,  1029,  1030,   250,  1031,   252,   253,   254,   255,   256,
     257,     0,     0,   258,  1032,   260,  1033,     0,   262,   263,
     264,   853,   854,   265,   266,   267,   268,   269,  1034,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   855,  1035,   856,
     292,   293,   294,   295,   857,   296,   297,  1036,   299,   858,
     859,   301,   860,   303,   304,   305,     0,   306,   307,     0,
       0,   861,   309,   310,     0,     0,   311,   312,  1037,   314,
    1038,   862,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,     0,   327,   328,   863,   330,   331,   332,   333,
     334,   335,     0,   336,   337,   338,   339,   340,   341,     0,
     342,   343,   344,   864,   346,   347,   348,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,     0,     0,   362,   363,  1039,   365,   366,   367,   865,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,     0,   380,   381,   382,   383,   384,   866,   385,   386,
     387,   388,   389,  1040,   391,   392,   867,   394,     0,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,  1041,   408,   868,   410,     0,   411,   412,     0,   413,
    1042,   415,   416,   417,   418,   419,     0,   869,   870,     0,
       0,   422,   423,   871,   425,   872,   873,   427,   428,  1043,
     430,   431,   432,   433,   434,     0,     0,   435,   436,   437,
     438,   439,   875,     0,   440,   441,   442,   443,   444,   445,
     876,     0,   447,  1045,   449,   450,   451,   452,   453,     0,
       0,   454,     0,     0,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   877,     0,     0,     0,     0,
       0,     0,   878,   879,     0,     0,     0,     0,     0,   881,
       0,   882,  1912,     0,     0,     0,   883,     0,   884,   885,
      93,   818,   547,   819,   820,   821,   822,   823,     0,     0,
       0,     0,     0,     0,     0,     0,    94,    95,    96,    97,
      98,    99,   100,   101,     0,   102,   103,   104,     0,     0,
       0,     0,   824,     0,     0,   105,   106,     0,   107,   108,
     109,   110,   111,   112,   113,   114,   825,   116,   826,   827,
       0,   119,   120,   121,   122,     0,   123,   828,   829,   124,
     125,   830,   831,   128,     0,   129,   130,   131,   132,   832,
       0,   833,     0,   135,   136,   137,   138,   139,   140,   141,
     142,   143,   144,     0,   145,   146,   147,   148,   149,   150,
       0,   151,   152,   153,   154,   834,   835,   836,   837,   838,
     839,   840,   156,   157,   158,   159,   160,   161,   162,   841,
     842,   165,   843,   166,     0,   167,   168,   169,   170,   171,
     172,     0,   173,   174,   175,   176,   177,     0,     0,   178,
     179,   678,   181,   182,     0,   183,   184,   185,     0,   186,
     187,   188,     0,   189,   190,   191,   192,   844,   194,   195,
     196,   197,   198,   845,   846,   200,     0,   201,   202,   847,
     204,     0,   205,     0,   206,   207,  1655,   208,   209,   210,
     211,   212,   213,     0,   214,     0,   848,   849,   217,     0,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,     0,   230,   231,   232,   233,   234,   235,     0,
     236,   237,   238,   239,   240,   241,   242,   243,   850,   851,
       0,   852,     0,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,     0,     0,   258,   259,   260,   261,
       0,   262,   263,   264,   853,   854,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     855,   290,   856,   292,   293,   294,   295,   857,   296,   297,
     298,   299,   858,   859,   301,   860,   303,   304,   305,     0,
     306,   307,     0,     0,   861,   309,   310,     0,     0,   311,
     312,   313,   314,   315,   862,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,     0,   327,   328,   863,   330,
     331,   332,   333,   334,   335,     0,   336,   337,   338,   339,
     340,   341,     0,   342,   343,   344,   864,   346,   347,   348,
     349,     0,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,     0,     0,   362,   363,   364,   365,
     366,   367,   865,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,     0,   380,   381,   382,   383,   384,
     866,   385,   386,   387,   388,   389,   390,   391,   392,   867,
     394,     0,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   868,   410,     0,   411,
     412,     0,   413,   414,   415,   416,   417,   418,   419,     0,
     869,   870,     0,     0,   422,   423,   871,   425,   872,   873,
     427,   428,   874,   430,   431,   432,   433,   434,     0,     0,
     435,   436,   437,   438,   439,   875,     0,   440,   441,   442,
     443,   444,   445,   876,     0,   447,   448,   449,   450,   451,
     452,   453,     0,     0,   454,     0,     0,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   877,     0,
       0,     0,     0,     0,     0,   878,   879,     0,     0,     0,
       0,     0,   881,     0,   882,     0,     0,     0,     0,   883,
       0,   884,   885,    93,   818,   547,   819,   820,   821,   822,
     823,     0,     0,     0,     0,     0,     0,     0,     0,    94,
      95,    96,    97,    98,    99,   100,   101,     0,   102,   103,
     104,     0,     0,     0,     0,   824,     0,     0,   105,   106,
       0,   107,   108,   109,   110,   111,   112,   113,   114,   825,
     116,   826,   827,     0,   119,   120,   121,   122,     0,   123,
     828,   829,   124,   125,   830,   831,   128,     0,   129,   130,
     131,   132,   832,     0,   833,     0,   135,   136,   137,   138,
     139,   140,   141,   142,   143,   144,     0,   145,   146,   147,
     148,   149,   150,     0,   151,   152,   153,   154,   834,   835,
     836,   837,   838,   839,   840,   156,   157,   158,   159,   160,
     161,   162,   841,   842,   165,   843,   166,     0,   167,   168,
     169,   170,   171,   172,     0,   173,   174,   175,   176,   177,
       0,     0,   178,   179,   678,   181,   182,     0,   183,   184,
     185,     0,   186,   187,   188,     0,   189,   190,   191,   192,
     844,   194,   195,   196,   197,   198,   845,   846,   200,     0,
     201,   202,   847,   204,     0,   205,     0,   206,   207,     0,
     208,   209,   210,   211,   212,   213,     0,   214,     0,   848,
     849,   217,     0,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,     0,   230,   231,   232,   233,
     234,   235,     0,   236,   237,   238,   239,   240,   241,   242,
     243,   850,   851,     0,   852,     0,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,     0,     0,   258,
     259,   260,   261,     0,   262,   263,   264,   853,   854,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   855,   290,   856,   292,   293,   294,   295,
     857,   296,   297,   298,   299,   858,   859,   301,   860,   303,
     304,   305,     0,   306,   307,     0,     0,   861,   309,   310,
       0,     0,   311,   312,   313,   314,   315,   862,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,     0,   327,
     328,   863,   330,   331,   332,   333,   334,   335,     0,   336,
     337,   338,   339,   340,   341,     0,   342,   343,   344,   864,
     346,   347,   348,   349,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,     0,     0,   362,
     363,   364,   365,   366,   367,   865,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,     0,   380,   381,
     382,   383,   384,   866,   385,   386,   387,   388,   389,   390,
     391,   392,   867,   394,     0,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   868,
     410,     0,   411,   412,  2223,   413,   414,   415,   416,   417,
     418,   419,     0,   869,   870,     0,     0,   422,   423,   871,
     425,   872,   873,   427,   428,   874,   430,   431,   432,   433,
     434,     0,     0,   435,   436,   437,   438,   439,   875,     0,
     440,   441,   442,   443,   444,   445,   876,     0,   447,   448,
     449,   450,   451,   452,   453,     0,     0,   454,     0,     0,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   877,     0,     0,     0,     0,     0,     0,   878,   879,
       0,     0,     0,     0,     0,   881,     0,   882,     0,     0,
       0,     0,   883,     0,   884,   885,    93,   818,   547,   819,
     820,   821,   822,   823,     0,     0,     0,     0,     0,     0,
       0,     0,    94,    95,    96,    97,    98,    99,   100,   101,
       0,   102,   103,   104,     0,     0,     0,     0,   824,     0,
       0,   105,   106,     0,   107,   108,   109,   110,   111,   112,
     113,   114,   825,   116,   826,   827,     0,   119,   120,   121,
     122,     0,   123,   828,   829,   124,   125,   830,   831,   128,
       0,   129,   130,   131,   132,   832,     0,   833,     0,   135,
     136,   137,   138,   139,   140,   141,   142,   143,   144,     0,
     145,   146,   147,   148,   149,   150,     0,   151,   152,   153,
     154,   834,   835,   836,   837,   838,   839,   840,   156,   157,
     158,   159,   160,   161,   162,   841,   842,   165,   843,   166,
       0,   167,   168,   169,   170,   171,   172,     0,   173,   174,
     175,   176,   177,     0,     0,   178,   179,   678,   181,   182,
       0,   183,   184,   185,     0,   186,   187,   188,     0,   189,
     190,   191,   192,   844,   194,   195,   196,   197,   198,   845,
     846,   200,     0,   201,   202,   847,   204,     0,   205,     0,
     206,   207,     0,   208,   209,   210,   211,   212,   213,     0,
     214,     0,   848,   849,   217,     0,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,     0,   230,
     231,   232,   233,   234,   235,     0,   236,   237,   238,   239,
     240,   241,   242,   243,   850,   851,     0,   852,     0,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
       0,     0,   258,   259,   260,   261,     0,   262,   263,   264,
     853,   854,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   855,   290,   856,   292,
     293,   294,   295,   857,   296,   297,   298,   299,   858,   859,
     301,   860,   303,   304,   305,     0,   306,   307,     0,     0,
     861,   309,   310,     0,     0,   311,   312,   313,   314,   315,
     862,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,     0,   327,   328,   863,   330,   331,   332,   333,   334,
     335,     0,   336,   337,   338,   339,   340,   341,     0,   342,
     343,   344,   864,   346,   347,   348,   349,     0,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
       0,     0,   362,   363,   364,   365,   366,   367,   865,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
       0,   380,   381,   382,   383,   384,   866,   385,   386,   387,
     388,   389,   390,   391,   392,   867,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   868,   410,     0,   411,   412,     0,   413,   414,
     415,   416,   417,   418,   419,     0,   869,   870,     0,     0,
     422,   423,   871,   425,   872,   873,   427,   428,   874,   430,
     431,   432,   433,   434,     0,     0,   435,   436,   437,   438,
     439,   875,     0,   440,   441,   442,   443,   444,   445,   876,
       0,   447,   448,   449,   450,   451,   452,   453,     0,     0,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   877,     0,     0,     0,     0,     0,
       0,   878,   879,     0,     0,     0,     0,     0,   881,     0,
     882,     0,     0,     0,     0,   883,     0,   884,   885,  1015,
     818,   547,   819,   820,   821,   822,   823,     0,     0,     0,
       0,     0,     0,     0,     0,    94,    95,    96,    97,    98,
      99,   100,   101,     0,   102,   103,   104,     0,     0,     0,
       0,   824,     0,     0,   105,   106,     0,   107,   108,   109,
    1017,   111,   112,   113,   114,   825,  1018,   826,   827,     0,
     119,   120,   121,   122,     0,   123,   828,   829,   124,   125,
     830,   831,   128,     0,   129,   130,   131,   132,   832,     0,
    1019,     0,   135,   136,   137,   138,   139,   140,  1020,   142,
     143,   144,     0,   145,   146,   147,   148,   149,   150,     0,
    1021,   152,   153,   154,   834,   835,   836,  1022,   838,   839,
     840,   156,   157,   158,   159,   160,   161,   162,   841,   842,
     165,   843,   166,     0,   167,   168,   169,   170,   171,   172,
       0,   173,   174,   175,   176,   177,     0,     0,   178,   179,
     678,   181,   182,     0,   183,   184,   185,     0,   186,   187,
     188,     0,   189,   190,   191,   192,   844,   194,   195,   196,
     197,   198,   845,   846,   200,     0,   201,   202,   847,   204,
       0,   205,     0,   206,  1024,     0,  1025,   209,   210,   211,
    1026,   213,     0,   214,     0,   848,   849,   217,     0,   218,
     219,   220,   221,   222,   223,   224,  1027,   226,   227,   228,
     229,     0,   230,   231,   232,   233,   234,   235,     0,   236,
    1028,   238,   239,   240,   241,   242,   243,   850,   851,     0,
     852,     0,   247,  1029,  1030,   250,  1031,   252,   253,   254,
     255,   256,   257,     0,     0,   258,  1032,   260,  1033,     0,
     262,   263,   264,   853,   854,   265,   266,   267,   268,   269,
    1034,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   855,
    1035,   856,   292,   293,   294,   295,   857,   296,   297,  1036,
     299,   858,   859,   301,   860,   303,   304,   305,     0,   306,
     307,     0,     0,   861,   309,   310,     0,     0,   311,   312,
    1037,   314,  1038,   862,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,     0,   327,   328,   863,   330,   331,
     332,   333,   334,   335,     0,   336,   337,   338,   339,   340,
     341,     0,   342,   343,   344,   864,   346,   347,   348,   349,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,     0,     0,   362,   363,  1039,   365,   366,
     367,   865,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,     0,   380,   381,   382,   383,   384,   866,
     385,   386,   387,   388,   389,  1040,   391,   392,   867,   394,
       0,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,  1041,   408,   868,   410,     0,   411,   412,
       0,   413,  1042,   415,   416,   417,   418,   419,     0,   869,
     870,     0,     0,   422,   423,   871,   425,   872,   873,   427,
     428,  1043,   430,   431,   432,   433,   434,     0,     0,   435,
     436,   437,   438,   439,   875,     0,   440,   441,   442,   443,
     444,   445,   876,     0,   447,  1045,   449,   450,   451,   452,
     453,     0,     0,   454,     0,     0,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   877,     0,     0,
       0,     0,     0,     0,   878,   879,     0,     0,     0,     0,
       0,   881,     0,   882,     0,     0,     0,     0,   883,     0,
     884,   885,    93,   818,   547,   819,   820,   821,   822,   823,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,   824,     0,     0,   105,   106,     0,
     107,   108,   109,   110,   111,   112,   113,   114,   825,   116,
     826,   827,     0,   119,   120,   121,   122,     0,   123,   828,
     829,   124,   125,   830,   831,   128,     0,   129,   130,   131,
     132,   832,     0,   833,     0,   135,   136,   137,   138,   139,
     140,   141,   142,   143,   144,     0,   145,   146,   147,   148,
     149,   150,     0,   151,   152,   153,   154,   834,   835,   836,
     837,   838,   839,   840,   156,   157,   158,   159,   160,   161,
     162,   841,   842,   165,   843,   166,     0,   167,   168,   169,
     170,   171,   172,     0,   173,   174,   175,   176,   177,     0,
       0,   178,   179,   678,   181,   182,     0,   183,   184,   185,
       0,   186,   187,   188,     0,   189,   190,   191,   192,   844,
     194,   195,   196,   197,   198,   845,   846,   200,     0,   201,
     202,   847,   204,     0,   205,     0,   206,   207,     0,   208,
     209,   210,   211,   212,   213,     0,   214,     0,   848,   849,
     217,     0,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,     0,   230,   231,   232,   233,   234,
     235,     0,   236,   237,   238,   239,   240,   241,   242,   243,
     850,   851,     0,   852,     0,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,     0,     0,   258,   259,
     260,   261,     0,   262,   263,   264,   853,   854,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   855,   290,   856,   292,   293,   294,   295,   857,
     296,   297,   298,   299,   858,   859,   301,   860,   303,   304,
     305,     0,   306,   307,     0,     0,   861,   309,   310,     0,
       0,   311,   312,   313,   314,   315,   862,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,     0,   327,   328,
     863,   330,   331,   332,   333,   334,   335,     0,   336,   337,
     338,   339,   340,   341,     0,   342,   343,   344,   864,   346,
     347,   348,   349,     0,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,     0,     0,   362,   363,
     364,   365,   366,   367,   865,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,     0,   380,   381,   382,
     383,   384,   866,   385,   386,   387,   388,   389,   390,   391,
     392,   867,   394,     0,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   868,   410,
       0,   411,   412,     0,   413,   414,   415,   416,   417,   418,
     419,     0,   869,   870,     0,     0,   422,   423,   871,   425,
     872,   873,   427,   428,   874,   430,   431,   432,   433,   434,
       0,     0,   435,   436,   437,   438,   439,   875,     0,   440,
     441,   442,   443,   444,   445,   876,     0,   447,   448,   449,
     450,   451,   452,   453,     0,     0,   454,     0,     0,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     877,     0,     0,     0,     0,     0,     0,  1415,  1416,     0,
       0,     0,     0,     0,   881,     0,   882,     0,     0,     0,
       0,   883,     0,   884,   885,    93,  1793,   547,   819,   820,
     821,   822,   823,     0,     0,     0,     0,     0,     0,     0,
       0,    94,    95,    96,    97,    98,    99,   100,   101,     0,
     102,   103,   104,     0,     0,     0,     0,   824,     0,     0,
     105,   106,     0,   107,   108,   109,   110,   111,   112,   113,
     114,   825,   116,   826,   827,     0,   119,   120,   121,   122,
       0,   123,   828,   829,   124,   125,   830,   831,   128,     0,
     129,   130,   131,   132,   832,     0,   833,     0,   135,   136,
     137,   138,   139,   140,   141,   142,   143,   144,     0,   145,
     146,   147,   148,   149,   150,     0,   151,   152,   153,   154,
     834,   835,   836,   837,   838,   839,   840,   156,   157,   158,
     159,   160,   161,   162,   841,   842,   165,   843,   166,     0,
     167,   168,   169,   170,   171,   172,     0,   173,   174,   175,
     176,   177,     0,     0,   178,   179,   678,   181,   182,     0,
     183,   184,   185,     0,   186,   187,   188,     0,   189,   190,
     191,   192,   844,   194,   195,   196,   197,   198,   845,   846,
     200,     0,   201,   202,   847,   204,     0,   205,     0,   206,
     207,     0,   208,   209,   210,   211,   212,   213,     0,   214,
       0,   848,   849,   217,     0,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,     0,   230,   231,
     232,   233,   234,   235,     0,   236,   237,   238,   239,   240,
     241,   242,   243,   850,   851,     0,   852,     0,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,     0,
       0,   258,   259,   260,   261,     0,   262,   263,   264,   853,
     854,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   855,   290,   856,   292,   293,
     294,   295,   857,   296,   297,   298,   299,   858,   859,   301,
     860,   303,   304,   305,     0,   306,   307,     0,     0,   861,
     309,   310,     0,     0,   311,   312,   313,   314,   315,   862,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,   327,   328,   863,   330,   331,   332,   333,   334,   335,
       0,   336,   337,   338,   339,   340,   341,     0,   342,   343,
     344,   864,   346,   347,   348,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,     0,
       0,   362,   363,   364,   365,   366,   367,   865,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,     0,
     380,   381,   382,   383,   384,   866,   385,   386,   387,   388,
     389,   390,   391,   392,   867,   394,     0,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   868,   410,     0,   411,   412,     0,   413,   414,   415,
     416,   417,   418,   419,     0,   869,   870,     0,     0,   422,
     423,   871,   425,   872,   873,   427,   428,   874,   430,   431,
     432,   433,   434,     0,     0,   435,   436,   437,   438,   439,
     875,     0,   440,   441,   442,   443,   444,   445,   876,     0,
     447,   448,   449,   450,   451,   452,   453,     0,     0,   454,
       0,     0,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   877,     0,     0,     0,     0,     0,     0,
     878,   879,     0,     0,     0,     0,     0,   881,     0,   882,
       0,     0,     0,     0,   883,     0,   884,   885,    93,   818,
     547,   819,   820,   821,   822,   823,     0,     0,     0,     0,
       0,     0,     0,     0,    94,    95,    96,    97,    98,    99,
     100,   101,     0,   102,   103,   104,     0,     0,     0,     0,
     824,     0,     0,   105,   106,     0,   107,   108,   109,   110,
     111,   112,   113,   114,   825,   116,   826,   827,     0,   119,
     120,   121,   122,     0,   123,   828,   829,   124,   125,   830,
     831,   128,     0,   129,   130,   131,   132,   832,     0,   833,
       0,   135,   136,   137,   138,   139,   140,   141,   142,   143,
     144,     0,   145,   146,   147,   148,   149,   150,     0,   151,
     152,   153,   154,   834,   835,   836,   837,   838,   839,   840,
     156,   157,   158,   159,   160,   161,   162,   841,   842,   165,
     843,   166,     0,   167,   168,   169,   170,   171,   172,     0,
     173,   174,   175,   176,   177,     0,     0,   178,   179,   678,
     181,   182,     0,   183,   184,   185,     0,   186,   187,   188,
       0,   189,   190,   191,   192,   844,   194,   195,   196,   197,
     198,   845,   846,   200,     0,   201,   202,   847,   204,     0,
     205,     0,   206,   207,     0,   208,   209,   210,   211,   212,
     213,     0,   214,     0,   848,   849,   217,     0,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,   237,
     238,   239,   240,   241,   242,   243,   850,   851,     0,   852,
       0,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,     0,     0,   258,   259,   260,   261,     0,   262,
     263,   264,   853,   854,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   855,   290,
     856,   292,   293,   294,   295,   857,   296,   297,   298,   299,
     858,   859,   301,   860,   303,   304,   305,     0,   306,   307,
       0,     0,   861,   309,   310,     0,     0,   311,   312,   313,
     314,   315,   862,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,     0,   327,   328,   863,   330,   331,   332,
     333,   334,   335,     0,   336,   337,   338,   339,   340,   341,
       0,   342,   343,   344,   864,   346,   347,   348,   349,     0,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,     0,     0,   362,   363,   364,   365,   366,   367,
     865,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,     0,   380,   381,   382,   383,   384,   866,   385,
     386,   387,   388,   389,   390,   391,   392,   867,   394,     0,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   868,   410,     0,   411,   412,     0,
     413,   414,   415,   416,   417,   418,   419,     0,   869,   870,
       0,     0,   422,   423,   871,   425,   872,   873,   427,   428,
     874,   430,   431,   432,   433,   434,     0,     0,   435,   436,
     437,   438,   439,   875,     0,   440,   441,   442,   443,   444,
     445,   876,     0,   447,   448,   449,   450,   451,   452,   453,
       0,     0,   454,     0,     0,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   877,     0,     0,     0,
       0,     0,     0,   878,   879,     0,     0,     0,     0,     0,
     881,     0,  2027,     0,     0,     0,     0,   883,     0,   884,
     885,    93,   818,   547,   819,   820,   821,   822,   823,     0,
       0,     0,     0,     0,     0,     0,     0,    94,    95,    96,
      97,    98,    99,   100,   101,     0,   102,   103,   104,     0,
       0,     0,     0,   824,     0,     0,   105,   106,     0,   107,
     108,   109,   110,   111,   112,   113,   114,   825,   116,   826,
     827,     0,   119,   120,   121,   122,     0,   123,   828,   829,
     124,   125,   830,   831,   128,     0,   129,   130,   131,   132,
     832,     0,   833,     0,   135,   136,   137,   138,   139,   140,
     141,   142,   143,   144,     0,   145,   146,   147,   148,   149,
     150,     0,   151,   152,  2711,   154,   834,   835,   836,   837,
     838,   839,   840,   156,   157,   158,   159,   160,   161,   162,
     841,   842,   165,   843,   166,     0,   167,   168,   169,   170,
     171,   172,     0,   173,   174,   175,   176,   177,     0,     0,
     178,   179,   678,   181,   182,     0,   183,   184,   185,     0,
     186,   187,   188,     0,   189,   190,   191,   192,   844,   194,
     195,   196,   197,   198,   845,   846,   200,     0,   201,   202,
     847,   204,     0,   205,     0,   206,   207,     0,   208,   209,
     210,   211,   212,   213,     0,   214,     0,  2712,   849,   217,
       0,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,     0,   230,   231,   232,   233,   234,   235,
       0,   236,   237,   238,   239,   240,   241,   242,   243,   850,
     851,     0,   852,     0,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,     0,     0,   258,   259,   260,
     261,     0,   262,   263,   264,   853,   854,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   855,   290,   856,   292,   293,   294,   295,   857,   296,
     297,   298,   299,   858,   859,   301,   860,   303,   304,   305,
       0,   306,   307,     0,     0,   861,   309,   310,     0,     0,
     311,   312,   313,   314,   315,   862,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,     0,   327,   328,   863,
     330,   331,   332,   333,   334,   335,     0,   336,   337,   338,
     339,   340,   341,     0,   342,   343,   344,   864,   346,   347,
     348,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,     0,     0,   362,   363,   364,
     365,   366,  2713,   865,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,     0,   380,   381,   382,   383,
     384,   866,   385,   386,   387,   388,   389,   390,   391,   392,
     867,   394,     0,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   868,   410,     0,
     411,   412,     0,   413,   414,   415,   416,   417,   418,   419,
       0,   869,   870,     0,     0,   422,   423,   871,   425,   872,
     873,   427,   428,   874,   430,   431,   432,   433,   434,     0,
       0,   435,   436,   437,   438,   439,   875,     0,   440,   441,
     442,   443,   444,   445,   876,     0,   447,   448,   449,   450,
     451,   452,   453,     0,     0,   454,     0,     0,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   877,
       0,     0,     0,     0,     0,     0,   878,   879,     0,     0,
       0,     0,     0,   881,     0,  2715,     0,     0,     0,     0,
     883,     0,   884,   885,    93,   818,   547,   819,   820,   821,
     822,   823,     0,     0,     0,     0,     0,     0,     0,     0,
      94,    95,    96,    97,    98,    99,   100,   101,     0,   102,
     103,   104,     0,     0,     0,     0,   824,     0,     0,   105,
     106,     0,   107,   108,   109,   110,   111,   112,   113,  2973,
     825,   116,   826,   827,     0,   119,   120,   121,   122,     0,
     123,   828,   829,   124,   125,   830,   831,   128,     0,   129,
     130,   131,   132,   832,     0,   833,     0,   135,   136,   137,
     138,   139,   140,   141,   142,   143,   144,     0,   145,   146,
     147,   148,   149,   150,     0,   151,   152,   153,  2974,   834,
     835,   836,   837,   838,   839,   840,   156,   157,   158,   159,
     160,   161,   162,   841,   842,   165,   843,   166,     0,   167,
     168,   169,   170,   171,   172,     0,   173,   174,   175,   176,
     177,     0,     0,   178,   179,   678,   181,   182,     0,   183,
     184,   185,     0,   186,   187,   188,     0,   189,   190,   191,
     192,   844,   194,   195,   196,   197,   198,   845,   846,   200,
       0,   201,   202,   847,   204,     0,   205,     0,   206,   207,
       0,   208,   209,   210,   211,   212,   213,     0,   214,     0,
     848,   849,   217,     0,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,     0,   230,   231,   232,
     233,   234,   235,     0,   236,   237,   238,   239,   240,   241,
     242,   243,   850,   851,     0,   852,     0,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,     0,     0,
     258,   259,   260,   261,     0,   262,   263,   264,   853,   854,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   855,   290,   856,   292,   293,   294,
     295,   857,   296,   297,   298,   299,   858,   859,   301,   860,
     303,   304,   305,     0,   306,   307,     0,     0,   861,   309,
     310,     0,     0,   311,   312,   313,   314,   315,   862,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,     0,
     327,   328,   863,   330,   331,   332,   333,   334,   335,     0,
     336,   337,   338,   339,   340,   341,     0,   342,   343,   344,
     864,   346,   347,   348,   349,     0,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,     0,     0,
     362,   363,   364,   365,   366,   367,   865,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,     0,   380,
     381,   382,   383,   384,   866,   385,   386,   387,   388,   389,
     390,   391,   392,   867,   394,     0,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     868,   410,     0,   411,   412,     0,   413,   414,   415,   416,
     417,   418,   419,     0,   869,   870,     0,     0,   422,   423,
     871,   425,   872,   873,   427,   428,   874,   430,   431,  2975,
     433,   434,     0,     0,   435,   436,   437,   438,   439,   875,
       0,   440,   441,   442,   443,   444,   445,   876,     0,   447,
     448,   449,   450,   451,   452,   453,     0,     0,   454,     0,
       0,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   877,     0,     0,     0,     0,     0,     0,   878,
     879,     0,     0,     0,     0,     0,   881,     0,   882,     0,
       0,     0,     0,   883,     0,   884,   885,    93,   818,   547,
     819,   820,   821,   822,   823,     0,     0,     0,     0,     0,
       0,     0,     0,    94,    95,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,     0,     0,     0,     0,   824,
       0,     0,   105,   106,     0,   107,   108,   109,   110,   111,
     112,   113,   114,   825,   116,   826,   827,     0,   119,   120,
     121,   122,     0,   123,   828,   829,   124,   125,   830,   831,
     128,     0,   129,   130,   131,   132,   832,     0,   833,     0,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
       0,   145,   146,   147,   148,   149,   150,     0,   151,   152,
     153,  2974,   834,   835,   836,   837,   838,   839,   840,   156,
     157,   158,   159,   160,   161,   162,   841,   842,   165,   843,
     166,     0,   167,   168,   169,   170,   171,   172,     0,   173,
     174,   175,   176,   177,     0,     0,   178,   179,   678,   181,
     182,     0,   183,   184,   185,     0,   186,   187,   188,     0,
     189,   190,   191,   192,   844,   194,   195,   196,   197,   198,
     845,   846,   200,     0,   201,   202,   847,   204,     0,   205,
       0,   206,   207,     0,   208,   209,   210,   211,   212,   213,
       0,   214,     0,   848,   849,   217,     0,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,     0,
     230,   231,   232,   233,   234,   235,     0,   236,   237,   238,
     239,   240,   241,   242,   243,   850,   851,     0,   852,     0,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,     0,     0,   258,   259,   260,   261,     0,   262,   263,
     264,   853,   854,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   855,   290,   856,
     292,   293,   294,   295,   857,   296,   297,   298,   299,   858,
     859,   301,   860,   303,   304,   305,     0,   306,   307,     0,
       0,   861,   309,   310,     0,     0,   311,   312,   313,   314,
     315,   862,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,     0,   327,   328,   863,   330,   331,   332,   333,
     334,   335,     0,   336,   337,   338,   339,   340,   341,     0,
     342,   343,   344,   864,   346,   347,   348,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,     0,     0,   362,   363,   364,   365,   366,   367,   865,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,     0,   380,   381,   382,   383,   384,   866,   385,   386,
     387,   388,   389,   390,   391,   392,   867,   394,     0,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   868,   410,     0,   411,   412,     0,   413,
     414,   415,   416,   417,   418,   419,     0,   869,   870,     0,
       0,   422,   423,   871,   425,   872,   873,   427,   428,   874,
     430,   431,  2975,   433,   434,     0,     0,   435,   436,   437,
     438,   439,   875,     0,   440,   441,   442,   443,   444,   445,
     876,     0,   447,   448,   449,   450,   451,   452,   453,     0,
       0,   454,     0,     0,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   877,     0,     0,     0,     0,
       0,     0,   878,   879,     0,     0,     0,     0,     0,   881,
       0,   882,     0,     0,     0,     0,   883,     0,   884,   885,
      93,   818,   547,   819,   820,   821,   822,   823,     0,     0,
       0,     0,     0,     0,     0,     0,    94,    95,    96,    97,
      98,    99,   100,   101,     0,   102,   103,   104,     0,     0,
       0,     0,   824,     0,     0,   105,   106,     0,   107,   108,
     109,   110,   111,   112,   113, -1760,   825,   116,   826,   827,
       0,   119,   120,   121,   122,     0,   123,   828,   829,   124,
     125,   830,   831,   128,     0,   129,   130,   131,   132,   832,
       0,   833,     0,   135,   136,   137,   138,   139,   140,   141,
     142,   143,   144,     0,   145,   146,   147,   148,   149,   150,
       0,   151,   152,   153,  2974,   834,   835,   836,   837,   838,
     839,   840,   156,   157,   158,   159,   160,   161,   162,   841,
     842,   165,   843,   166,     0,   167,   168,   169,   170,   171,
     172,     0,   173,   174,   175,   176,   177,     0,     0,   178,
     179,   678,   181,   182,     0,   183,   184,   185,     0,   186,
     187,   188,     0,   189,   190,   191,   192,   844,   194,   195,
     196,   197,   198,   845,   846,   200,     0,   201,   202,   847,
     204,     0,   205,     0,   206,   207,     0,   208,   209,   210,
     211, -1760,   213,     0,   214,     0,   848,   849,   217,     0,
     218,   219,   220,   221,   222,   223,   224, -1760,   226,   227,
     228,   229,     0,   230,   231,   232,   233,   234,   235,     0,
     236,   237,   238,   239,   240,   241,   242,   243,   850,   851,
       0,   852,     0,   247,     0,     0,   250,   251,   252,   253,
     254,   255,   256,   257,     0,     0,   258,   259,   260, -1760,
       0,   262,   263,   264,   853,   854,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     855,   290,   856,   292,   293,   294,   295,     0,   296,   297,
       0,   299,   858,   859,   301,   860,   303,   304,   305,     0,
     306,   307,     0,     0,   861,   309,   310,     0,     0,   311,
     312,   313,   314,   315,   862,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,     0,   327,   328,   863,   330,
     331,   332,   333,   334,   335,     0,   336,   337,   338,   339,
     340,   341,     0,   342,   343,   344,   864,   346,   347,   348,
     349,     0,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,     0,     0,   362,   363,   364,   365,
     366,   367,   865,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,     0,   380,   381,   382,   383,   384,
     866,   385,   386,   387,   388,   389, -1760,   391,   392,   867,
     394,     0,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   868,   410,     0,   411,
     412,     0,   413,   414,   415,   416,   417,   418,   419,     0,
     869,   870,     0,     0,   422,   423,   871,   425,   872,   873,
     427,   428,   874,   430,   431,  2975,   433,   434,     0,     0,
     435,   436,   437,   438,   439,   875,     0,   440,   441,   442,
     443,   444,   445,   876,     0,   447,   448,   449,   450,   451,
     452,   453,     0,     0,   454,     0,     0,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475, -1760,     0,
       0,     0,     0,     0,     0,   878,   879,     0,     0,     0,
       0,     0,   881,     0,   882,     0,     0,     0,     0,   883,
       0,   884,   885,    93,   818,   547,   819,   820,   821,   822,
     823,     0,     0,     0,     0,     0,     0,     0,     0,    94,
      95,    96,    97,    98,    99,   100,   101,     0,   102,   103,
     104,     0,     0,     0,     0,     0,     0,     0,   105,   106,
       0,   107,   108,   109,   110,   111,   112,   113,   114,   825,
     116,   826,   827,     0,   119,   120,   121,   122,     0,   123,
     828,   829,   124,   125,   830,   831,   128,     0,   129,   130,
     131,   132,   832,     0,   833,     0,   135,   136,   137,   138,
     139,   140,   141,   142,   143,   144,     0,   145,   146,   147,
     148,   149,   150,     0,   151,   152,   153,   154,   834,   835,
     836,   837,   838,   839,   840,   156,   157,   158,   159,   160,
     161,   162,   841,   842,   165,     0,   166,     0,   167,   168,
     169,   170,   171,   172,     0,   173,   174,   175,   176,   177,
       0,     0,   178,   179,   678,   181,   182,     0,   183,   184,
     185,     0,   186,   187,   188,     0,   189,   190,   191,   192,
     844,   194,   195,   196,   197,   198,   845,   846,   200,     0,
     201,   202,   847,   204,     0,   205,     0,   206,   207,     0,
     208,   209,   210,   211,   212,   213,     0,   214,     0,   848,
     849,   217,     0,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,     0,   230,   231,   232,   233,
     234,   235,     0,   236,   237,   238,   239,   240,   241,   242,
     243,   850,   851,     0,   852,     0,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,     0,     0,   258,
     259,   260,   261,     0,   262,   263,   264,   853,   854,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   855,   290,   856,   292,   293,   294,   295,
       0,   296,   297,   298,   299,   858,   859,   301,   860,   303,
     304,   305,     0,   306,   307,     0,     0,   861,   309,   310,
       0,     0,   311,   312,   313,   314,   315,   862,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,     0,   327,
     328,   863,   330,   331,   332,   333,   334,   335,     0,   336,
     337,   338,   339,   340,   341,     0,   342,   343,   344,   864,
     346,   347,   348,   349,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,     0,     0,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,     0,   380,   381,
     382,   383,   384,   866,   385,   386,   387,   388,   389,   390,
     391,   392,   867,   394,     0,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   868,
     410,     0,   411,   412,     0,   413,   414,   415,   416,   417,
     418,   419,     0,   869,   870,     0,     0,   422,   423,   871,
     425,   872,   873,   427,   428,   874,   430,   431,   432,   433,
     434,     0,     0,   435,   436,   437,   438,   439,   875,     0,
     440,   441,   442,   443,   444,   445,   876,     0,   447,   448,
     449,   450,   451,   452,   453,     0,     0,   454,     0,     0,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,     0,     0,     0,     0,     0,     0,     0,  1641,  1642,
       0,     0,    93,   818,   547,   819,   820,  1643,   822,   823,
       0,     0,     0,     0,   884,   885,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,     0,     0,     0,   105,   106,     0,
     107,   108,   109,   110,   111,   112,   113,   114,   825,   116,
     826,   827,     0,   119,   120,   121,   122,     0,   123,   828,
     829,   124,   125,   830,   831,   128,     0,   129,   130,   131,
     132,   832,     0,   833,     0,   135,   136,   137,   138,   139,
     140,   141,   142,   143,   144,     0,   145,   146,   147,   148,
     149,   150,     0,   151,   152,   153,   154,   834,   835,   836,
     837,   838,   839,   840,   156,   157,   158,   159,   160,   161,
     162,   841,   842,   165,     0,   166,     0,   167,   168,   169,
     170,   171,   172,     0,   173,   174,   175,   176,   177,     0,
       0,   178,   179,   678,   181,   182,     0,   183,   184,   185,
       0,   186,   187,   188,     0,   189,   190,   191,   192,   844,
     194,   195,   196,   197,   198,   845,   846,   200,     0,   201,
     202,   847,   204,     0,   205,     0,   206,   207,     0,   208,
     209,   210,   211,   212,   213,     0,   214,     0,   848,   849,
     217,     0,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,     0,   230,   231,   232,   233,   234,
     235,     0,   236,   237,   238,   239,   240,   241,   242,   243,
     850,   851,     0,   852,     0,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,     0,     0,   258,   259,
     260,   261,     0,   262,   263,   264,   853,   854,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   855,   290,   856,   292,   293,   294,   295,     0,
     296,   297,   298,   299,   858,   859,   301,   860,   303,   304,
     305,     0,   306,   307,     0,     0,   308,   309,   310,     0,
       0,   311,   312,   313,   314,   315,   862,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,     0,   327,   328,
     863,   330,   331,   332,   333,   334,   335,     0,   336,   337,
     338,   339,   340,   341,     0,   342,   343,   344,   864,   346,
     347,   348,   349,     0,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,     0,     0,   362,   363,
     364,   365,   366,   367,  1779,  1780,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,     0,   380,   381,   382,
     383,   384,   866,   385,   386,   387,   388,   389,   390,   391,
     392,   867,   394,     0,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   868,   410,
       0,   411,   412,     0,   413,   414,   415,   416,   417,   418,
     419,     0,   869,   870,     0,     0,   422,   423,   871,   425,
     872,   873,   427,   428,   874,   430,   431,   432,   433,   434,
       0,     0,   435,   436,   437,   438,   439,   875,     0,   440,
     441,   442,   443,   444,   445,   876,     0,   447,   448,   449,
     450,   451,   452,   453,     0,     0,   454,     0,     0,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
       0,     0,     0,     0,     0,     0,     0,  1781,  1782,     0,
       0,     0,     0,     0,     0,     0,  1643,     0,     0,     0,
       0,     0,     0,   884,   885,    93,   818,   547,   819,   820,
     821,   822,   823,     0,     0,     0,     0,     0,     0,     0,
       0,    94,    95,    96,    97,    98,    99,   100,   101,     0,
     102,   103,   104,     0,     0,     0,     0,     0,     0,     0,
     105,   106,     0,   107,   108,   109,   110,   111,   112,   113,
     114,   825,   116,   826,   827,     0,   119,   120,   121,   122,
       0,   123,   828,   829,   124,   125,   830,   831,   128,     0,
     129,   130,   131,   132,   832,     0,   833,     0,   135,   136,
     137,   138,   139,   140,   141,   142,   143,   144,     0,   145,
     146,   147,   148,   149,   150,     0,   151,   152,   153,   154,
     834,   835,   836,   837,   838,   839,   840,   156,   157,   158,
     159,   160,   161,   162,   841,   842,   165,     0,   166,     0,
     167,   168,   169,   170,   171,   172,     0,   173,   174,   175,
     176,   177,     0,     0,   178,   179,   678,   181,   182,     0,
     183,   184,   185,     0,   186,   187,   188,     0,   189,   190,
     191,   192,   844,   194,   195,   196,   197,   198,   845,   846,
     200,     0,   201,   202,   847,   204,     0,   205,     0,   206,
     207,     0,   208,   209,   210,   211,   212,   213,     0,   214,
       0,   848,   849,   217,     0,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,     0,   230,   231,
     232,   233,   234,   235,     0,   236,   237,   238,   239,   240,
     241,   242,   243,   850,   851,     0,   852,     0,   247,     0,
     249,   250,   251,   252,   253,   254,   255,   256,   257,     0,
       0,   258,   259,   260,   261,     0,   262,   263,   264,   853,
     854,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   855,   290,   856,   292,   293,
     294,   295,     0,   296,   297,   298,   299,   858,   859,   301,
     860,   303,   304,   305,     0,   306,   307,     0,     0,   861,
     309,   310,     0,     0,   311,   312,   313,   314,   315,   862,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,   327,   328,   863,   330,   331,   332,   333,   334,   335,
       0,   336,   337,   338,   339,   340,   341,     0,   342,   343,
     344,   864,   346,   347,   348,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,     0,
       0,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,     0,
     380,   381,   382,   383,   384,   866,   385,   386,   387,   388,
     389,   390,   391,   392,   867,   394,     0,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   868,   410,     0,   411,   412,     0,   413,   414,   415,
     416,   417,   418,   419,     0,   869,   870,     0,     0,   422,
     423,   871,   425,   872,   873,   427,   428,   874,   430,   431,
     432,   433,   434,     0,     0,   435,   436,   437,   438,   439,
     875,     0,   440,   441,   442,   443,   444,   445,   876,     0,
     447,   448,   449,   450,   451,   452,   453,     0,     0,   454,
       0,     0,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,     0,     0,     0,     0,     0,     0,     0,
    1641,  1642,     0,     0,     0,     0,     0,     0,     0,  1643,
       0,     0,     0,     0,     0,     0,   884,   885,    93,   818,
     547,   819,   820,   821,   822,   823,     0,     0,     0,     0,
       0,     0,     0,     0,    94,    95,    96,    97,    98,    99,
     100,   101,     0,   102,   103,   104,     0,     0,     0,     0,
     824,     0,     0,   105,   106,     0,   107,   108,   109,   110,
     111,   112,   113,     0,   825,   116,   826,   827,     0,   119,
     120,   121,   122,     0,   123,   828,   829,   124,   125,   830,
     831,   128,     0,   129,   130,   131,   132,   832,     0,   833,
       0,   135,   136,   137,   138,   139,   140,   141,   142,   143,
     144,     0,   145,   146,   147,   148,   149,   150,     0,   151,
     152,   153,   154,   834,   835,   836,   837,   838,   839,   840,
     156,   157,   158,   159,   160,   161,   162,   841,   842,   165,
     843,   166,     0,   167,   168,   169,   170,   171,   172,     0,
     173,   174,   175,   176,   177,     0,     0,   178,   179,   678,
     181,   182,     0,   183,   184,   185,     0,   186,     0,   188,
       0,   189,   190,   191,   192,   844,   194,   195,   196,   197,
     198,   845,   846,   200,     0,   201,   202,   847,   204,     0,
     205,     0,   206,   207,     0,   208,   209,   210,   211,     0,
     213,     0,   214,     0,   848,   849,   217,     0,   218,   219,
     220,   221,   222,   223,   224,     0,   226,   227,   228,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,   237,
     238,   239,   240,   241,   242,   243,   850,   851,     0,   852,
       0,   247,     0,     0,   250,   251,   252,   253,   254,   255,
     256,   257,     0,     0,   258,   259,   260,     0,     0,   262,
     263,   264,   853,   854,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   855,   290,
     856,   292,   293,   294,   295,     0,   296,   297,     0,   299,
     858,   859,   301,   860,   303,   304,   305,     0,   306,   307,
       0,     0,   861,   309,   310,     0,     0,   311,   312,   313,
     314,   315,   862,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,     0,   327,   328,   863,   330,   331,   332,
     333,   334,   335,     0,   336,   337,   338,   339,   340,   341,
       0,   342,   343,   344,   864,   346,   347,   348,   349,     0,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,     0,     0,   362,   363,   364,   365,   366,   367,
     865,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,     0,   380,   381,   382,   383,   384,   866,   385,
     386,   387,   388,   389,     0,   391,   392,   867,   394,     0,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   868,   410,     0,   411,   412,     0,
     413,   414,   415,   416,   417,   418,   419,     0,   869,   870,
       0,     0,   422,   423,   871,   425,   872,   873,   427,   428,
     874,   430,   431,   432,   433,   434,     0,     0,   435,   436,
     437,   438,   439,   875,     0,   440,   441,   442,   443,   444,
     445,   876,     0,   447,   448,   449,   450,   451,   452,   453,
       0,     0,   454,     0,     0,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,     0,     0,     0,     0,
       0,     0,     0,   878,   879,   498,     0,     0,     0,     0,
     881,     0,   882,     0,     0,     0,     0,   883,     0,   884,
     885,    94,    95,    96,    97,    98,    99,   100,   101,     0,
     102,   103,   104,     0,     0,     0,     0,     0,  2332,     0,
     105,   106,     0,   107,   108,   109,     0,   111,   112,   113,
     114,   115,     0,   117,   118,     0,   119,   120,   121,   122,
       0,   123,     0,     0,   124,   125,   126,   127,   128,     0,
     129,   130,   131,   132,   133,     0,     0,     0,   135,   136,
     137,   138,   139,   140,     0,   142,   143,   144,     0,   145,
     146,   147,   148,   149,   150,     0,  -626,   152,   153,   154,
       0,     0,     0,     0,     0,     0,     0,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,     0,   166,     0,
     167,   168,   169,   170,   171,   172,     0,   173,   174,   175,
     176,   177,     0,     0,   178,   179,   180,   181,   182,     0,
     183,   184,   185,     0,   186,   187,   188,     0,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,     0,
     200,     0,   201,   202,   203,   204,     0,   205,     0,   206,
       0,     0,  -626,   209,   210,   211,     0,   213,     0,   214,
       0,   215,   216,   217,     0,   218,   219,   220,   221,   222,
     223,   224,     0,   226,   227,   228,   229,     0,   230,   231,
     232,   233,   234,   235,     0,   236,  -626,   238,   239,   240,
     241,   242,   243,   244,   245,     0,   246,     0,   247,     0,
       0,   250,  -626,   252,   253,   254,   255,   256,   257,     0,
       0,   258,  -626,   260,     0,     0,   262,   263,   264,     0,
       0,   265,   266,   267,   268,   269,   500,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,  -626,   291,   292,   293,
     294,   295,     0,   296,   297,     0,   299,     0,   300,   301,
     302,   303,   304,   305,     0,   306,   307,     0,     0,   308,
     309,   310,     0,     0,   311,   312,     0,   314,     0,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,   327,   328,   329,   330,   331,   332,   333,   334,   335,
       0,   336,   337,   338,   339,   340,   341,     0,   342,   343,
     344,   345,   346,   347,   348,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,     0,
       0,   362,   363,  -626,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,     0,
     380,   381,   382,   383,   384,     0,   385,   386,   387,   388,
     389,     0,   391,   392,   393,   394,     0,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   502,
     408,   409,   410,     0,   411,   412,     0,   413,  -626,   415,
     416,   417,   418,   419,     0,   420,   421,     0,     0,   422,
     423,   424,   425,   426,     0,   427,   428,   429,   430,   431,
     432,   433,   434,     0,     0,   435,   436,   437,   438,   439,
       0,     0,   440,   441,   442,   443,   444,   445,   446,     0,
     447,     0,   449,   450,   451,   452,   453,     0,     0,   454,
       0,     0,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,     0,     0,    93,     0,   579,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     947,    94,    95,    96,    97,    98,    99,   100,   101,     0,
     102,   103,   104,     0,     0,     0,     0,     0,     0,     0,
     105,   106,     0,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   118,     0,   119,   120,   121,   122,
       0,   123,     0,   829,   124,   125,   126,   127,   128,     0,
     129,   130,   131,   132,   832,     0,   833,     0,   135,   136,
     137,   138,   139,   140,   141,   142,   143,   144,     0,   145,
     146,   147,   148,   149,   150,     0,   151,   152,   153,   154,
     834,   835,   836,   837,   838,   839,   840,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,     0,   166,     0,
     167,   168,   169,   170,   171,   172,     0,   173,   174,   175,
     176,   177,     0,     0,   178,   179,   180,   181,   182,     0,
     183,   184,   185,     0,   186,   187,   188,     0,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   845,     0,
     200,     0,   201,   202,   203,   204,     0,   205,     0,   206,
     207,     0,   208,   209,   210,   211,   212,   213,     0,   214,
       0,   215,   216,   217,     0,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,     0,   230,   231,
     232,   233,   234,   235,     0,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,     0,   246,     0,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,  2073,
       0,   258,   259,   260,   261,     0,   262,   263,   264,   853,
     854,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,     0,   296,   297,   298,   299,     0,   859,   301,
     302,   303,   304,   305,     0,   306,   307,     0,   580,   308,
     309,   310,     0,     0,   311,   312,   313,   314,   315,   862,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,   327,   328,   863,   330,   331,   332,   333,   334,   335,
       0,   336,   337,   338,   339,   340,   341,     0,   342,   343,
     344,   345,   346,   347,   348,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,     0,
       0,   362,   363,   364,   365,   366,   367,   368,  2074,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,    26,
     380,   381,   382,   383,   384,   866,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,     0,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   868,   410,     0,   411,   412,    31,   413,   414,   415,
     416,   417,   418,   419,     0,   420,   421,     0,     0,   422,
     423,   871,   425,   872,     0,   427,   428,   874,   430,   431,
     432,   433,   434,     0,     0,   435,   436,   437,   438,   439,
     875,     0,   440,   441,   442,   443,   444,   575,   446,     0,
     447,   448,   449,   450,   451,   452,   453,     0,     0,   454,
       0,    34,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,     0,    93,    35,   579,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2075,
      94,    95,    96,    97,    98,    99,   100,   101,     0,   102,
     103,   104,     0,     0,     0,     0,     0,     0,     0,   105,
     106,     0,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,     0,   119,   120,   121,   122,     0,
     123,     0,   829,   124,   125,   126,   127,   128,     0,   129,
     130,   131,   132,   832,     0,   833,     0,   135,   136,   137,
     138,   139,   140,   141,   142,   143,   144,     0,   145,   146,
     147,   148,   149,   150,     0,   151,   152,   153,   154,   834,
     835,   836,   837,   838,   839,   840,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,     0,   166,     0,   167,
     168,   169,   170,   171,   172,     0,   173,   174,   175,   176,
     177,     0,     0,   178,   179,   180,   181,   182,     0,   183,
     184,   185,     0,   186,   187,   188,     0,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   845,     0,   200,
       0,   201,   202,   203,   204,     0,   205,     0,   206,   207,
       0,   208,   209,   210,   211,   212,   213,     0,   214,     0,
     215,   216,   217,     0,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,     0,   230,   231,   232,
     233,   234,   235,     0,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,     0,   246,     0,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,  2073,     0,
     258,   259,   260,   261,     0,   262,   263,   264,   853,   854,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,     0,   296,   297,   298,   299,     0,   859,   301,   302,
     303,   304,   305,     0,   306,   307,     0,   580,   308,   309,
     310,     0,     0,   311,   312,   313,   314,   315,   862,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,     0,
     327,   328,   863,   330,   331,   332,   333,   334,   335,     0,
     336,   337,   338,   339,   340,   341,     0,   342,   343,   344,
     345,   346,   347,   348,   349,     0,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,     0,     0,
     362,   363,   364,   365,   366,   367,   368,  2074,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,     0,   380,
     381,   382,   383,   384,   866,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,     0,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     868,   410,     0,   411,   412,     0,   413,   414,   415,   416,
     417,   418,   419,     0,   420,   421,     0,     0,   422,   423,
     871,   425,   872,     0,   427,   428,   874,   430,   431,   432,
     433,   434,     0,     0,   435,   436,   437,   438,   439,   875,
       0,   440,   441,   442,   443,   444,   445,   446,     0,   447,
     448,   449,   450,   451,   452,   453,     0,     0,   454,     0,
       0,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,     0,    93,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2075,    94,
      95,    96,    97,    98,    99,   100,   101,     0,   102,   103,
     104,     0,     0,     0,     0,     0,     0,     0,   105,   106,
       0,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,   117,   118,     0,   119,   120,   121,   122,     0,   123,
       0,   829,   124,   125,   126,   127,   128,     0,   129,   130,
     131,   132,   832,     0,   833,     0,   135,   136,   137,   138,
     139,   140,   141,   142,   143,   144,     0,   145,   146,   147,
     148,   149,   150,     0,   151,   152,   153,   154,   834,   835,
     836,   837,   838,   839,   840,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,     0,   166,     0,   167,   168,
     169,   170,   171,   172,     0,   173,   174,   175,   176,   177,
       0,     0,   178,   179,   180,   181,   182,     0,   183,   184,
     185,     0,   186,   187,   188,     0,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   845,     0,   200,     0,
     201,   202,   203,   204,     0,   205,     0,   206,   207,     0,
     208,   209,   210,   211,   212,   213,     0,   214,     0,   215,
     216,   217,     0,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,     0,   230,   231,   232,   233,
     234,   235,     0,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,     0,   246,     0,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,     0,     0,   258,
     259,   260,   261,     0,   262,   263,   264,   853,   854,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
       0,   296,   297,   298,   299,     0,   859,   301,   302,   303,
     304,   305,     0,   306,   307,     0,     0,   308,   309,   310,
       0,     0,   311,   312,   313,   314,   315,   862,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,     0,   327,
     328,   863,   330,   331,   332,   333,   334,   335,     0,   336,
     337,   338,   339,   340,   341,     0,   342,   343,   344,   345,
     346,   347,   348,   349,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,     0,     0,   362,
     363,   364,   365,   366,   367,   368,  2074,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,     0,   380,   381,
     382,   383,   384,   866,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,     0,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   868,
     410,     0,   411,   412,     0,   413,   414,   415,   416,   417,
     418,   419,     0,   420,   421,     0,     0,   422,   423,   871,
     425,   872,     0,   427,   428,   874,   430,   431,   432,   433,
     434,     0,     0,   435,   436,   437,   438,   439,   875,     0,
     440,   441,   442,   443,   444,   445,   446,     0,   447,   448,
     449,   450,   451,   452,   453,     0,     0,   454,     0,     0,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,     0,    93,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    36,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,     0,     0,     0,   105,   106,     0,
     107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
     117,   118,     0,   119,   120,   121,   122,     0,   123,     0,
     829,   124,   125,   126,   127,   128,     0,   129,   130,   131,
     132,   832,     0,   833,     0,   135,   136,   137,   138,   139,
     140,   141,   142,   143,   144,     0,   145,   146,   147,   148,
     149,   150,     0,   151,   152,   153,   154,   834,   835,   836,
     837,   838,   839,   840,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,     0,   166,     0,   167,   168,   169,
     170,   171,   172,     0,   173,   174,   175,   176,   177,     0,
       0,   178,   179,   180,   181,   182,     0,   183,   184,   185,
       0,   186,   187,   188,     0,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   845,     0,   200,     0,   201,
     202,   203,   204,     0,   205,     0,   206,   207,     0,   208,
     209,   210,   211,   212,   213,     0,   214,     0,   215,   216,
     217,     0,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,     0,   230,   231,   232,   233,   234,
     235,     0,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,     0,   246,     0,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,     0,     0,   258,   259,
     260,   261,     0,   262,   263,   264,   853,   854,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,     0,
     296,   297,   298,   299,     0,   859,   301,   302,   303,   304,
     305,     0,   306,   307,     0,     0,   308,   309,   310,     0,
       0,   311,   312,   313,   314,   315,   862,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,     0,   327,   328,
     863,   330,   331,   332,   333,   334,   335,     0,   336,   337,
     338,   339,   340,   341,     0,   342,   343,   344,   345,   346,
     347,   348,   349,     0,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,     0,     0,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,     0,   380,   381,   382,
     383,   384,   866,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,     0,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   868,   410,
       0,   411,   412,     0,   413,   414,   415,   416,   417,   418,
     419,     0,   420,   421,     0,     0,   422,   423,   871,   425,
     872,     0,   427,   428,   874,   430,   431,   432,   433,   434,
       0,     0,   435,   436,   437,   438,   439,   875,     0,   440,
     441,   442,   443,   444,   445,   446,     0,   447,   448,   449,
     450,   451,   452,   453,     0,     0,   454,     0,     0,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
       0,   746,  1240,   547,     0,     0,     0,   822,     0,     0,
       0,     0,     0,     0,     0,     0,  2732,    94,    95,    96,
      97,    98,    99,   100,   101,     0,   102,   103,   104,     0,
       0,     0,     0,     0,     0,     0,   105,   106,     0,   107,
     108,   109,     0,   111,   112,   113,   747,   748,     0,   749,
     750,     0,   119,   120,   121,   122,     0,   123,     0,     0,
     124,   125,   751,   752,   128,     0,   129,   130,   131,   132,
     753,     0,     0,     0,   135,   136,   137,   138,   139,   140,
       0,   142,   143,   144,     0,   145,   146,   147,   148,   149,
     150,     0,     0,   152,   153,   154,     0,     0,     0,     0,
       0,     0,     0,   156,   157,   158,   159,   160,   161,   162,
     754,   755,   165,     0,   166,     0,   167,   168,   169,   170,
     171,   172,     0,   173,   174,   175,   176,   177,     0,     0,
     178,   179,   180,   181,   182,     0,   183,   184,   185,     0,
     186,   187,   188,     0,   189,   190,   191,   192,   756,   194,
     195,   196,   197,   198,   757,  1241,   200,     0,   201,   202,
     758,   204,     0,   205,     0,   206,     0,     0,     0,   209,
     210,   211,     0,   213,     0,   214,     0,   759,   760,   217,
       0,   218,   219,   220,   221,   222,   223,   224,     0,   226,
     227,   228,   229,     0,   230,   231,   232,   233,   234,   235,
       0,   236,     0,   761,   239,   240,   241,   242,   243,   762,
     763,     0,   764,     0,   247,     0,     0,   250,     0,   252,
     253,   254,   255,   256,   257,     0,     0,   258,     0,   260,
       0,     0,   262,   263,   264,     0,     0,   265,   266,   267,
     268,   269,   765,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   766,     0,   767,   292,   293,   294,   768,     0,   296,
     297,     0,   299,     0,   769,   301,   770,   303,   304,   305,
       0,   306,   307,  1242,     0,   308,   309,   310,     0,     0,
     311,   771,     0,   314,     0,   772,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,     0,   327,   328,   773,
     330,   331,   774,   333,   334,   335,     0,   336,   337,   338,
     339,   340,   341,     0,   342,   343,   344,   775,   346,   347,
     348,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,     0,     0,   362,   363,     0,
     365,   366,   367,   776,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,     0,   380,   381,   382,   383,
     384,     0,   385,   777,   387,   388,   389,     0,   391,   392,
     778,   394,     0,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   779,   408,   780,   410,     0,
     411,   412,     0,   413,     0,   415,   416,   417,   418,   419,
       0,   781,   782,     0,     0,   422,   423,   783,   425,   784,
    1243,   427,   428,   785,   430,   431,   432,   433,   434,     0,
       0,   435,   436,   437,   438,   439,     0,     0,   440,   441,
     442,   443,   444,  1133,   787,     0,   447,     0,   449,   450,
     451,   452,   453,     0,     0,   454,     0,     0,   455,   456,
     457,   458,   459,   460,   788,   789,   790,   791,   792,   793,
     794,   795,   796,   797,   798,   472,   473,   474,   475,     0,
     746,     0,     0,     0,     0,     0,  1244,  1245,  1951,     0,
       0,     0,     0,     0,     0,  1952,    94,    95,    96,    97,
      98,    99,   100,   101,     0,   102,   103,   104,     3,     4,
       0,     0,     0,     0,     0,   105,   106,     0,   107,   108,
     109,     0,   111,   112,   113,   747,   748,     0,   749,   750,
       0,   119,   120,   121,   122,     0,   123,     0,     0,   124,
     125,   751,   752,   128,     0,   129,   130,   131,   132,   753,
       0,     0,     0,   135,   136,   137,   138,   139,   140,     0,
     142,   143,   144,     0,   145,   146,   147,   148,   149,   150,
       0,     0,   152,   153,   154,     0,     0,     0,     0,     0,
       0,     0,   156,   157,   158,   159,   160,   161,   162,   754,
     755,   165,     0,   166,     0,   167,   168,   169,   170,   171,
     172,     0,   173,   174,   175,   176,   177,     0,     0,   178,
     179,   180,   181,   182,     0,   183,   184,   185,     0,   186,
     187,   188,     0,   189,   190,   191,   192,   756,   194,   195,
     196,   197,   198,   757,     0,   200,     0,   201,   202,   758,
     204,     0,   205,     0,   206,     0,     0,     0,   209,   210,
     211,     0,   213,     0,   214,     0,   759,   760,   217,     0,
     218,   219,   220,   221,   222,   223,   224,     0,   226,   227,
     228,   229,     0,   230,   231,   232,   233,   234,   235,     0,
     236,     0,   761,   239,   240,   241,   242,   243,   762,   763,
       0,   764,     0,   247,     0,     0,   250,     0,   252,   253,
     254,   255,   256,   257,     0,     0,   258,     0,   260,     0,
       0,   262,   263,   264,     0,     0,   265,   266,   267,   268,
     269,   765,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     766,     0,   767,   292,   293,   294,   768,     0,   296,   297,
       0,   299,     0,   769,   301,   770,   303,   304,   305,     0,
     306,   307,     0,     0,   308,   309,   310,     0,     0,   311,
     771,     0,   314,     0,   772,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,     0,   327,   328,   773,   330,
     331,   774,   333,   334,   335,     0,   336,   337,   338,   339,
     340,   341,     0,   342,   343,   344,   775,   346,   347,   348,
     349,     0,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,     0,     0,   362,   363,     0,   365,
     366,   367,   776,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,    26,   380,   381,   382,   383,   384,
       0,   385,   777,   387,   388,   389,     0,   391,   392,   778,
     394,     0,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   779,   408,   780,   410,     0,   411,
     412,    31,   413,     0,   415,   416,   417,   418,   419,     0,
     781,   782,     0,     0,   422,   423,   783,   425,   784,     0,
     427,   428,   785,   430,   431,   432,   433,   434,     0,     0,
     435,   436,   437,   438,   439,     0,     0,   440,   441,   442,
     443,   444,   786,   787,     0,   447,     0,   449,   450,   451,
     452,   453,     0,     0,   454,     0,    34,   455,   456,   457,
     458,   459,   460,   788,   789,   790,   791,   792,   793,   794,
     795,   796,   797,   798,   472,   473,   474,   475,     0,   498,
      35,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    36,    94,    95,    96,    97,    98,
      99,   100,   101,   613,   102,   103,   104,     0,     0,     0,
       0,     0,     0,     0,   105,   106,     0,   107,   108,   109,
       0,   111,   112,   113,   114,   115,     0,   117,   118,     0,
     119,   120,   121,   122,     0,   123,     0,     0,   124,   125,
     126,   127,   128,     0,   129,   130,   131,   132,   133,     0,
       0,     0,   135,   136,   137,   138,   139,   140,     0,   142,
     143,   144,     0,   145,   146,   147,   148,   149,   150,     0,
       0,   152,   153,   154,     0,     0,     0,     0,     0,     0,
       0,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,     0,   166,     0,   167,   168,   169,   170,   171,   172,
       0,   173,   174,   175,   176,   177,     0,     0,   178,   179,
     180,   181,   182,     0,   183,   184,   185,     0,   186,   187,
     188,     0,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,     0,   200,     0,   201,   202,   203,   204,
       0,   205,     0,   206,     0,     0,     0,   209,   210,   211,
       0,   213,     0,   214,     0,   215,   216,   217,     0,   218,
     219,   220,   221,   222,   223,   224,     0,   226,   227,   228,
     229,     0,   230,   231,   232,   233,   234,   235,     0,   236,
       0,   238,   239,   240,   241,   242,   243,   244,   245,     0,
     246,     0,   247,     0,     0,   250,     0,   252,   253,   254,
     255,   256,   257,     0,     0,   258,     0,   260,     0,     0,
     262,   263,   264,     0,     0,   265,   266,   267,   268,   269,
     500,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
       0,   291,   292,   293,   294,   295,     0,   296,   297,     0,
     299,     0,   300,   301,   302,   303,   304,   305,     0,   306,
     307,     0,     0,   308,   309,   310,     0,     0,   311,   312,
       0,   314,     0,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,     0,   327,   328,   329,   330,   331,
     332,   333,   334,   335,     0,   336,   337,   338,   339,   340,
     341,     0,   342,   343,   344,   345,   346,   347,   348,   349,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,     0,     0,   362,   363,     0,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,    26,   380,   381,   382,   383,   384,     0,
     385,   386,   387,   388,   389,     0,   391,   392,   393,   394,
       0,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   502,   408,   409,   410,     0,   411,   412,
      31,   413,     0,   415,   416,   417,   418,   419,     0,   614,
     421,     0,     0,   615,   423,   424,   425,   426,     0,   427,
     428,   429,   430,   431,   432,   433,   434,     0,     0,   435,
     436,   437,   438,   439,     0,     0,   440,   441,   442,   443,
     444,   575,   446,     0,   447,     0,   449,   450,   451,   452,
     453,     0,     0,   454,     0,    34,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,     0,   498,    35,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    36,    94,    95,    96,    97,    98,    99,
     100,   101,     0,   102,   103,   104,     0,     0,     0,     0,
       0,     0,     0,   105,   106,     0,   107,   108,   109,     0,
     111,   112,   113,   114,   115,     0,   117,   118,     0,   119,
     120,   121,   122,     0,   123,     0,     0,   124,   125,   126,
     127,   128,     0,   129,   130,   131,   132,   133,     0,     0,
       0,   135,   136,   137,   138,   139,   140,     0,   142,   143,
     144,     0,   145,   146,   147,   148,   149,   150,     0,     0,
     152,   153,   154,     0,     0,     0,     0,     0,     0,     0,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
       0,   166,     0,   167,   168,   169,   170,   171,   172,     0,
     173,   174,   175,   176,   177,     0,     0,   178,   179,   180,
     181,   182,     0,   183,   184,   185,     0,   186,   187,   188,
       0,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,     0,   200,     0,   201,   202,   203,   204,     0,
     205,     0,   206,     0,     0,     0,   209,   210,   211,     0,
     213,     0,   214,     0,   215,   216,   217,     0,   218,   219,
     220,   221,   222,   223,   224,     0,   226,   227,   228,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,     0,
     238,   239,   240,   241,   242,   243,   244,   245,     0,   246,
       0,   247,     0,     0,   250,     0,   252,   253,   254,   255,
     256,   257,     0,     0,   258,     0,   260,     0,     0,   262,
     263,   264,     0,     0,   265,   266,   267,   268,   269,   500,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,     0,
     291,   292,   293,   294,   295,     0,   296,   297,     0,   299,
       0,   300,   301,   302,   303,   304,   305,     0,   306,   307,
       0,     0,   308,   309,   310,     0,     0,   311,   312,     0,
     314,     0,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,     0,   327,   328,   329,   330,   331,   332,
     333,   334,   335,     0,   336,   337,   338,   339,   340,   341,
       0,   342,   343,   344,   345,   346,   347,   348,   349,     0,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,     0,     0,   362,   363,     0,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,    26,   380,   381,   382,   383,   384,     0,   385,
     386,   387,   388,   389,     0,   391,   392,   393,   394,     0,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   502,   408,   409,   410,     0,   411,   412,    31,
     413,     0,   415,   416,   417,   418,   419,     0,   420,   421,
       0,     0,   422,   423,   424,   425,   426,     0,   427,   428,
     429,   430,   431,   432,   433,   434,     0,     0,   435,   436,
     437,   438,   439,     0,     0,   440,   441,   442,   443,   444,
     575,   446,     0,   447,     0,   449,   450,   451,   452,   453,
       0,     0,   454,     0,    34,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,     0,   498,    35,   579,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    36,    94,    95,    96,    97,    98,    99,   100,
     101,     0,   102,   103,   104,     0,     0,     0,     0,     0,
       0,     0,   105,   106,     0,   107,   108,   109,     0,   111,
     112,   113,   114,   115,     0,   117,   118,     0,   119,   120,
     121,   122,     0,   123,     0,     0,   124,   125,   126,   127,
     128,     0,   129,   130,   131,   132,   133,     0,     0,     0,
     135,   136,   137,   138,   139,   140,     0,   142,   143,   144,
       0,   145,   146,   147,   148,   149,   150,     0,     0,   152,
     153,   154,     0,     0,     0,     0,     0,     0,     0,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   165,     0,
     166,     0,   167,   168,   169,   170,   171,   172,     0,   173,
     174,   175,   176,   177,     0,     0,   178,   179,   180,   181,
     182,     0,   183,   184,   185,     0,   186,   187,   188,     0,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,     0,   200,     0,   201,   202,   203,   204,     0,   205,
       0,   206,     0,     0,     0,   209,   210,   211,     0,   213,
       0,   214,     0,   215,   216,   217,     0,   218,   219,   220,
     221,   222,   223,   224,     0,   226,   227,   228,   229,     0,
     230,   231,   232,   233,   234,   235,     0,   236,     0,   238,
     239,   240,   241,   242,   243,   244,   245,     0,   246,     0,
     247,     0,     0,   250,     0,   252,   253,   254,   255,   256,
     257,     0,     0,   258,     0,   260,     0,     0,   262,   263,
     264,     0,     0,   265,   266,   267,   268,   269,   500,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,     0,   291,
     292,   293,   294,   295,     0,   296,   297,     0,   299,     0,
     300,   301,   302,   303,   304,   305,     0,   306,   307,     0,
       0,   308,   309,   310,     0,     0,   311,   312,     0,   314,
       0,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,     0,   327,   328,   329,   330,   331,   332,   333,
     334,   335,     0,   336,   337,   338,   339,   340,   341,     0,
     342,   343,   344,   345,   346,   347,   348,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,     0,     0,   362,   363,     0,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,     0,   380,   381,   382,   383,   384,     0,   385,   386,
     387,   388,   389,     0,   391,   392,   393,   394,     0,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   502,   408,   409,   410,     0,   411,   412,     0,   413,
       0,   415,   416,   417,   418,   419,     0,   420,   421,     0,
       0,   422,   423,   424,   425,   426,     0,   427,   428,   429,
     430,   431,   432,   433,   434,     0,     0,   435,   436,   437,
     438,   439,     0,     0,   440,   441,   442,   443,   444,   445,
     446,     0,   447,     0,   449,   450,   451,   452,   453,     0,
       0,   454,     0,     0,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,     0,   498,     0,   579,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   926,    94,    95,    96,    97,    98,    99,   100,   101,
       0,   102,   103,   104,     0,     0,     0,     0,     0,     0,
       0,   105,   106,     0,   107,   108,   109,     0,   111,   112,
     113,   114,   115,     0,   117,   118,     0,   119,   120,   121,
     122,     0,   123,     0,     0,   124,   125,   126,   127,   128,
       0,   129,   130,   131,   132,   133,     0,     0,     0,   135,
     136,   137,   138,   139,   140,     0,   142,   143,   144,     0,
     145,   146,   147,   148,   149,   150,     0,     0,   152,   153,
     154,     0,     0,     0,     0,     0,     0,     0,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,     0,   166,
       0,   167,   168,   169,   170,   171,   172,     0,   173,   174,
     175,   176,   177,     0,     0,   178,   179,   180,   181,   182,
       0,   183,   184,   185,     0,   186,   187,   188,     0,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
       0,   200,     0,   201,   202,   203,   204,     0,   205,     0,
     206,     0,     0,     0,   209,   210,   211,     0,   213,     0,
     214,     0,   215,   216,   217,     0,   218,   219,   220,   221,
     222,   223,   224,     0,   226,   227,   228,   229,     0,   230,
     231,   232,   233,   234,   235,     0,   236,     0,   238,   239,
     240,   241,   242,   243,   244,   245,     0,   246,     0,   247,
       0,     0,   250,     0,   252,   253,   254,   255,   256,   257,
       0,     0,   258,     0,   260,     0,     0,   262,   263,   264,
       0,     0,   265,   266,   267,   268,   269,   500,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,     0,   291,   292,
     293,   294,   295,     0,   296,   297,     0,   299,     0,   300,
     301,   302,   303,   304,   305,     0,   306,   307,     0,     0,
     308,   309,   310,     0,     0,   311,   312,     0,   314,     0,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,     0,   327,   328,   329,   330,   331,   332,   333,   334,
     335,     0,   336,   337,   338,   339,   340,   341,     0,   342,
     343,   344,   345,   346,   347,   348,   349,     0,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
       0,     0,   362,   363,     0,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
       0,   380,   381,   382,   383,   384,     0,   385,   386,   387,
     388,   389,     0,   391,   392,   393,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     502,   408,   409,   410,     0,   411,   412,     0,   413,     0,
     415,   416,   417,   418,   419,     0,   420,   421,     0,     0,
     422,   423,   424,   425,   426,     0,   427,   428,   429,   430,
     431,   432,   433,   434,     0,     0,   435,   436,   437,   438,
     439,     0,     0,   440,   441,   442,   443,   444,   445,   446,
       0,   447,     0,   449,   450,   451,   452,   453,     0,     0,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,     0,   498,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2565,    94,    95,    96,    97,    98,    99,   100,   101,     0,
     102,   103,   104,     0,     0,     0,     0,     0,     0,     0,
     105,   106,     0,   107,   108,   109,     0,   111,   112,   113,
     114,   115,     0,   117,   118,     0,   119,   120,   121,   122,
       0,   123,     0,     0,   124,   125,   126,   127,   128,     0,
     129,   130,   131,   132,   133,     0,     0,     0,   135,   136,
     137,   138,   139,   140,     0,   142,   143,   144,     0,   145,
     146,   147,   148,   149,   150,     0,     0,   152,   153,   154,
       0,     0,     0,     0,     0,     0,     0,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,     0,   166,     0,
     167,   168,   169,   170,   171,   172,     0,   173,   174,   175,
     176,   177,     0,     0,   178,   179,   180,   181,   182,     0,
     183,   184,   185,     0,   186,   187,   188,     0,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,     0,
     200,     0,   201,   202,   203,   204,     0,   205,     0,   206,
       0,     0,     0,   209,   210,   211,     0,   213,     0,   214,
       0,   215,   216,   217,     0,   218,   219,   220,   221,   222,
     223,   224,     0,   226,   227,   228,   229,     0,   230,   231,
     232,   233,   234,   235,     0,   236,     0,   238,   239,   240,
     241,   242,   243,   244,   245,     0,   246,     0,   247,     0,
       0,   250,     0,   252,   253,   254,   255,   256,   257,     0,
       0,   258,     0,   260,     0,     0,   262,   263,   264,     0,
       0,   265,   266,   267,   268,   269,   500,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,     0,   291,   292,   293,
     294,   295,     0,   296,   297,     0,   299,     0,   300,   301,
     302,   303,   304,   305,     0,   306,   307,     0,     0,   308,
     309,   310,     0,     0,   311,   312,     0,   314,     0,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,   327,   328,   329,   330,   331,   332,   333,   334,   335,
       0,   336,   337,   338,   339,   340,   341,     0,   342,   343,
     344,   345,   346,   347,   348,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,     0,
       0,   362,   363,     0,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,     0,
     380,   381,   382,   383,   384,     0,   385,   386,   387,   388,
     389,     0,   391,   392,   393,   394,     0,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   502,
     408,   409,   410,     0,   411,   412,     0,   413,     0,   415,
     416,   417,   418,   419,     0,   420,   421,     0,     0,   422,
     423,   424,   425,   426,     0,   427,   428,   429,   430,   431,
     432,   433,   434,     0,     0,   435,   436,   437,   438,   439,
       0,     0,   440,   441,   442,   443,   444,   445,   446,     0,
     447,     0,   449,   450,   451,   452,   453,     0,     0,   454,
       0,     0,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,     0,   498,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1662,
      94,    95,    96,    97,    98,    99,   100,   101,     0,   102,
     103,   104,     0,     0,     0,     0,     0,     0,     0,   105,
     106,     0,   107,   108,   109,     0,   111,   112,   113,   114,
     115,     0,   117,   118,     0,   119,   120,   121,   122,     0,
     123,     0,     0,   124,   125,   126,   127,   128,     0,   129,
     130,   131,   132,   133,     0,     0,     0,   135,   136,   137,
     138,   139,   140,     0,   142,   143,   144,     0,   145,   146,
     147,   148,   149,   150,     0,     0,   152,   153,   154,     0,
       0,     0,     0,     0,     0,     0,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,     0,   166,     0,   167,
     168,   169,   170,   171,   172,     0,   173,   174,   175,   176,
     177,     0,     0,   178,   179,   180,   181,   182,     0,   183,
     184,   185,     0,   186,   187,   188,     0,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,     0,   200,
       0,   201,   202,   203,   204,     0,   205,     0,   206,     0,
       0,     0,   209,   210,   211,     0,   213,     0,   214,     0,
     215,   216,   217,     0,   218,   219,   220,   221,   222,   223,
     224,     0,   226,   227,   228,   229,     0,   230,   231,   232,
     233,   234,   235,     0,   236,     0,   238,   239,   240,   241,
     242,   243,   244,   245,     0,   246,     0,   247,     0,     0,
     250,     0,   252,   253,   254,   255,   256,   257,     0,     0,
     258,     0,   260,     0,     0,   262,   263,   264,     0,     0,
     265,   266,   267,   268,   269,   500,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,     0,   291,   292,   293,   294,
     295,     0,   296,   297,     0,   299,     0,   300,   301,   302,
     303,   304,   305,     0,   306,   307,     0,     0,   308,   309,
     310,     0,     0,   311,   312,     0,   314,     0,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,     0,
     327,   328,   329,   330,   331,   332,   333,   334,   335,     0,
     336,   337,   338,   339,   340,   341,     0,   342,   343,   344,
     345,   346,   347,   348,   349,     0,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,     0,     0,
     362,   363,     0,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,     0,   380,
     381,   382,   383,   384,     0,   385,   386,   387,   388,   389,
       0,   391,   392,   393,   394,     0,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   502,   408,
     409,   410,     0,   411,   412,     0,   413,     0,   415,   416,
     417,   418,   419,     0,   420,   421,     0,     0,   422,   423,
     424,   425,   426,     0,   427,   428,   429,   430,   431,   432,
     433,   434,     0,     0,   435,   436,   437,   438,   439,     0,
       0,   440,   441,   442,   443,   444,   445,   446,     0,   447,
       0,   449,   450,   451,   452,   453,     0,     0,   454,     0,
       0,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,     0,   498,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1766,    94,
      95,    96,    97,    98,    99,   100,   101,     0,   102,   103,
     104,     0,     0,     0,     0,     0,     0,     0,   105,   106,
       0,   107,   108,   109,     0,   111,   112,   113,   114,   115,
       0,   117,   118,     0,   119,   120,   121,   122,     0,   123,
       0,     0,   124,   125,   126,   127,   128,     0,   129,   130,
     131,   132,   133,     0,     0,     0,   135,   136,   137,   138,
     139,   140,     0,   142,   143,   144,     0,   145,   146,   147,
     148,   149,   150,     0,     0,   152,   153,   154,     0,     0,
       0,     0,     0,     0,     0,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,     0,   166,     0,   167,   168,
     169,   170,   171,   172,     0,   173,   174,   175,   176,   177,
       0,     0,   178,   179,   180,   181,   182,     0,   183,   184,
     185,     0,   186,   187,   188,     0,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,     0,   200,     0,
     201,   202,   203,   204,     0,   205,     0,   206,     0,     0,
       0,   209,   210,   211,     0,   213,     0,   214,     0,   215,
     216,   217,     0,   218,   219,   220,   221,   222,   223,   224,
       0,   226,   227,   228,   229,     0,   230,   231,   232,   233,
     234,   235,     0,   236,     0,   238,   239,   240,   241,   242,
     243,   244,   245,     0,   246,     0,   247,     0,     0,   250,
       0,   252,   253,   254,   255,   256,   257,     0,     0,   258,
       0,   260,     0,     0,   262,   263,   264,     0,     0,   265,
     266,   267,   268,   269,   500,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,     0,   291,   292,   293,   294,   295,
       0,   296,   297,     0,   299,     0,   300,   301,   302,   303,
     304,   305,     0,   306,   307,     0,     0,   308,   309,   310,
       0,     0,   311,   312,     0,   314,     0,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,     0,   327,
     328,   329,   330,   331,   332,   333,   334,   335,     0,   336,
     337,   338,   339,   340,   341,     0,   342,   343,   344,   345,
     346,   347,   348,   349,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,     0,     0,   362,
     363,     0,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,     0,   380,   381,
     382,   383,   384,     0,   385,   386,   387,   388,   389,     0,
     391,   392,   393,   394,     0,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   502,   408,   409,
     410,     0,   411,   412,     0,   413,     0,   415,   416,   417,
     418,   419,     0,   420,   421,     0,     0,   422,   423,   424,
     425,   426,     0,   427,   428,   429,   430,   431,   432,   433,
     434,     0,     0,   435,   436,   437,   438,   439,     0,     0,
     440,   441,   442,   443,   444,   445,   446,     0,   447,     0,
     449,   450,   451,   452,   453,     0,     0,   454,     0,     0,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,     0,     0,     0,     0,  2419,  1240,   547,     0,     0,
    1623,   822,     0,     0,     0,     0,     0,  2537,  1624,  1625,
    1626,    94,    95,    96,    97,    98,    99,   100,   101,  1058,
     102,   103,   104,  1059,  1060,  1061,  1062,  1063,  1064,  1065,
     105,   106,  1066,   107,   108,   109,  2420,   111,   112,   113,
       0,   666,  2421,   668,   669,  1067,   119,   120,   121,   122,
    1068,   123,  1069,  1070,   124,   125,   670,   671,   128,  1071,
     129,   130,   131,   132,     0,  1072,  2422,  1073,   135,   136,
     137,   138,   139,   140,  2423,   142,   143,   144,  1074,   145,
     146,   147,   148,   149,   150,  1075,  2424,   152,   153,   154,
    1076,  1077,  1078,  2425,  1079,  1080,  1081,   156,   157,   158,
     159,   160,   161,   162,   676,   677,   165,  1082,   166,  1083,
     167,   168,   169,   170,   171,   172,  1084,   173,   174,   175,
     176,   177,  1085,  1086,   178,   179,   678,   181,   182,  1087,
     183,   184,   185,  1088,   186,   187,   188,  1089,   189,   190,
     191,   192,     0,   194,   195,   196,   197,   198,     0,  1090,
     200,  1091,   201,   202,   679,   204,  1092,   205,  1093,   206,
    2426,  1094,  2427,   209,   210,   211,  2428,   213,  1095,   214,
    1096,     0,     0,   217,  1097,   218,   219,   220,   221,   222,
     223,   224,  2429,   226,   227,   228,   229,  1098,   230,   231,
     232,   233,   234,   235,  1099,   236,  2430,     0,   239,   240,
     241,   242,   243,   686,   687,  1100,   688,  1101,   247,  2431,
    2432,   250,  2433,   252,   253,   254,   255,   256,   257,  1102,
    1103,   258,  2434,   260,  2435,  1104,   262,   263,   264,  1105,
    1106,   265,   266,   267,   268,   269,  2436,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   695,  2437,   697,   292,   293,
     294,  2438,  1107,   296,   297,  2439,   299,  1108,     0,   301,
     699,   303,   304,   305,  1109,   306,   307,  1110,  1111,  2440,
     309,   310,  1112,  1113,   311,     0,  2441,   314,  2442,     0,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
    1114,   327,   328,     0,   330,   331,     0,   333,   334,   335,
    1115,   336,   337,   338,   339,   340,   341,  1116,   342,   343,
     344,   702,   346,   347,   348,   349,  1117,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,  1118,
    1119,   362,   363,  2443,   365,   366,   367,   704,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,  1120,
     380,   381,   382,   383,   384,  1121,   385,  2444,   387,   388,
     389,  2445,   391,   392,   707,   394,  1122,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,  2446,
     408,     0,   410,  1123,   411,   412,  1124,   413,  2447,   415,
     416,   417,   418,   419,  1125,   710,   711,  1126,  1127,   422,
     423,     0,   425,     0,  1128,   427,   428,  2448,   430,   431,
     432,   433,   434,  1129,  1130,   435,   436,   437,   438,   439,
    1131,  1132,   440,   441,   442,   443,   444,     0,   713,  1134,
     447,  2449,   449,   450,   451,   452,   453,  1135,  1136,   454,
    1137,  1138,   455,   456,   457,   458,   459,   460,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   472,
     473,   474,   475,     0,   498,     0,  1627,  1628,  1629,  1623,
    2450,  2451,  1632,  1633,  1634,  1635,     0,  1624,  1625,  1626,
      94,    95,    96,    97,    98,    99,   100,   101,     0,   102,
     103,   104,     0,     0,     0,     0,     0,     0,     0,   105,
     106,     0,   107,   108,   109,     0,   111,   112,   113,   114,
     115,     0,   117,   118,     0,   119,   120,   121,   122,     0,
     123,     0,     0,   124,   125,   126,   127,   128,     0,   129,
     130,   131,   132,   133,     0,     0,     0,   135,   136,   137,
     138,   139,   140,     0,   142,   143,   144,     0,   145,   146,
     147,   148,   149,   150,     0,     0,   152,   153,   154,     0,
       0,     0,     0,     0,     0,     0,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,     0,   166,     0,   167,
     168,   169,   170,   171,   172,     0,   173,   174,   175,   176,
     177,     0,     0,   178,   179,   180,   181,   182,     0,   183,
     184,   185,     0,   186,   187,   188,     0,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,     0,   200,
       0,   201,   202,   203,   204,     0,   205,     0,   206,     0,
       0,     0,   209,   210,   211,     0,   213,     0,   214,     0,
     215,   216,   217,     0,   218,   219,   220,   221,   222,   223,
     224,     0,   226,   227,   228,   229,     0,   230,   231,   232,
     233,   234,   235,     0,   236,     0,   238,   239,   240,   241,
     242,   243,   244,   245,     0,   246,     0,   247,     0,     0,
     250,     0,   252,   253,   254,   255,   256,   257,     0,     0,
     258,     0,   260,     0,     0,   262,   263,   264,     0,     0,
     265,   266,   267,   268,   269,   500,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,     0,   291,   292,   293,   294,
     295,     0,   296,   297,     0,   299,     0,   300,   301,   302,
     303,   304,   305,     0,   306,   307,     0,     0,   308,   309,
     310,     0,     0,   311,   312,     0,   314,     0,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,     0,
     327,   328,   329,   330,   331,   332,   333,   334,   335,     0,
     336,   337,   338,   339,   340,   341,     0,   342,   343,   344,
     345,   346,   347,   348,   349,     0,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,     0,     0,
     362,   363,     0,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,     0,   380,
     381,   382,   383,   384,     0,   385,   386,   387,   388,   389,
       0,   391,   392,   393,   394,     0,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   502,   408,
     409,   410,     0,   411,   412,     0,   413,     0,   415,   416,
     417,   418,   419,     0,   420,   421,     0,     0,   422,   423,
     424,   425,   426,     0,   427,   428,   429,   430,   431,   432,
     433,   434,     0,     0,   435,   436,   437,   438,   439,     0,
       0,   440,   441,   442,   443,   444,   445,   446,     0,   447,
       0,   449,   450,   451,   452,   453,     0,     0,   454,     0,
       0,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,     0,     0,     0,  1627,  1628,  1629,     0,  1630,
    1631,  1632,  1633,  1634,  1635,  1317,     0,     0,  1318,     0,
       0,     0,  1319,  1320,  1321,  1322,     0,     0,     0,     0,
       0,     0,     0,     0,  1317,     0,     0,  1318,     0,     0,
    1323,  1319,  1320,  1321,  1322,     0,     0,     0,  1325,     0,
       0,     0,     0,     0,     0,  1326,     0,     0,     0,  1323,
       0,     0,     0,  1317,     0,     0,  1318,  1325,     0,     0,
    1319,  1320,  1321,  1322,  1326,     0,     0,     0,     0,     0,
    1327,     0,  1317,     0,     0,  1318,     0,     0,  1323,  1319,
    1320,  1321,  1322,     0,     0,     0,  1325,     0,     0,  1327,
       0,     0,     0,  1326,     0,     0,     0,  1323,     0,     0,
       0,     0,     0,     0,     0,  1325,     0,     0,     0,     0,
       0,     0,  1326,     0,     0,     0,     0,     0,  1327,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1317,     0,     0,  1318,     0,  1327,     0,  1319,
    1320,  1321,  1322,     0,     0,     0,     0,     0,     0,     0,
       0,  1317,     0,     0,  1318,     0,     0,  1323,  1319,  1320,
    1321,  1322,     0,     0,     0,  1325,     0,     0,     0,     0,
       0,  1328,  1326,     0,     0,     0,  1323,     0,     0,     0,
       0,     0,     0,     0,  1325,     0,     0,  1329,     0,     0,
    1328,  1326,  1330,     0,     0,     0,     0,  1327,     0,     0,
       0,     0,     0,     0,     0,     0,  1329,     0,     0,     0,
       0,  1330,     0,     0,  1331,  1332,  1327,     0,     0,  1328,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1333,
       0,     0,     0,  1331,  1332,  1329,     0,     0,  1328,     0,
    1330,     0,     0,     0,     0,     0,     0,     0,  1333,     0,
       0,     0,     0,     0,  1329,     0,     0,     0,     0,  1330,
       0,     0,  1331,  1332,     0,     0,     0,  1334,     0,     0,
    1335,     0,     0,     0,     0,     0,     0,  1333,     0,     0,
       0,  1331,  1332,     0,  1336,     0,  1334,  1337,     0,  1335,
       0,     0,     0,     0,     0,     0,  1333,     0,  1328,     0,
       0,     0,     0,  1336,     0,     0,  1337,     0,     0,     0,
       0,     0,     0,     0,  1329,  1334,     0,  1328,  1335,  1330,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1336,  1329,  1334,  1337,     0,  1335,  1330,     0,
       0,  1331,  1332,     0,     0,     0,     0,     0,     0,     0,
       0,  1336,     0,     0,  1337,     0,  1333,     0,     0,     0,
    1331,  1332,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1333,  1338,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1334,  1338,     0,  1335,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1336,     0,  1334,  1337,     0,  1335,     0,     0,     0,
       0,     0,     0,     0,  1338,     0,     0,     0,     0,     0,
    1336,     0,     0,  1337,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1338,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1339,     0,
       0,  1340,  1341,  1342,     0,  1343,  1344,  1345,  1346,  1347,
    1348,     0,     0,     0,     0,  2295,     0,  1339,     0,     0,
    1340,  1341,  1342,  1338,  1343,  1344,  1345,  1346,  1347,  1348,
       0,     0,     0,     0,  2382,     0,     0,     0,     0,     0,
       0,     0,  1338,     0,     0,     0,  1339,     0,     0,  1340,
    1341,  1342,     0,  1343,  1344,  1345,  1346,  1347,  1348,     0,
       0,     0,     0,  2512,     0,  1339,     0,     0,  1340,  1341,
    1342,     0,  1343,  1344,  1345,  1346,  1347,  1348,  1317,     0,
       0,  1318,  2534,     0,     0,  1319,  1320,  1321,  1322,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1323,     0,     0,     0,     0,     0,     0,
       0,  1325,     0,     0,     0,     0,     0,     0,  1326,     0,
       0,     0,     0,     0,     0,  1339,     0,     0,  1340,  1341,
    1342,     0,  1343,  1344,  1345,  1346,  1347,  1348,     0,     0,
       0,     0,  2682,  1327,  1339,     0,     0,  1340,  1341,  1342,
       0,  1343,  1344,  1345,  1346,  1347,  1348,  1317,     0,     0,
    1318,  2905,     0,     0,  1319,  1320,  1321,  1322,     0,     0,
       0,     0,     0,     0,     0,     0,  1317,     0,     0,  1318,
       0,     0,  1323,  1319,  1320,  1321,  1322,     0,     0,     0,
    1325,     0,     0,     0,     0,     0,     0,  1326,     0,     0,
       0,  1323,     0,     0,     0,     0,     0,     0,     0,  1325,
       0,     0,     0,     0,     0,     0,  1326,     0,     0,     0,
       0,     0,  1327,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1327,     0,     0,  1328,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1329,     0,     0,     0,     0,  1330,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1331,  1332,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1333,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1328,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1329,
    1334,     0,  1328,  1335,  1330,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1336,  1329,     0,
    1337,     0,     0,  1330,     0,     0,  1331,  1332,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1333,     0,     0,     0,  1331,  1332,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1333,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1334,
       0,     0,  1335,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1336,     0,  1334,  1337,
       0,  1335,     0,     0,     0,     0,     0,     0,     0,  1338,
       0,     0,     0,     0,     0,  1336,     0,     0,  1337,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1338,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1338,     0,     0,
       0,  1339,     0,     0,  1340,  1341,  1342,     0,  1343,  1344,
    1345,  1346,  1347,  1348,     0,     0,     0,     0,  2917,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1339,     0,     0,  1340,  1341,  1342,     0,  1343,  1344,  1345,
    1346,  1347,  1348,     0,     0,     0,     0,  2993,     0,  1339,
    1057,     0,  1340,  1341,  1342,     0,  1343,  1344,  1345,  1346,
    1347,  1348,     0,     0,  1499,     0,    94,    95,    96,    97,
      98,    99,   100,   101,  1058,   102,   103,   104,  1059,  1060,
    1061,  1062,  1063,  1064,  1065,   105,   106,  1066,   107,   108,
     109,     0,   111,   112,   113,   747,   748,     0,   749,   750,
    1067,   119,   120,   121,   122,  1068,   123,  1069,  1070,   124,
     125,   751,   752,   128,  1071,   129,   130,   131,   132,   753,
    1072,     0,  1073,   135,   136,   137,   138,   139,   140,     0,
     142,   143,   144,  1074,   145,   146,   147,   148,   149,   150,
    1075,     0,   152,   153,   154,  1076,  1077,  1078,     0,  1079,
    1080,  1081,   156,   157,   158,   159,   160,   161,   162,   754,
     755,   165,  1082,   166,  1083,   167,   168,   169,   170,   171,
     172,  1084,   173,   174,   175,   176,   177,  1085,  1086,   178,
     179,   180,   181,   182,  1087,   183,   184,   185,  1088,   186,
     187,   188,  1089,   189,   190,   191,   192,   756,   194,   195,
     196,   197,   198,   757,  1090,   200,  1091,   201,   202,   758,
     204,  1092,   205,  1093,   206,     0,  1094,     0,   209,   210,
     211,     0,   213,  1095,   214,  1096,   759,   760,   217,  1097,
     218,   219,   220,   221,   222,   223,   224,     0,   226,   227,
     228,   229,  1098,   230,   231,   232,   233,   234,   235,  1099,
     236,     0,   761,   239,   240,   241,   242,   243,   762,   763,
    1100,   764,  1101,   247,     0,     0,   250,     0,   252,   253,
     254,   255,   256,   257,  1102,  1103,   258,     0,   260,     0,
    1104,   262,   263,   264,  1105,  1106,   265,   266,   267,   268,
     269,   765,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     766,     0,   767,   292,   293,   294,   768,  1107,   296,   297,
       0,   299,  1108,   769,   301,   770,   303,   304,   305,  1109,
     306,   307,  1110,  1111,   308,   309,   310,  1112,  1113,   311,
     771,     0,   314,     0,   772,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,  1114,   327,   328,   773,   330,
     331,   774,   333,   334,   335,  1115,   336,   337,   338,   339,
     340,   341,  1116,   342,   343,   344,   775,   346,   347,   348,
     349,  1117,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,  1118,  1119,   362,   363,     0,   365,
     366,   367,   776,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,  1120,   380,   381,   382,   383,   384,
    1121,   385,   777,   387,   388,   389,     0,   391,   392,   778,
     394,  1122,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   779,   408,   780,   410,  1123,   411,
     412,  1124,   413,     0,   415,   416,   417,   418,   419,  1125,
     781,   782,  1126,  1127,   422,   423,   783,   425,   784,  1128,
     427,   428,   785,   430,   431,   432,   433,   434,  1129,  1130,
     435,   436,   437,   438,   439,  1131,  1132,   440,   441,   442,
     443,   444,  1133,   787,  1134,   447,     0,   449,   450,   451,
     452,   453,  1135,  1136,   454,  1137,  1138,   455,   456,   457,
     458,   459,   460,   788,   789,   790,   791,   792,   793,   794,
     795,   796,   797,   798,   472,   473,   474,   475,   498,     0,
       0,     0,     0,     0,     0,     0,     0,  1745,     0,     0,
       0,     0,     0,     0,    94,    95,    96,    97,    98,    99,
     100,   101,     0,   102,   103,   104,     0,     0,     0,     0,
       0,     0,     0,   105,   106,     0,   107,   108,   109,     0,
     111,   112,   113,   114,   115,     0,   117,   118,     0,   119,
     120,   121,   122,     0,   123,     0,     0,   124,   125,   126,
     127,   128,     0,   129,   130,   131,   132,   133,     0,     0,
       0,   135,   136,   137,   138,   139,   140,     0,   142,   143,
     144,     0,   145,   146,   147,   148,   149,   150,     0,     0,
     152,   153,   154,     0,     0,     0,     0,     0,     0,     0,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
       0,   166,     0,   167,   168,   169,   170,   171,   172,     0,
     173,   174,   175,   176,   177,     0,     0,   178,   179,   180,
     181,   182,     0,   183,   184,   185,     0,   186,   187,   188,
       0,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,     0,   200,     0,   201,   202,   203,   204,     0,
     205,     0,   206,     0,     0,     0,   209,   210,   211,     0,
     213,     0,   214,     0,   215,   216,   217,     0,   218,   219,
     220,   221,   222,   223,   224,     0,   226,   227,   228,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,     0,
     238,   239,   240,   241,   242,   243,   244,   245,     0,   246,
       0,   247,     0,     0,   250,     0,   252,   253,   254,   255,
     256,   257,     0,     0,   258,     0,   260,     0,     0,   262,
     263,   264,     0,     0,   265,   266,   267,   268,   269,   500,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,     0,
     291,   292,   293,   294,   295,     0,   296,   297,     0,   299,
       0,   300,   301,   302,   303,   304,   305,     0,   306,   307,
       0,     0,   308,   309,   310,     0,     0,   311,   312,     0,
     314,     0,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,     0,   327,   328,   329,   330,   331,   332,
     333,   334,   335,     0,   336,   337,   338,   339,   340,   341,
       0,   342,   343,   344,   345,   346,   347,   348,   349,     0,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,     0,     0,   362,   363,     0,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,     0,   380,   381,   382,   383,   384,     0,   385,
     386,   387,   388,   389,     0,   391,   392,   393,   394,     0,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   502,   408,   409,   410,     0,   411,   412,     0,
     413,     0,   415,   416,   417,   418,   419,     0,   420,   421,
       0,     0,   422,   423,   424,   425,   426,     0,   427,   428,
     429,   430,   431,   432,   433,   434,     0,     0,   435,   436,
     437,   438,   439,     0,     0,   440,   441,   442,   443,   444,
     445,   446,     0,   447,     0,   449,   450,   451,   452,   453,
       0,     0,   454,     0,     0,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   746,  1240,   547,     0,
       0,     0,   822,     0,     0,  2246,     0,     0,     0,     0,
       0,     0,    94,    95,    96,    97,    98,    99,   100,   101,
       0,   102,   103,   104,     0,     0,     0,     0,     0,     0,
       0,   105,   106,     0,   107,   108,   109,     0,   111,   112,
     113,   747,   748,     0,   749,   750,     0,   119,   120,   121,
     122,     0,   123,     0,     0,   124,   125,   751,   752,   128,
       0,   129,   130,   131,   132,   753,     0,     0,     0,   135,
     136,   137,   138,   139,   140,     0,   142,   143,   144,     0,
     145,   146,   147,   148,   149,   150,     0,     0,   152,   153,
     154,     0,     0,     0,     0,     0,     0,     0,   156,   157,
     158,   159,   160,   161,   162,   754,   755,   165,  1375,   166,
       0,   167,   168,   169,   170,   171,   172,     0,   173,   174,
     175,   176,   177,     0,     0,   178,   179,   180,   181,   182,
       0,   183,   184,   185,     0,   186,   187,   188,     0,   189,
     190,   191,   192,   756,   194,   195,   196,   197,   198,   757,
    1241,   200,     0,   201,   202,   758,   204,     0,   205,     0,
     206,     0,     0,     0,   209,   210,   211,     0,   213,     0,
     214,     0,   759,   760,   217,     0,   218,   219,   220,   221,
     222,   223,   224,     0,   226,   227,   228,   229,     0,   230,
     231,   232,   233,   234,   235,     0,   236,     0,   761,   239,
     240,   241,   242,   243,   762,   763,     0,   764,     0,   247,
       0,     0,   250,     0,   252,   253,   254,   255,   256,   257,
       0,     0,   258,     0,   260,     0,     0,   262,   263,   264,
       0,     0,   265,   266,   267,   268,   269,   765,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   766,     0,   767,   292,
     293,   294,   768,     0,   296,   297,     0,   299,     0,   769,
     301,   770,   303,   304,   305,     0,   306,   307,  1242,     0,
     308,   309,   310,     0,     0,   311,   771,     0,   314,     0,
     772,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,     0,   327,   328,   773,   330,   331,   774,   333,   334,
     335,     0,   336,   337,   338,   339,   340,   341,     0,   342,
     343,   344,   775,   346,   347,   348,   349,     0,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
       0,     0,   362,   363,     0,   365,   366,   367,   776,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
       0,   380,   381,   382,   383,   384,     0,   385,   777,   387,
     388,   389,     0,   391,   392,   778,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     779,   408,   780,   410,     0,   411,   412,     0,   413,     0,
     415,   416,   417,   418,   419,     0,   781,   782,     0,     0,
     422,   423,   783,   425,   784,  1243,   427,   428,   785,   430,
     431,   432,   433,   434,     0,     0,   435,   436,   437,   438,
     439,     0,     0,   440,   441,   442,   443,   444,  1133,   787,
       0,   447,     0,   449,   450,   451,   452,   453,     0,     0,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   788,
     789,   790,   791,   792,   793,   794,   795,   796,   797,   798,
     472,   473,   474,   475,   746,  1240,   547,     0,     0,     0,
     822,  1244,  1245,     0,     0,     0,     0,     0,     0,     0,
      94,    95,    96,    97,    98,    99,   100,   101,     0,   102,
     103,   104,     0,     0,     0,     0,     0,     0,     0,   105,
     106,     0,   107,   108,   109,     0,   111,   112,   113,   747,
     748,     0,   749,   750,     0,   119,   120,   121,   122,     0,
     123,     0,     0,   124,   125,   751,   752,   128,     0,   129,
     130,   131,   132,   753,     0,     0,     0,   135,   136,   137,
     138,   139,   140,     0,   142,   143,   144,     0,   145,   146,
     147,   148,   149,   150,     0,     0,   152,   153,   154,     0,
       0,     0,     0,     0,     0,     0,   156,   157,   158,   159,
     160,   161,   162,   754,   755,   165,  1377,   166,     0,   167,
     168,   169,   170,   171,   172,     0,   173,   174,   175,   176,
     177,     0,     0,   178,   179,   180,   181,   182,     0,   183,
     184,   185,     0,   186,   187,   188,     0,   189,   190,   191,
     192,   756,   194,   195,   196,   197,   198,   757,  1241,   200,
       0,   201,   202,   758,   204,     0,   205,     0,   206,     0,
       0,     0,   209,   210,   211,     0,   213,     0,   214,     0,
     759,   760,   217,     0,   218,   219,   220,   221,   222,   223,
     224,     0,   226,   227,   228,   229,     0,   230,   231,   232,
     233,   234,   235,     0,   236,     0,   761,   239,   240,   241,
     242,   243,   762,   763,     0,   764,     0,   247,     0,     0,
     250,     0,   252,   253,   254,   255,   256,   257,     0,     0,
     258,     0,   260,     0,     0,   262,   263,   264,     0,     0,
     265,   266,   267,   268,   269,   765,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   766,     0,   767,   292,   293,   294,
     768,     0,   296,   297,     0,   299,     0,   769,   301,   770,
     303,   304,   305,     0,   306,   307,  1242,     0,   308,   309,
     310,     0,     0,   311,   771,     0,   314,     0,   772,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,     0,
     327,   328,   773,   330,   331,   774,   333,   334,   335,     0,
     336,   337,   338,   339,   340,   341,     0,   342,   343,   344,
     775,   346,   347,   348,   349,     0,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,     0,     0,
     362,   363,     0,   365,   366,   367,   776,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,     0,   380,
     381,   382,   383,   384,     0,   385,   777,   387,   388,   389,
       0,   391,   392,   778,   394,     0,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   779,   408,
     780,   410,     0,   411,   412,     0,   413,     0,   415,   416,
     417,   418,   419,     0,   781,   782,     0,     0,   422,   423,
     783,   425,   784,  1243,   427,   428,   785,   430,   431,   432,
     433,   434,     0,     0,   435,   436,   437,   438,   439,     0,
       0,   440,   441,   442,   443,   444,  1133,   787,     0,   447,
       0,   449,   450,   451,   452,   453,     0,     0,   454,     0,
       0,   455,   456,   457,   458,   459,   460,   788,   789,   790,
     791,   792,   793,   794,   795,   796,   797,   798,   472,   473,
     474,   475,   746,  1240,   547,     0,     0,     0,   822,  1244,
    1245,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,     0,     0,     0,   105,   106,     0,
     107,   108,   109,     0,   111,   112,   113,   747,   748,     0,
     749,   750,     0,   119,   120,   121,   122,     0,   123,     0,
       0,   124,   125,   751,   752,   128,     0,   129,   130,   131,
     132,   753,     0,     0,     0,   135,   136,   137,   138,   139,
     140,     0,   142,   143,   144,     0,   145,   146,   147,   148,
     149,   150,     0,     0,   152,   153,   154,     0,     0,     0,
       0,     0,     0,     0,   156,   157,   158,   159,   160,   161,
     162,   754,   755,   165,     0,   166,     0,   167,   168,   169,
     170,   171,   172,     0,   173,   174,   175,   176,   177,     0,
       0,   178,   179,   180,   181,   182,     0,   183,   184,   185,
       0,   186,   187,   188,     0,   189,   190,   191,   192,   756,
     194,   195,   196,   197,   198,   757,  1241,   200,     0,   201,
     202,   758,   204,     0,   205,     0,   206,     0,     0,     0,
     209,   210,   211,     0,   213,     0,   214,     0,   759,   760,
     217,     0,   218,   219,   220,   221,   222,   223,   224,     0,
     226,   227,   228,   229,     0,   230,   231,   232,   233,   234,
     235,     0,   236,     0,   761,   239,   240,   241,   242,   243,
     762,   763,     0,   764,     0,   247,     0,     0,   250,     0,
     252,   253,   254,   255,   256,   257,     0,     0,   258,     0,
     260,     0,     0,   262,   263,   264,     0,     0,   265,   266,
     267,   268,   269,   765,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   766,     0,   767,   292,   293,   294,   768,     0,
     296,   297,     0,   299,     0,   769,   301,   770,   303,   304,
     305,     0,   306,   307,  1242,     0,   308,   309,   310,     0,
       0,   311,   771,     0,   314,     0,   772,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,     0,   327,   328,
     773,   330,   331,   774,   333,   334,   335,     0,   336,   337,
     338,   339,   340,   341,     0,   342,   343,   344,   775,   346,
     347,   348,   349,     0,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,     0,     0,   362,   363,
       0,   365,   366,   367,   776,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,     0,   380,   381,   382,
     383,   384,     0,   385,   777,   387,   388,   389,     0,   391,
     392,   778,   394,     0,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   779,   408,   780,   410,
       0,   411,   412,     0,   413,     0,   415,   416,   417,   418,
     419,     0,   781,   782,     0,     0,   422,   423,   783,   425,
     784,  1243,   427,   428,   785,   430,   431,   432,   433,   434,
       0,     0,   435,   436,   437,   438,   439,     0,     0,   440,
     441,   442,   443,   444,  1133,   787,     0,   447,     0,   449,
     450,   451,   452,   453,     0,     0,   454,     0,     0,   455,
     456,   457,   458,   459,   460,   788,   789,   790,   791,   792,
     793,   794,   795,   796,   797,   798,   472,   473,   474,   475,
       0,     0,  1317,     0,     0,  1318,     0,  1244,  1245,  1319,
    1320,  1321,  1322,     0,     0,  1317,     0,     0,  1318,     0,
       0,     0,  1319,  1320,  1321,  1322,     0,  1323,     0,     0,
       0,  1772,     0,     0,     0,  1325,     0,     0,     0,     0,
    1323,     0,  1326,     0,     0,     0,     0,     0,  1325,  1317,
       0,     0,  1318,     0,     0,  1326,  1319,  1320,  1321,  1322,
       0,     0,     0,     0,     0,     0,     0,  1327,     0,     0,
       0,     0,     0,     0,  1323,     0,     0,     0,     0,     0,
    1327,     0,  1325,  1317,     0,     0,  1318,     0,     0,  1326,
    1319,  1320,  1321,  1322,     0,     0,  1317,     0,     0,  1318,
       0,     0,     0,  1319,  1320,  1321,  1322,     0,  1323,     0,
       0,  1973,     0,     0,  1327,     0,  1325,     0,  1773,     0,
       0,  1323,     0,  1326,     0,     0,     0,     0,     0,  1325,
       0,     0,     0,     0,     0,     0,  1326,     0,     0,     0,
       0,     0,  1317,     0,     0,  1318,     0,     0,  1327,  1319,
    1320,  1321,  1322,     0,     0,     0,     0,     0,     0,     0,
       0,  1327,     0,     0,     0,     0,     0,  1323,  1328,     0,
    2017,  2011,     0,     0,     0,  1325,  2012,     0,     0,     0,
       0,  1328,  1326,     0,  1329,     0,     0,     0,     0,  1330,
       0,     0,     0,     0,     0,     0,     0,  1329,     0,     0,
       0,     0,  1330,     0,  3007,     0,     0,  1327,     0,     0,
       0,  1331,  1332,     0,     0,  1328,     0,     0,     0,     0,
       0,     0,     0,     0,  1331,  1332,  1333,     0,     0,     0,
       0,  1329,     0,     0,     0,     0,  1330,     0,     0,  1333,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1328,
       0,     0,     0,     0,     0,     0,     0,     0,  1331,  1332,
       0,     0,  1328,     0,  1334,  1329,     0,  1335,     0,     0,
    1330,     0,     0,  1333,     0,     0,     0,  1334,  1329,     0,
    1335,  1336,     0,  1330,  1337,     0,     0,     0,     0,     0,
       0,     0,  1331,  1332,  1336,     0,     0,  1337,     0,     0,
       0,     0,     0,     0,     0,  1331,  1332,  1333,  1328,     0,
       0,  1334,     0,     0,  1335,     0,     0,     0,     0,     0,
    1333,     0,     0,     0,  1329,     0,     0,     0,  1336,  1330,
       0,  1337,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1334,     0,     0,  1335,     0,
       0,  1331,  1332,     0,  3008,     0,     0,     0,  1334,     0,
       0,  1335,  1336,     0,     0,  1337,  1333,     0,     0,     0,
       0,     0,     0,  1338,     0,  1336,     0,     0,  1337,     0,
       0,     0,     0,     0,     0,     0,  1338,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1985,     0,     0,     0,
       0,     0,     0,     0,  1334,     0,     0,  1335,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1338,  1336,     0,     0,  1337,     0,     0,     0,     0,     0,
       0,     0,     0,  1777,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1338,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1338,     0,     0,
       0,     0,     0,     0,     0,  1339,     0,     0,  1340,  1341,
    1342,     0,  1343,  1344,  1345,  1346,  1347,  1348,  1339,     0,
       0,  1340,  1341,  1342,     0,  1343,  1344,  1345,  1346,  1347,
    1348,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1338,     0,     0,     0,     0,     0,     0,
       0,     0,  1339,     0,     0,  1340,  1341,  1342,     0,  1343,
    1344,  1345,  1346,  1347,  1348,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1339,     0,     0,  1340,
    1341,  1342,     0,  1343,  1344,  1345,  1346,  1347,  1348,  1339,
       0,     0,  1340,  1341,  1342,     0,  1343,  1344,  1345,  1346,
    1347,  1348,     0,     0,     0,     0,     0,     0,  1317,     0,
       0,  1318,     0,     0,     0,  1319,  1320,  1321,  1322,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1323,     0,  1339,     0,     0,  1340,  1341,
    1342,  1325,  1343,  1344,  1345,  1346,  1347,  1348,  1326,     0,
       0,     0,     0,  1317,     0,     0,  1318,     0,     0,     0,
    1319,  1320,  1321,  1322,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1327,     0,     0,     0,     0,  1323,     0,
       0,  2024,     0,     0,     0,     0,  1325,     0,     0,     0,
       0,     0,  1317,  1326,     0,  1318,     0,     0,     0,  1319,
    1320,  1321,  1322,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1323,  1327,     0,
       0,     0,     0,     0,     0,  1325,     0,  1317,     0,     0,
    1318,     0,  1326,     0,  1319,  1320,  1321,  1322,     0,     0,
    1317,     0,     0,  1318,     0,     0,     0,  1319,  1320,  1321,
    1322,     0,  1323,     0,     0,  2294,     0,  1327,     0,     0,
    1325,     0,     0,     0,     0,  1323,     0,  1326,     0,  2022,
       0,     0,     0,  1325,  1328,     0,  1317,     0,     0,  1318,
    1326,     0,     0,  1319,  1320,  1321,  1322,     0,     0,     0,
    1329,     0,  1327,     0,     0,  1330,     0,     0,     0,     0,
       0,  1323,     0,     0,     0,  1327,     0,     0,     0,  1325,
       0,     0,     0,     0,     0,     0,  1326,  1331,  1332,  1328,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1333,     0,     0,  1329,     0,     0,     0,     0,
    1330,  1327,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1328,     0,
       0,     0,  1331,  1332,     0,     0,     0,     0,     0,     0,
    1334,     0,     0,  1335,  1329,     0,     0,  1333,     0,  1330,
       0,     0,     0,     0,     0,     0,     0,  1336,     0,     0,
    1337,     0,     0,  1328,     0,     0,     0,     0,     0,     0,
       0,  1331,  1332,     0,     0,     0,  1328,     0,     0,  1329,
       0,     0,     0,     0,  1330,  1334,  1333,     0,  1335,     0,
       0,     0,  1329,     0,     0,     0,     0,  1330,     0,     0,
       0,     0,  1336,     0,     0,  1337,  1331,  1332,     0,     0,
       0,     0,  1328,     0,     0,     0,     0,     0,     0,  1331,
    1332,  1333,     0,     0,  1334,     0,     0,  1335,  1329,     0,
       0,     0,     0,  1330,  1333,     0,     0,     0,     0,     0,
       0,  1336,     0,     0,  1337,     0,     0,     0,     0,  1338,
       0,     0,     0,     0,     0,  1331,  1332,     0,     0,  1334,
       0,     0,  1335,     0,     0,     0,     0,     0,     0,     0,
    1333,     0,  1334,     0,     0,  1335,  1336,     0,     0,  1337,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1336,
       0,     0,  1337,     0,  1338,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1334,     0,
       0,  1335,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1336,     0,     0,  1337,     0,
       0,     0,     0,  1338,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1339,     0,     0,  1340,  1341,  1342,     0,  1343,  1344,
    1345,  1346,  1347,  1348,     0,     0,  2250,     0,  1338,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1338,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1339,     0,     0,  1340,
    1341,  1342,     0,  1343,  1344,  1345,  1346,  1347,  1348,     0,
       0,     0,     0,     0,     0,     0,     0,  1338,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1339,     0,     0,  1340,  1341,
    1342,     0,  1343,  1344,  1345,  1346,  1347,  1348,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1339,     0,     0,  1340,  1341,  1342,     0,  1343,  1344,  1345,
    1346,  1347,  1348,  1339,     0,     0,  1340,  1341,  1342,     0,
    1343,  1344,  1345,  1346,  1347,  1348,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1057,     0,  1682,  1339,
       0,     0,  1340,  1341,  1342,     0,  1343,  1344,  1345,  1346,
    1792,  1348,    94,    95,    96,    97,    98,    99,   100,   101,
    1058,   102,   103,   104,  1059,  1060,  1061,  1062,  1063,  1064,
    1065,   105,   106,  1066,   107,   108,   109,     0,   111,   112,
     113,   747,   748,     0,   749,   750,  1067,   119,   120,   121,
     122,  1068,   123,  1069,  1070,   124,   125,   751,   752,   128,
    1071,   129,   130,   131,   132,   753,  1072,     0,  1073,   135,
     136,   137,   138,   139,   140,     0,   142,   143,   144,  1074,
     145,   146,   147,   148,   149,   150,  1075,     0,   152,   153,
     154,  1076,  1077,  1078,     0,  1079,  1080,  1081,   156,   157,
     158,   159,   160,   161,   162,   754,   755,   165,  1082,   166,
    1083,   167,   168,   169,   170,   171,   172,  1084,   173,   174,
     175,   176,   177,  1085,  1086,   178,   179,   180,   181,   182,
    1087,   183,   184,   185,  1088,   186,   187,   188,  1089,   189,
     190,   191,   192,   756,   194,   195,   196,   197,   198,   757,
    1090,   200,  1091,   201,   202,   758,   204,  1092,   205,  1093,
     206,     0,  1094,     0,   209,   210,   211,     0,   213,  1095,
     214,  1096,   759,   760,   217,  1097,   218,   219,   220,   221,
     222,   223,   224,     0,   226,   227,   228,   229,  1098,   230,
     231,   232,   233,   234,   235,  1099,   236,     0,   761,   239,
     240,   241,   242,   243,   762,   763,  1100,   764,  1101,   247,
       0,     0,   250,     0,   252,   253,   254,   255,   256,   257,
    1102,  1103,   258,     0,   260,     0,  1104,   262,   263,   264,
    1105,  1106,   265,   266,   267,   268,   269,   765,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   766,     0,   767,   292,
     293,   294,   768,  1107,   296,   297,     0,   299,  1108,   769,
     301,   770,   303,   304,   305,  1109,   306,   307,  1110,  1111,
     308,   309,   310,  1112,  1113,   311,   771,     0,   314,     0,
     772,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,  1114,   327,   328,   773,   330,   331,   774,   333,   334,
     335,  1115,   336,   337,   338,   339,   340,   341,  1116,   342,
     343,   344,   775,   346,   347,   348,   349,  1117,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
    1118,  1119,   362,   363,     0,   365,   366,   367,   776,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
    1120,   380,   381,   382,   383,   384,  1121,   385,   777,   387,
     388,   389,     0,   391,   392,   778,   394,  1122,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     779,   408,   780,   410,  1123,   411,   412,  1124,   413,     0,
     415,   416,   417,   418,   419,  1125,   781,   782,  1126,  1127,
     422,   423,   783,   425,   784,  1128,   427,   428,   785,   430,
     431,   432,   433,   434,  1129,  1130,   435,   436,   437,   438,
     439,  1131,  1132,   440,   441,   442,   443,   444,  1133,   787,
    1134,   447,     0,   449,   450,   451,   452,   453,  1135,  1136,
     454,  1137,  1138,   455,   456,   457,   458,   459,   460,   788,
     789,   790,   791,   792,   793,   794,   795,   796,   797,   798,
     472,   473,   474,   475,  1057,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      94,    95,    96,    97,    98,    99,   100,   101,  1058,   102,
     103,   104,  1059,  1060,  1061,  1062,  1063,  1064,  1065,   105,
     106,  1066,   107,   108,   109,     0,   111,   112,   113,   747,
     748,     0,   749,   750,  1067,   119,   120,   121,   122,  1068,
     123,  1069,  1070,   124,   125,   751,   752,   128,  1071,   129,
     130,   131,   132,   753,  1072,     0,  1073,   135,   136,   137,
     138,   139,   140,     0,   142,   143,   144,  1074,   145,   146,
     147,   148,   149,   150,  1075,     0,   152,   153,   154,  1076,
    1077,  1078,     0,  1079,  1080,  1081,   156,   157,   158,   159,
     160,   161,   162,   754,   755,   165,  1082,   166,  1083,   167,
     168,   169,   170,   171,   172,  1084,   173,   174,   175,   176,
     177,  1085,  1086,   178,   179,   180,   181,   182,  1087,   183,
     184,   185,  1088,   186,   187,   188,  1089,   189,   190,   191,
     192,   756,   194,   195,   196,   197,   198,   757,  1090,   200,
    1091,   201,   202,   758,   204,  1092,   205,  1093,   206,     0,
    1094,     0,   209,   210,   211,     0,   213,  1095,   214,  1096,
     759,   760,   217,  1097,   218,   219,   220,   221,   222,   223,
     224,     0,   226,   227,   228,   229,  1098,   230,   231,   232,
     233,   234,   235,  1099,   236,     0,   761,   239,   240,   241,
     242,   243,   762,   763,  1100,   764,  1101,   247,     0,     0,
     250,     0,   252,   253,   254,   255,   256,   257,  1102,  1103,
     258,     0,   260,     0,  1104,   262,   263,   264,  1105,  1106,
     265,   266,   267,   268,   269,   765,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   766,     0,   767,   292,   293,   294,
     768,  1107,   296,   297,     0,   299,  1108,   769,   301,   770,
     303,   304,   305,  1109,   306,   307,  1110,  1111,   308,   309,
     310,  1112,  1113,   311,   771,     0,   314,     0,   772,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,  1114,
     327,   328,   773,   330,   331,   774,   333,   334,   335,  1115,
     336,   337,   338,   339,   340,   341,  1116,   342,   343,   344,
     775,   346,   347,   348,   349,  1117,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,  1118,  1119,
     362,   363,     0,   365,   366,   367,   776,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,  1120,   380,
     381,   382,   383,   384,  1121,   385,   777,   387,   388,   389,
       0,   391,   392,   778,   394,  1122,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   779,   408,
     780,   410,  1123,   411,   412,  1124,   413,     0,   415,   416,
     417,   418,   419,  1125,   781,   782,  1126,  1127,   422,   423,
     783,   425,   784,  1128,   427,   428,   785,   430,   431,   432,
     433,   434,  1129,  1130,   435,   436,   437,   438,   439,  1131,
    1132,   440,   441,   442,   443,   444,  1133,   787,  1134,   447,
       0,   449,   450,   451,   452,   453,  1135,  1136,   454,  1137,
    1138,   455,   456,   457,   458,   459,   460,   788,   789,   790,
     791,   792,   793,   794,   795,   796,   797,   798,   472,   473,
     474,   475,  1057,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,  1827,    99,   100,   101,  1058,   102,   103,   104,
    1059,  1060,  1061,  1062,  1063,  1064,  1065,   105,   106,  1066,
     107,   108,   109,     0,   111,   112,   113,   747,   748,     0,
     749,   750,  1067,   119,   120,   121,   122,  1068,   123,  1069,
    1070,   124,   125,   751,   752,   128,  1071,   129,   130,   131,
     132,   753,  1072,     0,  1073,   135,   136,   137,   138,   139,
     140,     0,   142,   143,   144,  1074,   145,   146,   147,   148,
     149,   150,  1075,     0,   152,   153,   154,  1076,  1077,  1078,
       0,  1079,  1080,  1081,   156,   157,   158,   159,   160,   161,
     162,   754,   755,   165,  1082,   166,  1083,   167,   168,   169,
     170,   171,   172,  1084,   173,   174,   175,   176,   177,  1085,
    1086,   178,   179,   180,  1828,   182,  1087,   183,   184,   185,
    1088,   186,   187,   188,  1089,   189,   190,   191,   192,   756,
     194,   195,   196,   197,   198,   757,  1090,   200,  1091,   201,
     202,   758,   204,  1092,   205,  1093,   206,     0,  1094,     0,
     209,   210,   211,     0,   213,  1095,   214,  1096,   759,   760,
     217,  1097,   218,   219,   220,   221,   222,   223,   224,     0,
     226,   227,   228,   229,  1098,   230,   231,   232,   233,   234,
     235,  1099,   236,     0,   761,   239,   240,   241,   242,   243,
     762,   763,  1100,   764,  1101,   247,     0,     0,   250,     0,
     252,   253,   254,   255,   256,   257,  1102,  1103,   258,     0,
     260,     0,  1104,   262,   263,   264,  1105,  1106,   265,   266,
     267,   268,   269,   765,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   766,     0,   767,   292,   293,   294,   768,  1107,
     296,   297,     0,   299,  1108,   769,   301,   770,   303,   304,
     305,  1109,   306,   307,  1110,  1111,   308,   309,   310,  1112,
    1113,   311,   771,     0,   314,     0,   772,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,  1114,   327,   328,
     773,   330,   331,   774,   333,   334,   335,  1115,   336,   337,
     338,   339,   340,   341,  1116,   342,   343,   344,   775,   346,
     347,   348,   349,  1117,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,  1118,  1119,   362,   363,
       0,   365,   366,   367,   776,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,  1120,   380,   381,   382,
     383,   384,  1121,  1829,   777,   387,   388,   389,     0,   391,
     392,   778,   394,  1122,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   779,   408,   780,   410,
    1123,   411,   412,  1124,   413,     0,   415,   416,   417,   418,
     419,  1125,   781,   782,  1126,  1127,   422,   423,   783,   425,
     784,  1128,   427,   428,   785,   430,   431,   432,   433,   434,
    1129,  1130,   435,   436,   437,   438,   439,  1131,  1132,   440,
     441,   442,   443,   444,  1133,   787,  1134,   447,     0,   449,
     450,   451,   452,   453,  1135,  1136,   454,  1137,  1138,   455,
     456,   457,   458,   459,   460,   788,   789,   790,   791,   792,
     793,   794,   795,   796,   797,   798,   472,   473,   474,   475,
      93,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    94,    95,    96,    97,
      98,    99,   100,   101,     0,   102,   103,   104,     0,     0,
       0,     0,     0,     0,     0,   105,   106,     0,   107,   108,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   118,
       0,   119,   120,   121,   122,     0,   123,     0,   829,   124,
     125,   126,   127,   128,     0,   129,   130,   131,   132,   832,
       0,   833,     0,   135,   136,   137,   138,   139,   140,   141,
     142,   143,   144,     0,   145,   146,   147,   148,   149,   150,
       0,   151,   152,   153,   154,   834,   835,   836,   837,   838,
     839,   840,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,     0,   166,     0,   167,   168,   169,   170,   171,
     172,     0,   173,   174,   175,   176,   177,     0,     0,   178,
     179,   180,   181,   182,     0,   183,   184,   185,     0,   186,
     187,   188,     0,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   845,     0,   200,     0,   201,   202,   203,
     204,     0,   205,     0,   206,   207,     0,   208,   209,   210,
     211,   212,   213,     0,   214,     0,   215,   216,   217,     0,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,     0,   230,   231,   232,   233,   234,   235,     0,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
       0,   246,     0,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,     0,     0,   258,   259,   260,   261,
       0,   262,   263,   264,   853,   854,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,     0,   296,   297,
     298,   299,     0,   859,   301,   302,   303,   304,   305,     0,
     306,   307,     0,     0,   308,   309,   310,     0,     0,   311,
     312,   313,   314,   315,   862,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,     0,   327,   328,   863,   330,
     331,   332,   333,   334,   335,     0,   336,   337,   338,   339,
     340,   341,     0,   342,   343,   344,   345,   346,   347,   348,
     349,     0,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,     0,     0,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,     0,   380,   381,   382,   383,   384,
     866,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,     0,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   868,   410,     0,   411,
     412,     0,   413,   414,   415,   416,   417,   418,   419,     0,
     420,   421,     0,     0,   422,   423,   871,   425,   872,     0,
     427,   428,   874,   430,   431,   432,   433,   434,     0,     0,
     435,   436,   437,   438,   439,   875,     0,   440,   441,   442,
     443,   444,   445,   446,     0,   447,   448,   449,   450,   451,
     452,   453,     0,     0,   454,     0,     0,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,    93,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    94,    95,    96,    97,    98,    99,
     100,   101,     0,   102,   103,   104,     0,     0,     0,     0,
       0,     0,     0,   105,   106,     0,   107,   108,   109,   110,
     111,   112,   113,   114,   115,   116,   117,   118,     0,   119,
     120,   121,   122,     0,   123,     0,     0,   124,   125,   126,
     127,   128,     0,   129,   130,   131,   132,   133,     0,   134,
       0,   135,   136,   137,   138,   139,   140,   141,   142,   143,
     144,     0,   145,   146,   147,   148,   149,   150,     0,   151,
     152,   153,   154,     0,     0,     0,   155,     0,     0,     0,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
       0,   166,     0,   167,   168,   169,   170,   171,   172,     0,
     173,   174,   175,   176,   177,     0,     0,   178,   179,   180,
     181,   182,     0,   183,   184,   185,     0,   186,   187,   188,
       0,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,     0,   200,     0,   201,   202,   203,   204,     0,
     205,     0,   206,   207,     0,   208,   209,   210,   211,   212,
     213,     0,   214,     0,   215,   216,   217,     0,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,     0,   246,
       0,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,     0,     0,   258,   259,   260,   261,     0,   262,
     263,   264,     0,     0,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,     0,   296,   297,   298,   299,
       0,   300,   301,   302,   303,   304,   305,     0,   306,   307,
       0,     0,   308,   309,   310,     0,     0,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,     0,   327,   328,   329,   330,   331,   332,
     333,   334,   335,     0,   336,   337,   338,   339,   340,   341,
       0,   342,   343,   344,   345,   346,   347,   348,   349,     0,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,     0,     0,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,     0,   380,   381,   382,   383,   384,     0,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,     0,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,     0,   411,   412,     0,
     413,   414,   415,   416,   417,   418,   419,     0,   420,   421,
       0,     0,   422,   423,   424,   425,   426,     0,   427,   428,
     429,   430,   431,   432,   433,   434,     0,     0,   435,   436,
     437,   438,   439,     0,     0,   440,   441,   442,   443,   444,
     445,   446,     0,   447,   448,   449,   450,   451,   452,   453,
       0,     0,   454,     0,     0,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   498,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    94,    95,    96,    97,    98,    99,   100,   101,
       0,   102,   103,   104,     0,     0,     0,     0,     0,     0,
       0,   105,   106,     0,   107,   108,   109,     0,   111,   112,
     113,   114,   115,     0,   117,   118,     0,   119,   120,   121,
     122,     0,   123,     0,     0,   124,   125,   126,   127,   128,
    1437,   129,   130,   131,   132,   133,     0,     0,  1438,   135,
     136,   137,   138,   139,   140,     0,   142,   143,   144,  1439,
     145,   146,   147,   148,   149,   150,     0,     0,   152,   153,
     154,     0,     0,     0,     0,     0,     0,     0,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,     0,   166,
       0,   167,   168,   169,   170,   171,   172,     0,   173,   174,
     175,   176,   177,     0,     0,   178,   179,   180,   181,   182,
       0,   183,   184,   185,     0,   186,   187,   188,     0,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
       0,   200,     0,   201,   202,   203,   204,     0,   205,  1440,
     206,     0,     0,     0,   209,   210,   211,     0,   213,     0,
     214,     0,   215,   216,   217,     0,   218,   219,   220,   221,
     222,  1441,   224,     0,   226,   227,   228,   229,     0,   230,
     231,   232,   233,   234,   235,     0,   236,     0,   238,   239,
     240,   241,   242,   243,   244,   245,     0,   246,     0,   247,
       0,     0,   250,     0,   252,   253,   254,   255,   256,   257,
       0,     0,   258,     0,   260,     0,     0,   262,   263,   264,
       0,     0,   265,   266,   267,   268,   269,   500,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,     0,   291,   292,
     293,   294,   295,     0,   296,   297,     0,   299,     0,   300,
     301,   302,   303,   304,   305,     0,   306,   307,     0,     0,
     308,   309,   310,     0,     0,   311,   312,     0,   314,     0,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,     0,   327,   328,   329,   330,   331,   332,   333,   334,
     335,  1442,   336,   337,   338,   339,   340,   341,     0,   342,
     343,   344,   345,   346,   347,   348,   349,     0,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
       0,     0,   362,   363,     0,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
       0,   380,   381,   382,   383,   384,     0,   385,   386,   387,
     388,   389,     0,   391,   392,   393,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     502,   408,   409,   410,     0,   411,   412,     0,   413,     0,
     415,   416,   417,   418,   419,     0,   420,   421,     0,     0,
     422,   423,   424,   425,   426,     0,   427,   428,   429,   430,
     431,   432,   433,   434,     0,  1443,   435,   436,   437,   438,
     439,     0,     0,   440,   441,   442,   443,   444,   445,   446,
       0,   447,     0,   449,   450,   451,   452,   453,     0,     0,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   498,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      94,    95,    96,    97,    98,    99,   100,   101,     0,   102,
     103,   104,     0,     0,     0,     0,     0,     0,     0,   105,
     106,     0,   107,   108,   109,     0,   111,   112,   113,   114,
     115,     0,   117,   118,     0,   119,   120,   121,   122,     0,
     123,     0,     0,   124,   125,   126,   127,   128,  1437,   129,
     130,   131,   132,   133,     0,     0,     0,   135,   136,   137,
     138,   139,   140,     0,   142,   143,   144,  1439,   145,   146,
     147,   148,   149,   150,     0,     0,   152,   153,   154,     0,
       0,     0,     0,     0,     0,     0,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,     0,   166,     0,   167,
     168,   169,   170,   171,   172,     0,   173,   174,   175,   176,
     177,     0,     0,   178,   179,   180,   181,   182,     0,   183,
     184,   185,     0,   186,   187,   188,     0,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,     0,   200,
       0,   201,   202,   203,   204,     0,   205,  1440,   206,     0,
       0,     0,   209,   210,   211,     0,   213,     0,   214,     0,
     215,   216,   217,     0,   218,   219,   220,   221,   222,   223,
     224,     0,   226,   227,   228,   229,     0,   230,   231,   232,
     233,   234,   235,     0,   236,     0,   238,   239,   240,   241,
     242,   243,   244,   245,     0,   246,     0,   247,     0,     0,
     250,     0,   252,   253,   254,   255,   256,   257,     0,     0,
     258,     0,   260,  1897,     0,   262,   263,   264,     0,     0,
     265,   266,   267,   268,   269,   500,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,     0,   291,   292,   293,   294,
     295,     0,   296,   297,     0,   299,     0,   300,   301,   302,
     303,   304,   305,     0,   306,   307,     0,     0,   308,   309,
     310,     0,     0,   311,   312,     0,   314,     0,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,     0,
     327,   328,   329,   330,   331,   332,   333,   334,   335,  1442,
     336,   337,   338,   339,   340,   341,     0,   342,   343,   344,
     345,   346,   347,   348,   349,     0,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,     0,     0,
     362,   363,     0,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,     0,   380,
     381,   382,   383,   384,     0,   385,   386,   387,   388,   389,
       0,   391,   392,   393,   394,     0,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   502,   408,
     409,   410,     0,   411,   412,     0,   413,     0,   415,   416,
     417,   418,   419,     0,   420,   421,     0,     0,   422,   423,
     424,   425,   426,     0,   427,   428,   429,   430,   431,   432,
     433,   434,     0,  1443,   435,   436,   437,   438,   439,     0,
       0,   440,   441,   442,   443,   444,   445,   446,     0,   447,
       0,   449,   450,   451,   452,   453,     0,     0,   454,     0,
       0,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   746,     0,   547,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,     0,     0,     0,   105,   106,     0,
     107,   108,   109,     0,   111,   112,   113,   747,   748,     0,
     749,   750,     0,   119,   120,   121,   122,     0,   123,     0,
       0,   124,   125,   751,   752,   128,     0,   129,   130,   131,
     132,   753,     0,     0,     0,   135,   136,   137,   138,   139,
     140,     0,   142,   143,   144,     0,   145,   146,   147,   148,
     149,   150,     0,     0,   152,   153,   154,     0,     0,     0,
       0,     0,     0,     0,   156,   157,   158,   159,   160,   161,
     162,   754,   755,   165,     0,   166,     0,   167,   168,   169,
     170,   171,   172,     0,   173,   174,   175,   176,   177,     0,
       0,   178,   179,   180,   181,   182,     0,   183,   184,   185,
       0,   186,   187,   188,     0,   189,   190,   191,   192,   756,
     194,   195,   196,   197,   198,   757,  1241,   200,     0,   201,
     202,   758,   204,     0,   205,     0,   206,     0,     0,     0,
     209,   210,   211,     0,   213,     0,   214,     0,   759,   760,
     217,     0,   218,   219,   220,   221,   222,   223,   224,     0,
     226,   227,   228,   229,     0,   230,   231,   232,   233,   234,
     235,     0,   236,     0,   761,   239,   240,   241,   242,   243,
     762,   763,     0,   764,     0,   247,     0,     0,   250,     0,
     252,   253,   254,   255,   256,   257,     0,     0,   258,     0,
     260,     0,     0,   262,   263,   264,     0,     0,   265,   266,
     267,   268,   269,   765,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   766,     0,   767,   292,   293,   294,   768,     0,
     296,   297,     0,   299,     0,   769,   301,   770,   303,   304,
     305,     0,   306,   307,  1242,     0,   308,   309,   310,     0,
       0,   311,   771,     0,   314,     0,   772,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,     0,   327,   328,
     773,   330,   331,   774,   333,   334,   335,     0,   336,   337,
     338,   339,   340,   341,     0,   342,   343,   344,   775,   346,
     347,   348,   349,     0,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,     0,     0,   362,   363,
       0,   365,   366,   367,   776,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,     0,   380,   381,   382,
     383,   384,     0,   385,   777,   387,   388,   389,     0,   391,
     392,   778,   394,     0,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   779,   408,   780,   410,
       0,   411,   412,     0,   413,     0,   415,   416,   417,   418,
     419,     0,   781,   782,     0,     0,   422,   423,   783,   425,
     784,  1243,   427,   428,   785,   430,   431,   432,   433,   434,
       0,     0,   435,   436,   437,   438,   439,     0,     0,   440,
     441,   442,   443,   444,  1133,   787,     0,   447,     0,   449,
     450,   451,   452,   453,     0,     0,   454,     0,     0,   455,
     456,   457,   458,   459,   460,   788,   789,   790,   791,   792,
     793,   794,   795,   796,   797,   798,   472,   473,   474,   475,
     498,     0,   579,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    94,    95,    96,    97,
      98,    99,   100,   101,     0,   102,   103,   104,     3,     4,
       0,     0,     0,     0,     0,   105,   106,     0,   107,   108,
     109,     0,   111,   112,   113,   114,   115,     0,   117,   118,
       0,   119,   120,   121,   122,     0,   123,     0,     0,   124,
     125,   126,   127,   128,     0,   129,   130,   131,   132,   133,
       0,     0,     0,   135,   136,   137,   138,   139,   140,     0,
     142,   143,   144,     0,   145,   146,   147,   148,   149,   150,
       0,     0,   152,   153,   154,     0,     0,     0,     0,     0,
       0,     0,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,     0,   166,     0,   167,   168,   169,   170,   171,
     172,     0,   173,   174,   175,   176,   177,     0,     0,   178,
     179,   180,   181,   182,     0,   183,   184,   185,     0,   186,
     187,   188,     0,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,     0,   200,     0,   201,   202,   203,
     204,     0,   205,     0,   206,     0,     0,     0,   209,   210,
     211,     0,   213,     0,   214,     0,   215,   216,   217,     0,
     218,   219,   220,   221,   222,   223,   224,     0,   226,   227,
     228,   229,     0,   230,   231,   232,   233,   234,   235,     0,
     236,     0,   238,   239,   240,   241,   242,   243,   244,   245,
       0,   246,     0,   247,     0,     0,   250,     0,   252,   253,
     254,   255,   256,   257,     0,     0,   258,     0,   260,     0,
       0,   262,   263,   264,     0,     0,   265,   266,   267,   268,
     269,   500,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,     0,   291,   292,   293,   294,   295,     0,   296,   297,
       0,   299,     0,   300,   301,   302,   303,   304,   305,     0,
     306,   307,     0,     0,   308,   309,   310,     0,     0,   311,
     312,     0,   314,     0,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,     0,   327,   328,   329,   330,
     331,   332,   333,   334,   335,     0,   336,   337,   338,   339,
     340,   341,     0,   342,   343,   344,   345,   346,   347,   348,
     349,     0,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,     0,     0,   362,   363,     0,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,     0,   380,   381,   382,   383,   384,
       0,   385,   386,   387,   388,   389,     0,   391,   392,   393,
     394,     0,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   502,   408,   409,   410,     0,   411,
     412,     0,   413,     0,   415,   416,   417,   418,   419,     0,
     420,   421,     0,     0,   422,   423,   424,   425,   426,     0,
     427,   428,   429,   430,   431,   432,   433,   434,     0,     0,
     435,   436,   437,   438,   439,     0,     0,   440,   441,   442,
     443,   444,   445,   446,     0,   447,     0,   449,   450,   451,
     452,   453,     0,     0,   454,     0,     0,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   498,     0,
     579,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    94,    95,    96,    97,    98,    99,
     100,   101,     0,   102,   103,   104,     0,     0,     0,     0,
       0,     0,     0,   105,   106,     0,   107,   108,   109,     0,
     111,   112,   113,   114,   115,     0,   117,   118,     0,   119,
     120,   121,   122,     0,   123,     0,     0,   124,   125,   126,
     127,   128,     0,   129,   130,   131,   132,   133,     0,     0,
       0,   135,   136,   137,   138,   139,   140,     0,   142,   143,
     144,     0,   145,   146,   147,   148,   149,   150,     0,     0,
     152,   153,   154,     0,     0,     0,     0,     0,     0,     0,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
       0,   166,     0,   167,   168,   169,   170,   171,   172,     0,
     173,   174,   175,   176,   177,     0,     0,   178,   179,   180,
     181,   182,     0,   183,   184,   185,     0,   186,   187,   188,
       0,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,     0,   200,     0,   201,   202,   203,   204,     0,
     205,     0,   206,     0,     0,     0,   209,   210,   211,     0,
     213,     0,   214,     0,   215,   216,   217,     0,   218,   219,
     220,   221,   222,   223,   224,     0,   226,   227,   228,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,     0,
     238,   239,   240,   241,   242,   243,   244,   245,     0,   246,
       0,   247,     0,     0,   250,     0,   252,   253,   254,   255,
     256,   257,     0,     0,   258,     0,   260,     0,     0,   262,
     263,   264,     0,     0,   265,   266,   267,   268,   269,   500,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,     0,
     291,   292,   293,   294,   295,     0,   296,   297,     0,   299,
       0,   300,   301,   302,   303,   304,   305,     0,   306,   307,
       0,   580,   308,   309,   310,     0,     0,   311,   312,     0,
     314,     0,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,     0,   327,   328,   329,   330,   331,   332,
     333,   334,   335,     0,   336,   337,   338,   339,   340,   341,
       0,   342,   343,   344,   345,   346,   347,   348,   349,     0,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,     0,     0,   362,   363,     0,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,     0,   380,   381,   382,   383,   384,     0,   385,
     386,   387,   388,   389,     0,   391,   392,   393,   394,     0,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   502,   408,   409,   410,     0,   411,   412,     0,
     413,     0,   415,   416,   417,   418,   419,     0,   420,   421,
       0,     0,   422,   423,   424,   425,   426,     0,   427,   428,
     429,   430,   431,   432,   433,   434,     0,     0,   435,   436,
     437,   438,   439,     0,     0,   440,   441,   442,   443,   444,
     445,   446,     0,   447,     0,   449,   450,   451,   452,   453,
       0,     0,   454,     0,     0,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   498,     0,   579,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    94,    95,    96,    97,    98,    99,   100,   101,
       0,   102,   103,   104,     0,     0,     0,     0,     0,     0,
       0,   105,   106,     0,   107,   108,   109,     0,   111,   112,
     113,   114,   115,     0,   117,   118,     0,   119,   120,   121,
     122,     0,   123,     0,     0,   124,   125,   126,   127,   128,
       0,   129,   130,   131,   132,   133,     0,     0,     0,   135,
     136,   137,   138,   139,   140,     0,   142,   143,   144,     0,
     145,   146,   147,   148,   149,   150,     0,     0,   152,   153,
     154,     0,     0,     0,     0,     0,     0,     0,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,     0,   166,
       0,   167,   168,   169,   170,   171,   172,     0,   173,   174,
     175,   176,   177,     0,     0,   178,   179,   180,   181,   182,
       0,   183,   184,   185,     0,   186,   187,   188,     0,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
       0,   200,     0,   201,   202,   203,   204,     0,   205,     0,
     206,     0,     0,     0,   209,   210,   211,     0,   213,     0,
     214,     0,   215,   216,   217,     0,   218,   219,   220,   221,
     222,   623,   224,     0,   226,   227,   228,   229,     0,   230,
     231,   232,   233,   234,   235,     0,   236,     0,   238,   239,
     240,   241,   242,   243,   244,   245,     0,   246,     0,   247,
       0,     0,   250,     0,   252,   253,   254,   255,   256,   257,
       0,     0,   258,     0,   260,     0,     0,   262,   263,   264,
       0,     0,   265,   266,   267,   268,   269,   500,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,     0,   291,   292,
     293,   294,   295,     0,   296,   297,     0,   299,     0,   300,
     301,   302,   303,   304,   305,     0,   306,   307,     0,   580,
     308,   309,   310,     0,     0,   311,   312,     0,   314,     0,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,     0,   327,   328,   329,   330,   331,   332,   333,   334,
     335,     0,   336,   337,   338,   339,   340,   341,     0,   342,
     343,   344,   345,   346,   347,   348,   349,     0,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
       0,     0,   362,   363,     0,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
       0,   380,   381,   382,   383,   384,     0,   385,   386,   387,
     388,   389,     0,   391,   392,   393,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     502,   408,   409,   410,     0,   411,   412,     0,   413,     0,
     415,   416,   417,   418,   419,     0,   420,   421,     0,     0,
     422,   423,   424,   425,   426,     0,   427,   428,   429,   430,
     431,   432,   433,   434,     0,     0,   435,   436,   437,   438,
     439,     0,     0,   440,   441,   442,   443,   444,   445,   446,
       0,   447,     0,   449,   450,   451,   452,   453,     0,     0,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   746,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      94,    95,    96,    97,    98,    99,   100,   101,     0,   102,
     103,   104,     3,     4,     0,     0,     0,     0,     0,   105,
     106,     0,   107,   108,   109,     0,   111,   112,   113,   747,
     748,     0,   749,   750,     0,   119,   120,   121,   122,     0,
     123,     0,     0,   124,   125,   751,   752,   128,     0,   129,
     130,   131,   132,   753,     0,     0,     0,   135,   136,   137,
     138,   139,   140,     0,   142,   143,   144,     0,   145,   146,
     147,   148,   149,   150,     0,     0,   152,   153,   154,     0,
       0,     0,     0,     0,     0,     0,   156,   157,   158,   159,
     160,   161,   162,   754,   755,   165,     0,   166,     0,   167,
     168,   169,   170,   171,   172,     0,   173,   174,   175,   176,
     177,     0,     0,   178,   179,   180,   181,   182,     0,   183,
     184,   185,     0,   186,   187,   188,     0,   189,   190,   191,
     192,   756,   194,   195,   196,   197,   198,   757,     0,   200,
       0,   201,   202,   758,   204,     0,   205,     0,   206,     0,
       0,     0,   209,   210,   211,     0,   213,     0,   214,     0,
     759,   760,   217,     0,   218,   219,   220,   221,   222,   223,
     224,     0,   226,   227,   228,   229,     0,   230,   231,   232,
     233,   234,   235,     0,   236,     0,   761,   239,   240,   241,
     242,   243,   762,   763,     0,   764,     0,   247,     0,     0,
     250,     0,   252,   253,   254,   255,   256,   257,     0,     0,
     258,     0,   260,     0,     0,   262,   263,   264,     0,     0,
     265,   266,   267,   268,   269,   765,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   766,     0,   767,   292,   293,   294,
     768,     0,   296,   297,     0,   299,     0,   769,   301,   770,
     303,   304,   305,     0,   306,   307,     0,     0,   308,   309,
     310,     0,     0,   311,   771,     0,   314,     0,   772,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,     0,
     327,   328,   773,   330,   331,   774,   333,   334,   335,     0,
     336,   337,   338,   339,   340,   341,     0,   342,   343,   344,
     775,   346,   347,   348,   349,     0,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,     0,     0,
     362,   363,     0,   365,   366,   367,   776,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,     0,   380,
     381,   382,   383,   384,     0,   385,   777,   387,   388,   389,
       0,   391,   392,   778,   394,     0,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   779,   408,
     780,   410,     0,   411,   412,     0,   413,     0,   415,   416,
     417,   418,   419,     0,   781,   782,     0,     0,   422,   423,
     783,   425,   784,     0,   427,   428,   785,   430,   431,   432,
     433,   434,     0,     0,   435,   436,   437,   438,   439,     0,
       0,   440,   441,   442,   443,   444,  1133,   787,     0,   447,
       0,   449,   450,   451,   452,   453,     0,     0,   454,     0,
       0,   455,   456,   457,   458,   459,   460,   788,   789,   790,
     791,   792,   793,   794,   795,   796,   797,   798,   472,   473,
     474,   475,   498,     0,   579,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,     0,     0,     0,   105,   106,     0,
     107,   108,   109,     0,   111,   112,   113,   114,   115,     0,
     117,   118,     0,   119,   120,   121,   122,     0,   123,     0,
       0,   124,   125,   126,   127,   128,     0,   129,   130,   131,
     132,   133,     0,     0,     0,   135,   136,   137,   138,   139,
     140,     0,   142,   143,   144,     0,   145,   146,   147,   148,
     149,   150,     0,     0,   152,   153,   154,     0,     0,     0,
       0,     0,     0,     0,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,     0,   166,     0,   167,   168,   169,
     170,   171,   172,     0,   173,   174,   175,   176,   177,     0,
       0,   178,   179,   180,   181,   182,     0,   183,   184,   185,
       0,   186,   187,   188,     0,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,     0,   200,     0,   201,
     202,   203,   204,     0,   205,     0,   206,     0,     0,     0,
     209,   210,   211,     0,  1734,     0,   214,     0,   215,   216,
     217,     0,   218,   219,   220,   221,   222,   223,   224,     0,
     226,   227,   228,   229,     0,   230,   231,   232,   233,   234,
     235,     0,   236,     0,   238,   239,   240,   241,   242,   243,
     244,   245,     0,   246,     0,   247,     0,     0,   250,     0,
     252,   253,   254,   255,   256,   257,     0,     0,   258,     0,
     260,     0,     0,   262,   263,  1735,     0,     0,   265,   266,
     267,   268,   269,   500,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,     0,   291,   292,   293,   294,   295,     0,
     296,   297,     0,   299,     0,   300,   301,   302,   303,   304,
     305,     0,   306,   307,     0,     0,   308,   309,   310,     0,
       0,   311,   312,     0,   314,     0,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,     0,   327,   328,
     329,   330,   331,   332,   333,   334,   335,     0,   336,   337,
     338,   339,   340,   341,     0,   342,   343,   344,   345,   346,
     347,   348,   349,     0,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,     0,     0,   362,   363,
       0,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,     0,   380,   381,   382,
     383,   384,     0,   385,   386,   387,   388,   389,     0,   391,
     392,   393,   394,     0,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   502,   408,   409,   410,
       0,   411,   412,  1736,   413,     0,   415,  1737,   417,  1738,
     419,     0,   420,   421,     0,     0,   422,   423,   424,   425,
     426,     0,   427,   428,   429,   430,   431,   432,   433,   434,
       0,     0,   435,   436,  1739,   438,   439,     0,     0,   440,
     441,   442,   443,   444,   445,   446,     0,   447,     0,   449,
     450,   451,   452,   453,     0,     0,   454,     0,     0,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     498,  2690,     0,     0,     0,     0,  2691,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    94,    95,    96,    97,
      98,    99,   100,   101,     0,   102,   103,   104,     0,     0,
       0,     0,     0,     0,     0,   105,   106,     0,   107,   108,
     109,     0,   111,   112,   113,   114,   115,     0,   117,   118,
       0,   119,   120,   121,   122,     0,   123,     0,     0,   124,
     125,   126,   127,   128,     0,   129,   130,   131,   132,   133,
       0,     0,     0,   135,   136,   137,   138,   139,   140,     0,
     142,   143,   144,     0,   145,   146,   147,   148,   149,   150,
       0,     0,   152,   153,   154,     0,     0,     0,     0,     0,
       0,     0,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,     0,   166,     0,   167,   168,   169,   170,   171,
     172,     0,   173,   174,   175,   176,   177,     0,     0,   178,
     179,   180,   181,   182,     0,   183,   184,   185,     0,   186,
     187,   188,     0,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,     0,   200,     0,   201,   202,   203,
     204,     0,   205,     0,   206,     0,     0,     0,   209,   210,
     211,     0,   213,     0,   214,     0,   215,   216,   217,     0,
     218,   219,   220,   221,   222,   223,   224,     0,   226,   227,
     228,   229,     0,   230,   231,   232,   233,   234,   235,     0,
     236,     0,   238,   239,   240,   241,   242,   243,   244,   245,
       0,   246,     0,   247,     0,     0,   250,     0,   252,   253,
     254,   255,   256,   257,     0,     0,   258,     0,   260,     0,
       0,   262,   263,   264,     0,     0,   265,   266,   267,   268,
     269,   500,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,     0,   291,   292,   293,   294,   295,     0,   296,   297,
       0,   299,     0,   300,   301,   302,   303,   304,   305,     0,
     306,   307,     0,     0,   308,   309,   310,     0,     0,   311,
     312,     0,   314,     0,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,     0,   327,   328,   329,   330,
     331,   332,   333,   334,   335,     0,   336,   337,   338,   339,
     340,   341,     0,   342,   343,   344,   345,   346,   347,   348,
     349,     0,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,     0,     0,   362,   363,     0,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,     0,   380,   381,   382,   383,   384,
       0,   385,   386,   387,   388,   389,     0,   391,   392,   393,
     394,     0,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   502,   408,   409,   410,     0,   411,
     412,     0,   413,     0,   415,   416,   417,   418,   419,     0,
     420,   421,     0,     0,   422,   423,   424,   425,   426,     0,
     427,   428,   429,   430,   431,   432,   433,   434,     0,     0,
     435,   436,   437,   438,   439,     0,     0,   440,   441,   442,
     443,   444,   445,   446,     0,   447,     0,   449,   450,   451,
     452,   453,     0,     0,   454,     0,     0,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   498,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    94,    95,    96,    97,    98,    99,
     100,   101,   499,   102,   103,   104,     0,     0,     0,     0,
       0,     0,     0,   105,   106,     0,   107,   108,   109,     0,
     111,   112,   113,   114,   115,     0,   117,   118,     0,   119,
     120,   121,   122,     0,   123,     0,     0,   124,   125,   126,
     127,   128,     0,   129,   130,   131,   132,   133,     0,     0,
       0,   135,   136,   137,   138,   139,   140,     0,   142,   143,
     144,     0,   145,   146,   147,   148,   149,   150,     0,     0,
     152,   153,   154,     0,     0,     0,     0,     0,     0,     0,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
       0,   166,     0,   167,   168,   169,   170,   171,   172,     0,
     173,   174,   175,   176,   177,     0,     0,   178,   179,   180,
     181,   182,     0,   183,   184,   185,     0,   186,   187,   188,
       0,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,     0,   200,     0,   201,   202,   203,   204,     0,
     205,     0,   206,     0,     0,     0,   209,   210,   211,     0,
     213,     0,   214,     0,   215,   216,   217,     0,   218,   219,
     220,   221,   222,   223,   224,     0,   226,   227,   228,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,     0,
     238,   239,   240,   241,   242,   243,   244,   245,     0,   246,
       0,   247,     0,     0,   250,     0,   252,   253,   254,   255,
     256,   257,     0,     0,   258,     0,   260,     0,     0,   262,
     263,   264,     0,     0,   265,   266,   267,   268,   269,   500,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,     0,
     291,   292,   293,   294,   295,     0,   296,   297,     0,   299,
       0,   300,   301,   302,   303,   304,   305,     0,   306,   307,
       0,     0,   308,   309,   310,     0,     0,   311,   312,     0,
     314,     0,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,     0,   327,   328,   329,   330,   331,   332,
     501,   334,   335,     0,   336,   337,   338,   339,   340,   341,
       0,   342,   343,   344,   345,   346,   347,   348,   349,     0,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,     0,     0,   362,   363,     0,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,     0,   380,   381,   382,   383,   384,     0,   385,
     386,   387,   388,   389,     0,   391,   392,   393,   394,     0,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   502,   408,   409,   410,     0,   411,   412,     0,
     413,     0,   415,   416,   417,   418,   419,     0,   420,   421,
       0,     0,   422,   423,   424,   425,   426,     0,   427,   428,
     429,   430,   431,   432,   433,   434,     0,     0,   435,   436,
     437,   438,   439,     0,     0,   440,   441,   442,   443,   444,
     445,   446,     0,   447,     0,   449,   450,   451,   452,   453,
       0,     0,   454,     0,     0,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   498,     0,   547,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    94,    95,    96,    97,    98,    99,   100,   101,
       0,   102,   103,   104,     0,     0,     0,     0,     0,     0,
       0,   105,   106,     0,   107,   108,   109,     0,   111,   112,
     113,   114,   115,     0,   117,   118,     0,   119,   120,   121,
     122,     0,   123,     0,     0,   124,   125,   126,   127,   128,
       0,   129,   130,   131,   132,   133,     0,     0,     0,   135,
     136,   137,   138,   139,   140,     0,   142,   143,   144,     0,
     145,   146,   147,   148,   149,   150,     0,     0,   152,   153,
     154,     0,     0,     0,     0,     0,     0,     0,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,     0,   166,
       0,   167,   168,   169,   170,   171,   172,     0,   173,   174,
     175,   176,   177,     0,     0,   178,   179,   180,   181,   182,
       0,   183,   184,   185,     0,   186,   187,   188,     0,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
       0,   200,     0,   201,   202,   203,   204,     0,   205,     0,
     206,     0,     0,     0,   209,   210,   211,     0,   213,     0,
     214,     0,   215,   216,   217,     0,   218,   219,   220,   221,
     222,   223,   224,     0,   226,   227,   228,   229,     0,   230,
     231,   232,   233,   234,   235,     0,   236,     0,   238,   239,
     240,   241,   242,   243,   244,   245,     0,   246,     0,   247,
       0,     0,   250,     0,   252,   253,   254,   255,   256,   257,
       0,     0,   258,     0,   260,     0,     0,   262,   263,   264,
       0,     0,   265,   266,   267,   268,   269,   500,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,     0,   291,   292,
     293,   294,   295,     0,   296,   297,     0,   299,     0,   300,
     301,   302,   303,   304,   305,     0,   306,   307,     0,     0,
     308,   309,   310,     0,     0,   311,   312,     0,   314,     0,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,     0,   327,   328,   329,   330,   331,   332,   333,   334,
     335,     0,   336,   337,   338,   339,   340,   341,     0,   342,
     343,   344,   345,   346,   347,   348,   349,     0,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
       0,     0,   362,   363,     0,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
       0,   380,   381,   382,   383,   384,     0,   385,   386,   387,
     388,   389,     0,   391,   392,   393,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     502,   408,   409,   410,     0,   411,   412,     0,   413,     0,
     415,   416,   417,   418,   419,     0,   420,   421,     0,     0,
     422,   423,   424,   425,   426,     0,   427,   428,   429,   430,
     431,   432,   433,   434,     0,     0,   435,   436,   437,   438,
     439,     0,     0,   440,   441,   442,   443,   444,   445,   446,
       0,   447,     0,   449,   450,   451,   452,   453,     0,     0,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   498,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      94,    95,    96,    97,    98,    99,   100,   101,   554,   102,
     103,   104,     0,     0,     0,     0,     0,     0,     0,   105,
     106,     0,   107,   108,   109,     0,   111,   112,   113,   114,
     115,     0,   117,   118,     0,   119,   120,   121,   122,     0,
     123,     0,     0,   124,   125,   126,   127,   128,     0,   129,
     130,   131,   132,   133,     0,     0,     0,   135,   136,   137,
     138,   139,   140,     0,   142,   143,   144,     0,   145,   146,
     147,   148,   149,   150,     0,     0,   152,   153,   154,     0,
       0,     0,     0,     0,     0,     0,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,     0,   166,     0,   167,
     168,   169,   170,   171,   172,     0,   173,   174,   175,   176,
     177,     0,     0,   178,   179,   180,   181,   182,     0,   183,
     184,   185,     0,   186,   187,   188,     0,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,     0,   200,
       0,   201,   202,   203,   204,     0,   205,     0,   206,     0,
       0,     0,   209,   210,   211,     0,   213,     0,   214,     0,
     215,   216,   217,     0,   218,   219,   220,   221,   222,   223,
     224,     0,   226,   227,   228,   229,     0,   230,   231,   232,
     233,   234,   235,     0,   236,     0,   238,   239,   240,   241,
     242,   243,   244,   245,     0,   246,     0,   247,     0,     0,
     250,     0,   252,   253,   254,   255,   256,   257,     0,     0,
     258,     0,   260,     0,     0,   262,   263,   264,     0,     0,
     265,   266,   267,   268,   269,   500,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,     0,   291,   292,   293,   294,
     295,     0,   296,   297,     0,   299,     0,   300,   301,   302,
     303,   304,   305,     0,   306,   307,     0,     0,   308,   309,
     310,     0,     0,   311,   312,     0,   314,     0,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,     0,
     327,   328,   329,   330,   331,   332,   333,   334,   335,     0,
     336,   337,   338,   339,   340,   341,     0,   342,   343,   344,
     345,   346,   347,   348,   349,     0,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,     0,     0,
     362,   363,     0,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,     0,   380,
     381,   382,   383,   384,     0,   385,   386,   387,   388,   389,
       0,   391,   392,   393,   394,     0,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   502,   408,
     409,   410,     0,   411,   412,     0,   413,     0,   415,   416,
     417,   418,   419,     0,   555,   421,     0,     0,   556,   423,
     424,   425,   426,     0,   427,   428,   429,   430,   431,   432,
     433,   434,     0,     0,   435,   436,   437,   438,   439,     0,
       0,   440,   441,   442,   443,   444,   445,   446,     0,   447,
       0,   449,   450,   451,   452,   453,     0,     0,   454,     0,
       0,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   498,     0,   579,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,     0,     0,     0,   105,   106,     0,
     107,   108,   109,     0,   111,   112,   113,   114,   115,     0,
     117,   118,     0,   119,   120,   121,   122,     0,   123,     0,
       0,   124,   125,   126,   127,   128,     0,   129,   130,   131,
     132,   133,     0,     0,     0,   135,   136,   137,   138,   139,
     140,     0,   142,   143,   144,     0,   145,   146,   147,   148,
     149,   150,     0,     0,   152,   153,   154,     0,     0,     0,
       0,     0,     0,     0,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,     0,   166,     0,   167,   168,   169,
     170,   171,   172,     0,   173,   174,   175,   176,   177,     0,
       0,   178,   179,   180,   181,   182,     0,   183,   184,   185,
       0,   186,   187,   188,     0,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,     0,   200,     0,   201,
     202,   203,   204,     0,   205,     0,   206,     0,     0,     0,
     209,   210,   211,     0,   213,     0,   214,     0,   215,   216,
     217,     0,   218,   219,   220,   221,   222,   618,   224,     0,
     226,   227,   228,   229,     0,   230,   231,   232,   233,   234,
     235,     0,   236,     0,   238,   239,   240,   241,   242,   243,
     244,   245,     0,   246,     0,   247,     0,     0,   250,     0,
     252,   253,   254,   255,   256,   257,     0,     0,   258,     0,
     260,     0,     0,   262,   263,   264,     0,     0,   265,   266,
     267,   268,   269,   500,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,     0,   291,   292,   293,   294,   295,     0,
     296,   297,     0,   299,     0,   300,   301,   302,   303,   304,
     305,     0,   306,   307,     0,     0,   308,   309,   310,     0,
       0,   311,   312,     0,   314,     0,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,     0,   327,   328,
     329,   330,   331,   332,   333,   334,   335,     0,   336,   337,
     338,   339,   340,   341,     0,   342,   343,   344,   345,   346,
     347,   348,   349,     0,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,     0,     0,   362,   363,
       0,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,     0,   380,   381,   382,
     383,   384,     0,   385,   386,   387,   388,   389,     0,   391,
     392,   393,   394,     0,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   502,   408,   409,   410,
       0,   411,   412,     0,   413,     0,   415,   416,   417,   418,
     419,     0,   420,   421,     0,     0,   422,   423,   424,   425,
     426,     0,   427,   428,   429,   430,   431,   432,   433,   434,
       0,     0,   435,   436,   437,   438,   439,     0,     0,   440,
     441,   442,   443,   444,   445,   446,     0,   447,     0,   449,
     450,   451,   452,   453,     0,     0,   454,     0,     0,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     498,     0,   579,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    94,    95,    96,    97,
      98,    99,   100,   101,     0,   102,   103,   104,     0,     0,
       0,     0,     0,     0,     0,   105,   106,     0,   107,   108,
     109,     0,   111,   112,   113,   114,   115,     0,   117,   118,
       0,   119,   120,   121,   122,     0,   123,     0,     0,   124,
     125,   126,   127,   128,     0,   129,   130,   131,   132,   133,
       0,     0,     0,   135,   136,   137,   138,   139,   140,     0,
     142,   143,   144,     0,   145,   146,   147,   148,   149,   150,
       0,     0,   152,   153,   154,     0,     0,     0,     0,     0,
       0,     0,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,     0,   166,     0,   167,   168,   169,   170,   171,
     172,     0,   173,   174,   175,   176,   177,     0,     0,   178,
     179,   180,   181,   182,     0,   183,   184,   185,     0,   186,
     187,   188,     0,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,     0,   200,     0,   201,   202,   203,
     204,     0,   205,     0,   206,     0,     0,     0,   209,   210,
     211,     0,   213,     0,   214,     0,   215,   216,   217,     0,
     218,   219,   220,   221,   222,   621,   224,     0,   226,   227,
     228,   229,     0,   230,   231,   232,   233,   234,   235,     0,
     236,     0,   238,   239,   240,   241,   242,   243,   244,   245,
       0,   246,     0,   247,     0,     0,   250,     0,   252,   253,
     254,   255,   256,   257,     0,     0,   258,     0,   260,     0,
       0,   262,   263,   264,     0,     0,   265,   266,   267,   268,
     269,   500,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,     0,   291,   292,   293,   294,   295,     0,   296,   297,
       0,   299,     0,   300,   301,   302,   303,   304,   305,     0,
     306,   307,     0,     0,   308,   309,   310,     0,     0,   311,
     312,     0,   314,     0,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,     0,   327,   328,   329,   330,
     331,   332,   333,   334,   335,     0,   336,   337,   338,   339,
     340,   341,     0,   342,   343,   344,   345,   346,   347,   348,
     349,     0,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,     0,     0,   362,   363,     0,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,     0,   380,   381,   382,   383,   384,
       0,   385,   386,   387,   388,   389,     0,   391,   392,   393,
     394,     0,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   502,   408,   409,   410,     0,   411,
     412,     0,   413,     0,   415,   416,   417,   418,   419,     0,
     420,   421,     0,     0,   422,   423,   424,   425,   426,     0,
     427,   428,   429,   430,   431,   432,   433,   434,     0,     0,
     435,   436,   437,   438,   439,     0,     0,   440,   441,   442,
     443,   444,   445,   446,     0,   447,     0,   449,   450,   451,
     452,   453,     0,     0,   454,     0,     0,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   498,     0,
     579,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    94,    95,    96,    97,    98,    99,
     100,   101,     0,   102,   103,   104,     0,     0,     0,     0,
       0,     0,     0,   105,   106,     0,   107,   108,   109,     0,
     111,   112,   113,   114,   115,     0,   117,   118,     0,   119,
     120,   121,   122,     0,   123,     0,     0,   124,   125,   126,
     127,   128,     0,   129,   130,   131,   132,   133,     0,     0,
       0,   135,   136,   137,   138,   139,   140,     0,   142,   143,
     144,     0,   145,   146,   147,   148,   149,   150,     0,     0,
     152,   153,   154,     0,     0,     0,     0,     0,     0,     0,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
       0,   166,     0,   167,   168,   169,   170,   171,   172,     0,
     173,   174,   175,   176,   177,     0,     0,   178,   179,   180,
     181,   182,     0,   183,   184,   185,     0,   186,   187,   188,
       0,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,     0,   200,     0,   201,   202,   203,   204,     0,
     205,     0,   206,     0,     0,     0,   209,   210,   211,     0,
     213,     0,   214,     0,   215,   216,   217,     0,   218,   219,
     220,   221,   222,   625,   224,     0,   226,   227,   228,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,     0,
     238,   239,   240,   241,   242,   243,   244,   245,     0,   246,
       0,   247,     0,     0,   250,     0,   252,   253,   254,   255,
     256,   257,     0,     0,   258,     0,   260,     0,     0,   262,
     263,   264,     0,     0,   265,   266,   267,   268,   269,   500,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,     0,
     291,   292,   293,   294,   295,     0,   296,   297,     0,   299,
       0,   300,   301,   302,   303,   304,   305,     0,   306,   307,
       0,     0,   308,   309,   310,     0,     0,   311,   312,     0,
     314,     0,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,     0,   327,   328,   329,   330,   331,   332,
     333,   334,   335,     0,   336,   337,   338,   339,   340,   341,
       0,   342,   343,   344,   345,   346,   347,   348,   349,     0,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,     0,     0,   362,   363,     0,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,     0,   380,   381,   382,   383,   384,     0,   385,
     386,   387,   388,   389,     0,   391,   392,   393,   394,     0,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   502,   408,   409,   410,     0,   411,   412,     0,
     413,     0,   415,   416,   417,   418,   419,     0,   420,   421,
       0,     0,   422,   423,   424,   425,   426,     0,   427,   428,
     429,   430,   431,   432,   433,   434,     0,     0,   435,   436,
     437,   438,   439,     0,     0,   440,   441,   442,   443,   444,
     445,   446,     0,   447,     0,   449,   450,   451,   452,   453,
       0,     0,   454,     0,     0,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   498,     0,   579,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    94,    95,    96,    97,    98,    99,   100,   101,
       0,   102,   103,   104,     0,     0,     0,     0,     0,     0,
       0,   105,   106,     0,   107,   108,   109,     0,   111,   112,
     113,   114,   115,     0,   117,   118,     0,   119,   120,   121,
     122,     0,   123,     0,     0,   124,   125,   126,   127,   128,
       0,   129,   130,   131,   132,   133,     0,     0,     0,   135,
     136,   137,   138,   139,   140,     0,   142,   143,   144,     0,
     145,   146,   147,   148,   149,   150,     0,     0,   152,   153,
     154,     0,     0,     0,     0,     0,     0,     0,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,     0,   166,
       0,   167,   168,   169,   170,   171,   172,     0,   173,   174,
     175,   176,   177,     0,     0,   178,   179,   180,   181,   182,
       0,   183,   184,   185,     0,   186,   187,   188,     0,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
       0,   200,     0,   201,   202,   203,   204,     0,   205,     0,
     206,     0,     0,     0,   209,   210,   211,     0,   213,     0,
     214,     0,   215,   216,   217,     0,   218,   219,   220,   221,
     222,   223,   224,     0,   226,   227,   228,   229,     0,   230,
     231,   232,   233,   234,   235,     0,   236,     0,   238,   239,
     240,   241,   242,   243,   244,   245,     0,   246,     0,   247,
       0,     0,   250,     0,   252,   253,   254,   255,   256,   257,
       0,     0,   258,     0,   260,     0,     0,   262,   263,   264,
       0,     0,   265,   266,   267,   268,   269,   500,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,     0,   291,   292,
     293,   294,   295,     0,   296,   297,     0,   299,     0,   300,
     301,   302,   303,   304,   305,     0,   306,   307,     0,     0,
     308,   309,   310,     0,     0,   311,   312,     0,   314,     0,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,     0,   327,   328,   329,   330,   331,   332,   333,   334,
     335,     0,   336,   337,   338,   339,   340,   341,     0,   342,
     343,   344,   345,   346,   347,   348,   349,     0,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
       0,     0,   362,   363,     0,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
       0,   380,   381,   382,   383,   384,     0,   385,   386,   387,
     388,   389,     0,   391,   392,   393,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     502,   408,   409,   410,     0,   411,   412,     0,   413,     0,
     415,   416,   417,   418,   419,     0,   420,   421,     0,     0,
     422,   423,   424,   425,   426,     0,   427,   428,   429,   430,
     431,   432,   433,   434,     0,     0,   435,   436,   437,   438,
     439,     0,     0,   440,   441,   442,   443,   444,   445,   446,
       0,   447,     0,   449,   450,   451,   452,   453,     0,     0,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   498,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      94,    95,    96,    97,    98,    99,   100,   101,   655,   102,
     103,   104,     0,     0,     0,     0,     0,     0,     0,   105,
     106,     0,   107,   108,   109,     0,   111,   112,   113,   114,
     115,     0,   117,   118,     0,   119,   120,   121,   122,     0,
     123,     0,     0,   124,   125,   126,   127,   128,     0,   129,
     130,   131,   132,   133,     0,     0,     0,   135,   136,   137,
     138,   139,   140,     0,   142,   143,   144,     0,   145,   146,
     147,   148,   149,   150,     0,     0,   152,   153,   154,     0,
       0,     0,     0,     0,     0,     0,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,     0,   166,     0,   167,
     168,   169,   170,   171,   172,     0,   173,   174,   175,   176,
     177,     0,     0,   178,   179,   180,   181,   182,     0,   183,
     184,   185,     0,   186,   187,   188,     0,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,     0,   200,
       0,   201,   202,   203,   204,     0,   205,     0,   206,     0,
       0,     0,   209,   210,   211,     0,   213,     0,   214,     0,
     215,   216,   217,     0,   218,   219,   220,   221,   222,   223,
     224,     0,   226,   227,   228,   229,     0,   230,   231,   232,
     233,   234,   235,     0,   236,     0,   238,   239,   240,   241,
     242,   243,   244,   245,     0,   246,     0,   247,     0,     0,
     250,     0,   252,   253,   254,   255,   256,   257,     0,     0,
     258,     0,   260,     0,     0,   262,   263,   264,     0,     0,
     265,   266,   267,   268,   269,   500,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,     0,   291,   292,   293,   294,
     295,     0,   296,   297,     0,   299,     0,   300,   301,   302,
     303,   304,   305,     0,   306,   307,     0,     0,   308,   309,
     310,     0,     0,   311,   312,     0,   314,     0,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,     0,
     327,   328,   329,   330,   331,   332,   333,   334,   335,     0,
     336,   337,   338,   339,   340,   341,     0,   342,   343,   344,
     345,   346,   347,   348,   349,     0,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,     0,     0,
     362,   363,     0,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,     0,   380,
     381,   382,   383,   384,     0,   385,   386,   387,   388,   389,
       0,   391,   392,   393,   394,     0,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   502,   408,
     409,   410,     0,   411,   412,     0,   413,     0,   415,   416,
     417,   418,   419,     0,   420,   421,     0,     0,   422,   423,
     424,   425,   426,     0,   427,   428,   429,   430,   431,   432,
     433,   434,     0,     0,   435,   436,   437,   438,   439,     0,
       0,   440,   441,   442,   443,   444,   445,   446,     0,   447,
       0,   449,   450,   451,   452,   453,     0,     0,   454,     0,
       0,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   498,     0,   579,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,     0,     0,     0,   105,   106,     0,
     107,   108,   109,     0,   111,   112,   113,   114,   115,     0,
     117,   118,     0,   119,   120,   121,   122,     0,   123,     0,
       0,   124,   125,   126,   127,   128,     0,   129,   130,   131,
     132,   133,     0,     0,     0,   135,   136,   137,   138,   139,
     140,     0,   142,   143,   144,     0,   145,   146,   147,   148,
     149,   150,     0,     0,   152,   153,   154,     0,     0,     0,
       0,     0,     0,     0,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,     0,   166,     0,   167,   168,   169,
     170,   171,   172,     0,   173,   174,   175,   176,   177,     0,
       0,   178,   179,   180,   181,   182,     0,   183,   184,   185,
       0,   186,   187,   188,     0,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,     0,   200,     0,   201,
     202,   203,   204,     0,   205,     0,   206,     0,     0,     0,
     209,   210,   211,     0,   213,     0,   214,     0,   215,   216,
     217,     0,   218,   219,   220,   221,   222,  1155,   224,     0,
     226,   227,   228,   229,     0,   230,   231,   232,   233,   234,
     235,     0,   236,     0,   238,   239,   240,   241,   242,   243,
     244,   245,     0,   246,     0,   247,     0,     0,   250,     0,
     252,   253,   254,   255,   256,   257,     0,     0,   258,     0,
     260,     0,     0,   262,   263,   264,     0,     0,   265,   266,
     267,   268,   269,   500,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,     0,   291,   292,   293,   294,   295,     0,
     296,   297,     0,   299,     0,   300,   301,   302,   303,   304,
     305,     0,   306,   307,     0,     0,   308,   309,   310,     0,
       0,   311,   312,     0,   314,     0,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,     0,   327,   328,
     329,   330,   331,   332,   333,   334,   335,     0,   336,   337,
     338,   339,   340,   341,     0,   342,   343,   344,   345,   346,
     347,   348,   349,     0,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,     0,     0,   362,   363,
       0,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,     0,   380,   381,   382,
     383,   384,     0,   385,   386,   387,   388,   389,     0,   391,
     392,   393,   394,     0,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   502,   408,   409,   410,
       0,   411,   412,     0,   413,     0,   415,   416,   417,   418,
     419,     0,   420,   421,     0,     0,   422,   423,   424,   425,
     426,     0,   427,   428,   429,   430,   431,   432,   433,   434,
       0,     0,   435,   436,   437,   438,   439,     0,     0,   440,
     441,   442,   443,   444,   445,   446,     0,   447,     0,   449,
     450,   451,   452,   453,     0,     0,   454,     0,     0,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     498,     0,   579,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    94,    95,    96,    97,
      98,    99,   100,   101,     0,   102,   103,   104,     0,     0,
       0,     0,     0,     0,     0,   105,   106,     0,   107,   108,
     109,     0,   111,   112,   113,   114,   115,     0,   117,   118,
       0,   119,   120,   121,   122,     0,   123,     0,     0,   124,
     125,   126,   127,   128,     0,   129,   130,   131,   132,   133,
       0,     0,     0,   135,   136,   137,   138,   139,   140,     0,
     142,   143,   144,     0,   145,   146,   147,   148,   149,   150,
       0,     0,   152,   153,   154,     0,     0,     0,     0,     0,
       0,     0,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,     0,   166,     0,   167,   168,   169,   170,   171,
     172,     0,   173,   174,   175,   176,   177,     0,     0,   178,
     179,   180,   181,   182,     0,   183,   184,   185,     0,   186,
     187,   188,     0,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,     0,   200,     0,   201,   202,   203,
     204,     0,   205,     0,   206,     0,     0,     0,   209,   210,
     211,     0,   213,     0,   214,     0,   215,   216,   217,     0,
     218,   219,   220,   221,   222,  1157,   224,     0,   226,   227,
     228,   229,     0,   230,   231,   232,   233,   234,   235,     0,
     236,     0,   238,   239,   240,   241,   242,   243,   244,   245,
       0,   246,     0,   247,     0,     0,   250,     0,   252,   253,
     254,   255,   256,   257,     0,     0,   258,     0,   260,     0,
       0,   262,   263,   264,     0,     0,   265,   266,   267,   268,
     269,   500,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,     0,   291,   292,   293,   294,   295,     0,   296,   297,
       0,   299,     0,   300,   301,   302,   303,   304,   305,     0,
     306,   307,     0,     0,   308,   309,   310,     0,     0,   311,
     312,     0,   314,     0,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,     0,   327,   328,   329,   330,
     331,   332,   333,   334,   335,     0,   336,   337,   338,   339,
     340,   341,     0,   342,   343,   344,   345,   346,   347,   348,
     349,     0,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,     0,     0,   362,   363,     0,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,     0,   380,   381,   382,   383,   384,
       0,   385,   386,   387,   388,   389,     0,   391,   392,   393,
     394,     0,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   502,   408,   409,   410,     0,   411,
     412,     0,   413,     0,   415,   416,   417,   418,   419,     0,
     420,   421,     0,     0,   422,   423,   424,   425,   426,     0,
     427,   428,   429,   430,   431,   432,   433,   434,     0,     0,
     435,   436,   437,   438,   439,     0,     0,   440,   441,   442,
     443,   444,   445,   446,     0,   447,     0,   449,   450,   451,
     452,   453,     0,     0,   454,     0,     0,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   498,     0,
     579,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    94,    95,    96,    97,    98,    99,
     100,   101,     0,   102,   103,   104,     0,     0,     0,     0,
       0,     0,     0,   105,   106,     0,   107,   108,   109,     0,
     111,   112,   113,   114,   115,     0,   117,   118,     0,   119,
     120,   121,   122,     0,   123,     0,     0,   124,   125,   126,
     127,   128,     0,   129,   130,   131,   132,   133,     0,     0,
       0,   135,   136,   137,   138,   139,   140,     0,   142,   143,
     144,     0,   145,   146,   147,   148,   149,   150,     0,     0,
     152,   153,   154,     0,     0,     0,     0,     0,     0,     0,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
       0,   166,     0,   167,   168,   169,   170,   171,   172,     0,
     173,   174,   175,   176,   177,     0,     0,   178,   179,   180,
     181,   182,     0,   183,   184,   185,     0,   186,   187,   188,
       0,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,     0,   200,     0,   201,   202,   203,   204,     0,
     205,     0,   206,     0,     0,     0,   209,   210,   211,     0,
     213,     0,   214,     0,   215,   216,   217,     0,   218,   219,
     220,   221,   222,  1567,   224,     0,   226,   227,   228,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,     0,
     238,   239,   240,   241,   242,   243,   244,   245,     0,   246,
       0,   247,     0,     0,   250,     0,   252,   253,   254,   255,
     256,   257,     0,     0,   258,     0,   260,     0,     0,   262,
     263,   264,     0,     0,   265,   266,   267,   268,   269,   500,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,     0,
     291,   292,   293,   294,   295,     0,   296,   297,     0,   299,
       0,   300,   301,   302,   303,   304,   305,     0,   306,   307,
       0,     0,   308,   309,   310,     0,     0,   311,   312,     0,
     314,     0,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,     0,   327,   328,   329,   330,   331,   332,
     333,   334,   335,     0,   336,   337,   338,   339,   340,   341,
       0,   342,   343,   344,   345,   346,   347,   348,   349,     0,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,     0,     0,   362,   363,     0,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,     0,   380,   381,   382,   383,   384,     0,   385,
     386,   387,   388,   389,     0,   391,   392,   393,   394,     0,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   502,   408,   409,   410,     0,   411,   412,     0,
     413,     0,   415,   416,   417,   418,   419,     0,   420,   421,
       0,     0,   422,   423,   424,   425,   426,     0,   427,   428,
     429,   430,   431,   432,   433,   434,     0,     0,   435,   436,
     437,   438,   439,     0,     0,   440,   441,   442,   443,   444,
     445,   446,     0,   447,     0,   449,   450,   451,   452,   453,
       0,     0,   454,     0,     0,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   498,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    94,    95,    96,    97,    98,    99,   100,   101,
       0,   102,   103,   104,     0,     0,     0,     0,     0,  2332,
       0,   105,   106,     0,   107,   108,   109,     0,   111,   112,
     113,   114,   115,     0,   117,   118,     0,   119,   120,   121,
     122,     0,   123,     0,     0,   124,   125,   126,   127,   128,
       0,   129,   130,   131,   132,   133,     0,     0,     0,   135,
     136,   137,   138,   139,   140,     0,   142,   143,   144,     0,
     145,   146,   147,   148,   149,   150,     0,     0,   152,   153,
     154,     0,     0,     0,     0,     0,     0,     0,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,     0,   166,
       0,   167,   168,   169,   170,   171,   172,     0,   173,   174,
     175,   176,   177,     0,     0,   178,   179,   180,   181,   182,
       0,   183,   184,   185,     0,   186,   187,   188,     0,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
       0,   200,     0,   201,   202,   203,   204,     0,   205,     0,
     206,     0,     0,     0,   209,   210,   211,     0,   213,     0,
     214,     0,   215,   216,   217,     0,   218,   219,   220,   221,
     222,   223,   224,     0,   226,   227,   228,   229,     0,   230,
     231,   232,   233,   234,   235,     0,   236,     0,   238,   239,
     240,   241,   242,   243,   244,   245,     0,   246,     0,   247,
       0,     0,   250,     0,   252,   253,   254,   255,   256,   257,
       0,     0,   258,     0,   260,     0,     0,   262,   263,   264,
       0,     0,   265,   266,   267,   268,   269,   500,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,     0,   291,   292,
     293,   294,   295,     0,   296,   297,     0,   299,     0,   300,
     301,   302,   303,   304,   305,     0,   306,   307,     0,     0,
     308,   309,   310,     0,     0,   311,   312,     0,   314,     0,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,     0,   327,   328,   329,   330,   331,   332,   333,   334,
     335,     0,   336,   337,   338,   339,   340,   341,     0,   342,
     343,   344,   345,   346,   347,   348,   349,     0,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
       0,     0,   362,   363,     0,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
       0,   380,   381,   382,   383,   384,     0,   385,   386,   387,
     388,   389,     0,   391,   392,   393,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     502,   408,   409,   410,     0,   411,   412,     0,   413,     0,
     415,   416,   417,   418,   419,     0,   420,   421,     0,     0,
     422,   423,   424,   425,   426,     0,   427,   428,   429,   430,
     431,   432,   433,   434,     0,     0,   435,   436,   437,   438,
     439,     0,     0,   440,   441,   442,   443,   444,   445,   446,
       0,   447,     0,   449,   450,   451,   452,   453,     0,     0,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   498,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      94,    95,    96,    97,    98,    99,   100,   101,     0,   102,
     103,   104,     0,     0,     0,     0,     0,  2346,     0,   105,
     106,     0,   107,   108,   109,     0,   111,   112,   113,   114,
     115,     0,   117,   118,     0,   119,   120,   121,   122,     0,
     123,     0,     0,   124,   125,   126,   127,   128,     0,   129,
     130,   131,   132,   133,     0,     0,     0,   135,   136,   137,
     138,   139,   140,     0,   142,   143,   144,     0,   145,   146,
     147,   148,   149,   150,     0,     0,   152,   153,   154,     0,
       0,     0,     0,     0,     0,     0,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,     0,   166,     0,   167,
     168,   169,   170,   171,   172,     0,   173,   174,   175,   176,
     177,     0,     0,   178,   179,   180,   181,   182,     0,   183,
     184,   185,     0,   186,   187,   188,     0,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,     0,   200,
       0,   201,   202,   203,   204,     0,   205,     0,   206,     0,
       0,     0,   209,   210,   211,     0,   213,     0,   214,     0,
     215,   216,   217,     0,   218,   219,   220,   221,   222,   223,
     224,     0,   226,   227,   228,   229,     0,   230,   231,   232,
     233,   234,   235,     0,   236,     0,   238,   239,   240,   241,
     242,   243,   244,   245,     0,   246,     0,   247,     0,     0,
     250,     0,   252,   253,   254,   255,   256,   257,     0,     0,
     258,     0,   260,     0,     0,   262,   263,   264,     0,     0,
     265,   266,   267,   268,   269,   500,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,     0,   291,   292,   293,   294,
     295,     0,   296,   297,     0,   299,     0,   300,   301,   302,
     303,   304,   305,     0,   306,   307,     0,     0,   308,   309,
     310,     0,     0,   311,   312,     0,   314,     0,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,     0,
     327,   328,   329,   330,   331,   332,   333,   334,   335,     0,
     336,   337,   338,   339,   340,   341,     0,   342,   343,   344,
     345,   346,   347,   348,   349,     0,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,     0,     0,
     362,   363,     0,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,     0,   380,
     381,   382,   383,   384,     0,   385,   386,   387,   388,   389,
       0,   391,   392,   393,   394,     0,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   502,   408,
     409,   410,     0,   411,   412,     0,   413,     0,   415,   416,
     417,   418,   419,     0,   420,   421,     0,     0,   422,   423,
     424,   425,   426,     0,   427,   428,   429,   430,   431,   432,
     433,   434,     0,     0,   435,   436,   437,   438,   439,     0,
       0,   440,   441,   442,   443,   444,   445,   446,     0,   447,
       0,   449,   450,   451,   452,   453,     0,     0,   454,     0,
       0,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   498,     0,   579,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,     0,     0,     0,   105,   106,     0,
     107,   108,   109,     0,   111,   112,   113,   114,   115,     0,
     117,   118,     0,   119,   120,   121,   122,     0,   123,     0,
       0,   124,   125,   126,   127,   128,     0,   129,   130,   131,
     132,   133,     0,     0,     0,   135,   136,   137,   138,   139,
     140,     0,   142,   143,   144,     0,   145,   146,   147,   148,
     149,   150,     0,     0,   152,   153,   154,     0,     0,     0,
       0,     0,     0,     0,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,     0,   166,     0,   167,   168,   169,
     170,   171,   172,     0,   173,   174,   175,   176,   177,     0,
       0,   178,   179,   180,   181,   182,     0,   183,   184,   185,
       0,   186,   187,   188,     0,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,     0,   200,     0,   201,
     202,   203,   204,     0,   205,     0,   206,     0,     0,     0,
     209,   210,   211,     0,   213,     0,   214,     0,   215,   216,
     217,     0,   218,   219,   220,   221,   222,  2483,   224,     0,
     226,   227,   228,   229,     0,   230,   231,   232,   233,   234,
     235,     0,   236,     0,   238,   239,   240,   241,   242,   243,
     244,   245,     0,   246,     0,   247,     0,     0,   250,     0,
     252,   253,   254,   255,   256,   257,     0,     0,   258,     0,
     260,     0,     0,   262,   263,   264,     0,     0,   265,   266,
     267,   268,   269,   500,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,     0,   291,   292,   293,   294,   295,     0,
     296,   297,     0,   299,     0,   300,   301,   302,   303,   304,
     305,     0,   306,   307,     0,     0,   308,   309,   310,     0,
       0,   311,   312,     0,   314,     0,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,     0,   327,   328,
     329,   330,   331,   332,   333,   334,   335,     0,   336,   337,
     338,   339,   340,   341,     0,   342,   343,   344,   345,   346,
     347,   348,   349,     0,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,     0,     0,   362,   363,
       0,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,     0,   380,   381,   382,
     383,   384,     0,   385,   386,   387,   388,   389,     0,   391,
     392,   393,   394,     0,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   502,   408,   409,   410,
       0,   411,   412,     0,   413,     0,   415,   416,   417,   418,
     419,     0,   420,   421,     0,     0,   422,   423,   424,   425,
     426,     0,   427,   428,   429,   430,   431,   432,   433,   434,
       0,     0,   435,   436,   437,   438,   439,     0,     0,   440,
     441,   442,   443,   444,   445,   446,     0,   447,     0,   449,
     450,   451,   452,   453,     0,     0,   454,     0,     0,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     498,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    94,    95,    96,    97,
      98,    99,   100,   101,     0,   102,   103,   104,     0,     0,
       0,     0,     0,     0,     0,   105,   106,     0,   107,   108,
     109,     0,   111,   112,   113,   114,   115,     0,   117,   118,
       0,   119,   120,   121,   122,     0,   123,     0,     0,   124,
     125,   126,   127,   128,     0,   129,   130,   131,   132,   133,
       0,     0,     0,   135,   136,   137,   138,   139,   140,     0,
     142,   143,   144,     0,   145,   146,   147,   148,   149,   150,
       0,     0,   152,   153,   154,     0,     0,     0,     0,     0,
       0,     0,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,     0,   166,     0,   167,   168,   169,   170,   171,
     172,     0,   173,   174,   175,   176,   177,     0,     0,   178,
     179,   180,   181,   182,     0,   183,   184,   185,     0,   186,
     187,   188,     0,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,     0,   200,     0,   201,   202,   203,
     204,     0,   205,     0,   206,     0,     0,     0,   209,   210,
     211,     0,   213,     0,   214,     0,   215,   216,   217,     0,
     218,   219,   220,   221,   222,   223,   224,     0,   226,   227,
     228,   229,     0,   230,   231,   232,   233,   234,   235,     0,
     236,     0,   238,   239,   240,   241,   242,   243,   244,   245,
       0,   246,     0,   247,     0,     0,   250,     0,   252,   253,
     254,   255,   256,   257,     0,     0,   258,     0,   260,     0,
       0,   262,   263,   264,     0,     0,   265,   266,   267,   268,
     269,   500,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,     0,   291,   292,   293,   294,   295,     0,   296,   297,
       0,   299,     0,   300,   301,   302,   303,   304,   305,     0,
     306,   307,     0,     0,   308,   309,   310,     0,     0,   311,
     312,     0,   314,     0,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,     0,   327,   328,   329,   330,
     331,   332,   333,   334,   335,     0,   336,   337,   338,   339,
     340,   341,     0,   342,   343,   344,   345,   346,   347,   348,
     349,     0,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,     0,     0,   362,   363,     0,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,     0,   380,   381,   382,   383,   384,
       0,   385,   386,   387,   388,   389,     0,   391,   392,   393,
     394,     0,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   502,   408,   409,   410,     0,   411,
     412,     0,   413,     0,   415,   416,   417,   418,   419,     0,
     420,   421,     0,     0,   422,   423,   424,   425,   426,     0,
     427,   428,   429,   430,   431,   432,   433,   434,     0,     0,
     435,   436,   437,   438,   439,     0,     0,   440,   441,   442,
     443,   444,   445,   446,     0,   447,     0,   449,   450,   451,
     452,   453,     0,     0,   454,     0,     0,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   498,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    94,    95,    96,    97,    98,    99,
     100,   101,     0,   102,   103,   104,     0,     0,     0,     0,
       0,     0,     0,   105,   106,     0,   107,   108,   109,     0,
     111,   112,   113,   114,   115,     0,   117,   118,     0,   119,
     120,   121,   122,     0,   123,     0,     0,   124,   125,   126,
     127,   128,     0,   129,   130,   131,   132,   133,     0,     0,
       0,   135,   136,   137,   138,   139,   140,     0,   142,   143,
     144,     0,   145,   146,   147,   148,   149,   150,     0,     0,
     152,   153,   154,     0,     0,     0,     0,     0,     0,     0,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
       0,   166,     0,   167,   168,   169,   170,   171,   172,     0,
     173,   174,   175,   176,   177,     0,     0,   178,   179,   180,
     181,   182,     0,   183,   184,   185,     0,   186,   187,   188,
       0,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,     0,   200,     0,   201,   202,   203,   204,     0,
     205,     0,   206,     0,     0,     0,   209,   210,   211,     0,
     566,     0,   214,     0,   215,   216,   217,     0,   218,   219,
     220,   221,   222,   223,   224,     0,   226,   227,   228,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,     0,
     238,   239,   240,   241,   242,   243,   244,   245,     0,   246,
       0,   247,     0,     0,   250,     0,   252,   253,   254,   255,
     256,   257,     0,     0,   258,     0,   260,     0,     0,   262,
     263,   567,     0,     0,   265,   266,   267,   268,   269,   500,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,     0,
     291,   292,   293,   294,   295,     0,   296,   297,     0,   299,
       0,   300,   301,   302,   303,   304,   305,     0,   306,   307,
       0,     0,   308,   309,   310,     0,     0,   311,   312,     0,
     314,     0,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,     0,   327,   328,   329,   330,   331,   332,
     333,   334,   335,     0,   336,   337,   338,   339,   340,   341,
       0,   342,   343,   344,   345,   346,   347,   348,   349,     0,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,     0,     0,   362,   363,     0,   365,   366,   367,
     368,   369,   370,   371,   372,   568,   374,   375,   376,   377,
     378,   379,     0,   380,   381,   382,   383,   569,     0,   385,
     386,   387,   388,   389,     0,   391,   392,   393,   394,     0,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   502,   408,   409,   410,     0,   411,   412,     0,
     413,     0,   415,   416,   417,   418,   419,     0,   570,   421,
       0,     0,   422,   423,   424,   425,   426,     0,   427,   428,
     429,   430,   431,   432,   433,   434,     0,     0,   435,   436,
     437,   438,   439,     0,     0,   440,   441,   442,   443,   444,
     445,   446,     0,   447,     0,   449,   450,   451,   452,   453,
       0,     0,   454,     0,     0,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   498,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    94,    95,    96,    97,    98,    99,   100,   101,
       0,   102,   103,   104,     0,     0,     0,     0,     0,     0,
       0,   105,   106,     0,   107,   108,   109,     0,   111,   112,
     113,   114,   115,     0,   117,   118,     0,   119,   120,   121,
     122,     0,   123,     0,     0,   124,   125,   126,   127,   128,
       0,   129,   130,   131,   132,   133,     0,     0,     0,   135,
     136,   137,   138,   139,   140,     0,   142,   143,   144,     0,
     145,   146,   147,   148,   149,   150,     0,     0,   152,   153,
     154,     0,     0,     0,     0,     0,     0,     0,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,     0,   166,
       0,   167,   168,   169,   170,   171,   172,     0,   173,   174,
     175,   176,   177,     0,     0,   178,   179,   180,   181,   182,
       0,   183,   184,   185,     0,   186,   187,   188,     0,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
       0,   200,     0,   201,   202,   203,   204,     0,   205,     0,
     206,     0,     0,     0,   209,   210,   211,     0,   213,     0,
     214,     0,   215,   216,   217,     0,   218,   219,   220,   221,
     222,   223,   224,     0,   226,   227,   228,   229,     0,   230,
     231,   232,   233,   234,   235,     0,   236,     0,   238,   239,
     240,   241,   242,   243,   244,   245,     0,   246,     0,   247,
       0,     0,   250,     0,   252,   253,   254,   255,   256,   257,
       0,     0,   258,     0,   260,     0,     0,   262,   263,   264,
       0,     0,   265,   266,   267,   268,   269,   500,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,     0,   291,   292,
     293,   294,   295,     0,   296,   297,     0,   299,     0,   300,
     301,   302,   303,   304,   305,     0,   306,   307,     0,     0,
     308,   309,   310,     0,     0,   311,   312,     0,   314,     0,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,     0,   327,   328,   329,   330,   331,   332,   333,   334,
     335,     0,   336,   337,   338,   339,   340,   341,     0,   342,
     343,   344,   345,   346,   347,   589,   349,     0,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
       0,     0,   362,   363,     0,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
       0,   380,   381,   382,   383,   384,     0,   385,   386,   387,
     388,   389,     0,   391,   392,   393,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     502,   408,   409,   410,     0,   411,   412,     0,   413,     0,
     415,   416,   417,   418,   419,     0,   420,   421,     0,     0,
     422,   423,   424,   425,   426,     0,   427,   428,   429,   430,
     431,   432,   433,   434,     0,     0,   435,   436,   437,   438,
     439,     0,     0,   440,   441,   442,   443,   444,   445,   446,
       0,   447,     0,   449,   450,   451,   452,   453,     0,     0,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   498,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      94,    95,    96,    97,    98,    99,   100,   101,     0,   102,
     103,   104,     0,     0,     0,     0,     0,     0,     0,   105,
     106,     0,   107,   108,   109,     0,   111,   112,   113,   114,
     115,     0,   117,   118,     0,   119,   120,   121,   122,     0,
     123,     0,     0,   124,   125,   126,   127,   128,     0,   129,
     130,   131,   132,   133,     0,     0,     0,   135,   136,   137,
     138,   139,   140,     0,   142,   143,   144,     0,   145,   146,
     147,   148,   149,   150,     0,     0,   152,   153,   154,     0,
       0,     0,     0,     0,     0,     0,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,     0,   166,     0,   167,
     168,   169,   170,   171,   172,     0,   173,   174,   175,   176,
     177,     0,     0,   178,   179,   180,   181,   182,     0,   183,
     184,   185,     0,   186,   187,   188,     0,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,     0,   200,
       0,   201,   202,   203,   204,     0,   205,     0,   206,     0,
       0,     0,   209,   210,   211,     0,   213,     0,   214,     0,
     215,   216,   217,     0,   218,   219,   220,   221,   222,   643,
     224,     0,   226,   227,   228,   229,     0,   230,   231,   232,
     233,   234,   235,     0,   236,     0,   238,   239,   240,   241,
     242,   243,   244,   245,     0,   246,     0,   247,     0,     0,
     250,     0,   252,   253,   254,   255,   256,   257,     0,     0,
     258,     0,   260,     0,     0,   262,   263,   264,     0,     0,
     265,   266,   267,   268,   269,   500,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,     0,   291,   292,   293,   294,
     295,     0,   296,   297,     0,   299,     0,   300,   301,   302,
     303,   304,   305,     0,   306,   307,     0,     0,   308,   309,
     310,     0,     0,   311,   312,     0,   314,     0,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,     0,
     327,   328,   329,   330,   331,   332,   333,   334,   335,     0,
     336,   337,   338,   339,   340,   341,     0,   342,   343,   344,
     345,   346,   347,   348,   349,     0,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,     0,     0,
     362,   363,     0,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,     0,   380,
     381,   382,   383,   384,     0,   385,   386,   387,   388,   389,
       0,   391,   392,   393,   394,     0,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   502,   408,
     409,   410,     0,   411,   412,     0,   413,     0,   415,   416,
     417,   418,   419,     0,   420,   421,     0,     0,   422,   423,
     424,   425,   426,     0,   427,   428,   429,   430,   431,   432,
     433,   434,     0,     0,   435,   436,   437,   438,   439,     0,
       0,   440,   441,   442,   443,   444,   445,   446,     0,   447,
       0,   449,   450,   451,   452,   453,     0,     0,   454,     0,
       0,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   498,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,     0,     0,     0,   105,   106,     0,
     107,   108,   109,     0,   111,   112,   113,   114,   115,     0,
     117,   118,     0,   119,   120,   121,   122,     0,   123,     0,
       0,   124,   125,   126,   127,   128,     0,   129,   130,   131,
     132,   133,     0,     0,     0,   135,   136,   137,   138,   139,
     140,     0,   142,   143,   144,     0,   145,   146,   147,   148,
     149,   150,     0,     0,   152,   153,   154,     0,     0,     0,
       0,     0,     0,     0,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,     0,   166,     0,   167,   168,   169,
     170,   171,   172,     0,   173,   174,   175,   176,   177,     0,
       0,   178,   179,   180,   181,   182,     0,   183,   184,   185,
       0,   186,   187,   188,     0,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,     0,   200,     0,   201,
     202,   203,   204,     0,   205,     0,   206,     0,     0,     0,
     209,   210,   211,     0,   213,     0,   214,     0,   215,   216,
     217,     0,   218,   219,   220,   221,   222,   733,   224,     0,
     226,   227,   228,   229,     0,   230,   231,   232,   233,   234,
     235,     0,   236,     0,   238,   239,   240,   241,   242,   243,
     244,   245,     0,   246,     0,   247,     0,     0,   250,     0,
     252,   253,   254,   255,   256,   257,     0,     0,   258,     0,
     260,     0,     0,   262,   263,   264,     0,     0,   265,   266,
     267,   268,   269,   500,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,     0,   291,   292,   293,   294,   295,     0,
     296,   297,     0,   299,     0,   300,   301,   302,   303,   304,
     305,     0,   306,   307,     0,     0,   308,   309,   310,     0,
       0,   311,   312,     0,   314,     0,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,     0,   327,   328,
     329,   330,   331,   332,   333,   334,   335,     0,   336,   337,
     338,   339,   340,   341,     0,   342,   343,   344,   345,   346,
     347,   348,   349,     0,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,     0,     0,   362,   363,
       0,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,     0,   380,   381,   382,
     383,   384,     0,   385,   386,   387,   388,   389,     0,   391,
     392,   393,   394,     0,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   502,   408,   409,   410,
       0,   411,   412,     0,   413,     0,   415,   416,   417,   418,
     419,     0,   420,   421,     0,     0,   422,   423,   424,   425,
     426,     0,   427,   428,   429,   430,   431,   432,   433,   434,
       0,     0,   435,   436,   437,   438,   439,     0,     0,   440,
     441,   442,   443,   444,   445,   446,     0,   447,     0,   449,
     450,   451,   452,   453,     0,     0,   454,     0,     0,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     498,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    94,    95,    96,    97,
      98,    99,   100,   101,     0,   102,   103,   104,     0,     0,
       0,     0,     0,     0,     0,   105,   106,     0,   107,   108,
     109,     0,   111,   112,   113,   114,   115,     0,   117,   118,
       0,   119,   120,   121,   122,     0,   123,     0,     0,   124,
     125,   126,   127,   128,     0,   129,   130,   131,   132,   133,
       0,     0,     0,   135,   136,   137,   138,   139,   140,     0,
     142,   143,   144,     0,   145,   146,   147,   148,   149,   150,
       0,     0,   152,   153,   154,     0,     0,     0,     0,     0,
       0,     0,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,     0,   166,     0,   167,   168,   169,   170,   171,
     172,     0,   173,   174,   175,   176,   177,     0,     0,   178,
     179,   180,   181,   182,     0,   183,   184,   185,     0,   186,
     187,   188,     0,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,     0,   200,     0,   201,   202,   203,
     204,     0,   205,     0,   206,     0,     0,     0,   209,   210,
     211,     0,   213,     0,   214,     0,   215,   216,   217,     0,
     218,   219,   220,   221,   222,   736,   224,     0,   226,   227,
     228,   229,     0,   230,   231,   232,   233,   234,   235,     0,
     236,     0,   238,   239,   240,   241,   242,   243,   244,   245,
       0,   246,     0,   247,     0,     0,   250,     0,   252,   253,
     254,   255,   256,   257,     0,     0,   258,     0,   260,     0,
       0,   262,   263,   264,     0,     0,   265,   266,   267,   268,
     269,   500,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,     0,   291,   292,   293,   294,   295,     0,   296,   297,
       0,   299,     0,   300,   301,   302,   303,   304,   305,     0,
     306,   307,     0,     0,   308,   309,   310,     0,     0,   311,
     312,     0,   314,     0,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,     0,   327,   328,   329,   330,
     331,   332,   333,   334,   335,     0,   336,   337,   338,   339,
     340,   341,     0,   342,   343,   344,   345,   346,   347,   348,
     349,     0,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,     0,     0,   362,   363,     0,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,     0,   380,   381,   382,   383,   384,
       0,   385,   386,   387,   388,   389,     0,   391,   392,   393,
     394,     0,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   502,   408,   409,   410,     0,   411,
     412,     0,   413,     0,   415,   416,   417,   418,   419,     0,
     420,   421,     0,     0,   422,   423,   424,   425,   426,     0,
     427,   428,   429,   430,   431,   432,   433,   434,     0,     0,
     435,   436,   437,   438,   439,     0,     0,   440,   441,   442,
     443,   444,   445,   446,     0,   447,     0,   449,   450,   451,
     452,   453,     0,     0,   454,     0,     0,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   498,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    94,    95,    96,    97,    98,    99,
     100,   101,     0,   102,   103,   104,     0,     0,     0,     0,
       0,     0,     0,   105,   106,     0,   107,   108,   109,     0,
     111,   112,   113,   114,   115,     0,   117,   118,     0,   119,
     120,   121,   122,     0,   123,     0,     0,   124,   125,   126,
     127,   128,     0,   129,   130,   131,   132,   133,     0,     0,
       0,   135,   136,   137,   138,   139,   140,     0,   142,   143,
     144,     0,   145,   146,   147,   148,   149,   150,     0,     0,
     152,   153,   154,     0,     0,     0,     0,     0,     0,     0,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
       0,   166,     0,   167,   168,   169,   170,   171,   172,     0,
     173,   174,   175,   176,   177,     0,     0,   178,   179,   180,
     181,   182,     0,   183,   184,   185,     0,   186,   187,   188,
       0,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,     0,   200,     0,   201,   202,   203,   204,     0,
     205,     0,   206,     0,     0,     0,   209,   210,   211,     0,
     213,     0,   214,     0,   215,   216,   217,     0,   218,   219,
     220,   221,   222,   739,   224,     0,   226,   227,   228,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,     0,
     238,   239,   240,   241,   242,   243,   244,   245,     0,   246,
       0,   247,     0,     0,   250,     0,   252,   253,   254,   255,
     256,   257,     0,     0,   258,     0,   260,     0,     0,   262,
     263,   264,     0,     0,   265,   266,   267,   268,   269,   500,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,     0,
     291,   292,   293,   294,   295,     0,   296,   297,     0,   299,
       0,   300,   301,   302,   303,   304,   305,     0,   306,   307,
       0,     0,   308,   309,   310,     0,     0,   311,   312,     0,
     314,     0,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,     0,   327,   328,   329,   330,   331,   332,
     333,   334,   335,     0,   336,   337,   338,   339,   340,   341,
       0,   342,   343,   344,   345,   346,   347,   348,   349,     0,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,     0,     0,   362,   363,     0,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,     0,   380,   381,   382,   383,   384,     0,   385,
     386,   387,   388,   389,     0,   391,   392,   393,   394,     0,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   502,   408,   409,   410,     0,   411,   412,     0,
     413,     0,   415,   416,   417,   418,   419,     0,   420,   421,
       0,     0,   422,   423,   424,   425,   426,     0,   427,   428,
     429,   430,   431,   432,   433,   434,     0,     0,   435,   436,
     437,   438,   439,     0,     0,   440,   441,   442,   443,   444,
     445,   446,     0,   447,     0,   449,   450,   451,   452,   453,
       0,     0,   454,     0,     0,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   498,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    94,    95,    96,    97,    98,    99,   100,   101,
       0,   102,   103,   104,     0,     0,     0,     0,     0,     0,
       0,   105,   106,     0,   107,   108,   109,     0,   111,   112,
     113,   114,   115,     0,   117,   118,     0,   119,   120,   121,
     122,     0,   123,     0,     0,   124,   125,   126,   127,   128,
       0,   129,   130,   131,   132,   133,     0,     0,     0,   135,
     136,   137,   138,   139,   140,     0,   142,   143,   144,     0,
     145,   146,   147,   148,   149,   150,     0,     0,   152,   153,
     154,     0,     0,     0,     0,     0,     0,     0,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,     0,   166,
       0,   167,   168,   169,   170,   171,   172,     0,   173,   174,
     175,   176,   177,     0,     0,   178,   179,   180,   181,   182,
       0,   183,   184,   185,     0,   186,   187,   188,     0,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
       0,   200,     0,   201,   202,   203,   204,     0,   205,     0,
     206,     0,     0,     0,   209,   210,   211,     0,   213,     0,
     214,     0,   215,   216,   217,     0,   218,   219,   220,   221,
     222,   223,   224,     0,   226,   227,   228,   229,     0,   230,
     231,   232,   233,   234,   235,     0,   236,     0,   238,   239,
     240,   241,   242,   243,   244,   245,     0,   246,     0,   247,
       0,     0,   250,     0,   252,   253,   254,   255,   256,   257,
       0,     0,   258,     0,   260,     0,     0,   262,   263,   264,
       0,     0,   265,   266,   267,   268,   269,   500,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,     0,   291,   292,
     293,   294,   295,     0,   296,   297,     0,   299,     0,   300,
     301,   302,   303,   304,   305,     0,   306,   307,     0,     0,
     308,   309,   310,     0,     0,   311,   312,     0,   314,     0,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,     0,   327,   328,   329,   330,   331,   332,   333,   334,
     335,     0,   336,   337,   338,   339,   340,   341,     0,   342,
     343,   344,   345,   346,   347,   348,   349,     0,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
       0,     0,   362,   363,     0,   365,   366,   367,   368,   369,
     370,   371,   372,   568,   374,   375,   376,   377,   378,   379,
       0,   380,   381,   382,   383,   384,     0,   385,   386,   387,
     388,   389,     0,   391,   392,   393,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     502,   408,   409,   410,     0,   411,   412,     0,   413,     0,
     415,   416,   417,   418,   419,     0,   570,   421,     0,     0,
     422,   423,   424,   425,   426,     0,   427,   428,   429,   430,
     431,   432,   433,   434,     0,     0,   435,   436,   437,   438,
     439,     0,     0,   440,   441,   442,   443,   444,   445,   446,
       0,   447,     0,   449,   450,   451,   452,   453,     0,     0,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   498,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      94,    95,    96,    97,    98,    99,   100,   101,     0,   102,
     103,   104,     0,     0,     0,     0,     0,  1391,     0,   105,
     106,     0,   107,   108,   109,     0,   111,   112,   113,   114,
     115,     0,   117,   118,     0,   119,   120,   121,   122,     0,
     123,     0,     0,   124,   125,   126,   127,   128,     0,   129,
     130,   131,   132,   133,     0,     0,     0,   135,   136,   137,
     138,   139,   140,     0,   142,   143,   144,     0,   145,   146,
     147,   148,   149,   150,     0,     0,   152,   153,   154,     0,
       0,     0,     0,     0,     0,     0,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,     0,   166,     0,   167,
     168,   169,   170,   171,   172,     0,   173,   174,   175,   176,
     177,     0,     0,   178,   179,   180,   181,   182,     0,   183,
     184,   185,     0,   186,   187,   188,     0,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,     0,   200,
       0,   201,   202,   203,   204,     0,   205,     0,   206,     0,
       0,     0,   209,   210,   211,     0,   213,     0,   214,     0,
     215,   216,   217,     0,   218,   219,   220,   221,   222,   223,
     224,     0,   226,   227,   228,   229,     0,   230,   231,   232,
     233,   234,   235,     0,   236,     0,   238,   239,   240,   241,
     242,   243,   244,   245,     0,   246,     0,   247,     0,     0,
     250,     0,   252,   253,   254,   255,   256,   257,     0,     0,
     258,     0,   260,     0,     0,   262,   263,   264,     0,     0,
     265,   266,   267,   268,   269,   500,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,     0,   291,   292,   293,   294,
     295,     0,   296,   297,     0,   299,     0,   300,   301,   302,
     303,   304,   305,     0,   306,   307,     0,     0,   308,   309,
     310,     0,     0,   311,   312,     0,   314,     0,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,     0,
     327,   328,   329,   330,   331,   332,   333,   334,   335,     0,
     336,   337,   338,   339,   340,   341,     0,   342,   343,   344,
     345,   346,   347,   348,   349,     0,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,     0,     0,
     362,   363,     0,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,     0,   380,
     381,   382,   383,   384,     0,     0,   386,   387,   388,   389,
       0,   391,   392,   393,   394,     0,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   502,   408,
     409,   410,     0,   411,   412,     0,   413,     0,   415,   416,
     417,   418,   419,     0,   420,   421,     0,     0,   422,   423,
     424,   425,   426,     0,   427,   428,   429,   430,   431,   432,
     433,   434,     0,     0,   435,   436,   437,   438,   439,     0,
       0,   440,   441,   442,   443,   444,   445,   446,     0,   447,
       0,   449,   450,   451,   452,   453,     0,     0,   454,     0,
       0,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   498,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,     0,     0,     0,   105,   106,     0,
     107,   108,   109,     0,   111,   112,   113,   114,   115,     0,
     117,   118,     0,   119,   120,   121,   122,     0,   123,     0,
       0,   124,   125,   126,   127,   128,     0,   129,   130,   131,
     132,   133,     0,     0,     0,   135,   136,   137,   138,   139,
     140,     0,   142,   143,   144,     0,   145,   146,   147,   148,
     149,   150,     0,     0,   152,   153,   154,     0,     0,     0,
       0,     0,     0,     0,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,     0,   166,     0,   167,   168,   169,
     170,   171,   172,     0,   173,   174,   175,   176,   177,     0,
       0,   178,   179,   180,   181,   182,     0,   183,   184,   185,
       0,   186,   187,   188,     0,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,     0,   200,     0,   201,
     202,   203,   204,     0,   205,     0,   206,     0,     0,     0,
     209,   210,   211,     0,   213,     0,   214,     0,   215,   216,
     217,     0,   218,   219,   220,   221,   222,  1531,   224,     0,
     226,   227,   228,   229,     0,   230,   231,   232,   233,   234,
     235,     0,   236,     0,   238,   239,   240,   241,   242,   243,
     244,   245,     0,   246,     0,   247,     0,     0,   250,     0,
     252,   253,   254,   255,   256,   257,     0,     0,   258,     0,
     260,     0,     0,   262,   263,   264,     0,     0,   265,   266,
     267,   268,   269,   500,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,     0,   291,   292,   293,   294,   295,     0,
     296,   297,     0,   299,     0,   300,   301,   302,   303,   304,
     305,     0,   306,   307,     0,     0,   308,   309,   310,     0,
       0,   311,   312,     0,   314,     0,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,     0,   327,   328,
     329,   330,   331,   332,   333,   334,   335,     0,   336,   337,
     338,   339,   340,   341,     0,   342,   343,   344,   345,   346,
     347,   348,   349,     0,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,     0,     0,   362,   363,
       0,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,     0,   380,   381,   382,
     383,   384,     0,   385,   386,   387,   388,   389,     0,   391,
     392,   393,   394,     0,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   502,   408,   409,   410,
       0,   411,   412,     0,   413,     0,   415,   416,   417,   418,
     419,     0,   420,   421,     0,     0,   422,   423,   424,   425,
     426,     0,   427,   428,   429,   430,   431,   432,   433,   434,
       0,     0,   435,   436,   437,   438,   439,     0,     0,   440,
     441,   442,   443,   444,   445,   446,     0,   447,     0,   449,
     450,   451,   452,   453,     0,     0,   454,     0,     0,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     498,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    94,    95,    96,    97,
      98,    99,   100,   101,     0,   102,   103,   104,     0,     0,
       0,     0,     0,     0,     0,   105,   106,     0,   107,   108,
     109,     0,   111,   112,   113,   114,   115,     0,   117,   118,
       0,   119,   120,   121,   122,     0,   123,     0,     0,   124,
     125,   126,   127,   128,     0,   129,   130,   131,   132,   133,
       0,     0,     0,   135,   136,   137,   138,   139,   140,     0,
     142,   143,   144,     0,   145,   146,   147,   148,   149,   150,
       0,     0,   152,   153,   154,     0,     0,     0,     0,     0,
       0,     0,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,     0,   166,     0,   167,   168,   169,   170,   171,
     172,     0,   173,   174,   175,   176,   177,     0,     0,   178,
     179,   180,   181,   182,     0,   183,   184,   185,     0,   186,
     187,   188,     0,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,     0,   200,     0,   201,   202,   203,
     204,     0,   205,     0,   206,     0,     0,     0,   209,   210,
     211,     0,   213,     0,   214,     0,   215,   216,   217,     0,
     218,   219,   220,   221,   222,  1811,   224,     0,   226,   227,
     228,   229,     0,   230,   231,   232,   233,   234,   235,     0,
     236,     0,   238,   239,   240,   241,   242,   243,   244,   245,
       0,   246,     0,   247,     0,     0,   250,     0,   252,   253,
     254,   255,   256,   257,     0,     0,   258,     0,   260,     0,
       0,   262,   263,   264,     0,     0,   265,   266,   267,   268,
     269,   500,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,     0,   291,   292,   293,   294,   295,     0,   296,   297,
       0,   299,     0,   300,   301,   302,   303,   304,   305,     0,
     306,   307,     0,     0,   308,   309,   310,     0,     0,   311,
     312,     0,   314,     0,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,     0,   327,   328,   329,   330,
     331,   332,   333,   334,   335,     0,   336,   337,   338,   339,
     340,   341,     0,   342,   343,   344,   345,   346,   347,   348,
     349,     0,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,     0,     0,   362,   363,     0,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,     0,   380,   381,   382,   383,   384,
       0,   385,   386,   387,   388,   389,     0,   391,   392,   393,
     394,     0,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   502,   408,   409,   410,     0,   411,
     412,     0,   413,     0,   415,   416,   417,   418,   419,     0,
     420,   421,     0,     0,   422,   423,   424,   425,   426,     0,
     427,   428,   429,   430,   431,   432,   433,   434,     0,     0,
     435,   436,   437,   438,   439,     0,     0,   440,   441,   442,
     443,   444,   445,   446,     0,   447,     0,   449,   450,   451,
     452,   453,     0,     0,   454,     0,     0,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   498,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    94,    95,    96,    97,    98,    99,
     100,   101,     0,   102,   103,   104,     0,     0,     0,     0,
       0,     0,     0,   105,   106,     0,   107,   108,   109,     0,
     111,   112,   113,   114,   115,     0,   117,   118,     0,   119,
     120,   121,   122,     0,   123,     0,     0,   124,   125,   126,
     127,   128,     0,   129,   130,   131,   132,   133,     0,     0,
       0,   135,   136,   137,   138,   139,   140,     0,   142,   143,
     144,     0,   145,   146,   147,   148,   149,   150,     0,     0,
     152,   153,   154,     0,     0,     0,     0,     0,     0,     0,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
       0,   166,     0,   167,   168,   169,   170,   171,   172,     0,
     173,   174,   175,   176,   177,     0,     0,   178,   179,   180,
     181,   182,     0,   183,   184,   185,     0,   186,   187,   188,
       0,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,     0,   200,     0,   201,   202,   203,   204,     0,
     205,     0,   206,     0,     0,     0,   209,   210,   211,     0,
     213,     0,   214,     0,   215,   216,   217,     0,   218,   219,
     220,   221,   222,  1823,   224,     0,   226,   227,   228,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,     0,
     238,   239,   240,   241,   242,   243,   244,   245,     0,   246,
       0,   247,     0,     0,   250,     0,   252,   253,   254,   255,
     256,   257,     0,     0,   258,     0,   260,     0,     0,   262,
     263,   264,     0,     0,   265,   266,   267,   268,   269,   500,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,     0,
     291,   292,   293,   294,   295,     0,   296,   297,     0,   299,
       0,   300,   301,   302,   303,   304,   305,     0,   306,   307,
       0,     0,   308,   309,   310,     0,     0,   311,   312,     0,
     314,     0,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,     0,   327,   328,   329,   330,   331,   332,
     333,   334,   335,     0,   336,   337,   338,   339,   340,   341,
       0,   342,   343,   344,   345,   346,   347,   348,   349,     0,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,     0,     0,   362,   363,     0,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,     0,   380,   381,   382,   383,   384,     0,   385,
     386,   387,   388,   389,     0,   391,   392,   393,   394,     0,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   502,   408,   409,   410,     0,   411,   412,     0,
     413,     0,   415,   416,   417,   418,   419,     0,   420,   421,
       0,     0,   422,   423,   424,   425,   426,     0,   427,   428,
     429,   430,   431,   432,   433,   434,     0,     0,   435,   436,
     437,   438,   439,     0,     0,   440,   441,   442,   443,   444,
     445,   446,     0,   447,     0,   449,   450,   451,   452,   453,
       0,     0,   454,     0,     0,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   498,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    94,    95,    96,    97,    98,    99,   100,   101,
       0,   102,   103,   104,     0,     0,     0,     0,     0,     0,
       0,   105,   106,     0,   107,   108,   109,     0,   111,   112,
     113,   114,   115,     0,   117,   118,     0,   119,   120,   121,
     122,     0,   123,     0,     0,   124,   125,   126,   127,   128,
       0,   129,   130,   131,   132,   133,     0,     0,     0,   135,
     136,   137,   138,   139,   140,     0,   142,   143,   144,     0,
     145,   146,   147,   148,   149,   150,     0,     0,   152,   153,
     154,     0,     0,     0,     0,     0,     0,     0,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,     0,   166,
       0,   167,   168,   169,   170,   171,   172,     0,   173,   174,
     175,   176,   177,     0,     0,   178,   179,   180,   181,   182,
       0,   183,   184,   185,     0,   186,   187,   188,     0,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
       0,   200,     0,   201,   202,   203,   204,     0,   205,     0,
     206,     0,     0,     0,   209,   210,   211,     0,   213,     0,
     214,     0,   215,   216,   217,     0,   218,   219,   220,   221,
     222,  1825,   224,     0,   226,   227,   228,   229,     0,   230,
     231,   232,   233,   234,   235,     0,   236,     0,   238,   239,
     240,   241,   242,   243,   244,   245,     0,   246,     0,   247,
       0,     0,   250,     0,   252,   253,   254,   255,   256,   257,
       0,     0,   258,     0,   260,     0,     0,   262,   263,   264,
       0,     0,   265,   266,   267,   268,   269,   500,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,     0,   291,   292,
     293,   294,   295,     0,   296,   297,     0,   299,     0,   300,
     301,   302,   303,   304,   305,     0,   306,   307,     0,     0,
     308,   309,   310,     0,     0,   311,   312,     0,   314,     0,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,     0,   327,   328,   329,   330,   331,   332,   333,   334,
     335,     0,   336,   337,   338,   339,   340,   341,     0,   342,
     343,   344,   345,   346,   347,   348,   349,     0,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
       0,     0,   362,   363,     0,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
       0,   380,   381,   382,   383,   384,     0,   385,   386,   387,
     388,   389,     0,   391,   392,   393,   394,     0,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     502,   408,   409,   410,     0,   411,   412,     0,   413,     0,
     415,   416,   417,   418,   419,     0,   420,   421,     0,     0,
     422,   423,   424,   425,   426,     0,   427,   428,   429,   430,
     431,   432,   433,   434,     0,     0,   435,   436,   437,   438,
     439,     0,     0,   440,   441,   442,   443,   444,   445,   446,
       0,   447,     0,   449,   450,   451,   452,   453,     0,     0,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   498,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      94,    95,    96,    97,    98,    99,   100,   101,     0,   102,
     103,   104,     0,     0,     0,     0,     0,     0,     0,   105,
     106,     0,   107,   108,   109,     0,   111,   112,   113,   114,
     115,     0,   117,   118,     0,   119,   120,   121,   122,     0,
     123,     0,     0,   124,   125,   126,   127,   128,     0,   129,
     130,   131,   132,   133,     0,     0,     0,   135,   136,   137,
     138,   139,   140,     0,   142,   143,   144,     0,   145,   146,
     147,   148,   149,   150,     0,     0,   152,   153,   154,     0,
       0,     0,     0,     0,     0,     0,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,     0,   166,     0,   167,
     168,   169,   170,   171,   172,     0,   173,   174,   175,   176,
     177,     0,     0,   178,   179,   180,   181,   182,     0,   183,
     184,   185,     0,   186,   187,   188,     0,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,     0,   200,
       0,   201,   202,   203,   204,     0,   205,     0,   206,     0,
       0,     0,   209,   210,   211,     0,   213,     0,   214,     0,
     215,   216,   217,     0,   218,   219,   220,   221,   222,   223,
     224,     0,   226,   227,   228,   229,     0,   230,   231,   232,
     233,   234,   235,     0,   236,     0,   238,   239,   240,   241,
     242,   243,   244,   245,     0,   246,     0,   247,     0,     0,
     250,     0,   252,   253,   254,   255,   256,   257,     0,     0,
     258,     0,   260,     0,     0,   262,   263,   264,     0,     0,
     265,   266,   267,   268,   269,   500,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,     0,   291,   292,   293,   294,
     295,     0,   296,   297,     0,   299,     0,   300,   301,   302,
     303,   304,   305,     0,   306,   307,     0,     0,   308,   309,
     310,     0,     0,   311,   312,     0,   314,     0,   316,   317,
     318,   319,   320,   321,   322,     0,   324,   325,   326,     0,
     327,   328,   329,   330,   331,   332,   333,   334,   335,     0,
     336,   337,   338,   339,   340,   341,     0,   342,     0,   344,
     345,   346,   347,   348,   349,     0,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,     0,     0,
     362,   363,     0,   365,   366,   367,   368,     0,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,     0,   380,
     381,   382,   383,   384,     0,   385,   386,   387,   388,   389,
       0,   391,   392,   393,   394,     0,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   502,   408,
     409,   410,     0,   411,   412,     0,   413,     0,   415,   416,
     417,   418,   419,     0,   420,   421,     0,     0,   422,   423,
     424,   425,   426,     0,   427,   428,   429,   430,   431,   432,
     433,   434,     0,     0,   435,   436,   437,   438,   439,     0,
       0,   440,   441,   442,   443,   444,   445,   446,     0,   447,
       0,   449,   450,   451,   452,   453,     0,     0,   454,     0,
       0,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   664,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    94,    95,
      96,    97,    98,    99,   100,   101,     0,   102,   103,   104,
       0,     0,     0,     0,     0,     0,     0,   105,   106,     0,
     107,   108,   109,   665,   111,   112,   113,     0,   666,   667,
     668,   669,     0,   119,   120,   121,   122,     0,   123,     0,
       0,   124,   125,   670,   671,   128,     0,   129,   130,   131,
     132,     0,     0,   672,     0,   135,   136,   137,   138,   139,
     140,   673,   142,   143,   144,     0,   145,   146,   147,   148,
     149,   150,     0,   674,   152,   153,   154,     0,     0,     0,
     675,     0,     0,     0,   156,   157,   158,   159,   160,   161,
     162,   676,   677,   165,     0,   166,     0,   167,   168,   169,
     170,   171,   172,     0,   173,   174,   175,   176,   177,     0,
       0,   178,   179,   678,   181,   182,     0,   183,   184,   185,
       0,   186,   187,   188,     0,   189,   190,   191,   192,     0,
     194,   195,   196,   197,   198,     0,     0,   200,     0,   201,
     202,   679,   204,     0,   205,     0,   206,   680,     0,   681,
     209,   210,   211,   682,   213,     0,   214,     0,     0,     0,
     217,     0,   218,   219,   220,   221,   222,   683,   224,   684,
     226,   227,   228,   229,     0,   230,   231,   232,   233,   234,
     235,     0,   236,   685,     0,   239,   240,   241,   242,   243,
     686,   687,     0,   688,     0,   247,   689,   690,   250,   691,
     252,   253,   254,   255,   256,   257,     0,     0,   258,   692,
     260,   693,     0,   262,   263,   264,     0,     0,   265,   266,
     267,   268,   269,   694,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   695,   696,   697,   292,   293,   294,     0,     0,
     296,   297,   698,   299,     0,     0,   301,   699,   303,   304,
     305,     0,   306,   307,     0,     0,   308,   309,   310,     0,
       0,   311,     0,   700,   314,   701,     0,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,     0,   327,   328,
       0,   330,   331,     0,   333,   334,   335,     0,   336,   337,
     338,   339,   340,   341,     0,   342,   343,   344,   702,   346,
     347,   348,   349,     0,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,     0,     0,   362,   363,
     703,   365,   366,   367,   704,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,     0,   380,   381,   382,
     383,   384,     0,   385,   705,   387,   388,   389,   706,   391,
     392,   707,   394,     0,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   708,   408,     0,   410,
       0,   411,   412,     0,   413,   709,   415,   416,   417,   418,
     419,     0,   710,   711,     0,     0,   422,   423,     0,   425,
       0,     0,   427,   428,   712,   430,   431,   432,   433,   434,
       0,     0,   435,   436,   437,   438,   439,     0,     0,   440,
     441,   442,   443,   444,     0,   713,     0,   447,   714,   449,
     450,   451,   452,   453,     0,     0,   454,     0,     0,   455,
     456,   457,   458,   459,   460,   664,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   472,   473,   474,   475,
       0,    94,    95,    96,    97,    98,    99,   100,   101,     0,
     102,   103,   104,     0,     0,     0,     0,     0,     0,     0,
     105,   106,     0,   107,   108,   109,   665,   111,   112,   113,
       0,   666,   667,   668,   669,     0,   119,   120,   121,   122,
       0,   123,     0,     0,   124,   125,   670,   671,   128,     0,
     129,   130,   131,   132,     0,     0,   672,     0,   135,   136,
     137,   138,   139,   140,   673,   142,   143,   144,     0,   145,
     146,   147,   148,   149,   150,     0,   674,   152,   153,   154,
       0,     0,     0,   675,     0,     0,     0,   156,   157,   158,
     159,   160,   161,   162,   676,   677,   165,     0,   166,     0,
     167,   168,   169,   170,   171,   172,     0,   173,   174,   175,
     176,   177,     0,     0,   178,   179,   678,   181,   182,     0,
     183,   184,   185,     0,   186,   187,   188,     0,   189,   190,
     191,   192,     0,   194,   195,   196,   197,   198,     0,     0,
     200,     0,   201,   202,   679,   204,     0,   205,     0,   206,
     680,     0,   681,   209,   210,   211,   682,   213,     0,   214,
       0,     0,     0,   217,     0,   218,   219,   220,   221,   222,
     223,   224,   684,   226,   227,   228,   229,     0,   230,   231,
     232,   233,   234,   235,     0,   236,   685,     0,   239,   240,
     241,   242,   243,   686,   687,     0,   688,     0,   247,   689,
     690,   250,   691,   252,   253,   254,   255,   256,   257,     0,
       0,   258,   692,   260,   693,     0,   262,   263,   264,     0,
       0,   265,   266,   267,   268,   269,   694,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   695,   696,   697,   292,   293,
     294,     0,     0,   296,   297,   698,   299,     0,     0,   301,
     699,   303,   304,   305,     0,   306,   307,     0,     0,   308,
     309,   310,     0,     0,   311,     0,   700,   314,   701,     0,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
       0,   327,   328,     0,   330,   331,     0,   333,   334,   335,
       0,   336,   337,   338,   339,   340,   341,     0,   342,   343,
     344,   702,   346,   347,   348,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,     0,
       0,   362,   363,   703,   365,   366,   367,   704,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,     0,
     380,   381,   382,   383,   384,     0,   385,   705,   387,   388,
     389,   706,   391,   392,   707,   394,     0,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   708,
     408,     0,   410,     0,   411,   412,     0,   413,   709,   415,
     416,   417,   418,   419,     0,   710,   711,     0,     0,   422,
     423,     0,   425,     0,     0,   427,   428,   712,   430,   431,
     432,   433,   434,     0,     0,   435,   436,   437,   438,   439,
       0,     0,   440,   441,   442,   443,   444,     0,   713,     0,
     447,   714,   449,   450,   451,   452,   453,     0,     0,   454,
       0,     0,   455,   456,   457,   458,   459,   460,  2419,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   472,
     473,   474,   475,     0,    94,    95,    96,    97,    98,    99,
     100,   101,     0,   102,   103,   104,     0,     0,     0,     0,
       0,     0,     0,   105,   106,     0,   107,   108,   109,  2420,
     111,   112,   113,     0,   666,  2421,   668,   669,     0,   119,
     120,   121,   122,     0,   123,     0,     0,   124,   125,   670,
     671,   128,     0,   129,   130,   131,   132,     0,     0,  2422,
       0,   135,   136,   137,   138,   139,   140,  2423,   142,   143,
     144,     0,   145,   146,   147,   148,   149,   150,     0,  2424,
     152,   153,   154,     0,     0,     0,  2425,     0,     0,     0,
     156,   157,   158,   159,   160,   161,   162,   676,   677,   165,
       0,   166,     0,   167,   168,   169,   170,   171,   172,     0,
     173,   174,   175,   176,   177,     0,     0,   178,   179,   678,
     181,   182,     0,   183,   184,   185,     0,   186,   187,   188,
       0,   189,   190,   191,   192,     0,   194,   195,   196,   197,
     198,     0,     0,   200,     0,   201,   202,   679,   204,     0,
     205,     0,   206,  2426,     0,  2427,   209,   210,   211,  2428,
     213,     0,   214,     0,     0,     0,   217,     0,   218,   219,
     220,   221,   222,   223,   224,  2429,   226,   227,   228,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,  2430,
       0,   239,   240,   241,   242,   243,   686,   687,     0,   688,
       0,   247,  2431,  2432,   250,  2433,   252,   253,   254,   255,
     256,   257,     0,     0,   258,  2434,   260,  2435,     0,   262,
     263,   264,     0,     0,   265,   266,   267,   268,   269,  2633,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   695,  2437,
     697,   292,   293,   294,     0,     0,   296,   297,  2439,   299,
       0,     0,   301,   699,   303,   304,   305,     0,   306,   307,
       0,     0,   308,   309,   310,     0,     0,   311,     0,  2441,
     314,  2442,     0,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,     0,   327,   328,     0,   330,   331,     0,
     333,   334,   335,     0,   336,   337,   338,   339,   340,   341,
       0,   342,   343,   344,   702,   346,   347,   348,   349,     0,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,     0,     0,   362,   363,  2443,   365,   366,   367,
       0,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,     0,   380,   381,   382,   383,   384,     0,   385,
       0,   387,   388,   389,  2445,   391,   392,   707,   394,     0,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,  2634,   408,     0,   410,     0,   411,   412,     0,
     413,  2447,   415,   416,   417,   418,   419,     0,   710,   711,
       0,     0,   422,   423,     0,   425,     0,     0,   427,   428,
    2448,   430,   431,   432,   433,   434,     0,     0,   435,   436,
     437,   438,   439,     0,     0,   440,   441,   442,   443,   444,
       0,   713,     0,   447,  2449,   449,   450,   451,   452,   453,
       0,     0,   454,     0,     0,   455,   456,   457,   458,   459,
     460,   664,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   472,   473,   474,   475,     0,    94,    95,    96,
      97,    98,    99,   100,   101,     0,   102,   103,   104,     0,
       0,     0,     0,     0,     0,     0,   105,   106,     0,   107,
     108,   109,   665,   111,   112,   113,     0,   666,   667,   668,
     669,     0,   119,   120,   121,   122,     0,   123,     0,     0,
     124,   125,   670,   671,   128,     0,   129,   130,   131,   132,
       0,     0,   672,     0,   135,   136,   137,   138,   139,   140,
     673,   142,   143,   144,     0,   145,   146,   147,   148,   149,
     150,     0,   674,   152,   153,   154,     0,     0,     0,   675,
       0,     0,     0,   156,   157,   158,   159,   160,   161,   162,
     676,   677,   165,     0,   166,     0,   167,   168,   169,   170,
     171,   172,     0,   173,   174,   175,   176,   177,     0,     0,
     178,   179,   678,   181,   182,     0,   183,   184,   185,     0,
     186,   187,   188,     0,   189,   190,   191,   192,     0,   194,
     195,   196,   197,   198,     0,     0,   200,     0,   201,   202,
     679,   204,     0,   205,     0,   206,   680,     0,   681,   209,
     210,   211,   682,   213,     0,   214,     0,     0,     0,   217,
       0,   218,   219,   220,   221,   222,   223,   224,   684,   226,
     227,   228,   229,     0,   230,   231,   232,   233,   234,   235,
       0,   236,   685,     0,   239,   240,   241,   242,   243,   686,
     687,     0,   688,     0,   247,   689,   690,   250,   691,   252,
     253,   254,   255,   256,   257,     0,     0,   258,   692,   260,
     693,     0,   262,   263,   264,     0,     0,   265,   266,   267,
     268,   269,     0,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   695,   696,   697,   292,   293,   294,     0,     0,   296,
     297,   698,   299,     0,     0,   301,   699,   303,   304,   305,
       0,   306,   307,     0,     0,   308,   309,   310,     0,     0,
     311,     0,   700,   314,   701,     0,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,     0,   327,   328,     0,
     330,   331,     0,   333,   334,   335,     0,   336,   337,   338,
     339,   340,   341,     0,   342,   343,   344,   702,   346,   347,
     348,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,     0,     0,   362,   363,   703,
     365,   366,   367,     0,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,     0,   380,   381,   382,   383,
     384,     0,   385,     0,   387,   388,   389,   706,   391,   392,
     707,   394,     0,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,     0,   408,     0,   410,     0,
     411,   412,     0,   413,   709,   415,   416,   417,   418,   419,
       0,   710,   711,     0,     0,   422,   423,     0,   425,     0,
       0,   427,   428,   712,   430,   431,   432,   433,   434,     0,
       0,   435,   436,   437,   438,   439,     0,     0,   440,   441,
     442,   443,   444,     0,   713,     0,   447,   714,   449,   450,
     451,   452,   453,     0,     0,   454,     0,     0,   455,   456,
     457,   458,   459,   460,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   472,   473,   474,   475
};

static const yytype_int16 yycheck[] =
{
       6,     6,   637,   608,   526,   535,  1003,   622,   588,   734,
     882,   493,   737,     0,    59,   803,   526,  1005,   978,   583,
     705,     0,  1284,   629,  1180,   533,   651,   803,  1358,  1746,
     883,     0,    36,     0,     0,    16,  1397,    16,  1775,  1400,
     711,  1778,     6,    30,   983,  1662,   528,  1150,  1150,   885,
      61,  1150,  1821,   980,  1150,  2196,     0,    31,  1044,   631,
    1827,   974,  1829,   534,    61,   901,   811,   622,  2169,   624,
    2169,   626,    16,   535,  1641,  1642,  1185,   529,   914,  1646,
    1766,  1008,     0,  1818,  2198,  2210,    30,  2217,  1314,  1315,
    1704,    21,    36,    80,    35,  1865,  1866,  1867,     0,  1880,
    2082,  2027,   526,    11,    50,     5,   540,  2075,   670,   671,
       5,    87,     9,    89,     5,    91,    90,    61,  1742,     5,
    1687,  1688,     5,  1366,    73,     5,    58,    13,    14,     9,
      67,    58,     5,  1757,   642,   697,    80,  2480,  1151,    40,
      13,    14,     5,   169,     0,     5,   922,  1265,     5,  1418,
      13,    14,  2495,     5,     5,     5,    13,    14,   605,  1894,
       5,   741,    13,    14,     9,   117,     5,  1416,     5,     5,
       5,     5,     5,     5,  2492,   145,   605,    83,   115,     3,
     170,     3,     4,     5,    13,    14,    40,     9,  2546,   187,
     107,    93,  2637,  2568,   137,   705,  2476,     4,  1279,   870,
      20,    21,     9,    75,  1279,    11,   122,    31,    32,   169,
     171,    27,    58,     9,    86,    27,   992,   120,    34,   995,
     996,   127,    34,  2013,  2582,   307,  1961,  1962,    58,  2081,
    2107,   120,    27,    48,   307,    41,   173,    93,   285,    34,
    2736,  2406,   271,   213,    75,   283,    59,   291,     4,   222,
     222,   115,   291,     9,    67,    86,  2591,   170,  2775,   355,
      11,   120,    67,  1279,   376,    37,  2670,    73,   830,   831,
    2844,  1016,   274,   803,   356,   115,   135,  2612,  1023,    27,
     810,   705,   243,    68,   107,   161,  2458,    11,   367,   242,
     159,   159,    11,   115,   856,   268,   268,   417,   108,   403,
      27,   881,   812,   346,   439,   208,   991,   486,   117,     5,
    2973,   327,  2670,  2656,   677,   459,   439,    41,   497,  2089,
      24,   291,   886,   495,   486,   404,    30,   499,   461,    30,
      75,   374,  2707,   270,   438,   806,   699,   499,   275,   483,
     356,    86,   462,  2444,   168,  2327,   170,   187,  2489,    73,
     483,   915,   124,    54,    73,   328,  2873,   929,  3021,   174,
     498,   166,   497,   501,   233,   233,   445,   730,  2336,  2138,
    1984,   332,  2340,  2487,   497,   190,    80,  2951,   942,   381,
     195,   318,   130,   285,  2121,   497,    13,    14,   812,   415,
     303,   267,   214,   973,   924,   925,   302,   334,   497,   130,
    2135,   497,  2137,   130,   377,   377,   189,   368,   437,  2905,
     492,   275,   922,   282,   236,   347,  1288,   232,   497,   492,
     347,  2756,    11,   236,   209,  1992,  1993,  1994,  1995,   285,
     270,  1998,  1999,  2000,  2001,  2002,  2003,  2004,  2005,  2006,
    2007,  2606,  1704,   404,  1049,   268,   348,  2805,    23,  2073,
     497,  2075,    41,  2970,    29,   415,  2774,   501,   317,   497,
     486,   431,   501,  2635,   437,   437,   275,   380,   495,  2259,
      58,  2916,   499,   499,  2326,  1556,  1557,  1558,  1438,   842,
    1555,   991,   435,  2841,    73,  2052,  2053,   404,   108,   441,
     451,  2771,   348,   945,  1279,   432,  2373,   860,   485,   497,
     401,   347,   439,   409,   938,  1518,   485,   497,  1494,  2244,
     486,  2886,   455,   318,  1783,  1777,   485,   347,   485,   485,
     526,  2646,  1748,   439,   971,  1160,  1769,  1738,  1739,   535,
    2934,   535,  2875,  1782,   437,  1523,  2637,   164,  2637,   270,
    1556,   485,   971,   415,   497,  1151,   495,   401,   437,   280,
     499,   497,   130,   448,   535,   534,  2874,   459,   564,   565,
     135,   461,   345,   608,   379,  2547,   577,   991,   384,   501,
      31,    32,   384,    11,   501,    75,  2934,     0,   461,   106,
     577,  1986,   588,   483,   415,   493,    86,  2555,   242,   384,
     534,   535,  2560,  1173,  2520,  2563,   498,   497,   500,   496,
     483,   163,   497,   459,   580,   586,   497,  1593,  2389,  2014,
     597,   497,  1237,  2382,   497,   545,  1361,   497,   597,  1181,
    1182,   627,   628,   629,   497,   449,   600,   432,   597,  2396,
     597,   597,    93,   577,   497,   495,   612,   497,  1756,   499,
     497,   449,   498,   332,   500,   497,   497,   497,   589,  1255,
    2780,   147,   497,   597,  2779,   501,   500,  1179,   497,  2773,
     497,   497,   497,   497,   497,   497,   488,   489,   497,  1179,
    1180,  2139,  1194,     4,   650,   651,   652,   653,     9,   597,
     268,   488,   489,    23,  1194,  2371,   497,   493,  1268,   161,
    1270,  1467,   488,   489,  1274,   391,   392,  1269,   501,   705,
     196,  1477,   280,   459,  1480,  2475,   360,  1287,   408,  1239,
     410,    23,  2336,   492,   289,   404,  2340,    29,  1324,   118,
     499,   248,  1984,   543,   342,   545,   546,   483,  1236,   256,
    2871,  1311,   488,   489,  2702,   741,  1300,  1309,  1310,   490,
     491,   492,   493,  2478,   198,  1227,  1228,   118,   568,    11,
     115,   313,  1234,   420,   226,  1179,  1180,  2225,  1364,   347,
     175,   498,   451,  2377,   501,   340,  2880,  1238,   404,   344,
    1194,  1556,  1557,   254,   255,   242,   249,  1239,  1230,    41,
       4,   435,   492,  1355,  1529,     9,   374,  2928,   451,   499,
    1578,  1363,   191,  1365,   332,   135,  1318,   803,     4,   374,
      64,    65,  1578,     9,   810,   811,   812,   498,  1318,  2035,
     501,    73,  1921,  1538,     4,  2916,  1669,  2916,  1927,     9,
     191,   236,   828,   135,  2593,    13,    14,   806,   145,    23,
     368,  1667,    23,   242,  1559,    29,  1561,  1750,    29,  1564,
      11,   270,   159,   497,    15,  1327,   275,   164,  1463,  1455,
     363,   857,    23,  2064,  2065,  2066,  2067,  1845,   149,  1731,
      13,    14,   806,    34,    35,   149,   404,   442,    23,   461,
     332,   877,   878,   879,    29,   881,   882,  1654,   882,  1656,
    1657,  1436,  1868,   364,   365,  1490,  1491,  1492,  3002,    13,
      14,   483,  2048,   360,  1318,   497,   213,   326,   461,   905,
     844,   490,   491,   492,   493,   497,   367,  2169,  1463,     5,
      27,   498,  1518,   451,   501,   497,   233,    88,   924,   925,
     483,   408,  2546,   410,   242,  1447,  1853,  1482,   459,   480,
     461,  2555,  1487,   298,   497,  1771,  2560,  1447,   882,  2563,
     242,   135,   404,   404,   135,   956,   957,  2514,   959,   289,
     926,   360,   958,    13,    14,  1535,   962,   963,  2582,   956,
     957,    78,   959,    13,    14,   282,  1905,   973,   435,   219,
      87,  1910,  2741,   499,   291,   951,   950,   289,   498,  2746,
     135,   501,   285,   803,   445,   991,    13,    14,   449,   451,
     810,  1473,   408,   408,   410,   410,  1478,   130,   459,   116,
     490,   977,   367,  1511,   344,   498,   346,   526,   501,   170,
    1016,   242,   956,   957,   990,   959,     8,  1023,   498,    11,
     435,   501,   483,  1447,   157,  1583,   435,   480,  1550,  1587,
     497,  1589,   344,  1007,   374,  1011,   497,  2604,  1044,   404,
    1550,   501,   360,   204,   566,   567,  2670,   569,  1578,    41,
     488,   489,   490,   491,   492,   493,    48,   130,   360,   220,
     168,  1591,   374,   495,   408,   497,   410,   499,   888,   230,
     187,   497,  2689,  1595,    93,  1655,   367,   897,  2702,   498,
     445,    73,   199,   367,   157,  1595,   498,   498,   497,   501,
    2707,   911,   117,   169,   459,   289,  2199,  2199,   289,  1824,
    2199,  1826,   922,  2199,   924,   925,   498,  2674,   498,   501,
     215,   501,  1692,   404,   431,  2377,   497,   435,   483,   159,
     404,    54,    23,  2840,   164,  2135,  1550,  2137,    29,   360,
     442,   480,   497,   435,   289,    23,   602,   270,   604,  1744,
     498,    29,   275,   501,   219,  1151,   340,   280,  2304,   340,
     344,   143,  2149,   344,   445,  2027,   498,   498,   340,   501,
     501,   445,  2150,   198,  1952,   159,   498,  1173,   459,   501,
     164,  1595,   150,  1179,  1180,   459,  2136,   202,  1154,   497,
     374,  2805,   174,   374,   498,   340,   705,   501,  1194,   344,
     351,   150,   483,   233,  2191,   497,   150,   498,   190,   483,
     501,  2818,   275,   195,   435,    36,   497,   280,  2341,  2148,
    2343,  2150,   498,   497,   150,  2952,  2953,  2841,  2935,   374,
     498,   497,  2991,   501,    55,   270,   488,   489,   490,   491,
     492,   493,     5,  1239,   135,     8,   499,  2954,    36,   233,
     232,    14,   282,   268,   451,   270,    82,   135,   442,  1255,
     463,   442,    25,  1888,  1925,  1926,    29,   498,  1239,  1238,
     501,  1237,  1268,   448,  1270,   497,   497,  1273,  1274,  2105,
     497,  1896,   314,   390,  3011,   106,   393,  1283,  1265,  1285,
    1286,  1287,  1288,  1289,  1290,  1291,  1265,   442,   282,   422,
      13,    14,   175,   812,  1238,   287,  1265,   150,  1265,  1265,
     433,   498,   497,  3020,   501,  1311,   498,  1313,  2345,   501,
    2934,  2348,  1318,  1319,  1320,  1321,  1322,  1323,  1324,    13,
      14,  1265,  1328,  1329,   497,   360,   498,  1333,    35,   501,
     501,  1337,   497,   368,  1340,  1341,  1342,  1343,  1344,  1345,
    1346,  1347,  1348,   285,  1950,  1351,   150,   498,   367,   422,
     501,   150,  1358,   236,     8,  1361,   150,    11,  1364,   530,
     433,  2517,    16,    17,    18,   342,   197,   498,   175,   404,
     501,   498,   404,   498,   501,  2637,   501,  1383,   498,    13,
      14,   501,  1904,  1359,   497,   404,  1330,   379,   289,   498,
      36,   198,   501,  2169,  1904,    94,    13,    14,  1404,  2729,
    1381,   289,  1389,   497,  1380,     8,  1382,   290,    11,  1415,
    1416,    13,    14,    16,    17,    18,   451,   248,   589,    13,
      14,   231,  1952,  2383,  2412,   256,   445,   963,   498,   236,
     498,   501,   498,   501,   495,   501,     5,   268,     5,   340,
     459,  1447,  2022,   344,   497,  1389,   497,  1453,   164,  1455,
     497,  1973,   340,  1429,   498,     5,   344,   501,  2030,  1279,
      13,    14,  1944,  1973,   483,   185,   186,   497,   299,  1991,
     298,   170,   991,   374,   498,    13,    14,   501,   497,  2332,
    1904,  1991,   497,   290,    13,    14,   374,   497,  1494,   481,
     497,  1497,  1498,  2346,  1500,  2017,   488,   489,   490,   491,
     492,   493,  2024,    13,    14,   204,    94,  2017,    13,    14,
     497,  2236,  1518,     5,  2024,   346,    13,    14,   497,  2675,
       5,   220,  2086,  1529,   497,   408,   497,   410,   497,  1535,
     497,   230,  1508,  1509,   254,   255,   497,   368,  2048,   367,
    1527,   442,  2114,     5,  1550,    13,    14,   497,  2909,  1973,
    2911,  1371,   435,   360,   442,    13,    14,   388,    13,    14,
      13,    14,  2168,   526,  2170,   264,   497,  1991,   175,    13,
      14,   497,  1578,   355,   356,   497,   404,   355,   356,  2184,
     258,   259,   170,  1527,   497,  1591,   285,  1593,   526,  1595,
     146,   198,   195,  2017,  1600,   364,   365,   355,   356,  1605,
    2024,   408,     9,   410,   355,   356,   497,   296,   924,   925,
     460,   501,  2237,    97,   217,   215,   204,   445,   498,   426,
     501,    36,   374,   164,  2048,   432,  2987,  2403,   435,   236,
     282,   459,   220,   287,   164,  1641,  1642,  1643,   280,  1643,
    1646,   231,   230,   497,   364,   365,  2643,  2169,  1654,  1655,
    1656,  1657,   351,   415,  2916,   483,   497,    86,  1664,  2169,
    1179,  1180,  1668,   501,    54,  1671,   415,   498,    54,   497,
     415,   415,   261,   498,   506,  1194,   264,   415,   459,   150,
      93,  1687,  1688,   290,   287,   499,  1692,   270,  1692,   270,
    2415,  2416,  2200,   142,   497,    36,   497,   497,     8,  1643,
    1706,    11,     9,  1709,    35,  1711,    16,    17,    18,   413,
     367,  2233,   413,   415,   498,   495,   495,   415,   415,   415,
    2508,   455,    11,  2233,     8,  1731,   501,    11,   342,   497,
     496,   501,    16,    17,    18,   506,  1742,  1742,   501,   503,
     439,   413,   705,   497,   275,  2169,   415,   404,  1692,    33,
    1286,  1757,  1757,   178,   497,   160,   498,  1761,  1578,  2444,
    1736,   169,  1582,   351,   497,   439,  1710,   705,    36,  1756,
    1776,  1591,   213,   944,   501,   222,   377,  1756,  1742,   286,
    2352,   307,  1726,   307,   501,  1791,  1792,  1756,   445,  1756,
    1756,   222,   498,  1757,  2304,  2367,   270,   497,  1742,  1318,
     222,   408,   459,   410,  1810,   291,   323,   283,   451,  2233,
     497,   497,  1756,  1757,   150,   150,    36,  1761,   459,   270,
     285,  1827,  1828,  1829,    50,   432,   483,   498,   435,   495,
     484,   485,   486,   498,   488,   489,   490,   491,   492,   493,
     497,   480,     6,  2715,   480,   498,   285,    11,   498,   812,
     498,    15,   404,   498,   270,    36,    20,    21,    22,    23,
      24,  2637,  1868,    27,    36,   498,    30,    31,  1404,    95,
      34,    35,   496,   498,   812,   498,   498,   498,   169,   498,
    2304,   484,   485,   486,   499,   488,   489,   490,   491,   492,
     493,   501,  2414,   498,   498,   121,   480,   169,  1904,   498,
     498,   498,   498,   498,  2414,   498,   497,   217,  1914,  1885,
     497,   415,   497,   139,   153,   497,    80,   143,   285,  1895,
    1896,  1897,   456,    87,    88,    89,    90,    91,  1447,   456,
     445,   501,   486,   217,  2444,   482,   286,   286,   286,   165,
    1916,   437,   168,   501,  1950,   241,  1952,   270,   415,   497,
       8,   150,   198,    11,   150,   289,   150,   183,    16,    17,
      18,  1948,   277,   415,  1970,   415,   277,  1973,   496,   415,
    1946,    36,   415,  1979,   497,    33,  1982,   287,  2508,  1985,
     498,  2969,   342,   283,   498,  1991,  1992,  1993,  1994,  1995,
    2414,   285,  1998,  1999,  2000,  2001,  2002,  2003,  2004,  2005,
    2006,  2007,   501,   287,  1948,  2011,  2012,  2517,    36,  2015,
    2882,  2017,   150,  1833,   459,  2060,  2022,   498,  2024,   496,
    2444,  2027,   150,  2027,   496,   275,   141,   169,   991,    11,
    2036,  1550,   164,  2039,   498,  2041,   169,   498,   498,   498,
     295,   497,  2048,  2049,   501,   456,  2052,  2053,   404,   275,
     498,  2057,  2058,   991,  2058,   169,   498,   283,  1878,   483,
    1231,   501,  1233,   498,   498,   178,   348,  2073,  2073,  2075,
    2075,  2075,   444,  1893,    84,   286,  1595,   497,   150,   498,
     501,  2087,   173,  2027,   426,   497,    36,   501,   498,   145,
      79,  2097,   498,  2517,  2070,  2071,  2072,   498,   497,   497,
     326,   498,   439,   159,   496,  1641,  1642,  2113,   164,  2073,
    1646,  2075,   501,   498,  2058,  2637,   169,   497,   501,   498,
    2602,   498,  2757,   498,   498,     8,   497,  2637,   498,  2073,
     406,  2075,  1952,    16,    17,    18,  2742,  1957,  2863,  1959,
    2916,   220,   497,  1963,  1964,   294,   220,   292,    54,   182,
     497,  1687,  1688,  2129,   498,   498,   486,   213,  2164,   217,
     498,   459,  2168,  2169,  2170,  2675,   200,   188,   275,   275,
     499,   499,   499,   499,   484,   485,   486,   233,   488,   489,
     490,   491,   492,   493,  2706,   499,   499,  2709,   415,   486,
     499,   499,   415,   499,   499,   499,  2706,   499,  2803,  2709,
     484,   485,   486,   498,   488,   489,   490,   491,   492,   493,
    2197,   499,  2847,  2637,   499,    36,  1179,  1180,   499,   499,
     499,   499,   499,   270,   499,  2201,   282,  2233,   499,   287,
     499,  1194,   499,   499,  2221,   291,  2223,   499,   499,   499,
     499,  1179,  1180,   497,  2250,   107,  2826,   459,  2828,   285,
     497,  2675,    36,  2197,   169,   497,  1194,   497,   220,   497,
     458,  2237,    86,   131,   501,   498,   334,   497,  1439,   497,
     222,    81,   115,    36,   150,    73,   498,  2221,  1449,  2223,
    1451,  2763,  2706,  1454,   122,  2709,   150,    36,   498,  1460,
     356,  1462,  2298,  2299,   356,   304,    36,  2303,  2304,   501,
     497,   325,  2308,  1474,   497,  2311,  2312,  2922,  1479,  2915,
    2316,   498,  1483,  1484,  1485,  1486,    73,  1488,  1489,   497,
     497,   497,   486,   444,    36,   426,   490,   187,   439,   493,
    2336,  2336,   497,    67,  2340,  2340,    67,   501,    54,   288,
     497,   501,   498,  2319,  2320,  2321,  2322,   497,    36,  2169,
     439,   374,   486,   275,   246,  1318,  2362,   497,    36,   426,
    2842,   497,   288,   288,   528,   529,   530,   497,   358,   498,
     268,   498,  2336,   498,  2194,   431,  2340,  2364,  2365,   498,
    1318,   545,   285,     9,   341,  1904,   498,   497,   200,   498,
    2396,   285,  2336,   498,  2916,   285,  2340,   355,   497,  2405,
     564,   565,   566,   567,   287,   569,  2916,   453,  2414,   120,
     437,    33,     9,    22,   498,   597,   580,  2151,  1461,  1822,
    2364,  2365,  2164,  2111,  2366,   589,   484,   485,   486,  2841,
     488,   489,   490,   491,   492,   493,   600,  2578,  2444,   495,
    2912,  2206,   498,   499,  2918,  2408,  2995,  2749,   612,  2968,
    2955,  2658,  1816,   978,  1973,  1828,  1992,  1993,  1994,  1995,
    2915,  2211,  1998,  1999,  2000,  2001,  2002,  2003,  2004,  2005,
    2006,  2007,  1991,  2966,  2168,  1813,  2913,  1227,  1884,  1950,
    2508,  2194,  1776,   916,  1447,  1432,   650,   651,   652,   653,
     944,  1179,  2916,   966,  2815,   965,  2836,  2950,  2017,  1791,
    1404,  2091,  2508,  2490,  2895,  2024,  2830,  2728,  2514,  1447,
    2358,  2517,  1431,    36,  2520,  1757,  2052,  2053,  2075,    36,
    2703,  2342,  2805,  2529,  2530,  2327,  2073,  2533,  2804,  2048,
     968,  2822,    55,  2823,  2574,  2899,  2898,  2938,    55,  2359,
    2546,  2546,  1279,  1279,  1279,  1356,  2490,  1279,  1669,  2555,
    2555,  1777,  1270,  1710,  2560,  2560,  1500,  2563,  2563,  1707,
    1601,  2362,   565,  1889,  2570,  2571,  1745,  2090,  2797,  1239,
    1591,   526,  1381,  2112,   950,    -1,  2582,  2582,  2584,    -1,
     526,    -1,  2546,   106,    -1,  1382,    -1,  1550,    -1,   106,
      -1,  2555,    -1,    -1,    -1,    -1,  2560,    -1,  2604,  2563,
      -1,   484,   485,   486,    -1,   488,   489,   490,   491,   492,
     493,  2555,  1550,    -1,    -1,    -1,  2560,    -1,  2582,  2563,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      23,  2637,  1595,    -1,    -1,  2611,    29,    -1,    -1,    -1,
      -1,    -1,    -1,    36,    -1,     8,    -1,    -1,    11,    -1,
    2169,    -1,   816,    16,    17,    18,   173,  1595,    -1,    -1,
      -1,  2648,    55,    -1,  2670,  2670,  2486,    -1,  2674,  2675,
      33,    -1,    -1,  2649,   197,    -1,    -1,    -1,    -1,    -1,
     197,    -1,    -1,    -1,  2671,    -1,    -1,    -1,  2508,    -1,
      -1,  2667,  2698,    -1,    -1,    -1,  2702,  2702,    -1,    -1,
    2706,    -1,    -1,  2709,  2648,    -1,  2670,    -1,    -1,  2715,
      -1,  2715,    -1,   106,  2233,    -1,    -1,    -1,    -1,   883,
      -1,    -1,    -1,  2729,    -1,   248,  2732,  2671,    -1,    -1,
      -1,   248,    -1,   256,    -1,    -1,  2742,  1908,  2702,   256,
    2746,  2747,   135,    -1,    -1,   268,    -1,    -1,    -1,    -1,
     705,   268,    -1,  2573,    -1,    -1,    -1,    -1,  2702,   705,
      -1,    -1,   926,    -1,  2740,    -1,    -1,    -1,    -1,    -1,
      -1,  2715,     8,    -1,    -1,    11,   299,    -1,    -1,    -1,
     944,   945,   299,    -1,    -1,  2304,   950,   951,   952,    -1,
      -1,  2778,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2805,
    2805,  2777,    -1,    -1,   197,    41,    -1,    -1,    -1,    -1,
      -1,    -1,    48,   977,   978,    -1,    -1,  2637,    -1,    -1,
    2826,    -1,  2828,   346,  2830,    -1,   990,    -1,  2834,   346,
      -1,    -1,    -1,    -1,  2778,  2841,  2841,    73,    -1,    -1,
      -1,  2805,     3,  1007,     5,   368,    -1,  1011,    -1,    -1,
    2837,   368,    -1,    -1,   217,   248,  2862,   812,    -1,    -1,
      -1,    -1,    -1,   256,    -1,   388,   812,    -1,    -1,    -1,
      -1,   388,    -1,    -1,    -1,   268,  2882,  2841,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2895,
      -1,    -1,    -1,  2837,    -1,  2414,   289,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   299,   143,    -1,  2915,
    2916,    -1,    -1,  2919,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   287,  2444,    -1,    -1,  2934,  2934,
      -1,  2937,  2938,    -1,    -1,    -1,    -1,    -1,   174,    -1,
    2927,  1904,    -1,    -1,    -1,    -1,    -1,   340,   109,   110,
      -1,   344,  2772,   346,   190,     0,    -1,    -1,    -1,   195,
    2131,    -1,    -1,    -1,    -1,    -1,  1904,  2973,    67,    -1,
    2934,    -1,    -1,    -1,    73,   368,    -1,    -1,  2514,    -1,
      -1,   374,  1146,  2927,    -1,  2156,    -1,    86,    -1,    -1,
    1154,    -1,    -1,    -1,    -1,   388,   232,    -1,  2517,  1163,
    2171,  2172,  2173,  2174,  2175,  2176,  2177,  2178,  2179,  2180,
    1973,    -1,    -1,    -1,    -1,  3021,   115,    -1,   117,    -1,
      -1,    -1,    -1,    -1,   185,   186,    -1,    -1,  1991,    -1,
      -1,    -1,  1196,    -1,    -1,  1973,   991,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   991,    -1,    -1,    93,   442,
      -1,   287,    -1,  1991,  2017,    -1,    -1,    -1,    -1,    -1,
      -1,  2024,    -1,  1227,  1228,    -1,  1230,  1231,  2604,  1233,
    1234,    -1,    -1,  1237,   173,    -1,    -1,    -1,    -1,  2017,
      -1,    -1,    -1,    -1,    -1,  2048,  2024,    -1,    -1,   250,
     251,   252,   253,   254,   255,    -1,  2916,   258,   259,    -1,
     145,    -1,    -1,   202,    -1,    -1,    -1,    -1,    -1,    -1,
    2048,    -1,    -1,    -1,   159,    -1,    -1,  2288,  2637,   164,
    1284,   484,   485,   486,   169,   488,   489,   490,   491,   492,
     493,  1295,    -1,   178,    -1,    -1,    -1,   182,  2674,    -1,
      -1,    -1,    -1,   379,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,     8,    -1,    -1,    11,  2675,    -1,    -1,    -1,
      16,    17,    18,  1327,    -1,    -1,    -1,    -1,   213,    -1,
      -1,   270,    -1,    -1,    -1,    -1,   275,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    41,    -1,  2706,   233,    -1,
    2709,    -1,    48,    -1,  1358,  1359,    -1,    -1,    -1,     8,
      -1,    -1,    11,   364,   365,    -1,  2169,    16,    17,    18,
      -1,     0,    -1,    -1,    -1,    -1,  1380,    73,  1382,   318,
      -1,    -1,    -1,    -1,  1179,  1180,    -1,  1391,    -1,  1393,
      -1,  2169,    -1,  1179,  1180,   334,    -1,   282,    -1,  1194,
     285,    -1,    -1,    -1,    -1,   481,   291,    -1,  1194,    -1,
      -1,    -1,   488,   489,   490,   491,   492,   493,    -1,    -1,
      -1,     0,    -1,    -1,    -1,  1429,    -1,    -1,    -1,    -1,
    2233,    -1,    -1,    -1,  1438,  1439,    -1,    -1,    -1,    -1,
     325,    -1,    -1,    -1,    -1,  1449,  1450,  1451,  1452,    -1,
    1454,    -1,   109,   110,    -1,  2233,  1460,    -1,  1462,    -1,
      -1,    -1,    -1,   348,    93,    -1,    -1,    -1,    -1,  1473,
    1474,    -1,    -1,    -1,  1478,  1479,   477,   478,   174,  1483,
    1484,  1485,  1486,    -1,  1488,  1489,    -1,    -1,     8,    -1,
      -1,    11,    -1,   432,   190,    -1,    16,    17,    18,   195,
     439,  2304,    -1,    -1,  1508,  1509,  1510,    -1,    -1,    -1,
      -1,    -1,     8,    33,    93,    11,   145,    -1,    -1,   404,
      -1,  1525,    -1,  1318,    -1,    -1,  2304,    -1,   185,   186,
     159,    -1,  1318,    -1,    -1,   164,   232,    -1,    -1,    -1,
     169,    -1,    -1,    -1,    -1,    41,   431,    -1,    -1,   178,
      -1,    -1,    48,   182,   439,    -1,    -1,  2916,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   145,    -1,   217,    -1,
      -1,   456,    -1,   458,   459,    -1,    -1,    73,    -1,    -1,
     159,    -1,    -1,    -1,   213,   164,    -1,    -1,    -1,    -1,
     169,   287,  2603,   250,   251,   252,   253,   254,   255,   178,
      -1,   258,   259,   182,   233,    -1,    -1,    -1,    -1,    -1,
     495,  2414,    -1,   498,   499,   500,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2638,  2639,    -1,
      -1,    -1,    -1,    -1,   213,    -1,  2414,    -1,   287,    -1,
      -1,  2444,    -1,    -1,  2655,    -1,    -1,   143,    -1,    -1,
      -1,    -1,  1447,   282,   233,    -1,   285,    -1,  1662,    -1,
      -1,  1447,   291,    -1,    -1,  1669,  2444,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   174,    -1,
      -1,    -1,    -1,   379,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   190,    -1,   325,   217,    -1,   195,
    1704,    -1,    -1,   282,    -1,    -1,   285,   364,   365,    -1,
      -1,    -1,   291,    -1,  2517,    -1,    -1,    -1,    -1,   348,
    2731,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1736,    -1,    -1,    -1,   232,    -1,  1742,  2517,
      -1,    -1,    -1,   564,   565,    -1,   325,    -1,  2759,    -1,
      -1,    -1,    -1,  1757,    -1,  1550,    -1,  1761,    -1,    -1,
    1764,    -1,  1766,    -1,  1550,    -1,    -1,   287,    -1,   348,
      -1,    -1,    -1,    -1,    -1,   404,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   481,    -1,    -1,   484,   485,
     486,   287,   488,   489,   490,   491,   492,   493,    -1,    -1,
    1595,    -1,   431,    -1,    -1,    -1,   627,   628,    -1,  1595,
     439,    -1,    -1,    -1,  1818,    -1,    -1,    -1,    -1,    -1,
     477,   478,    -1,     8,    -1,   404,    11,   456,    -1,   458,
     459,    16,    17,    18,  2637,   484,   485,   486,    -1,   488,
     489,   490,   491,   492,   493,    -1,    -1,    -1,    33,    -1,
      -1,    -1,   431,    -1,    -1,    -1,    41,    -1,    -1,  2637,
     439,    -1,    -1,    48,    -1,    -1,   495,    -1,    -1,   498,
     499,   500,  2675,    -1,    -1,    -1,  1880,   456,    -1,   458,
     459,  1885,    -1,   379,    -1,    -1,    -1,    -1,    73,    -1,
    1894,  1895,  1896,  1897,    -1,    -1,    -1,  2675,    -1,    -1,
      -1,    -1,    -1,  2706,  1908,    -1,  2709,    -1,    -1,    -1,
      -1,    -1,  1916,    -1,    -1,    -1,   495,    -1,    -1,   498,
     499,   500,    -1,    -1,  1928,    -1,    -1,    -1,  2706,    -1,
      -1,  2709,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1944,    -1,  1946,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1961,  1962,    -1,
      -1,    -1,    -1,    -1,   484,   485,   486,    -1,   488,   489,
     490,   491,   492,   493,    -1,    -1,    -1,    -1,    -1,    -1,
    1984,    -1,    -1,    -1,    -1,   481,    -1,    -1,    -1,   174,
     811,    -1,   488,   489,   490,   491,   492,   493,    -1,    -1,
      -1,    -1,    -1,    23,    -1,   190,    -1,   828,    -1,    29,
     195,    -1,    -1,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   217,   218,    -1,    55,   857,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   232,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   877,   878,   879,    -1,
      -1,   882,    -1,    -1,    -1,    -1,  2070,  2071,  2072,  2073,
      -1,  2075,  2076,    -1,    -1,    -1,    -1,  2081,  2082,    -1,
      -1,    -1,    -1,    -1,   905,   270,   106,    -1,   273,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   287,    -1,    -1,    -1,    -1,  2111,    -1,  1904,
      -1,    -1,    -1,  2916,    -1,   135,    -1,    -1,  1904,    -1,
      -1,    -1,    -1,    -1,    -1,  2129,    -1,  2131,    -1,    -1,
      -1,  2135,  2136,  2137,    -1,  2139,    -1,   958,  2916,    -1,
      -1,   962,   963,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2156,    -1,  2158,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2171,  2172,  2173,
    2174,  2175,  2176,  2177,  2178,  2179,  2180,   197,  1973,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1973,    -1,    -1,
      -1,    -1,  2196,    -1,   379,  1016,  1991,  2201,    -1,    -1,
      -1,    -1,  1023,    -1,    -1,  1991,    -1,  2211,    -1,    -1,
       8,    -1,    -1,    11,    -1,    -1,    -1,    -1,    16,    17,
      18,  2225,  2017,  1044,    -1,    -1,    -1,    -1,   248,  2024,
      -1,  2017,    -1,  2237,    -1,    -1,   256,    -1,  2024,    -1,
    2244,    -1,    -1,    41,    -1,    -1,    -1,    -1,   268,    -1,
      48,    -1,    -1,  2048,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2048,    -1,    -1,   803,    -1,    -1,    -1,   289,
      -1,    -1,   810,    -1,    -1,    73,    -1,    -1,    -1,   299,
      -1,    -1,    -1,    -1,  2288,    -1,    -1,    -1,    -1,    -1,
    2294,    -1,    -1,    -1,    -1,    -1,   481,    -1,    -1,   484,
     485,   486,    -1,   488,   489,   490,   491,   492,   493,    -1,
      -1,    -1,    -1,  2317,    -1,  2319,  2320,  2321,  2322,    -1,
     340,    -1,  2326,  2327,   344,  2329,   346,    -1,  2332,    -1,
      -1,    -1,  2336,    -1,    -1,    -1,  2340,    -1,    -1,    -1,
      -1,    -1,  2346,    -1,    -1,    -1,    -1,    -1,   368,    -1,
      -1,    -1,    -1,    -1,   374,    -1,    -1,    -1,  2362,   897,
      -1,    -1,  2366,    -1,    -1,    -1,    -1,  2371,   388,    -1,
      -1,    -1,    -1,  2377,  2169,    -1,   174,    -1,    -1,  2383,
      -1,    -1,    -1,  2169,   922,  2389,   924,   925,    -1,    -1,
      -1,    -1,   190,    -1,    -1,    -1,    -1,   195,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2409,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   217,
     218,    -1,   442,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   232,    -1,    -1,    -1,  2233,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2233,    -1,    -1,
      -1,    -1,  1273,    -1,   992,    -1,    -1,   995,   996,    -1,
      -1,    -1,  1283,    -1,  1285,    -1,    -1,  1288,  1289,  1290,
    1291,    -1,   270,    -1,  2478,   273,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2489,    -1,    -1,    -1,   287,
      -1,    -1,  1313,    -1,    -1,    -1,    -1,  2501,  1319,  1320,
    1321,  1322,  1323,    -1,    -1,    -1,    -1,  1328,  1329,  2304,
      -1,    -1,  1333,    -1,    -1,    -1,  1337,    -1,  2304,  1340,
    1341,  1342,  1343,  1344,  1345,  1346,  1347,  1348,    -1,    -1,
    1351,    -1,    -1,  2537,    -1,    -1,    -1,  1358,    -1,    -1,
    1361,    -1,  2546,  2547,    -1,    -1,  2550,    -1,    -1,  2553,
      -1,  2555,    -1,    -1,    -1,    -1,  2560,    -1,    -1,  2563,
      -1,  2565,  1383,    -1,  2568,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2582,    -1,
      -1,   379,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1415,  1416,    -1,    -1,  2602,  2603,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2611,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2414,
      -1,    -1,    -1,    -1,     8,    -1,    -1,    11,  2414,    -1,
      -1,    -1,    -1,    -1,  2638,  2639,    -1,    -1,    -1,  1177,
      -1,    -1,    -1,    -1,    -1,  2649,    -1,  2651,    -1,  2444,
    1188,  2655,  1190,    -1,    -1,    -1,    -1,    41,  2444,    -1,
      -1,  1199,    -1,  2667,    48,    -1,  2670,    -1,    -1,    -1,
      -1,    -1,    -1,  1494,    -1,    -1,  1497,  1498,  1216,  1500,
      -1,    -1,    -1,   481,    -1,  2689,   484,   485,   486,    73,
     488,   489,   490,   491,   492,   493,    -1,    -1,  2702,    -1,
      -1,    -1,    -1,  2707,    -1,    -1,  1244,  1245,  1529,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2725,  2517,    -1,    -1,  2729,    -1,  2731,    -1,    -1,
      -1,  2517,    -1,    -1,    -1,    -1,  2740,    -1,  1276,  1277,
      -1,    -1,  1280,  1281,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2759,    -1,    -1,    -1,  2763,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1593,  2777,    -1,    -1,    -1,    -1,    -1,  1600,
      -1,    -1,    -1,    -1,  1605,    -1,    -1,    -1,    -1,    -1,
     174,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2805,    -1,    -1,    -1,    -1,   190,    -1,    -1,    -1,
    2814,   195,    -1,    -1,  2818,    -1,    -1,    -1,  2822,    -1,
      -1,    -1,  1643,    -1,    -1,     0,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1654,    -1,  1656,  1657,  2841,  2842,  2843,
    2844,    -1,  2637,  1664,    19,    -1,   898,  1668,   232,    -1,
    1671,  2637,    -1,    -1,    29,    -1,    31,    32,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2871,    -1,    -1,
      -1,    -1,    47,    -1,    -1,    -1,    -1,  1415,  1416,    -1,
    2675,    56,  2886,    -1,    -1,  1706,    -1,   939,  1709,  2675,
    1711,    -1,     8,    68,  2898,    11,    -1,    -1,    -1,    15,
      16,    17,    18,   287,    79,    -1,    -1,    -1,  2912,    -1,
      -1,  2706,    -1,    -1,  2709,    -1,    91,    33,    93,    -1,
    2706,    -1,    -1,  2709,  2928,    41,    -1,    -1,    -1,  1467,
    2934,    -1,    48,    -1,    -1,    -1,   111,    -1,    -1,  1477,
      -1,    -1,  1480,    -1,    -1,    -1,  2950,  2951,    -1,    -1,
     125,    -1,    -1,    -1,    -1,  1776,    -1,    73,    -1,     8,
     135,    -1,    11,    -1,    -1,    -1,   141,    -1,    -1,    -1,
    1791,  1792,    -1,    -1,   149,    -1,   151,   152,     8,    -1,
      -1,    11,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1810,
     165,    -1,    41,    -1,    -1,   379,  1048,    -1,    -1,    48,
      -1,    -1,    -1,  1055,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    41,    -1,  1551,  1552,    -1,    -1,    -1,    48,   194,
      -1,    -1,    -1,     8,    73,    -1,    11,    -1,    -1,    -1,
      -1,    16,    17,    18,   209,    -1,    -1,    -1,    -1,    -1,
    1578,    -1,    -1,    73,    -1,    -1,    -1,  1868,    -1,    -1,
      -1,    -1,    -1,  1591,    -1,    -1,    41,    -1,   174,    -1,
     235,    -1,    -1,    48,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   190,    -1,    -1,    -1,    -1,   195,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    73,    -1,
      -1,    -1,    -1,  1914,   143,    -1,    -1,   481,    -1,    -1,
      -1,   217,   218,    -1,   488,   489,   490,   491,   492,   493,
      -1,    -1,    -1,   143,    -1,    -1,   232,    -1,    -1,    -1,
      -1,  2916,    -1,    -1,    -1,   174,    -1,    -1,    -1,    -1,
    2916,    -1,    -1,    -1,    -1,    -1,    -1,   312,    -1,    -1,
     315,   190,    -1,    -1,   174,    -1,   195,    -1,    -1,  1970,
      -1,    -1,    -1,    -1,   270,    -1,    -1,   273,  1979,    -1,
     190,  1982,    -1,    -1,  1985,   195,    -1,    -1,    -1,   344,
      -1,   287,    -1,    -1,   290,    -1,    -1,    -1,   353,    -1,
      -1,    -1,    -1,   232,    -1,    -1,    -1,    -1,    -1,   174,
    2011,  2012,   367,    -1,  2015,    -1,    -1,    -1,    -1,   374,
      -1,    -1,   232,   378,    -1,   190,  2027,    -1,    -1,  1747,
     195,    -1,    -1,   388,    -1,  2036,    -1,    -1,  2039,  1271,
    2041,    -1,    -1,    -1,    -1,   400,    -1,    -1,  2049,   404,
    1282,    -1,   217,   218,  1286,    -1,  2057,  2058,   287,    -1,
    1292,  1293,  1294,  1781,  1782,    -1,    -1,   232,    -1,  1301,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   287,    -1,    -1,
      -1,    -1,    -1,   379,    -1,   440,  2087,    -1,    -1,    -1,
     445,    -1,    -1,    -1,    -1,    -1,  2097,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   459,    -1,     8,    -1,   273,    11,
      -1,    -1,  2113,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,     3,   287,    -1,    -1,  1357,     8,    -1,   483,    11,
      -1,    -1,    -1,    15,    16,    17,    18,    -1,    -1,    41,
      -1,    -1,   497,    -1,    -1,   500,    48,    -1,    -1,    -1,
     379,    33,    -1,    -1,    36,    -1,    -1,    -1,    -1,    41,
      -1,    -1,    -1,    -1,    -1,    -1,    48,    -1,  1400,   379,
      -1,    73,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1414,    -1,    -1,   481,    -1,  1419,   484,   485,
     486,    73,   488,   489,   490,   491,   492,   493,    -1,    -1,
      -1,    -1,    -1,    -1,  1922,   501,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   379,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   109,   110,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   143,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2250,
      -1,    -1,   481,    -1,    -1,    -1,    -1,    -1,    -1,   488,
     489,   490,   491,   492,   493,    -1,    -1,    -1,    -1,    -1,
      -1,   481,   174,    -1,    -1,    -1,    -1,    -1,   488,   489,
     490,   491,   492,   493,    -1,    -1,    -1,    -1,   190,    -1,
      -1,    -1,   174,   195,    -1,    -1,    -1,  2298,  2299,    -1,
     185,   186,  2303,    -1,    -1,    -1,    -1,  2308,   190,    -1,
    2311,  2312,    -1,   195,    -1,  2316,   481,    -1,    -1,   484,
     485,   486,    -1,   488,   489,   490,   491,   492,   493,    -1,
     232,    -1,    -1,    -1,    -1,   217,   218,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     232,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2362,    -1,    -1,    -1,   250,   251,   252,   253,   254,
     255,  1603,    -1,   258,   259,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   287,    -1,    -1,   270,    -1,
    1622,   273,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2405,   287,    -1,  1639,   290,  1641,
    1642,    -1,  1644,    -1,  1646,    -1,    -1,    -1,  1650,    -1,
      -1,  1653,    -1,    -1,    -1,    -1,  1658,    -1,    -1,  1661,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1673,    -1,    -1,    -1,  1677,  1678,  1679,  1680,  1681,
      -1,  2169,    -1,    -1,    -1,  1687,  1688,    -1,  1690,  1691,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1702,    -1,    -1,  1705,    -1,    -1,    -1,   379,    -1,   364,
     365,  1713,  1714,  1715,  1716,  1717,  1718,  1719,  1720,  1721,
    1722,    -1,    -1,    -1,    -1,    -1,    -1,   379,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2520,
      -1,    -1,  1754,    -1,    -1,    -1,    -1,    -1,  2529,  2530,
      -1,    -1,  2533,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2570,
    2571,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   481,
      -1,    -1,    -1,  2584,    -1,    -1,   488,   489,   490,   491,
     492,   493,   477,   478,    -1,    -1,    -1,    -1,    -1,   481,
      -1,    -1,   484,   485,   486,    -1,   488,   489,   490,   491,
     492,   493,   497,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,     8,    -1,    -1,    11,    -1,    -1,    -1,    15,
      16,    17,    18,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1873,  1874,  1875,    -1,    -1,    -1,    33,    -1,    -1,
      36,    -1,    -1,    -1,    -1,    41,    -1,    -1,    -1,    -1,
      -1,    -1,    48,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2403,     8,    73,    -1,    11,
    2408,    -1,    -1,    15,    16,    17,    18,  2698,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    33,    -1,    -1,  2715,    -1,    -1,    -1,    -1,    41,
      -1,    -1,    -1,    -1,    -1,    -1,    48,    -1,  2729,    -1,
      -1,  2732,  2450,  2451,    -1,    -1,    -1,  1969,    -1,    -1,
      -1,    -1,    -1,  1975,    -1,    -1,  2747,    -1,    -1,    -1,
      -1,    73,    -1,    -1,    -1,    -1,  1988,  1989,  1990,    -1,
    1992,  1993,  1994,  1995,    -1,    -1,  1998,  1999,  2000,  2001,
    2002,  2003,  2004,  2005,  2006,  2007,  2008,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   174,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2028,    -1,    -1,  2031,
      -1,  2033,    -1,    -1,   190,  2037,  2038,    -1,    -1,   195,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2051,
    2052,  2053,  2054,    -1,  2056,    -1,    -1,    -1,    -1,  2830,
      -1,   217,   218,  2834,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   232,    -1,    -1,    -1,
      -1,    -1,   174,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2862,    -1,    -1,    -1,    -1,    -1,    -1,   190,    -1,
      -1,    -1,    -1,   195,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   270,    -1,    -1,   273,    -1,    -1,
      -1,    -1,    -1,    -1,  2895,   217,   218,    -1,    -1,    -1,
    2132,   287,    -1,    -1,   290,    -1,    -1,    -1,  2626,  2627,
     232,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2919,  2637,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,     8,    -1,    -1,    11,    -1,  2937,  2938,    15,    16,
      17,    18,    -1,    -1,    -1,    -1,    -1,    -1,   270,    -1,
      -1,   273,    -1,    -1,    -1,    -1,    33,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    41,   287,    -1,    -1,   290,    -1,
      -1,    48,  2973,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2224,   379,    -1,    -1,    73,    -1,    -1,    -1,
      21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2251,
    3021,    -1,    -1,  2255,  2256,    -1,  2258,    -1,    -1,  2261,
    2262,  2263,  2264,    -1,    -1,    -1,  2268,  2269,  2270,  2271,
    2272,  2273,  2274,  2275,  2276,  2277,  2278,  2279,    -1,    -1,
      -1,    -1,    -1,    74,    -1,    -1,    -1,   379,  2290,    -1,
      -1,    -1,    -1,    -1,    -1,  2297,    -1,    -1,  2300,    90,
    2302,    -1,    -1,    -1,  2306,    -1,    -1,  2309,  2310,    -1,
      -1,  2313,  2314,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   481,    -1,   174,   484,   485,
     486,    -1,   488,   489,   490,   491,   492,   493,    -1,    -1,
      -1,    -1,   498,   190,    -1,    -1,    -1,    -1,   195,    -1,
      -1,  2353,    -1,   144,    -1,    -1,    -1,    -1,    -1,  2361,
      -1,    -1,    -1,   154,    -1,    -1,    -1,    -1,    -1,    -1,
     217,   218,  2374,    -1,    -1,   166,    -1,    -1,    -1,    -1,
     171,    -1,    -1,    -1,    -1,   232,    -1,    -1,    -1,   481,
      -1,    -1,   484,   485,   486,    -1,   488,   489,   490,   491,
     492,   493,     8,    -1,    -1,    11,   498,   198,    -1,    15,
      16,    17,    18,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      36,    -1,    -1,   270,    -1,    -1,   273,    33,  2916,    -1,
      -1,    -1,    -1,    -1,    -1,    41,    -1,    -1,    -1,    55,
     287,    -1,    48,   290,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   243,    -1,    -1,    -1,   247,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    73,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     106,   107,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   115,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2510,    -1,
      -1,    -1,  2514,    -1,    -1,    -1,    -1,    -1,    -1,   310,
      -1,  2523,  2524,  2525,    -1,    -1,  2528,    -1,    -1,  2531,
    2532,    -1,   379,   324,  2536,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   173,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   357,    -1,   174,   360,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   368,    -1,    -1,
     371,   197,    -1,    -1,   190,    -1,    -1,    -1,    -1,   195,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   390,
      -1,    -1,  2604,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   217,   218,   404,    -1,    -1,    -1,    -1,    -1,    -1,
     411,  2623,    -1,    -1,    -1,    -1,   232,    -1,    -1,   420,
      -1,    -1,   248,    -1,   481,   426,    -1,   484,   485,   486,
     256,   488,   489,   490,   491,   492,   493,    -1,    -1,    -1,
      -1,   498,   268,    -1,   270,    -1,    -1,    -1,    -1,    -1,
     451,    -1,    -1,    -1,   270,    -1,    -1,   273,    -1,    -1,
      -1,  2673,  2674,    -1,    -1,    -1,    -1,  2679,  2680,  2681,
      -1,   287,    -1,   299,   290,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2723,  2724,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     346,    -1,    -1,    -1,    -1,    -1,  2738,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2750,    -1,
      -1,    -1,   368,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   388,   379,   390,    -1,    -1,   393,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2799,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2817,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2839,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2853,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   481,    -1,    -1,   484,   485,
     486,   497,   488,   489,   490,   491,   492,   493,    -1,    -1,
      -1,    -1,   498,    -1,    -1,    -1,    -1,    -1,  2900,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2924,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,     3,     4,     5,     6,     7,     8,
       9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2961,
      19,    20,    21,    22,    23,    24,    25,    26,    27,    28,
      29,    30,    -1,    -1,  2976,    -1,    35,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    52,    -1,    54,    55,    56,    57,    -1,
      59,    60,    61,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    74,    -1,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      89,    90,    91,    92,    -1,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,   116,    -1,   118,
     119,   120,   121,   122,   123,    -1,   125,   126,   127,   128,
     129,   130,    -1,   132,   133,   134,   135,   136,    -1,   138,
     139,   140,    -1,   142,   143,   144,    -1,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
      -1,   160,   161,   162,   163,    -1,   165,    -1,   167,   168,
      -1,   170,   171,   172,   173,   174,   175,    -1,   177,    -1,
     179,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,    -1,   196,   197,   198,
     199,   200,   201,    -1,   203,   204,   205,   206,   207,   208,
     209,   210,   211,   212,    -1,   214,    -1,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,    -1,    -1,
     229,   230,   231,   232,    -1,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,    -1,   283,   284,    -1,    -1,   287,   288,
     289,    -1,    -1,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,    -1,
     309,   310,   311,   312,   313,   314,   315,   316,   317,    -1,
     319,   320,   321,   322,   323,   324,    -1,   326,   327,   328,
     329,   330,   331,   332,   333,    -1,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,    -1,    -1,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,    -1,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,    -1,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,    -1,   402,   403,    -1,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,   414,    -1,    -1,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,    -1,    -1,   433,   434,   435,   436,   437,   438,
      -1,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,    -1,    -1,   457,    -1,
      -1,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,    -1,    -1,    -1,    -1,    -1,    -1,   488,
     489,   490,    -1,    -1,    -1,    -1,   495,    -1,   497,   498,
      -1,    -1,    -1,   502,    -1,   504,   505,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    35,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    -1,    59,    60,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,    -1,   160,   161,   162,   163,    -1,   165,
      -1,   167,   168,    -1,   170,   171,   172,   173,   174,   175,
      -1,   177,    -1,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,    -1,
     196,   197,   198,   199,   200,   201,    -1,   203,   204,   205,
     206,   207,   208,   209,   210,   211,   212,    -1,   214,    -1,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,    -1,    -1,   229,   230,   231,   232,    -1,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,    -1,   283,   284,    -1,
      -1,   287,   288,   289,    -1,    -1,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,    -1,   309,   310,   311,   312,   313,   314,   315,
     316,   317,    -1,   319,   320,   321,   322,   323,   324,    -1,
     326,   327,   328,   329,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,    -1,    -1,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,    -1,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,   414,    -1,
      -1,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,    -1,    -1,   433,   434,   435,
     436,   437,   438,    -1,   440,   441,   442,   443,   444,   445,
     446,    -1,   448,   449,   450,   451,   452,   453,   454,    -1,
      -1,   457,    -1,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,    -1,   483,    -1,    -1,
      -1,    -1,   488,   489,    -1,    -1,    -1,    -1,    -1,   495,
      -1,   497,   498,    -1,    -1,    -1,   502,    -1,   504,   505,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    35,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      -1,    54,    55,    56,    57,    -1,    59,    60,    61,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,    -1,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,    -1,   160,   161,   162,
     163,    -1,   165,    -1,   167,   168,    -1,   170,   171,   172,
     173,   174,   175,    -1,   177,    -1,   179,   180,   181,    -1,
     183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,    -1,   196,   197,   198,   199,   200,   201,    -1,
     203,   204,   205,   206,   207,   208,   209,   210,   211,   212,
      -1,   214,    -1,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,    -1,    -1,   229,   230,   231,   232,
      -1,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,    -1,
     283,   284,    -1,    -1,   287,   288,   289,    -1,    -1,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,    -1,   309,   310,   311,   312,
     313,   314,   315,   316,   317,    -1,   319,   320,   321,   322,
     323,   324,    -1,   326,   327,   328,   329,   330,   331,   332,
     333,    -1,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,    -1,    -1,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,    -1,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,   414,    -1,    -1,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,    -1,    -1,
     433,   434,   435,   436,   437,   438,    -1,   440,   441,   442,
     443,   444,   445,   446,    -1,   448,   449,   450,   451,   452,
     453,   454,    -1,    -1,   457,    -1,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,    -1,
     483,    -1,    -1,    -1,    -1,   488,   489,    -1,    -1,    -1,
      -1,    -1,   495,    -1,   497,    -1,    -1,    -1,    -1,   502,
      -1,   504,   505,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    35,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    52,    53,    54,    55,    56,    57,    -1,    59,
      60,    61,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    74,    -1,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,    -1,
     160,   161,   162,   163,    -1,   165,    -1,   167,   168,   169,
     170,   171,   172,   173,   174,   175,    -1,   177,    -1,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,    -1,   196,   197,   198,   199,
     200,   201,    -1,   203,   204,   205,   206,   207,   208,   209,
     210,   211,   212,    -1,   214,    -1,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,    -1,   228,   229,
     230,   231,   232,    -1,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,    -1,   283,   284,    -1,    -1,   287,   288,   289,
      -1,    -1,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,    -1,   309,
     310,   311,   312,   313,   314,   315,   316,   317,    -1,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,    -1,    -1,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,    -1,   402,   403,    -1,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,   414,    -1,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,    -1,    -1,   433,   434,   435,   436,   437,   438,    -1,
     440,   441,   442,   443,   444,   445,   446,    -1,   448,   449,
     450,   451,   452,   453,   454,    -1,    -1,   457,    -1,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,    -1,    -1,    -1,    -1,    -1,    -1,   488,   489,
      -1,    -1,    -1,    -1,    -1,   495,    -1,   497,    -1,    -1,
      -1,    -1,   502,    -1,   504,   505,     3,     4,     5,     6,
       7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      27,    28,    29,    30,    -1,    -1,    -1,    34,    35,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    52,    -1,    54,    55,    56,
      57,    -1,    59,    60,    61,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    74,    -1,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    89,    90,    91,    92,    -1,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
      -1,   118,   119,   120,   121,   122,   123,    -1,   125,   126,
     127,   128,   129,    -1,    -1,   132,   133,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,    -1,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,    -1,   160,   161,   162,   163,    -1,   165,    -1,
     167,   168,    -1,   170,   171,   172,   173,   174,   175,    -1,
     177,    -1,   179,   180,   181,    -1,   183,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   194,    -1,   196,
     197,   198,   199,   200,   201,    -1,   203,   204,   205,   206,
     207,   208,   209,   210,   211,   212,    -1,   214,    -1,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
      -1,    -1,   229,   230,   231,   232,    -1,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,    -1,   283,   284,    -1,    -1,
     287,   288,   289,    -1,    -1,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,    -1,   309,   310,   311,   312,   313,   314,   315,   316,
     317,    -1,   319,   320,   321,   322,   323,   324,    -1,   326,
     327,   328,   329,   330,   331,   332,   333,    -1,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
      -1,    -1,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
      -1,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,    -1,   402,   403,    -1,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,   414,    -1,    -1,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,    -1,    -1,   433,   434,   435,   436,
     437,   438,    -1,   440,   441,   442,   443,   444,   445,   446,
      -1,   448,   449,   450,   451,   452,   453,   454,    -1,    -1,
     457,    -1,    -1,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,    -1,    -1,    -1,    -1,    -1,
      -1,   488,   489,    -1,    -1,    -1,    -1,    -1,   495,    -1,
     497,    -1,    -1,    -1,    -1,   502,    -1,   504,   505,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    27,    28,    29,    30,    -1,    -1,    -1,
      -1,    35,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    -1,
      54,    55,    56,    57,    -1,    59,    60,    61,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      74,    -1,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,    -1,   160,   161,   162,   163,
      -1,   165,    -1,   167,   168,    -1,   170,   171,   172,   173,
     174,   175,    -1,   177,    -1,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,    -1,   196,   197,   198,   199,   200,   201,    -1,   203,
     204,   205,   206,   207,   208,   209,   210,   211,   212,    -1,
     214,    -1,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,    -1,    -1,   229,   230,   231,   232,    -1,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,    -1,   283,
     284,    -1,    -1,   287,   288,   289,    -1,    -1,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,    -1,   309,   310,   311,   312,   313,
     314,   315,   316,   317,    -1,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,    -1,    -1,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
      -1,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,    -1,   402,   403,
      -1,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
     414,    -1,    -1,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,    -1,    -1,   433,
     434,   435,   436,   437,   438,    -1,   440,   441,   442,   443,
     444,   445,   446,    -1,   448,   449,   450,   451,   452,   453,
     454,    -1,    -1,   457,    -1,    -1,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,    -1,    -1,
      -1,    -1,    -1,    -1,   488,   489,   490,    -1,    -1,    -1,
      -1,   495,    -1,   497,    -1,    -1,    -1,    -1,   502,    -1,
     504,   505,     3,     4,     5,     6,     7,     8,     9,    10,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    27,    28,    29,    30,
      -1,    -1,    -1,    -1,    35,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    52,    -1,    54,    55,    56,    57,    -1,    59,    60,
      61,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,    -1,   160,
     161,   162,   163,    -1,   165,    -1,   167,   168,    -1,   170,
     171,   172,   173,   174,   175,    -1,   177,    -1,   179,   180,
     181,    -1,   183,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   194,    -1,   196,   197,   198,   199,   200,
     201,    -1,   203,   204,   205,   206,   207,   208,   209,   210,
     211,   212,    -1,   214,    -1,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,    -1,    -1,   229,   230,
     231,   232,    -1,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,    -1,   283,   284,    -1,    -1,   287,   288,   289,    -1,
      -1,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,    -1,   319,   320,
     321,   322,   323,   324,    -1,   326,   327,   328,   329,   330,
     331,   332,   333,    -1,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,    -1,    -1,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,    -1,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
      -1,   402,   403,    -1,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,   414,    -1,    -1,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,    -1,   440,
     441,   442,   443,   444,   445,   446,    -1,   448,   449,   450,
     451,   452,   453,   454,    -1,    -1,   457,    -1,    -1,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,    -1,    -1,    -1,    -1,    -1,    -1,   488,   489,   490,
      -1,    -1,    -1,    -1,   495,    -1,   497,    -1,    -1,    -1,
      -1,   502,    -1,   504,   505,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    35,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      -1,    59,    60,    61,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,    -1,   160,   161,   162,   163,    -1,   165,    -1,   167,
     168,    -1,   170,   171,   172,   173,   174,   175,    -1,   177,
      -1,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,    -1,   196,   197,
     198,   199,   200,   201,    -1,   203,   204,   205,   206,   207,
     208,   209,   210,   211,   212,    -1,   214,    -1,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,    -1,
      -1,   229,   230,   231,   232,    -1,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,    -1,   283,   284,    -1,    -1,   287,
     288,   289,    -1,    -1,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
      -1,   309,   310,   311,   312,   313,   314,   315,   316,   317,
      -1,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,    -1,
      -1,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,    -1,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,    -1,   402,   403,    -1,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,   414,    -1,    -1,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,    -1,    -1,   433,   434,   435,   436,   437,
     438,    -1,   440,   441,   442,   443,   444,   445,   446,    -1,
     448,   449,   450,   451,   452,   453,   454,    -1,    -1,   457,
      -1,    -1,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,    -1,    -1,    -1,    -1,    -1,    -1,
     488,   489,   490,    -1,    -1,    -1,    -1,   495,    -1,   497,
      -1,    -1,    -1,    -1,   502,    -1,   504,   505,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    -1,    -1,    -1,    -1,
      35,    -1,    -1,    38,    39,    -1,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    -1,    54,
      55,    56,    57,    -1,    59,    60,    61,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    74,
      -1,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    89,    90,    91,    92,    -1,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,    -1,   118,   119,   120,   121,   122,   123,    -1,
     125,   126,   127,   128,   129,    -1,    -1,   132,   133,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
      -1,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,    -1,   160,   161,   162,   163,    -1,
     165,    -1,   167,   168,    -1,   170,   171,   172,   173,   174,
     175,    -1,   177,    -1,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
      -1,   196,   197,   198,   199,   200,   201,    -1,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,    -1,   214,
      -1,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,    -1,    -1,   229,   230,   231,   232,    -1,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,    -1,   283,   284,
      -1,    -1,   287,   288,   289,    -1,    -1,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,    -1,   309,   310,   311,   312,   313,   314,
     315,   316,   317,    -1,   319,   320,   321,   322,   323,   324,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,    -1,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,    -1,    -1,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,    -1,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,    -1,   402,   403,    -1,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,   414,
      -1,    -1,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,    -1,    -1,   433,   434,
     435,   436,   437,   438,    -1,   440,   441,   442,   443,   444,
     445,   446,    -1,   448,   449,   450,   451,   452,   453,   454,
      -1,    -1,   457,    -1,    -1,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,    -1,    -1,    -1,
      -1,    -1,    -1,   488,   489,    -1,    -1,    -1,    -1,    -1,
     495,    -1,   497,    -1,    -1,    -1,    -1,   502,    -1,   504,
     505,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    35,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,    -1,    54,    55,    56,    57,    -1,    59,    60,    61,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    74,    -1,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,    -1,   160,   161,
     162,   163,    -1,   165,    -1,   167,   168,    -1,   170,   171,
     172,   173,   174,   175,    -1,   177,    -1,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,    -1,   196,   197,   198,   199,   200,   201,
      -1,   203,   204,   205,   206,   207,   208,   209,   210,   211,
     212,    -1,   214,    -1,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,    -1,    -1,   229,   230,   231,
     232,    -1,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
      -1,   283,   284,    -1,    -1,   287,   288,   289,    -1,    -1,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,    -1,   309,   310,   311,
     312,   313,   314,   315,   316,   317,    -1,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,   328,   329,   330,   331,
     332,   333,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,    -1,    -1,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,    -1,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,    -1,
     402,   403,    -1,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,   414,    -1,    -1,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,    -1,
      -1,   433,   434,   435,   436,   437,   438,    -1,   440,   441,
     442,   443,   444,   445,   446,    -1,   448,   449,   450,   451,
     452,   453,   454,    -1,    -1,   457,    -1,    -1,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
      -1,    -1,    -1,    -1,    -1,    -1,   488,   489,    -1,    -1,
      -1,    -1,    -1,   495,    -1,   497,   498,    -1,    -1,    -1,
     502,    -1,   504,   505,     3,     4,     5,     6,     7,     8,
       9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    35,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    52,    -1,    54,    55,    56,    57,    -1,
      59,    60,    61,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    74,    -1,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      89,    90,    91,    92,    -1,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,   116,    -1,   118,
     119,   120,   121,   122,   123,    -1,   125,   126,   127,   128,
     129,    -1,    -1,   132,   133,   134,   135,   136,    -1,   138,
     139,   140,    -1,   142,   143,   144,    -1,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
      -1,   160,   161,   162,   163,    -1,   165,    -1,   167,   168,
      -1,   170,   171,   172,   173,   174,   175,    -1,   177,    -1,
     179,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,    -1,   196,   197,   198,
     199,   200,   201,    -1,   203,   204,   205,   206,   207,   208,
     209,   210,   211,   212,    -1,   214,    -1,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,    -1,    -1,
     229,   230,   231,   232,    -1,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,    -1,   283,   284,    -1,    -1,   287,   288,
     289,    -1,    -1,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,    -1,
     309,   310,   311,   312,   313,   314,   315,   316,   317,    -1,
     319,   320,   321,   322,   323,   324,    -1,   326,   327,   328,
     329,   330,   331,   332,   333,    -1,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,    -1,    -1,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,    -1,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,    -1,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,    -1,   402,   403,    -1,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,   414,    -1,    -1,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,    -1,    -1,   433,   434,   435,   436,   437,   438,
      -1,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,    -1,    -1,   457,    -1,
      -1,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,    -1,    -1,    -1,    -1,    -1,    -1,   488,
     489,    -1,    -1,    -1,    -1,    -1,   495,    -1,   497,    -1,
      -1,    -1,    -1,   502,    -1,   504,   505,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    35,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    -1,    59,    60,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,    -1,   160,   161,   162,   163,    -1,   165,
      -1,   167,   168,    -1,   170,   171,   172,   173,   174,   175,
      -1,   177,    -1,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,    -1,
     196,   197,   198,   199,   200,   201,    -1,   203,   204,   205,
     206,   207,   208,   209,   210,   211,   212,    -1,   214,    -1,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,    -1,    -1,   229,   230,   231,   232,    -1,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,    -1,   283,   284,    -1,
      -1,   287,   288,   289,    -1,    -1,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,    -1,   309,   310,   311,   312,   313,   314,   315,
     316,   317,    -1,   319,   320,   321,   322,   323,   324,    -1,
     326,   327,   328,   329,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,    -1,    -1,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,    -1,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,    -1,   402,   403,    -1,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,   414,    -1,
      -1,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,    -1,    -1,   433,   434,   435,
     436,   437,   438,    -1,   440,   441,   442,   443,   444,   445,
     446,    -1,   448,   449,   450,   451,   452,   453,   454,    -1,
      -1,   457,    -1,    -1,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,    -1,    -1,    -1,    -1,
      -1,    -1,   488,   489,    -1,    -1,    -1,    -1,    -1,   495,
      -1,   497,   498,    -1,    -1,    -1,   502,    -1,   504,   505,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    35,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      -1,    54,    55,    56,    57,    -1,    59,    60,    61,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,    -1,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,    -1,   160,   161,   162,
     163,    -1,   165,    -1,   167,   168,   169,   170,   171,   172,
     173,   174,   175,    -1,   177,    -1,   179,   180,   181,    -1,
     183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,    -1,   196,   197,   198,   199,   200,   201,    -1,
     203,   204,   205,   206,   207,   208,   209,   210,   211,   212,
      -1,   214,    -1,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,    -1,    -1,   229,   230,   231,   232,
      -1,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,    -1,
     283,   284,    -1,    -1,   287,   288,   289,    -1,    -1,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,    -1,   309,   310,   311,   312,
     313,   314,   315,   316,   317,    -1,   319,   320,   321,   322,
     323,   324,    -1,   326,   327,   328,   329,   330,   331,   332,
     333,    -1,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,    -1,    -1,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,    -1,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,    -1,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,    -1,   402,
     403,    -1,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,   414,    -1,    -1,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,    -1,    -1,
     433,   434,   435,   436,   437,   438,    -1,   440,   441,   442,
     443,   444,   445,   446,    -1,   448,   449,   450,   451,   452,
     453,   454,    -1,    -1,   457,    -1,    -1,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,    -1,
      -1,    -1,    -1,    -1,    -1,   488,   489,    -1,    -1,    -1,
      -1,    -1,   495,    -1,   497,    -1,    -1,    -1,    -1,   502,
      -1,   504,   505,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    35,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    52,    -1,    54,    55,    56,    57,    -1,    59,
      60,    61,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    74,    -1,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,    -1,
     160,   161,   162,   163,    -1,   165,    -1,   167,   168,    -1,
     170,   171,   172,   173,   174,   175,    -1,   177,    -1,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,    -1,   196,   197,   198,   199,
     200,   201,    -1,   203,   204,   205,   206,   207,   208,   209,
     210,   211,   212,    -1,   214,    -1,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,    -1,    -1,   229,
     230,   231,   232,    -1,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,    -1,   283,   284,    -1,    -1,   287,   288,   289,
      -1,    -1,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,    -1,   309,
     310,   311,   312,   313,   314,   315,   316,   317,    -1,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,    -1,    -1,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,   414,    -1,    -1,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,    -1,    -1,   433,   434,   435,   436,   437,   438,    -1,
     440,   441,   442,   443,   444,   445,   446,    -1,   448,   449,
     450,   451,   452,   453,   454,    -1,    -1,   457,    -1,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,    -1,    -1,    -1,    -1,    -1,    -1,   488,   489,
      -1,    -1,    -1,    -1,    -1,   495,    -1,   497,    -1,    -1,
      -1,    -1,   502,    -1,   504,   505,     3,     4,     5,     6,
       7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    35,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    52,    -1,    54,    55,    56,
      57,    -1,    59,    60,    61,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    74,    -1,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    89,    90,    91,    92,    -1,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
      -1,   118,   119,   120,   121,   122,   123,    -1,   125,   126,
     127,   128,   129,    -1,    -1,   132,   133,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,    -1,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,    -1,   160,   161,   162,   163,    -1,   165,    -1,
     167,   168,    -1,   170,   171,   172,   173,   174,   175,    -1,
     177,    -1,   179,   180,   181,    -1,   183,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   194,    -1,   196,
     197,   198,   199,   200,   201,    -1,   203,   204,   205,   206,
     207,   208,   209,   210,   211,   212,    -1,   214,    -1,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
      -1,    -1,   229,   230,   231,   232,    -1,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,    -1,   283,   284,    -1,    -1,
     287,   288,   289,    -1,    -1,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,    -1,   309,   310,   311,   312,   313,   314,   315,   316,
     317,    -1,   319,   320,   321,   322,   323,   324,    -1,   326,
     327,   328,   329,   330,   331,   332,   333,    -1,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
      -1,    -1,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
      -1,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,    -1,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,    -1,   402,   403,    -1,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,   414,    -1,    -1,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,    -1,    -1,   433,   434,   435,   436,
     437,   438,    -1,   440,   441,   442,   443,   444,   445,   446,
      -1,   448,   449,   450,   451,   452,   453,   454,    -1,    -1,
     457,    -1,    -1,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,    -1,    -1,    -1,    -1,    -1,
      -1,   488,   489,    -1,    -1,    -1,    -1,    -1,   495,    -1,
     497,    -1,    -1,    -1,    -1,   502,    -1,   504,   505,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    35,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    -1,
      54,    55,    56,    57,    -1,    59,    60,    61,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      74,    -1,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,    -1,   160,   161,   162,   163,
      -1,   165,    -1,   167,   168,    -1,   170,   171,   172,   173,
     174,   175,    -1,   177,    -1,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,    -1,   196,   197,   198,   199,   200,   201,    -1,   203,
     204,   205,   206,   207,   208,   209,   210,   211,   212,    -1,
     214,    -1,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,    -1,    -1,   229,   230,   231,   232,    -1,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,    -1,   283,
     284,    -1,    -1,   287,   288,   289,    -1,    -1,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,    -1,   309,   310,   311,   312,   313,
     314,   315,   316,   317,    -1,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,    -1,    -1,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
      -1,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,    -1,   402,   403,
      -1,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
     414,    -1,    -1,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,    -1,    -1,   433,
     434,   435,   436,   437,   438,    -1,   440,   441,   442,   443,
     444,   445,   446,    -1,   448,   449,   450,   451,   452,   453,
     454,    -1,    -1,   457,    -1,    -1,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,    -1,    -1,
      -1,    -1,    -1,    -1,   488,   489,    -1,    -1,    -1,    -1,
      -1,   495,    -1,   497,    -1,    -1,    -1,    -1,   502,    -1,
     504,   505,     3,     4,     5,     6,     7,     8,     9,    10,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    35,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    52,    -1,    54,    55,    56,    57,    -1,    59,    60,
      61,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,    -1,   160,
     161,   162,   163,    -1,   165,    -1,   167,   168,    -1,   170,
     171,   172,   173,   174,   175,    -1,   177,    -1,   179,   180,
     181,    -1,   183,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   194,    -1,   196,   197,   198,   199,   200,
     201,    -1,   203,   204,   205,   206,   207,   208,   209,   210,
     211,   212,    -1,   214,    -1,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,    -1,    -1,   229,   230,
     231,   232,    -1,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,    -1,   283,   284,    -1,    -1,   287,   288,   289,    -1,
      -1,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,    -1,   319,   320,
     321,   322,   323,   324,    -1,   326,   327,   328,   329,   330,
     331,   332,   333,    -1,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,    -1,    -1,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,    -1,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
      -1,   402,   403,    -1,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,   414,    -1,    -1,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,    -1,   440,
     441,   442,   443,   444,   445,   446,    -1,   448,   449,   450,
     451,   452,   453,   454,    -1,    -1,   457,    -1,    -1,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,    -1,    -1,    -1,    -1,    -1,    -1,   488,   489,    -1,
      -1,    -1,    -1,    -1,   495,    -1,   497,    -1,    -1,    -1,
      -1,   502,    -1,   504,   505,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    35,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      -1,    59,    60,    61,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,    -1,   160,   161,   162,   163,    -1,   165,    -1,   167,
     168,    -1,   170,   171,   172,   173,   174,   175,    -1,   177,
      -1,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,    -1,   196,   197,
     198,   199,   200,   201,    -1,   203,   204,   205,   206,   207,
     208,   209,   210,   211,   212,    -1,   214,    -1,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,    -1,
      -1,   229,   230,   231,   232,    -1,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,    -1,   283,   284,    -1,    -1,   287,
     288,   289,    -1,    -1,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
      -1,   309,   310,   311,   312,   313,   314,   315,   316,   317,
      -1,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,    -1,
      -1,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,    -1,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,    -1,   402,   403,    -1,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,   414,    -1,    -1,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,    -1,    -1,   433,   434,   435,   436,   437,
     438,    -1,   440,   441,   442,   443,   444,   445,   446,    -1,
     448,   449,   450,   451,   452,   453,   454,    -1,    -1,   457,
      -1,    -1,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,    -1,    -1,    -1,    -1,    -1,    -1,
     488,   489,    -1,    -1,    -1,    -1,    -1,   495,    -1,   497,
      -1,    -1,    -1,    -1,   502,    -1,   504,   505,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      35,    -1,    -1,    38,    39,    -1,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    -1,    54,
      55,    56,    57,    -1,    59,    60,    61,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    74,
      -1,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    89,    90,    91,    92,    -1,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,    -1,   118,   119,   120,   121,   122,   123,    -1,
     125,   126,   127,   128,   129,    -1,    -1,   132,   133,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
      -1,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,    -1,   160,   161,   162,   163,    -1,
     165,    -1,   167,   168,    -1,   170,   171,   172,   173,   174,
     175,    -1,   177,    -1,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
      -1,   196,   197,   198,   199,   200,   201,    -1,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,    -1,   214,
      -1,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,    -1,    -1,   229,   230,   231,   232,    -1,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,    -1,   283,   284,
      -1,    -1,   287,   288,   289,    -1,    -1,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,    -1,   309,   310,   311,   312,   313,   314,
     315,   316,   317,    -1,   319,   320,   321,   322,   323,   324,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,    -1,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,    -1,    -1,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,    -1,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,    -1,   402,   403,    -1,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,   414,
      -1,    -1,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,    -1,    -1,   433,   434,
     435,   436,   437,   438,    -1,   440,   441,   442,   443,   444,
     445,   446,    -1,   448,   449,   450,   451,   452,   453,   454,
      -1,    -1,   457,    -1,    -1,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,    -1,    -1,    -1,
      -1,    -1,    -1,   488,   489,    -1,    -1,    -1,    -1,    -1,
     495,    -1,   497,    -1,    -1,    -1,    -1,   502,    -1,   504,
     505,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    35,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,    -1,    54,    55,    56,    57,    -1,    59,    60,    61,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    74,    -1,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,    -1,   160,   161,
     162,   163,    -1,   165,    -1,   167,   168,    -1,   170,   171,
     172,   173,   174,   175,    -1,   177,    -1,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,    -1,   196,   197,   198,   199,   200,   201,
      -1,   203,   204,   205,   206,   207,   208,   209,   210,   211,
     212,    -1,   214,    -1,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,    -1,    -1,   229,   230,   231,
     232,    -1,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
      -1,   283,   284,    -1,    -1,   287,   288,   289,    -1,    -1,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,    -1,   309,   310,   311,
     312,   313,   314,   315,   316,   317,    -1,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,   328,   329,   330,   331,
     332,   333,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,    -1,    -1,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,    -1,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,    -1,
     402,   403,    -1,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,   414,    -1,    -1,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,    -1,
      -1,   433,   434,   435,   436,   437,   438,    -1,   440,   441,
     442,   443,   444,   445,   446,    -1,   448,   449,   450,   451,
     452,   453,   454,    -1,    -1,   457,    -1,    -1,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
      -1,    -1,    -1,    -1,    -1,    -1,   488,   489,    -1,    -1,
      -1,    -1,    -1,   495,    -1,   497,    -1,    -1,    -1,    -1,
     502,    -1,   504,   505,     3,     4,     5,     6,     7,     8,
       9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    35,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    52,    -1,    54,    55,    56,    57,    -1,
      59,    60,    61,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    74,    -1,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      89,    90,    91,    92,    -1,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,   116,    -1,   118,
     119,   120,   121,   122,   123,    -1,   125,   126,   127,   128,
     129,    -1,    -1,   132,   133,   134,   135,   136,    -1,   138,
     139,   140,    -1,   142,   143,   144,    -1,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
      -1,   160,   161,   162,   163,    -1,   165,    -1,   167,   168,
      -1,   170,   171,   172,   173,   174,   175,    -1,   177,    -1,
     179,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,    -1,   196,   197,   198,
     199,   200,   201,    -1,   203,   204,   205,   206,   207,   208,
     209,   210,   211,   212,    -1,   214,    -1,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,    -1,    -1,
     229,   230,   231,   232,    -1,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,    -1,   283,   284,    -1,    -1,   287,   288,
     289,    -1,    -1,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,    -1,
     309,   310,   311,   312,   313,   314,   315,   316,   317,    -1,
     319,   320,   321,   322,   323,   324,    -1,   326,   327,   328,
     329,   330,   331,   332,   333,    -1,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,    -1,    -1,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,    -1,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,    -1,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,    -1,   402,   403,    -1,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,   414,    -1,    -1,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,    -1,    -1,   433,   434,   435,   436,   437,   438,
      -1,   440,   441,   442,   443,   444,   445,   446,    -1,   448,
     449,   450,   451,   452,   453,   454,    -1,    -1,   457,    -1,
      -1,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,    -1,    -1,    -1,    -1,    -1,    -1,   488,
     489,    -1,    -1,    -1,    -1,    -1,   495,    -1,   497,    -1,
      -1,    -1,    -1,   502,    -1,   504,   505,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    35,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    -1,    59,    60,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,    -1,   160,   161,   162,   163,    -1,   165,
      -1,   167,   168,    -1,   170,   171,   172,   173,   174,   175,
      -1,   177,    -1,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,    -1,
     196,   197,   198,   199,   200,   201,    -1,   203,   204,   205,
     206,   207,   208,   209,   210,   211,   212,    -1,   214,    -1,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,    -1,    -1,   229,   230,   231,   232,    -1,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,    -1,   283,   284,    -1,
      -1,   287,   288,   289,    -1,    -1,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,    -1,   309,   310,   311,   312,   313,   314,   315,
     316,   317,    -1,   319,   320,   321,   322,   323,   324,    -1,
     326,   327,   328,   329,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,    -1,    -1,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,    -1,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,    -1,   402,   403,    -1,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,   414,    -1,
      -1,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,    -1,    -1,   433,   434,   435,
     436,   437,   438,    -1,   440,   441,   442,   443,   444,   445,
     446,    -1,   448,   449,   450,   451,   452,   453,   454,    -1,
      -1,   457,    -1,    -1,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,    -1,    -1,    -1,    -1,
      -1,    -1,   488,   489,    -1,    -1,    -1,    -1,    -1,   495,
      -1,   497,    -1,    -1,    -1,    -1,   502,    -1,   504,   505,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    35,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      -1,    54,    55,    56,    57,    -1,    59,    60,    61,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,    -1,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,    -1,   160,   161,   162,
     163,    -1,   165,    -1,   167,   168,    -1,   170,   171,   172,
     173,   174,   175,    -1,   177,    -1,   179,   180,   181,    -1,
     183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,    -1,   196,   197,   198,   199,   200,   201,    -1,
     203,   204,   205,   206,   207,   208,   209,   210,   211,   212,
      -1,   214,    -1,   216,    -1,    -1,   219,   220,   221,   222,
     223,   224,   225,   226,    -1,    -1,   229,   230,   231,   232,
      -1,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,    -1,   271,   272,
      -1,   274,   275,   276,   277,   278,   279,   280,   281,    -1,
     283,   284,    -1,    -1,   287,   288,   289,    -1,    -1,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,    -1,   309,   310,   311,   312,
     313,   314,   315,   316,   317,    -1,   319,   320,   321,   322,
     323,   324,    -1,   326,   327,   328,   329,   330,   331,   332,
     333,    -1,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,    -1,    -1,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,    -1,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,    -1,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,    -1,   402,
     403,    -1,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,   414,    -1,    -1,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,    -1,    -1,
     433,   434,   435,   436,   437,   438,    -1,   440,   441,   442,
     443,   444,   445,   446,    -1,   448,   449,   450,   451,   452,
     453,   454,    -1,    -1,   457,    -1,    -1,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,    -1,
      -1,    -1,    -1,    -1,    -1,   488,   489,    -1,    -1,    -1,
      -1,    -1,   495,    -1,   497,    -1,    -1,    -1,    -1,   502,
      -1,   504,   505,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    52,    -1,    54,    55,    56,    57,    -1,    59,
      60,    61,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    74,    -1,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,    -1,
     160,   161,   162,   163,    -1,   165,    -1,   167,   168,    -1,
     170,   171,   172,   173,   174,   175,    -1,   177,    -1,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,    -1,   196,   197,   198,   199,
     200,   201,    -1,   203,   204,   205,   206,   207,   208,   209,
     210,   211,   212,    -1,   214,    -1,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,    -1,    -1,   229,
     230,   231,   232,    -1,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
      -1,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,    -1,   283,   284,    -1,    -1,   287,   288,   289,
      -1,    -1,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,    -1,   309,
     310,   311,   312,   313,   314,   315,   316,   317,    -1,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,    -1,    -1,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,    -1,   402,   403,    -1,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,   414,    -1,    -1,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,    -1,    -1,   433,   434,   435,   436,   437,   438,    -1,
     440,   441,   442,   443,   444,   445,   446,    -1,   448,   449,
     450,   451,   452,   453,   454,    -1,    -1,   457,    -1,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   488,   489,
      -1,    -1,     3,     4,     5,     6,     7,   497,     9,    10,
      -1,    -1,    -1,    -1,   504,   505,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    52,    -1,    54,    55,    56,    57,    -1,    59,    60,
      61,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,    -1,   160,
     161,   162,   163,    -1,   165,    -1,   167,   168,    -1,   170,
     171,   172,   173,   174,   175,    -1,   177,    -1,   179,   180,
     181,    -1,   183,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   194,    -1,   196,   197,   198,   199,   200,
     201,    -1,   203,   204,   205,   206,   207,   208,   209,   210,
     211,   212,    -1,   214,    -1,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,    -1,    -1,   229,   230,
     231,   232,    -1,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,    -1,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,    -1,   283,   284,    -1,    -1,   287,   288,   289,    -1,
      -1,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,    -1,   319,   320,
     321,   322,   323,   324,    -1,   326,   327,   328,   329,   330,
     331,   332,   333,    -1,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,    -1,    -1,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,    -1,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
      -1,   402,   403,    -1,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,   414,    -1,    -1,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,    -1,   440,
     441,   442,   443,   444,   445,   446,    -1,   448,   449,   450,
     451,   452,   453,   454,    -1,    -1,   457,    -1,    -1,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   488,   489,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   497,    -1,    -1,    -1,
      -1,    -1,    -1,   504,   505,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      -1,    59,    60,    61,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,    -1,   160,   161,   162,   163,    -1,   165,    -1,   167,
     168,    -1,   170,   171,   172,   173,   174,   175,    -1,   177,
      -1,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,    -1,   196,   197,
     198,   199,   200,   201,    -1,   203,   204,   205,   206,   207,
     208,   209,   210,   211,   212,    -1,   214,    -1,   216,    -1,
     218,   219,   220,   221,   222,   223,   224,   225,   226,    -1,
      -1,   229,   230,   231,   232,    -1,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,    -1,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,    -1,   283,   284,    -1,    -1,   287,
     288,   289,    -1,    -1,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
      -1,   309,   310,   311,   312,   313,   314,   315,   316,   317,
      -1,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,    -1,
      -1,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,    -1,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,    -1,   402,   403,    -1,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,   414,    -1,    -1,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,    -1,    -1,   433,   434,   435,   436,   437,
     438,    -1,   440,   441,   442,   443,   444,   445,   446,    -1,
     448,   449,   450,   451,   452,   453,   454,    -1,    -1,   457,
      -1,    -1,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     488,   489,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   497,
      -1,    -1,    -1,    -1,    -1,    -1,   504,   505,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      35,    -1,    -1,    38,    39,    -1,    41,    42,    43,    44,
      45,    46,    47,    -1,    49,    50,    51,    52,    -1,    54,
      55,    56,    57,    -1,    59,    60,    61,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    74,
      -1,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    89,    90,    91,    92,    -1,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,    -1,   118,   119,   120,   121,   122,   123,    -1,
     125,   126,   127,   128,   129,    -1,    -1,   132,   133,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,    -1,   144,
      -1,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,    -1,   160,   161,   162,   163,    -1,
     165,    -1,   167,   168,    -1,   170,   171,   172,   173,    -1,
     175,    -1,   177,    -1,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,   189,    -1,   191,   192,   193,   194,
      -1,   196,   197,   198,   199,   200,   201,    -1,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,    -1,   214,
      -1,   216,    -1,    -1,   219,   220,   221,   222,   223,   224,
     225,   226,    -1,    -1,   229,   230,   231,    -1,    -1,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,    -1,   271,   272,    -1,   274,
     275,   276,   277,   278,   279,   280,   281,    -1,   283,   284,
      -1,    -1,   287,   288,   289,    -1,    -1,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,    -1,   309,   310,   311,   312,   313,   314,
     315,   316,   317,    -1,   319,   320,   321,   322,   323,   324,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,    -1,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,    -1,    -1,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,    -1,   380,   381,   382,   383,    -1,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,    -1,   402,   403,    -1,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,   414,
      -1,    -1,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,    -1,    -1,   433,   434,
     435,   436,   437,   438,    -1,   440,   441,   442,   443,   444,
     445,   446,    -1,   448,   449,   450,   451,   452,   453,   454,
      -1,    -1,   457,    -1,    -1,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   488,   489,     3,    -1,    -1,    -1,    -1,
     495,    -1,   497,    -1,    -1,    -1,    -1,   502,    -1,   504,
     505,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    36,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      -1,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    81,    -1,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    94,    95,    96,    97,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,    -1,
     158,    -1,   160,   161,   162,   163,    -1,   165,    -1,   167,
      -1,    -1,   170,   171,   172,   173,    -1,   175,    -1,   177,
      -1,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,   189,    -1,   191,   192,   193,   194,    -1,   196,   197,
     198,   199,   200,   201,    -1,   203,   204,   205,   206,   207,
     208,   209,   210,   211,   212,    -1,   214,    -1,   216,    -1,
      -1,   219,   220,   221,   222,   223,   224,   225,   226,    -1,
      -1,   229,   230,   231,    -1,    -1,   234,   235,   236,    -1,
      -1,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,    -1,   271,   272,    -1,   274,    -1,   276,   277,
     278,   279,   280,   281,    -1,   283,   284,    -1,    -1,   287,
     288,   289,    -1,    -1,   292,   293,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
      -1,   309,   310,   311,   312,   313,   314,   315,   316,   317,
      -1,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,    -1,
      -1,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,    -1,   374,   375,   376,   377,
     378,    -1,   380,   381,   382,   383,    -1,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,    -1,   402,   403,    -1,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,   414,    -1,    -1,   417,
     418,   419,   420,   421,    -1,   423,   424,   425,   426,   427,
     428,   429,   430,    -1,    -1,   433,   434,   435,   436,   437,
      -1,    -1,   440,   441,   442,   443,   444,   445,   446,    -1,
     448,    -1,   450,   451,   452,   453,   454,    -1,    -1,   457,
      -1,    -1,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,    -1,    -1,     3,    -1,     5,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     498,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      -1,    59,    -1,    61,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,    -1,
     158,    -1,   160,   161,   162,   163,    -1,   165,    -1,   167,
     168,    -1,   170,   171,   172,   173,   174,   175,    -1,   177,
      -1,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,    -1,   196,   197,
     198,   199,   200,   201,    -1,   203,   204,   205,   206,   207,
     208,   209,   210,   211,   212,    -1,   214,    -1,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
      -1,   229,   230,   231,   232,    -1,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,    -1,   271,   272,   273,   274,    -1,   276,   277,
     278,   279,   280,   281,    -1,   283,   284,    -1,   286,   287,
     288,   289,    -1,    -1,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
      -1,   309,   310,   311,   312,   313,   314,   315,   316,   317,
      -1,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,    -1,
      -1,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,    -1,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,   414,    -1,    -1,   417,
     418,   419,   420,   421,    -1,   423,   424,   425,   426,   427,
     428,   429,   430,    -1,    -1,   433,   434,   435,   436,   437,
     438,    -1,   440,   441,   442,   443,   444,   445,   446,    -1,
     448,   449,   450,   451,   452,   453,   454,    -1,    -1,   457,
      -1,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,    -1,     3,   483,     5,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   497,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    52,    -1,    54,    55,    56,    57,    -1,
      59,    -1,    61,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    74,    -1,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      89,    90,    91,    92,    -1,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,    -1,   116,    -1,   118,
     119,   120,   121,   122,   123,    -1,   125,   126,   127,   128,
     129,    -1,    -1,   132,   133,   134,   135,   136,    -1,   138,
     139,   140,    -1,   142,   143,   144,    -1,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,    -1,   158,
      -1,   160,   161,   162,   163,    -1,   165,    -1,   167,   168,
      -1,   170,   171,   172,   173,   174,   175,    -1,   177,    -1,
     179,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,    -1,   196,   197,   198,
     199,   200,   201,    -1,   203,   204,   205,   206,   207,   208,
     209,   210,   211,   212,    -1,   214,    -1,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,    -1,
     229,   230,   231,   232,    -1,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,    -1,   271,   272,   273,   274,    -1,   276,   277,   278,
     279,   280,   281,    -1,   283,   284,    -1,   286,   287,   288,
     289,    -1,    -1,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,    -1,
     309,   310,   311,   312,   313,   314,   315,   316,   317,    -1,
     319,   320,   321,   322,   323,   324,    -1,   326,   327,   328,
     329,   330,   331,   332,   333,    -1,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,    -1,    -1,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,    -1,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,    -1,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,    -1,   402,   403,    -1,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,   414,    -1,    -1,   417,   418,
     419,   420,   421,    -1,   423,   424,   425,   426,   427,   428,
     429,   430,    -1,    -1,   433,   434,   435,   436,   437,   438,
      -1,   440,   441,   442,   443,   444,   445,   446,    -1,   448,
     449,   450,   451,   452,   453,   454,    -1,    -1,   457,    -1,
      -1,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,    -1,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   497,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    52,    -1,    54,    55,    56,    57,    -1,    59,
      -1,    61,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    74,    -1,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,    -1,   158,    -1,
     160,   161,   162,   163,    -1,   165,    -1,   167,   168,    -1,
     170,   171,   172,   173,   174,   175,    -1,   177,    -1,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,    -1,   196,   197,   198,   199,
     200,   201,    -1,   203,   204,   205,   206,   207,   208,   209,
     210,   211,   212,    -1,   214,    -1,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,    -1,    -1,   229,
     230,   231,   232,    -1,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
      -1,   271,   272,   273,   274,    -1,   276,   277,   278,   279,
     280,   281,    -1,   283,   284,    -1,    -1,   287,   288,   289,
      -1,    -1,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,    -1,   309,
     310,   311,   312,   313,   314,   315,   316,   317,    -1,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,    -1,    -1,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,    -1,   402,   403,    -1,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,   414,    -1,    -1,   417,   418,   419,
     420,   421,    -1,   423,   424,   425,   426,   427,   428,   429,
     430,    -1,    -1,   433,   434,   435,   436,   437,   438,    -1,
     440,   441,   442,   443,   444,   445,   446,    -1,   448,   449,
     450,   451,   452,   453,   454,    -1,    -1,   457,    -1,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,    -1,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   497,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    52,    -1,    54,    55,    56,    57,    -1,    59,    -1,
      61,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,    -1,   158,    -1,   160,
     161,   162,   163,    -1,   165,    -1,   167,   168,    -1,   170,
     171,   172,   173,   174,   175,    -1,   177,    -1,   179,   180,
     181,    -1,   183,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   194,    -1,   196,   197,   198,   199,   200,
     201,    -1,   203,   204,   205,   206,   207,   208,   209,   210,
     211,   212,    -1,   214,    -1,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,    -1,    -1,   229,   230,
     231,   232,    -1,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,    -1,
     271,   272,   273,   274,    -1,   276,   277,   278,   279,   280,
     281,    -1,   283,   284,    -1,    -1,   287,   288,   289,    -1,
      -1,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,    -1,   319,   320,
     321,   322,   323,   324,    -1,   326,   327,   328,   329,   330,
     331,   332,   333,    -1,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,    -1,    -1,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,    -1,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
      -1,   402,   403,    -1,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,   414,    -1,    -1,   417,   418,   419,   420,
     421,    -1,   423,   424,   425,   426,   427,   428,   429,   430,
      -1,    -1,   433,   434,   435,   436,   437,   438,    -1,   440,
     441,   442,   443,   444,   445,   446,    -1,   448,   449,   450,
     451,   452,   453,   454,    -1,    -1,   457,    -1,    -1,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
      -1,     3,     4,     5,    -1,    -1,    -1,     9,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   497,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    -1,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    81,
      -1,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,    -1,   160,   161,
     162,   163,    -1,   165,    -1,   167,    -1,    -1,    -1,   171,
     172,   173,    -1,   175,    -1,   177,    -1,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,   189,    -1,   191,
     192,   193,   194,    -1,   196,   197,   198,   199,   200,   201,
      -1,   203,    -1,   205,   206,   207,   208,   209,   210,   211,
     212,    -1,   214,    -1,   216,    -1,    -1,   219,    -1,   221,
     222,   223,   224,   225,   226,    -1,    -1,   229,    -1,   231,
      -1,    -1,   234,   235,   236,    -1,    -1,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,    -1,   265,   266,   267,   268,   269,    -1,   271,
     272,    -1,   274,    -1,   276,   277,   278,   279,   280,   281,
      -1,   283,   284,   285,    -1,   287,   288,   289,    -1,    -1,
     292,   293,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,    -1,   309,   310,   311,
     312,   313,   314,   315,   316,   317,    -1,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,   328,   329,   330,   331,
     332,   333,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,    -1,    -1,   349,   350,    -1,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,    -1,   374,   375,   376,   377,   378,    -1,   380,   381,
     382,   383,    -1,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,    -1,
     402,   403,    -1,   405,    -1,   407,   408,   409,   410,   411,
      -1,   413,   414,    -1,    -1,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,    -1,
      -1,   433,   434,   435,   436,   437,    -1,    -1,   440,   441,
     442,   443,   444,   445,   446,    -1,   448,    -1,   450,   451,
     452,   453,   454,    -1,    -1,   457,    -1,    -1,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,    -1,
       3,    -1,    -1,    -1,    -1,    -1,   488,   489,   490,    -1,
      -1,    -1,    -1,    -1,    -1,   497,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    31,    32,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    -1,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    81,    -1,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,    -1,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,    -1,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,    -1,   158,    -1,   160,   161,   162,
     163,    -1,   165,    -1,   167,    -1,    -1,    -1,   171,   172,
     173,    -1,   175,    -1,   177,    -1,   179,   180,   181,    -1,
     183,   184,   185,   186,   187,   188,   189,    -1,   191,   192,
     193,   194,    -1,   196,   197,   198,   199,   200,   201,    -1,
     203,    -1,   205,   206,   207,   208,   209,   210,   211,   212,
      -1,   214,    -1,   216,    -1,    -1,   219,    -1,   221,   222,
     223,   224,   225,   226,    -1,    -1,   229,    -1,   231,    -1,
      -1,   234,   235,   236,    -1,    -1,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,    -1,   265,   266,   267,   268,   269,    -1,   271,   272,
      -1,   274,    -1,   276,   277,   278,   279,   280,   281,    -1,
     283,   284,    -1,    -1,   287,   288,   289,    -1,    -1,   292,
     293,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,    -1,   309,   310,   311,   312,
     313,   314,   315,   316,   317,    -1,   319,   320,   321,   322,
     323,   324,    -1,   326,   327,   328,   329,   330,   331,   332,
     333,    -1,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,    -1,    -1,   349,   350,    -1,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
      -1,   374,   375,   376,   377,   378,    -1,   380,   381,   382,
     383,    -1,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,    -1,   402,
     403,   404,   405,    -1,   407,   408,   409,   410,   411,    -1,
     413,   414,    -1,    -1,   417,   418,   419,   420,   421,    -1,
     423,   424,   425,   426,   427,   428,   429,   430,    -1,    -1,
     433,   434,   435,   436,   437,    -1,    -1,   440,   441,   442,
     443,   444,   445,   446,    -1,   448,    -1,   450,   451,   452,
     453,   454,    -1,    -1,   457,    -1,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,    -1,     3,
     483,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   497,    19,    20,    21,    22,    23,
      24,    25,    26,    27,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    -1,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    81,    -1,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    -1,
      -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,    -1,   116,    -1,   118,   119,   120,   121,   122,   123,
      -1,   125,   126,   127,   128,   129,    -1,    -1,   132,   133,
     134,   135,   136,    -1,   138,   139,   140,    -1,   142,   143,
     144,    -1,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,    -1,   158,    -1,   160,   161,   162,   163,
      -1,   165,    -1,   167,    -1,    -1,    -1,   171,   172,   173,
      -1,   175,    -1,   177,    -1,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,   189,    -1,   191,   192,   193,
     194,    -1,   196,   197,   198,   199,   200,   201,    -1,   203,
      -1,   205,   206,   207,   208,   209,   210,   211,   212,    -1,
     214,    -1,   216,    -1,    -1,   219,    -1,   221,   222,   223,
     224,   225,   226,    -1,    -1,   229,    -1,   231,    -1,    -1,
     234,   235,   236,    -1,    -1,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
      -1,   265,   266,   267,   268,   269,    -1,   271,   272,    -1,
     274,    -1,   276,   277,   278,   279,   280,   281,    -1,   283,
     284,    -1,    -1,   287,   288,   289,    -1,    -1,   292,   293,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,    -1,   309,   310,   311,   312,   313,
     314,   315,   316,   317,    -1,   319,   320,   321,   322,   323,
     324,    -1,   326,   327,   328,   329,   330,   331,   332,   333,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,    -1,    -1,   349,   350,    -1,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,    -1,
     374,   375,   376,   377,   378,    -1,   380,   381,   382,   383,
      -1,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,    -1,   402,   403,
     404,   405,    -1,   407,   408,   409,   410,   411,    -1,   413,
     414,    -1,    -1,   417,   418,   419,   420,   421,    -1,   423,
     424,   425,   426,   427,   428,   429,   430,    -1,    -1,   433,
     434,   435,   436,   437,    -1,    -1,   440,   441,   442,   443,
     444,   445,   446,    -1,   448,    -1,   450,   451,   452,   453,
     454,    -1,    -1,   457,    -1,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,    -1,     3,   483,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   497,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    -1,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    81,    -1,    83,    84,
      85,    -1,    87,    88,    89,    90,    91,    92,    -1,    -1,
      95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
      -1,   116,    -1,   118,   119,   120,   121,   122,   123,    -1,
     125,   126,   127,   128,   129,    -1,    -1,   132,   133,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
      -1,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,    -1,   158,    -1,   160,   161,   162,   163,    -1,
     165,    -1,   167,    -1,    -1,    -1,   171,   172,   173,    -1,
     175,    -1,   177,    -1,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,   189,    -1,   191,   192,   193,   194,
      -1,   196,   197,   198,   199,   200,   201,    -1,   203,    -1,
     205,   206,   207,   208,   209,   210,   211,   212,    -1,   214,
      -1,   216,    -1,    -1,   219,    -1,   221,   222,   223,   224,
     225,   226,    -1,    -1,   229,    -1,   231,    -1,    -1,   234,
     235,   236,    -1,    -1,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,    -1,
     265,   266,   267,   268,   269,    -1,   271,   272,    -1,   274,
      -1,   276,   277,   278,   279,   280,   281,    -1,   283,   284,
      -1,    -1,   287,   288,   289,    -1,    -1,   292,   293,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,    -1,   309,   310,   311,   312,   313,   314,
     315,   316,   317,    -1,   319,   320,   321,   322,   323,   324,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,    -1,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,    -1,    -1,   349,   350,    -1,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,    -1,   374,
     375,   376,   377,   378,    -1,   380,   381,   382,   383,    -1,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,    -1,   402,   403,   404,
     405,    -1,   407,   408,   409,   410,   411,    -1,   413,   414,
      -1,    -1,   417,   418,   419,   420,   421,    -1,   423,   424,
     425,   426,   427,   428,   429,   430,    -1,    -1,   433,   434,
     435,   436,   437,    -1,    -1,   440,   441,   442,   443,   444,
     445,   446,    -1,   448,    -1,   450,   451,   452,   453,   454,
      -1,    -1,   457,    -1,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,    -1,     3,   483,     5,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   497,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    -1,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    81,    -1,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    -1,    -1,    95,
      96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,    -1,
     116,    -1,   118,   119,   120,   121,   122,   123,    -1,   125,
     126,   127,   128,   129,    -1,    -1,   132,   133,   134,   135,
     136,    -1,   138,   139,   140,    -1,   142,   143,   144,    -1,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,    -1,   160,   161,   162,   163,    -1,   165,
      -1,   167,    -1,    -1,    -1,   171,   172,   173,    -1,   175,
      -1,   177,    -1,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,   189,    -1,   191,   192,   193,   194,    -1,
     196,   197,   198,   199,   200,   201,    -1,   203,    -1,   205,
     206,   207,   208,   209,   210,   211,   212,    -1,   214,    -1,
     216,    -1,    -1,   219,    -1,   221,   222,   223,   224,   225,
     226,    -1,    -1,   229,    -1,   231,    -1,    -1,   234,   235,
     236,    -1,    -1,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,    -1,   265,
     266,   267,   268,   269,    -1,   271,   272,    -1,   274,    -1,
     276,   277,   278,   279,   280,   281,    -1,   283,   284,    -1,
      -1,   287,   288,   289,    -1,    -1,   292,   293,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,    -1,   309,   310,   311,   312,   313,   314,   315,
     316,   317,    -1,   319,   320,   321,   322,   323,   324,    -1,
     326,   327,   328,   329,   330,   331,   332,   333,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,    -1,    -1,   349,   350,    -1,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,    -1,   368,   369,   370,   371,   372,    -1,   374,   375,
     376,   377,   378,    -1,   380,   381,   382,   383,    -1,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,    -1,   402,   403,    -1,   405,
      -1,   407,   408,   409,   410,   411,    -1,   413,   414,    -1,
      -1,   417,   418,   419,   420,   421,    -1,   423,   424,   425,
     426,   427,   428,   429,   430,    -1,    -1,   433,   434,   435,
     436,   437,    -1,    -1,   440,   441,   442,   443,   444,   445,
     446,    -1,   448,    -1,   450,   451,   452,   453,   454,    -1,
      -1,   457,    -1,    -1,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,    -1,     3,    -1,     5,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   497,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    -1,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    81,    -1,    83,    84,    85,    -1,
      87,    88,    89,    90,    91,    92,    -1,    -1,    95,    96,
      97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,    -1,   116,
      -1,   118,   119,   120,   121,   122,   123,    -1,   125,   126,
     127,   128,   129,    -1,    -1,   132,   133,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,    -1,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
      -1,   158,    -1,   160,   161,   162,   163,    -1,   165,    -1,
     167,    -1,    -1,    -1,   171,   172,   173,    -1,   175,    -1,
     177,    -1,   179,   180,   181,    -1,   183,   184,   185,   186,
     187,   188,   189,    -1,   191,   192,   193,   194,    -1,   196,
     197,   198,   199,   200,   201,    -1,   203,    -1,   205,   206,
     207,   208,   209,   210,   211,   212,    -1,   214,    -1,   216,
      -1,    -1,   219,    -1,   221,   222,   223,   224,   225,   226,
      -1,    -1,   229,    -1,   231,    -1,    -1,   234,   235,   236,
      -1,    -1,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,    -1,   265,   266,
     267,   268,   269,    -1,   271,   272,    -1,   274,    -1,   276,
     277,   278,   279,   280,   281,    -1,   283,   284,    -1,    -1,
     287,   288,   289,    -1,    -1,   292,   293,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,    -1,   309,   310,   311,   312,   313,   314,   315,   316,
     317,    -1,   319,   320,   321,   322,   323,   324,    -1,   326,
     327,   328,   329,   330,   331,   332,   333,    -1,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
      -1,    -1,   349,   350,    -1,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
      -1,   368,   369,   370,   371,   372,    -1,   374,   375,   376,
     377,   378,    -1,   380,   381,   382,   383,    -1,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,    -1,   402,   403,    -1,   405,    -1,
     407,   408,   409,   410,   411,    -1,   413,   414,    -1,    -1,
     417,   418,   419,   420,   421,    -1,   423,   424,   425,   426,
     427,   428,   429,   430,    -1,    -1,   433,   434,   435,   436,
     437,    -1,    -1,   440,   441,   442,   443,   444,   445,   446,
      -1,   448,    -1,   450,   451,   452,   453,   454,    -1,    -1,
     457,    -1,    -1,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,    -1,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     497,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      -1,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    81,    -1,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    -1,    95,    96,    97,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,    -1,
     158,    -1,   160,   161,   162,   163,    -1,   165,    -1,   167,
      -1,    -1,    -1,   171,   172,   173,    -1,   175,    -1,   177,
      -1,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,   189,    -1,   191,   192,   193,   194,    -1,   196,   197,
     198,   199,   200,   201,    -1,   203,    -1,   205,   206,   207,
     208,   209,   210,   211,   212,    -1,   214,    -1,   216,    -1,
      -1,   219,    -1,   221,   222,   223,   224,   225,   226,    -1,
      -1,   229,    -1,   231,    -1,    -1,   234,   235,   236,    -1,
      -1,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,    -1,   265,   266,   267,
     268,   269,    -1,   271,   272,    -1,   274,    -1,   276,   277,
     278,   279,   280,   281,    -1,   283,   284,    -1,    -1,   287,
     288,   289,    -1,    -1,   292,   293,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
      -1,   309,   310,   311,   312,   313,   314,   315,   316,   317,
      -1,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,    -1,
      -1,   349,   350,    -1,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,    -1,   374,   375,   376,   377,
     378,    -1,   380,   381,   382,   383,    -1,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,    -1,   402,   403,    -1,   405,    -1,   407,
     408,   409,   410,   411,    -1,   413,   414,    -1,    -1,   417,
     418,   419,   420,   421,    -1,   423,   424,   425,   426,   427,
     428,   429,   430,    -1,    -1,   433,   434,   435,   436,   437,
      -1,    -1,   440,   441,   442,   443,   444,   445,   446,    -1,
     448,    -1,   450,   451,   452,   453,   454,    -1,    -1,   457,
      -1,    -1,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,    -1,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   497,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    -1,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    81,    -1,    83,    84,    85,    -1,    87,    88,
      89,    90,    91,    92,    -1,    -1,    95,    96,    97,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,    -1,   116,    -1,   118,
     119,   120,   121,   122,   123,    -1,   125,   126,   127,   128,
     129,    -1,    -1,   132,   133,   134,   135,   136,    -1,   138,
     139,   140,    -1,   142,   143,   144,    -1,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,    -1,   158,
      -1,   160,   161,   162,   163,    -1,   165,    -1,   167,    -1,
      -1,    -1,   171,   172,   173,    -1,   175,    -1,   177,    -1,
     179,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
     189,    -1,   191,   192,   193,   194,    -1,   196,   197,   198,
     199,   200,   201,    -1,   203,    -1,   205,   206,   207,   208,
     209,   210,   211,   212,    -1,   214,    -1,   216,    -1,    -1,
     219,    -1,   221,   222,   223,   224,   225,   226,    -1,    -1,
     229,    -1,   231,    -1,    -1,   234,   235,   236,    -1,    -1,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,    -1,   265,   266,   267,   268,
     269,    -1,   271,   272,    -1,   274,    -1,   276,   277,   278,
     279,   280,   281,    -1,   283,   284,    -1,    -1,   287,   288,
     289,    -1,    -1,   292,   293,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,    -1,
     309,   310,   311,   312,   313,   314,   315,   316,   317,    -1,
     319,   320,   321,   322,   323,   324,    -1,   326,   327,   328,
     329,   330,   331,   332,   333,    -1,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,    -1,    -1,
     349,   350,    -1,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,    -1,   368,
     369,   370,   371,   372,    -1,   374,   375,   376,   377,   378,
      -1,   380,   381,   382,   383,    -1,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,    -1,   402,   403,    -1,   405,    -1,   407,   408,
     409,   410,   411,    -1,   413,   414,    -1,    -1,   417,   418,
     419,   420,   421,    -1,   423,   424,   425,   426,   427,   428,
     429,   430,    -1,    -1,   433,   434,   435,   436,   437,    -1,
      -1,   440,   441,   442,   443,   444,   445,   446,    -1,   448,
      -1,   450,   451,   452,   453,   454,    -1,    -1,   457,    -1,
      -1,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,    -1,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   497,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    -1,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    81,    -1,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,    -1,   116,    -1,   118,   119,
     120,   121,   122,   123,    -1,   125,   126,   127,   128,   129,
      -1,    -1,   132,   133,   134,   135,   136,    -1,   138,   139,
     140,    -1,   142,   143,   144,    -1,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,    -1,   158,    -1,
     160,   161,   162,   163,    -1,   165,    -1,   167,    -1,    -1,
      -1,   171,   172,   173,    -1,   175,    -1,   177,    -1,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,   189,
      -1,   191,   192,   193,   194,    -1,   196,   197,   198,   199,
     200,   201,    -1,   203,    -1,   205,   206,   207,   208,   209,
     210,   211,   212,    -1,   214,    -1,   216,    -1,    -1,   219,
      -1,   221,   222,   223,   224,   225,   226,    -1,    -1,   229,
      -1,   231,    -1,    -1,   234,   235,   236,    -1,    -1,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,    -1,   265,   266,   267,   268,   269,
      -1,   271,   272,    -1,   274,    -1,   276,   277,   278,   279,
     280,   281,    -1,   283,   284,    -1,    -1,   287,   288,   289,
      -1,    -1,   292,   293,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,    -1,   309,
     310,   311,   312,   313,   314,   315,   316,   317,    -1,   319,
     320,   321,   322,   323,   324,    -1,   326,   327,   328,   329,
     330,   331,   332,   333,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,    -1,    -1,   349,
     350,    -1,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,   371,   372,    -1,   374,   375,   376,   377,   378,    -1,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,    -1,   402,   403,    -1,   405,    -1,   407,   408,   409,
     410,   411,    -1,   413,   414,    -1,    -1,   417,   418,   419,
     420,   421,    -1,   423,   424,   425,   426,   427,   428,   429,
     430,    -1,    -1,   433,   434,   435,   436,   437,    -1,    -1,
     440,   441,   442,   443,   444,   445,   446,    -1,   448,    -1,
     450,   451,   452,   453,   454,    -1,    -1,   457,    -1,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,    -1,    -1,    -1,    -1,     3,     4,     5,    -1,    -1,
       8,     9,    -1,    -1,    -1,    -1,    -1,   497,    16,    17,
      18,    19,    20,    21,    22,    23,    24,    25,    26,    27,
      28,    29,    30,    31,    32,    33,    34,    35,    36,    37,
      38,    39,    40,    41,    42,    43,    44,    45,    46,    47,
      -1,    49,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,    71,    -1,    73,    74,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    86,    87,
      88,    89,    90,    91,    92,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
     138,   139,   140,   141,   142,   143,   144,   145,   146,   147,
     148,   149,    -1,   151,   152,   153,   154,   155,    -1,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   169,   170,   171,   172,   173,   174,   175,   176,   177,
     178,    -1,    -1,   181,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   204,    -1,   206,   207,
     208,   209,   210,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,    -1,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,    -1,   294,   295,   296,    -1,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,    -1,   312,   313,    -1,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,    -1,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,    -1,   420,    -1,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,    -1,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   477,
     478,   479,   480,    -1,     3,    -1,   484,   485,   486,     8,
     488,   489,   490,   491,   492,   493,    -1,    16,    17,    18,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    -1,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    81,    -1,    83,    84,    85,    -1,    87,    88,
      89,    90,    91,    92,    -1,    -1,    95,    96,    97,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,    -1,   116,    -1,   118,
     119,   120,   121,   122,   123,    -1,   125,   126,   127,   128,
     129,    -1,    -1,   132,   133,   134,   135,   136,    -1,   138,
     139,   140,    -1,   142,   143,   144,    -1,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,    -1,   158,
      -1,   160,   161,   162,   163,    -1,   165,    -1,   167,    -1,
      -1,    -1,   171,   172,   173,    -1,   175,    -1,   177,    -1,
     179,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
     189,    -1,   191,   192,   193,   194,    -1,   196,   197,   198,
     199,   200,   201,    -1,   203,    -1,   205,   206,   207,   208,
     209,   210,   211,   212,    -1,   214,    -1,   216,    -1,    -1,
     219,    -1,   221,   222,   223,   224,   225,   226,    -1,    -1,
     229,    -1,   231,    -1,    -1,   234,   235,   236,    -1,    -1,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,    -1,   265,   266,   267,   268,
     269,    -1,   271,   272,    -1,   274,    -1,   276,   277,   278,
     279,   280,   281,    -1,   283,   284,    -1,    -1,   287,   288,
     289,    -1,    -1,   292,   293,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,    -1,
     309,   310,   311,   312,   313,   314,   315,   316,   317,    -1,
     319,   320,   321,   322,   323,   324,    -1,   326,   327,   328,
     329,   330,   331,   332,   333,    -1,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,    -1,    -1,
     349,   350,    -1,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,    -1,   368,
     369,   370,   371,   372,    -1,   374,   375,   376,   377,   378,
      -1,   380,   381,   382,   383,    -1,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,    -1,   402,   403,    -1,   405,    -1,   407,   408,
     409,   410,   411,    -1,   413,   414,    -1,    -1,   417,   418,
     419,   420,   421,    -1,   423,   424,   425,   426,   427,   428,
     429,   430,    -1,    -1,   433,   434,   435,   436,   437,    -1,
      -1,   440,   441,   442,   443,   444,   445,   446,    -1,   448,
      -1,   450,   451,   452,   453,   454,    -1,    -1,   457,    -1,
      -1,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,    -1,    -1,    -1,   484,   485,   486,    -1,   488,
     489,   490,   491,   492,   493,     8,    -1,    -1,    11,    -1,
      -1,    -1,    15,    16,    17,    18,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,     8,    -1,    -1,    11,    -1,    -1,
      33,    15,    16,    17,    18,    -1,    -1,    -1,    41,    -1,
      -1,    -1,    -1,    -1,    -1,    48,    -1,    -1,    -1,    33,
      -1,    -1,    -1,     8,    -1,    -1,    11,    41,    -1,    -1,
      15,    16,    17,    18,    48,    -1,    -1,    -1,    -1,    -1,
      73,    -1,     8,    -1,    -1,    11,    -1,    -1,    33,    15,
      16,    17,    18,    -1,    -1,    -1,    41,    -1,    -1,    73,
      -1,    -1,    -1,    48,    -1,    -1,    -1,    33,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    41,    -1,    -1,    -1,    -1,
      -1,    -1,    48,    -1,    -1,    -1,    -1,    -1,    73,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,     8,    -1,    -1,    11,    -1,    73,    -1,    15,
      16,    17,    18,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,     8,    -1,    -1,    11,    -1,    -1,    33,    15,    16,
      17,    18,    -1,    -1,    -1,    41,    -1,    -1,    -1,    -1,
      -1,   174,    48,    -1,    -1,    -1,    33,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    41,    -1,    -1,   190,    -1,    -1,
     174,    48,   195,    -1,    -1,    -1,    -1,    73,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   190,    -1,    -1,    -1,
      -1,   195,    -1,    -1,   217,   218,    73,    -1,    -1,   174,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   232,
      -1,    -1,    -1,   217,   218,   190,    -1,    -1,   174,    -1,
     195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   232,    -1,
      -1,    -1,    -1,    -1,   190,    -1,    -1,    -1,    -1,   195,
      -1,    -1,   217,   218,    -1,    -1,    -1,   270,    -1,    -1,
     273,    -1,    -1,    -1,    -1,    -1,    -1,   232,    -1,    -1,
      -1,   217,   218,    -1,   287,    -1,   270,   290,    -1,   273,
      -1,    -1,    -1,    -1,    -1,    -1,   232,    -1,   174,    -1,
      -1,    -1,    -1,   287,    -1,    -1,   290,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   190,   270,    -1,   174,   273,   195,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   287,   190,   270,   290,    -1,   273,   195,    -1,
      -1,   217,   218,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   287,    -1,    -1,   290,    -1,   232,    -1,    -1,    -1,
     217,   218,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   232,   379,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   270,   379,    -1,   273,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   287,    -1,   270,   290,    -1,   273,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   379,    -1,    -1,    -1,    -1,    -1,
     287,    -1,    -1,   290,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   379,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   481,    -1,
      -1,   484,   485,   486,    -1,   488,   489,   490,   491,   492,
     493,    -1,    -1,    -1,    -1,   498,    -1,   481,    -1,    -1,
     484,   485,   486,   379,   488,   489,   490,   491,   492,   493,
      -1,    -1,    -1,    -1,   498,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   379,    -1,    -1,    -1,   481,    -1,    -1,   484,
     485,   486,    -1,   488,   489,   490,   491,   492,   493,    -1,
      -1,    -1,    -1,   498,    -1,   481,    -1,    -1,   484,   485,
     486,    -1,   488,   489,   490,   491,   492,   493,     8,    -1,
      -1,    11,   498,    -1,    -1,    15,    16,    17,    18,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    41,    -1,    -1,    -1,    -1,    -1,    -1,    48,    -1,
      -1,    -1,    -1,    -1,    -1,   481,    -1,    -1,   484,   485,
     486,    -1,   488,   489,   490,   491,   492,   493,    -1,    -1,
      -1,    -1,   498,    73,   481,    -1,    -1,   484,   485,   486,
      -1,   488,   489,   490,   491,   492,   493,     8,    -1,    -1,
      11,   498,    -1,    -1,    15,    16,    17,    18,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,     8,    -1,    -1,    11,
      -1,    -1,    33,    15,    16,    17,    18,    -1,    -1,    -1,
      41,    -1,    -1,    -1,    -1,    -1,    -1,    48,    -1,    -1,
      -1,    33,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    41,
      -1,    -1,    -1,    -1,    -1,    -1,    48,    -1,    -1,    -1,
      -1,    -1,    73,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    73,    -1,    -1,   174,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     190,    -1,    -1,    -1,    -1,   195,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   217,   218,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   232,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   174,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   190,
     270,    -1,   174,   273,   195,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   287,   190,    -1,
     290,    -1,    -1,   195,    -1,    -1,   217,   218,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   232,    -1,    -1,    -1,   217,   218,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     232,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   270,
      -1,    -1,   273,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   287,    -1,   270,   290,
      -1,   273,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   379,
      -1,    -1,    -1,    -1,    -1,   287,    -1,    -1,   290,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   379,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   379,    -1,    -1,
      -1,   481,    -1,    -1,   484,   485,   486,    -1,   488,   489,
     490,   491,   492,   493,    -1,    -1,    -1,    -1,   498,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     481,    -1,    -1,   484,   485,   486,    -1,   488,   489,   490,
     491,   492,   493,    -1,    -1,    -1,    -1,   498,    -1,   481,
       3,    -1,   484,   485,   486,    -1,   488,   489,   490,   491,
     492,   493,    -1,    -1,   496,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    27,    28,    29,    30,    31,    32,
      33,    34,    35,    36,    37,    38,    39,    40,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    -1,
      83,    84,    85,    86,    87,    88,    89,    90,    91,    92,
      93,    -1,    95,    96,    97,    98,    99,   100,    -1,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   127,   128,   129,   130,   131,   132,
     133,   134,   135,   136,   137,   138,   139,   140,   141,   142,
     143,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   167,    -1,   169,    -1,   171,   172,
     173,    -1,   175,   176,   177,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,    -1,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,    -1,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   214,   215,   216,    -1,    -1,   219,    -1,   221,   222,
     223,   224,   225,   226,   227,   228,   229,    -1,   231,    -1,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,    -1,   265,   266,   267,   268,   269,   270,   271,   272,
      -1,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,    -1,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,    -1,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,    -1,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   490,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    -1,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    81,    -1,    83,    84,
      85,    -1,    87,    88,    89,    90,    91,    92,    -1,    -1,
      95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
      -1,   116,    -1,   118,   119,   120,   121,   122,   123,    -1,
     125,   126,   127,   128,   129,    -1,    -1,   132,   133,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
      -1,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,    -1,   158,    -1,   160,   161,   162,   163,    -1,
     165,    -1,   167,    -1,    -1,    -1,   171,   172,   173,    -1,
     175,    -1,   177,    -1,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,   189,    -1,   191,   192,   193,   194,
      -1,   196,   197,   198,   199,   200,   201,    -1,   203,    -1,
     205,   206,   207,   208,   209,   210,   211,   212,    -1,   214,
      -1,   216,    -1,    -1,   219,    -1,   221,   222,   223,   224,
     225,   226,    -1,    -1,   229,    -1,   231,    -1,    -1,   234,
     235,   236,    -1,    -1,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,    -1,
     265,   266,   267,   268,   269,    -1,   271,   272,    -1,   274,
      -1,   276,   277,   278,   279,   280,   281,    -1,   283,   284,
      -1,    -1,   287,   288,   289,    -1,    -1,   292,   293,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,    -1,   309,   310,   311,   312,   313,   314,
     315,   316,   317,    -1,   319,   320,   321,   322,   323,   324,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,    -1,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,    -1,    -1,   349,   350,    -1,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,   371,   372,    -1,   374,
     375,   376,   377,   378,    -1,   380,   381,   382,   383,    -1,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,    -1,   402,   403,    -1,
     405,    -1,   407,   408,   409,   410,   411,    -1,   413,   414,
      -1,    -1,   417,   418,   419,   420,   421,    -1,   423,   424,
     425,   426,   427,   428,   429,   430,    -1,    -1,   433,   434,
     435,   436,   437,    -1,    -1,   440,   441,   442,   443,   444,
     445,   446,    -1,   448,    -1,   450,   451,   452,   453,   454,
      -1,    -1,   457,    -1,    -1,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,     3,     4,     5,    -1,
      -1,    -1,     9,    -1,    -1,   490,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    -1,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    81,    -1,    83,    84,    85,    -1,
      87,    88,    89,    90,    91,    92,    -1,    -1,    95,    96,
      97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
      -1,   118,   119,   120,   121,   122,   123,    -1,   125,   126,
     127,   128,   129,    -1,    -1,   132,   133,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,    -1,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,    -1,   160,   161,   162,   163,    -1,   165,    -1,
     167,    -1,    -1,    -1,   171,   172,   173,    -1,   175,    -1,
     177,    -1,   179,   180,   181,    -1,   183,   184,   185,   186,
     187,   188,   189,    -1,   191,   192,   193,   194,    -1,   196,
     197,   198,   199,   200,   201,    -1,   203,    -1,   205,   206,
     207,   208,   209,   210,   211,   212,    -1,   214,    -1,   216,
      -1,    -1,   219,    -1,   221,   222,   223,   224,   225,   226,
      -1,    -1,   229,    -1,   231,    -1,    -1,   234,   235,   236,
      -1,    -1,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,    -1,   265,   266,
     267,   268,   269,    -1,   271,   272,    -1,   274,    -1,   276,
     277,   278,   279,   280,   281,    -1,   283,   284,   285,    -1,
     287,   288,   289,    -1,    -1,   292,   293,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,    -1,   309,   310,   311,   312,   313,   314,   315,   316,
     317,    -1,   319,   320,   321,   322,   323,   324,    -1,   326,
     327,   328,   329,   330,   331,   332,   333,    -1,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
      -1,    -1,   349,   350,    -1,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
      -1,   368,   369,   370,   371,   372,    -1,   374,   375,   376,
     377,   378,    -1,   380,   381,   382,   383,    -1,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,    -1,   402,   403,    -1,   405,    -1,
     407,   408,   409,   410,   411,    -1,   413,   414,    -1,    -1,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,    -1,    -1,   433,   434,   435,   436,
     437,    -1,    -1,   440,   441,   442,   443,   444,   445,   446,
      -1,   448,    -1,   450,   451,   452,   453,   454,    -1,    -1,
     457,    -1,    -1,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,     3,     4,     5,    -1,    -1,    -1,
       9,   488,   489,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    -1,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    81,    -1,    83,    84,    85,    -1,    87,    88,
      89,    90,    91,    92,    -1,    -1,    95,    96,    97,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,   116,    -1,   118,
     119,   120,   121,   122,   123,    -1,   125,   126,   127,   128,
     129,    -1,    -1,   132,   133,   134,   135,   136,    -1,   138,
     139,   140,    -1,   142,   143,   144,    -1,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
      -1,   160,   161,   162,   163,    -1,   165,    -1,   167,    -1,
      -1,    -1,   171,   172,   173,    -1,   175,    -1,   177,    -1,
     179,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
     189,    -1,   191,   192,   193,   194,    -1,   196,   197,   198,
     199,   200,   201,    -1,   203,    -1,   205,   206,   207,   208,
     209,   210,   211,   212,    -1,   214,    -1,   216,    -1,    -1,
     219,    -1,   221,   222,   223,   224,   225,   226,    -1,    -1,
     229,    -1,   231,    -1,    -1,   234,   235,   236,    -1,    -1,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,    -1,   265,   266,   267,   268,
     269,    -1,   271,   272,    -1,   274,    -1,   276,   277,   278,
     279,   280,   281,    -1,   283,   284,   285,    -1,   287,   288,
     289,    -1,    -1,   292,   293,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,    -1,
     309,   310,   311,   312,   313,   314,   315,   316,   317,    -1,
     319,   320,   321,   322,   323,   324,    -1,   326,   327,   328,
     329,   330,   331,   332,   333,    -1,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,    -1,    -1,
     349,   350,    -1,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,    -1,   368,
     369,   370,   371,   372,    -1,   374,   375,   376,   377,   378,
      -1,   380,   381,   382,   383,    -1,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,    -1,   402,   403,    -1,   405,    -1,   407,   408,
     409,   410,   411,    -1,   413,   414,    -1,    -1,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,    -1,    -1,   433,   434,   435,   436,   437,    -1,
      -1,   440,   441,   442,   443,   444,   445,   446,    -1,   448,
      -1,   450,   451,   452,   453,   454,    -1,    -1,   457,    -1,
      -1,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,     3,     4,     5,    -1,    -1,    -1,     9,   488,
     489,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    -1,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,    -1,   160,
     161,   162,   163,    -1,   165,    -1,   167,    -1,    -1,    -1,
     171,   172,   173,    -1,   175,    -1,   177,    -1,   179,   180,
     181,    -1,   183,   184,   185,   186,   187,   188,   189,    -1,
     191,   192,   193,   194,    -1,   196,   197,   198,   199,   200,
     201,    -1,   203,    -1,   205,   206,   207,   208,   209,   210,
     211,   212,    -1,   214,    -1,   216,    -1,    -1,   219,    -1,
     221,   222,   223,   224,   225,   226,    -1,    -1,   229,    -1,
     231,    -1,    -1,   234,   235,   236,    -1,    -1,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,    -1,   265,   266,   267,   268,   269,    -1,
     271,   272,    -1,   274,    -1,   276,   277,   278,   279,   280,
     281,    -1,   283,   284,   285,    -1,   287,   288,   289,    -1,
      -1,   292,   293,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,    -1,   319,   320,
     321,   322,   323,   324,    -1,   326,   327,   328,   329,   330,
     331,   332,   333,    -1,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,    -1,    -1,   349,   350,
      -1,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,    -1,   374,   375,   376,   377,   378,    -1,   380,
     381,   382,   383,    -1,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
      -1,   402,   403,    -1,   405,    -1,   407,   408,   409,   410,
     411,    -1,   413,   414,    -1,    -1,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
      -1,    -1,   433,   434,   435,   436,   437,    -1,    -1,   440,
     441,   442,   443,   444,   445,   446,    -1,   448,    -1,   450,
     451,   452,   453,   454,    -1,    -1,   457,    -1,    -1,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
      -1,    -1,     8,    -1,    -1,    11,    -1,   488,   489,    15,
      16,    17,    18,    -1,    -1,     8,    -1,    -1,    11,    -1,
      -1,    -1,    15,    16,    17,    18,    -1,    33,    -1,    -1,
      -1,    37,    -1,    -1,    -1,    41,    -1,    -1,    -1,    -1,
      33,    -1,    48,    -1,    -1,    -1,    -1,    -1,    41,     8,
      -1,    -1,    11,    -1,    -1,    48,    15,    16,    17,    18,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    73,    -1,    -1,
      -1,    -1,    -1,    -1,    33,    -1,    -1,    -1,    -1,    -1,
      73,    -1,    41,     8,    -1,    -1,    11,    -1,    -1,    48,
      15,    16,    17,    18,    -1,    -1,     8,    -1,    -1,    11,
      -1,    -1,    -1,    15,    16,    17,    18,    -1,    33,    -1,
      -1,    36,    -1,    -1,    73,    -1,    41,    -1,   124,    -1,
      -1,    33,    -1,    48,    -1,    -1,    -1,    -1,    -1,    41,
      -1,    -1,    -1,    -1,    -1,    -1,    48,    -1,    -1,    -1,
      -1,    -1,     8,    -1,    -1,    11,    -1,    -1,    73,    15,
      16,    17,    18,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    73,    -1,    -1,    -1,    -1,    -1,    33,   174,    -1,
      36,   164,    -1,    -1,    -1,    41,   169,    -1,    -1,    -1,
      -1,   174,    48,    -1,   190,    -1,    -1,    -1,    -1,   195,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   190,    -1,    -1,
      -1,    -1,   195,    -1,   163,    -1,    -1,    73,    -1,    -1,
      -1,   217,   218,    -1,    -1,   174,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   217,   218,   232,    -1,    -1,    -1,
      -1,   190,    -1,    -1,    -1,    -1,   195,    -1,    -1,   232,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   174,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   217,   218,
      -1,    -1,   174,    -1,   270,   190,    -1,   273,    -1,    -1,
     195,    -1,    -1,   232,    -1,    -1,    -1,   270,   190,    -1,
     273,   287,    -1,   195,   290,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   217,   218,   287,    -1,    -1,   290,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   217,   218,   232,   174,    -1,
      -1,   270,    -1,    -1,   273,    -1,    -1,    -1,    -1,    -1,
     232,    -1,    -1,    -1,   190,    -1,    -1,    -1,   287,   195,
      -1,   290,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   270,    -1,    -1,   273,    -1,
      -1,   217,   218,    -1,   313,    -1,    -1,    -1,   270,    -1,
      -1,   273,   287,    -1,    -1,   290,   232,    -1,    -1,    -1,
      -1,    -1,    -1,   379,    -1,   287,    -1,    -1,   290,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   379,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   308,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   270,    -1,    -1,   273,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     379,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   439,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   379,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   379,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   481,    -1,    -1,   484,   485,
     486,    -1,   488,   489,   490,   491,   492,   493,   481,    -1,
      -1,   484,   485,   486,    -1,   488,   489,   490,   491,   492,
     493,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   379,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   481,    -1,    -1,   484,   485,   486,    -1,   488,
     489,   490,   491,   492,   493,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   481,    -1,    -1,   484,
     485,   486,    -1,   488,   489,   490,   491,   492,   493,   481,
      -1,    -1,   484,   485,   486,    -1,   488,   489,   490,   491,
     492,   493,    -1,    -1,    -1,    -1,    -1,    -1,     8,    -1,
      -1,    11,    -1,    -1,    -1,    15,    16,    17,    18,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    33,    -1,   481,    -1,    -1,   484,   485,
     486,    41,   488,   489,   490,   491,   492,   493,    48,    -1,
      -1,    -1,    -1,     8,    -1,    -1,    11,    -1,    -1,    -1,
      15,    16,    17,    18,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    73,    -1,    -1,    -1,    -1,    33,    -1,
      -1,    36,    -1,    -1,    -1,    -1,    41,    -1,    -1,    -1,
      -1,    -1,     8,    48,    -1,    11,    -1,    -1,    -1,    15,
      16,    17,    18,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    33,    73,    -1,
      -1,    -1,    -1,    -1,    -1,    41,    -1,     8,    -1,    -1,
      11,    -1,    48,    -1,    15,    16,    17,    18,    -1,    -1,
       8,    -1,    -1,    11,    -1,    -1,    -1,    15,    16,    17,
      18,    -1,    33,    -1,    -1,    36,    -1,    73,    -1,    -1,
      41,    -1,    -1,    -1,    -1,    33,    -1,    48,    -1,   169,
      -1,    -1,    -1,    41,   174,    -1,     8,    -1,    -1,    11,
      48,    -1,    -1,    15,    16,    17,    18,    -1,    -1,    -1,
     190,    -1,    73,    -1,    -1,   195,    -1,    -1,    -1,    -1,
      -1,    33,    -1,    -1,    -1,    73,    -1,    -1,    -1,    41,
      -1,    -1,    -1,    -1,    -1,    -1,    48,   217,   218,   174,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   232,    -1,    -1,   190,    -1,    -1,    -1,    -1,
     195,    73,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   174,    -1,
      -1,    -1,   217,   218,    -1,    -1,    -1,    -1,    -1,    -1,
     270,    -1,    -1,   273,   190,    -1,    -1,   232,    -1,   195,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   287,    -1,    -1,
     290,    -1,    -1,   174,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   217,   218,    -1,    -1,    -1,   174,    -1,    -1,   190,
      -1,    -1,    -1,    -1,   195,   270,   232,    -1,   273,    -1,
      -1,    -1,   190,    -1,    -1,    -1,    -1,   195,    -1,    -1,
      -1,    -1,   287,    -1,    -1,   290,   217,   218,    -1,    -1,
      -1,    -1,   174,    -1,    -1,    -1,    -1,    -1,    -1,   217,
     218,   232,    -1,    -1,   270,    -1,    -1,   273,   190,    -1,
      -1,    -1,    -1,   195,   232,    -1,    -1,    -1,    -1,    -1,
      -1,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   379,
      -1,    -1,    -1,    -1,    -1,   217,   218,    -1,    -1,   270,
      -1,    -1,   273,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     232,    -1,   270,    -1,    -1,   273,   287,    -1,    -1,   290,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   287,
      -1,    -1,   290,    -1,   379,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   270,    -1,
      -1,   273,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   287,    -1,    -1,   290,    -1,
      -1,    -1,    -1,   379,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   481,    -1,    -1,   484,   485,   486,    -1,   488,   489,
     490,   491,   492,   493,    -1,    -1,   412,    -1,   379,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   379,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   481,    -1,    -1,   484,
     485,   486,    -1,   488,   489,   490,   491,   492,   493,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   379,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   481,    -1,    -1,   484,   485,
     486,    -1,   488,   489,   490,   491,   492,   493,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     481,    -1,    -1,   484,   485,   486,    -1,   488,   489,   490,
     491,   492,   493,   481,    -1,    -1,   484,   485,   486,    -1,
     488,   489,   490,   491,   492,   493,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,     3,    -1,     5,   481,
      -1,    -1,   484,   485,   486,    -1,   488,   489,   490,   491,
     492,   493,    19,    20,    21,    22,    23,    24,    25,    26,
      27,    28,    29,    30,    31,    32,    33,    34,    35,    36,
      37,    38,    39,    40,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    -1,    83,    84,    85,    86,
      87,    88,    89,    90,    91,    92,    93,    -1,    95,    96,
      97,    98,    99,   100,    -1,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     127,   128,   129,   130,   131,   132,   133,   134,   135,   136,
     137,   138,   139,   140,   141,   142,   143,   144,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   165,   166,
     167,    -1,   169,    -1,   171,   172,   173,    -1,   175,   176,
     177,   178,   179,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   189,    -1,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,    -1,   205,   206,
     207,   208,   209,   210,   211,   212,   213,   214,   215,   216,
      -1,    -1,   219,    -1,   221,   222,   223,   224,   225,   226,
     227,   228,   229,    -1,   231,    -1,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,    -1,   265,   266,
     267,   268,   269,   270,   271,   272,    -1,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,    -1,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,    -1,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,    -1,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,    -1,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    27,    28,
      29,    30,    31,    32,    33,    34,    35,    36,    37,    38,
      39,    40,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    -1,    83,    84,    85,    86,    87,    88,
      89,    90,    91,    92,    93,    -1,    95,    96,    97,    98,
      99,   100,    -1,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   127,   128,
     129,   130,   131,   132,   133,   134,   135,   136,   137,   138,
     139,   140,   141,   142,   143,   144,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,   166,   167,    -1,
     169,    -1,   171,   172,   173,    -1,   175,   176,   177,   178,
     179,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,    -1,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,    -1,   205,   206,   207,   208,
     209,   210,   211,   212,   213,   214,   215,   216,    -1,    -1,
     219,    -1,   221,   222,   223,   224,   225,   226,   227,   228,
     229,    -1,   231,    -1,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,    -1,   265,   266,   267,   268,
     269,   270,   271,   272,    -1,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
      -1,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,    -1,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
      -1,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    27,    28,    29,    30,
      31,    32,    33,    34,    35,    36,    37,    38,    39,    40,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    86,    87,    88,    89,    90,
      91,    92,    93,    -1,    95,    96,    97,    98,    99,   100,
      -1,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   127,   128,   129,   130,
     131,   132,   133,   134,   135,   136,   137,   138,   139,   140,
     141,   142,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   167,    -1,   169,    -1,
     171,   172,   173,    -1,   175,   176,   177,   178,   179,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   189,    -1,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,    -1,   205,   206,   207,   208,   209,   210,
     211,   212,   213,   214,   215,   216,    -1,    -1,   219,    -1,
     221,   222,   223,   224,   225,   226,   227,   228,   229,    -1,
     231,    -1,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,    -1,   265,   266,   267,   268,   269,   270,
     271,   272,    -1,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
      -1,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,    -1,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,    -1,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,    -1,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      -1,    54,    55,    56,    57,    -1,    59,    -1,    61,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,    -1,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,    -1,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,    -1,   158,    -1,   160,   161,   162,
     163,    -1,   165,    -1,   167,   168,    -1,   170,   171,   172,
     173,   174,   175,    -1,   177,    -1,   179,   180,   181,    -1,
     183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,    -1,   196,   197,   198,   199,   200,   201,    -1,
     203,   204,   205,   206,   207,   208,   209,   210,   211,   212,
      -1,   214,    -1,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,    -1,    -1,   229,   230,   231,   232,
      -1,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,    -1,   271,   272,
     273,   274,    -1,   276,   277,   278,   279,   280,   281,    -1,
     283,   284,    -1,    -1,   287,   288,   289,    -1,    -1,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,    -1,   309,   310,   311,   312,
     313,   314,   315,   316,   317,    -1,   319,   320,   321,   322,
     323,   324,    -1,   326,   327,   328,   329,   330,   331,   332,
     333,    -1,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,    -1,    -1,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,    -1,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,    -1,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,    -1,   402,
     403,    -1,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,   414,    -1,    -1,   417,   418,   419,   420,   421,    -1,
     423,   424,   425,   426,   427,   428,   429,   430,    -1,    -1,
     433,   434,   435,   436,   437,   438,    -1,   440,   441,   442,
     443,   444,   445,   446,    -1,   448,   449,   450,   451,   452,
     453,   454,    -1,    -1,   457,    -1,    -1,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    -1,    54,
      55,    56,    57,    -1,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    74,
      -1,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    89,    90,    91,    92,    -1,    94,
      95,    96,    97,    -1,    -1,    -1,   101,    -1,    -1,    -1,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
      -1,   116,    -1,   118,   119,   120,   121,   122,   123,    -1,
     125,   126,   127,   128,   129,    -1,    -1,   132,   133,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
      -1,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,    -1,   158,    -1,   160,   161,   162,   163,    -1,
     165,    -1,   167,   168,    -1,   170,   171,   172,   173,   174,
     175,    -1,   177,    -1,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
      -1,   196,   197,   198,   199,   200,   201,    -1,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,    -1,   214,
      -1,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,    -1,    -1,   229,   230,   231,   232,    -1,   234,
     235,   236,    -1,    -1,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,    -1,   271,   272,   273,   274,
      -1,   276,   277,   278,   279,   280,   281,    -1,   283,   284,
      -1,    -1,   287,   288,   289,    -1,    -1,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,    -1,   309,   310,   311,   312,   313,   314,
     315,   316,   317,    -1,   319,   320,   321,   322,   323,   324,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,    -1,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,    -1,    -1,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,   371,   372,    -1,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,    -1,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,    -1,   402,   403,    -1,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,   414,
      -1,    -1,   417,   418,   419,   420,   421,    -1,   423,   424,
     425,   426,   427,   428,   429,   430,    -1,    -1,   433,   434,
     435,   436,   437,    -1,    -1,   440,   441,   442,   443,   444,
     445,   446,    -1,   448,   449,   450,   451,   452,   453,   454,
      -1,    -1,   457,    -1,    -1,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    -1,    59,    -1,    -1,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,    -1,    -1,    75,    76,
      77,    78,    79,    80,    81,    -1,    83,    84,    85,    86,
      87,    88,    89,    90,    91,    92,    -1,    -1,    95,    96,
      97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,    -1,   116,
      -1,   118,   119,   120,   121,   122,   123,    -1,   125,   126,
     127,   128,   129,    -1,    -1,   132,   133,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,    -1,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
      -1,   158,    -1,   160,   161,   162,   163,    -1,   165,   166,
     167,    -1,    -1,    -1,   171,   172,   173,    -1,   175,    -1,
     177,    -1,   179,   180,   181,    -1,   183,   184,   185,   186,
     187,   188,   189,    -1,   191,   192,   193,   194,    -1,   196,
     197,   198,   199,   200,   201,    -1,   203,    -1,   205,   206,
     207,   208,   209,   210,   211,   212,    -1,   214,    -1,   216,
      -1,    -1,   219,    -1,   221,   222,   223,   224,   225,   226,
      -1,    -1,   229,    -1,   231,    -1,    -1,   234,   235,   236,
      -1,    -1,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,    -1,   265,   266,
     267,   268,   269,    -1,   271,   272,    -1,   274,    -1,   276,
     277,   278,   279,   280,   281,    -1,   283,   284,    -1,    -1,
     287,   288,   289,    -1,    -1,   292,   293,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,    -1,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,    -1,   326,
     327,   328,   329,   330,   331,   332,   333,    -1,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
      -1,    -1,   349,   350,    -1,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
      -1,   368,   369,   370,   371,   372,    -1,   374,   375,   376,
     377,   378,    -1,   380,   381,   382,   383,    -1,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,    -1,   402,   403,    -1,   405,    -1,
     407,   408,   409,   410,   411,    -1,   413,   414,    -1,    -1,
     417,   418,   419,   420,   421,    -1,   423,   424,   425,   426,
     427,   428,   429,   430,    -1,   432,   433,   434,   435,   436,
     437,    -1,    -1,   440,   441,   442,   443,   444,   445,   446,
      -1,   448,    -1,   450,   451,   452,   453,   454,    -1,    -1,
     457,    -1,    -1,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    -1,
      59,    -1,    -1,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    81,    -1,    83,    84,    85,    86,    87,    88,
      89,    90,    91,    92,    -1,    -1,    95,    96,    97,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,    -1,   116,    -1,   118,
     119,   120,   121,   122,   123,    -1,   125,   126,   127,   128,
     129,    -1,    -1,   132,   133,   134,   135,   136,    -1,   138,
     139,   140,    -1,   142,   143,   144,    -1,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,    -1,   158,
      -1,   160,   161,   162,   163,    -1,   165,   166,   167,    -1,
      -1,    -1,   171,   172,   173,    -1,   175,    -1,   177,    -1,
     179,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
     189,    -1,   191,   192,   193,   194,    -1,   196,   197,   198,
     199,   200,   201,    -1,   203,    -1,   205,   206,   207,   208,
     209,   210,   211,   212,    -1,   214,    -1,   216,    -1,    -1,
     219,    -1,   221,   222,   223,   224,   225,   226,    -1,    -1,
     229,    -1,   231,   232,    -1,   234,   235,   236,    -1,    -1,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,    -1,   265,   266,   267,   268,
     269,    -1,   271,   272,    -1,   274,    -1,   276,   277,   278,
     279,   280,   281,    -1,   283,   284,    -1,    -1,   287,   288,
     289,    -1,    -1,   292,   293,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,    -1,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,    -1,   326,   327,   328,
     329,   330,   331,   332,   333,    -1,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,    -1,    -1,
     349,   350,    -1,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,    -1,   368,
     369,   370,   371,   372,    -1,   374,   375,   376,   377,   378,
      -1,   380,   381,   382,   383,    -1,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,    -1,   402,   403,    -1,   405,    -1,   407,   408,
     409,   410,   411,    -1,   413,   414,    -1,    -1,   417,   418,
     419,   420,   421,    -1,   423,   424,   425,   426,   427,   428,
     429,   430,    -1,   432,   433,   434,   435,   436,   437,    -1,
      -1,   440,   441,   442,   443,   444,   445,   446,    -1,   448,
      -1,   450,   451,   452,   453,   454,    -1,    -1,   457,    -1,
      -1,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    -1,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,   157,   158,    -1,   160,
     161,   162,   163,    -1,   165,    -1,   167,    -1,    -1,    -1,
     171,   172,   173,    -1,   175,    -1,   177,    -1,   179,   180,
     181,    -1,   183,   184,   185,   186,   187,   188,   189,    -1,
     191,   192,   193,   194,    -1,   196,   197,   198,   199,   200,
     201,    -1,   203,    -1,   205,   206,   207,   208,   209,   210,
     211,   212,    -1,   214,    -1,   216,    -1,    -1,   219,    -1,
     221,   222,   223,   224,   225,   226,    -1,    -1,   229,    -1,
     231,    -1,    -1,   234,   235,   236,    -1,    -1,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,    -1,   265,   266,   267,   268,   269,    -1,
     271,   272,    -1,   274,    -1,   276,   277,   278,   279,   280,
     281,    -1,   283,   284,   285,    -1,   287,   288,   289,    -1,
      -1,   292,   293,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,    -1,   319,   320,
     321,   322,   323,   324,    -1,   326,   327,   328,   329,   330,
     331,   332,   333,    -1,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,    -1,    -1,   349,   350,
      -1,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,    -1,   374,   375,   376,   377,   378,    -1,   380,
     381,   382,   383,    -1,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
      -1,   402,   403,    -1,   405,    -1,   407,   408,   409,   410,
     411,    -1,   413,   414,    -1,    -1,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
      -1,    -1,   433,   434,   435,   436,   437,    -1,    -1,   440,
     441,   442,   443,   444,   445,   446,    -1,   448,    -1,   450,
     451,   452,   453,   454,    -1,    -1,   457,    -1,    -1,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
       3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    31,    32,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    -1,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    81,    -1,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,    -1,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,    -1,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,    -1,   158,    -1,   160,   161,   162,
     163,    -1,   165,    -1,   167,    -1,    -1,    -1,   171,   172,
     173,    -1,   175,    -1,   177,    -1,   179,   180,   181,    -1,
     183,   184,   185,   186,   187,   188,   189,    -1,   191,   192,
     193,   194,    -1,   196,   197,   198,   199,   200,   201,    -1,
     203,    -1,   205,   206,   207,   208,   209,   210,   211,   212,
      -1,   214,    -1,   216,    -1,    -1,   219,    -1,   221,   222,
     223,   224,   225,   226,    -1,    -1,   229,    -1,   231,    -1,
      -1,   234,   235,   236,    -1,    -1,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,    -1,   265,   266,   267,   268,   269,    -1,   271,   272,
      -1,   274,    -1,   276,   277,   278,   279,   280,   281,    -1,
     283,   284,    -1,    -1,   287,   288,   289,    -1,    -1,   292,
     293,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,    -1,   309,   310,   311,   312,
     313,   314,   315,   316,   317,    -1,   319,   320,   321,   322,
     323,   324,    -1,   326,   327,   328,   329,   330,   331,   332,
     333,    -1,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,    -1,    -1,   349,   350,    -1,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,    -1,   368,   369,   370,   371,   372,
      -1,   374,   375,   376,   377,   378,    -1,   380,   381,   382,
     383,    -1,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,    -1,   402,
     403,    -1,   405,    -1,   407,   408,   409,   410,   411,    -1,
     413,   414,    -1,    -1,   417,   418,   419,   420,   421,    -1,
     423,   424,   425,   426,   427,   428,   429,   430,    -1,    -1,
     433,   434,   435,   436,   437,    -1,    -1,   440,   441,   442,
     443,   444,   445,   446,    -1,   448,    -1,   450,   451,   452,
     453,   454,    -1,    -1,   457,    -1,    -1,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,     3,    -1,
       5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    -1,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    81,    -1,    83,    84,
      85,    -1,    87,    88,    89,    90,    91,    92,    -1,    -1,
      95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
      -1,   116,    -1,   118,   119,   120,   121,   122,   123,    -1,
     125,   126,   127,   128,   129,    -1,    -1,   132,   133,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
      -1,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,    -1,   158,    -1,   160,   161,   162,   163,    -1,
     165,    -1,   167,    -1,    -1,    -1,   171,   172,   173,    -1,
     175,    -1,   177,    -1,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,   189,    -1,   191,   192,   193,   194,
      -1,   196,   197,   198,   199,   200,   201,    -1,   203,    -1,
     205,   206,   207,   208,   209,   210,   211,   212,    -1,   214,
      -1,   216,    -1,    -1,   219,    -1,   221,   222,   223,   224,
     225,   226,    -1,    -1,   229,    -1,   231,    -1,    -1,   234,
     235,   236,    -1,    -1,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,    -1,
     265,   266,   267,   268,   269,    -1,   271,   272,    -1,   274,
      -1,   276,   277,   278,   279,   280,   281,    -1,   283,   284,
      -1,   286,   287,   288,   289,    -1,    -1,   292,   293,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,    -1,   309,   310,   311,   312,   313,   314,
     315,   316,   317,    -1,   319,   320,   321,   322,   323,   324,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,    -1,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,    -1,    -1,   349,   350,    -1,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,   371,   372,    -1,   374,
     375,   376,   377,   378,    -1,   380,   381,   382,   383,    -1,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,    -1,   402,   403,    -1,
     405,    -1,   407,   408,   409,   410,   411,    -1,   413,   414,
      -1,    -1,   417,   418,   419,   420,   421,    -1,   423,   424,
     425,   426,   427,   428,   429,   430,    -1,    -1,   433,   434,
     435,   436,   437,    -1,    -1,   440,   441,   442,   443,   444,
     445,   446,    -1,   448,    -1,   450,   451,   452,   453,   454,
      -1,    -1,   457,    -1,    -1,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,     3,    -1,     5,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    -1,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    81,    -1,    83,    84,    85,    -1,
      87,    88,    89,    90,    91,    92,    -1,    -1,    95,    96,
      97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,    -1,   116,
      -1,   118,   119,   120,   121,   122,   123,    -1,   125,   126,
     127,   128,   129,    -1,    -1,   132,   133,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,    -1,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
      -1,   158,    -1,   160,   161,   162,   163,    -1,   165,    -1,
     167,    -1,    -1,    -1,   171,   172,   173,    -1,   175,    -1,
     177,    -1,   179,   180,   181,    -1,   183,   184,   185,   186,
     187,   188,   189,    -1,   191,   192,   193,   194,    -1,   196,
     197,   198,   199,   200,   201,    -1,   203,    -1,   205,   206,
     207,   208,   209,   210,   211,   212,    -1,   214,    -1,   216,
      -1,    -1,   219,    -1,   221,   222,   223,   224,   225,   226,
      -1,    -1,   229,    -1,   231,    -1,    -1,   234,   235,   236,
      -1,    -1,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,    -1,   265,   266,
     267,   268,   269,    -1,   271,   272,    -1,   274,    -1,   276,
     277,   278,   279,   280,   281,    -1,   283,   284,    -1,   286,
     287,   288,   289,    -1,    -1,   292,   293,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,    -1,   309,   310,   311,   312,   313,   314,   315,   316,
     317,    -1,   319,   320,   321,   322,   323,   324,    -1,   326,
     327,   328,   329,   330,   331,   332,   333,    -1,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
      -1,    -1,   349,   350,    -1,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
      -1,   368,   369,   370,   371,   372,    -1,   374,   375,   376,
     377,   378,    -1,   380,   381,   382,   383,    -1,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,    -1,   402,   403,    -1,   405,    -1,
     407,   408,   409,   410,   411,    -1,   413,   414,    -1,    -1,
     417,   418,   419,   420,   421,    -1,   423,   424,   425,   426,
     427,   428,   429,   430,    -1,    -1,   433,   434,   435,   436,
     437,    -1,    -1,   440,   441,   442,   443,   444,   445,   446,
      -1,   448,    -1,   450,   451,   452,   453,   454,    -1,    -1,
     457,    -1,    -1,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    31,    32,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    -1,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    81,    -1,    83,    84,    85,    -1,    87,    88,
      89,    90,    91,    92,    -1,    -1,    95,    96,    97,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,    -1,   116,    -1,   118,
     119,   120,   121,   122,   123,    -1,   125,   126,   127,   128,
     129,    -1,    -1,   132,   133,   134,   135,   136,    -1,   138,
     139,   140,    -1,   142,   143,   144,    -1,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,    -1,   158,
      -1,   160,   161,   162,   163,    -1,   165,    -1,   167,    -1,
      -1,    -1,   171,   172,   173,    -1,   175,    -1,   177,    -1,
     179,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
     189,    -1,   191,   192,   193,   194,    -1,   196,   197,   198,
     199,   200,   201,    -1,   203,    -1,   205,   206,   207,   208,
     209,   210,   211,   212,    -1,   214,    -1,   216,    -1,    -1,
     219,    -1,   221,   222,   223,   224,   225,   226,    -1,    -1,
     229,    -1,   231,    -1,    -1,   234,   235,   236,    -1,    -1,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,    -1,   265,   266,   267,   268,
     269,    -1,   271,   272,    -1,   274,    -1,   276,   277,   278,
     279,   280,   281,    -1,   283,   284,    -1,    -1,   287,   288,
     289,    -1,    -1,   292,   293,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,    -1,
     309,   310,   311,   312,   313,   314,   315,   316,   317,    -1,
     319,   320,   321,   322,   323,   324,    -1,   326,   327,   328,
     329,   330,   331,   332,   333,    -1,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,    -1,    -1,
     349,   350,    -1,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,    -1,   368,
     369,   370,   371,   372,    -1,   374,   375,   376,   377,   378,
      -1,   380,   381,   382,   383,    -1,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,    -1,   402,   403,    -1,   405,    -1,   407,   408,
     409,   410,   411,    -1,   413,   414,    -1,    -1,   417,   418,
     419,   420,   421,    -1,   423,   424,   425,   426,   427,   428,
     429,   430,    -1,    -1,   433,   434,   435,   436,   437,    -1,
      -1,   440,   441,   442,   443,   444,   445,   446,    -1,   448,
      -1,   450,   451,   452,   453,   454,    -1,    -1,   457,    -1,
      -1,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    -1,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,    -1,   158,    -1,   160,
     161,   162,   163,    -1,   165,    -1,   167,    -1,    -1,    -1,
     171,   172,   173,    -1,   175,    -1,   177,    -1,   179,   180,
     181,    -1,   183,   184,   185,   186,   187,   188,   189,    -1,
     191,   192,   193,   194,    -1,   196,   197,   198,   199,   200,
     201,    -1,   203,    -1,   205,   206,   207,   208,   209,   210,
     211,   212,    -1,   214,    -1,   216,    -1,    -1,   219,    -1,
     221,   222,   223,   224,   225,   226,    -1,    -1,   229,    -1,
     231,    -1,    -1,   234,   235,   236,    -1,    -1,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,    -1,   265,   266,   267,   268,   269,    -1,
     271,   272,    -1,   274,    -1,   276,   277,   278,   279,   280,
     281,    -1,   283,   284,    -1,    -1,   287,   288,   289,    -1,
      -1,   292,   293,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,    -1,   319,   320,
     321,   322,   323,   324,    -1,   326,   327,   328,   329,   330,
     331,   332,   333,    -1,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,    -1,    -1,   349,   350,
      -1,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,    -1,   374,   375,   376,   377,   378,    -1,   380,
     381,   382,   383,    -1,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
      -1,   402,   403,   404,   405,    -1,   407,   408,   409,   410,
     411,    -1,   413,   414,    -1,    -1,   417,   418,   419,   420,
     421,    -1,   423,   424,   425,   426,   427,   428,   429,   430,
      -1,    -1,   433,   434,   435,   436,   437,    -1,    -1,   440,
     441,   442,   443,   444,   445,   446,    -1,   448,    -1,   450,
     451,   452,   453,   454,    -1,    -1,   457,    -1,    -1,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
       3,     4,    -1,    -1,    -1,    -1,     9,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    -1,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    81,    -1,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,    -1,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,    -1,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,    -1,   158,    -1,   160,   161,   162,
     163,    -1,   165,    -1,   167,    -1,    -1,    -1,   171,   172,
     173,    -1,   175,    -1,   177,    -1,   179,   180,   181,    -1,
     183,   184,   185,   186,   187,   188,   189,    -1,   191,   192,
     193,   194,    -1,   196,   197,   198,   199,   200,   201,    -1,
     203,    -1,   205,   206,   207,   208,   209,   210,   211,   212,
      -1,   214,    -1,   216,    -1,    -1,   219,    -1,   221,   222,
     223,   224,   225,   226,    -1,    -1,   229,    -1,   231,    -1,
      -1,   234,   235,   236,    -1,    -1,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,    -1,   265,   266,   267,   268,   269,    -1,   271,   272,
      -1,   274,    -1,   276,   277,   278,   279,   280,   281,    -1,
     283,   284,    -1,    -1,   287,   288,   289,    -1,    -1,   292,
     293,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,    -1,   309,   310,   311,   312,
     313,   314,   315,   316,   317,    -1,   319,   320,   321,   322,
     323,   324,    -1,   326,   327,   328,   329,   330,   331,   332,
     333,    -1,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,    -1,    -1,   349,   350,    -1,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,    -1,   368,   369,   370,   371,   372,
      -1,   374,   375,   376,   377,   378,    -1,   380,   381,   382,
     383,    -1,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,    -1,   402,
     403,    -1,   405,    -1,   407,   408,   409,   410,   411,    -1,
     413,   414,    -1,    -1,   417,   418,   419,   420,   421,    -1,
     423,   424,   425,   426,   427,   428,   429,   430,    -1,    -1,
     433,   434,   435,   436,   437,    -1,    -1,   440,   441,   442,
     443,   444,   445,   446,    -1,   448,    -1,   450,   451,   452,
     453,   454,    -1,    -1,   457,    -1,    -1,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    -1,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    81,    -1,    83,    84,
      85,    -1,    87,    88,    89,    90,    91,    92,    -1,    -1,
      95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
      -1,   116,    -1,   118,   119,   120,   121,   122,   123,    -1,
     125,   126,   127,   128,   129,    -1,    -1,   132,   133,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
      -1,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,    -1,   158,    -1,   160,   161,   162,   163,    -1,
     165,    -1,   167,    -1,    -1,    -1,   171,   172,   173,    -1,
     175,    -1,   177,    -1,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,   189,    -1,   191,   192,   193,   194,
      -1,   196,   197,   198,   199,   200,   201,    -1,   203,    -1,
     205,   206,   207,   208,   209,   210,   211,   212,    -1,   214,
      -1,   216,    -1,    -1,   219,    -1,   221,   222,   223,   224,
     225,   226,    -1,    -1,   229,    -1,   231,    -1,    -1,   234,
     235,   236,    -1,    -1,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,    -1,
     265,   266,   267,   268,   269,    -1,   271,   272,    -1,   274,
      -1,   276,   277,   278,   279,   280,   281,    -1,   283,   284,
      -1,    -1,   287,   288,   289,    -1,    -1,   292,   293,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,    -1,   309,   310,   311,   312,   313,   314,
     315,   316,   317,    -1,   319,   320,   321,   322,   323,   324,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,    -1,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,    -1,    -1,   349,   350,    -1,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,   371,   372,    -1,   374,
     375,   376,   377,   378,    -1,   380,   381,   382,   383,    -1,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,    -1,   402,   403,    -1,
     405,    -1,   407,   408,   409,   410,   411,    -1,   413,   414,
      -1,    -1,   417,   418,   419,   420,   421,    -1,   423,   424,
     425,   426,   427,   428,   429,   430,    -1,    -1,   433,   434,
     435,   436,   437,    -1,    -1,   440,   441,   442,   443,   444,
     445,   446,    -1,   448,    -1,   450,   451,   452,   453,   454,
      -1,    -1,   457,    -1,    -1,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,     3,    -1,     5,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    -1,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    81,    -1,    83,    84,    85,    -1,
      87,    88,    89,    90,    91,    92,    -1,    -1,    95,    96,
      97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,    -1,   116,
      -1,   118,   119,   120,   121,   122,   123,    -1,   125,   126,
     127,   128,   129,    -1,    -1,   132,   133,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,    -1,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
      -1,   158,    -1,   160,   161,   162,   163,    -1,   165,    -1,
     167,    -1,    -1,    -1,   171,   172,   173,    -1,   175,    -1,
     177,    -1,   179,   180,   181,    -1,   183,   184,   185,   186,
     187,   188,   189,    -1,   191,   192,   193,   194,    -1,   196,
     197,   198,   199,   200,   201,    -1,   203,    -1,   205,   206,
     207,   208,   209,   210,   211,   212,    -1,   214,    -1,   216,
      -1,    -1,   219,    -1,   221,   222,   223,   224,   225,   226,
      -1,    -1,   229,    -1,   231,    -1,    -1,   234,   235,   236,
      -1,    -1,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,    -1,   265,   266,
     267,   268,   269,    -1,   271,   272,    -1,   274,    -1,   276,
     277,   278,   279,   280,   281,    -1,   283,   284,    -1,    -1,
     287,   288,   289,    -1,    -1,   292,   293,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,    -1,   309,   310,   311,   312,   313,   314,   315,   316,
     317,    -1,   319,   320,   321,   322,   323,   324,    -1,   326,
     327,   328,   329,   330,   331,   332,   333,    -1,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
      -1,    -1,   349,   350,    -1,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
      -1,   368,   369,   370,   371,   372,    -1,   374,   375,   376,
     377,   378,    -1,   380,   381,   382,   383,    -1,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,    -1,   402,   403,    -1,   405,    -1,
     407,   408,   409,   410,   411,    -1,   413,   414,    -1,    -1,
     417,   418,   419,   420,   421,    -1,   423,   424,   425,   426,
     427,   428,   429,   430,    -1,    -1,   433,   434,   435,   436,
     437,    -1,    -1,   440,   441,   442,   443,   444,   445,   446,
      -1,   448,    -1,   450,   451,   452,   453,   454,    -1,    -1,
     457,    -1,    -1,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    27,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    -1,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    81,    -1,    83,    84,    85,    -1,    87,    88,
      89,    90,    91,    92,    -1,    -1,    95,    96,    97,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,    -1,   116,    -1,   118,
     119,   120,   121,   122,   123,    -1,   125,   126,   127,   128,
     129,    -1,    -1,   132,   133,   134,   135,   136,    -1,   138,
     139,   140,    -1,   142,   143,   144,    -1,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,    -1,   158,
      -1,   160,   161,   162,   163,    -1,   165,    -1,   167,    -1,
      -1,    -1,   171,   172,   173,    -1,   175,    -1,   177,    -1,
     179,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
     189,    -1,   191,   192,   193,   194,    -1,   196,   197,   198,
     199,   200,   201,    -1,   203,    -1,   205,   206,   207,   208,
     209,   210,   211,   212,    -1,   214,    -1,   216,    -1,    -1,
     219,    -1,   221,   222,   223,   224,   225,   226,    -1,    -1,
     229,    -1,   231,    -1,    -1,   234,   235,   236,    -1,    -1,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,    -1,   265,   266,   267,   268,
     269,    -1,   271,   272,    -1,   274,    -1,   276,   277,   278,
     279,   280,   281,    -1,   283,   284,    -1,    -1,   287,   288,
     289,    -1,    -1,   292,   293,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,    -1,
     309,   310,   311,   312,   313,   314,   315,   316,   317,    -1,
     319,   320,   321,   322,   323,   324,    -1,   326,   327,   328,
     329,   330,   331,   332,   333,    -1,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,    -1,    -1,
     349,   350,    -1,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,    -1,   368,
     369,   370,   371,   372,    -1,   374,   375,   376,   377,   378,
      -1,   380,   381,   382,   383,    -1,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,    -1,   402,   403,    -1,   405,    -1,   407,   408,
     409,   410,   411,    -1,   413,   414,    -1,    -1,   417,   418,
     419,   420,   421,    -1,   423,   424,   425,   426,   427,   428,
     429,   430,    -1,    -1,   433,   434,   435,   436,   437,    -1,
      -1,   440,   441,   442,   443,   444,   445,   446,    -1,   448,
      -1,   450,   451,   452,   453,   454,    -1,    -1,   457,    -1,
      -1,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    -1,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,    -1,   158,    -1,   160,
     161,   162,   163,    -1,   165,    -1,   167,    -1,    -1,    -1,
     171,   172,   173,    -1,   175,    -1,   177,    -1,   179,   180,
     181,    -1,   183,   184,   185,   186,   187,   188,   189,    -1,
     191,   192,   193,   194,    -1,   196,   197,   198,   199,   200,
     201,    -1,   203,    -1,   205,   206,   207,   208,   209,   210,
     211,   212,    -1,   214,    -1,   216,    -1,    -1,   219,    -1,
     221,   222,   223,   224,   225,   226,    -1,    -1,   229,    -1,
     231,    -1,    -1,   234,   235,   236,    -1,    -1,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,    -1,   265,   266,   267,   268,   269,    -1,
     271,   272,    -1,   274,    -1,   276,   277,   278,   279,   280,
     281,    -1,   283,   284,    -1,    -1,   287,   288,   289,    -1,
      -1,   292,   293,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,    -1,   319,   320,
     321,   322,   323,   324,    -1,   326,   327,   328,   329,   330,
     331,   332,   333,    -1,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,    -1,    -1,   349,   350,
      -1,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,    -1,   374,   375,   376,   377,   378,    -1,   380,
     381,   382,   383,    -1,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
      -1,   402,   403,    -1,   405,    -1,   407,   408,   409,   410,
     411,    -1,   413,   414,    -1,    -1,   417,   418,   419,   420,
     421,    -1,   423,   424,   425,   426,   427,   428,   429,   430,
      -1,    -1,   433,   434,   435,   436,   437,    -1,    -1,   440,
     441,   442,   443,   444,   445,   446,    -1,   448,    -1,   450,
     451,   452,   453,   454,    -1,    -1,   457,    -1,    -1,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
       3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    -1,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    81,    -1,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,    -1,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,    -1,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,    -1,   158,    -1,   160,   161,   162,
     163,    -1,   165,    -1,   167,    -1,    -1,    -1,   171,   172,
     173,    -1,   175,    -1,   177,    -1,   179,   180,   181,    -1,
     183,   184,   185,   186,   187,   188,   189,    -1,   191,   192,
     193,   194,    -1,   196,   197,   198,   199,   200,   201,    -1,
     203,    -1,   205,   206,   207,   208,   209,   210,   211,   212,
      -1,   214,    -1,   216,    -1,    -1,   219,    -1,   221,   222,
     223,   224,   225,   226,    -1,    -1,   229,    -1,   231,    -1,
      -1,   234,   235,   236,    -1,    -1,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,    -1,   265,   266,   267,   268,   269,    -1,   271,   272,
      -1,   274,    -1,   276,   277,   278,   279,   280,   281,    -1,
     283,   284,    -1,    -1,   287,   288,   289,    -1,    -1,   292,
     293,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,    -1,   309,   310,   311,   312,
     313,   314,   315,   316,   317,    -1,   319,   320,   321,   322,
     323,   324,    -1,   326,   327,   328,   329,   330,   331,   332,
     333,    -1,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,    -1,    -1,   349,   350,    -1,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,    -1,   368,   369,   370,   371,   372,
      -1,   374,   375,   376,   377,   378,    -1,   380,   381,   382,
     383,    -1,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,    -1,   402,
     403,    -1,   405,    -1,   407,   408,   409,   410,   411,    -1,
     413,   414,    -1,    -1,   417,   418,   419,   420,   421,    -1,
     423,   424,   425,   426,   427,   428,   429,   430,    -1,    -1,
     433,   434,   435,   436,   437,    -1,    -1,   440,   441,   442,
     443,   444,   445,   446,    -1,   448,    -1,   450,   451,   452,
     453,   454,    -1,    -1,   457,    -1,    -1,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,     3,    -1,
       5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    -1,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    81,    -1,    83,    84,
      85,    -1,    87,    88,    89,    90,    91,    92,    -1,    -1,
      95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
      -1,   116,    -1,   118,   119,   120,   121,   122,   123,    -1,
     125,   126,   127,   128,   129,    -1,    -1,   132,   133,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
      -1,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,    -1,   158,    -1,   160,   161,   162,   163,    -1,
     165,    -1,   167,    -1,    -1,    -1,   171,   172,   173,    -1,
     175,    -1,   177,    -1,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,   189,    -1,   191,   192,   193,   194,
      -1,   196,   197,   198,   199,   200,   201,    -1,   203,    -1,
     205,   206,   207,   208,   209,   210,   211,   212,    -1,   214,
      -1,   216,    -1,    -1,   219,    -1,   221,   222,   223,   224,
     225,   226,    -1,    -1,   229,    -1,   231,    -1,    -1,   234,
     235,   236,    -1,    -1,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,    -1,
     265,   266,   267,   268,   269,    -1,   271,   272,    -1,   274,
      -1,   276,   277,   278,   279,   280,   281,    -1,   283,   284,
      -1,    -1,   287,   288,   289,    -1,    -1,   292,   293,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,    -1,   309,   310,   311,   312,   313,   314,
     315,   316,   317,    -1,   319,   320,   321,   322,   323,   324,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,    -1,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,    -1,    -1,   349,   350,    -1,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,   371,   372,    -1,   374,
     375,   376,   377,   378,    -1,   380,   381,   382,   383,    -1,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,    -1,   402,   403,    -1,
     405,    -1,   407,   408,   409,   410,   411,    -1,   413,   414,
      -1,    -1,   417,   418,   419,   420,   421,    -1,   423,   424,
     425,   426,   427,   428,   429,   430,    -1,    -1,   433,   434,
     435,   436,   437,    -1,    -1,   440,   441,   442,   443,   444,
     445,   446,    -1,   448,    -1,   450,   451,   452,   453,   454,
      -1,    -1,   457,    -1,    -1,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,     3,    -1,     5,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    -1,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    81,    -1,    83,    84,    85,    -1,
      87,    88,    89,    90,    91,    92,    -1,    -1,    95,    96,
      97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,    -1,   116,
      -1,   118,   119,   120,   121,   122,   123,    -1,   125,   126,
     127,   128,   129,    -1,    -1,   132,   133,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,    -1,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
      -1,   158,    -1,   160,   161,   162,   163,    -1,   165,    -1,
     167,    -1,    -1,    -1,   171,   172,   173,    -1,   175,    -1,
     177,    -1,   179,   180,   181,    -1,   183,   184,   185,   186,
     187,   188,   189,    -1,   191,   192,   193,   194,    -1,   196,
     197,   198,   199,   200,   201,    -1,   203,    -1,   205,   206,
     207,   208,   209,   210,   211,   212,    -1,   214,    -1,   216,
      -1,    -1,   219,    -1,   221,   222,   223,   224,   225,   226,
      -1,    -1,   229,    -1,   231,    -1,    -1,   234,   235,   236,
      -1,    -1,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,    -1,   265,   266,
     267,   268,   269,    -1,   271,   272,    -1,   274,    -1,   276,
     277,   278,   279,   280,   281,    -1,   283,   284,    -1,    -1,
     287,   288,   289,    -1,    -1,   292,   293,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,    -1,   309,   310,   311,   312,   313,   314,   315,   316,
     317,    -1,   319,   320,   321,   322,   323,   324,    -1,   326,
     327,   328,   329,   330,   331,   332,   333,    -1,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
      -1,    -1,   349,   350,    -1,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
      -1,   368,   369,   370,   371,   372,    -1,   374,   375,   376,
     377,   378,    -1,   380,   381,   382,   383,    -1,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,    -1,   402,   403,    -1,   405,    -1,
     407,   408,   409,   410,   411,    -1,   413,   414,    -1,    -1,
     417,   418,   419,   420,   421,    -1,   423,   424,   425,   426,
     427,   428,   429,   430,    -1,    -1,   433,   434,   435,   436,
     437,    -1,    -1,   440,   441,   442,   443,   444,   445,   446,
      -1,   448,    -1,   450,   451,   452,   453,   454,    -1,    -1,
     457,    -1,    -1,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    27,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    -1,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    81,    -1,    83,    84,    85,    -1,    87,    88,
      89,    90,    91,    92,    -1,    -1,    95,    96,    97,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,    -1,   116,    -1,   118,
     119,   120,   121,   122,   123,    -1,   125,   126,   127,   128,
     129,    -1,    -1,   132,   133,   134,   135,   136,    -1,   138,
     139,   140,    -1,   142,   143,   144,    -1,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,    -1,   158,
      -1,   160,   161,   162,   163,    -1,   165,    -1,   167,    -1,
      -1,    -1,   171,   172,   173,    -1,   175,    -1,   177,    -1,
     179,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
     189,    -1,   191,   192,   193,   194,    -1,   196,   197,   198,
     199,   200,   201,    -1,   203,    -1,   205,   206,   207,   208,
     209,   210,   211,   212,    -1,   214,    -1,   216,    -1,    -1,
     219,    -1,   221,   222,   223,   224,   225,   226,    -1,    -1,
     229,    -1,   231,    -1,    -1,   234,   235,   236,    -1,    -1,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,    -1,   265,   266,   267,   268,
     269,    -1,   271,   272,    -1,   274,    -1,   276,   277,   278,
     279,   280,   281,    -1,   283,   284,    -1,    -1,   287,   288,
     289,    -1,    -1,   292,   293,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,    -1,
     309,   310,   311,   312,   313,   314,   315,   316,   317,    -1,
     319,   320,   321,   322,   323,   324,    -1,   326,   327,   328,
     329,   330,   331,   332,   333,    -1,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,    -1,    -1,
     349,   350,    -1,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,    -1,   368,
     369,   370,   371,   372,    -1,   374,   375,   376,   377,   378,
      -1,   380,   381,   382,   383,    -1,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,    -1,   402,   403,    -1,   405,    -1,   407,   408,
     409,   410,   411,    -1,   413,   414,    -1,    -1,   417,   418,
     419,   420,   421,    -1,   423,   424,   425,   426,   427,   428,
     429,   430,    -1,    -1,   433,   434,   435,   436,   437,    -1,
      -1,   440,   441,   442,   443,   444,   445,   446,    -1,   448,
      -1,   450,   451,   452,   453,   454,    -1,    -1,   457,    -1,
      -1,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    -1,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,    -1,   158,    -1,   160,
     161,   162,   163,    -1,   165,    -1,   167,    -1,    -1,    -1,
     171,   172,   173,    -1,   175,    -1,   177,    -1,   179,   180,
     181,    -1,   183,   184,   185,   186,   187,   188,   189,    -1,
     191,   192,   193,   194,    -1,   196,   197,   198,   199,   200,
     201,    -1,   203,    -1,   205,   206,   207,   208,   209,   210,
     211,   212,    -1,   214,    -1,   216,    -1,    -1,   219,    -1,
     221,   222,   223,   224,   225,   226,    -1,    -1,   229,    -1,
     231,    -1,    -1,   234,   235,   236,    -1,    -1,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,    -1,   265,   266,   267,   268,   269,    -1,
     271,   272,    -1,   274,    -1,   276,   277,   278,   279,   280,
     281,    -1,   283,   284,    -1,    -1,   287,   288,   289,    -1,
      -1,   292,   293,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,    -1,   319,   320,
     321,   322,   323,   324,    -1,   326,   327,   328,   329,   330,
     331,   332,   333,    -1,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,    -1,    -1,   349,   350,
      -1,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,    -1,   374,   375,   376,   377,   378,    -1,   380,
     381,   382,   383,    -1,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
      -1,   402,   403,    -1,   405,    -1,   407,   408,   409,   410,
     411,    -1,   413,   414,    -1,    -1,   417,   418,   419,   420,
     421,    -1,   423,   424,   425,   426,   427,   428,   429,   430,
      -1,    -1,   433,   434,   435,   436,   437,    -1,    -1,   440,
     441,   442,   443,   444,   445,   446,    -1,   448,    -1,   450,
     451,   452,   453,   454,    -1,    -1,   457,    -1,    -1,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
       3,    -1,     5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    -1,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    81,    -1,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,    -1,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,    -1,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,    -1,   158,    -1,   160,   161,   162,
     163,    -1,   165,    -1,   167,    -1,    -1,    -1,   171,   172,
     173,    -1,   175,    -1,   177,    -1,   179,   180,   181,    -1,
     183,   184,   185,   186,   187,   188,   189,    -1,   191,   192,
     193,   194,    -1,   196,   197,   198,   199,   200,   201,    -1,
     203,    -1,   205,   206,   207,   208,   209,   210,   211,   212,
      -1,   214,    -1,   216,    -1,    -1,   219,    -1,   221,   222,
     223,   224,   225,   226,    -1,    -1,   229,    -1,   231,    -1,
      -1,   234,   235,   236,    -1,    -1,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,    -1,   265,   266,   267,   268,   269,    -1,   271,   272,
      -1,   274,    -1,   276,   277,   278,   279,   280,   281,    -1,
     283,   284,    -1,    -1,   287,   288,   289,    -1,    -1,   292,
     293,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,    -1,   309,   310,   311,   312,
     313,   314,   315,   316,   317,    -1,   319,   320,   321,   322,
     323,   324,    -1,   326,   327,   328,   329,   330,   331,   332,
     333,    -1,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,    -1,    -1,   349,   350,    -1,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,    -1,   368,   369,   370,   371,   372,
      -1,   374,   375,   376,   377,   378,    -1,   380,   381,   382,
     383,    -1,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,    -1,   402,
     403,    -1,   405,    -1,   407,   408,   409,   410,   411,    -1,
     413,   414,    -1,    -1,   417,   418,   419,   420,   421,    -1,
     423,   424,   425,   426,   427,   428,   429,   430,    -1,    -1,
     433,   434,   435,   436,   437,    -1,    -1,   440,   441,   442,
     443,   444,   445,   446,    -1,   448,    -1,   450,   451,   452,
     453,   454,    -1,    -1,   457,    -1,    -1,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,     3,    -1,
       5,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    -1,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    81,    -1,    83,    84,
      85,    -1,    87,    88,    89,    90,    91,    92,    -1,    -1,
      95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
      -1,   116,    -1,   118,   119,   120,   121,   122,   123,    -1,
     125,   126,   127,   128,   129,    -1,    -1,   132,   133,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
      -1,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,    -1,   158,    -1,   160,   161,   162,   163,    -1,
     165,    -1,   167,    -1,    -1,    -1,   171,   172,   173,    -1,
     175,    -1,   177,    -1,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,   189,    -1,   191,   192,   193,   194,
      -1,   196,   197,   198,   199,   200,   201,    -1,   203,    -1,
     205,   206,   207,   208,   209,   210,   211,   212,    -1,   214,
      -1,   216,    -1,    -1,   219,    -1,   221,   222,   223,   224,
     225,   226,    -1,    -1,   229,    -1,   231,    -1,    -1,   234,
     235,   236,    -1,    -1,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,    -1,
     265,   266,   267,   268,   269,    -1,   271,   272,    -1,   274,
      -1,   276,   277,   278,   279,   280,   281,    -1,   283,   284,
      -1,    -1,   287,   288,   289,    -1,    -1,   292,   293,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,    -1,   309,   310,   311,   312,   313,   314,
     315,   316,   317,    -1,   319,   320,   321,   322,   323,   324,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,    -1,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,    -1,    -1,   349,   350,    -1,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,   371,   372,    -1,   374,
     375,   376,   377,   378,    -1,   380,   381,   382,   383,    -1,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,    -1,   402,   403,    -1,
     405,    -1,   407,   408,   409,   410,   411,    -1,   413,   414,
      -1,    -1,   417,   418,   419,   420,   421,    -1,   423,   424,
     425,   426,   427,   428,   429,   430,    -1,    -1,   433,   434,
     435,   436,   437,    -1,    -1,   440,   441,   442,   443,   444,
     445,   446,    -1,   448,    -1,   450,   451,   452,   453,   454,
      -1,    -1,   457,    -1,    -1,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    36,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    -1,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    81,    -1,    83,    84,    85,    -1,
      87,    88,    89,    90,    91,    92,    -1,    -1,    95,    96,
      97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,    -1,   116,
      -1,   118,   119,   120,   121,   122,   123,    -1,   125,   126,
     127,   128,   129,    -1,    -1,   132,   133,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,    -1,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
      -1,   158,    -1,   160,   161,   162,   163,    -1,   165,    -1,
     167,    -1,    -1,    -1,   171,   172,   173,    -1,   175,    -1,
     177,    -1,   179,   180,   181,    -1,   183,   184,   185,   186,
     187,   188,   189,    -1,   191,   192,   193,   194,    -1,   196,
     197,   198,   199,   200,   201,    -1,   203,    -1,   205,   206,
     207,   208,   209,   210,   211,   212,    -1,   214,    -1,   216,
      -1,    -1,   219,    -1,   221,   222,   223,   224,   225,   226,
      -1,    -1,   229,    -1,   231,    -1,    -1,   234,   235,   236,
      -1,    -1,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,    -1,   265,   266,
     267,   268,   269,    -1,   271,   272,    -1,   274,    -1,   276,
     277,   278,   279,   280,   281,    -1,   283,   284,    -1,    -1,
     287,   288,   289,    -1,    -1,   292,   293,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,    -1,   309,   310,   311,   312,   313,   314,   315,   316,
     317,    -1,   319,   320,   321,   322,   323,   324,    -1,   326,
     327,   328,   329,   330,   331,   332,   333,    -1,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
      -1,    -1,   349,   350,    -1,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
      -1,   368,   369,   370,   371,   372,    -1,   374,   375,   376,
     377,   378,    -1,   380,   381,   382,   383,    -1,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,    -1,   402,   403,    -1,   405,    -1,
     407,   408,   409,   410,   411,    -1,   413,   414,    -1,    -1,
     417,   418,   419,   420,   421,    -1,   423,   424,   425,   426,
     427,   428,   429,   430,    -1,    -1,   433,   434,   435,   436,
     437,    -1,    -1,   440,   441,   442,   443,   444,   445,   446,
      -1,   448,    -1,   450,   451,   452,   453,   454,    -1,    -1,
     457,    -1,    -1,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    36,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    -1,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    81,    -1,    83,    84,    85,    -1,    87,    88,
      89,    90,    91,    92,    -1,    -1,    95,    96,    97,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,    -1,   116,    -1,   118,
     119,   120,   121,   122,   123,    -1,   125,   126,   127,   128,
     129,    -1,    -1,   132,   133,   134,   135,   136,    -1,   138,
     139,   140,    -1,   142,   143,   144,    -1,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,    -1,   158,
      -1,   160,   161,   162,   163,    -1,   165,    -1,   167,    -1,
      -1,    -1,   171,   172,   173,    -1,   175,    -1,   177,    -1,
     179,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
     189,    -1,   191,   192,   193,   194,    -1,   196,   197,   198,
     199,   200,   201,    -1,   203,    -1,   205,   206,   207,   208,
     209,   210,   211,   212,    -1,   214,    -1,   216,    -1,    -1,
     219,    -1,   221,   222,   223,   224,   225,   226,    -1,    -1,
     229,    -1,   231,    -1,    -1,   234,   235,   236,    -1,    -1,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,    -1,   265,   266,   267,   268,
     269,    -1,   271,   272,    -1,   274,    -1,   276,   277,   278,
     279,   280,   281,    -1,   283,   284,    -1,    -1,   287,   288,
     289,    -1,    -1,   292,   293,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,    -1,
     309,   310,   311,   312,   313,   314,   315,   316,   317,    -1,
     319,   320,   321,   322,   323,   324,    -1,   326,   327,   328,
     329,   330,   331,   332,   333,    -1,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,    -1,    -1,
     349,   350,    -1,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,    -1,   368,
     369,   370,   371,   372,    -1,   374,   375,   376,   377,   378,
      -1,   380,   381,   382,   383,    -1,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,    -1,   402,   403,    -1,   405,    -1,   407,   408,
     409,   410,   411,    -1,   413,   414,    -1,    -1,   417,   418,
     419,   420,   421,    -1,   423,   424,   425,   426,   427,   428,
     429,   430,    -1,    -1,   433,   434,   435,   436,   437,    -1,
      -1,   440,   441,   442,   443,   444,   445,   446,    -1,   448,
      -1,   450,   451,   452,   453,   454,    -1,    -1,   457,    -1,
      -1,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,     3,    -1,     5,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    -1,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,    -1,   158,    -1,   160,
     161,   162,   163,    -1,   165,    -1,   167,    -1,    -1,    -1,
     171,   172,   173,    -1,   175,    -1,   177,    -1,   179,   180,
     181,    -1,   183,   184,   185,   186,   187,   188,   189,    -1,
     191,   192,   193,   194,    -1,   196,   197,   198,   199,   200,
     201,    -1,   203,    -1,   205,   206,   207,   208,   209,   210,
     211,   212,    -1,   214,    -1,   216,    -1,    -1,   219,    -1,
     221,   222,   223,   224,   225,   226,    -1,    -1,   229,    -1,
     231,    -1,    -1,   234,   235,   236,    -1,    -1,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,    -1,   265,   266,   267,   268,   269,    -1,
     271,   272,    -1,   274,    -1,   276,   277,   278,   279,   280,
     281,    -1,   283,   284,    -1,    -1,   287,   288,   289,    -1,
      -1,   292,   293,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,    -1,   319,   320,
     321,   322,   323,   324,    -1,   326,   327,   328,   329,   330,
     331,   332,   333,    -1,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,    -1,    -1,   349,   350,
      -1,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,    -1,   374,   375,   376,   377,   378,    -1,   380,
     381,   382,   383,    -1,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
      -1,   402,   403,    -1,   405,    -1,   407,   408,   409,   410,
     411,    -1,   413,   414,    -1,    -1,   417,   418,   419,   420,
     421,    -1,   423,   424,   425,   426,   427,   428,   429,   430,
      -1,    -1,   433,   434,   435,   436,   437,    -1,    -1,   440,
     441,   442,   443,   444,   445,   446,    -1,   448,    -1,   450,
     451,   452,   453,   454,    -1,    -1,   457,    -1,    -1,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    -1,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    81,    -1,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,    -1,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,    -1,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,    -1,   158,    -1,   160,   161,   162,
     163,    -1,   165,    -1,   167,    -1,    -1,    -1,   171,   172,
     173,    -1,   175,    -1,   177,    -1,   179,   180,   181,    -1,
     183,   184,   185,   186,   187,   188,   189,    -1,   191,   192,
     193,   194,    -1,   196,   197,   198,   199,   200,   201,    -1,
     203,    -1,   205,   206,   207,   208,   209,   210,   211,   212,
      -1,   214,    -1,   216,    -1,    -1,   219,    -1,   221,   222,
     223,   224,   225,   226,    -1,    -1,   229,    -1,   231,    -1,
      -1,   234,   235,   236,    -1,    -1,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,    -1,   265,   266,   267,   268,   269,    -1,   271,   272,
      -1,   274,    -1,   276,   277,   278,   279,   280,   281,    -1,
     283,   284,    -1,    -1,   287,   288,   289,    -1,    -1,   292,
     293,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,    -1,   309,   310,   311,   312,
     313,   314,   315,   316,   317,    -1,   319,   320,   321,   322,
     323,   324,    -1,   326,   327,   328,   329,   330,   331,   332,
     333,    -1,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,    -1,    -1,   349,   350,    -1,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,    -1,   368,   369,   370,   371,   372,
      -1,   374,   375,   376,   377,   378,    -1,   380,   381,   382,
     383,    -1,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,    -1,   402,
     403,    -1,   405,    -1,   407,   408,   409,   410,   411,    -1,
     413,   414,    -1,    -1,   417,   418,   419,   420,   421,    -1,
     423,   424,   425,   426,   427,   428,   429,   430,    -1,    -1,
     433,   434,   435,   436,   437,    -1,    -1,   440,   441,   442,
     443,   444,   445,   446,    -1,   448,    -1,   450,   451,   452,
     453,   454,    -1,    -1,   457,    -1,    -1,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    -1,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    81,    -1,    83,    84,
      85,    -1,    87,    88,    89,    90,    91,    92,    -1,    -1,
      95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
      -1,   116,    -1,   118,   119,   120,   121,   122,   123,    -1,
     125,   126,   127,   128,   129,    -1,    -1,   132,   133,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
      -1,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,    -1,   158,    -1,   160,   161,   162,   163,    -1,
     165,    -1,   167,    -1,    -1,    -1,   171,   172,   173,    -1,
     175,    -1,   177,    -1,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,   189,    -1,   191,   192,   193,   194,
      -1,   196,   197,   198,   199,   200,   201,    -1,   203,    -1,
     205,   206,   207,   208,   209,   210,   211,   212,    -1,   214,
      -1,   216,    -1,    -1,   219,    -1,   221,   222,   223,   224,
     225,   226,    -1,    -1,   229,    -1,   231,    -1,    -1,   234,
     235,   236,    -1,    -1,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,    -1,
     265,   266,   267,   268,   269,    -1,   271,   272,    -1,   274,
      -1,   276,   277,   278,   279,   280,   281,    -1,   283,   284,
      -1,    -1,   287,   288,   289,    -1,    -1,   292,   293,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,    -1,   309,   310,   311,   312,   313,   314,
     315,   316,   317,    -1,   319,   320,   321,   322,   323,   324,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,    -1,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,    -1,    -1,   349,   350,    -1,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,   371,   372,    -1,   374,
     375,   376,   377,   378,    -1,   380,   381,   382,   383,    -1,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,    -1,   402,   403,    -1,
     405,    -1,   407,   408,   409,   410,   411,    -1,   413,   414,
      -1,    -1,   417,   418,   419,   420,   421,    -1,   423,   424,
     425,   426,   427,   428,   429,   430,    -1,    -1,   433,   434,
     435,   436,   437,    -1,    -1,   440,   441,   442,   443,   444,
     445,   446,    -1,   448,    -1,   450,   451,   452,   453,   454,
      -1,    -1,   457,    -1,    -1,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    -1,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    81,    -1,    83,    84,    85,    -1,
      87,    88,    89,    90,    91,    92,    -1,    -1,    95,    96,
      97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,    -1,   116,
      -1,   118,   119,   120,   121,   122,   123,    -1,   125,   126,
     127,   128,   129,    -1,    -1,   132,   133,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,    -1,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
      -1,   158,    -1,   160,   161,   162,   163,    -1,   165,    -1,
     167,    -1,    -1,    -1,   171,   172,   173,    -1,   175,    -1,
     177,    -1,   179,   180,   181,    -1,   183,   184,   185,   186,
     187,   188,   189,    -1,   191,   192,   193,   194,    -1,   196,
     197,   198,   199,   200,   201,    -1,   203,    -1,   205,   206,
     207,   208,   209,   210,   211,   212,    -1,   214,    -1,   216,
      -1,    -1,   219,    -1,   221,   222,   223,   224,   225,   226,
      -1,    -1,   229,    -1,   231,    -1,    -1,   234,   235,   236,
      -1,    -1,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,    -1,   265,   266,
     267,   268,   269,    -1,   271,   272,    -1,   274,    -1,   276,
     277,   278,   279,   280,   281,    -1,   283,   284,    -1,    -1,
     287,   288,   289,    -1,    -1,   292,   293,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,    -1,   309,   310,   311,   312,   313,   314,   315,   316,
     317,    -1,   319,   320,   321,   322,   323,   324,    -1,   326,
     327,   328,   329,   330,   331,   332,   333,    -1,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
      -1,    -1,   349,   350,    -1,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
      -1,   368,   369,   370,   371,   372,    -1,   374,   375,   376,
     377,   378,    -1,   380,   381,   382,   383,    -1,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,    -1,   402,   403,    -1,   405,    -1,
     407,   408,   409,   410,   411,    -1,   413,   414,    -1,    -1,
     417,   418,   419,   420,   421,    -1,   423,   424,   425,   426,
     427,   428,   429,   430,    -1,    -1,   433,   434,   435,   436,
     437,    -1,    -1,   440,   441,   442,   443,   444,   445,   446,
      -1,   448,    -1,   450,   451,   452,   453,   454,    -1,    -1,
     457,    -1,    -1,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    -1,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    81,    -1,    83,    84,    85,    -1,    87,    88,
      89,    90,    91,    92,    -1,    -1,    95,    96,    97,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,    -1,   116,    -1,   118,
     119,   120,   121,   122,   123,    -1,   125,   126,   127,   128,
     129,    -1,    -1,   132,   133,   134,   135,   136,    -1,   138,
     139,   140,    -1,   142,   143,   144,    -1,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,    -1,   158,
      -1,   160,   161,   162,   163,    -1,   165,    -1,   167,    -1,
      -1,    -1,   171,   172,   173,    -1,   175,    -1,   177,    -1,
     179,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
     189,    -1,   191,   192,   193,   194,    -1,   196,   197,   198,
     199,   200,   201,    -1,   203,    -1,   205,   206,   207,   208,
     209,   210,   211,   212,    -1,   214,    -1,   216,    -1,    -1,
     219,    -1,   221,   222,   223,   224,   225,   226,    -1,    -1,
     229,    -1,   231,    -1,    -1,   234,   235,   236,    -1,    -1,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,    -1,   265,   266,   267,   268,
     269,    -1,   271,   272,    -1,   274,    -1,   276,   277,   278,
     279,   280,   281,    -1,   283,   284,    -1,    -1,   287,   288,
     289,    -1,    -1,   292,   293,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,    -1,
     309,   310,   311,   312,   313,   314,   315,   316,   317,    -1,
     319,   320,   321,   322,   323,   324,    -1,   326,   327,   328,
     329,   330,   331,   332,   333,    -1,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,    -1,    -1,
     349,   350,    -1,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,    -1,   368,
     369,   370,   371,   372,    -1,   374,   375,   376,   377,   378,
      -1,   380,   381,   382,   383,    -1,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,    -1,   402,   403,    -1,   405,    -1,   407,   408,
     409,   410,   411,    -1,   413,   414,    -1,    -1,   417,   418,
     419,   420,   421,    -1,   423,   424,   425,   426,   427,   428,
     429,   430,    -1,    -1,   433,   434,   435,   436,   437,    -1,
      -1,   440,   441,   442,   443,   444,   445,   446,    -1,   448,
      -1,   450,   451,   452,   453,   454,    -1,    -1,   457,    -1,
      -1,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    -1,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,    -1,   158,    -1,   160,
     161,   162,   163,    -1,   165,    -1,   167,    -1,    -1,    -1,
     171,   172,   173,    -1,   175,    -1,   177,    -1,   179,   180,
     181,    -1,   183,   184,   185,   186,   187,   188,   189,    -1,
     191,   192,   193,   194,    -1,   196,   197,   198,   199,   200,
     201,    -1,   203,    -1,   205,   206,   207,   208,   209,   210,
     211,   212,    -1,   214,    -1,   216,    -1,    -1,   219,    -1,
     221,   222,   223,   224,   225,   226,    -1,    -1,   229,    -1,
     231,    -1,    -1,   234,   235,   236,    -1,    -1,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,    -1,   265,   266,   267,   268,   269,    -1,
     271,   272,    -1,   274,    -1,   276,   277,   278,   279,   280,
     281,    -1,   283,   284,    -1,    -1,   287,   288,   289,    -1,
      -1,   292,   293,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,    -1,   319,   320,
     321,   322,   323,   324,    -1,   326,   327,   328,   329,   330,
     331,   332,   333,    -1,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,    -1,    -1,   349,   350,
      -1,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,    -1,   374,   375,   376,   377,   378,    -1,   380,
     381,   382,   383,    -1,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
      -1,   402,   403,    -1,   405,    -1,   407,   408,   409,   410,
     411,    -1,   413,   414,    -1,    -1,   417,   418,   419,   420,
     421,    -1,   423,   424,   425,   426,   427,   428,   429,   430,
      -1,    -1,   433,   434,   435,   436,   437,    -1,    -1,   440,
     441,   442,   443,   444,   445,   446,    -1,   448,    -1,   450,
     451,   452,   453,   454,    -1,    -1,   457,    -1,    -1,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    -1,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    81,    -1,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,    -1,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,    -1,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,    -1,   158,    -1,   160,   161,   162,
     163,    -1,   165,    -1,   167,    -1,    -1,    -1,   171,   172,
     173,    -1,   175,    -1,   177,    -1,   179,   180,   181,    -1,
     183,   184,   185,   186,   187,   188,   189,    -1,   191,   192,
     193,   194,    -1,   196,   197,   198,   199,   200,   201,    -1,
     203,    -1,   205,   206,   207,   208,   209,   210,   211,   212,
      -1,   214,    -1,   216,    -1,    -1,   219,    -1,   221,   222,
     223,   224,   225,   226,    -1,    -1,   229,    -1,   231,    -1,
      -1,   234,   235,   236,    -1,    -1,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,    -1,   265,   266,   267,   268,   269,    -1,   271,   272,
      -1,   274,    -1,   276,   277,   278,   279,   280,   281,    -1,
     283,   284,    -1,    -1,   287,   288,   289,    -1,    -1,   292,
     293,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,    -1,   309,   310,   311,   312,
     313,   314,   315,   316,   317,    -1,   319,   320,   321,   322,
     323,   324,    -1,   326,   327,   328,   329,   330,   331,   332,
     333,    -1,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,    -1,    -1,   349,   350,    -1,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,    -1,   368,   369,   370,   371,   372,
      -1,   374,   375,   376,   377,   378,    -1,   380,   381,   382,
     383,    -1,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,    -1,   402,
     403,    -1,   405,    -1,   407,   408,   409,   410,   411,    -1,
     413,   414,    -1,    -1,   417,   418,   419,   420,   421,    -1,
     423,   424,   425,   426,   427,   428,   429,   430,    -1,    -1,
     433,   434,   435,   436,   437,    -1,    -1,   440,   441,   442,
     443,   444,   445,   446,    -1,   448,    -1,   450,   451,   452,
     453,   454,    -1,    -1,   457,    -1,    -1,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    -1,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    81,    -1,    83,    84,
      85,    -1,    87,    88,    89,    90,    91,    92,    -1,    -1,
      95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
      -1,   116,    -1,   118,   119,   120,   121,   122,   123,    -1,
     125,   126,   127,   128,   129,    -1,    -1,   132,   133,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
      -1,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,    -1,   158,    -1,   160,   161,   162,   163,    -1,
     165,    -1,   167,    -1,    -1,    -1,   171,   172,   173,    -1,
     175,    -1,   177,    -1,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,   189,    -1,   191,   192,   193,   194,
      -1,   196,   197,   198,   199,   200,   201,    -1,   203,    -1,
     205,   206,   207,   208,   209,   210,   211,   212,    -1,   214,
      -1,   216,    -1,    -1,   219,    -1,   221,   222,   223,   224,
     225,   226,    -1,    -1,   229,    -1,   231,    -1,    -1,   234,
     235,   236,    -1,    -1,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,    -1,
     265,   266,   267,   268,   269,    -1,   271,   272,    -1,   274,
      -1,   276,   277,   278,   279,   280,   281,    -1,   283,   284,
      -1,    -1,   287,   288,   289,    -1,    -1,   292,   293,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,    -1,   309,   310,   311,   312,   313,   314,
     315,   316,   317,    -1,   319,   320,   321,   322,   323,   324,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,    -1,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,    -1,    -1,   349,   350,    -1,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,   371,   372,    -1,   374,
     375,   376,   377,   378,    -1,   380,   381,   382,   383,    -1,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,    -1,   402,   403,    -1,
     405,    -1,   407,   408,   409,   410,   411,    -1,   413,   414,
      -1,    -1,   417,   418,   419,   420,   421,    -1,   423,   424,
     425,   426,   427,   428,   429,   430,    -1,    -1,   433,   434,
     435,   436,   437,    -1,    -1,   440,   441,   442,   443,   444,
     445,   446,    -1,   448,    -1,   450,   451,   452,   453,   454,
      -1,    -1,   457,    -1,    -1,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    -1,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    81,    -1,    83,    84,    85,    -1,
      87,    88,    89,    90,    91,    92,    -1,    -1,    95,    96,
      97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,    -1,   116,
      -1,   118,   119,   120,   121,   122,   123,    -1,   125,   126,
     127,   128,   129,    -1,    -1,   132,   133,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,    -1,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
      -1,   158,    -1,   160,   161,   162,   163,    -1,   165,    -1,
     167,    -1,    -1,    -1,   171,   172,   173,    -1,   175,    -1,
     177,    -1,   179,   180,   181,    -1,   183,   184,   185,   186,
     187,   188,   189,    -1,   191,   192,   193,   194,    -1,   196,
     197,   198,   199,   200,   201,    -1,   203,    -1,   205,   206,
     207,   208,   209,   210,   211,   212,    -1,   214,    -1,   216,
      -1,    -1,   219,    -1,   221,   222,   223,   224,   225,   226,
      -1,    -1,   229,    -1,   231,    -1,    -1,   234,   235,   236,
      -1,    -1,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,    -1,   265,   266,
     267,   268,   269,    -1,   271,   272,    -1,   274,    -1,   276,
     277,   278,   279,   280,   281,    -1,   283,   284,    -1,    -1,
     287,   288,   289,    -1,    -1,   292,   293,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,    -1,   309,   310,   311,   312,   313,   314,   315,   316,
     317,    -1,   319,   320,   321,   322,   323,   324,    -1,   326,
     327,   328,   329,   330,   331,   332,   333,    -1,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
      -1,    -1,   349,   350,    -1,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
      -1,   368,   369,   370,   371,   372,    -1,   374,   375,   376,
     377,   378,    -1,   380,   381,   382,   383,    -1,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,    -1,   402,   403,    -1,   405,    -1,
     407,   408,   409,   410,   411,    -1,   413,   414,    -1,    -1,
     417,   418,   419,   420,   421,    -1,   423,   424,   425,   426,
     427,   428,   429,   430,    -1,    -1,   433,   434,   435,   436,
     437,    -1,    -1,   440,   441,   442,   443,   444,   445,   446,
      -1,   448,    -1,   450,   451,   452,   453,   454,    -1,    -1,
     457,    -1,    -1,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    36,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    -1,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    81,    -1,    83,    84,    85,    -1,    87,    88,
      89,    90,    91,    92,    -1,    -1,    95,    96,    97,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,    -1,   116,    -1,   118,
     119,   120,   121,   122,   123,    -1,   125,   126,   127,   128,
     129,    -1,    -1,   132,   133,   134,   135,   136,    -1,   138,
     139,   140,    -1,   142,   143,   144,    -1,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,    -1,   158,
      -1,   160,   161,   162,   163,    -1,   165,    -1,   167,    -1,
      -1,    -1,   171,   172,   173,    -1,   175,    -1,   177,    -1,
     179,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
     189,    -1,   191,   192,   193,   194,    -1,   196,   197,   198,
     199,   200,   201,    -1,   203,    -1,   205,   206,   207,   208,
     209,   210,   211,   212,    -1,   214,    -1,   216,    -1,    -1,
     219,    -1,   221,   222,   223,   224,   225,   226,    -1,    -1,
     229,    -1,   231,    -1,    -1,   234,   235,   236,    -1,    -1,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,    -1,   265,   266,   267,   268,
     269,    -1,   271,   272,    -1,   274,    -1,   276,   277,   278,
     279,   280,   281,    -1,   283,   284,    -1,    -1,   287,   288,
     289,    -1,    -1,   292,   293,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,    -1,
     309,   310,   311,   312,   313,   314,   315,   316,   317,    -1,
     319,   320,   321,   322,   323,   324,    -1,   326,   327,   328,
     329,   330,   331,   332,   333,    -1,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,    -1,    -1,
     349,   350,    -1,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,    -1,   368,
     369,   370,   371,   372,    -1,    -1,   375,   376,   377,   378,
      -1,   380,   381,   382,   383,    -1,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,    -1,   402,   403,    -1,   405,    -1,   407,   408,
     409,   410,   411,    -1,   413,   414,    -1,    -1,   417,   418,
     419,   420,   421,    -1,   423,   424,   425,   426,   427,   428,
     429,   430,    -1,    -1,   433,   434,   435,   436,   437,    -1,
      -1,   440,   441,   442,   443,   444,   445,   446,    -1,   448,
      -1,   450,   451,   452,   453,   454,    -1,    -1,   457,    -1,
      -1,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    -1,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      81,    -1,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    -1,    95,    96,    97,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,    -1,   158,    -1,   160,
     161,   162,   163,    -1,   165,    -1,   167,    -1,    -1,    -1,
     171,   172,   173,    -1,   175,    -1,   177,    -1,   179,   180,
     181,    -1,   183,   184,   185,   186,   187,   188,   189,    -1,
     191,   192,   193,   194,    -1,   196,   197,   198,   199,   200,
     201,    -1,   203,    -1,   205,   206,   207,   208,   209,   210,
     211,   212,    -1,   214,    -1,   216,    -1,    -1,   219,    -1,
     221,   222,   223,   224,   225,   226,    -1,    -1,   229,    -1,
     231,    -1,    -1,   234,   235,   236,    -1,    -1,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,    -1,   265,   266,   267,   268,   269,    -1,
     271,   272,    -1,   274,    -1,   276,   277,   278,   279,   280,
     281,    -1,   283,   284,    -1,    -1,   287,   288,   289,    -1,
      -1,   292,   293,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,    -1,   309,   310,
     311,   312,   313,   314,   315,   316,   317,    -1,   319,   320,
     321,   322,   323,   324,    -1,   326,   327,   328,   329,   330,
     331,   332,   333,    -1,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,    -1,    -1,   349,   350,
      -1,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,    -1,   374,   375,   376,   377,   378,    -1,   380,
     381,   382,   383,    -1,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
      -1,   402,   403,    -1,   405,    -1,   407,   408,   409,   410,
     411,    -1,   413,   414,    -1,    -1,   417,   418,   419,   420,
     421,    -1,   423,   424,   425,   426,   427,   428,   429,   430,
      -1,    -1,   433,   434,   435,   436,   437,    -1,    -1,   440,
     441,   442,   443,   444,   445,   446,    -1,   448,    -1,   450,
     451,   452,   453,   454,    -1,    -1,   457,    -1,    -1,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    -1,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    81,    -1,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      -1,    -1,    95,    96,    97,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,    -1,   116,    -1,   118,   119,   120,   121,   122,
     123,    -1,   125,   126,   127,   128,   129,    -1,    -1,   132,
     133,   134,   135,   136,    -1,   138,   139,   140,    -1,   142,
     143,   144,    -1,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,    -1,   158,    -1,   160,   161,   162,
     163,    -1,   165,    -1,   167,    -1,    -1,    -1,   171,   172,
     173,    -1,   175,    -1,   177,    -1,   179,   180,   181,    -1,
     183,   184,   185,   186,   187,   188,   189,    -1,   191,   192,
     193,   194,    -1,   196,   197,   198,   199,   200,   201,    -1,
     203,    -1,   205,   206,   207,   208,   209,   210,   211,   212,
      -1,   214,    -1,   216,    -1,    -1,   219,    -1,   221,   222,
     223,   224,   225,   226,    -1,    -1,   229,    -1,   231,    -1,
      -1,   234,   235,   236,    -1,    -1,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,    -1,   265,   266,   267,   268,   269,    -1,   271,   272,
      -1,   274,    -1,   276,   277,   278,   279,   280,   281,    -1,
     283,   284,    -1,    -1,   287,   288,   289,    -1,    -1,   292,
     293,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,    -1,   309,   310,   311,   312,
     313,   314,   315,   316,   317,    -1,   319,   320,   321,   322,
     323,   324,    -1,   326,   327,   328,   329,   330,   331,   332,
     333,    -1,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,    -1,    -1,   349,   350,    -1,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,    -1,   368,   369,   370,   371,   372,
      -1,   374,   375,   376,   377,   378,    -1,   380,   381,   382,
     383,    -1,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,    -1,   402,
     403,    -1,   405,    -1,   407,   408,   409,   410,   411,    -1,
     413,   414,    -1,    -1,   417,   418,   419,   420,   421,    -1,
     423,   424,   425,   426,   427,   428,   429,   430,    -1,    -1,
     433,   434,   435,   436,   437,    -1,    -1,   440,   441,   442,
     443,   444,   445,   446,    -1,   448,    -1,   450,   451,   452,
     453,   454,    -1,    -1,   457,    -1,    -1,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    -1,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    81,    -1,    83,    84,
      85,    -1,    87,    88,    89,    90,    91,    92,    -1,    -1,
      95,    96,    97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
      -1,   116,    -1,   118,   119,   120,   121,   122,   123,    -1,
     125,   126,   127,   128,   129,    -1,    -1,   132,   133,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
      -1,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,    -1,   158,    -1,   160,   161,   162,   163,    -1,
     165,    -1,   167,    -1,    -1,    -1,   171,   172,   173,    -1,
     175,    -1,   177,    -1,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,   189,    -1,   191,   192,   193,   194,
      -1,   196,   197,   198,   199,   200,   201,    -1,   203,    -1,
     205,   206,   207,   208,   209,   210,   211,   212,    -1,   214,
      -1,   216,    -1,    -1,   219,    -1,   221,   222,   223,   224,
     225,   226,    -1,    -1,   229,    -1,   231,    -1,    -1,   234,
     235,   236,    -1,    -1,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,    -1,
     265,   266,   267,   268,   269,    -1,   271,   272,    -1,   274,
      -1,   276,   277,   278,   279,   280,   281,    -1,   283,   284,
      -1,    -1,   287,   288,   289,    -1,    -1,   292,   293,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,    -1,   309,   310,   311,   312,   313,   314,
     315,   316,   317,    -1,   319,   320,   321,   322,   323,   324,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,    -1,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,    -1,    -1,   349,   350,    -1,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,   371,   372,    -1,   374,
     375,   376,   377,   378,    -1,   380,   381,   382,   383,    -1,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,    -1,   402,   403,    -1,
     405,    -1,   407,   408,   409,   410,   411,    -1,   413,   414,
      -1,    -1,   417,   418,   419,   420,   421,    -1,   423,   424,
     425,   426,   427,   428,   429,   430,    -1,    -1,   433,   434,
     435,   436,   437,    -1,    -1,   440,   441,   442,   443,   444,
     445,   446,    -1,   448,    -1,   450,   451,   452,   453,   454,
      -1,    -1,   457,    -1,    -1,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    -1,    45,    46,
      47,    48,    49,    -1,    51,    52,    -1,    54,    55,    56,
      57,    -1,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,    76,
      77,    78,    79,    80,    81,    -1,    83,    84,    85,    -1,
      87,    88,    89,    90,    91,    92,    -1,    -1,    95,    96,
      97,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,    -1,   116,
      -1,   118,   119,   120,   121,   122,   123,    -1,   125,   126,
     127,   128,   129,    -1,    -1,   132,   133,   134,   135,   136,
      -1,   138,   139,   140,    -1,   142,   143,   144,    -1,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
      -1,   158,    -1,   160,   161,   162,   163,    -1,   165,    -1,
     167,    -1,    -1,    -1,   171,   172,   173,    -1,   175,    -1,
     177,    -1,   179,   180,   181,    -1,   183,   184,   185,   186,
     187,   188,   189,    -1,   191,   192,   193,   194,    -1,   196,
     197,   198,   199,   200,   201,    -1,   203,    -1,   205,   206,
     207,   208,   209,   210,   211,   212,    -1,   214,    -1,   216,
      -1,    -1,   219,    -1,   221,   222,   223,   224,   225,   226,
      -1,    -1,   229,    -1,   231,    -1,    -1,   234,   235,   236,
      -1,    -1,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,    -1,   265,   266,
     267,   268,   269,    -1,   271,   272,    -1,   274,    -1,   276,
     277,   278,   279,   280,   281,    -1,   283,   284,    -1,    -1,
     287,   288,   289,    -1,    -1,   292,   293,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,    -1,   309,   310,   311,   312,   313,   314,   315,   316,
     317,    -1,   319,   320,   321,   322,   323,   324,    -1,   326,
     327,   328,   329,   330,   331,   332,   333,    -1,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
      -1,    -1,   349,   350,    -1,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
      -1,   368,   369,   370,   371,   372,    -1,   374,   375,   376,
     377,   378,    -1,   380,   381,   382,   383,    -1,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,    -1,   402,   403,    -1,   405,    -1,
     407,   408,   409,   410,   411,    -1,   413,   414,    -1,    -1,
     417,   418,   419,   420,   421,    -1,   423,   424,   425,   426,
     427,   428,   429,   430,    -1,    -1,   433,   434,   435,   436,
     437,    -1,    -1,   440,   441,   442,   443,   444,   445,   446,
      -1,   448,    -1,   450,   451,   452,   453,   454,    -1,    -1,
     457,    -1,    -1,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    -1,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    81,    -1,    83,    84,    85,    -1,    87,    88,
      89,    90,    91,    92,    -1,    -1,    95,    96,    97,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,    -1,   116,    -1,   118,
     119,   120,   121,   122,   123,    -1,   125,   126,   127,   128,
     129,    -1,    -1,   132,   133,   134,   135,   136,    -1,   138,
     139,   140,    -1,   142,   143,   144,    -1,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,    -1,   158,
      -1,   160,   161,   162,   163,    -1,   165,    -1,   167,    -1,
      -1,    -1,   171,   172,   173,    -1,   175,    -1,   177,    -1,
     179,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
     189,    -1,   191,   192,   193,   194,    -1,   196,   197,   198,
     199,   200,   201,    -1,   203,    -1,   205,   206,   207,   208,
     209,   210,   211,   212,    -1,   214,    -1,   216,    -1,    -1,
     219,    -1,   221,   222,   223,   224,   225,   226,    -1,    -1,
     229,    -1,   231,    -1,    -1,   234,   235,   236,    -1,    -1,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,    -1,   265,   266,   267,   268,
     269,    -1,   271,   272,    -1,   274,    -1,   276,   277,   278,
     279,   280,   281,    -1,   283,   284,    -1,    -1,   287,   288,
     289,    -1,    -1,   292,   293,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,    -1,   305,   306,   307,    -1,
     309,   310,   311,   312,   313,   314,   315,   316,   317,    -1,
     319,   320,   321,   322,   323,   324,    -1,   326,    -1,   328,
     329,   330,   331,   332,   333,    -1,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,    -1,    -1,
     349,   350,    -1,   352,   353,   354,   355,    -1,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,    -1,   368,
     369,   370,   371,   372,    -1,   374,   375,   376,   377,   378,
      -1,   380,   381,   382,   383,    -1,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,    -1,   402,   403,    -1,   405,    -1,   407,   408,
     409,   410,   411,    -1,   413,   414,    -1,    -1,   417,   418,
     419,   420,   421,    -1,   423,   424,   425,   426,   427,   428,
     429,   430,    -1,    -1,   433,   434,   435,   436,   437,    -1,
      -1,   440,   441,   442,   443,   444,   445,   446,    -1,   448,
      -1,   450,   451,   452,   453,   454,    -1,    -1,   457,    -1,
      -1,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    44,    45,    46,    47,    -1,    49,    50,
      51,    52,    -1,    54,    55,    56,    57,    -1,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    -1,    -1,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    -1,    94,    95,    96,    97,    -1,    -1,    -1,
     101,    -1,    -1,    -1,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,    -1,   116,    -1,   118,   119,   120,
     121,   122,   123,    -1,   125,   126,   127,   128,   129,    -1,
      -1,   132,   133,   134,   135,   136,    -1,   138,   139,   140,
      -1,   142,   143,   144,    -1,   146,   147,   148,   149,    -1,
     151,   152,   153,   154,   155,    -1,    -1,   158,    -1,   160,
     161,   162,   163,    -1,   165,    -1,   167,   168,    -1,   170,
     171,   172,   173,   174,   175,    -1,   177,    -1,    -1,    -1,
     181,    -1,   183,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   194,    -1,   196,   197,   198,   199,   200,
     201,    -1,   203,   204,    -1,   206,   207,   208,   209,   210,
     211,   212,    -1,   214,    -1,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,    -1,    -1,   229,   230,
     231,   232,    -1,   234,   235,   236,    -1,    -1,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,    -1,    -1,
     271,   272,   273,   274,    -1,    -1,   277,   278,   279,   280,
     281,    -1,   283,   284,    -1,    -1,   287,   288,   289,    -1,
      -1,   292,    -1,   294,   295,   296,    -1,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,    -1,   309,   310,
      -1,   312,   313,    -1,   315,   316,   317,    -1,   319,   320,
     321,   322,   323,   324,    -1,   326,   327,   328,   329,   330,
     331,   332,   333,    -1,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,    -1,    -1,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,    -1,   368,   369,   370,
     371,   372,    -1,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,    -1,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,    -1,   400,
      -1,   402,   403,    -1,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,   414,    -1,    -1,   417,   418,    -1,   420,
      -1,    -1,   423,   424,   425,   426,   427,   428,   429,   430,
      -1,    -1,   433,   434,   435,   436,   437,    -1,    -1,   440,
     441,   442,   443,   444,    -1,   446,    -1,   448,   449,   450,
     451,   452,   453,   454,    -1,    -1,   457,    -1,    -1,   460,
     461,   462,   463,   464,   465,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   477,   478,   479,   480,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      -1,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      -1,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    -1,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    -1,    94,    95,    96,    97,
      -1,    -1,    -1,   101,    -1,    -1,    -1,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,    -1,   116,    -1,
     118,   119,   120,   121,   122,   123,    -1,   125,   126,   127,
     128,   129,    -1,    -1,   132,   133,   134,   135,   136,    -1,
     138,   139,   140,    -1,   142,   143,   144,    -1,   146,   147,
     148,   149,    -1,   151,   152,   153,   154,   155,    -1,    -1,
     158,    -1,   160,   161,   162,   163,    -1,   165,    -1,   167,
     168,    -1,   170,   171,   172,   173,   174,   175,    -1,   177,
      -1,    -1,    -1,   181,    -1,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,    -1,   196,   197,
     198,   199,   200,   201,    -1,   203,   204,    -1,   206,   207,
     208,   209,   210,   211,   212,    -1,   214,    -1,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,    -1,
      -1,   229,   230,   231,   232,    -1,   234,   235,   236,    -1,
      -1,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,    -1,    -1,   271,   272,   273,   274,    -1,    -1,   277,
     278,   279,   280,   281,    -1,   283,   284,    -1,    -1,   287,
     288,   289,    -1,    -1,   292,    -1,   294,   295,   296,    -1,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
      -1,   309,   310,    -1,   312,   313,    -1,   315,   316,   317,
      -1,   319,   320,   321,   322,   323,   324,    -1,   326,   327,
     328,   329,   330,   331,   332,   333,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,    -1,
      -1,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,    -1,
     368,   369,   370,   371,   372,    -1,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,    -1,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,    -1,   400,    -1,   402,   403,    -1,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,   414,    -1,    -1,   417,
     418,    -1,   420,    -1,    -1,   423,   424,   425,   426,   427,
     428,   429,   430,    -1,    -1,   433,   434,   435,   436,   437,
      -1,    -1,   440,   441,   442,   443,   444,    -1,   446,    -1,
     448,   449,   450,   451,   452,   453,   454,    -1,    -1,   457,
      -1,    -1,   460,   461,   462,   463,   464,   465,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   477,
     478,   479,   480,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    44,
      45,    46,    47,    -1,    49,    50,    51,    52,    -1,    54,
      55,    56,    57,    -1,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    -1,    -1,    74,
      -1,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    89,    90,    91,    92,    -1,    94,
      95,    96,    97,    -1,    -1,    -1,   101,    -1,    -1,    -1,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
      -1,   116,    -1,   118,   119,   120,   121,   122,   123,    -1,
     125,   126,   127,   128,   129,    -1,    -1,   132,   133,   134,
     135,   136,    -1,   138,   139,   140,    -1,   142,   143,   144,
      -1,   146,   147,   148,   149,    -1,   151,   152,   153,   154,
     155,    -1,    -1,   158,    -1,   160,   161,   162,   163,    -1,
     165,    -1,   167,   168,    -1,   170,   171,   172,   173,   174,
     175,    -1,   177,    -1,    -1,    -1,   181,    -1,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
      -1,   196,   197,   198,   199,   200,   201,    -1,   203,   204,
      -1,   206,   207,   208,   209,   210,   211,   212,    -1,   214,
      -1,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,    -1,    -1,   229,   230,   231,   232,    -1,   234,
     235,   236,    -1,    -1,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,    -1,    -1,   271,   272,   273,   274,
      -1,    -1,   277,   278,   279,   280,   281,    -1,   283,   284,
      -1,    -1,   287,   288,   289,    -1,    -1,   292,    -1,   294,
     295,   296,    -1,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,    -1,   309,   310,    -1,   312,   313,    -1,
     315,   316,   317,    -1,   319,   320,   321,   322,   323,   324,
      -1,   326,   327,   328,   329,   330,   331,   332,   333,    -1,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,    -1,    -1,   349,   350,   351,   352,   353,   354,
      -1,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,   371,   372,    -1,   374,
      -1,   376,   377,   378,   379,   380,   381,   382,   383,    -1,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,    -1,   400,    -1,   402,   403,    -1,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,   414,
      -1,    -1,   417,   418,    -1,   420,    -1,    -1,   423,   424,
     425,   426,   427,   428,   429,   430,    -1,    -1,   433,   434,
     435,   436,   437,    -1,    -1,   440,   441,   442,   443,   444,
      -1,   446,    -1,   448,   449,   450,   451,   452,   453,   454,
      -1,    -1,   457,    -1,    -1,   460,   461,   462,   463,   464,
     465,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   477,   478,   479,   480,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    44,    45,    46,    47,    -1,    49,    50,    51,
      52,    -1,    54,    55,    56,    57,    -1,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      -1,    -1,    74,    -1,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    -1,    94,    95,    96,    97,    -1,    -1,    -1,   101,
      -1,    -1,    -1,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,    -1,   116,    -1,   118,   119,   120,   121,
     122,   123,    -1,   125,   126,   127,   128,   129,    -1,    -1,
     132,   133,   134,   135,   136,    -1,   138,   139,   140,    -1,
     142,   143,   144,    -1,   146,   147,   148,   149,    -1,   151,
     152,   153,   154,   155,    -1,    -1,   158,    -1,   160,   161,
     162,   163,    -1,   165,    -1,   167,   168,    -1,   170,   171,
     172,   173,   174,   175,    -1,   177,    -1,    -1,    -1,   181,
      -1,   183,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,    -1,   196,   197,   198,   199,   200,   201,
      -1,   203,   204,    -1,   206,   207,   208,   209,   210,   211,
     212,    -1,   214,    -1,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,    -1,    -1,   229,   230,   231,
     232,    -1,   234,   235,   236,    -1,    -1,   239,   240,   241,
     242,   243,    -1,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,    -1,    -1,   271,
     272,   273,   274,    -1,    -1,   277,   278,   279,   280,   281,
      -1,   283,   284,    -1,    -1,   287,   288,   289,    -1,    -1,
     292,    -1,   294,   295,   296,    -1,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,    -1,   309,   310,    -1,
     312,   313,    -1,   315,   316,   317,    -1,   319,   320,   321,
     322,   323,   324,    -1,   326,   327,   328,   329,   330,   331,
     332,   333,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,    -1,    -1,   349,   350,   351,
     352,   353,   354,    -1,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,    -1,   368,   369,   370,   371,
     372,    -1,   374,    -1,   376,   377,   378,   379,   380,   381,
     382,   383,    -1,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,    -1,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,   414,    -1,    -1,   417,   418,    -1,   420,    -1,
      -1,   423,   424,   425,   426,   427,   428,   429,   430,    -1,
      -1,   433,   434,   435,   436,   437,    -1,    -1,   440,   441,
     442,   443,   444,    -1,   446,    -1,   448,   449,   450,   451,
     452,   453,   454,    -1,    -1,   457,    -1,    -1,   460,   461,
     462,   463,   464,   465,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   477,   478,   479,   480
};

/* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
   symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,    19,    29,    31,    32,    47,    56,    68,    79,    91,
      93,   111,   125,   135,   141,   149,   151,   152,   165,   194,
     209,   235,   312,   315,   344,   353,   367,   374,   378,   388,
     400,   404,   440,   445,   459,   483,   497,   508,   509,   510,
     511,   522,   523,   526,   528,   532,   547,   548,   550,   552,
     559,   561,   608,   615,   618,   619,   636,   637,   638,   639,
     640,   641,   692,   693,   837,   840,   843,   850,   851,   852,
     853,   854,   861,   865,   871,   873,   878,   882,   883,   886,
     887,   889,   890,   892,   417,   462,   560,   198,   360,   368,
     404,   451,   560,     3,    19,    20,    21,    22,    23,    24,
      25,    26,    28,    29,    30,    38,    39,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    54,
      55,    56,    57,    59,    62,    63,    64,    65,    66,    68,
      69,    70,    71,    72,    74,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    87,    88,    89,    90,    91,
      92,    94,    95,    96,    97,   101,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   116,   118,   119,   120,
     121,   122,   123,   125,   126,   127,   128,   129,   132,   133,
     134,   135,   136,   138,   139,   140,   142,   143,   144,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     158,   160,   161,   162,   163,   165,   167,   168,   170,   171,
     172,   173,   174,   175,   177,   179,   180,   181,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     196,   197,   198,   199,   200,   201,   203,   204,   205,   206,
     207,   208,   209,   210,   211,   212,   214,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   229,   230,
     231,   232,   234,   235,   236,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   271,   272,   273,   274,
     276,   277,   278,   279,   280,   281,   283,   284,   287,   288,
     289,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   319,   320,   321,   322,
     323,   324,   326,   327,   328,   329,   330,   331,   332,   333,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     368,   369,   370,   371,   372,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   402,   403,   405,   406,   407,   408,   409,   410,   411,
     413,   414,   417,   418,   419,   420,   421,   423,   424,   425,
     426,   427,   428,   429,   430,   433,   434,   435,   436,   437,
     440,   441,   442,   443,   444,   445,   446,   448,   449,   450,
     451,   452,   453,   454,   457,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   750,   822,   826,   829,
     895,   896,   897,   560,    50,   497,   631,   175,   236,   290,
     360,   408,   410,   426,   432,   435,   606,   849,     3,    27,
     244,   315,   397,   820,   826,   895,    21,    74,    90,   144,
     154,   166,   171,   198,   243,   247,   310,   324,   357,   360,
     368,   371,   390,   404,   411,   420,   426,   451,   609,   610,
     613,   560,   820,    93,   449,   497,   528,   618,   636,   857,
     861,   878,   892,   108,    68,   209,   108,     5,   825,   826,
     872,   872,   826,   820,    27,   413,   417,   826,   884,   885,
     888,   560,    27,   130,   648,   649,   175,   236,   360,   372,
     413,   866,   867,   888,   560,   445,   636,   641,   888,     5,
     286,   705,   817,   826,   827,   170,   497,   875,   497,   332,
     642,   643,   820,   642,   637,   638,     0,   500,   120,   208,
     437,   145,   213,   291,   431,   651,   652,   637,   639,   640,
     501,   449,   855,    27,   413,   417,   636,   888,   188,   817,
     820,   188,   817,   188,   705,   188,   817,   497,   495,   499,
     801,   803,   528,   618,   636,   839,   878,   817,   408,   410,
     408,   410,   342,   188,   826,   826,   831,   171,   243,   332,
     368,   404,   451,   616,   198,    27,   820,   249,   420,   107,
     404,   404,   451,   363,     3,    44,    49,    50,    51,    52,
      64,    65,    74,    82,    94,   101,   112,   113,   134,   162,
     168,   170,   174,   188,   190,   204,   211,   212,   214,   217,
     218,   220,   230,   232,   244,   263,   264,   265,   273,   278,
     294,   296,   329,   351,   355,   375,   379,   382,   397,   406,
     413,   414,   425,   446,   449,   614,   716,   717,   719,   721,
     723,   725,   727,   728,   729,   731,   732,   733,   735,   736,
     830,   895,   898,   188,   611,   831,   188,   818,   820,   188,
     820,   497,   551,   290,   606,   857,     3,    48,    49,    51,
      52,    64,    65,    72,   112,   113,   150,   156,   162,   179,
     180,   205,   211,   212,   214,   244,   263,   265,   269,   276,
     278,   293,   297,   311,   314,   329,   355,   375,   382,   397,
     399,   413,   414,   419,   421,   425,   445,   446,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   858,
     860,   861,   863,   864,   895,   899,   855,   825,   872,   825,
     486,   497,   497,   838,   480,   219,   499,   285,     4,     6,
       7,     8,     9,    10,    35,    49,    51,    52,    60,    61,
      64,    65,    72,    74,    98,    99,   100,   101,   102,   103,
     104,   112,   113,   115,   150,   156,   157,   162,   179,   180,
     211,   212,   214,   237,   238,   263,   265,   270,   275,   276,
     278,   287,   297,   311,   329,   355,   373,   382,   399,   413,
     414,   419,   421,   422,   425,   438,   446,   481,   488,   489,
     490,   495,   497,   502,   504,   505,   637,   682,   720,   723,
     726,   727,   728,   730,   731,   732,   735,   736,   747,   749,
     750,   751,   753,   767,   768,   775,   795,   800,   807,   808,
     809,   822,   823,   824,   825,   826,   806,   808,   866,   866,
     825,   866,   480,   169,   415,   486,   497,   817,   490,   803,
       3,   168,   170,   449,   861,   874,   876,   168,   877,   747,
     779,   780,   826,   642,   501,   497,   833,   498,   498,   510,
     169,   215,   705,   879,    27,   130,   647,   647,    54,   647,
     159,   164,   233,   282,   657,   659,   660,   685,   687,   688,
     689,   651,   652,   497,   817,   480,   219,   150,    23,    29,
     135,   289,   340,   344,   374,   442,   516,   519,   520,   340,
     150,    36,    55,   106,   197,   248,   256,   268,   299,   340,
     346,   368,   374,   388,   519,   553,   556,   150,   340,   374,
     519,   150,   340,   374,   519,     3,    27,    44,    50,    74,
      82,    94,   101,   130,   168,   170,   174,   190,   204,   217,
     218,   220,   230,   232,   244,   264,   273,   294,   296,   351,
     379,   397,   406,   425,   447,   449,   490,   498,   747,   782,
     783,   828,   834,   895,   900,   747,   802,     3,    27,    31,
      32,    33,    34,    35,    36,    37,    40,    53,    58,    60,
      61,    67,    73,    75,    86,    93,    98,    99,   100,   102,
     103,   104,   115,   117,   124,   130,   131,   137,   141,   145,
     157,   159,   164,   166,   169,   176,   178,   182,   195,   202,
     213,   215,   227,   228,   233,   237,   238,   270,   275,   282,
     285,   286,   290,   291,   308,   318,   325,   334,   347,   348,
     367,   373,   384,   401,   404,   412,   415,   416,   422,   431,
     432,   438,   439,   445,   447,   455,   456,   458,   459,   821,
     835,   895,   899,   901,   801,   498,   497,   595,   606,   270,
     841,   499,   832,    36,   451,   188,   817,   188,   817,   894,
     817,   817,    82,   846,   463,    83,   127,   302,   409,   448,
     734,   734,   734,   497,   722,   722,   314,   497,   724,   150,
     497,    64,    65,   734,   722,   719,   461,   483,   497,   737,
     497,   737,    58,   347,   501,   612,   497,    35,   718,   497,
     109,   110,   185,   186,   250,   251,   252,   253,   254,   255,
     258,   259,   364,   365,   477,   478,   497,   738,   739,   740,
     741,   742,   743,   744,   745,   746,   722,   150,   501,   612,
     150,   501,   612,   150,   285,   780,   342,   404,   498,   501,
       4,   157,   285,   422,   488,   489,   555,   558,   824,   825,
     856,   858,   859,   862,   857,   497,   626,   630,   555,   862,
     868,   870,   782,   717,   784,    36,   231,   826,   497,   804,
     495,   747,   799,   497,   497,   164,   497,   497,   637,   497,
     497,   497,   747,   497,   497,   497,   497,   497,   497,   497,
     497,   497,   747,   747,   747,   146,   810,   811,   780,   781,
     637,   747,   779,   769,   770,   771,   826,   827,     9,   804,
     803,   497,   825,   497,   824,   825,     3,     8,    11,    15,
      16,    17,    18,    33,    36,    41,    48,    73,   174,   190,
     195,   217,   218,   232,   270,   273,   287,   290,   379,   481,
     484,   485,   486,   488,   489,   490,   491,   492,   493,   773,
     774,   775,   777,   460,   754,   804,   296,   747,   501,   215,
     644,   497,   825,   804,   499,   803,   644,     3,   115,   236,
     555,   736,   825,   869,    97,   115,   870,   115,   870,   817,
     498,   501,   855,   501,   498,   643,   818,    36,   879,   530,
     817,    36,   826,   374,   639,   639,    27,   490,   653,   654,
     747,   639,   161,   267,   673,   222,   268,   328,   377,   437,
       4,     9,    27,   668,   747,   488,   489,   669,   670,   747,
     749,   685,   686,   660,   659,   657,   658,   164,   688,   280,
     690,   657,   685,   780,   833,   231,   817,    67,    75,    86,
     166,   188,   318,   432,   576,   586,   602,   826,    75,    86,
     527,    86,   527,   497,   415,   497,   574,   242,   435,   574,
      86,   501,   415,   817,   719,   555,    54,   557,   555,   555,
     106,   248,   256,    54,   415,   459,   483,   554,   261,   360,
     554,   556,   705,    86,   415,   527,   360,   817,   415,   360,
     782,   782,   783,   498,   501,   651,   652,    13,    14,   496,
     506,   415,   594,   599,   826,   459,   629,   332,   404,   451,
     150,    93,   548,   561,   842,   843,   890,   821,   499,   142,
     817,   270,   549,   553,   270,   497,   595,    36,   595,   497,
     617,   188,   589,   826,   847,   497,   780,   824,   614,   784,
     734,   734,    35,   718,   413,   413,   824,   824,   717,   715,
     826,   495,   495,   824,   824,   415,   415,   415,   415,   611,
     831,   818,   820,   820,   831,   498,   606,   188,   817,   894,
     857,   863,     4,   824,     4,   824,   628,   635,   835,    50,
      95,   121,   139,   143,   165,   168,   183,   275,   283,   326,
     632,   501,   498,   501,   498,   501,   839,   780,   801,   781,
     455,   796,   797,   747,   780,   497,   824,   824,     3,   738,
     739,   740,   741,   742,   743,   744,   745,   785,   786,   825,
     824,   824,   747,     8,    16,    17,    18,   484,   485,   486,
     488,   489,   490,   491,   492,   493,   773,   778,   826,   747,
     787,   488,   489,   497,   748,   749,   775,   789,   498,   780,
     747,   779,   790,   747,    53,   169,   228,   416,   747,   780,
     793,   747,   497,   826,   342,   815,   496,   498,   501,   501,
     503,   506,   780,   747,   746,   746,   717,   747,   747,   747,
     747,   747,     5,   835,   836,   413,    40,   401,   805,   831,
     747,   747,   497,   637,   794,   130,   157,   270,   275,   280,
     422,   433,   747,   275,   497,   747,   415,    48,   174,   190,
     195,   232,   379,   747,   747,   747,   747,   747,   747,   747,
     747,   747,   747,    27,    34,   384,   772,   178,   160,   755,
     355,   497,   768,   809,   175,   236,   404,   408,   410,   435,
     645,   817,   169,   694,   782,   490,   694,   497,   825,   498,
     817,   874,   817,   882,   747,   498,   497,   439,   881,   115,
     298,   497,   529,   636,    36,   826,   497,   534,   543,   544,
     546,   826,    37,   124,   655,   655,   501,   439,   655,   355,
     356,   488,   489,   670,   672,   749,   377,   222,   286,   307,
     307,   501,   492,     4,   671,   824,   671,   355,   356,   672,
     816,   817,   274,   381,   691,   686,   658,   498,   340,   519,
     497,   188,   586,   820,   222,   270,   222,   439,   497,   579,
     717,   820,   826,   188,   820,   188,   826,    23,   135,   374,
     515,   518,   569,   584,   835,   820,   578,   598,   835,   820,
     516,   820,   340,   374,   519,   553,   555,   831,   820,   555,
     831,   820,   555,   340,   374,   519,   820,   820,   820,   820,
     340,   374,   519,   820,   820,   651,   651,   651,   447,   783,
     189,   345,   650,   747,   747,   747,   802,   323,   625,   498,
     501,   283,   169,   415,   620,   451,   817,   894,   817,   826,
     290,   606,   821,   497,   497,   150,   150,   232,   576,   586,
     590,   593,   603,   605,   826,   459,   461,   581,   149,   636,
     459,   848,   498,   782,    36,   270,   285,   780,   498,   498,
     612,   498,   495,   480,   480,   498,   498,   498,   501,   717,
     824,   496,   824,   498,   498,   739,   741,   742,   743,   742,
     743,   743,   612,   612,   285,   612,   404,   270,    36,   498,
     501,   490,   497,   555,   627,   862,    36,   624,   825,   624,
     270,   275,   326,   624,   624,   868,   717,   498,   496,   747,
     137,   797,   798,    36,   498,   747,   498,   498,   498,   169,
     498,   498,   501,   498,   499,   308,   788,   498,   748,   748,
     747,    11,    16,    17,    18,   195,   217,   287,   484,   485,
     486,   488,   489,   490,   491,   492,   493,   775,   748,   498,
     498,   164,   169,   791,   792,   501,   498,    36,   793,   780,
     793,   793,   169,   498,    36,   818,   819,   497,   747,   812,
     804,   747,   769,   747,   498,   498,   480,   748,   748,   143,
     780,   169,   130,   157,   275,   280,   422,   433,   497,   143,
     778,   747,   401,   805,   747,   794,   747,   415,   497,   637,
     497,   497,   153,   756,   408,   410,   408,   410,   817,   404,
     646,   646,   646,   227,   356,   497,   637,   695,   696,   697,
     698,   705,   706,   750,   752,   753,   826,   456,   711,   651,
     811,   711,   824,   746,   833,   839,   696,   456,   880,   445,
     403,   438,   538,   533,   542,   826,   285,   535,   826,   539,
     546,   501,   694,   486,   804,   482,   656,   656,   654,   287,
     773,   776,   656,     4,   824,   672,   286,   437,   669,   501,
     241,   415,   747,   270,   602,   497,   150,   497,   579,   198,
     599,   600,   562,   289,   572,   562,    23,   135,   344,   346,
     374,   512,   513,   514,   520,   521,   150,   612,   150,   612,
     569,   584,   569,   498,   501,   565,   825,   498,   501,   486,
     499,   415,   360,    86,   415,   527,   360,   415,   415,   415,
     360,   650,   650,   650,   783,   277,   277,   498,   496,   391,
     392,   634,   825,   594,   625,   817,   497,    36,   595,   841,
     342,   404,   524,   525,   825,   599,   817,   817,   894,   817,
     498,   501,   283,   574,   283,   285,   573,   820,   459,   893,
     574,    36,   498,   404,   747,   150,   817,   498,   718,   824,
     737,   737,   718,   826,   496,   496,   831,   150,   628,   622,
     633,   862,   825,   825,   275,   599,   490,   599,   825,   825,
     412,   747,   141,   717,   498,   747,   747,   778,   747,   791,
     717,   748,   748,   748,   748,   130,   270,   280,   748,   748,
     748,   748,   748,   748,   748,   748,   748,   748,   747,   747,
     792,   791,   717,   498,   498,   498,   780,   717,   501,   498,
     747,   812,   813,   814,    36,   498,   746,   747,    33,    33,
     747,   498,   747,   169,   497,   784,   747,   498,   143,   748,
     748,   143,   143,   747,   747,   652,   456,   295,   760,   646,
     646,   646,   646,   817,   817,   817,   637,   706,   169,   637,
     697,   698,    36,   699,   700,   826,   501,    94,   170,   204,
     220,   230,   264,   351,   702,   700,    36,   699,   701,   826,
     483,   710,   803,   747,   178,   674,   650,   815,   674,   498,
     498,   747,   348,   537,   444,   498,   501,   804,    84,   537,
     498,   501,   534,   880,   747,   161,   226,   497,   656,   286,
     817,   820,   498,   150,   600,   586,   600,   562,   589,   501,
     498,   117,   202,   268,   270,   585,   497,   596,   173,   115,
     187,   270,   574,   554,   107,   115,   173,   270,   390,   393,
     556,   574,   374,   514,   426,   820,   826,   518,   598,     3,
      44,    50,    74,    82,    94,   101,   168,   170,   174,   190,
     204,   217,   218,   220,   230,   232,   244,   264,   269,   273,
     287,   294,   296,   351,   375,   379,   397,   406,   425,   449,
     488,   489,   555,   563,   601,   717,   776,   825,   828,   895,
     901,   835,   820,   820,   820,   820,   820,   820,   820,   820,
     820,   820,   498,   498,   498,   651,   554,   634,   497,   593,
     636,   848,   606,   188,   817,   498,   501,   498,   549,   497,
      36,   583,   581,   590,    79,   551,   107,   268,   636,   636,
     589,   439,   845,   496,   717,   612,   894,   498,   501,   599,
     747,   498,   498,   792,   169,   130,   280,   497,   498,   498,
     501,   498,   826,   747,   747,   747,   784,   498,   747,    33,
      33,   747,   747,   143,   498,   498,   747,   497,   761,   826,
     817,   817,   817,   817,   700,   701,   497,   498,   826,   827,
     406,   665,   666,   497,   697,   220,   294,   703,   697,   703,
     220,   702,   703,   220,   666,   497,   826,   666,   497,   292,
      54,   182,   683,   498,   683,   825,   807,   636,   298,   636,
     533,   285,   497,   531,   486,   546,   537,   778,   562,   586,
     498,   498,   459,   592,   118,   191,   200,   117,   441,   569,
     587,    67,    73,    86,   115,   117,   173,   202,   270,   275,
     318,   334,   432,   439,   567,   568,   580,    30,    54,   607,
     188,   275,   555,   747,   607,   275,   488,   489,   558,   826,
     717,   612,   612,   244,   397,   828,   832,   486,   415,   415,
     650,   626,   439,   621,   623,   599,   498,   893,    36,   404,
     270,   497,   825,   848,   593,   149,   636,   147,   196,   573,
     120,   135,   317,   893,   107,   459,   891,   285,   826,   844,
     497,    36,   633,   748,   169,   497,   784,   812,   498,   747,
     747,   747,   498,   762,   826,   707,   708,   752,   699,   497,
       4,     9,   661,   663,   664,   826,   819,   697,   285,   439,
     704,   697,   220,   697,   712,   713,   826,   497,   712,   826,
      27,    96,   179,   354,   490,   497,   675,   676,   677,   678,
     679,   680,   681,   747,   747,   458,   757,   825,   757,   501,
     538,    86,   497,   536,   545,   752,   826,   131,   747,   498,
     334,   592,   497,   582,   562,   498,   501,   497,   831,   820,
     748,   607,   118,   191,   117,   275,   222,   817,   592,    81,
     115,    36,   150,    73,   714,   832,   492,   563,   820,   820,
     498,   554,   122,   498,   581,   636,   817,   150,    36,   498,
     820,   893,    27,    78,    87,   116,   187,   199,   390,   393,
     577,   577,   356,   356,    59,    67,   236,   817,   545,   748,
     784,   498,   304,   763,   498,   501,    36,   709,   819,   307,
     492,   307,   356,   492,   497,   497,   498,   747,   497,   697,
     704,   498,   501,   717,   712,   498,   497,   376,   497,   498,
     501,   758,   759,   826,   325,   684,   684,   444,   820,   747,
     498,   501,    73,   540,   540,   271,   437,   817,   562,   588,
     591,   835,   569,   747,   270,   568,    36,   592,   595,   820,
     187,   831,   439,   517,   492,   426,   626,   825,   848,   573,
     891,   497,   817,   636,   581,   551,    67,   288,    67,   845,
     498,   498,    54,   651,   710,   707,   497,   498,   826,   661,
     819,   713,   714,   498,   780,   497,   780,   677,   501,    36,
     747,   439,   662,   662,   636,   498,   711,   536,   831,   541,
     831,   541,   374,   595,   498,   501,   486,   498,   187,   497,
     246,   604,   497,   564,   747,   612,   426,    36,   497,   891,
     573,   893,   288,   288,   497,   848,   779,   327,   356,   764,
     712,   498,   501,   498,   498,   498,   676,   498,   759,   761,
     358,   540,   655,   655,   544,   604,   591,   563,   268,   575,
     564,   747,   170,   303,   380,   285,   570,   571,   597,   553,
     636,   545,   711,    48,    97,   428,   747,   765,   766,   765,
     498,   498,     9,   341,   667,   498,   664,   541,   656,   656,
     711,   571,   200,   498,   120,   437,   285,   597,   285,   570,
     498,   891,   498,   766,   355,   163,   313,   163,   313,   498,
     497,   655,   562,   453,    58,   268,   347,   374,   566,   566,
     848,    33,     9,   656,    22,   115,   275,   711,   766,   498
};

#define yyerrok		(yyerrstatus = 0)
#define yyclearin	(yychar = YYEMPTY)
#define YYEMPTY		(-2)
#define YYEOF		0

#define YYACCEPT	goto yyacceptlab
#define YYABORT		goto yyabortlab
#define YYERROR		goto yyerrorlab


/* Like YYERROR except do call yyerror.  This remains here temporarily
   to ease the transition to the new meaning of YYERROR, for GCC.
   Once GCC version 2 has supplanted version 1, this can go.  */

#define YYFAIL		goto yyerrlab

#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)					\
do								\
  if (yychar == YYEMPTY && yylen == 1)				\
    {								\
      yychar = (Token);						\
      yylval = (Value);						\
      yytoken = YYTRANSLATE (yychar);				\
      YYPOPSTACK (1);						\
      goto yybackup;						\
    }								\
  else								\
    {								\
      yyerror (&yylloc, yyscanner, YY_("syntax error: cannot back up")); \
      YYERROR;							\
    }								\
while (YYID (0))


#define YYTERROR	1
#define YYERRCODE	256


/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#define YYRHSLOC(Rhs, K) ((Rhs)[K])
#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)				\
    do									\
      if (YYID (N))                                                    \
	{								\
	  (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;	\
	  (Current).first_column = YYRHSLOC (Rhs, 1).first_column;	\
	  (Current).last_line    = YYRHSLOC (Rhs, N).last_line;		\
	  (Current).last_column  = YYRHSLOC (Rhs, N).last_column;	\
	}								\
      else								\
	{								\
	  (Current).first_line   = (Current).last_line   =		\
	    YYRHSLOC (Rhs, 0).last_line;				\
	  (Current).first_column = (Current).last_column =		\
	    YYRHSLOC (Rhs, 0).last_column;				\
	}								\
    while (YYID (0))
#endif


/* YY_LOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

#ifndef YY_LOCATION_PRINT
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
#  define YY_LOCATION_PRINT(File, Loc)			\
     fprintf (File, "%d.%d-%d.%d",			\
	      (Loc).first_line, (Loc).first_column,	\
	      (Loc).last_line,  (Loc).last_column)
# else
#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
# endif
#endif


/* YYLEX -- calling `yylex' with the right arguments.  */

#ifdef YYLEX_PARAM
# define YYLEX yylex (&yylval, &yylloc, YYLEX_PARAM)
#else
# define YYLEX yylex (&yylval, &yylloc, yyscanner)
#endif

/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)			\
do {						\
  if (yydebug)					\
    YYFPRINTF Args;				\
} while (YYID (0))

# define YY_SYMBOL_PRINT(Title, Type, Value, Location)			  \
do {									  \
  if (yydebug)								  \
    {									  \
      YYFPRINTF (stderr, "%s ", Title);					  \
      yy_symbol_print (stderr,						  \
		  Type, Value, Location, yyscanner); \
      YYFPRINTF (stderr, "\n");						  \
    }									  \
} while (YYID (0))


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
#else
static void
yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  if (!yyvaluep)
    return;
  YYUSE (yylocationp);
  YYUSE (yyscanner);
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# else
  YYUSE (yyoutput);
# endif
  switch (yytype)
    {
      default:
	break;
    }
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
#else
static void
yy_symbol_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  if (yytype < YYNTOKENS)
    YYFPRINTF (yyoutput, "token %s (", yytname[yytype]);
  else
    YYFPRINTF (yyoutput, "nterm %s (", yytname[yytype]);

  YY_LOCATION_PRINT (yyoutput, *yylocationp);
  YYFPRINTF (yyoutput, ": ");
  yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_stack_print (yytype_int16 *bottom, yytype_int16 *top)
#else
static void
yy_stack_print (bottom, top)
    yytype_int16 *bottom;
    yytype_int16 *top;
#endif
{
  YYFPRINTF (stderr, "Stack now");
  for (; bottom <= top; ++bottom)
    YYFPRINTF (stderr, " %d", *bottom);
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)				\
do {								\
  if (yydebug)							\
    yy_stack_print ((Bottom), (Top));				\
} while (YYID (0))


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_reduce_print (YYSTYPE *yyvsp, YYLTYPE *yylsp, int yyrule, core_yyscan_t yyscanner)
#else
static void
yy_reduce_print (yyvsp, yylsp, yyrule, yyscanner)
    YYSTYPE *yyvsp;
    YYLTYPE *yylsp;
    int yyrule;
    core_yyscan_t yyscanner;
#endif
{
  int yynrhs = yyr2[yyrule];
  int yyi;
  unsigned long int yylno = yyrline[yyrule];
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
	     yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      fprintf (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
		       &(yyvsp[(yyi + 1) - (yynrhs)])
		       , &(yylsp[(yyi + 1) - (yynrhs)])		       , yyscanner);
      fprintf (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)		\
do {					\
  if (yydebug)				\
    yy_reduce_print (yyvsp, yylsp, Rule, yyscanner); \
} while (YYID (0))

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef	YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif



#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static YYSIZE_T
yystrlen (const char *yystr)
#else
static YYSIZE_T
yystrlen (yystr)
    const char *yystr;
#endif
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static char *
yystpcpy (char *yydest, const char *yysrc)
#else
static char *
yystpcpy (yydest, yysrc)
    char *yydest;
    const char *yysrc;
#endif
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
	switch (*++yyp)
	  {
	  case '\'':
	  case ',':
	    goto do_not_strip_quotes;

	  case '\\':
	    if (*++yyp != '\\')
	      goto do_not_strip_quotes;
	    /* Fall through.  */
	  default:
	    if (yyres)
	      yyres[yyn] = *yyp;
	    yyn++;
	    break;

	  case '"':
	    if (yyres)
	      yyres[yyn] = '\0';
	    return yyn;
	  }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into YYRESULT an error message about the unexpected token
   YYCHAR while in state YYSTATE.  Return the number of bytes copied,
   including the terminating null byte.  If YYRESULT is null, do not
   copy anything; just return the number of bytes that would be
   copied.  As a special case, return 0 if an ordinary "syntax error"
   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
   size calculation.  */
static YYSIZE_T
yysyntax_error (char *yyresult, int yystate, int yychar)
{
  int yyn = yypact[yystate];

  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
    return 0;
  else
    {
      int yytype = YYTRANSLATE (yychar);
      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
      YYSIZE_T yysize = yysize0;
      YYSIZE_T yysize1;
      int yysize_overflow = 0;
      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
      int yyx;

# if 0
      /* This is so xgettext sees the translatable formats that are
	 constructed on the fly.  */
      YY_("syntax error, unexpected %s");
      YY_("syntax error, unexpected %s, expecting %s");
      YY_("syntax error, unexpected %s, expecting %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
# endif
      char *yyfmt;
      char const *yyf;
      static char const yyunexpected[] = "syntax error, unexpected %s";
      static char const yyexpecting[] = ", expecting %s";
      static char const yyor[] = " or %s";
      char yyformat[sizeof yyunexpected
		    + sizeof yyexpecting - 1
		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
		       * (sizeof yyor - 1))];
      char const *yyprefix = yyexpecting;

      /* Start YYX at -YYN if negative to avoid negative indexes in
	 YYCHECK.  */
      int yyxbegin = yyn < 0 ? -yyn : 0;

      /* Stay within bounds of both yycheck and yytname.  */
      int yychecklim = YYLAST - yyn + 1;
      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
      int yycount = 1;

      yyarg[0] = yytname[yytype];
      yyfmt = yystpcpy (yyformat, yyunexpected);

      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
	  {
	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
	      {
		yycount = 1;
		yysize = yysize0;
		yyformat[sizeof yyunexpected - 1] = '\0';
		break;
	      }
	    yyarg[yycount++] = yytname[yyx];
	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
	    yysize_overflow |= (yysize1 < yysize);
	    yysize = yysize1;
	    yyfmt = yystpcpy (yyfmt, yyprefix);
	    yyprefix = yyor;
	  }

      yyf = YY_(yyformat);
      yysize1 = yysize + yystrlen (yyf);
      yysize_overflow |= (yysize1 < yysize);
      yysize = yysize1;

      if (yysize_overflow)
	return YYSIZE_MAXIMUM;

      if (yyresult)
	{
	  /* Avoid sprintf, as that infringes on the user's name space.
	     Don't have undefined behavior even if the translation
	     produced a string with the wrong number of "%s"s.  */
	  char *yyp = yyresult;
	  int yyi = 0;
	  while ((*yyp = *yyf) != '\0')
	    {
	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
		{
		  yyp += yytnamerr (yyp, yyarg[yyi++]);
		  yyf += 2;
		}
	      else
		{
		  yyp++;
		  yyf++;
		}
	    }
	}
      return yysize;
    }
}
#endif /* YYERROR_VERBOSE */


/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, YYLTYPE *yylocationp, core_yyscan_t yyscanner)
#else
static void
yydestruct (yymsg, yytype, yyvaluep, yylocationp, yyscanner)
    const char *yymsg;
    int yytype;
    YYSTYPE *yyvaluep;
    YYLTYPE *yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  YYUSE (yyvaluep);
  YYUSE (yylocationp);
  YYUSE (yyscanner);

  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  switch (yytype)
    {

      default:
	break;
    }
}


/* Prevent warnings from -Wmissing-prototypes.  */

#ifdef YYPARSE_PARAM
#if defined __STDC__ || defined __cplusplus
int yyparse (void *YYPARSE_PARAM);
#else
int yyparse ();
#endif
#else /* ! YYPARSE_PARAM */
#if defined __STDC__ || defined __cplusplus
int yyparse (core_yyscan_t yyscanner);
#else
int yyparse ();
#endif
#endif /* ! YYPARSE_PARAM */






/*----------.
| yyparse.  |
`----------*/

#ifdef YYPARSE_PARAM
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (void *YYPARSE_PARAM)
#else
int
yyparse (YYPARSE_PARAM)
    void *YYPARSE_PARAM;
#endif
#else /* ! YYPARSE_PARAM */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (core_yyscan_t yyscanner)
#else
int
yyparse (yyscanner)
    core_yyscan_t yyscanner;
#endif
#endif
{
  /* The look-ahead symbol.  */
int yychar;

/* The semantic value of the look-ahead symbol.  */
YYSTYPE yylval;

/* Number of syntax errors so far.  */
int yynerrs;
/* Location data for the look-ahead symbol.  */
YYLTYPE yylloc;

  int yystate;
  int yyn;
  int yyresult;
  /* Number of tokens to shift before error messages enabled.  */
  int yyerrstatus;
  /* Look-ahead token as an internal (translated) token number.  */
  int yytoken = 0;
#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

  /* Three stacks and their tools:
     `yyss': related to states,
     `yyvs': related to semantic values,
     `yyls': related to locations.

     Refer to the stacks thru separate pointers, to allow yyoverflow
     to reallocate them elsewhere.  */

  /* The state stack.  */
  yytype_int16 yyssa[YYINITDEPTH];
  yytype_int16 *yyss = yyssa;
  yytype_int16 *yyssp;

  /* The semantic value stack.  */
  YYSTYPE yyvsa[YYINITDEPTH];
  YYSTYPE *yyvs = yyvsa;
  YYSTYPE *yyvsp;

  /* The location stack.  */
  YYLTYPE yylsa[YYINITDEPTH];
  YYLTYPE *yyls = yylsa;
  YYLTYPE *yylsp;
  /* The locations where the error started and ended.  */
  YYLTYPE yyerror_range[2];

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))

  YYSIZE_T yystacksize = YYINITDEPTH;

  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;
  YYLTYPE yyloc;

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY;		/* Cause a token to be read.  */

  /* Initialize stack pointers.
     Waste one element of value and location stack
     so that they stay on the same level as the state stack.
     The wasted elements are never initialized.  */

  yyssp = yyss;
  yyvsp = yyvs;
  yylsp = yyls;
#if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
  /* Initialize the default location before parsing starts.  */
  yylloc.first_line   = yylloc.last_line   = 1;
  yylloc.first_column = yylloc.last_column = 0;
#endif

  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
	/* Give user a chance to reallocate the stack.  Use copies of
	   these so that the &'s don't force the real ones into
	   memory.  */
	YYSTYPE *yyvs1 = yyvs;
	yytype_int16 *yyss1 = yyss;
	YYLTYPE *yyls1 = yyls;

	/* Each stack pointer address is followed by the size of the
	   data in use in that stack, in bytes.  This used to be a
	   conditional around just the two extra args, but that might
	   be undefined if yyoverflow is a macro.  */
	yyoverflow (YY_("memory exhausted"),
		    &yyss1, yysize * sizeof (*yyssp),
		    &yyvs1, yysize * sizeof (*yyvsp),
		    &yyls1, yysize * sizeof (*yylsp),
		    &yystacksize);
	yyls = yyls1;
	yyss = yyss1;
	yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
	goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
	yystacksize = YYMAXDEPTH;

      {
	yytype_int16 *yyss1 = yyss;
	union yyalloc *yyptr =
	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
	if (! yyptr)
	  goto yyexhaustedlab;
	YYSTACK_RELOCATE (yyss);
	YYSTACK_RELOCATE (yyvs);
	YYSTACK_RELOCATE (yyls);
#  undef YYSTACK_RELOCATE
	if (yyss1 != yyssa)
	  YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;
      yylsp = yyls + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
		  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
	YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     look-ahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to look-ahead token.  */
  yyn = yypact[yystate];
  if (yyn == YYPACT_NINF)
    goto yydefault;

  /* Not known => get a look-ahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid look-ahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = YYLEX;
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yyn == 0 || yyn == YYTABLE_NINF)
	goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the look-ahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token unless it is eof.  */
  if (yychar != YYEOF)
    yychar = YYEMPTY;

  yystate = yyn;
  *++yyvsp = yylval;
  *++yylsp = yylloc;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     `$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];

  /* Default location.  */
  YYLLOC_DEFAULT (yyloc, (yylsp - yylen), yylen);
  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 2:
#line 468 "third_party/libpg_query/grammar/grammar.y"
    {
				pg_yyget_extra(yyscanner)->parsetree = (yyvsp[(1) - (1)].list);
			;}
    break;

  case 3:
#line 484 "third_party/libpg_query/grammar/grammar.y"
    {
					if ((yyvsp[(1) - (3)].list) != NIL)
					{
						/* update length of previous stmt */
						updateRawStmtEnd(llast_node(PGRawStmt, (yyvsp[(1) - (3)].list)), (yylsp[(2) - (3)]));
					}
					if ((yyvsp[(3) - (3)].node) != NULL)
						(yyval.list) = lappend((yyvsp[(1) - (3)].list), makeRawStmt((yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]) + 1));
					else
						(yyval.list) = (yyvsp[(1) - (3)].list);
				;}
    break;

  case 4:
#line 496 "third_party/libpg_query/grammar/grammar.y"
    {
					if ((yyvsp[(1) - (1)].node) != NULL)
						(yyval.list) = list_make1(makeRawStmt((yyvsp[(1) - (1)].node), 0));
					else
						(yyval.list) = NIL;
				;}
    break;

  case 39:
#line 539 "third_party/libpg_query/grammar/grammar.y"
    { (yyval.node) = NULL; ;}
    break;

  case 40:
#line 10 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_TABLE;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 41:
#line 19 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_TABLE;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 42:
#line 28 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_INDEX;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 43:
#line 37 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_INDEX;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 44:
#line 46 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_SEQUENCE;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 45:
#line 55 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_SEQUENCE;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 46:
#line 64 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_VIEW;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 47:
#line 73 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_VIEW;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 48:
#line 86 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 49:
#line 88 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 50:
#line 93 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = (yyvsp[(3) - (3)].node); ;}
    break;

  case 51:
#line 94 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = NULL; ;}
    break;

  case 52:
#line 100 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 53:
#line 104 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 54:
#line 108 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					if (strcmp((yyvsp[(2) - (2)].defelt)->defname, "as") == 0 ||
						strcmp((yyvsp[(2) - (2)].defelt)->defname, "restart") == 0 ||
						strcmp((yyvsp[(2) - (2)].defelt)->defname, "owned_by") == 0)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("sequence option \"%s\" not supported here", (yyvsp[(2) - (2)].defelt)->defname),
								 parser_errposition((yylsp[(2) - (2)]))));
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
				;}
    break;

  case 55:
#line 119 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("generated", (PGNode *) makeInteger((yyvsp[(3) - (3)].ival)), (yylsp[(1) - (3)]));
				;}
    break;

  case 56:
#line 127 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 57:
#line 131 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 58:
#line 140 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(2) - (2)].node);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 59:
#line 149 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(5) - (5)].node);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 60:
#line 158 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(3) - (3)].node);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 61:
#line 167 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(6) - (6)].node);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 62:
#line 176 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ColumnDefault;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (yyvsp[(4) - (4)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 63:
#line 185 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropNotNull;
					n->name = (yyvsp[(3) - (6)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 64:
#line 193 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetNotNull;
					n->name = (yyvsp[(3) - (6)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 65:
#line 201 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetStatistics;
					n->name = (yyvsp[(3) - (6)].str);
					n->def = (PGNode *) makeInteger((yyvsp[(6) - (6)].ival));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 66:
#line 210 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetOptions;
					n->name = (yyvsp[(3) - (5)].str);
					n->def = (PGNode *) (yyvsp[(5) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 67:
#line 219 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ResetOptions;
					n->name = (yyvsp[(3) - (5)].str);
					n->def = (PGNode *) (yyvsp[(5) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 68:
#line 228 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetStorage;
					n->name = (yyvsp[(3) - (6)].str);
					n->def = (PGNode *) makeString((yyvsp[(6) - (6)].str));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 69:
#line 237 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGConstraint *c = makeNode(PGConstraint);

					c->contype = PG_CONSTR_IDENTITY;
					c->generated_when = (yyvsp[(6) - (9)].ival);
					c->options = (yyvsp[(9) - (9)].list);
					c->location = (yylsp[(5) - (9)]);

					n->subtype = PG_AT_AddIdentity;
					n->name = (yyvsp[(3) - (9)].str);
					n->def = (PGNode *) c;

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 70:
#line 254 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetIdentity;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (PGNode *) (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 71:
#line 263 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = AT_DropIdentity;
					n->name = (yyvsp[(3) - (5)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 72:
#line 272 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = AT_DropIdentity;
					n->name = (yyvsp[(3) - (7)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 73:
#line 281 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropColumn;
					n->name = (yyvsp[(5) - (6)].str);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 74:
#line 291 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropColumn;
					n->name = (yyvsp[(3) - (4)].str);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 75:
#line 304 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGColumnDef *def = makeNode(PGColumnDef);
					n->subtype = PG_AT_AlterColumnType;
					n->name = (yyvsp[(3) - (9)].str);
					n->def = (PGNode *) def;
					n->behavior = (yyvsp[(9) - (9)].dbehavior);
					/* We only use these fields of the PGColumnDef node */
					def->typeName = (yyvsp[(6) - (9)].typnam);
					def->collClause = (PGCollateClause *) (yyvsp[(7) - (9)].node);
					def->raw_default = (yyvsp[(8) - (9)].node);
					def->location = (yylsp[(3) - (9)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 76:
#line 320 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AlterColumnGenericOptions;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (PGNode *) (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 77:
#line 329 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddConstraint;
					n->def = (yyvsp[(2) - (2)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 78:
#line 337 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGConstraint *c = makeNode(PGConstraint);
					n->subtype = PG_AT_AlterConstraint;
					n->def = (PGNode *) c;
					c->contype = PG_CONSTR_FOREIGN; /* others not supported, yet */
					c->conname = (yyvsp[(3) - (4)].str);
					processCASbits((yyvsp[(4) - (4)].ival), (yylsp[(4) - (4)]), "ALTER CONSTRAINT statement",
									&c->deferrable,
									&c->initdeferred,
									NULL, NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 79:
#line 352 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ValidateConstraint;
					n->name = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 80:
#line 360 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropConstraint;
					n->name = (yyvsp[(5) - (6)].str);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 81:
#line 370 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropConstraint;
					n->name = (yyvsp[(3) - (4)].str);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 82:
#line 380 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetLogged;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 83:
#line 387 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetUnLogged;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 84:
#line 394 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetRelOptions;
					n->def = (PGNode *)(yyvsp[(2) - (2)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 85:
#line 402 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ResetRelOptions;
					n->def = (PGNode *)(yyvsp[(2) - (2)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 86:
#line 409 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_GenericOptions;
					n->def = (PGNode *)(yyvsp[(1) - (1)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 87:
#line 419 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 88:
#line 420 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = NULL; ;}
    break;

  case 89:
#line 426 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(1) - (1)].defelt);
				;}
    break;

  case 90:
#line 430 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
					(yyval.defelt)->defaction = PG_DEFELEM_SET;
				;}
    break;

  case 91:
#line 435 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
					(yyval.defelt)->defaction = PG_DEFELEM_ADD;
				;}
    break;

  case 92:
#line 440 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElemExtended(NULL, (yyvsp[(2) - (2)].str), NULL, DEFELEM_DROP, (yylsp[(2) - (2)]));
				;}
    break;

  case 93:
#line 447 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 94:
#line 448 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 95:
#line 453 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 96:
#line 457 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 1; ;}
    break;

  case 97:
#line 458 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 0; ;}
    break;

  case 98:
#line 459 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 0; ;}
    break;

  case 99:
#line 8 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = (yyvsp[(2) - (2)].str);
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 100:
#line 14 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = (yyvsp[(3) - (3)].str);
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 101:
#line 20 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = NULL;
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 102:
#line 26 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = NULL;
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 103:
#line 8 "third_party/libpg_query/grammar/statements/create_enum.y"
    {
					PGCreateEnumStmt *n = makeNode(PGCreateEnumStmt);
					n->typeName = (yyvsp[(3) - (8)].list);
					n->vals = (yyvsp[(7) - (8)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 104:
#line 17 "third_party/libpg_query/grammar/statements/create_enum.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 105:
#line 18 "third_party/libpg_query/grammar/statements/create_enum.y"
    { (yyval.list) = NIL; ;}
    break;

  case 106:
#line 22 "third_party/libpg_query/grammar/statements/create_enum.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 107:
#line 24 "third_party/libpg_query/grammar/statements/create_enum.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 108:
#line 7 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SCHEMA;
					n->subname = (yyvsp[(3) - (6)].str);
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 109:
#line 16 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 110:
#line 26 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 111:
#line 36 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 112:
#line 46 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 113:
#line 56 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 114:
#line 66 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 115:
#line 76 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_INDEX;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 116:
#line 86 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_INDEX;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 117:
#line 96 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_COLUMN;
					n->relationType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (8)].range);
					n->subname = (yyvsp[(6) - (8)].str);
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 118:
#line 107 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_COLUMN;
					n->relationType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (10)].range);
					n->subname = (yyvsp[(8) - (10)].str);
					n->newname = (yyvsp[(10) - (10)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 119:
#line 118 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABCONSTRAINT;
					n->relation = (yyvsp[(3) - (8)].range);
					n->subname = (yyvsp[(6) - (8)].str);
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 120:
#line 128 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABCONSTRAINT;
					n->relation = (yyvsp[(5) - (10)].range);
					n->subname = (yyvsp[(8) - (10)].str);
					n->newname = (yyvsp[(10) - (10)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 121:
#line 140 "third_party/libpg_query/grammar/statements/rename.y"
    { (yyval.ival) = COLUMN; ;}
    break;

  case 122:
#line 141 "third_party/libpg_query/grammar/statements/rename.y"
    { (yyval.ival) = 0; ;}
    break;

  case 123:
#line 10 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(5) - (7)].istmt)->relation = (yyvsp[(4) - (7)].range);
					(yyvsp[(5) - (7)].istmt)->onConflictClause = (yyvsp[(6) - (7)].onconflict);
					(yyvsp[(5) - (7)].istmt)->returningList = (yyvsp[(7) - (7)].list);
					(yyvsp[(5) - (7)].istmt)->withClause = (yyvsp[(1) - (7)].with);
					(yyval.node) = (PGNode *) (yyvsp[(5) - (7)].istmt);
				;}
    break;

  case 124:
#line 22 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = (yyvsp[(1) - (1)].node);
				;}
    break;

  case 125:
#line 28 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->override = (yyvsp[(2) - (4)].override);
					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
				;}
    break;

  case 126:
#line 35 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = (yyvsp[(2) - (4)].list);
					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
				;}
    break;

  case 127:
#line 41 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = (yyvsp[(2) - (7)].list);
					(yyval.istmt)->override = (yyvsp[(5) - (7)].override);
					(yyval.istmt)->selectStmt = (yyvsp[(7) - (7)].node);
				;}
    break;

  case 128:
#line 48 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = NULL;
				;}
    break;

  case 129:
#line 58 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
				;}
    break;

  case 130:
#line 62 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(1) - (3)].range)->alias = makeAlias((yyvsp[(3) - (3)].str), NIL);
					(yyval.range) = (yyvsp[(1) - (3)].range);
				;}
    break;

  case 131:
#line 71 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = makeNode(PGInferClause);
					(yyval.infer)->indexElems = (yyvsp[(2) - (4)].list);
					(yyval.infer)->whereClause = (yyvsp[(4) - (4)].node);
					(yyval.infer)->conname = NULL;
					(yyval.infer)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 132:
#line 80 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = makeNode(PGInferClause);
					(yyval.infer)->indexElems = NIL;
					(yyval.infer)->whereClause = NULL;
					(yyval.infer)->conname = (yyvsp[(3) - (3)].str);
					(yyval.infer)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 133:
#line 88 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = NULL;
				;}
    break;

  case 134:
#line 95 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.with) = (yyvsp[(1) - (1)].with); ;}
    break;

  case 135:
#line 96 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.with) = NULL; ;}
    break;

  case 136:
#line 102 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(1) - (2)].str);
					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.target)->val = NULL;
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 137:
#line 114 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(1) - (3)].target)->val = (PGNode *) (yyvsp[(3) - (3)].node);
					(yyval.list) = list_make1((yyvsp[(1) - (3)].target));
				;}
    break;

  case 138:
#line 119 "third_party/libpg_query/grammar/statements/insert.y"
    {
					int ncolumns = list_length((yyvsp[(2) - (5)].list));
					int i = 1;
					PGListCell *col_cell;

					/* Create a PGMultiAssignRef source for each target */
					foreach(col_cell, (yyvsp[(2) - (5)].list))
					{
						PGResTarget *res_col = (PGResTarget *) lfirst(col_cell);
						PGMultiAssignRef *r = makeNode(PGMultiAssignRef);

						r->source = (PGNode *) (yyvsp[(5) - (5)].node);
						r->colno = i;
						r->ncolumns = ncolumns;
						res_col->val = (PGNode *) r;
						i++;
					}

					(yyval.list) = (yyvsp[(2) - (5)].list);
				;}
    break;

  case 139:
#line 144 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = makeNode(PGOnConflictClause);
					(yyval.onconflict)->action = PG_ONCONFLICT_UPDATE;
					(yyval.onconflict)->infer = (yyvsp[(3) - (8)].infer);
					(yyval.onconflict)->targetList = (yyvsp[(7) - (8)].list);
					(yyval.onconflict)->whereClause = (yyvsp[(8) - (8)].node);
					(yyval.onconflict)->location = (yylsp[(1) - (8)]);
				;}
    break;

  case 140:
#line 154 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = makeNode(PGOnConflictClause);
					(yyval.onconflict)->action = PG_ONCONFLICT_NOTHING;
					(yyval.onconflict)->infer = (yyvsp[(3) - (5)].infer);
					(yyval.onconflict)->targetList = NIL;
					(yyval.onconflict)->whereClause = NULL;
					(yyval.onconflict)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 141:
#line 163 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = NULL;
				;}
    break;

  case 142:
#line 170 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = (yyvsp[(1) - (5)].str);
					(yyval.ielem)->expr = NULL;
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(2) - (5)].list);
					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].nullorder);
				;}
    break;

  case 143:
#line 181 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[(1) - (5)].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(2) - (5)].list);
					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].nullorder);
				;}
    break;

  case 144:
#line 192 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[(2) - (7)].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(4) - (7)].list);
					(yyval.ielem)->opclass = (yyvsp[(5) - (7)].list);
					(yyval.ielem)->ordering = (yyvsp[(6) - (7)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(7) - (7)].nullorder);
				;}
    break;

  case 145:
#line 206 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 146:
#line 207 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 147:
#line 213 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.override) = PG_OVERRIDING_USER_VALUE; ;}
    break;

  case 148:
#line 214 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.override) = OVERRIDING_SYSTEM_VALUE; ;}
    break;

  case 149:
#line 219 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 150:
#line 220 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].target)); ;}
    break;

  case 151:
#line 226 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 152:
#line 227 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 153:
#line 231 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 154:
#line 232 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 155:
#line 238 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 156:
#line 240 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
    break;

  case 157:
#line 245 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 158:
#line 246 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_concat((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].list)); ;}
    break;

  case 159:
#line 250 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 160:
#line 251 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
    break;

  case 161:
#line 254 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].ielem)); ;}
    break;

  case 162:
#line 255 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].ielem)); ;}
    break;

  case 163:
#line 261 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(1) - (2)].str);
					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.target)->val = NULL;	/* upper production sets this */
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 164:
#line 8 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_NOTHING;
					n->name = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 165:
#line 15 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_ASSIGNMENT;
					n->name = (yyvsp[(2) - (4)].str);
					n->args = (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 166:
#line 23 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_CALL;
					n->name = (yyvsp[(2) - (5)].str);
					n->args = (yyvsp[(4) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 167:
#line 10 "third_party/libpg_query/grammar/statements/create_sequence.y"
    {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[(4) - (5)].range)->relpersistence = (yyvsp[(2) - (5)].ival);
					n->sequence = (yyvsp[(4) - (5)].range);
					n->options = (yyvsp[(5) - (5)].list);
					n->ownerId = InvalidOid;
					n->onconflict = PG_ERROR_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 168:
#line 20 "third_party/libpg_query/grammar/statements/create_sequence.y"
    {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[(7) - (8)].range)->relpersistence = (yyvsp[(2) - (8)].ival);
					n->sequence = (yyvsp[(7) - (8)].range);
					n->options = (yyvsp[(8) - (8)].list);
					n->ownerId = InvalidOid;
					n->onconflict = PG_IGNORE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 169:
#line 32 "third_party/libpg_query/grammar/statements/create_sequence.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 170:
#line 33 "third_party/libpg_query/grammar/statements/create_sequence.y"
    { (yyval.list) = NIL; ;}
    break;

  case 171:
#line 8 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(2) - (3)].str);
					n->params = (yyvsp[(3) - (3)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 172:
#line 16 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(7) - (9)].str);
					n->params = (yyvsp[(8) - (9)].list);
					ctas->query = (PGNode *) n;
					ctas->into = (yyvsp[(4) - (9)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_ERROR_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(4) - (9)].into)->rel->relpersistence = (yyvsp[(2) - (9)].ival);
					(yyvsp[(4) - (9)].into)->skipData = !((yyvsp[(9) - (9)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 173:
#line 33 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(10) - (12)].str);
					n->params = (yyvsp[(11) - (12)].list);
					ctas->query = (PGNode *) n;
					ctas->into = (yyvsp[(7) - (12)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_IGNORE_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(7) - (12)].into)->rel->relpersistence = (yyvsp[(2) - (12)].ival);
					(yyvsp[(7) - (12)].into)->skipData = !((yyvsp[(12) - (12)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 174:
#line 51 "third_party/libpg_query/grammar/statements/execute.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 175:
#line 52 "third_party/libpg_query/grammar/statements/execute.y"
    { (yyval.list) = NIL; ;}
    break;

  case 176:
#line 10 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
					n->sequence = (yyvsp[(3) - (4)].range);
					n->options = (yyvsp[(4) - (4)].list);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 177:
#line 18 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
					n->sequence = (yyvsp[(5) - (6)].range);
					n->options = (yyvsp[(6) - (6)].list);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 178:
#line 29 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 179:
#line 30 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 180:
#line 34 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 181:
#line 35 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 182:
#line 36 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 183:
#line 41 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeFloat((yyvsp[(1) - (1)].str)); ;}
    break;

  case 184:
#line 42 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeFloat((yyvsp[(2) - (2)].str)); ;}
    break;

  case 185:
#line 44 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.value) = makeFloat((yyvsp[(2) - (2)].str));
					doNegateFloat((yyval.value));
				;}
    break;

  case 186:
#line 48 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeInteger((yyvsp[(1) - (1)].ival)); ;}
    break;

  case 187:
#line 53 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("as", (PGNode *)(yyvsp[(2) - (2)].typnam), (yylsp[(1) - (2)]));
				;}
    break;

  case 188:
#line 57 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cache", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 189:
#line 61 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 190:
#line 65 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(false), (yylsp[(1) - (2)]));
				;}
    break;

  case 191:
#line 69 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("increment", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 192:
#line 73 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("maxvalue", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 193:
#line 77 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("minvalue", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 194:
#line 81 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("maxvalue", NULL, (yylsp[(1) - (2)]));
				;}
    break;

  case 195:
#line 85 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("minvalue", NULL, (yylsp[(1) - (2)]));
				;}
    break;

  case 196:
#line 89 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("owned_by", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 197:
#line 93 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					/* not documented, only used by pg_dump */
					(yyval.defelt) = makeDefElem("sequence_name", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 198:
#line 98 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("start", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 199:
#line 102 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 200:
#line 106 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 201:
#line 112 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 202:
#line 113 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 203:
#line 117 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 204:
#line 118 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = + (yyvsp[(2) - (2)].ival); ;}
    break;

  case 205:
#line 119 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = - (yyvsp[(2) - (2)].ival); ;}
    break;

  case 206:
#line 3 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 207:
#line 10 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_BEGIN;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 208:
#line 16 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_START;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 209:
#line 22 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 210:
#line 29 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 211:
#line 36 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 212:
#line 45 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 213:
#line 46 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 214:
#line 47 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 215:
#line 9 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(4) - (9)].range)->relpersistence = (yyvsp[(2) - (9)].ival);
					n->relation = (yyvsp[(4) - (9)].range);
					n->tableElts = (yyvsp[(6) - (9)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(8) - (9)].list);
					n->oncommit = (yyvsp[(9) - (9)].oncommit);
					n->onconflict = PG_ERROR_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 216:
#line 24 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(7) - (12)].range)->relpersistence = (yyvsp[(2) - (12)].ival);
					n->relation = (yyvsp[(7) - (12)].range);
					n->tableElts = (yyvsp[(9) - (12)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(11) - (12)].list);
					n->oncommit = (yyvsp[(12) - (12)].oncommit);
					n->onconflict = PG_IGNORE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 217:
#line 39 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(6) - (11)].range)->relpersistence = (yyvsp[(4) - (11)].ival);
					n->relation = (yyvsp[(6) - (11)].range);
					n->tableElts = (yyvsp[(8) - (11)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(10) - (11)].list);
					n->oncommit = (yyvsp[(11) - (11)].oncommit);
					n->onconflict = PG_REPLACE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 218:
#line 56 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = 0; ;}
    break;

  case 219:
#line 58 "third_party/libpg_query/grammar/statements/create.y"
    {
					/*
					 * We must complain about conflicting options.
					 * We could, but choose not to, complain about redundant
					 * options (ie, where $2's bit is already set in $1).
					 */
					int		newspec = (yyvsp[(1) - (2)].ival) | (yyvsp[(2) - (2)].ival);

					/* special message for this case */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED)) == (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("constraint declared INITIALLY DEFERRED must be DEFERRABLE"),
								 parser_errposition((yylsp[(2) - (2)]))));
					/* generic message for other conflicts */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE)) == (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE) ||
						(newspec & (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED)) == (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("conflicting constraint properties"),
								 parser_errposition((yylsp[(2) - (2)]))));
					(yyval.ival) = newspec;
				;}
    break;

  case 220:
#line 84 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].typnam); ;}
    break;

  case 221:
#line 85 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
    break;

  case 222:
#line 86 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].list); ;}
    break;

  case 223:
#line 87 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].value); ;}
    break;

  case 224:
#line 88 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 225:
#line 89 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
    break;

  case 226:
#line 93 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 227:
#line 94 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 228:
#line 99 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 229:
#line 104 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_NOACTION; ;}
    break;

  case 230:
#line 105 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_RESTRICT; ;}
    break;

  case 231:
#line 106 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_CASCADE; ;}
    break;

  case 232:
#line 107 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_SETNULL; ;}
    break;

  case 233:
#line 108 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_SETDEFAULT; ;}
    break;

  case 234:
#line 114 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = castNode(PGConstraint, (yyvsp[(3) - (3)].node));
					n->conname = (yyvsp[(2) - (3)].str);
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 235:
#line 120 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 236:
#line 121 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 237:
#line 123 "third_party/libpg_query/grammar/statements/create.y"
    {
					/*
					 * Note: the PGCollateClause is momentarily included in
					 * the list built by ColQualList, but we split it out
					 * again in SplitColQualList.
					 */
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[(2) - (2)].list);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 238:
#line 140 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_NOTNULL;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 239:
#line 147 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_NULL;
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 240:
#line 154 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (2)]);
					n->keys = NULL;
					n->options = (yyvsp[(2) - (2)].list);
					n->indexname = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 241:
#line 164 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (3)]);
					n->keys = NULL;
					n->options = (yyvsp[(3) - (3)].list);
					n->indexname = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 242:
#line 174 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_CHECK;
					n->location = (yylsp[(1) - (5)]);
					n->is_no_inherit = (yyvsp[(5) - (5)].boolean);
					n->raw_expr = (yyvsp[(3) - (5)].node);
					n->cooked_expr = NULL;
					n->skip_validation = false;
					n->initially_valid = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 243:
#line 186 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_COMPRESSION;
					n->location = (yylsp[(1) - (3)]);
					n->compression_name = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 244:
#line 194 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_DEFAULT;
					n->location = (yylsp[(1) - (2)]);
					n->raw_expr = (yyvsp[(2) - (2)].node);
					n->cooked_expr = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 245:
#line 203 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_IDENTITY;
					n->generated_when = (yyvsp[(2) - (5)].ival);
					n->options = (yyvsp[(5) - (5)].list);
					n->location = (yylsp[(1) - (5)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 246:
#line 212 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_GENERATED;
					n->generated_when = (yyvsp[(2) - (7)].ival);
					n->raw_expr = (yyvsp[(5) - (7)].node);
					n->cooked_expr = NULL;
					n->location = (yylsp[(1) - (7)]);

					/*
					 * Can't do this in the grammar because of shift/reduce
					 * conflicts.  (IDENTITY allows both ALWAYS and BY
					 * DEFAULT, but generated columns only allow ALWAYS.)  We
					 * can also give a more useful error message and location.
					 */
					if ((yyvsp[(2) - (7)].ival) != PG_ATTRIBUTE_IDENTITY_ALWAYS)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("for a generated column, GENERATED ALWAYS must be specified"),
								 parser_errposition((yylsp[(2) - (7)]))));

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 247:
#line 235 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_FOREIGN;
					n->location = (yylsp[(1) - (5)]);
					n->pktable			= (yyvsp[(2) - (5)].range);
					n->fk_attrs			= NIL;
					n->pk_attrs			= (yyvsp[(3) - (5)].list);
					n->fk_matchtype		= (yyvsp[(4) - (5)].ival);
					n->fk_upd_action	= (char) ((yyvsp[(5) - (5)].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[(5) - (5)].ival) & 0xFF);
					n->skip_validation  = false;
					n->initially_valid  = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 248:
#line 254 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 249:
#line 260 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
    break;

  case 250:
#line 266 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(1) - (1)].ival) << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); ;}
    break;

  case 251:
#line 268 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | ((yyvsp[(1) - (1)].ival) & 0xFF); ;}
    break;

  case 252:
#line 270 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(1) - (2)].ival) << 8) | ((yyvsp[(2) - (2)].ival) & 0xFF); ;}
    break;

  case 253:
#line 272 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(2) - (2)].ival) << 8) | ((yyvsp[(1) - (2)].ival) & 0xFF); ;}
    break;

  case 254:
#line 274 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); ;}
    break;

  case 255:
#line 279 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 256:
#line 280 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 257:
#line 284 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = ONCOMMIT_DROP; ;}
    break;

  case 258:
#line 285 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_DELETE_ROWS; ;}
    break;

  case 259:
#line 286 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_PRESERVE_ROWS; ;}
    break;

  case 260:
#line 287 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_NOOP; ;}
    break;

  case 261:
#line 292 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 262:
#line 296 "third_party/libpg_query/grammar/statements/create.y"
    {  (yyval.boolean) = true; ;}
    break;

  case 263:
#line 297 "third_party/libpg_query/grammar/statements/create.y"
    {  (yyval.boolean) = false; ;}
    break;

  case 264:
#line 303 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = castNode(PGConstraint, (yyvsp[(3) - (3)].node));
					n->conname = (yyvsp[(2) - (3)].str);
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 265:
#line 309 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 266:
#line 314 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_COMMENTS; ;}
    break;

  case 267:
#line 315 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_CONSTRAINTS; ;}
    break;

  case 268:
#line 316 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_DEFAULTS; ;}
    break;

  case 269:
#line 317 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_IDENTITY; ;}
    break;

  case 270:
#line 318 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_INDEXES; ;}
    break;

  case 271:
#line 319 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_STATISTICS; ;}
    break;

  case 272:
#line 320 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_STORAGE; ;}
    break;

  case 273:
#line 321 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_ALL; ;}
    break;

  case 274:
#line 327 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 275:
#line 328 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
    break;

  case 276:
#line 332 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(3) - (3)].str); ;}
    break;

  case 277:
#line 338 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_DEFERRABLE;
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 278:
#line 345 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_NOT_DEFERRABLE;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 279:
#line 352 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_DEFERRED;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 280:
#line 359 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_IMMEDIATE;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 281:
#line 370 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 282:
#line 371 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(true), (yylsp[(1) - (2)]))); ;}
    break;

  case 283:
#line 372 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(false), (yylsp[(1) - (2)]))); ;}
    break;

  case 284:
#line 373 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 285:
#line 377 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 286:
#line 382 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
    break;

  case 287:
#line 383 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) & ~(yyvsp[(3) - (3)].ival); ;}
    break;

  case 288:
#line 384 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = 0; ;}
    break;

  case 289:
#line 389 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 290:
#line 394 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NOT_DEFERRABLE; ;}
    break;

  case 291:
#line 395 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_DEFERRABLE; ;}
    break;

  case 292:
#line 396 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_INITIALLY_IMMEDIATE; ;}
    break;

  case 293:
#line 397 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_INITIALLY_DEFERRED; ;}
    break;

  case 294:
#line 398 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NOT_VALID; ;}
    break;

  case 295:
#line 399 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NO_INHERIT; ;}
    break;

  case 296:
#line 405 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->colname = (yyvsp[(1) - (4)].str);
					n->typeName = (yyvsp[(2) - (4)].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collOid = InvalidOid;
					n->fdwoptions = (yyvsp[(3) - (4)].list);
					SplitColQualList((yyvsp[(4) - (4)].list), &n->constraints, &n->collClause,
									 yyscanner);
					n->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 297:
#line 428 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 298:
#line 432 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 299:
#line 438 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 300:
#line 439 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
    break;

  case 301:
#line 443 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 302:
#line 447 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 303:
#line 448 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 304:
#line 449 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 305:
#line 454 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (PGNode *) (yyvsp[(3) - (3)].node), (yylsp[(1) - (3)]));
				;}
    break;

  case 306:
#line 458 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 307:
#line 465 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 308:
#line 466 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 309:
#line 471 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 310:
#line 472 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
    break;

  case 311:
#line 473 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 312:
#line 478 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str));
				;}
    break;

  case 313:
#line 485 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 314:
#line 486 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 315:
#line 491 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 316:
#line 492 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 317:
#line 496 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
    break;

  case 318:
#line 502 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (PGNode *) (yyvsp[(3) - (3)].node), (yylsp[(1) - (3)]));
				;}
    break;

  case 319:
#line 506 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 320:
#line 510 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (5)].str), (yyvsp[(3) - (5)].str), (PGNode *) (yyvsp[(5) - (5)].node),
											 PG_DEFELEM_UNSPEC, (yylsp[(1) - (5)]));
				;}
    break;

  case 321:
#line 515 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str), NULL, PG_DEFELEM_UNSPEC, (yylsp[(1) - (3)]));
				;}
    break;

  case 322:
#line 522 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 323:
#line 523 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 324:
#line 527 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 325:
#line 528 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
    break;

  case 326:
#line 532 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 327:
#line 534 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(1) - (4)].str)), (yyvsp[(2) - (4)].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 328:
#line 540 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(2) - (5)].str)), (yyvsp[(3) - (5)].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->setof = true;
					(yyval.typnam)->location = (yylsp[(2) - (5)]);
				;}
    break;

  case 329:
#line 551 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_CHECK;
					n->location = (yylsp[(1) - (5)]);
					n->raw_expr = (yyvsp[(3) - (5)].node);
					n->cooked_expr = NULL;
					processCASbits((yyvsp[(5) - (5)].ival), (yylsp[(5) - (5)]), "CHECK",
								   NULL, NULL, &n->skip_validation,
								   &n->is_no_inherit, yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 330:
#line 565 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (6)]);
					n->keys = (yyvsp[(3) - (6)].list);
					n->options = (yyvsp[(5) - (6)].list);
					n->indexname = NULL;
					processCASbits((yyvsp[(6) - (6)].ival), (yylsp[(6) - (6)]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 331:
#line 578 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (3)]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[(2) - (3)].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[(3) - (3)].ival), (yylsp[(3) - (3)]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 332:
#line 593 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (7)]);
					n->keys = (yyvsp[(4) - (7)].list);
					n->options = (yyvsp[(6) - (7)].list);
					n->indexname = NULL;
					processCASbits((yyvsp[(7) - (7)].ival), (yylsp[(7) - (7)]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 333:
#line 606 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (4)]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[(3) - (4)].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[(4) - (4)].ival), (yylsp[(4) - (4)]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 334:
#line 621 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_FOREIGN;
					n->location = (yylsp[(1) - (11)]);
					n->pktable			= (yyvsp[(7) - (11)].range);
					n->fk_attrs			= (yyvsp[(4) - (11)].list);
					n->pk_attrs			= (yyvsp[(8) - (11)].list);
					n->fk_matchtype		= (yyvsp[(9) - (11)].ival);
					n->fk_upd_action	= (char) ((yyvsp[(10) - (11)].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[(10) - (11)].ival) & 0xFF);
					processCASbits((yyvsp[(11) - (11)].ival), (yylsp[(11) - (11)]), "FOREIGN KEY",
								   &n->deferrable, &n->initdeferred,
								   &n->skip_validation, NULL,
								   yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 335:
#line 643 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 336:
#line 647 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 337:
#line 654 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_FULL;
			;}
    break;

  case 338:
#line 658 "third_party/libpg_query/grammar/statements/create.y"
    {
				ereport(ERROR,
						(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
						 errmsg("MATCH PARTIAL not yet implemented"),
						 parser_errposition((yylsp[(1) - (2)]))));
				(yyval.ival) = PG_FKCONSTR_MATCH_PARTIAL;
			;}
    break;

  case 339:
#line 666 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
			;}
    break;

  case 340:
#line 670 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
			;}
    break;

  case 341:
#line 678 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGTableLikeClause *n = makeNode(PGTableLikeClause);
					n->relation = (yyvsp[(2) - (3)].range);
					n->options = (yyvsp[(3) - (3)].ival);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 342:
#line 687 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 343:
#line 688 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 344:
#line 689 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 345:
#line 690 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 346:
#line 692 "third_party/libpg_query/grammar/statements/create.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 347:
#line 699 "third_party/libpg_query/grammar/statements/create.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 348:
#line 705 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_UNLOGGED; ;}
    break;

  case 349:
#line 706 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = RELPERSISTENCE_PERMANENT; ;}
    break;

  case 350:
#line 711 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_ATTRIBUTE_IDENTITY_ALWAYS; ;}
    break;

  case 351:
#line 712 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ATTRIBUTE_IDENTITY_BY_DEFAULT; ;}
    break;

  case 352:
#line 10 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 353:
#line 20 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (4)].objtype);
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 354:
#line 30 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 355:
#line 40 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (4)].objtype);
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 356:
#line 50 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->objects = list_make1(lappend((yyvsp[(5) - (6)].list), makeString((yyvsp[(3) - (6)].str))));
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = false;
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 357:
#line 60 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (8)].objtype);
					n->objects = list_make1(lappend((yyvsp[(7) - (8)].list), makeString((yyvsp[(5) - (8)].str))));
					n->behavior = (yyvsp[(8) - (8)].dbehavior);
					n->missing_ok = true;
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 358:
#line 70 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = PG_OBJECT_TYPE;
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 359:
#line 80 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = PG_OBJECT_TYPE;
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 360:
#line 93 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TABLE; ;}
    break;

  case 361:
#line 94 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_SEQUENCE; ;}
    break;

  case 362:
#line 95 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FUNCTION; ;}
    break;

  case 363:
#line 96 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FUNCTION; ;}
    break;

  case 364:
#line 97 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TABLE_MACRO; ;}
    break;

  case 365:
#line 98 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_VIEW; ;}
    break;

  case 366:
#line 99 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_MATVIEW; ;}
    break;

  case 367:
#line 100 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_INDEX; ;}
    break;

  case 368:
#line 101 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FOREIGN_TABLE; ;}
    break;

  case 369:
#line 102 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_COLLATION; ;}
    break;

  case 370:
#line 103 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_CONVERSION; ;}
    break;

  case 371:
#line 104 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_STATISTIC_EXT; ;}
    break;

  case 372:
#line 105 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSPARSER; ;}
    break;

  case 373:
#line 106 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSDICTIONARY; ;}
    break;

  case 374:
#line 107 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSTEMPLATE; ;}
    break;

  case 375:
#line 108 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSCONFIGURATION; ;}
    break;

  case 376:
#line 113 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_ACCESS_METHOD; ;}
    break;

  case 377:
#line 114 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_EVENT_TRIGGER; ;}
    break;

  case 378:
#line 115 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_EXTENSION; ;}
    break;

  case 379:
#line 116 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FDW; ;}
    break;

  case 380:
#line 117 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_PUBLICATION; ;}
    break;

  case 381:
#line 118 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_SCHEMA; ;}
    break;

  case 382:
#line 119 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FOREIGN_SERVER; ;}
    break;

  case 383:
#line 124 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 384:
#line 125 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 385:
#line 130 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_CASCADE; ;}
    break;

  case 386:
#line 131 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_RESTRICT; ;}
    break;

  case 387:
#line 132 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_RESTRICT; /* default */ ;}
    break;

  case 388:
#line 137 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_POLICY; ;}
    break;

  case 389:
#line 138 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_RULE; ;}
    break;

  case 390:
#line 139 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TRIGGER; ;}
    break;

  case 391:
#line 142 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].typnam)); ;}
    break;

  case 392:
#line 143 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].typnam)); ;}
    break;

  case 393:
#line 9 "third_party/libpg_query/grammar/statements/create_function.y"
    {
				PGCreateFunctionStmt *n = makeNode(PGCreateFunctionStmt);
				n->relpersistence=(yyvsp[(2) - (8)].ival);
				n->name = (yyvsp[(4) - (8)].range);
				n->params = (yyvsp[(5) - (8)].list);
				n->function = NULL;
				n->query = (yyvsp[(8) - (8)].node);
				(yyval.node) = (PGNode *)n;
				
			;}
    break;

  case 394:
#line 21 "third_party/libpg_query/grammar/statements/create_function.y"
    {
				PGCreateFunctionStmt *n = makeNode(PGCreateFunctionStmt);
				n->relpersistence=(yyvsp[(2) - (7)].ival);
				n->name = (yyvsp[(4) - (7)].range);
				n->params = (yyvsp[(5) - (7)].list);
				n->function = (yyvsp[(7) - (7)].node);
				n->query = NULL;
				(yyval.node) = (PGNode *)n;
                         ;}
    break;

  case 397:
#line 42 "third_party/libpg_query/grammar/statements/create_function.y"
    {
				(yyval.list) = NIL;
			;}
    break;

  case 398:
#line 46 "third_party/libpg_query/grammar/statements/create_function.y"
    {
				(yyval.list) = (yyvsp[(2) - (3)].list);
			;}
    break;

  case 399:
#line 12 "third_party/libpg_query/grammar/statements/update.y"
    {
					PGUpdateStmt *n = makeNode(PGUpdateStmt);
					n->relation = (yyvsp[(3) - (8)].range);
					n->targetList = (yyvsp[(5) - (8)].list);
					n->fromClause = (yyvsp[(6) - (8)].list);
					n->whereClause = (yyvsp[(7) - (8)].node);
					n->returningList = (yyvsp[(8) - (8)].list);
					n->withClause = (yyvsp[(1) - (8)].with);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 400:
#line 3 "third_party/libpg_query/grammar/statements/copy.y"
    {
					PGCopyStmt *n = makeNode(PGCopyStmt);
					n->relation = (yyvsp[(3) - (11)].range);
					n->query = NULL;
					n->attlist = (yyvsp[(4) - (11)].list);
					n->is_from = (yyvsp[(6) - (11)].boolean);
					n->is_program = (yyvsp[(7) - (11)].boolean);
					n->filename = (yyvsp[(8) - (11)].str);

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[(8) - (11)]))));

					n->options = NIL;
					/* Concatenate user-supplied flags */
					if ((yyvsp[(2) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(2) - (11)].defelt));
					if ((yyvsp[(5) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(5) - (11)].defelt));
					if ((yyvsp[(9) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(9) - (11)].defelt));
					if ((yyvsp[(11) - (11)].list))
						n->options = list_concat(n->options, (yyvsp[(11) - (11)].list));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 401:
#line 31 "third_party/libpg_query/grammar/statements/copy.y"
    {
					PGCopyStmt *n = makeNode(PGCopyStmt);
					n->relation = NULL;
					n->query = (yyvsp[(3) - (9)].node);
					n->attlist = NIL;
					n->is_from = false;
					n->is_program = (yyvsp[(6) - (9)].boolean);
					n->filename = (yyvsp[(7) - (9)].str);
					n->options = (yyvsp[(9) - (9)].list);

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[(5) - (9)]))));

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 402:
#line 53 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = true; ;}
    break;

  case 403:
#line 54 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = false; ;}
    break;

  case 404:
#line 60 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(2) - (3)]));
				;}
    break;

  case 405:
#line 63 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 406:
#line 69 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 407:
#line 73 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 408:
#line 80 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 409:
#line 81 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 410:
#line 85 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 411:
#line 86 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 412:
#line 91 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = true; ;}
    break;

  case 413:
#line 92 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = false; ;}
    break;

  case 414:
#line 96 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 415:
#line 97 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 416:
#line 102 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 417:
#line 103 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].value); ;}
    break;

  case 418:
#line 104 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeNode(PGAStar); ;}
    break;

  case 419:
#line 105 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) (yyvsp[(2) - (3)].list); ;}
    break;

  case 420:
#line 106 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = NULL; ;}
    break;

  case 421:
#line 112 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 422:
#line 120 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[(1) - (2)]));
				;}
    break;

  case 423:
#line 123 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 424:
#line 128 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 425:
#line 129 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = NIL; ;}
    break;

  case 426:
#line 135 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[(1) - (1)]));
				;}
    break;

  case 427:
#line 138 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 428:
#line 144 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[(1) - (1)]));
				;}
    break;

  case 429:
#line 148 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 430:
#line 152 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("freeze", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 431:
#line 156 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 432:
#line 160 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("null", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 433:
#line 164 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("csv"), (yylsp[(1) - (1)]));
				;}
    break;

  case 434:
#line 168 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("header", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 435:
#line 172 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("quote", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 436:
#line 176 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("escape", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 437:
#line 180 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 438:
#line 184 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)makeNode(PGAStar), (yylsp[(1) - (3)]));
				;}
    break;

  case 439:
#line 188 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_not_null", (PGNode *)(yyvsp[(4) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 440:
#line 192 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_null", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 441:
#line 196 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("encoding", (PGNode *)makeString((yyvsp[(2) - (2)].str)), (yylsp[(1) - (2)]));
				;}
    break;

  case 442:
#line 203 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 443:
#line 209 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 444:
#line 210 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = NULL; ;}
    break;

  case 445:
#line 211 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = NULL; ;}
    break;

  case 446:
#line 217 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 447:
#line 221 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 450:
#line 52 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 451:
#line 53 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 452:
#line 68 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 453:
#line 70 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list), NIL,
										NULL, NULL, NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (2)].node);
				;}
    break;

  case 454:
#line 77 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(3) - (4)].list),
										(PGNode*) list_nth((yyvsp[(4) - (4)].list), 0), (PGNode*) list_nth((yyvsp[(4) - (4)].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (4)].node);
				;}
    break;

  case 455:
#line 85 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(4) - (4)].list),
										(PGNode*) list_nth((yyvsp[(3) - (4)].list), 0), (PGNode*) list_nth((yyvsp[(3) - (4)].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (4)].node);
				;}
    break;

  case 456:
#line 93 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (2)].node), NULL, NIL,
										NULL, NULL,
										(yyvsp[(1) - (2)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (2)].node);
				;}
    break;

  case 457:
#line 101 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].list), NIL,
										NULL, NULL,
										(yyvsp[(1) - (3)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (3)].node);
				;}
    break;

  case 458:
#line 109 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(4) - (5)].list),
										(PGNode*) list_nth((yyvsp[(5) - (5)].list), 0), (PGNode*) list_nth((yyvsp[(5) - (5)].list), 1),
										(yyvsp[(1) - (5)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (5)].node);
				;}
    break;

  case 459:
#line 117 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(5) - (5)].list),
										(PGNode*) list_nth((yyvsp[(4) - (5)].list), 0), (PGNode*) list_nth((yyvsp[(4) - (5)].list), 1),
										(yyvsp[(1) - (5)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (5)].node);
				;}
    break;

  case 460:
#line 127 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 461:
#line 128 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 462:
#line 158 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->targetList = (yyvsp[(3) - (11)].list);
					n->intoClause = (yyvsp[(4) - (11)].into);
					n->fromClause = (yyvsp[(5) - (11)].list);
					n->whereClause = (yyvsp[(6) - (11)].node);
					n->groupClause = (yyvsp[(7) - (11)].list);
					n->havingClause = (yyvsp[(8) - (11)].node);
					n->windowClause = (yyvsp[(9) - (11)].list);
					n->qualifyClause = (yyvsp[(10) - (11)].node);
					n->sampleOptions = (yyvsp[(11) - (11)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 463:
#line 174 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->distinctClause = (yyvsp[(2) - (11)].list);
					n->targetList = (yyvsp[(3) - (11)].list);
					n->intoClause = (yyvsp[(4) - (11)].into);
					n->fromClause = (yyvsp[(5) - (11)].list);
					n->whereClause = (yyvsp[(6) - (11)].node);
					n->groupClause = (yyvsp[(7) - (11)].list);
					n->havingClause = (yyvsp[(8) - (11)].node);
					n->windowClause = (yyvsp[(9) - (11)].list);
					n->qualifyClause = (yyvsp[(10) - (11)].node);
					n->sampleOptions = (yyvsp[(11) - (11)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 464:
#line 188 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 465:
#line 190 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* same as SELECT * FROM relation_expr */
					PGColumnRef *cr = makeNode(PGColumnRef);
					PGResTarget *rt = makeNode(PGResTarget);
					PGSelectStmt *n = makeNode(PGSelectStmt);

					cr->fields = list_make1(makeNode(PGAStar));
					cr->location = -1;

					rt->name = NULL;
					rt->indirection = NIL;
					rt->val = (PGNode *)cr;
					rt->location = -1;

					n->targetList = list_make1(rt);
					n->fromClause = list_make1((yyvsp[(2) - (2)].range));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 466:
#line 209 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_UNION, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 467:
#line 213 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_INTERSECT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 468:
#line 217 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_EXCEPT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 469:
#line 234 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[(1) - (2)]);
			;}
    break;

  case 470:
#line 241 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[(1) - (2)]);
			;}
    break;

  case 471:
#line 248 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(3) - (3)].list);
				(yyval.with)->recursive = true;
				(yyval.with)->location = (yylsp[(1) - (3)]);
			;}
    break;

  case 472:
#line 257 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 473:
#line 258 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 474:
#line 262 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGCommonTableExpr *n = makeNode(PGCommonTableExpr);
				n->ctename = (yyvsp[(1) - (6)].str);
				n->aliascolnames = (yyvsp[(2) - (6)].list);
				n->ctequery = (yyvsp[(5) - (6)].node);
				n->location = (yylsp[(1) - (6)]);
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 475:
#line 274 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.into) = makeNode(PGIntoClause);
					(yyval.into)->rel = (yyvsp[(2) - (2)].range);
					(yyval.into)->colNames = NIL;
					(yyval.into)->options = NIL;
					(yyval.into)->onCommit = PG_ONCOMMIT_NOOP;
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;
				;}
    break;

  case 476:
#line 284 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.into) = NULL; ;}
    break;

  case 477:
#line 293 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 478:
#line 298 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 479:
#line 303 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 480:
#line 308 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 481:
#line 313 "third_party/libpg_query/grammar/statements/select.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (4)]))));
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 482:
#line 321 "third_party/libpg_query/grammar/statements/select.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (4)]))));
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 483:
#line 329 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_UNLOGGED;
				;}
    break;

  case 484:
#line 334 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(2) - (2)].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				;}
    break;

  case 485:
#line 339 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				;}
    break;

  case 486:
#line 345 "third_party/libpg_query/grammar/statements/select.y"
    {;}
    break;

  case 487:
#line 346 "third_party/libpg_query/grammar/statements/select.y"
    {;}
    break;

  case 488:
#line 350 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 489:
#line 351 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 490:
#line 352 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 491:
#line 359 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(NIL); ;}
    break;

  case 492:
#line 360 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
    break;

  case 493:
#line 364 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL;;}
    break;

  case 494:
#line 365 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 495:
#line 369 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true;;}
    break;

  case 496:
#line 370 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false;;}
    break;

  case 497:
#line 371 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 498:
#line 375 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list);;}
    break;

  case 499:
#line 376 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 500:
#line 380 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 501:
#line 382 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSortBy *sort = makeNode(PGSortBy);
					sort->node = (PGNode *) makeNode(PGAStar);
					sort->sortby_dir = (yyvsp[(4) - (5)].sortorder);
					sort->sortby_nulls = (yyvsp[(5) - (5)].nullorder);
					sort->useOp = NIL;
					sort->location = -1;		/* no operator */
					(yyval.list) = list_make1(sort);
				;}
    break;

  case 502:
#line 392 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSortBy *sort = makeNode(PGSortBy);
					sort->node = (PGNode *) makeNode(PGAStar);
					sort->sortby_dir = (yyvsp[(4) - (5)].sortorder);
					sort->sortby_nulls = (yyvsp[(5) - (5)].nullorder);
					sort->useOp = NIL;
					sort->location = -1;		/* no operator */
					(yyval.list) = list_make1(sort);
				;}
    break;

  case 503:
#line 404 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].sortby)); ;}
    break;

  case 504:
#line 405 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].sortby)); ;}
    break;

  case 505:
#line 409 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.sortby) = makeNode(PGSortBy);
					(yyval.sortby)->node = (yyvsp[(1) - (4)].node);
					(yyval.sortby)->sortby_dir = SORTBY_USING;
					(yyval.sortby)->sortby_nulls = (yyvsp[(4) - (4)].nullorder);
					(yyval.sortby)->useOp = (yyvsp[(3) - (4)].list);
					(yyval.sortby)->location = (yylsp[(3) - (4)]);
				;}
    break;

  case 506:
#line 418 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.sortby) = makeNode(PGSortBy);
					(yyval.sortby)->node = (yyvsp[(1) - (3)].node);
					(yyval.sortby)->sortby_dir = (yyvsp[(2) - (3)].sortorder);
					(yyval.sortby)->sortby_nulls = (yyvsp[(3) - (3)].nullorder);
					(yyval.sortby)->useOp = NIL;
					(yyval.sortby)->location = -1;		/* no operator */
				;}
    break;

  case 507:
#line 428 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_ASC; ;}
    break;

  case 508:
#line 429 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_DESC; ;}
    break;

  case 509:
#line 430 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_DEFAULT; ;}
    break;

  case 510:
#line 433 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_FIRST; ;}
    break;

  case 511:
#line 434 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_LAST; ;}
    break;

  case 512:
#line 435 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_DEFAULT; ;}
    break;

  case 513:
#line 439 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(2) - (2)].node), (yyvsp[(1) - (2)].node)); ;}
    break;

  case 514:
#line 440 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 515:
#line 441 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2(NULL, (yyvsp[(1) - (1)].node)); ;}
    break;

  case 516:
#line 442 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (1)].node), NULL); ;}
    break;

  case 517:
#line 446 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 518:
#line 447 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2(NULL,NULL); ;}
    break;

  case 519:
#line 452 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 520:
#line 454 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* Disabled because it was too confusing, bjm 2002-02-18 */
					ereport(ERROR,
							(errcode(PG_ERRCODE_SYNTAX_ERROR),
							 errmsg("LIMIT #,# syntax is not supported"),
							 errhint("Use separate LIMIT and OFFSET clauses."),
							 parser_errposition((yylsp[(1) - (4)]))));
				;}
    break;

  case 521:
#line 470 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(3) - (5)].node); ;}
    break;

  case 522:
#line 472 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeIntConst(1, -1); ;}
    break;

  case 523:
#line 477 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 524:
#line 480 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 525:
#line 488 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeFloat((yyvsp[(1) - (2)].str)), true);
		;}
    break;

  case 526:
#line 492 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), true);
		;}
    break;

  case 527:
#line 496 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeFloat((yyvsp[(1) - (2)].str)), true);
		;}
    break;

  case 528:
#line 500 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), true);
		;}
    break;

  case 529:
#line 504 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (1)].ival)), false);
		;}
    break;

  case 530:
#line 508 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), false);
		;}
    break;

  case 531:
#line 515 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(3) - (3)].node);
				;}
    break;

  case 532:
#line 519 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 533:
#line 526 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 534:
#line 527 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = NULL; ;}
    break;

  case 535:
#line 532 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSampleOptions((yyvsp[(3) - (5)].node), (yyvsp[(1) - (5)].str), (yyvsp[(5) - (5)].ival), (yylsp[(1) - (5)]));
				;}
    break;

  case 536:
#line 536 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (1)].node), NULL, -1, (yylsp[(1) - (1)]));
		;}
    break;

  case 537:
#line 540 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (4)].node), (yyvsp[(3) - (4)].str), -1, (yylsp[(1) - (4)]));
		;}
    break;

  case 538:
#line 544 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (6)].node), (yyvsp[(3) - (6)].str), (yyvsp[(5) - (6)].ival), (yylsp[(1) - (6)]));
		;}
    break;

  case 539:
#line 551 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(2) - (2)].node);
				;}
    break;

  case 540:
#line 557 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 541:
#line 558 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 542:
#line 563 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = (yyvsp[(3) - (4)].ival); ;}
    break;

  case 543:
#line 564 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = -1; ;}
    break;

  case 544:
#line 568 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 545:
#line 570 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* LIMIT ALL is represented as a NULL constant */
					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
				;}
    break;

  case 546:
#line 575 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeLimitPercent((yyvsp[(1) - (2)].node)); ;}
    break;

  case 547:
#line 577 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeLimitPercent(makeFloatConst((yyvsp[(1) - (2)].str),(yylsp[(1) - (2)]))); ;}
    break;

  case 548:
#line 579 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeLimitPercent(makeIntConst((yyvsp[(1) - (2)].ival),(yylsp[(1) - (2)]))); ;}
    break;

  case 549:
#line 583 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 550:
#line 603 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 551:
#line 605 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 552:
#line 607 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 553:
#line 611 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival),(yylsp[(1) - (1)])); ;}
    break;

  case 554:
#line 612 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str),(yylsp[(1) - (1)])); ;}
    break;

  case 555:
#line 616 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 556:
#line 617 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 557:
#line 620 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 558:
#line 621 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 559:
#line 646 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 560:
#line 648 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNode *node = (PGNode *) makeGroupingSet(GROUPING_SET_ALL, NIL, (yylsp[(3) - (3)]));
					(yyval.list) = list_make1(node);
				;}
    break;

  case 561:
#line 653 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNode *node = (PGNode *) makeGroupingSet(GROUPING_SET_ALL, NIL, (yylsp[(3) - (3)]));
					(yyval.list) = list_make1(node);
				;}
    break;

  case 562:
#line 657 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 563:
#line 661 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 564:
#line 662 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].node)); ;}
    break;

  case 565:
#line 666 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 566:
#line 667 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
    break;

  case 567:
#line 671 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 568:
#line 672 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 569:
#line 673 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 570:
#line 674 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 571:
#line 675 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 572:
#line 680 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_EMPTY, NIL, (yylsp[(1) - (2)]));
				;}
    break;

  case 573:
#line 693 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_ROLLUP, (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 574:
#line 700 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_CUBE, (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 575:
#line 707 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_SETS, (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 576:
#line 713 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 577:
#line 714 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 578:
#line 718 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 579:
#line 719 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 580:
#line 723 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 581:
#line 724 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 582:
#line 728 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 583:
#line 729 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 584:
#line 733 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 585:
#line 734 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 586:
#line 738 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 587:
#line 739 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 588:
#line 744 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGLockingClause *n = makeNode(PGLockingClause);
					n->lockedRels = (yyvsp[(2) - (3)].list);
					n->strength = (yyvsp[(1) - (3)].lockstrength);
					n->waitPolicy = (yyvsp[(3) - (3)].lockwaitpolicy);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 589:
#line 754 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = LCS_FORUPDATE; ;}
    break;

  case 590:
#line 755 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORNOKEYUPDATE; ;}
    break;

  case 591:
#line 756 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORSHARE; ;}
    break;

  case 592:
#line 757 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORKEYSHARE; ;}
    break;

  case 593:
#line 761 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 594:
#line 762 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 595:
#line 767 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = LockWaitError; ;}
    break;

  case 596:
#line 768 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = PGLockWaitSkip; ;}
    break;

  case 597:
#line 769 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = PGLockWaitBlock; ;}
    break;

  case 598:
#line 779 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->valuesLists = list_make1((yyvsp[(3) - (4)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 599:
#line 785 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = (PGSelectStmt *) (yyvsp[(1) - (5)].node);
					n->valuesLists = lappend(n->valuesLists, (yyvsp[(4) - (5)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 600:
#line 793 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 601:
#line 794 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (2)].node); ;}
    break;

  case 602:
#line 807 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 603:
#line 808 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 604:
#line 812 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 605:
#line 813 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 606:
#line 817 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 607:
#line 818 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
    break;

  case 608:
#line 825 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyvsp[(1) - (3)].range)->alias = (yyvsp[(2) - (3)].alias);
					(yyvsp[(1) - (3)].range)->sample = (yyvsp[(3) - (3)].node);
					(yyval.node) = (PGNode *) (yyvsp[(1) - (3)].range);
				;}
    break;

  case 609:
#line 831 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[(1) - (3)].node);
					n->alias = (PGAlias*) linitial((yyvsp[(2) - (3)].list));
					n->coldeflist = (PGList*) lsecond((yyvsp[(2) - (3)].list));
					n->sample = (yyvsp[(3) - (3)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 610:
#line 839 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[(2) - (3)].node);
					n->lateral = true;
					n->alias = (PGAlias*) linitial((yyvsp[(3) - (3)].list));
					n->coldeflist = (PGList*) lsecond((yyvsp[(3) - (3)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 611:
#line 847 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeSubselect *n = makeNode(PGRangeSubselect);
					n->lateral = false;
					n->subquery = (yyvsp[(1) - (3)].node);
					n->alias = (yyvsp[(2) - (3)].alias);
					n->sample = (yyvsp[(3) - (3)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 612:
#line 856 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeSubselect *n = makeNode(PGRangeSubselect);
					n->lateral = true;
					n->subquery = (yyvsp[(2) - (3)].node);
					n->alias = (yyvsp[(3) - (3)].alias);
					n->sample = NULL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 613:
#line 865 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) (yyvsp[(1) - (1)].jexpr);
				;}
    break;

  case 614:
#line 869 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyvsp[(2) - (4)].jexpr)->alias = (yyvsp[(4) - (4)].alias);
					(yyval.node) = (PGNode *) (yyvsp[(2) - (4)].jexpr);
				;}
    break;

  case 615:
#line 895 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.jexpr) = (yyvsp[(2) - (3)].jexpr);
				;}
    break;

  case 616:
#line 899 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* CROSS JOIN is same as unqualified inner join */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(4) - (4)].node);
					n->usingClause = NIL;
					n->quals = NULL;
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 617:
#line 912 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[(2) - (5)].jtype);
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (5)].node);
					n->rarg = (yyvsp[(4) - (5)].node);
					if ((yyvsp[(5) - (5)].node) != NULL && IsA((yyvsp[(5) - (5)].node), PGList))
						n->usingClause = (PGList *) (yyvsp[(5) - (5)].node); /* USING clause */
					else
						n->quals = (yyvsp[(5) - (5)].node); /* ON clause */
					n->location = (yylsp[(2) - (5)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 618:
#line 926 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* letting join_type reduce to empty doesn't work */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(3) - (4)].node);
					if ((yyvsp[(4) - (4)].node) != NULL && IsA((yyvsp[(4) - (4)].node), PGList))
						n->usingClause = (PGList *) (yyvsp[(4) - (4)].node); /* USING clause */
					else
						n->quals = (yyvsp[(4) - (4)].node); /* ON clause */
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 619:
#line 941 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[(3) - (5)].jtype);
					n->isNatural = true;
					n->larg = (yyvsp[(1) - (5)].node);
					n->rarg = (yyvsp[(5) - (5)].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					n->location = (yylsp[(2) - (5)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 620:
#line 953 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* letting join_type reduce to empty doesn't work */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = true;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(4) - (4)].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 621:
#line 969 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(2) - (5)].str);
					(yyval.alias)->colnames = (yyvsp[(4) - (5)].list);
				;}
    break;

  case 622:
#line 975 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(2) - (2)].str);
				;}
    break;

  case 623:
#line 980 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(1) - (4)].str);
					(yyval.alias)->colnames = (yyvsp[(3) - (4)].list);
				;}
    break;

  case 624:
#line 986 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(1) - (1)].str);
				;}
    break;

  case 625:
#line 992 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.alias) = (yyvsp[(1) - (1)].alias); ;}
    break;

  case 626:
#line 993 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.alias) = NULL; ;}
    break;

  case 627:
#line 1002 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2((yyvsp[(1) - (1)].alias), NIL);
				;}
    break;

  case 628:
#line 1006 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(NULL, (yyvsp[(3) - (4)].list));
				;}
    break;

  case 629:
#line 1010 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAlias *a = makeNode(PGAlias);
					a->aliasname = (yyvsp[(2) - (5)].str);
					(yyval.list) = list_make2(a, (yyvsp[(4) - (5)].list));
				;}
    break;

  case 630:
#line 1016 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAlias *a = makeNode(PGAlias);
					a->aliasname = (yyvsp[(1) - (4)].str);
					(yyval.list) = list_make2(a, (yyvsp[(3) - (4)].list));
				;}
    break;

  case 631:
#line 1022 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(NULL, NIL);
				;}
    break;

  case 632:
#line 1027 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_FULL; ;}
    break;

  case 633:
#line 1028 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_LEFT; ;}
    break;

  case 634:
#line 1029 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_RIGHT; ;}
    break;

  case 635:
#line 1030 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_INNER; ;}
    break;

  case 636:
#line 1034 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 637:
#line 1035 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 638:
#line 1047 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) (yyvsp[(3) - (4)].list); ;}
    break;

  case 639:
#line 1048 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 640:
#line 1054 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* inheritance query, implicitly */
					(yyval.range) = (yyvsp[(1) - (1)].range);
					(yyval.range)->inh = true;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 641:
#line 1061 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* inheritance query, explicitly */
					(yyval.range) = (yyvsp[(1) - (2)].range);
					(yyval.range)->inh = true;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 642:
#line 1068 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* no inheritance */
					(yyval.range) = (yyvsp[(2) - (2)].range);
					(yyval.range)->inh = false;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 643:
#line 1075 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* no inheritance, SQL99-style syntax */
					(yyval.range) = (yyvsp[(3) - (4)].range);
					(yyval.range)->inh = false;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 644:
#line 1107 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = makeNode(PGRangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[(2) - (2)].boolean);
					n->is_rowsfrom = false;
					n->functions = list_make1(list_make2((yyvsp[(1) - (2)].node), NIL));
					n->sample = NULL;
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 645:
#line 1118 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = makeNode(PGRangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[(6) - (6)].boolean);
					n->is_rowsfrom = true;
					n->functions = (yyvsp[(4) - (6)].list);
					n->sample = NULL;
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 646:
#line 1131 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list)); ;}
    break;

  case 647:
#line 1135 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 648:
#line 1136 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 649:
#line 1139 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 650:
#line 1140 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 651:
#line 1143 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 652:
#line 1144 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 653:
#line 1149 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 654:
#line 1150 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 655:
#line 1156 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 656:
#line 1160 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 657:
#line 1166 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->colname = (yyvsp[(1) - (3)].str);
					n->typeName = (yyvsp[(2) - (3)].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collClause = (PGCollateClause *) (yyvsp[(3) - (3)].node);
					n->collOid = InvalidOid;
					n->constraints = NIL;
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 658:
#line 1187 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[(2) - (2)].list);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 659:
#line 1194 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 660:
#line 1207 "third_party/libpg_query/grammar/statements/select.y"
    {
             (yyval.list) = list_make1(list_make2(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].typnam)));
            ;}
    break;

  case 661:
#line 1210 "third_party/libpg_query/grammar/statements/select.y"
    {
             (yyval.list) = lappend((yyvsp[(1) - (4)].list), list_make2(makeString((yyvsp[(3) - (4)].str)), (yyvsp[(4) - (4)].typnam)));
            ;}
    break;

  case 664:
#line 1217 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[(2) - (2)].list);
				;}
    break;

  case 665:
#line 1222 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[(3) - (3)].list);
					(yyval.typnam)->setof = true;
				;}
    break;

  case 666:
#line 1229 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (5)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(4) - (5)].ival)));
				;}
    break;

  case 667:
#line 1234 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (6)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(5) - (6)].ival)));
					(yyval.typnam)->setof = true;
				;}
    break;

  case 668:
#line 1240 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
				;}
    break;

  case 669:
#line 1245 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
					(yyval.typnam)->setof = true;
				;}
    break;

  case 670:
#line 1250 "third_party/libpg_query/grammar/statements/select.y"
    {
               (yyval.typnam) = SystemTypeName("struct");
               (yyval.typnam)->arrayBounds = (yyvsp[(5) - (5)].list);
               (yyval.typnam)->typmods = (yyvsp[(3) - (5)].list);
               (yyval.typnam)->location = (yylsp[(1) - (5)]);
               ;}
    break;

  case 671:
#line 1256 "third_party/libpg_query/grammar/statements/select.y"
    {
               (yyval.typnam) = SystemTypeName("map");
               (yyval.typnam)->arrayBounds = (yyvsp[(5) - (5)].list);
               (yyval.typnam)->typmods = (yyvsp[(3) - (5)].list);
               (yyval.typnam)->location = (yylsp[(1) - (5)]);
			;}
    break;

  case 672:
#line 1266 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeInteger(-1)); ;}
    break;

  case 673:
#line 1268 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = lappend((yyvsp[(1) - (4)].list), makeInteger((yyvsp[(3) - (4)].ival))); ;}
    break;

  case 674:
#line 1270 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = NIL; ;}
    break;

  case 675:
#line 1274 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 676:
#line 1275 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 677:
#line 1276 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 678:
#line 1277 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 679:
#line 1278 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 680:
#line 1280 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
				;}
    break;

  case 681:
#line 1285 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (4)].typnam);
					(yyval.typnam)->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											 makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
				;}
    break;

  case 682:
#line 1304 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 683:
#line 1305 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 684:
#line 1306 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 685:
#line 1307 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 686:
#line 1319 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = makeTypeName((yyvsp[(1) - (2)].str));
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 687:
#line 1332 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 688:
#line 1333 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 689:
#line 1340 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 690:
#line 1345 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 691:
#line 1350 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int2");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 692:
#line 1355 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int8");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 693:
#line 1360 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 694:
#line 1365 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (2)].typnam);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 695:
#line 1370 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float8");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 696:
#line 1375 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 697:
#line 1381 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 698:
#line 1387 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 699:
#line 1393 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("bool");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 700:
#line 1400 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Check FLOAT() precision limits assuming IEEE floating
					 * types - thomas 1997-09-18
					 */
					if ((yyvsp[(2) - (3)].ival) < 1)
						ereport(ERROR,
								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be at least 1 bit"),
								 parser_errposition((yylsp[(2) - (3)]))));
					else if ((yyvsp[(2) - (3)].ival) <= 24)
						(yyval.typnam) = SystemTypeName("float4");
					else if ((yyvsp[(2) - (3)].ival) <= 53)
						(yyval.typnam) = SystemTypeName("float8");
					else
						ereport(ERROR,
								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be less than 54 bits"),
								 parser_errposition((yylsp[(2) - (3)]))));
				;}
    break;

  case 701:
#line 1421 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float4");
				;}
    break;

  case 702:
#line 1431 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 703:
#line 1435 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 704:
#line 1443 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 705:
#line 1447 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
					(yyval.typnam)->typmods = NIL;
				;}
    break;

  case 706:
#line 1455 "third_party/libpg_query/grammar/statements/select.y"
    {
					const char *typname;

					typname = (yyvsp[(2) - (5)].boolean) ? "varbit" : "bit";
					(yyval.typnam) = SystemTypeName(typname);
					(yyval.typnam)->typmods = (yyvsp[(4) - (5)].list);
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 707:
#line 1467 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* bit defaults to bit(1), varbit to no limit */
					if ((yyvsp[(2) - (2)].boolean))
					{
						(yyval.typnam) = SystemTypeName("varbit");
					}
					else
					{
						(yyval.typnam) = SystemTypeName("bit");
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					}
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 708:
#line 1488 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 709:
#line 1492 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 710:
#line 1498 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 711:
#line 1502 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* Length was not specified so allow to be unrestricted.
					 * This handles problems with fixed-length (bpchar) strings
					 * which in column definitions must default to a length
					 * of one, but should not be constrained if the length
					 * was not specified.
					 */
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
					(yyval.typnam)->typmods = NIL;
				;}
    break;

  case 712:
#line 1515 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (4)].conststr));
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
					(yyval.typnam)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 713:
#line 1523 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (1)].conststr));
					/* char defaults to char(1), varchar to no limit */
					if (strcmp((yyvsp[(1) - (1)].conststr), "bpchar") == 0)
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 714:
#line 1533 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 715:
#line 1535 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 716:
#line 1537 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "varchar"; ;}
    break;

  case 717:
#line 1539 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 718:
#line 1541 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 719:
#line 1543 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 720:
#line 1547 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 721:
#line 1548 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 722:
#line 1556 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(5) - (5)].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 723:
#line 1565 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 724:
#line 1573 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(5) - (5)].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 725:
#line 1582 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 726:
#line 1593 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("interval");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 727:
#line 1600 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 728:
#line 1601 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 729:
#line 1602 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 746:
#line 1631 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR), (yylsp[(1) - (1)]))); ;}
    break;

  case 747:
#line 1633 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MONTH), (yylsp[(1) - (1)]))); ;}
    break;

  case 748:
#line 1635 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY), (yylsp[(1) - (1)]))); ;}
    break;

  case 749:
#line 1637 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR), (yylsp[(1) - (1)]))); ;}
    break;

  case 750:
#line 1639 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MINUTE), (yylsp[(1) - (1)]))); ;}
    break;

  case 751:
#line 1641 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(SECOND), (yylsp[(1) - (1)]))); ;}
    break;

  case 752:
#line 1643 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MILLISECOND), (yylsp[(1) - (1)]))); ;}
    break;

  case 753:
#line 1645 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MICROSECOND), (yylsp[(1) - (1)]))); ;}
    break;

  case 754:
#line 1647 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR) |
												 INTERVAL_MASK(MONTH), (yylsp[(1) - (3)])));
				;}
    break;

  case 755:
#line 1652 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR), (yylsp[(1) - (3)])));
				;}
    break;

  case 756:
#line 1657 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
				;}
    break;

  case 757:
#line 1663 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
				;}
    break;

  case 758:
#line 1670 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
				;}
    break;

  case 759:
#line 1675 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
				;}
    break;

  case 760:
#line 1681 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
				;}
    break;

  case 761:
#line 1686 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 762:
#line 1717 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 763:
#line 1720 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), 0, (yylsp[(2) - (3)])); ;}
    break;

  case 764:
#line 1722 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = (yyvsp[(1) - (3)].node);
					n->collname = (yyvsp[(3) - (3)].list);
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 765:
#line 1730 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("timezone"),
											   list_make2((yyvsp[(5) - (5)].node), (yyvsp[(1) - (5)].node)),
											   (yylsp[(2) - (5)]));
				;}
    break;

  case 766:
#line 1745 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 767:
#line 1747 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 768:
#line 1749 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 769:
#line 1751 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 770:
#line 1753 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 771:
#line 1755 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 772:
#line 1757 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 773:
#line 1759 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 774:
#line 1761 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 775:
#line 1763 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 776:
#line 1765 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 777:
#line 1767 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 778:
#line 1769 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 779:
#line 1771 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 780:
#line 1774 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 781:
#line 1776 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 782:
#line 1778 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
    break;

  case 783:
#line 1781 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeAndExpr((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 784:
#line 1783 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeOrExpr((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 785:
#line 1785 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeNotExpr((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 786:
#line 1787 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeNotExpr((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 787:
#line 1790 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_GLOB, "~~~",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 788:
#line 1795 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "~~",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 789:
#line 1800 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make3((yyvsp[(1) - (5)].node), (yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 790:
#line 1807 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "!~~",
												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
				;}
    break;

  case 791:
#line 1812 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("not_like_escape"),
											   list_make3((yyvsp[(1) - (6)].node), (yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 792:
#line 1819 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "~~*",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 793:
#line 1824 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("ilike_escape"),
											   list_make3((yyvsp[(1) - (5)].node), (yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 794:
#line 1831 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "!~~*",
												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
				;}
    break;

  case 795:
#line 1836 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("not_ilike_escape"),
											   list_make3((yyvsp[(1) - (6)].node), (yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 796:
#line 1844 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(4) - (4)].node), makeNullAConst(-1)),
											   (yylsp[(2) - (4)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
												   (yyvsp[(1) - (4)].node), (PGNode *) n, (yylsp[(2) - (4)]));
				;}
    break;

  case 797:
#line 1852 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
												   (yyvsp[(1) - (6)].node), (PGNode *) n, (yylsp[(2) - (6)]));
				;}
    break;

  case 798:
#line 1860 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(5) - (5)].node), makeNullAConst(-1)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
												   (yyvsp[(1) - (5)].node), (PGNode *) n, (yylsp[(2) - (5)]));
				;}
    break;

  case 799:
#line 1868 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
											   (yylsp[(2) - (7)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
												   (yyvsp[(1) - (7)].node), (PGNode *) n, (yylsp[(2) - (7)]));
				;}
    break;

  case 800:
#line 1886 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					n->nulltesttype = PG_IS_NULL;
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 801:
#line 1894 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
					n->nulltesttype = PG_IS_NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 802:
#line 1902 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 803:
#line 1910 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 804:
#line 1918 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 805:
#line 1925 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGFuncCall *n = makeFuncCall(SystemFuncName("row"), (yyvsp[(1) - (1)].list), (yylsp[(1) - (1)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 806:
#line 1929 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGFuncCall *n = makeFuncCall(SystemFuncName("struct_pack"), (yyvsp[(2) - (3)].list), (yylsp[(2) - (3)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 807:
#line 1933 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGFuncCall *n = makeFuncCall(SystemFuncName("list_value"), (yyvsp[(2) - (3)].list), (yylsp[(2) - (3)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 808:
#line 1938 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGLambdaFunction *n = makeNode(PGLambdaFunction);
				n->lhs = (yyvsp[(1) - (3)].node);
				n->rhs = (yyvsp[(3) - (3)].node);
				n->location = (yylsp[(2) - (3)]);
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 809:
#line 1946 "third_party/libpg_query/grammar/statements/select.y"
    {
					if (list_length((yyvsp[(1) - (3)].list)) != 2)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on left side of OVERLAPS expression"),
								 parser_errposition((yylsp[(1) - (3)]))));
					if (list_length((yyvsp[(3) - (3)].list)) != 2)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on right side of OVERLAPS expression"),
								 parser_errposition((yylsp[(3) - (3)]))));
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlaps"),
											   list_concat((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)),
											   (yylsp[(2) - (3)]));
				;}
    break;

  case 810:
#line 1962 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = PG_IS_TRUE;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 811:
#line 1970 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_TRUE;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 812:
#line 1978 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = IS_FALSE;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 813:
#line 1986 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_FALSE;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 814:
#line 1994 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = IS_UNKNOWN;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 815:
#line 2002 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_UNKNOWN;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 816:
#line 2010 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
				;}
    break;

  case 817:
#line 2014 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 818:
#line 2018 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
				;}
    break;

  case 819:
#line 2022 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
				;}
    break;

  case 820:
#line 2026 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN,
												   "BETWEEN",
												   (yyvsp[(1) - (6)].node),
												   (PGNode *) list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
												   (yylsp[(2) - (6)]));
				;}
    break;

  case 821:
#line 2034 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN,
												   "NOT BETWEEN",
												   (yyvsp[(1) - (7)].node),
												   (PGNode *) list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
												   (yylsp[(2) - (7)]));
				;}
    break;

  case 822:
#line 2042 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN_SYM,
												   "BETWEEN SYMMETRIC",
												   (yyvsp[(1) - (6)].node),
												   (PGNode *) list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
												   (yylsp[(2) - (6)]));
				;}
    break;

  case 823:
#line 2050 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN_SYM,
												   "NOT BETWEEN SYMMETRIC",
												   (yyvsp[(1) - (7)].node),
												   (PGNode *) list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
												   (yylsp[(2) - (7)]));
				;}
    break;

  case 824:
#line 2058 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* in_expr returns a PGSubLink or a list of a_exprs */
					if (IsA((yyvsp[(3) - (3)].node), PGSubLink))
					{
						/* generate foo = ANY (subquery) */
						PGSubLink *n = (PGSubLink *) (yyvsp[(3) - (3)].node);
						n->subLinkType = PG_ANY_SUBLINK;
						n->subLinkId = 0;
						n->testexpr = (yyvsp[(1) - (3)].node);
						n->operName = NIL;		/* show it's IN not = ANY */
						n->location = (yylsp[(2) - (3)]);
						(yyval.node) = (PGNode *)n;
					}
					else
					{
						/* generate scalar IN expression */
						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
					}
				;}
    break;

  case 825:
#line 2078 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* in_expr returns a PGSubLink or a list of a_exprs */
					if (IsA((yyvsp[(4) - (4)].node), PGSubLink))
					{
						/* generate NOT (foo = ANY (subquery)) */
						/* Make an = ANY node */
						PGSubLink *n = (PGSubLink *) (yyvsp[(4) - (4)].node);
						n->subLinkType = PG_ANY_SUBLINK;
						n->subLinkId = 0;
						n->testexpr = (yyvsp[(1) - (4)].node);
						n->operName = NIL;		/* show it's IN not = ANY */
						n->location = (yylsp[(2) - (4)]);
						/* Stick a NOT on top; must have same parse location */
						(yyval.node) = makeNotExpr((PGNode *) n, (yylsp[(2) - (4)]));
					}
					else
					{
						/* generate scalar NOT IN expression */
						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "<>", (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
					}
				;}
    break;

  case 826:
#line 2100 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = (yyvsp[(3) - (4)].subquerytype);
					n->subLinkId = 0;
					n->testexpr = (yyvsp[(1) - (4)].node);
					n->operName = (yyvsp[(2) - (4)].list);
					n->subselect = (yyvsp[(4) - (4)].node);
					n->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 827:
#line 2111 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(3) - (6)].subquerytype) == PG_ANY_SUBLINK)
						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ANY, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
					else
						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ALL, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 828:
#line 2118 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * The SQL spec only allows DEFAULT in "contextually typed
					 * expressions", but for us, it's easier to allow it in
					 * any a_expr and then throw error during parse analysis
					 * if it's in an inappropriate context.  This way also
					 * lets us say something smarter than "syntax error".
					 */
					PGSetToDefault *n = makeNode(PGSetToDefault);
					/* parse analysis will fill in the rest */
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 829:
#line 2131 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGList *func_name = list_make1(makeString("construct_array"));
				PGFuncCall *n = makeFuncCall(func_name, (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 830:
#line 2148 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 831:
#line 2150 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), 0, (yylsp[(2) - (3)])); ;}
    break;

  case 832:
#line 2152 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 833:
#line 2154 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 834:
#line 2156 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 835:
#line 2158 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 836:
#line 2160 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 837:
#line 2162 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 838:
#line 2164 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 839:
#line 2166 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 840:
#line 2168 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 841:
#line 2170 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 842:
#line 2172 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 843:
#line 2174 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 844:
#line 2176 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 845:
#line 2178 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 846:
#line 2180 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 847:
#line 2182 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 848:
#line 2184 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
    break;

  case 849:
#line 2186 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
				;}
    break;

  case 850:
#line 2190 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 851:
#line 2194 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
				;}
    break;

  case 852:
#line 2198 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
				;}
    break;

  case 853:
#line 2211 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 854:
#line 2212 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 855:
#line 2214 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGPositionalReference *n = makeNode(PGPositionalReference);
					n->position = (yyvsp[(2) - (2)].ival);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 856:
#line 2221 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = makeParamRef(0, (yylsp[(1) - (2)]));
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = makeParamRef(0, (yylsp[(1) - (2)]));
				;}
    break;

  case 857:
#line 2233 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGParamRef *p = makeNode(PGParamRef);
					p->number = (yyvsp[(1) - (2)].ival);
					p->location = (yylsp[(1) - (2)]);
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (PGNode *) p;
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = (PGNode *) p;
				;}
    break;

  case 858:
#line 2248 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(4) - (4)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (yyvsp[(2) - (4)].node);
						n->indirection = check_indirection((yyvsp[(4) - (4)].list), yyscanner);
						(yyval.node) = (PGNode *)n;
					}
					else
						(yyval.node) = (yyvsp[(2) - (4)].node);
				;}
    break;

  case 859:
#line 2260 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 860:
#line 2262 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].list)) {
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (yyvsp[(1) - (2)].node);
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *)n;
					}
					else {
						(yyval.node) = (yyvsp[(1) - (2)].node);
					}
				;}
    break;

  case 861:
#line 2274 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_EXPR_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(1) - (1)].node);
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 862:
#line 2285 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Because the select_with_parens nonterminal is designed
					 * to "eat" as many levels of parens as possible, the
					 * '(' a_expr ')' opt_indirection production above will
					 * fail to match a sub-SELECT with indirection decoration;
					 * the sub-SELECT won't be regarded as an a_expr as long
					 * as there are parens around it.  To support applying
					 * subscripting or field selection to a sub-SELECT result,
					 * we need this redundant-looking production.
					 */
					PGSubLink *n = makeNode(PGSubLink);
					PGAIndirection *a = makeNode(PGAIndirection);
					n->subLinkType = PG_EXPR_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(1) - (2)].node);
					n->location = (yylsp[(1) - (2)]);
					a->arg = (PGNode *)n;
					a->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.node) = (PGNode *)a;
				;}
    break;

  case 863:
#line 2309 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_EXISTS_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(2) - (2)].node);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 864:
#line 2320 "third_party/libpg_query/grammar/statements/select.y"
    {
				  PGGroupingFunc *g = makeNode(PGGroupingFunc);
				  g->args = (yyvsp[(3) - (4)].list);
				  g->location = (yylsp[(1) - (4)]);
				  (yyval.node) = (PGNode *)g;
			  ;}
    break;

  case 865:
#line 2329 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall((yyvsp[(1) - (3)].list), NIL, (yylsp[(1) - (3)]));
				;}
    break;

  case 866:
#line 2333 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), (yyvsp[(3) - (6)].list), (yylsp[(1) - (6)]));
					n->agg_order = (yyvsp[(4) - (6)].list);
					n->agg_ignore_nulls = (yyvsp[(5) - (6)].boolean);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 867:
#line 2340 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (7)].list), list_make1((yyvsp[(4) - (7)].node)), (yylsp[(1) - (7)]));
					n->func_variadic = true;
					n->agg_order = (yyvsp[(5) - (7)].list);
					n->agg_ignore_nulls = (yyvsp[(6) - (7)].boolean);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 868:
#line 2348 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (9)].list), lappend((yyvsp[(3) - (9)].list), (yyvsp[(6) - (9)].node)), (yylsp[(1) - (9)]));
					n->func_variadic = true;
					n->agg_order = (yyvsp[(7) - (9)].list);
					n->agg_ignore_nulls = (yyvsp[(8) - (9)].boolean);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 869:
#line 2356 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (7)].list), (yyvsp[(4) - (7)].list), (yylsp[(1) - (7)]));
					n->agg_order = (yyvsp[(5) - (7)].list);
					n->agg_ignore_nulls = (yyvsp[(6) - (7)].boolean);
					/* Ideally we'd mark the PGFuncCall node to indicate
					 * "must be an aggregate", but there's no provision
					 * for that in PGFuncCall at the moment.
					 */
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 870:
#line 2367 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (7)].list), (yyvsp[(4) - (7)].list), (yylsp[(1) - (7)]));
					n->agg_order = (yyvsp[(5) - (7)].list);
					n->agg_ignore_nulls = (yyvsp[(6) - (7)].boolean);
					n->agg_distinct = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 871:
#line 2375 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * We consider AGGREGATE(*) to invoke a parameterless
					 * aggregate.  This does the right thing for COUNT(*),
					 * and there are no other aggregates in SQL that accept
					 * '*' as parameter.
					 *
					 * The PGFuncCall node is also marked agg_star = true,
					 * so that later processing can detect what the argument
					 * really was.
					 */
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (4)].list), NIL, (yylsp[(1) - (4)]));
					n->agg_star = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 872:
#line 2403 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = (PGFuncCall *) (yyvsp[(1) - (5)].node);
					/*
					 * The order clause for WITHIN GROUP and the one for
					 * plain-aggregate ORDER BY share a field, so we have to
					 * check here that at most one is present.  We also check
					 * for DISTINCT and VARIADIC here to give a better error
					 * location.  Other consistency checks are deferred to
					 * parse analysis.
					 */
					if ((yyvsp[(2) - (5)].list) != NIL)
					{
						if (n->agg_order != NIL)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use multiple ORDER BY clauses with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (5)]))));
						if (n->agg_distinct)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use DISTINCT with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (5)]))));
						if (n->func_variadic)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use VARIADIC with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (5)]))));
						n->agg_order = (yyvsp[(2) - (5)].list);
						n->agg_within_group = true;
					}
					n->agg_filter = (yyvsp[(3) - (5)].node);
					n->export_state = (yyvsp[(4) - (5)].boolean);
					n->over = (yyvsp[(5) - (5)].windef);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 873:
#line 2439 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 874:
#line 2449 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 875:
#line 2450 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 876:
#line 2458 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("pg_collation_for"),
											   list_make1((yyvsp[(4) - (5)].node)),
											   (yylsp[(1) - (5)]));
				;}
    break;

  case 877:
#line 2464 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_DATE, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 878:
#line 2468 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIME, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 879:
#line 2472 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIME_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 880:
#line 2476 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIMESTAMP, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 881:
#line 2480 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIMESTAMP_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 882:
#line 2484 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIME, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 883:
#line 2488 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIME_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 884:
#line 2492 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIMESTAMP, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 885:
#line 2496 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIMESTAMP_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 886:
#line 2500 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_ROLE, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 887:
#line 2504 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 888:
#line 2508 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_SESSION_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 889:
#line 2512 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 890:
#line 2516 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_CATALOG, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 891:
#line 2520 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_SCHEMA, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 892:
#line 2524 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].typnam), 0, (yylsp[(1) - (6)])); ;}
    break;

  case 893:
#line 2526 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].typnam), 1, (yylsp[(1) - (6)])); ;}
    break;

  case 894:
#line 2528 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("date_part"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 895:
#line 2532 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* overlay(A PLACING B FROM C FOR D) is converted to
					 * overlay(A, B, C, D)
					 * overlay(A PLACING B FROM C) is converted to
					 * overlay(A, B, C)
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlay"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 896:
#line 2541 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* position(A in B) is converted to position(B, A) */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("position"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 897:
#line 2546 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* substring(A from B for C) is converted to
					 * substring(A, B, C) - thomas 2000-11-28
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("substring"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 898:
#line 2553 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* TREAT(expr AS target) converts expr of a particular type to target,
					 * which is defined to be a subtype of the original expression.
					 * In SQL99, this is intended for use with structured UDTs,
					 * but let's make this a generally useful form allowing stronger
					 * coercions than are handled by implicit casting.
					 *
					 * Convert SystemTypeName() to SystemFuncName() even though
					 * at the moment they result in the same thing.
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName(((PGValue *)llast((yyvsp[(5) - (6)].typnam)->names))->val.str),
												list_make1((yyvsp[(3) - (6)].node)),
												(yylsp[(1) - (6)]));
				;}
    break;

  case 899:
#line 2568 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* various trim expressions are defined in SQL
					 * - thomas 1997-07-19
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("trim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 900:
#line 2575 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("ltrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 901:
#line 2579 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("rtrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 902:
#line 2583 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("trim"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 903:
#line 2587 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NULLIF, "=", (yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(1) - (6)]));
				;}
    break;

  case 904:
#line 2591 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCoalesceExpr *c = makeNode(PGCoalesceExpr);
					c->args = (yyvsp[(3) - (4)].list);
					c->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)c;
				;}
    break;

  case 905:
#line 2604 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
    break;

  case 906:
#line 2605 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 907:
#line 2609 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(4) - (5)].node); ;}
    break;

  case 908:
#line 2610 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 909:
#line 2614 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 910:
#line 2615 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 911:
#line 2622 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 912:
#line 2623 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 913:
#line 2627 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].windef)); ;}
    break;

  case 914:
#line 2629 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].windef)); ;}
    break;

  case 915:
#line 2634 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(3) - (3)].windef);
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.windef) = n;
				;}
    break;

  case 916:
#line 2642 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.windef) = (yyvsp[(2) - (2)].windef); ;}
    break;

  case 917:
#line 2644 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->name = (yyvsp[(2) - (2)].str);
					n->refname = NULL;
					n->partitionClause = NIL;
					n->orderClause = NIL;
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.windef) = n;
				;}
    break;

  case 918:
#line 2657 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.windef) = NULL; ;}
    break;

  case 919:
#line 2662 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->name = NULL;
					n->refname = (yyvsp[(2) - (6)].str);
					n->partitionClause = (yyvsp[(3) - (6)].list);
					n->orderClause = (yyvsp[(4) - (6)].list);
					/* copy relevant fields of opt_frame_clause */
					n->frameOptions = (yyvsp[(5) - (6)].windef)->frameOptions;
					n->startOffset = (yyvsp[(5) - (6)].windef)->startOffset;
					n->endOffset = (yyvsp[(5) - (6)].windef)->endOffset;
					n->location = (yylsp[(1) - (6)]);
					(yyval.windef) = n;
				;}
    break;

  case 920:
#line 2687 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 921:
#line 2688 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = NULL; ;}
    break;

  case 922:
#line 2691 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 923:
#line 2692 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 924:
#line 2704 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(2) - (2)].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_RANGE;
					(yyval.windef) = n;
				;}
    break;

  case 925:
#line 2710 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(2) - (2)].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_ROWS;
					(yyval.windef) = n;
				;}
    break;

  case 926:
#line 2716 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 927:
#line 2726 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(1) - (1)].windef);
					/* reject invalid cases */
					if (n->frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[(1) - (1)]))));
					if (n->frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot end with current row"),
								 parser_errposition((yylsp[(1) - (1)]))));
					n->frameOptions |= FRAMEOPTION_END_CURRENT_ROW;
					(yyval.windef) = n;
				;}
    break;

  case 928:
#line 2743 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n1 = (yyvsp[(2) - (4)].windef);
					PGWindowDef *n2 = (yyvsp[(4) - (4)].windef);
					/* form merged options */
					int		frameOptions = n1->frameOptions;
					/* shift converts START_ options to END_ options */
					frameOptions |= n2->frameOptions << 1;
					frameOptions |= FRAMEOPTION_BETWEEN;
					/* reject invalid cases */
					if (frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[(2) - (4)]))));
					if (frameOptions & FRAMEOPTION_END_UNBOUNDED_PRECEDING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame end cannot be UNBOUNDED PRECEDING"),
								 parser_errposition((yylsp[(4) - (4)]))));
					if ((frameOptions & FRAMEOPTION_START_CURRENT_ROW) &&
						(frameOptions & FRAMEOPTION_END_VALUE_PRECEDING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from current row cannot have preceding rows"),
								 parser_errposition((yylsp[(4) - (4)]))));
					if ((frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING) &&
						(frameOptions & (FRAMEOPTION_END_VALUE_PRECEDING |
										 FRAMEOPTION_END_CURRENT_ROW)))
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot have preceding rows"),
								 parser_errposition((yylsp[(4) - (4)]))));
					n1->frameOptions = frameOptions;
					n1->endOffset = n2->startOffset;
					(yyval.windef) = n1;
				;}
    break;

  case 929:
#line 2788 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_PRECEDING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 930:
#line 2796 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_FOLLOWING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 931:
#line 2804 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_CURRENT_ROW;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 932:
#line 2812 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_PRECEDING;
					n->startOffset = (yyvsp[(1) - (2)].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 933:
#line 2820 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_FOLLOWING;
					n->startOffset = (yyvsp[(1) - (2)].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 934:
#line 2840 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 935:
#line 2841 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 936:
#line 2844 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list);;}
    break;

  case 937:
#line 2845 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(2) - (5)].list), (yyvsp[(4) - (5)].node)); ;}
    break;

  case 938:
#line 2849 "third_party/libpg_query/grammar/statements/select.y"
    {
		PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
		na->name = (yyvsp[(1) - (3)].str);
		na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
		na->argnumber = -1;
		na->location = (yylsp[(1) - (3)]);
		(yyval.node) = (PGNode *) na;
	;}
    break;

  case 939:
#line 2859 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 940:
#line 2860 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 941:
#line 2864 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 942:
#line 2865 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
    break;

  case 943:
#line 2869 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
    break;

  case 944:
#line 2870 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
    break;

  case 945:
#line 2871 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ALL_SUBLINK; ;}
    break;

  case 946:
#line 2874 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 947:
#line 2875 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) (yyvsp[(1) - (1)].conststr); ;}
    break;

  case 948:
#line 2878 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "+"; ;}
    break;

  case 949:
#line 2879 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "-"; ;}
    break;

  case 950:
#line 2880 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "*"; ;}
    break;

  case 951:
#line 2881 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "/"; ;}
    break;

  case 952:
#line 2882 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "%"; ;}
    break;

  case 953:
#line 2883 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "^"; ;}
    break;

  case 954:
#line 2884 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<"; ;}
    break;

  case 955:
#line 2885 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = ">"; ;}
    break;

  case 956:
#line 2886 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "="; ;}
    break;

  case 957:
#line 2887 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<="; ;}
    break;

  case 958:
#line 2888 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = ">="; ;}
    break;

  case 959:
#line 2889 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<>"; ;}
    break;

  case 960:
#line 2893 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 961:
#line 2895 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 962:
#line 2900 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 963:
#line 2902 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 964:
#line 2907 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 965:
#line 2909 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 966:
#line 2911 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~")); ;}
    break;

  case 967:
#line 2913 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~")); ;}
    break;

  case 968:
#line 2915 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~~")); ;}
    break;

  case 969:
#line 2917 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~~")); ;}
    break;

  case 970:
#line 2919 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~*")); ;}
    break;

  case 971:
#line 2921 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~*")); ;}
    break;

  case 972:
#line 2935 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 973:
#line 2937 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lcons(makeString((yyvsp[(1) - (3)].str)), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 974:
#line 2941 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 975:
#line 2945 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 976:
#line 2952 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(1) - (1)].list);
				;}
    break;

  case 977:
#line 2957 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(1) - (2)].list);
				;}
    break;

  case 978:
#line 2975 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(1) - (1)].list);
				;}
    break;

  case 979:
#line 2979 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = NULL;
				;}
    break;

  case 980:
#line 2988 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 981:
#line 2992 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 982:
#line 2998 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(1) - (1)].node);
				;}
    break;

  case 983:
#line 3002 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[(1) - (3)].str);
					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) na;
				;}
    break;

  case 984:
#line 3011 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[(1) - (3)].str);
					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) na;
				;}
    break;

  case 985:
#line 3021 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].typnam)); ;}
    break;

  case 986:
#line 3022 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].typnam)); ;}
    break;

  case 987:
#line 3027 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(makeStringConst((yyvsp[(1) - (3)].str), (yylsp[(1) - (3)])), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 988:
#line 3030 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 989:
#line 3037 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 990:
#line 3038 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "year"; ;}
    break;

  case 991:
#line 3039 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "month"; ;}
    break;

  case 992:
#line 3040 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "day"; ;}
    break;

  case 993:
#line 3041 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "hour"; ;}
    break;

  case 994:
#line 3042 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "minute"; ;}
    break;

  case 995:
#line 3043 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "second"; ;}
    break;

  case 996:
#line 3044 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "millisecond"; ;}
    break;

  case 997:
#line 3045 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "microsecond"; ;}
    break;

  case 998:
#line 3046 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 999:
#line 3057 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make4((yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].node), (yyvsp[(3) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 1000:
#line 3061 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 1001:
#line 3068 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 1002:
#line 3074 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(3) - (3)].node), (yyvsp[(1) - (3)].node)); ;}
    break;

  case 1003:
#line 3075 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1004:
#line 3092 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 1005:
#line 3096 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* not legal per SQL99, but might as well allow it */
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yyvsp[(2) - (3)].node));
				;}
    break;

  case 1006:
#line 3101 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node));
				;}
    break;

  case 1007:
#line 3105 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Since there are no cases where this syntax allows
					 * a textual FOR value, we forcibly cast the argument
					 * to int4.  The possible matches in pg_proc are
					 * substring(text,int4) and substring(text,text),
					 * and we don't want the parser to choose the latter,
					 * which it is likely to do if the second argument
					 * is unknown or doesn't have an implicit cast to int4.
					 */
					(yyval.list) = list_make3((yyvsp[(1) - (2)].node), makeIntConst(1, -1),
									makeTypeCast((yyvsp[(2) - (2)].node),
												 SystemTypeName("int4"), 0, -1));
				;}
    break;

  case 1008:
#line 3120 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(1) - (1)].list);
				;}
    break;

  case 1009:
#line 3124 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1010:
#line 3128 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 1011:
#line 3131 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 1012:
#line 3134 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(3) - (3)].list), (yyvsp[(1) - (3)].node)); ;}
    break;

  case 1013:
#line 3135 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1014:
#line 3136 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 1015:
#line 3140 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subselect = (yyvsp[(1) - (1)].node);
					/* other fields will be filled later */
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1016:
#line 3146 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *)(yyvsp[(2) - (3)].list); ;}
    break;

  case 1017:
#line 3157 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCaseExpr *c = makeNode(PGCaseExpr);
					c->casetype = InvalidOid; /* not analyzed yet */
					c->arg = (PGExpr *) (yyvsp[(2) - (5)].node);
					c->args = (yyvsp[(3) - (5)].list);
					c->defresult = (PGExpr *) (yyvsp[(4) - (5)].node);
					c->location = (yylsp[(1) - (5)]);
					(yyval.node) = (PGNode *)c;
				;}
    break;

  case 1018:
#line 3170 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 1019:
#line 3171 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 1020:
#line 3176 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCaseWhen *w = makeNode(PGCaseWhen);
					w->expr = (PGExpr *) (yyvsp[(2) - (4)].node);
					w->result = (PGExpr *) (yyvsp[(4) - (4)].node);
					w->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)w;
				;}
    break;

  case 1021:
#line 3186 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 1022:
#line 3187 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1023:
#line 3190 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 1024:
#line 3191 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1025:
#line 3195 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeColumnRef((yyvsp[(1) - (1)].str), NIL, (yylsp[(1) - (1)]), yyscanner);
				;}
    break;

  case 1026:
#line 3199 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeColumnRef((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].list), (yylsp[(1) - (2)]), yyscanner);
				;}
    break;

  case 1027:
#line 3206 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeString((yyvsp[(2) - (2)].str));
				;}
    break;

  case 1028:
#line 3210 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = false;
					ai->lidx = NULL;
					ai->uidx = (yyvsp[(2) - (3)].node);
					(yyval.node) = (PGNode *) ai;
				;}
    break;

  case 1029:
#line 3218 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = true;
					ai->lidx = (yyvsp[(2) - (5)].node);
					ai->uidx = (yyvsp[(4) - (5)].node);
					(yyval.node) = (PGNode *) ai;
				;}
    break;

  case 1030:
#line 3228 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 1031:
#line 3229 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1032:
#line 3233 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 1033:
#line 3234 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 1034:
#line 3238 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1035:
#line 3239 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 1038:
#line 3253 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 1039:
#line 3254 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1040:
#line 3258 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 1041:
#line 3259 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
    break;

  case 1042:
#line 3263 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 1043:
#line 3264 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
    break;

  case 1044:
#line 3268 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(3) - (3)].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (3)].node);
					(yyval.target)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 1045:
#line 3284 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(2) - (2)].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (2)].node);
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 1046:
#line 3292 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (1)].node);
					(yyval.target)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 1047:
#line 3300 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnRef *n = makeNode(PGColumnRef);
					PGAStar *star = makeNode(PGAStar);
					n->fields = list_make1(star);
					n->location = (yylsp[(1) - (3)]);
					star->except_list = (yyvsp[(2) - (3)].list);
					star->replace_list = (yyvsp[(3) - (3)].list);

					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)n;
					(yyval.target)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 1048:
#line 3315 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnRef *n = makeNode(PGColumnRef);
					PGAStar *star = makeNode(PGAStar);
					n->fields = list_make1(star);
					n->location = (yylsp[(1) - (5)]);
					star->relation = (yyvsp[(1) - (5)].str);
					star->except_list = (yyvsp[(4) - (5)].list);
					star->replace_list = (yyvsp[(5) - (5)].list);

					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)n;
					(yyval.target)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 1049:
#line 3332 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 1050:
#line 3333 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(2) - (2)].str))); ;}
    break;

  case 1051:
#line 3336 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 1052:
#line 3337 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NULL; ;}
    break;

  case 1053:
#line 3340 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (3)].node), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 1054:
#line 3344 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 1055:
#line 3345 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 1056:
#line 3349 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 1057:
#line 3350 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
    break;

  case 1058:
#line 3353 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 1059:
#line 3354 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(2) - (2)].list)); ;}
    break;

  case 1060:
#line 3355 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NULL; ;}
    break;

  case 1061:
#line 3365 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].range)); ;}
    break;

  case 1062:
#line 3366 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].range)); ;}
    break;

  case 1063:
#line 3378 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = makeRangeVar(NULL, (yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1064:
#line 3382 "third_party/libpg_query/grammar/statements/select.y"
    {
					check_qualified_name((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.range) = makeRangeVar(NULL, NULL, (yylsp[(1) - (2)]));
					switch (list_length((yyvsp[(2) - (2)].list)))
					{
						case 1:
							(yyval.range)->catalogname = NULL;
							(yyval.range)->schemaname = (yyvsp[(1) - (2)].str);
							(yyval.range)->relname = strVal(linitial((yyvsp[(2) - (2)].list)));
							break;
						case 2:
							(yyval.range)->catalogname = (yyvsp[(1) - (2)].str);
							(yyval.range)->schemaname = strVal(linitial((yyvsp[(2) - (2)].list)));
							(yyval.range)->relname = strVal(lsecond((yyvsp[(2) - (2)].list)));
							break;
						default:
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("improper qualified name (too many dotted names): %s",
											NameListToString(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)))),
									 parser_errposition((yylsp[(1) - (2)]))));
							break;
					}
				;}
    break;

  case 1065:
#line 3409 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 1066:
#line 3411 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 1067:
#line 3416 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 1068:
#line 3417 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (2)].list); ;}
    break;

  case 1069:
#line 3420 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1070:
#line 3422 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1071:
#line 3433 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 1072:
#line 3436 "third_party/libpg_query/grammar/statements/select.y"
    {
						(yyval.list) = check_func_name(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)),
											 yyscanner);
					;}
    break;

  case 1073:
#line 3447 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival), (yylsp[(1) - (1)]));
				;}
    break;

  case 1074:
#line 3451 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1075:
#line 3455 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = makeStringConst((yyvsp[(1) - (2)].str), (yylsp[(1) - (2)]));
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = makeStringConst((yyvsp[(1) - (2)].str), (yylsp[(1) - (2)]));
				;}
    break;

  case 1076:
#line 3467 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1077:
#line 3471 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* This is a bit constant per SQL99:
					 * Without Feature F511, "BIT data type",
					 * a <general literal> shall not be a
					 * <bit string literal> or a <hex string literal>.
					 */
					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1078:
#line 3480 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* generic type 'literal' syntax */
					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (2)].list));
					t->location = (yylsp[(1) - (2)]);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), t);
				;}
    break;

  case 1079:
#line 3487 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* generic syntax with a type modifier */
					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (7)].list));
					PGListCell *lc;

					/*
					 * We must use func_arg_list and opt_sort_clause in the
					 * production to avoid reduce/reduce conflicts, but we
					 * don't actually wish to allow PGNamedArgExpr in this
					 * context, ORDER BY, nor IGNORE NULLS.
					 */
					foreach(lc, (yyvsp[(3) - (7)].list))
					{
						PGNamedArgExpr *arg = (PGNamedArgExpr *) lfirst(lc);

						if (IsA(arg, PGNamedArgExpr))
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have parameter name"),
									 parser_errposition(arg->location)));
					}
					if ((yyvsp[(4) - (7)].list) != NIL)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have ORDER BY"),
									 parser_errposition((yylsp[(4) - (7)]))));
					if ((yyvsp[(5) - (7)].boolean) != false)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have IGNORE NULLS"),
									 parser_errposition((yylsp[(5) - (7)]))));


					t->typmods = (yyvsp[(3) - (7)].list);
					t->location = (yylsp[(1) - (7)]);
					(yyval.node) = makeStringConstCast((yyvsp[(7) - (7)].str), (yylsp[(7) - (7)]), t);
				;}
    break;

  case 1080:
#line 3525 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), (yyvsp[(1) - (2)].typnam));
				;}
    break;

  case 1081:
#line 3529 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(3) - (5)].node), (yylsp[(3) - (5)]), (yyvsp[(5) - (5)].list));
				;}
    break;

  case 1082:
#line 3533 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(2) - (3)].ival), (yylsp[(2) - (3)]), (yyvsp[(3) - (3)].list));
				;}
    break;

  case 1083:
#line 3537 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), (yyvsp[(3) - (3)].list));
				;}
    break;

  case 1084:
#line 3541 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBoolAConst(true, (yylsp[(1) - (1)]));
				;}
    break;

  case 1085:
#line 3545 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBoolAConst(false, (yylsp[(1) - (1)]));
				;}
    break;

  case 1086:
#line 3549 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
				;}
    break;

  case 1087:
#line 3554 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 1088:
#line 3555 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1089:
#line 3571 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1090:
#line 3572 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1091:
#line 3573 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1092:
#line 3576 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1093:
#line 3577 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1094:
#line 3583 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1095:
#line 3584 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1096:
#line 3585 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1097:
#line 3588 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1098:
#line 3589 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1099:
#line 3590 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1100:
#line 3593 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1101:
#line 3594 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1102:
#line 3595 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1103:
#line 3598 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 1104:
#line 3599 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)); ;}
    break;

  case 1105:
#line 3603 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(2) - (2)].str))); ;}
    break;

  case 1106:
#line 3605 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 1107:
#line 3609 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 1108:
#line 3610 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1110:
#line 3621 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1111:
#line 3622 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1112:
#line 3623 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1113:
#line 3624 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1114:
#line 3627 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1115:
#line 3628 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1116:
#line 8 "third_party/libpg_query/grammar/statements/prepare.y"
    {
					PGPrepareStmt *n = makeNode(PGPrepareStmt);
					n->name = (yyvsp[(2) - (5)].str);
					n->argtypes = (yyvsp[(3) - (5)].list);
					n->query = (yyvsp[(5) - (5)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1117:
#line 18 "third_party/libpg_query/grammar/statements/prepare.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 1118:
#line 19 "third_party/libpg_query/grammar/statements/prepare.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1123:
#line 8 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					/* ...but not both */
					n->schemaname = (yyvsp[(3) - (4)].str);
					n->schemaElts = (yyvsp[(4) - (4)].list);
					n->onconflict = PG_ERROR_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1124:
#line 17 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					/* ...but not here */
					n->schemaname = (yyvsp[(6) - (7)].str);
					if ((yyvsp[(7) - (7)].list) != NIL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("CREATE SCHEMA IF NOT EXISTS cannot include schema elements"),
								 parser_errposition((yylsp[(7) - (7)]))));
					n->schemaElts = (yyvsp[(7) - (7)].list);
					n->onconflict = PG_IGNORE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1125:
#line 35 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					if ((yyloc) < 0)			/* see comments for YYLLOC_DEFAULT */
						(yyloc) = (yylsp[(2) - (2)]);
					(yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node));
				;}
    break;

  case 1126:
#line 41 "third_party/libpg_query/grammar/statements/create_schema.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1131:
#line 11 "third_party/libpg_query/grammar/statements/index.y"
    {
					PGIndexStmt *n = makeNode(PGIndexStmt);
					n->unique = (yyvsp[(2) - (13)].boolean);
					n->concurrent = (yyvsp[(4) - (13)].boolean);
					n->idxname = (yyvsp[(5) - (13)].str);
					n->relation = (yyvsp[(7) - (13)].range);
					n->accessMethod = (yyvsp[(8) - (13)].str);
					n->indexParams = (yyvsp[(10) - (13)].list);
					n->options = (yyvsp[(12) - (13)].list);
					n->whereClause = (yyvsp[(13) - (13)].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;
					n->transformed = false;
					n->onconflict = PG_ERROR_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1132:
#line 36 "third_party/libpg_query/grammar/statements/index.y"
    {
					PGIndexStmt *n = makeNode(PGIndexStmt);
					n->unique = (yyvsp[(2) - (16)].boolean);
					n->concurrent = (yyvsp[(4) - (16)].boolean);
					n->idxname = (yyvsp[(8) - (16)].str);
					n->relation = (yyvsp[(10) - (16)].range);
					n->accessMethod = (yyvsp[(11) - (16)].str);
					n->indexParams = (yyvsp[(13) - (16)].list);
					n->options = (yyvsp[(15) - (16)].list);
					n->whereClause = (yyvsp[(16) - (16)].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;
					n->transformed = false;
					n->onconflict = PG_IGNORE_ON_CONFLICT;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1133:
#line 62 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1134:
#line 66 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
    break;

  case 1135:
#line 67 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (char*) DEFAULT_INDEX_TYPE; ;}
    break;

  case 1136:
#line 72 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1137:
#line 73 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1138:
#line 78 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1139:
#line 79 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = NULL; ;}
    break;

  case 1140:
#line 83 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1141:
#line 84 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1142:
#line 89 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1143:
#line 90 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1144:
#line 8 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1145:
#line 17 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1146:
#line 26 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1147:
#line 35 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1148:
#line 44 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1149:
#line 53 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1150:
#line 6 "third_party/libpg_query/grammar/statements/checkpoint.y"
    {
					PGCheckPointStmt *n = makeNode(PGCheckPointStmt);
					n->force = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1151:
#line 12 "third_party/libpg_query/grammar/statements/checkpoint.y"
    {
					PGCheckPointStmt *n = makeNode(PGCheckPointStmt);
					n->force = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1152:
#line 8 "third_party/libpg_query/grammar/statements/export.y"
    {
					PGExportStmt *n = makeNode(PGExportStmt);
					n->filename = (yyvsp[(3) - (4)].str);
					n->options = NIL;
					if ((yyvsp[(4) - (4)].list)) {
						n->options = list_concat(n->options, (yyvsp[(4) - (4)].list));
					}
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1153:
#line 21 "third_party/libpg_query/grammar/statements/export.y"
    {
					PGImportStmt *n = makeNode(PGImportStmt);
					n->filename = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1154:
#line 10 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(2) - (2)].node);
					n->options = NIL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1155:
#line 17 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(4) - (4)].node);
					n->options = list_make1(makeDefElem("analyze", NULL, (yylsp[(2) - (4)])));
					if ((yyvsp[(3) - (4)].boolean))
						n->options = lappend(n->options,
											 makeDefElem("verbose", NULL, (yylsp[(3) - (4)])));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1156:
#line 27 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(3) - (3)].node);
					n->options = list_make1(makeDefElem("verbose", NULL, (yylsp[(2) - (3)])));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1157:
#line 34 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(5) - (5)].node);
					n->options = (yyvsp[(3) - (5)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1158:
#line 44 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1159:
#line 45 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1160:
#line 50 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 1161:
#line 51 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].value); ;}
    break;

  case 1162:
#line 52 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1168:
#line 65 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1169:
#line 66 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1170:
#line 67 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1171:
#line 72 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1172:
#line 73 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1173:
#line 79 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 1174:
#line 83 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 1175:
#line 90 "third_party/libpg_query/grammar/statements/explain.y"
    {;}
    break;

  case 1176:
#line 91 "third_party/libpg_query/grammar/statements/explain.y"
    {;}
    break;

  case 1177:
#line 96 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "true"; ;}
    break;

  case 1178:
#line 97 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "false"; ;}
    break;

  case 1179:
#line 98 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "on"; ;}
    break;

  case 1180:
#line 104 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1181:
#line 110 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 1182:
#line 117 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1183:
#line 118 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "analyze"; ;}
    break;

  case 1184:
#line 11 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(2) - (2)].vsetstmt);
					n->scope = VAR_SET_SCOPE_DEFAULT;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1185:
#line 17 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->scope = VAR_SET_SCOPE_LOCAL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1186:
#line 23 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->scope = VAR_SET_SCOPE_SESSION;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1187:
#line 29 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->scope = VAR_SET_SCOPE_GLOBAL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1188:
#line 38 "third_party/libpg_query/grammar/statements/variable_set.y"
    {(yyval.vsetstmt) = (yyvsp[(1) - (1)].vsetstmt);;}
    break;

  case 1189:
#line 40 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_CURRENT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1190:
#line 48 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (char*) "timezone";
					if ((yyvsp[(3) - (3)].node) != NULL)
						n->args = list_make1((yyvsp[(3) - (3)].node));
					else
						n->kind = VAR_SET_DEFAULT;
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1191:
#line 59 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (char*) "search_path";
					n->args = list_make1(makeStringConst((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)])));
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1192:
#line 71 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[(1) - (3)].str);
					n->args = (yyvsp[(3) - (3)].list);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1193:
#line 79 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[(1) - (3)].str);
					n->args = (yyvsp[(3) - (3)].list);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1194:
#line 87 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1195:
#line 94 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1196:
#line 104 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)])); ;}
    break;

  case 1197:
#line 106 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
    break;

  case 1198:
#line 112 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1199:
#line 116 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1200:
#line 120 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGTypeName *t = (yyvsp[(1) - (3)].typnam);
					if ((yyvsp[(3) - (3)].list) != NIL)
					{
						PGAConst *n = (PGAConst *) linitial((yyvsp[(3) - (3)].list));
						if ((n->val.val.ival & ~(INTERVAL_MASK(HOUR) | INTERVAL_MASK(MINUTE))) != 0)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("time zone interval must be HOUR or HOUR TO MINUTE"),
									 parser_errposition((yylsp[(3) - (3)]))));
					}
					t->typmods = (yyvsp[(3) - (3)].list);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), t);
				;}
    break;

  case 1201:
#line 135 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGTypeName *t = (yyvsp[(1) - (5)].typnam);
					t->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.node) = makeStringConstCast((yyvsp[(5) - (5)].str), (yylsp[(5) - (5)]), t);
				;}
    break;

  case 1202:
#line 141 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
    break;

  case 1203:
#line 142 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1204:
#line 143 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1205:
#line 147 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 1206:
#line 148 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 1207:
#line 8 "third_party/libpg_query/grammar/statements/load.y"
    {
					PGLoadStmt *n = makeNode(PGLoadStmt);
					n->filename = (yyvsp[(2) - (2)].str);
					n->load_type = PG_LOAD_TYPE_LOAD;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1208:
#line 14 "third_party/libpg_query/grammar/statements/load.y"
    {
                    PGLoadStmt *n = makeNode(PGLoadStmt);
                    n->filename = (yyvsp[(2) - (2)].str);
                    n->load_type = PG_LOAD_TYPE_INSTALL;
                    (yyval.node) = (PGNode *)n;
				;}
    break;

  case 1209:
#line 20 "third_party/libpg_query/grammar/statements/load.y"
    {
                      PGLoadStmt *n = makeNode(PGLoadStmt);
                      n->filename = (yyvsp[(3) - (3)].str);
                      n->load_type = PG_LOAD_TYPE_FORCE_INSTALL;
                      (yyval.node) = (PGNode *)n;
                ;}
    break;

  case 1210:
#line 28 "third_party/libpg_query/grammar/statements/load.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1211:
#line 29 "third_party/libpg_query/grammar/statements/load.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1212:
#line 9 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (4)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (4)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (4)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1213:
#line 23 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (5)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (5)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (5)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = (yyvsp[(5) - (5)].range);
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1214:
#line 37 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = (PGVacuumStmt *) (yyvsp[(5) - (5)].node);
					n->options |= PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (5)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (5)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (5)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1215:
#line 49 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM | (yyvsp[(3) - (4)].ival);
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1216:
#line 57 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM | (yyvsp[(3) - (6)].ival);
					n->relation = (yyvsp[(5) - (6)].range);
					n->va_cols = (yyvsp[(6) - (6)].list);
					if (n->va_cols != NIL)	/* implies analyze */
						n->options |= PG_VACOPT_ANALYZE;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1217:
#line 70 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_ANALYZE; ;}
    break;

  case 1218:
#line 71 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_VERBOSE; ;}
    break;

  case 1219:
#line 72 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_FREEZE; ;}
    break;

  case 1220:
#line 73 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_FULL; ;}
    break;

  case 1221:
#line 75 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					if (strcmp((yyvsp[(1) - (1)].str), "disable_page_skipping") == 0)
						(yyval.ival) = PG_VACOPT_DISABLE_PAGE_SKIPPING;
					else
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
							 errmsg("unrecognized VACUUM option \"%s\"", (yyvsp[(1) - (1)].str)),
									 parser_errposition((yylsp[(1) - (1)]))));
				;}
    break;

  case 1222:
#line 87 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1223:
#line 88 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1224:
#line 93 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 1225:
#line 94 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
    break;

  case 1226:
#line 98 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1227:
#line 99 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1228:
#line 9 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGDeleteStmt *n = makeNode(PGDeleteStmt);
					n->relation = (yyvsp[(4) - (7)].range);
					n->usingClause = (yyvsp[(5) - (7)].list);
					n->whereClause = (yyvsp[(6) - (7)].node);
					n->returningList = (yyvsp[(7) - (7)].list);
					n->withClause = (yyvsp[(1) - (7)].with);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1229:
#line 22 "third_party/libpg_query/grammar/statements/delete.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
				;}
    break;

  case 1230:
#line 26 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGAlias *alias = makeNode(PGAlias);
					alias->aliasname = (yyvsp[(2) - (2)].str);
					(yyvsp[(1) - (2)].range)->alias = alias;
					(yyval.range) = (yyvsp[(1) - (2)].range);
				;}
    break;

  case 1231:
#line 33 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGAlias *alias = makeNode(PGAlias);
					alias->aliasname = (yyvsp[(3) - (3)].str);
					(yyvsp[(1) - (3)].range)->alias = alias;
					(yyval.range) = (yyvsp[(1) - (3)].range);
				;}
    break;

  case 1232:
#line 43 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 1233:
#line 44 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1234:
#line 50 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1235:
#line 51 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1236:
#line 10 "third_party/libpg_query/grammar/statements/analyze.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_ANALYZE;
					if ((yyvsp[(2) - (2)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1237:
#line 20 "third_party/libpg_query/grammar/statements/analyze.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_ANALYZE;
					if ((yyvsp[(2) - (4)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = (yyvsp[(3) - (4)].range);
					n->va_cols = (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1238:
#line 2 "third_party/libpg_query/grammar/statements/variable_reset.y"
    { (yyval.node) = (PGNode *) (yyvsp[(2) - (2)].vsetstmt); ;}
    break;

  case 1239:
#line 8 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (yyvsp[(1) - (1)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1240:
#line 15 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET_ALL;
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1241:
#line 24 "third_party/libpg_query/grammar/statements/variable_reset.y"
    { (yyval.vsetstmt) = (yyvsp[(1) - (1)].vsetstmt); ;}
    break;

  case 1242:
#line 26 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (char*) "timezone";
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1243:
#line 33 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (char*) "transaction_isolation";
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1244:
#line 3 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowSelectStmt *n = makeNode(PGVariableShowSelectStmt);
				n->stmt = (yyvsp[(2) - (2)].node);
				n->name = (char*) "select";
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1245:
#line 10 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowSelectStmt *n = makeNode(PGVariableShowSelectStmt);
				n->stmt = (yyvsp[(2) - (2)].node);
				n->name = (char*) "select";
				n->is_summary = 1;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1246:
#line 18 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (yyvsp[(2) - (2)].str);
				n->is_summary = 1;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1247:
#line 25 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (yyvsp[(2) - (2)].str);
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1248:
#line 32 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (char*) "timezone";
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1249:
#line 39 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (char*) "transaction_isolation";
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1250:
#line 46 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (char*) "__show_tables_expanded";
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1251:
#line 53 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
				n->name = (char*) "__show_tables_expanded";
				n->is_summary = 0;
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1254:
#line 63 "third_party/libpg_query/grammar/statements/variable_show.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1255:
#line 65 "third_party/libpg_query/grammar/statements/variable_show.y"
    { (yyval.str) = psprintf("%s.%s", (yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str)); ;}
    break;

  case 1256:
#line 7 "third_party/libpg_query/grammar/statements/call.y"
    {
					PGCallStmt *n = makeNode(PGCallStmt);
					n->func = (yyvsp[(2) - (2)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1257:
#line 10 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(4) - (9)].range);
					n->view->relpersistence = (yyvsp[(2) - (9)].ival);
					n->aliases = (yyvsp[(5) - (9)].list);
					n->query = (yyvsp[(8) - (9)].node);
					n->onconflict = PG_ERROR_ON_CONFLICT;
					n->options = (yyvsp[(6) - (9)].list);
					n->withCheckOption = (yyvsp[(9) - (9)].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1258:
#line 23 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(6) - (11)].range);
					n->view->relpersistence = (yyvsp[(4) - (11)].ival);
					n->aliases = (yyvsp[(7) - (11)].list);
					n->query = (yyvsp[(10) - (11)].node);
					n->onconflict = PG_REPLACE_ON_CONFLICT;
					n->options = (yyvsp[(8) - (11)].list);
					n->withCheckOption = (yyvsp[(11) - (11)].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1259:
#line 36 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(5) - (12)].range);
					n->view->relpersistence = (yyvsp[(2) - (12)].ival);
					n->aliases = (yyvsp[(7) - (12)].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[(11) - (12)].node));
					n->onconflict = PG_ERROR_ON_CONFLICT;
					n->options = (yyvsp[(9) - (12)].list);
					n->withCheckOption = (yyvsp[(12) - (12)].viewcheckoption);
					if (n->withCheckOption != PG_NO_CHECK_OPTION)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[(12) - (12)]))));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1260:
#line 54 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(7) - (14)].range);
					n->view->relpersistence = (yyvsp[(4) - (14)].ival);
					n->aliases = (yyvsp[(9) - (14)].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[(13) - (14)].node));
					n->onconflict = PG_REPLACE_ON_CONFLICT;
					n->options = (yyvsp[(11) - (14)].list);
					n->withCheckOption = (yyvsp[(14) - (14)].viewcheckoption);
					if (n->withCheckOption != PG_NO_CHECK_OPTION)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[(14) - (14)]))));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1261:
#line 74 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; ;}
    break;

  case 1262:
#line 75 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; ;}
    break;

  case 1263:
#line 76 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = PG_LOCAL_CHECK_OPTION; ;}
    break;

  case 1264:
#line 77 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = PG_NO_CHECK_OPTION; ;}
    break;

  case 1265:
#line 12 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(6) - (7)].node);
					ctas->into = (yyvsp[(4) - (7)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_ERROR_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(4) - (7)].into)->rel->relpersistence = (yyvsp[(2) - (7)].ival);
					(yyvsp[(4) - (7)].into)->skipData = !((yyvsp[(7) - (7)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1266:
#line 25 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(9) - (10)].node);
					ctas->into = (yyvsp[(7) - (10)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_IGNORE_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(7) - (10)].into)->rel->relpersistence = (yyvsp[(2) - (10)].ival);
					(yyvsp[(7) - (10)].into)->skipData = !((yyvsp[(10) - (10)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1267:
#line 38 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(8) - (9)].node);
					ctas->into = (yyvsp[(6) - (9)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->onconflict = PG_REPLACE_ON_CONFLICT;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(6) - (9)].into)->rel->relpersistence = (yyvsp[(4) - (9)].ival);
					(yyvsp[(6) - (9)].into)->skipData = !((yyvsp[(9) - (9)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1268:
#line 54 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1269:
#line 55 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1270:
#line 56 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1271:
#line 62 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					(yyval.into) = makeNode(PGIntoClause);
					(yyval.into)->rel = (yyvsp[(1) - (4)].range);
					(yyval.into)->colNames = (yyvsp[(2) - (4)].list);
					(yyval.into)->options = (yyvsp[(3) - (4)].list);
					(yyval.into)->onCommit = (yyvsp[(4) - (4)].oncommit);
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;		/* might get changed later */
				;}
    break;


/* Line 1267 of yacc.c.  */
#line 25216 "third_party/libpg_query/grammar/grammar_out.cpp"
      default: break;
    }
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;
  *++yylsp = yyloc;

  /* Now `shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*------------------------------------.
| yyerrlab -- here on detecting error |
`------------------------------------*/
yyerrlab:
  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (&yylloc, yyscanner, YY_("syntax error"));
#else
      {
	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
	  {
	    YYSIZE_T yyalloc = 2 * yysize;
	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
	    if (yymsg != yymsgbuf)
	      YYSTACK_FREE (yymsg);
	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
	    if (yymsg)
	      yymsg_alloc = yyalloc;
	    else
	      {
		yymsg = yymsgbuf;
		yymsg_alloc = sizeof yymsgbuf;
	      }
	  }

	if (0 < yysize && yysize <= yymsg_alloc)
	  {
	    (void) yysyntax_error (yymsg, yystate, yychar);
	    yyerror (&yylloc, yyscanner, yymsg);
	  }
	else
	  {
	    yyerror (&yylloc, yyscanner, YY_("syntax error"));
	    if (yysize != 0)
	      goto yyexhaustedlab;
	  }
      }
#endif
    }

  yyerror_range[0] = yylloc;

  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse look-ahead token after an
	 error, discard it.  */

      if (yychar <= YYEOF)
	{
	  /* Return failure if at end of input.  */
	  if (yychar == YYEOF)
	    YYABORT;
	}
      else
	{
	  yydestruct ("Error: discarding",
		      yytoken, &yylval, &yylloc, yyscanner);
	  yychar = YYEMPTY;
	}
    }

  /* Else will try to reuse look-ahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  yyerror_range[0] = yylsp[1-yylen];
  /* Do not reclaim the symbols of the rule which action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;	/* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (yyn != YYPACT_NINF)
	{
	  yyn += YYTERROR;
	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
	    {
	      yyn = yytable[yyn];
	      if (0 < yyn)
		break;
	    }
	}

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
	YYABORT;

      yyerror_range[0] = *yylsp;
      yydestruct ("Error: popping",
		  yystos[yystate], yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  *++yyvsp = yylval;

  yyerror_range[1] = yylloc;
  /* Using YYLLOC is tempting, but would change the location of
     the look-ahead.  YYLOC is available though.  */
  YYLLOC_DEFAULT (yyloc, (yyerror_range - 1), 2);
  *++yylsp = yyloc;

  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#ifndef yyoverflow
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (&yylloc, yyscanner, YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEOF && yychar != YYEMPTY)
     yydestruct ("Cleanup: discarding lookahead",
		 yytoken, &yylval, &yylloc, yyscanner);
  /* Do not reclaim the symbols of the rule which action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
		  yystos[*yyssp], yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  /* Make sure YYID is used.  */
  return YYID (yyresult);
}


#line 83 "third_party/libpg_query/grammar/statements/create_as.y"


#line 1 "third_party/libpg_query/grammar/grammar.cpp"
/*
 * The signature of this function is required by bison.  However, we
 * ignore the passed yylloc and instead use the last token position
 * available from the scanner.
 */
static void
base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner, const char *msg)
{
	parser_yyerror(msg);
}

static PGRawStmt *
makeRawStmt(PGNode *stmt, int stmt_location)
{
	PGRawStmt    *rs = makeNode(PGRawStmt);

	rs->stmt = stmt;
	rs->stmt_location = stmt_location;
	rs->stmt_len = 0;			/* might get changed later */
	return rs;
}

/* Adjust a PGRawStmt to reflect that it doesn't run to the end of the string */
static void
updateRawStmtEnd(PGRawStmt *rs, int end_location)
{
	/*
	 * If we already set the length, don't change it.  This is for situations
	 * like "select foo ;; select bar" where the same statement will be last
	 * in the string for more than one semicolon.
	 */
	if (rs->stmt_len > 0)
		return;

	/* OK, update length of PGRawStmt */
	rs->stmt_len = end_location - rs->stmt_location;
}

static PGNode *
makeColumnRef(char *colname, PGList *indirection,
			  int location, core_yyscan_t yyscanner)
{
	/*
	 * Generate a PGColumnRef node, with an PGAIndirection node added if there
	 * is any subscripting in the specified indirection list.  However,
	 * any field selection at the start of the indirection list must be
	 * transposed into the "fields" part of the PGColumnRef node.
	 */
	PGColumnRef  *c = makeNode(PGColumnRef);
	int		nfields = 0;
	PGListCell *l;

	c->location = location;
	foreach(l, indirection)
	{
		if (IsA(lfirst(l), PGAIndices))
		{
			PGAIndirection *i = makeNode(PGAIndirection);

			if (nfields == 0)
			{
				/* easy case - all indirection goes to PGAIndirection */
				c->fields = list_make1(makeString(colname));
				i->indirection = check_indirection(indirection, yyscanner);
			}
			else
			{
				/* got to split the list in two */
				i->indirection = check_indirection(list_copy_tail(indirection,
																  nfields),
												   yyscanner);
				indirection = list_truncate(indirection, nfields);
				c->fields = lcons(makeString(colname), indirection);
			}
			i->arg = (PGNode *) c;
			return (PGNode *) i;
		}
		else if (IsA(lfirst(l), PGAStar))
		{
			/* We only allow '*' at the end of a PGColumnRef */
			if (lnext(l) != NULL)
				parser_yyerror("improper use of \"*\"");
		}
		nfields++;
	}
	/* No subscripting, so all indirection gets added to field list */
	c->fields = lcons(makeString(colname), indirection);
	return (PGNode *) c;
}

static PGNode *
makeTypeCast(PGNode *arg, PGTypeName *tpname, int trycast, int location)
{
	PGTypeCast *n = makeNode(PGTypeCast);
	n->arg = arg;
	n->typeName = tpname;
	n->tryCast = trycast;
	n->location = location;
	return (PGNode *) n;
}

static PGNode *
makeStringConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGString;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeStringConstCast(char *str, int location, PGTypeName *tpname)
{
	PGNode *s = makeStringConst(str, location);

	return makeTypeCast(s, tpname, 0, -1);
}

static PGNode *
makeIntervalNode(char *str, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGString;
	n->sval = str;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;

}

static PGNode *
makeIntervalNode(int val, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGInteger;
	n->ival = val;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;
}

static PGNode *
makeIntervalNode(PGNode *arg, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGAExpr;
	n->eval = arg;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;
}

static PGNode *
makeSampleSize(PGValue *sample_size, bool is_percentage) {
	PGSampleSize *n = makeNode(PGSampleSize);

	n->sample_size = *sample_size;
	n->is_percentage = is_percentage;

	return (PGNode *)n;
}

static PGNode *
makeSampleOptions(PGNode *sample_size, char *method, int seed, int location) {
	PGSampleOptions *n = makeNode(PGSampleOptions);

	n->sample_size = sample_size;
	n->method = method;
	n->seed = seed;
	n->location = location;

	return (PGNode *)n;
}

/* makeLimitPercent()
 * Make limit percent node
 */
static PGNode *
makeLimitPercent(PGNode *limit_percent) {
	PGLimitPercent *n = makeNode(PGLimitPercent);

	n->limit_percent = limit_percent;

	return (PGNode *)n;
}

static PGNode *
makeIntConst(int val, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGInteger;
	n->val.val.ival = val;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeFloatConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGFloat;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeBitStringConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGBitString;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeNullAConst(int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGNull;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeAConst(PGValue *v, int location)
{
	PGNode *n;

	switch (v->type)
	{
		case T_PGFloat:
			n = makeFloatConst(v->val.str, location);
			break;

		case T_PGInteger:
			n = makeIntConst(v->val.ival, location);
			break;

		case T_PGString:
		default:
			n = makeStringConst(v->val.str, location);
			break;
	}

	return n;
}

/* makeBoolAConst()
 * Create an PGAConst string node and put it inside a boolean cast.
 */
static PGNode *
makeBoolAConst(bool state, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGString;
	n->val.val.str = (state ? (char*) "t" : (char*) "f");
	n->location = location;

	return makeTypeCast((PGNode *)n, SystemTypeName("bool"), 0, -1);
}

/* check_qualified_name --- check the result of qualified_name production
 *
 * It's easiest to let the grammar production for qualified_name allow
 * subscripts and '*', which we then must reject here.
 */
static void
check_qualified_name(PGList *names, core_yyscan_t yyscanner)
{
	PGListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), PGString))
			parser_yyerror("syntax error");
	}
}

/* check_func_name --- check the result of func_name production
 *
 * It's easiest to let the grammar production for func_name allow subscripts
 * and '*', which we then must reject here.
 */
static PGList *
check_func_name(PGList *names, core_yyscan_t yyscanner)
{
	PGListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), PGString))
			parser_yyerror("syntax error");
	}
	return names;
}

/* check_indirection --- check the result of indirection production
 *
 * We only allow '*' at the end of the list, but it's hard to enforce that
 * in the grammar, so do it here.
 */
static PGList *
check_indirection(PGList *indirection, core_yyscan_t yyscanner)
{
	PGListCell *l;

	foreach(l, indirection)
	{
		if (IsA(lfirst(l), PGAStar))
		{
			if (lnext(l) != NULL)
				parser_yyerror("improper use of \"*\"");
		}
	}
	return indirection;
}

/* makeParamRef
 * Creates a new PGParamRef node
 */
static PGNode* makeParamRef(int number, int location)
{
	PGParamRef *p = makeNode(PGParamRef);
	p->number = number;
	p->location = location;
	return (PGNode *) p;
}


/* insertSelectOptions()
 * Insert ORDER BY, etc into an already-constructed SelectStmt.
 *
 * This routine is just to avoid duplicating code in PGSelectStmt productions.
 */
static void
insertSelectOptions(PGSelectStmt *stmt,
					PGList *sortClause, PGList *lockingClause,
					PGNode *limitOffset, PGNode *limitCount,
					PGWithClause *withClause,
					core_yyscan_t yyscanner)
{
	Assert(IsA(stmt, PGSelectStmt));

	/*
	 * Tests here are to reject constructs like
	 *	(SELECT foo ORDER BY bar) ORDER BY baz
	 */
	if (sortClause)
	{
		if (stmt->sortClause)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple ORDER BY clauses not allowed"),
					 parser_errposition(exprLocation((PGNode *) sortClause))));
		stmt->sortClause = sortClause;
	}
	/* We can handle multiple locking clauses, though */
	stmt->lockingClause = list_concat(stmt->lockingClause, lockingClause);
	if (limitOffset)
	{
		if (stmt->limitOffset)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple OFFSET clauses not allowed"),
					 parser_errposition(exprLocation(limitOffset))));
		stmt->limitOffset = limitOffset;
	}
	if (limitCount)
	{
		if (stmt->limitCount)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple LIMIT clauses not allowed"),
					 parser_errposition(exprLocation(limitCount))));
		stmt->limitCount = limitCount;
	}
	if (withClause)
	{
		if (stmt->withClause)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple WITH clauses not allowed"),
					 parser_errposition(exprLocation((PGNode *) withClause))));
		stmt->withClause = withClause;
	}
}

static PGNode *
makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg)
{
	PGSelectStmt *n = makeNode(PGSelectStmt);

	n->op = op;
	n->all = all;
	n->larg = (PGSelectStmt *) larg;
	n->rarg = (PGSelectStmt *) rarg;
	return (PGNode *) n;
}

/* SystemFuncName()
 * Build a properly-qualified reference to a built-in function.
 */
PGList *
SystemFuncName(const char *name)
{
	return list_make2(makeString(DEFAULT_SCHEMA), makeString(name));
}

/* SystemTypeName()
 * Build a properly-qualified reference to a built-in type.
 *
 * typmod is defaulted, but may be changed afterwards by caller.
 * Likewise for the location.
 */
PGTypeName *
SystemTypeName(const char *name)
{
	return makeTypeNameFromNameList(list_make2(makeString(DEFAULT_SCHEMA),
											   makeString(name)));
}

/* doNegate()
 * Handle negation of a numeric constant.
 *
 * Formerly, we did this here because the optimizer couldn't cope with
 * indexquals that looked like "var = -4" --- it wants "var = const"
 * and a unary minus operator applied to a constant didn't qualify.
 * As of Postgres 7.0, that problem doesn't exist anymore because there
 * is a constant-subexpression simplifier in the optimizer.  However,
 * there's still a good reason for doing this here, which is that we can
 * postpone committing to a particular internal representation for simple
 * negative constants.	It's better to leave "-123.456" in string form
 * until we know what the desired type is.
 */
static PGNode *
doNegate(PGNode *n, int location)
{
	if (IsA(n, PGAConst))
	{
		PGAConst *con = (PGAConst *)n;

		/* report the constant's location as that of the '-' sign */
		con->location = location;

		if (con->val.type == T_PGInteger)
		{
			con->val.val.ival = -con->val.val.ival;
			return n;
		}
		if (con->val.type == T_PGFloat)
		{
			doNegateFloat(&con->val);
			return n;
		}
	}

	return (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", NULL, n, location);
}

static void
doNegateFloat(PGValue *v)
{
	char   *oldval = v->val.str;

	Assert(IsA(v, PGFloat));
	if (*oldval == '+')
		oldval++;
	if (*oldval == '-')
		v->val.str = oldval+1;	/* just strip the '-' */
	else
		v->val.str = psprintf("-%s", oldval);
}

static PGNode *
makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location)
{
	PGNode	   *lexp = lexpr;

	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
	while (IsA(lexp, PGAExpr) &&
		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
		lexp = ((PGAExpr *) lexp)->lexpr;
	/* Flatten "a AND b AND c ..." to a single PGBoolExpr on sight */
	if (IsA(lexp, PGBoolExpr))
	{
		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;

		if (blexpr->boolop == PG_AND_EXPR)
		{
			blexpr->args = lappend(blexpr->args, rexpr);
			return (PGNode *) blexpr;
		}
	}
	return (PGNode *) makeBoolExpr(PG_AND_EXPR, list_make2(lexpr, rexpr), location);
}

static PGNode *
makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location)
{
	PGNode	   *lexp = lexpr;

	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
	while (IsA(lexp, PGAExpr) &&
		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
		lexp = ((PGAExpr *) lexp)->lexpr;
	/* Flatten "a OR b OR c ..." to a single PGBoolExpr on sight */
	if (IsA(lexp, PGBoolExpr))
	{
		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;

		if (blexpr->boolop == PG_OR_EXPR)
		{
			blexpr->args = lappend(blexpr->args, rexpr);
			return (PGNode *) blexpr;
		}
	}
	return (PGNode *) makeBoolExpr(PG_OR_EXPR, list_make2(lexpr, rexpr), location);
}

static PGNode *
makeNotExpr(PGNode *expr, int location)
{
	return (PGNode *) makeBoolExpr(PG_NOT_EXPR, list_make1(expr), location);
}

static PGNode *
makeSQLValueFunction(PGSQLValueFunctionOp op, int32_t typmod, int location)
{
	PGSQLValueFunction *svf = makeNode(PGSQLValueFunction);

	svf->op = op;
	/* svf->type will be filled during parse analysis */
	svf->typmod = typmod;
	svf->location = location;
	return (PGNode *) svf;
}

/* Separate PGConstraint nodes from COLLATE clauses in a */
static void
SplitColQualList(PGList *qualList,
				 PGList **constraintList, PGCollateClause **collClause,
				 core_yyscan_t yyscanner)
{
	PGListCell   *cell;
	PGListCell   *prev;
	PGListCell   *next;

	*collClause = NULL;
	prev = NULL;
	for (cell = list_head(qualList); cell; cell = next)
	{
		PGNode   *n = (PGNode *) lfirst(cell);

		next = lnext(cell);
		if (IsA(n, PGConstraint))
		{
			/* keep it in list */
			prev = cell;
			continue;
		}
		if (IsA(n, PGCollateClause))
		{
			PGCollateClause *c = (PGCollateClause *) n;

			if (*collClause)
				ereport(ERROR,
						(errcode(PG_ERRCODE_SYNTAX_ERROR),
						 errmsg("multiple COLLATE clauses not allowed"),
						 parser_errposition(c->location)));
			*collClause = c;
		}
		else
			elog(ERROR, "unexpected node type %d", (int) n->type);
		/* remove non-Constraint nodes from qualList */
		qualList = list_delete_cell(qualList, cell, prev);
	}
	*constraintList = qualList;
}

/*
 * Process result of ConstraintAttributeSpec, and set appropriate bool flags
 * in the output command node.  Pass NULL for any flags the particular
 * command doesn't support.
 */
static void
processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner)
{
	/* defaults */
	if (deferrable)
		*deferrable = false;
	if (initdeferred)
		*initdeferred = false;
	if (not_valid)
		*not_valid = false;

	if (cas_bits & (CAS_DEFERRABLE | CAS_INITIALLY_DEFERRED))
	{
		if (deferrable)
			*deferrable = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_INITIALLY_DEFERRED)
	{
		if (initdeferred)
			*initdeferred = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_NOT_VALID)
	{
		if (not_valid)
			*not_valid = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NOT VALID",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_NO_INHERIT)
	{
		if (no_inherit)
			*no_inherit = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NO INHERIT",
							constrType),
					 parser_errposition(location)));
	}
}

/*----------
 * Recursive view transformation
 *
 * Convert
 *
 *     CREATE RECURSIVE VIEW relname (aliases) AS query
 *
 * to
 *
 *     CREATE VIEW relname (aliases) AS
 *         WITH RECURSIVE relname (aliases) AS (query)
 *         SELECT aliases FROM relname
 *
 * Actually, just the WITH ... part, which is then inserted into the original
 * view as the query.
 * ----------
 */
static PGNode *
makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query)
{
	PGSelectStmt *s = makeNode(PGSelectStmt);
	PGWithClause *w = makeNode(PGWithClause);
	PGCommonTableExpr *cte = makeNode(PGCommonTableExpr);
	PGList	   *tl = NIL;
	PGListCell   *lc;

	/* create common table expression */
	cte->ctename = relname;
	cte->aliascolnames = aliases;
	cte->ctequery = query;
	cte->location = -1;

	/* create WITH clause and attach CTE */
	w->recursive = true;
	w->ctes = list_make1(cte);
	w->location = -1;

	/* create target list for the new SELECT from the alias list of the
	 * recursive view specification */
	foreach (lc, aliases)
	{
		PGResTarget *rt = makeNode(PGResTarget);

		rt->name = NULL;
		rt->indirection = NIL;
		rt->val = makeColumnRef(strVal(lfirst(lc)), NIL, -1, 0);
		rt->location = -1;

		tl = lappend(tl, rt);
	}

	/* create new SELECT combining WITH clause, target list, and fake FROM
	 * clause */
	s->withClause = w;
	s->targetList = tl;
	s->fromClause = list_make1(makeRangeVar(NULL, relname, -1));

	return (PGNode *) s;
}

/* parser_init()
 * Initialize to parse one query string
 */
void
parser_init(base_yy_extra_type *yyext)
{
	yyext->parsetree = NIL;		/* in case grammar forgets to set it */
}

#undef yyparse
#undef yylex
#undef yyerror
#undef yylval
#undef yychar
#undef yydebug
#undef yynerrs
#undef yylloc

} // namespace duckdb_libpgquery

