/* A Bison parser, made by GNU Bison 2.3.  */

/* Skeleton implementation for Bison's Yacc-like parsers in C

   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
   Free Software Foundation, Inc.

   This program is free software; you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation; either version 2, or (at your option)
   any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program; if not, write to the Free Software
   Foundation, Inc., 51 Franklin Street, Fifth Floor,
   Boston, MA 02110-1301, USA.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "2.3"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Using locations.  */
#define YYLSP_NEEDED 1

/* Substitute the variable and function names.  */
#define yyparse base_yyparse
#define yylex   base_yylex
#define yyerror base_yyerror
#define yylval  base_yylval
#define yychar  base_yychar
#define yydebug base_yydebug
#define yynerrs base_yynerrs
#define yylloc base_yylloc

/* Tokens.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
   /* Put the tokens into the symbol table, so that GDB and other debuggers
      know about them.  */
   enum yytokentype {
     IDENT = 258,
     FCONST = 259,
     SCONST = 260,
     BCONST = 261,
     XCONST = 262,
     Op = 263,
     ICONST = 264,
     PARAM = 265,
     TYPECAST = 266,
     DOT_DOT = 267,
     COLON_EQUALS = 268,
     EQUALS_GREATER = 269,
     LAMBDA_ARROW = 270,
     LESS_EQUALS = 271,
     GREATER_EQUALS = 272,
     NOT_EQUALS = 273,
     ABORT_P = 274,
     ABSOLUTE_P = 275,
     ACCESS = 276,
     ACTION = 277,
     ADD_P = 278,
     ADMIN = 279,
     AFTER = 280,
     AGGREGATE = 281,
     ALL = 282,
     ALSO = 283,
     ALTER = 284,
     ALWAYS = 285,
     ANALYSE = 286,
     ANALYZE = 287,
     AND = 288,
     ANY = 289,
     ARRAY = 290,
     AS = 291,
     ASC_P = 292,
     ASSERTION = 293,
     ASSIGNMENT = 294,
     ASYMMETRIC = 295,
     AT = 296,
     ATTACH = 297,
     ATTRIBUTE = 298,
     AUTHORIZATION = 299,
     BACKWARD = 300,
     BEFORE = 301,
     BEGIN_P = 302,
     BETWEEN = 303,
     BIGINT = 304,
     BINARY = 305,
     BIT = 306,
     BOOLEAN_P = 307,
     BOTH = 308,
     BY = 309,
     CACHE = 310,
     CALL_P = 311,
     CALLED = 312,
     CASCADE = 313,
     CASCADED = 314,
     CASE = 315,
     CAST = 316,
     CATALOG_P = 317,
     CHAIN = 318,
     CHAR_P = 319,
     CHARACTER = 320,
     CHARACTERISTICS = 321,
     CHECK_P = 322,
     CHECKPOINT = 323,
     CLASS = 324,
     CLOSE = 325,
     CLUSTER = 326,
     COALESCE = 327,
     COLLATE = 328,
     COLLATION = 329,
     COLUMN = 330,
     COLUMNS = 331,
     COMMENT = 332,
     COMMENTS = 333,
     COMMIT = 334,
     COMMITTED = 335,
     CONCURRENTLY = 336,
     CONFIGURATION = 337,
     CONFLICT = 338,
     CONNECTION = 339,
     CONSTRAINT = 340,
     CONSTRAINTS = 341,
     CONTENT_P = 342,
     CONTINUE_P = 343,
     CONVERSION_P = 344,
     COPY = 345,
     COST = 346,
     CREATE_P = 347,
     CROSS = 348,
     CSV = 349,
     CUBE = 350,
     CURRENT_P = 351,
     CURRENT_CATALOG = 352,
     CURRENT_DATE = 353,
     CURRENT_ROLE = 354,
     CURRENT_SCHEMA = 355,
     CURRENT_TIME = 356,
     CURRENT_TIMESTAMP = 357,
     CURRENT_USER = 358,
     CURSOR = 359,
     CYCLE = 360,
     DATA_P = 361,
     DATABASE = 362,
     DAY_P = 363,
     DAYS_P = 364,
     DEALLOCATE = 365,
     DEC = 366,
     DECIMAL_P = 367,
     DECLARE = 368,
     DEFAULT = 369,
     DEFAULTS = 370,
     DEFERRABLE = 371,
     DEFERRED = 372,
     DEFINER = 373,
     DELETE_P = 374,
     DELIMITER = 375,
     DELIMITERS = 376,
     DEPENDS = 377,
     DESC_P = 378,
     DESCRIBE = 379,
     DETACH = 380,
     DICTIONARY = 381,
     DISABLE_P = 382,
     DISCARD = 383,
     DISTINCT = 384,
     DO = 385,
     DOCUMENT_P = 386,
     DOMAIN_P = 387,
     DOUBLE_P = 388,
     DROP = 389,
     EACH = 390,
     ELSE = 391,
     ENABLE_P = 392,
     ENCODING = 393,
     ENCRYPTED = 394,
     END_P = 395,
     ENUM_P = 396,
     ESCAPE = 397,
     EVENT = 398,
     EXCEPT = 399,
     EXCLUDE = 400,
     EXCLUDING = 401,
     EXCLUSIVE = 402,
     EXECUTE = 403,
     EXISTS = 404,
     EXPLAIN = 405,
     EXPORT_P = 406,
     EXTENSION = 407,
     EXTERNAL = 408,
     EXTRACT = 409,
     FALSE_P = 410,
     FAMILY = 411,
     FETCH = 412,
     FILTER = 413,
     FIRST_P = 414,
     FLOAT_P = 415,
     FOLLOWING = 416,
     FOR = 417,
     FORCE = 418,
     FOREIGN = 419,
     FORWARD = 420,
     FREEZE = 421,
     FROM = 422,
     FULL = 423,
     FUNCTION = 424,
     FUNCTIONS = 425,
     GENERATED = 426,
     GLOB = 427,
     GLOBAL = 428,
     GRANT = 429,
     GRANTED = 430,
     GROUP_P = 431,
     GROUPING = 432,
     HANDLER = 433,
     HAVING = 434,
     HEADER_P = 435,
     HOLD = 436,
     HOUR_P = 437,
     HOURS_P = 438,
     IDENTITY_P = 439,
     IF_P = 440,
     ILIKE = 441,
     IMMEDIATE = 442,
     IMMUTABLE = 443,
     IMPLICIT_P = 444,
     IMPORT_P = 445,
     IN_P = 446,
     INCLUDING = 447,
     INCREMENT = 448,
     INDEX = 449,
     INDEXES = 450,
     INHERIT = 451,
     INHERITS = 452,
     INITIALLY = 453,
     INLINE_P = 454,
     INNER_P = 455,
     INOUT = 456,
     INPUT_P = 457,
     INSENSITIVE = 458,
     INSERT = 459,
     INSTEAD = 460,
     INT_P = 461,
     INTEGER = 462,
     INTERSECT = 463,
     INTERVAL = 464,
     INTO = 465,
     INVOKER = 466,
     IS = 467,
     ISNULL = 468,
     ISOLATION = 469,
     JOIN = 470,
     KEY = 471,
     LABEL = 472,
     LANGUAGE = 473,
     LARGE_P = 474,
     LAST_P = 475,
     LATERAL_P = 476,
     LEADING = 477,
     LEAKPROOF = 478,
     LEFT = 479,
     LEVEL = 480,
     LIKE = 481,
     LIMIT = 482,
     LISTEN = 483,
     LOAD = 484,
     LOCAL = 485,
     LOCALTIME = 486,
     LOCALTIMESTAMP = 487,
     LOCATION = 488,
     LOCK_P = 489,
     LOCKED = 490,
     LOGGED = 491,
     MACRO = 492,
     MAP = 493,
     MAPPING = 494,
     MATCH = 495,
     MATERIALIZED = 496,
     MAXVALUE = 497,
     METHOD = 498,
     MICROSECOND_P = 499,
     MICROSECONDS_P = 500,
     MILLISECOND_P = 501,
     MILLISECONDS_P = 502,
     MINUTE_P = 503,
     MINUTES_P = 504,
     MINVALUE = 505,
     MODE = 506,
     MONTH_P = 507,
     MONTHS_P = 508,
     MOVE = 509,
     NAME_P = 510,
     NAMES = 511,
     NATIONAL = 512,
     NATURAL = 513,
     NCHAR = 514,
     NEW = 515,
     NEXT = 516,
     NO = 517,
     NONE = 518,
     NOT = 519,
     NOTHING = 520,
     NOTIFY = 521,
     NOTNULL = 522,
     NOWAIT = 523,
     NULL_P = 524,
     NULLIF = 525,
     NULLS_P = 526,
     NUMERIC = 527,
     OBJECT_P = 528,
     OF = 529,
     OFF = 530,
     OFFSET = 531,
     OIDS = 532,
     OLD = 533,
     ON = 534,
     ONLY = 535,
     OPERATOR = 536,
     OPTION = 537,
     OPTIONS = 538,
     OR = 539,
     ORDER = 540,
     ORDINALITY = 541,
     OUT_P = 542,
     OUTER_P = 543,
     OVER = 544,
     OVERLAPS = 545,
     OVERLAY = 546,
     OVERRIDING = 547,
     OWNED = 548,
     OWNER = 549,
     PARALLEL = 550,
     PARSER = 551,
     PARTIAL = 552,
     PARTITION = 553,
     PASSING = 554,
     PASSWORD = 555,
     PERCENT = 556,
     PLACING = 557,
     PLANS = 558,
     POLICY = 559,
     POSITION = 560,
     PRAGMA_P = 561,
     PRECEDING = 562,
     PRECISION = 563,
     PREPARE = 564,
     PREPARED = 565,
     PRESERVE = 566,
     PRIMARY = 567,
     PRIOR = 568,
     PRIVILEGES = 569,
     PROCEDURAL = 570,
     PROCEDURE = 571,
     PROGRAM = 572,
     PUBLICATION = 573,
     QUOTE = 574,
     RANGE = 575,
     READ_P = 576,
     REAL = 577,
     REASSIGN = 578,
     RECHECK = 579,
     RECURSIVE = 580,
     REF = 581,
     REFERENCES = 582,
     REFERENCING = 583,
     REFRESH = 584,
     REINDEX = 585,
     RELATIVE_P = 586,
     RELEASE = 587,
     RENAME = 588,
     REPEATABLE = 589,
     REPLACE = 590,
     REPLICA = 591,
     RESET = 592,
     RESTART = 593,
     RESTRICT = 594,
     RETURNING = 595,
     RETURNS = 596,
     REVOKE = 597,
     RIGHT = 598,
     ROLE = 599,
     ROLLBACK = 600,
     ROLLUP = 601,
     ROW = 602,
     ROWS = 603,
     RULE = 604,
     SAMPLE = 605,
     SAVEPOINT = 606,
     SCHEMA = 607,
     SCHEMAS = 608,
     SCROLL = 609,
     SEARCH = 610,
     SECOND_P = 611,
     SECONDS_P = 612,
     SECURITY = 613,
     SELECT = 614,
     SEQUENCE = 615,
     SEQUENCES = 616,
     SERIALIZABLE = 617,
     SERVER = 618,
     SESSION = 619,
     SESSION_USER = 620,
     SET = 621,
     SETOF = 622,
     SETS = 623,
     SHARE = 624,
     SHOW = 625,
     SIMILAR = 626,
     SIMPLE = 627,
     SKIP = 628,
     SMALLINT = 629,
     SNAPSHOT = 630,
     SOME = 631,
     SQL_P = 632,
     STABLE = 633,
     STANDALONE_P = 634,
     START = 635,
     STATEMENT = 636,
     STATISTICS = 637,
     STDIN = 638,
     STDOUT = 639,
     STORAGE = 640,
     STRICT_P = 641,
     STRIP_P = 642,
     STRUCT = 643,
     SUBSCRIPTION = 644,
     SUBSTRING = 645,
     SYMMETRIC = 646,
     SYSID = 647,
     SYSTEM_P = 648,
     TABLE = 649,
     TABLES = 650,
     TABLESAMPLE = 651,
     TABLESPACE = 652,
     TEMP = 653,
     TEMPLATE = 654,
     TEMPORARY = 655,
     TEXT_P = 656,
     THEN = 657,
     TIME = 658,
     TIMESTAMP = 659,
     TO = 660,
     TRAILING = 661,
     TRANSACTION = 662,
     TRANSFORM = 663,
     TREAT = 664,
     TRIGGER = 665,
     TRIM = 666,
     TRUE_P = 667,
     TRUNCATE = 668,
     TRUSTED = 669,
     TYPE_P = 670,
     TYPES_P = 671,
     UNBOUNDED = 672,
     UNCOMMITTED = 673,
     UNENCRYPTED = 674,
     UNION = 675,
     UNIQUE = 676,
     UNKNOWN = 677,
     UNLISTEN = 678,
     UNLOGGED = 679,
     UNTIL = 680,
     UPDATE = 681,
     USER = 682,
     USING = 683,
     VACUUM = 684,
     VALID = 685,
     VALIDATE = 686,
     VALIDATOR = 687,
     VALUE_P = 688,
     VALUES = 689,
     VARCHAR = 690,
     VARIADIC = 691,
     VARYING = 692,
     VERBOSE = 693,
     VERSION_P = 694,
     VIEW = 695,
     VIEWS = 696,
     VOLATILE = 697,
     WHEN = 698,
     WHERE = 699,
     WHITESPACE_P = 700,
     WINDOW = 701,
     WITH = 702,
     WITHIN = 703,
     WITHOUT = 704,
     WORK = 705,
     WRAPPER = 706,
     WRITE_P = 707,
     XML_P = 708,
     XMLATTRIBUTES = 709,
     XMLCONCAT = 710,
     XMLELEMENT = 711,
     XMLEXISTS = 712,
     XMLFOREST = 713,
     XMLNAMESPACES = 714,
     XMLPARSE = 715,
     XMLPI = 716,
     XMLROOT = 717,
     XMLSERIALIZE = 718,
     XMLTABLE = 719,
     YEAR_P = 720,
     YEARS_P = 721,
     YES_P = 722,
     ZONE = 723,
     NOT_LA = 724,
     NULLS_LA = 725,
     WITH_LA = 726,
     POSTFIXOP = 727,
     UMINUS = 728
   };
#endif
/* Tokens.  */
#define IDENT 258
#define FCONST 259
#define SCONST 260
#define BCONST 261
#define XCONST 262
#define Op 263
#define ICONST 264
#define PARAM 265
#define TYPECAST 266
#define DOT_DOT 267
#define COLON_EQUALS 268
#define EQUALS_GREATER 269
#define LAMBDA_ARROW 270
#define LESS_EQUALS 271
#define GREATER_EQUALS 272
#define NOT_EQUALS 273
#define ABORT_P 274
#define ABSOLUTE_P 275
#define ACCESS 276
#define ACTION 277
#define ADD_P 278
#define ADMIN 279
#define AFTER 280
#define AGGREGATE 281
#define ALL 282
#define ALSO 283
#define ALTER 284
#define ALWAYS 285
#define ANALYSE 286
#define ANALYZE 287
#define AND 288
#define ANY 289
#define ARRAY 290
#define AS 291
#define ASC_P 292
#define ASSERTION 293
#define ASSIGNMENT 294
#define ASYMMETRIC 295
#define AT 296
#define ATTACH 297
#define ATTRIBUTE 298
#define AUTHORIZATION 299
#define BACKWARD 300
#define BEFORE 301
#define BEGIN_P 302
#define BETWEEN 303
#define BIGINT 304
#define BINARY 305
#define BIT 306
#define BOOLEAN_P 307
#define BOTH 308
#define BY 309
#define CACHE 310
#define CALL_P 311
#define CALLED 312
#define CASCADE 313
#define CASCADED 314
#define CASE 315
#define CAST 316
#define CATALOG_P 317
#define CHAIN 318
#define CHAR_P 319
#define CHARACTER 320
#define CHARACTERISTICS 321
#define CHECK_P 322
#define CHECKPOINT 323
#define CLASS 324
#define CLOSE 325
#define CLUSTER 326
#define COALESCE 327
#define COLLATE 328
#define COLLATION 329
#define COLUMN 330
#define COLUMNS 331
#define COMMENT 332
#define COMMENTS 333
#define COMMIT 334
#define COMMITTED 335
#define CONCURRENTLY 336
#define CONFIGURATION 337
#define CONFLICT 338
#define CONNECTION 339
#define CONSTRAINT 340
#define CONSTRAINTS 341
#define CONTENT_P 342
#define CONTINUE_P 343
#define CONVERSION_P 344
#define COPY 345
#define COST 346
#define CREATE_P 347
#define CROSS 348
#define CSV 349
#define CUBE 350
#define CURRENT_P 351
#define CURRENT_CATALOG 352
#define CURRENT_DATE 353
#define CURRENT_ROLE 354
#define CURRENT_SCHEMA 355
#define CURRENT_TIME 356
#define CURRENT_TIMESTAMP 357
#define CURRENT_USER 358
#define CURSOR 359
#define CYCLE 360
#define DATA_P 361
#define DATABASE 362
#define DAY_P 363
#define DAYS_P 364
#define DEALLOCATE 365
#define DEC 366
#define DECIMAL_P 367
#define DECLARE 368
#define DEFAULT 369
#define DEFAULTS 370
#define DEFERRABLE 371
#define DEFERRED 372
#define DEFINER 373
#define DELETE_P 374
#define DELIMITER 375
#define DELIMITERS 376
#define DEPENDS 377
#define DESC_P 378
#define DESCRIBE 379
#define DETACH 380
#define DICTIONARY 381
#define DISABLE_P 382
#define DISCARD 383
#define DISTINCT 384
#define DO 385
#define DOCUMENT_P 386
#define DOMAIN_P 387
#define DOUBLE_P 388
#define DROP 389
#define EACH 390
#define ELSE 391
#define ENABLE_P 392
#define ENCODING 393
#define ENCRYPTED 394
#define END_P 395
#define ENUM_P 396
#define ESCAPE 397
#define EVENT 398
#define EXCEPT 399
#define EXCLUDE 400
#define EXCLUDING 401
#define EXCLUSIVE 402
#define EXECUTE 403
#define EXISTS 404
#define EXPLAIN 405
#define EXPORT_P 406
#define EXTENSION 407
#define EXTERNAL 408
#define EXTRACT 409
#define FALSE_P 410
#define FAMILY 411
#define FETCH 412
#define FILTER 413
#define FIRST_P 414
#define FLOAT_P 415
#define FOLLOWING 416
#define FOR 417
#define FORCE 418
#define FOREIGN 419
#define FORWARD 420
#define FREEZE 421
#define FROM 422
#define FULL 423
#define FUNCTION 424
#define FUNCTIONS 425
#define GENERATED 426
#define GLOB 427
#define GLOBAL 428
#define GRANT 429
#define GRANTED 430
#define GROUP_P 431
#define GROUPING 432
#define HANDLER 433
#define HAVING 434
#define HEADER_P 435
#define HOLD 436
#define HOUR_P 437
#define HOURS_P 438
#define IDENTITY_P 439
#define IF_P 440
#define ILIKE 441
#define IMMEDIATE 442
#define IMMUTABLE 443
#define IMPLICIT_P 444
#define IMPORT_P 445
#define IN_P 446
#define INCLUDING 447
#define INCREMENT 448
#define INDEX 449
#define INDEXES 450
#define INHERIT 451
#define INHERITS 452
#define INITIALLY 453
#define INLINE_P 454
#define INNER_P 455
#define INOUT 456
#define INPUT_P 457
#define INSENSITIVE 458
#define INSERT 459
#define INSTEAD 460
#define INT_P 461
#define INTEGER 462
#define INTERSECT 463
#define INTERVAL 464
#define INTO 465
#define INVOKER 466
#define IS 467
#define ISNULL 468
#define ISOLATION 469
#define JOIN 470
#define KEY 471
#define LABEL 472
#define LANGUAGE 473
#define LARGE_P 474
#define LAST_P 475
#define LATERAL_P 476
#define LEADING 477
#define LEAKPROOF 478
#define LEFT 479
#define LEVEL 480
#define LIKE 481
#define LIMIT 482
#define LISTEN 483
#define LOAD 484
#define LOCAL 485
#define LOCALTIME 486
#define LOCALTIMESTAMP 487
#define LOCATION 488
#define LOCK_P 489
#define LOCKED 490
#define LOGGED 491
#define MACRO 492
#define MAP 493
#define MAPPING 494
#define MATCH 495
#define MATERIALIZED 496
#define MAXVALUE 497
#define METHOD 498
#define MICROSECOND_P 499
#define MICROSECONDS_P 500
#define MILLISECOND_P 501
#define MILLISECONDS_P 502
#define MINUTE_P 503
#define MINUTES_P 504
#define MINVALUE 505
#define MODE 506
#define MONTH_P 507
#define MONTHS_P 508
#define MOVE 509
#define NAME_P 510
#define NAMES 511
#define NATIONAL 512
#define NATURAL 513
#define NCHAR 514
#define NEW 515
#define NEXT 516
#define NO 517
#define NONE 518
#define NOT 519
#define NOTHING 520
#define NOTIFY 521
#define NOTNULL 522
#define NOWAIT 523
#define NULL_P 524
#define NULLIF 525
#define NULLS_P 526
#define NUMERIC 527
#define OBJECT_P 528
#define OF 529
#define OFF 530
#define OFFSET 531
#define OIDS 532
#define OLD 533
#define ON 534
#define ONLY 535
#define OPERATOR 536
#define OPTION 537
#define OPTIONS 538
#define OR 539
#define ORDER 540
#define ORDINALITY 541
#define OUT_P 542
#define OUTER_P 543
#define OVER 544
#define OVERLAPS 545
#define OVERLAY 546
#define OVERRIDING 547
#define OWNED 548
#define OWNER 549
#define PARALLEL 550
#define PARSER 551
#define PARTIAL 552
#define PARTITION 553
#define PASSING 554
#define PASSWORD 555
#define PERCENT 556
#define PLACING 557
#define PLANS 558
#define POLICY 559
#define POSITION 560
#define PRAGMA_P 561
#define PRECEDING 562
#define PRECISION 563
#define PREPARE 564
#define PREPARED 565
#define PRESERVE 566
#define PRIMARY 567
#define PRIOR 568
#define PRIVILEGES 569
#define PROCEDURAL 570
#define PROCEDURE 571
#define PROGRAM 572
#define PUBLICATION 573
#define QUOTE 574
#define RANGE 575
#define READ_P 576
#define REAL 577
#define REASSIGN 578
#define RECHECK 579
#define RECURSIVE 580
#define REF 581
#define REFERENCES 582
#define REFERENCING 583
#define REFRESH 584
#define REINDEX 585
#define RELATIVE_P 586
#define RELEASE 587
#define RENAME 588
#define REPEATABLE 589
#define REPLACE 590
#define REPLICA 591
#define RESET 592
#define RESTART 593
#define RESTRICT 594
#define RETURNING 595
#define RETURNS 596
#define REVOKE 597
#define RIGHT 598
#define ROLE 599
#define ROLLBACK 600
#define ROLLUP 601
#define ROW 602
#define ROWS 603
#define RULE 604
#define SAMPLE 605
#define SAVEPOINT 606
#define SCHEMA 607
#define SCHEMAS 608
#define SCROLL 609
#define SEARCH 610
#define SECOND_P 611
#define SECONDS_P 612
#define SECURITY 613
#define SELECT 614
#define SEQUENCE 615
#define SEQUENCES 616
#define SERIALIZABLE 617
#define SERVER 618
#define SESSION 619
#define SESSION_USER 620
#define SET 621
#define SETOF 622
#define SETS 623
#define SHARE 624
#define SHOW 625
#define SIMILAR 626
#define SIMPLE 627
#define SKIP 628
#define SMALLINT 629
#define SNAPSHOT 630
#define SOME 631
#define SQL_P 632
#define STABLE 633
#define STANDALONE_P 634
#define START 635
#define STATEMENT 636
#define STATISTICS 637
#define STDIN 638
#define STDOUT 639
#define STORAGE 640
#define STRICT_P 641
#define STRIP_P 642
#define STRUCT 643
#define SUBSCRIPTION 644
#define SUBSTRING 645
#define SYMMETRIC 646
#define SYSID 647
#define SYSTEM_P 648
#define TABLE 649
#define TABLES 650
#define TABLESAMPLE 651
#define TABLESPACE 652
#define TEMP 653
#define TEMPLATE 654
#define TEMPORARY 655
#define TEXT_P 656
#define THEN 657
#define TIME 658
#define TIMESTAMP 659
#define TO 660
#define TRAILING 661
#define TRANSACTION 662
#define TRANSFORM 663
#define TREAT 664
#define TRIGGER 665
#define TRIM 666
#define TRUE_P 667
#define TRUNCATE 668
#define TRUSTED 669
#define TYPE_P 670
#define TYPES_P 671
#define UNBOUNDED 672
#define UNCOMMITTED 673
#define UNENCRYPTED 674
#define UNION 675
#define UNIQUE 676
#define UNKNOWN 677
#define UNLISTEN 678
#define UNLOGGED 679
#define UNTIL 680
#define UPDATE 681
#define USER 682
#define USING 683
#define VACUUM 684
#define VALID 685
#define VALIDATE 686
#define VALIDATOR 687
#define VALUE_P 688
#define VALUES 689
#define VARCHAR 690
#define VARIADIC 691
#define VARYING 692
#define VERBOSE 693
#define VERSION_P 694
#define VIEW 695
#define VIEWS 696
#define VOLATILE 697
#define WHEN 698
#define WHERE 699
#define WHITESPACE_P 700
#define WINDOW 701
#define WITH 702
#define WITHIN 703
#define WITHOUT 704
#define WORK 705
#define WRAPPER 706
#define WRITE_P 707
#define XML_P 708
#define XMLATTRIBUTES 709
#define XMLCONCAT 710
#define XMLELEMENT 711
#define XMLEXISTS 712
#define XMLFOREST 713
#define XMLNAMESPACES 714
#define XMLPARSE 715
#define XMLPI 716
#define XMLROOT 717
#define XMLSERIALIZE 718
#define XMLTABLE 719
#define YEAR_P 720
#define YEARS_P 721
#define YES_P 722
#define ZONE 723
#define NOT_LA 724
#define NULLS_LA 725
#define WITH_LA 726
#define POSTFIXOP 727
#define UMINUS 728




/* Copy the first part of user declarations.  */
#line 1 "third_party/libpg_query/grammar/grammar.y.tmp"

#line 1 "third_party/libpg_query/grammar/grammar.hpp"
/*#define YYDEBUG 1*/
/*-------------------------------------------------------------------------
 *
 * gram.y
 *	  POSTGRESQL BISON rules/actions
 *
 * Portions Copyright (c) 1996-2017, PostgreSQL Global Development PGGroup
 * Portions Copyright (c) 1994, Regents of the University of California
 *
 *
 * IDENTIFICATION
 *	  src/backend/parser/gram.y
 *
 * HISTORY
 *	  AUTHOR			DATE			MAJOR EVENT
 *	  Andrew Yu			Sept, 1994		POSTQUEL to SQL conversion
 *	  Andrew Yu			Oct, 1994		lispy code conversion
 *
 * NOTES
 *	  CAPITALS are used to represent terminal symbols.
 *	  non-capitals are used to represent non-terminals.
 *
 *	  In general, nothing in this file should initiate database accesses
 *	  nor depend on changeable state (such as SET variables).  If you do
 *	  database accesses, your code will fail when we have aborted the
 *	  current transaction and are just parsing commands to find the next
 *	  ROLLBACK or COMMIT.  If you make use of SET variables, then you
 *	  will do the wrong thing in multi-query strings like this:
 *			SET constraint_exclusion TO off; SELECT * FROM foo;
 *	  because the entire string is parsed by gram.y before the SET gets
 *	  executed.  Anything that depends on the database or changeable state
 *	  should be handled during parse analysis so that it happens at the
 *	  right time not the wrong time.
 *
 * WARNINGS
 *	  If you use a list, make sure the datum is a node so that the printing
 *	  routines work.
 *
 *	  Sometimes we assign constants to makeStrings. Make sure we don't free
 *	  those.
 *
 *-------------------------------------------------------------------------
 */
#include "pg_functions.hpp"
#include <string.h>

#include <ctype.h>
#include <limits.h>

#include "nodes/makefuncs.hpp"
#include "nodes/nodeFuncs.hpp"
#include "parser/gramparse.hpp"
#include "parser/parser.hpp"
#include "utils/datetime.hpp"

namespace duckdb_libpgquery {
#define DEFAULT_SCHEMA "main"

/*
 * Location tracking support --- simpler than bison's default, since we only
 * want to track the start position not the end position of each nonterminal.
 */
#define YYLLOC_DEFAULT(Current, Rhs, N) \
	do { \
		if ((N) > 0) \
			(Current) = (Rhs)[1]; \
		else \
			(Current) = (-1); \
	} while (0)

/*
 * The above macro assigns -1 (unknown) as the parse location of any
 * nonterminal that was reduced from an empty rule, or whose leftmost
 * component was reduced from an empty rule.  This is problematic
 * for nonterminals defined like
 *		OptFooList: / * EMPTY * / { ... } | OptFooList Foo { ... } ;
 * because we'll set -1 as the location during the first reduction and then
 * copy it during each subsequent reduction, leaving us with -1 for the
 * location even when the list is not empty.  To fix that, do this in the
 * action for the nonempty rule(s):
 *		if (@$ < 0) @$ = @2;
 * (Although we have many nonterminals that follow this pattern, we only
 * bother with fixing @$ like this when the nonterminal's parse location
 * is actually referenced in some rule.)
 *
 * A cleaner answer would be to make YYLLOC_DEFAULT scan all the Rhs
 * locations until it's found one that's not -1.  Then we'd get a correct
 * location for any nonterminal that isn't entirely empty.  But this way
 * would add overhead to every rule reduction, and so far there's not been
 * a compelling reason to pay that overhead.
 */

/*
 * Bison doesn't allocate anything that needs to live across parser calls,
 * so we can easily have it use palloc instead of malloc.  This prevents
 * memory leaks if we error out during parsing.  Note this only works with
 * bison >= 2.0.  However, in bison 1.875 the default is to use alloca()
 * if possible, so there's not really much problem anyhow, at least if
 * you're building with gcc.
 */
#define YYMALLOC palloc
#define YYFREE   pfree
#define YYINITDEPTH 1000

/* yields an integer bitmask of these flags: */
#define CAS_NOT_DEFERRABLE			0x01
#define CAS_DEFERRABLE				0x02
#define CAS_INITIALLY_IMMEDIATE		0x04
#define CAS_INITIALLY_DEFERRED		0x08
#define CAS_NOT_VALID				0x10
#define CAS_NO_INHERIT				0x20


#define parser_yyerror(msg)  scanner_yyerror(msg, yyscanner)
#define parser_errposition(pos)  scanner_errposition(pos, yyscanner)

static void base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner,
						 const char *msg);
static PGRawStmt *makeRawStmt(PGNode *stmt, int stmt_location);
static void updateRawStmtEnd(PGRawStmt *rs, int end_location);
static PGNode *makeColumnRef(char *colname, PGList *indirection,
						   int location, core_yyscan_t yyscanner);
static PGNode *makeTypeCast(PGNode *arg, PGTypeName *tpname, int location);
static PGNode *makeStringConst(char *str, int location);
static PGNode *makeStringConstCast(char *str, int location, PGTypeName *tpname);
static PGNode *makeIntervalNode(char *str, int location, PGList *typmods);
static PGNode *makeIntervalNode(int val, int location, PGList *typmods);
static PGNode *makeIntervalNode(PGNode *arg, int location, PGList *typmods);
static PGNode *makeSampleSize(PGValue *sample_size, bool is_percentage);
static PGNode *makeSampleOptions(PGNode *sample_size, char *method, int seed, int location);
static PGNode *makeIntConst(int val, int location);
static PGNode *makeFloatConst(char *str, int location);
static PGNode *makeBitStringConst(char *str, int location);
static PGNode *makeNullAConst(int location);
static PGNode *makeAConst(PGValue *v, int location);
static PGNode *makeBoolAConst(bool state, int location);
static PGNode *makeParamRef(int number, int location);
static PGNode *makeParamRefCast(int number, int location, PGTypeName *tpname);
static void check_qualified_name(PGList *names, core_yyscan_t yyscanner);
static PGList *check_func_name(PGList *names, core_yyscan_t yyscanner);
static PGList *check_indirection(PGList *indirection, core_yyscan_t yyscanner);
static void insertSelectOptions(PGSelectStmt *stmt,
								PGList *sortClause, PGList *lockingClause,
								PGNode *limitOffset, PGNode *limitCount,
								PGWithClause *withClause,
								core_yyscan_t yyscanner);
static PGNode *makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg);
static PGNode *doNegate(PGNode *n, int location);
static void doNegateFloat(PGValue *v);
static PGNode *makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location);
static PGNode *makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location);
static PGNode *makeNotExpr(PGNode *expr, int location);
static PGNode *makeSQLValueFunction(PGSQLValueFunctionOp op, int32_t typmod,
								  int location);
static void SplitColQualList(PGList *qualList,
							 PGList **constraintList, PGCollateClause **collClause,
							 core_yyscan_t yyscanner);
static void processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner);
static PGNode *makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query);



/* Enabling traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* Enabling the token table.  */
#ifndef YYTOKEN_TABLE
# define YYTOKEN_TABLE 0
#endif

#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
typedef union YYSTYPE
#line 14 "third_party/libpg_query/grammar/grammar.y"
{
	core_YYSTYPE		core_yystype;
	/* these fields must match core_YYSTYPE: */
	int					ival;
	char				*str;
	const char			*keyword;
	const char          *conststr;

	char				chr;
	bool				boolean;
	PGJoinType			jtype;
	PGDropBehavior		dbehavior;
	PGOnCommitAction		oncommit;
	PGList				*list;
	PGNode				*node;
	PGValue				*value;
	PGObjectType			objtype;
	PGTypeName			*typnam;
	PGObjectWithArgs		*objwithargs;
	PGDefElem				*defelt;
	PGSortBy				*sortby;
	PGWindowDef			*windef;
	PGJoinExpr			*jexpr;
	PGIndexElem			*ielem;
	PGAlias				*alias;
	PGRangeVar			*range;
	PGIntoClause			*into;
	PGWithClause			*with;
	PGInferClause			*infer;
	PGOnConflictClause	*onconflict;
	PGAIndices			*aind;
	PGResTarget			*target;
	PGInsertStmt			*istmt;
	PGVariableSetStmt		*vsetstmt;
	PGOverridingKind       override;
	PGSortByDir            sortorder;
	PGSortByNulls          nullorder;
	PGLockClauseStrength lockstrength;
	PGLockWaitPolicy lockwaitpolicy;
	PGSubLinkType subquerytype;
	PGViewCheckOption viewcheckoption;
}
/* Line 193 of yacc.c.  */
#line 1259 "third_party/libpg_query/grammar/grammar_out.cpp"
	YYSTYPE;
# define yystype YYSTYPE /* obsolescent; will be withdrawn */
# define YYSTYPE_IS_DECLARED 1
# define YYSTYPE_IS_TRIVIAL 1
#endif

#if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
typedef struct YYLTYPE
{
  int first_line;
  int first_column;
  int last_line;
  int last_column;
} YYLTYPE;
# define yyltype YYLTYPE /* obsolescent; will be withdrawn */
# define YYLTYPE_IS_DECLARED 1
# define YYLTYPE_IS_TRIVIAL 1
#endif


/* Copy the second part of user declarations.  */


/* Line 216 of yacc.c.  */
#line 1284 "third_party/libpg_query/grammar/grammar_out.cpp"

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#elif (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
typedef signed char yytype_int8;
#else
typedef short int yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(msgid) dgettext ("bison-runtime", msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(msgid) msgid
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(e) ((void) (e))
#else
# define YYUSE(e) /* empty */
#endif

/* Identity function, used to suppress warnings about constant conditions.  */
#ifndef lint
# define YYID(n) (n)
#else
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static int
YYID (int i)
#else
static int
YYID (i)
    int i;
#endif
{
  return i;
}
#endif

#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#     ifndef _STDLIB_H
#      define _STDLIB_H 1
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's `empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (YYID (0))
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined _STDLIB_H \
       && ! ((defined YYMALLOC || defined malloc) \
	     && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef _STDLIB_H
#    define _STDLIB_H 1
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
	 || (defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL \
	     && defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss;
  YYSTYPE yyvs;
    YYLTYPE yyls;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
      + 2 * YYSTACK_GAP_MAXIMUM)

/* Copy COUNT objects from FROM to TO.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(To, From, Count) \
      __builtin_memcpy (To, From, (Count) * sizeof (*(From)))
#  else
#   define YYCOPY(To, From, Count)		\
      do					\
	{					\
	  YYSIZE_T yyi;				\
	  for (yyi = 0; yyi < (Count); yyi++)	\
	    (To)[yyi] = (From)[yyi];		\
	}					\
      while (YYID (0))
#  endif
# endif

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack)					\
    do									\
      {									\
	YYSIZE_T yynewbytes;						\
	YYCOPY (&yyptr->Stack, Stack, yysize);				\
	Stack = &yyptr->Stack;						\
	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
	yyptr += yynewbytes / sizeof (*yyptr);				\
      }									\
    while (YYID (0))

#endif

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  572
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   47801

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  492
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  361
/* YYNRULES -- Number of rules.  */
#define YYNRULES  1631
/* YYNRULES -- Number of states.  */
#define YYNSTATES  2700

/* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   728

#define YYTRANSLATE(YYX)						\
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[YYLEX] -- Bison symbol number corresponding to YYLEX.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,   480,     2,     2,
     485,   486,   478,   476,   489,   477,   487,   479,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   491,   488,
     472,   474,   473,   490,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,   483,     2,   484,   481,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   475,   482
};

#if YYDEBUG
/* YYPRHS[YYN] -- Index of the first RHS symbol of rule number YYN in
   YYRHS.  */
static const yytype_uint16 yyprhs[] =
{
       0,     0,     3,     5,     9,    11,    13,    15,    17,    19,
      21,    23,    25,    27,    29,    31,    33,    35,    37,    39,
      41,    43,    45,    47,    49,    51,    53,    55,    57,    59,
      61,    63,    65,    67,    69,    71,    73,    75,    77,    78,
      83,    90,    95,   102,   107,   114,   119,   126,   128,   131,
     135,   138,   140,   144,   147,   151,   153,   157,   160,   166,
     170,   177,   182,   189,   196,   203,   209,   215,   222,   232,
     237,   243,   251,   258,   263,   272,   277,   280,   285,   289,
     296,   301,   304,   307,   310,   313,   315,   318,   319,   321,
     324,   327,   330,   332,   336,   341,   344,   345,   348,   352,
     355,   359,   366,   373,   382,   389,   398,   405,   414,   421,
     430,   439,   450,   459,   470,   472,   473,   481,   483,   488,
     493,   501,   504,   506,   510,   515,   519,   520,   522,   523,
     526,   530,   536,   545,   551,   552,   558,   564,   572,   575,
     576,   578,   580,   582,   586,   589,   590,   592,   593,   595,
     599,   601,   605,   607,   611,   614,   617,   622,   628,   634,
     643,   645,   646,   650,   660,   673,   677,   678,   683,   690,
     692,   695,   697,   699,   700,   702,   705,   708,   710,   713,
     716,   718,   721,   725,   728,   731,   734,   737,   741,   745,
     749,   751,   755,   757,   758,   760,   763,   766,   769,   772,
     775,   778,   781,   784,   786,   788,   789,   799,   812,   813,
     816,   818,   820,   822,   824,   826,   828,   832,   833,   835,
     838,   840,   842,   845,   848,   852,   854,   856,   859,   862,
     864,   867,   871,   877,   880,   886,   892,   895,   899,   901,
     903,   906,   909,   910,   915,   916,   920,   925,   930,   931,
     935,   938,   939,   943,   945,   947,   949,   951,   953,   955,
     957,   959,   961,   963,   967,   971,   973,   976,   979,   982,
     985,   988,   991,   992,   996,  1000,  1004,  1005,  1007,  1010,
    1012,  1015,  1018,  1021,  1024,  1029,  1031,  1035,  1037,  1041,
    1043,  1045,  1047,  1049,  1053,  1055,  1058,  1059,  1061,  1062,
    1064,  1068,  1069,  1072,  1073,  1077,  1081,  1083,  1089,  1093,
    1095,  1099,  1101,  1106,  1112,  1118,  1125,  1129,  1137,  1142,
    1154,  1156,  1160,  1163,  1166,  1169,  1170,  1174,  1176,  1178,
    1181,  1184,  1187,  1190,  1192,  1193,  1195,  1198,  1205,  1210,
    1217,  1222,  1229,  1238,  1240,  1242,  1244,  1246,  1248,  1251,
    1253,  1256,  1258,  1260,  1262,  1266,  1270,  1274,  1278,  1281,
    1284,  1286,  1290,  1292,  1294,  1296,  1298,  1302,  1304,  1306,
    1307,  1309,  1311,  1313,  1320,  1322,  1324,  1327,  1331,  1340,
    1352,  1362,  1364,  1366,  1370,  1371,  1373,  1377,  1379,  1380,
    1382,  1383,  1385,  1386,  1388,  1392,  1394,  1396,  1398,  1402,
    1403,  1406,  1409,  1410,  1413,  1414,  1416,  1417,  1419,  1421,
    1423,  1427,  1431,  1433,  1435,  1439,  1443,  1447,  1451,  1456,
    1460,  1463,  1465,  1467,  1469,  1471,  1473,  1477,  1479,  1481,
    1485,  1489,  1491,  1494,  1499,  1504,  1507,  1511,  1517,  1523,
    1525,  1527,  1538,  1549,  1551,  1554,  1559,  1564,  1569,  1572,
    1575,  1579,  1581,  1585,  1592,  1595,  1596,  1600,  1604,  1609,
    1614,  1619,  1624,  1628,  1631,  1633,  1635,  1636,  1638,  1640,
    1641,  1643,  1649,  1651,  1652,  1654,  1655,  1659,  1661,  1665,
    1670,  1674,  1676,  1678,  1679,  1682,  1685,  1686,  1689,  1692,
    1694,  1696,  1698,  1699,  1702,  1707,  1713,  1718,  1721,  1725,
    1728,  1731,  1734,  1737,  1739,  1742,  1746,  1747,  1749,  1750,
    1756,  1758,  1763,  1770,  1773,  1775,  1776,  1781,  1782,  1784,
    1786,  1788,  1790,  1793,  1796,  1798,  1800,  1802,  1804,  1806,
    1808,  1812,  1813,  1815,  1819,  1821,  1823,  1826,  1829,  1830,
    1832,  1836,  1838,  1839,  1841,  1844,  1848,  1851,  1856,  1859,
    1863,  1866,  1867,  1869,  1872,  1873,  1878,  1884,  1887,  1888,
    1890,  1894,  1898,  1902,  1906,  1910,  1914,  1916,  1921,  1925,
    1930,  1936,  1941,  1947,  1952,  1958,  1961,  1966,  1968,  1970,
    1971,  1973,  1978,  1984,  1989,  1990,  1993,  1996,  1999,  2001,
    2003,  2004,  2009,  2012,  2014,  2017,  2020,  2025,  2028,  2035,
    2038,  2040,  2044,  2049,  2050,  2053,  2054,  2057,  2058,  2060,
    2064,  2068,  2071,  2072,  2075,  2080,  2082,  2084,  2087,  2091,
    2097,  2104,  2107,  2111,  2116,  2121,  2125,  2130,  2131,  2133,
    2135,  2137,  2139,  2141,  2144,  2149,  2151,  2153,  2155,  2157,
    2160,  2164,  2168,  2169,  2171,  2173,  2175,  2177,  2179,  2182,
    2185,  2188,  2191,  2194,  2196,  2200,  2201,  2203,  2205,  2207,
    2209,  2215,  2218,  2220,  2222,  2224,  2226,  2231,  2233,  2236,
    2239,  2241,  2245,  2249,  2252,  2254,  2255,  2261,  2264,  2270,
    2273,  2275,  2279,  2283,  2284,  2286,  2288,  2290,  2292,  2294,
    2296,  2298,  2300,  2302,  2304,  2306,  2308,  2310,  2312,  2314,
    2316,  2318,  2320,  2322,  2324,  2326,  2328,  2330,  2332,  2336,
    2340,  2344,  2348,  2352,  2356,  2360,  2361,  2363,  2367,  2371,
    2377,  2380,  2383,  2387,  2391,  2395,  2399,  2403,  2407,  2411,
    2415,  2419,  2423,  2427,  2431,  2435,  2438,  2441,  2445,  2449,
    2452,  2455,  2459,  2463,  2469,  2474,  2481,  2485,  2491,  2496,
    2503,  2508,  2515,  2521,  2529,  2533,  2536,  2541,  2545,  2548,
    2550,  2554,  2558,  2562,  2566,  2571,  2575,  2580,  2584,  2589,
    2595,  2602,  2609,  2617,  2624,  2632,  2639,  2647,  2651,  2656,
    2661,  2668,  2670,  2672,  2676,  2679,  2682,  2686,  2690,  2694,
    2698,  2702,  2706,  2710,  2714,  2718,  2722,  2726,  2730,  2734,
    2737,  2740,  2746,  2753,  2760,  2768,  2770,  2772,  2775,  2778,
    2783,  2785,  2787,  2789,  2792,  2795,  2799,  2805,  2812,  2821,
    2828,  2835,  2840,  2845,  2847,  2849,  2851,  2857,  2859,  2861,
    2866,  2868,  2873,  2875,  2880,  2882,  2887,  2889,  2891,  2893,
    2895,  2897,  2899,  2906,  2911,  2916,  2921,  2926,  2933,  2939,
    2945,  2951,  2956,  2963,  2968,  2974,  2975,  2981,  2982,  2985,
    2986,  2988,  2992,  2996,  2999,  3002,  3003,  3010,  3012,  3013,
    3017,  3018,  3021,  3024,  3025,  3027,  3032,  3035,  3038,  3041,
    3044,  3047,  3052,  3056,  3058,  3064,  3066,  3068,  3070,  3072,
    3074,  3076,  3078,  3080,  3082,  3084,  3086,  3088,  3090,  3092,
    3094,  3096,  3098,  3100,  3105,  3107,  3112,  3114,  3119,  3121,
    3124,  3126,  3129,  3131,  3134,  3136,  3140,  3142,  3146,  3148,
    3152,  3154,  3158,  3162,  3164,  3168,  3172,  3173,  3175,  3177,
    3179,  3181,  3183,  3185,  3187,  3189,  3191,  3193,  3198,  3202,
    3205,  3209,  3210,  3214,  3218,  3221,  3224,  3226,  3227,  3230,
    3233,  3237,  3240,  3242,  3244,  3248,  3254,  3256,  3259,  3264,
    3267,  3268,  3270,  3271,  3273,  3276,  3279,  3282,  3286,  3292,
    3294,  3295,  3297,  3300,  3301,  3304,  3306,  3307,  3309,  3310,
    3312,  3316,  3320,  3323,  3325,  3327,  3329,  3333,  3335,  3338,
    3340,  3344,  3346,  3348,  3350,  3353,  3355,  3357,  3359,  3361,
    3363,  3366,  3373,  3376,  3382,  3386,  3390,  3392,  3394,  3396,
    3398,  3400,  3402,  3404,  3406,  3408,  3410,  3412,  3414,  3416,
    3418,  3421,  3424,  3428,  3432,  3433,  3435,  3437,  3439,  3441,
    3443,  3445,  3447,  3449,  3455,  3459,  3460,  3462,  3464,  3466,
    3468,  3473,  3481,  3484,  3485,  3487,  3489,  3491,  3493,  3507,
    3524,  3526,  3529,  3530,  3532,  3533,  3535,  3536,  3539,  3540,
    3542,  3543,  3550,  3559,  3566,  3575,  3582,  3591,  3594,  3596,
    3601,  3605,  3608,  3613,  3617,  3623,  3625,  3626,  3628,  3630,
    3631,  3633,  3635,  3637,  3639,  3641,  3643,  3645,  3647,  3649,
    3651,  3653,  3655,  3659,  3661,  3663,  3665,  3667,  3669,  3671,
    3674,  3676,  3678,  3681,  3685,  3689,  3691,  3695,  3699,  3702,
    3706,  3710,  3714,  3718,  3720,  3722,  3724,  3726,  3730,  3736,
    3738,  3740,  3742,  3744,  3748,  3751,  3753,  3758,  3764,  3770,
    3775,  3782,  3784,  3786,  3788,  3790,  3792,  3794,  3795,  3797,
    3801,  3803,  3804,  3812,  3814,  3817,  3821,  3824,  3825,  3828,
    3829,  3832,  3837,  3840,  3842,  3844,  3846,  3849,  3853,  3856,
    3859,  3863,  3868,  3871,  3873,  3875,  3877,  3881,  3884,  3894,
    3906,  3919,  3934,  3938,  3943,  3948,  3949,  3957,  3968,  3971,
    3975,  3976,  3981,  3983,  3985,  3987,  3989,  3991,  3993,  3995,
    3997,  3999,  4001,  4003,  4005,  4007,  4009,  4011,  4013,  4015,
    4017,  4019,  4021,  4023,  4025,  4027,  4029,  4031,  4033,  4035,
    4037,  4039,  4041,  4043,  4045,  4047,  4049,  4051,  4053,  4055,
    4057,  4059,  4061,  4063,  4065,  4067,  4069,  4071,  4073,  4075,
    4077,  4079,  4081,  4083,  4085,  4087,  4089,  4091,  4093,  4095,
    4097,  4099,  4101,  4103,  4105,  4107,  4109,  4111,  4113,  4115,
    4117,  4119,  4121,  4123,  4125,  4127,  4129,  4131,  4133,  4135,
    4137,  4139,  4141,  4143,  4145,  4147,  4149,  4151,  4153,  4155,
    4157,  4159,  4161,  4163,  4165,  4167,  4169,  4171,  4173,  4175,
    4177,  4179,  4181,  4183,  4185,  4187,  4189,  4191,  4193,  4195,
    4197,  4199,  4201,  4203,  4205,  4207,  4209,  4211,  4213,  4215,
    4217,  4219,  4221,  4223,  4225,  4227,  4229,  4231,  4233,  4235,
    4237,  4239,  4241,  4243,  4245,  4247,  4249,  4251,  4253,  4255,
    4257,  4259,  4261,  4263,  4265,  4267,  4269,  4271,  4273,  4275,
    4277,  4279,  4281,  4283,  4285,  4287,  4289,  4291,  4293,  4295,
    4297,  4299,  4301,  4303,  4305,  4307,  4309,  4311,  4313,  4315,
    4317,  4319,  4321,  4323,  4325,  4327,  4329,  4331,  4333,  4335,
    4337,  4339,  4341,  4343,  4345,  4347,  4349,  4351,  4353,  4355,
    4357,  4359,  4361,  4363,  4365,  4367,  4369,  4371,  4373,  4375,
    4377,  4379,  4381,  4383,  4385,  4387,  4389,  4391,  4393,  4395,
    4397,  4399,  4401,  4403,  4405,  4407,  4409,  4411,  4413,  4415,
    4417,  4419,  4421,  4423,  4425,  4427,  4429,  4431,  4433,  4435,
    4437,  4439,  4441,  4443,  4445,  4447,  4449,  4451,  4453,  4455,
    4457,  4459,  4461,  4463,  4465,  4467,  4469,  4471,  4473,  4475,
    4477,  4479,  4481,  4483,  4485,  4487,  4489,  4491,  4493,  4495,
    4497,  4499,  4501,  4503,  4505,  4507,  4509,  4511,  4513,  4515,
    4517,  4519,  4521,  4523,  4525,  4527,  4529,  4531,  4533,  4535,
    4537,  4539,  4541,  4543,  4545,  4547,  4549,  4551,  4553,  4555,
    4557,  4559,  4561,  4563,  4565,  4567,  4569,  4571,  4573,  4575,
    4577,  4579,  4581,  4583,  4585,  4587,  4589,  4591,  4593,  4595,
    4597,  4599,  4601,  4603,  4605,  4607,  4609,  4611,  4613,  4615,
    4617,  4619,  4621,  4623,  4625,  4627,  4629,  4631,  4633,  4635,
    4637,  4639,  4641,  4643,  4645,  4647,  4649,  4651,  4653,  4655,
    4657,  4659,  4661,  4663,  4665,  4667,  4669,  4671,  4673,  4675,
    4677,  4679,  4681,  4683,  4685,  4687,  4689,  4691,  4693,  4695,
    4697,  4699,  4701,  4703,  4705,  4707,  4709,  4711,  4713,  4715,
    4717,  4719,  4721,  4723,  4725,  4727,  4729,  4731,  4733,  4735,
    4737,  4739,  4741,  4743,  4745,  4747,  4749,  4751,  4753,  4755,
    4757,  4759,  4761,  4763,  4765,  4767,  4769,  4771,  4773,  4775,
    4777,  4779,  4781,  4783,  4785,  4787,  4789,  4791,  4793,  4795,
    4797,  4799,  4801,  4803,  4805,  4807,  4809,  4811,  4813,  4815,
    4817,  4819,  4821,  4823,  4825,  4827,  4829,  4831,  4833,  4835,
    4837,  4839,  4841,  4843,  4845,  4847,  4849,  4851,  4853,  4855,
    4857,  4859,  4861,  4863,  4865,  4867,  4869,  4871,  4873,  4875,
    4877,  4879
};

/* YYRHS -- A `-1'-separated list of the rules' RHS.  */
static const yytype_int16 yyrhs[] =
{
     493,     0,    -1,   494,    -1,   494,   488,   495,    -1,   495,
      -1,   804,    -1,   533,    -1,   496,    -1,   836,    -1,   843,
      -1,   805,    -1,   598,    -1,   846,    -1,   594,    -1,   794,
      -1,   529,    -1,   542,    -1,   507,    -1,   832,    -1,   588,
      -1,   531,    -1,   808,    -1,   806,    -1,   807,    -1,   797,
      -1,   510,    -1,   825,    -1,   528,    -1,   791,    -1,   508,
      -1,   615,    -1,   540,    -1,   597,    -1,   827,    -1,   837,
      -1,   819,    -1,   840,    -1,   844,    -1,    -1,    29,   394,
     675,   504,    -1,    29,   394,   185,   149,   675,   504,    -1,
      29,   194,   774,   504,    -1,    29,   194,   185,   149,   774,
     504,    -1,    29,   360,   774,   504,    -1,    29,   360,   185,
     149,   774,   504,    -1,    29,   440,   774,   504,    -1,    29,
     440,   185,   149,   774,   504,    -1,   499,    -1,   497,   499,
      -1,   366,   114,   717,    -1,   134,   114,    -1,   338,    -1,
     338,   535,   536,    -1,   366,   537,    -1,   366,   171,   587,
      -1,   503,    -1,   500,   489,   503,    -1,    23,   567,    -1,
      23,   185,   264,   149,   567,    -1,    23,    75,   567,    -1,
      23,    75,   185,   264,   149,   567,    -1,    29,   509,   782,
     498,    -1,    29,   509,   782,   134,   264,   269,    -1,    29,
     509,   782,   366,   264,   269,    -1,    29,   509,   782,   366,
     382,   539,    -1,    29,   509,   782,   366,   555,    -1,    29,
     509,   782,   337,   555,    -1,    29,   509,   782,   366,   385,
     782,    -1,    29,   509,   782,    23,   171,   587,    36,   184,
     545,    -1,    29,   509,   782,   497,    -1,    29,   509,   782,
     134,   184,    -1,    29,   509,   782,   134,   184,   185,   149,
      -1,   134,   509,   185,   149,   782,   592,    -1,   134,   509,
     782,   592,    -1,    29,   509,   782,   506,   415,   687,   684,
     502,    -1,    29,   509,   782,   505,    -1,    23,   557,    -1,
      29,    85,   776,   543,    -1,   431,    85,   776,    -1,   134,
      85,   185,   149,   776,   592,    -1,   134,    85,   776,   592,
      -1,   366,   236,    -1,   366,   424,    -1,   366,   555,    -1,
     337,   555,    -1,   505,    -1,   428,   717,    -1,    -1,   550,
      -1,   366,   550,    -1,    23,   550,    -1,   134,   565,    -1,
     501,    -1,   504,   489,   501,    -1,   283,   485,   500,   486,
      -1,   366,   106,    -1,    -1,   110,   776,    -1,   110,   309,
     776,    -1,   110,    27,    -1,   110,   309,    27,    -1,    29,
     352,   776,   333,   405,   776,    -1,    29,   394,   675,   333,
     405,   776,    -1,    29,   394,   185,   149,   675,   333,   405,
     776,    -1,    29,   360,   774,   333,   405,   776,    -1,    29,
     360,   185,   149,   774,   333,   405,   776,    -1,    29,   440,
     774,   333,   405,   776,    -1,    29,   440,   185,   149,   774,
     333,   405,   776,    -1,    29,   194,   774,   333,   405,   776,
      -1,    29,   194,   185,   149,   774,   333,   405,   776,    -1,
      29,   394,   675,   333,   509,   776,   405,   776,    -1,    29,
     394,   185,   149,   675,   333,   509,   776,   405,   776,    -1,
      29,   394,   675,   333,    85,   776,   405,   776,    -1,    29,
     394,   185,   149,   675,   333,    85,   776,   405,   776,    -1,
      75,    -1,    -1,   514,   204,   210,   512,   511,   517,   519,
      -1,   615,    -1,   292,   520,   433,   615,    -1,   485,   524,
     486,   615,    -1,   485,   524,   486,   292,   520,   433,   615,
      -1,   114,   434,    -1,   774,    -1,   774,    36,   782,    -1,
     485,   526,   486,   681,    -1,   279,    85,   776,    -1,    -1,
     620,    -1,    -1,   782,   768,    -1,   527,   474,   717,    -1,
     485,   521,   486,   474,   717,    -1,   279,    83,   513,   130,
     426,   366,   525,   681,    -1,   279,    83,   513,   130,   265,
      -1,    -1,   782,   522,   523,   633,   634,    -1,   722,   522,
     523,   633,   634,    -1,   485,   717,   486,   522,   523,   633,
     634,    -1,   340,   771,    -1,    -1,   427,    -1,   393,    -1,
     527,    -1,   521,   489,   527,    -1,    73,   785,    -1,    -1,
     785,    -1,    -1,   515,    -1,   524,   489,   515,    -1,   516,
      -1,   525,   489,   516,    -1,   518,    -1,   526,   489,   518,
      -1,   782,   768,    -1,   306,   782,    -1,   306,   782,   474,
     824,    -1,   306,   782,   485,   746,   486,    -1,    92,   586,
     360,   774,   530,    -1,    92,   586,   360,   185,   264,   149,
     774,   530,    -1,   534,    -1,    -1,   148,   776,   532,    -1,
      92,   586,   394,   848,    36,   148,   776,   532,   847,    -1,
      92,   586,   394,   185,   264,   149,   848,    36,   148,   776,
     532,   847,    -1,   485,   745,   486,    -1,    -1,    29,   360,
     774,   534,    -1,    29,   360,   185,   149,   774,   534,    -1,
     537,    -1,   534,   537,    -1,   447,    -1,   471,    -1,    -1,
       4,    -1,   476,     4,    -1,   477,     4,    -1,   539,    -1,
      36,   689,    -1,    55,   536,    -1,   105,    -1,   262,   105,
      -1,   193,   538,   536,    -1,   242,   536,    -1,   250,   536,
      -1,   262,   242,    -1,   262,   250,    -1,   293,    54,   785,
      -1,   360,   255,   785,    -1,   380,   535,   536,    -1,   338,
      -1,   338,   535,   536,    -1,    54,    -1,    -1,   780,    -1,
     476,   780,    -1,   477,   780,    -1,    19,   541,    -1,    47,
     541,    -1,   380,   541,    -1,    79,   541,    -1,   140,   541,
      -1,   345,   541,    -1,   450,    -1,   407,    -1,    -1,    92,
     586,   394,   774,   485,   574,   486,   562,   554,    -1,    92,
     586,   394,   185,   264,   149,   774,   485,   574,   486,   562,
     554,    -1,    -1,   543,   566,    -1,   581,    -1,   852,    -1,
     742,    -1,   536,    -1,   781,    -1,   263,    -1,   485,   534,
     486,    -1,    -1,   781,    -1,   262,    22,    -1,   339,    -1,
      58,    -1,   366,   269,    -1,   366,   114,    -1,    85,   776,
     549,    -1,   549,    -1,   561,    -1,    73,   785,    -1,   264,
     269,    -1,   269,    -1,   421,   573,    -1,   312,   216,   573,
      -1,    67,   485,   717,   486,   556,    -1,   114,   718,    -1,
     171,   587,    36,   184,   545,    -1,   327,   774,   576,   584,
     552,    -1,   565,   546,    -1,   279,   426,   547,    -1,   551,
      -1,   578,    -1,   551,   578,    -1,   578,   551,    -1,    -1,
     283,   485,   568,   486,    -1,    -1,   279,    79,   134,    -1,
     279,    79,   119,   348,    -1,   279,    79,   311,   348,    -1,
      -1,   485,   559,   486,    -1,   262,   196,    -1,    -1,    85,
     776,   582,    -1,   582,    -1,    78,    -1,    86,    -1,   115,
      -1,   184,    -1,   195,    -1,   382,    -1,   385,    -1,    27,
      -1,   579,    -1,   559,   489,   579,    -1,   428,   194,   570,
      -1,   116,    -1,   264,   116,    -1,   198,   117,    -1,   198,
     187,    -1,   447,   555,    -1,   447,   277,    -1,   449,   277,
      -1,    -1,   485,   569,   486,    -1,   564,   192,   558,    -1,
     564,   146,   558,    -1,    -1,   789,    -1,   264,   116,    -1,
     116,    -1,   198,   187,    -1,   198,   117,    -1,   264,   430,
      -1,   262,   196,    -1,   782,   687,   553,   577,    -1,   550,
      -1,   568,   489,   550,    -1,   572,    -1,   569,   489,   572,
      -1,   782,    -1,   567,    -1,   585,    -1,   557,    -1,   789,
     474,   544,    -1,   789,    -1,   447,   563,    -1,    -1,   583,
      -1,    -1,   782,    -1,   485,   580,   486,    -1,    -1,   577,
     548,    -1,    -1,   279,   119,   547,    -1,   789,   474,   544,
      -1,   789,    -1,   789,   487,   789,   474,   544,    -1,   789,
     487,   789,    -1,   575,    -1,   580,   489,   575,    -1,   687,
      -1,   784,   786,   480,   415,    -1,   367,   784,   786,   480,
     415,    -1,    67,   485,   717,   486,   543,    -1,   421,   485,
     580,   486,   573,   543,    -1,   421,   560,   543,    -1,   312,
     216,   485,   580,   486,   573,   543,    -1,   312,   216,   560,
     543,    -1,   164,   216,   485,   580,   486,   327,   774,   576,
     584,   552,   543,    -1,   571,    -1,   583,   489,   571,    -1,
     240,   168,    -1,   240,   297,    -1,   240,   372,    -1,    -1,
     226,   774,   564,    -1,   400,    -1,   398,    -1,   230,   400,
      -1,   230,   398,    -1,   173,   400,    -1,   173,   398,    -1,
     424,    -1,    -1,    30,    -1,    54,   114,    -1,   134,   589,
     185,   149,   591,   592,    -1,   134,   589,   591,   592,    -1,
     134,   590,   185,   149,   775,   592,    -1,   134,   590,   775,
     592,    -1,   134,   593,   776,   279,   785,   592,    -1,   134,
     593,   185,   149,   776,   279,   785,   592,    -1,   394,    -1,
     360,    -1,   169,    -1,   237,    -1,   440,    -1,   241,   440,
      -1,   194,    -1,   164,   394,    -1,    74,    -1,    89,    -1,
     382,    -1,   401,   355,   296,    -1,   401,   355,   126,    -1,
     401,   355,   399,    -1,   401,   355,    82,    -1,    21,   243,
      -1,   143,   410,    -1,   152,    -1,   164,   106,   451,    -1,
     318,    -1,   352,    -1,   363,    -1,   785,    -1,   591,   489,
     785,    -1,    58,    -1,   339,    -1,    -1,   304,    -1,   349,
      -1,   410,    -1,    92,   595,   774,   596,    36,   717,    -1,
     169,    -1,   237,    -1,   485,   486,    -1,   485,   746,   486,
      -1,   514,   426,   833,   366,   525,   665,   834,   519,    -1,
      90,   610,   774,   576,   608,   599,   604,   613,   600,   535,
     605,    -1,    90,   485,   793,   486,   405,   604,   613,   535,
     605,    -1,   167,    -1,   405,    -1,   602,   121,   781,    -1,
      -1,   612,    -1,   601,   489,   612,    -1,   428,    -1,    -1,
      36,    -1,    -1,   317,    -1,    -1,   609,    -1,   485,   614,
     486,    -1,   816,    -1,   536,    -1,   478,    -1,   485,   601,
     486,    -1,    -1,   789,   606,    -1,   447,   277,    -1,    -1,
     609,   611,    -1,    -1,    50,    -1,    -1,    50,    -1,   277,
      -1,   166,    -1,   120,   603,   781,    -1,   269,   603,   781,
      -1,    94,    -1,   180,    -1,   319,   603,   781,    -1,   142,
     603,   781,    -1,   163,   319,   580,    -1,   163,   319,   478,
      -1,   163,   264,   269,   580,    -1,   163,   269,   580,    -1,
     138,   781,    -1,   816,    -1,   781,    -1,   383,    -1,   384,
      -1,   607,    -1,   614,   489,   607,    -1,   617,    -1,   616,
      -1,   485,   617,   486,    -1,   485,   616,   486,    -1,   619,
      -1,   618,   630,    -1,   618,   629,   657,   636,    -1,   618,
     629,   635,   658,    -1,   620,   618,    -1,   620,   618,   630,
      -1,   620,   618,   629,   657,   636,    -1,   620,   618,   629,
     635,   658,    -1,   619,    -1,   616,    -1,   359,   628,   770,
     623,   665,   681,   652,   656,   726,   640,    -1,   359,   627,
     771,   623,   665,   681,   652,   656,   726,   640,    -1,   664,
      -1,   394,   675,    -1,   618,   420,   626,   618,    -1,   618,
     208,   626,   618,    -1,   618,   144,   626,   618,    -1,   447,
     621,    -1,   471,   621,    -1,   447,   325,   621,    -1,   622,
      -1,   621,   489,   622,    -1,   776,   787,    36,   485,   793,
     486,    -1,   210,   624,    -1,    -1,   400,   625,   774,    -1,
     398,   625,   774,    -1,   230,   400,   625,   774,    -1,   230,
     398,   625,   774,    -1,   173,   400,   625,   774,    -1,   173,
     398,   625,   774,    -1,   424,   625,   774,    -1,   394,   774,
      -1,   774,    -1,   394,    -1,    -1,    27,    -1,   129,    -1,
      -1,   129,    -1,   129,   279,   485,   745,   486,    -1,    27,
      -1,    -1,   630,    -1,    -1,   285,    54,   631,    -1,   632,
      -1,   631,   489,   632,    -1,   717,   428,   742,   634,    -1,
     717,   633,   634,    -1,    37,    -1,   123,    -1,    -1,   470,
     159,    -1,   470,   220,    -1,    -1,   637,   638,    -1,   638,
     637,    -1,   637,    -1,   638,    -1,   635,    -1,    -1,   227,
     646,    -1,   227,   646,   489,   647,    -1,   157,   651,   648,
     650,   280,    -1,   157,   651,   650,   280,    -1,   276,   647,
      -1,   276,   648,   650,    -1,     4,   480,    -1,     9,   480,
      -1,     4,   301,    -1,     9,   301,    -1,     9,    -1,     9,
     348,    -1,   428,   350,   642,    -1,    -1,   782,    -1,    -1,
     641,   485,   639,   486,   645,    -1,   639,    -1,   639,   485,
     782,   486,    -1,   639,   485,   782,   489,     9,   486,    -1,
     396,   642,    -1,   643,    -1,    -1,   334,   485,     9,   486,
      -1,    -1,   717,    -1,    27,    -1,   717,    -1,   719,    -1,
     476,   649,    -1,   477,   649,    -1,   780,    -1,     4,    -1,
     347,    -1,   348,    -1,   159,    -1,   261,    -1,   176,    54,
     653,    -1,    -1,   654,    -1,   653,   489,   654,    -1,   717,
      -1,   655,    -1,   485,   486,    -1,   179,   717,    -1,    -1,
     659,    -1,   162,   321,   280,    -1,   657,    -1,    -1,   660,
      -1,   659,   660,    -1,   661,   662,   663,    -1,   162,   426,
      -1,   162,   262,   216,   426,    -1,   162,   369,    -1,   162,
     216,   369,    -1,   274,   773,    -1,    -1,   268,    -1,   373,
     235,    -1,    -1,   434,   485,   745,   486,    -1,   664,   489,
     485,   745,   486,    -1,   167,   666,    -1,    -1,   667,    -1,
     666,   489,   667,    -1,   675,   670,   644,    -1,   676,   671,
     644,    -1,   221,   676,   671,    -1,   616,   670,   644,    -1,
     221,   616,   670,    -1,   668,    -1,   485,   668,   486,   669,
      -1,   485,   668,   486,    -1,   667,    93,   215,   667,    -1,
     667,   672,   215,   667,   674,    -1,   667,   215,   667,   674,
      -1,   667,   258,   672,   215,   667,    -1,   667,   258,   215,
     667,    -1,    36,   782,   485,   775,   486,    -1,    36,   783,
      -1,   782,   485,   775,   486,    -1,   782,    -1,   669,    -1,
      -1,   669,    -1,    36,   485,   682,   486,    -1,    36,   782,
     485,   682,   486,    -1,   782,   485,   682,   486,    -1,    -1,
     168,   673,    -1,   224,   673,    -1,   343,   673,    -1,   200,
      -1,   288,    -1,    -1,   428,   485,   775,   486,    -1,   279,
     717,    -1,   774,    -1,   774,   478,    -1,   280,   774,    -1,
     280,   485,   774,   486,    -1,   722,   680,    -1,   348,   167,
     485,   678,   486,   680,    -1,   722,   679,    -1,   677,    -1,
     678,   489,   677,    -1,    36,   485,   682,   486,    -1,    -1,
     471,   286,    -1,    -1,   444,   717,    -1,    -1,   683,    -1,
     682,   489,   683,    -1,   782,   687,   684,    -1,    73,   785,
      -1,    -1,   782,   687,    -1,   685,   489,   782,   687,    -1,
     347,    -1,   388,    -1,   689,   688,    -1,   367,   689,   688,
      -1,   689,    35,   483,   780,   484,    -1,   367,   689,    35,
     483,   780,   484,    -1,   689,    35,    -1,   367,   689,    35,
      -1,   686,   485,   685,   486,    -1,   238,   485,   748,   486,
      -1,   688,   483,   484,    -1,   688,   483,   780,   484,    -1,
      -1,   691,    -1,   693,    -1,   695,    -1,   699,    -1,   705,
      -1,   706,   716,    -1,   706,   485,   780,   486,    -1,   693,
      -1,   696,    -1,   700,    -1,   705,    -1,   784,   692,    -1,
     784,   786,   692,    -1,   485,   745,   486,    -1,    -1,   206,
      -1,   207,    -1,   374,    -1,    49,    -1,   322,    -1,   160,
     694,    -1,   133,   308,    -1,   112,   692,    -1,   111,   692,
      -1,   272,   692,    -1,    52,    -1,   485,   780,   486,    -1,
      -1,   697,    -1,   698,    -1,   697,    -1,   698,    -1,    51,
     704,   485,   745,   486,    -1,    51,   704,    -1,   701,    -1,
     702,    -1,   701,    -1,   702,    -1,   703,   485,   780,   486,
      -1,   703,    -1,    65,   704,    -1,    64,   704,    -1,   435,
      -1,   257,    65,   704,    -1,   257,    64,   704,    -1,   259,
     704,    -1,   437,    -1,    -1,   404,   485,   780,   486,   707,
      -1,   404,   707,    -1,   403,   485,   780,   486,   707,    -1,
     403,   707,    -1,   209,    -1,   471,   403,   468,    -1,   449,
     403,   468,    -1,    -1,   465,    -1,   466,    -1,   252,    -1,
     253,    -1,   108,    -1,   109,    -1,   182,    -1,   183,    -1,
     248,    -1,   249,    -1,   356,    -1,   357,    -1,   246,    -1,
     247,    -1,   244,    -1,   245,    -1,   708,    -1,   709,    -1,
     710,    -1,   711,    -1,   712,    -1,   713,    -1,   714,    -1,
     715,    -1,   708,   405,   709,    -1,   710,   405,   711,    -1,
     710,   405,   712,    -1,   710,   405,   713,    -1,   711,   405,
     712,    -1,   711,   405,   713,    -1,   712,   405,   713,    -1,
      -1,   719,    -1,   717,    11,   687,    -1,   717,    73,   785,
      -1,   717,    41,   403,   468,   717,    -1,   476,   717,    -1,
     477,   717,    -1,   717,   476,   717,    -1,   717,   477,   717,
      -1,   717,   478,   717,    -1,   717,   479,   717,    -1,   717,
     480,   717,    -1,   717,   481,   717,    -1,   717,   472,   717,
      -1,   717,   473,   717,    -1,   717,   474,   717,    -1,   717,
      16,   717,    -1,   717,    17,   717,    -1,   717,    18,   717,
      -1,   717,   741,   717,    -1,   741,   717,    -1,   717,   741,
      -1,   717,    33,   717,    -1,   717,   284,   717,    -1,   264,
     717,    -1,   469,   717,    -1,   717,   172,   717,    -1,   717,
     226,   717,    -1,   717,   226,   717,   142,   717,    -1,   717,
     469,   226,   717,    -1,   717,   469,   226,   717,   142,   717,
      -1,   717,   186,   717,    -1,   717,   186,   717,   142,   717,
      -1,   717,   469,   186,   717,    -1,   717,   469,   186,   717,
     142,   717,    -1,   717,   371,   405,   717,    -1,   717,   371,
     405,   717,   142,   717,    -1,   717,   469,   371,   405,   717,
      -1,   717,   469,   371,   405,   717,   142,   717,    -1,   717,
     212,   269,    -1,   717,   213,    -1,   717,   212,   264,   269,
      -1,   717,   264,   269,    -1,   717,   267,    -1,   737,    -1,
     737,    15,   717,    -1,   764,    15,   717,    -1,   737,   290,
     737,    -1,   717,   212,   412,    -1,   717,   212,   264,   412,
      -1,   717,   212,   155,    -1,   717,   212,   264,   155,    -1,
     717,   212,   422,    -1,   717,   212,   264,   422,    -1,   717,
     212,   129,   167,   717,    -1,   717,   212,   264,   129,   167,
     717,    -1,   717,   212,   274,   485,   748,   486,    -1,   717,
     212,   264,   274,   485,   748,   486,    -1,   717,    48,   769,
     718,    33,   717,    -1,   717,   469,    48,   769,   718,    33,
     717,    -1,   717,    48,   391,   718,    33,   717,    -1,   717,
     469,    48,   391,   718,    33,   717,    -1,   717,   191,   758,
      -1,   717,   469,   191,   758,    -1,   717,   743,   738,   616,
      -1,   717,   743,   738,   485,   717,   486,    -1,   114,    -1,
     719,    -1,   718,    11,   687,    -1,   476,   718,    -1,   477,
     718,    -1,   718,   476,   718,    -1,   718,   477,   718,    -1,
     718,   478,   718,    -1,   718,   479,   718,    -1,   718,   480,
     718,    -1,   718,   481,   718,    -1,   718,   472,   718,    -1,
     718,   473,   718,    -1,   718,   474,   718,    -1,   718,    16,
     718,    -1,   718,    17,   718,    -1,   718,    18,   718,    -1,
     718,   741,   718,    -1,   741,   718,    -1,   718,   741,    -1,
     718,   212,   129,   167,   718,    -1,   718,   212,   264,   129,
     167,   718,    -1,   718,   212,   274,   485,   748,   486,    -1,
     718,   212,   264,   274,   485,   748,   486,    -1,   764,    -1,
     779,    -1,   490,   768,    -1,    10,   768,    -1,   485,   717,
     486,   768,    -1,   759,    -1,   721,    -1,   616,    -1,   616,
     767,    -1,   149,   616,    -1,   778,   485,   486,    -1,   778,
     485,   746,   629,   486,    -1,   778,   485,   436,   747,   629,
     486,    -1,   778,   485,   746,   489,   436,   747,   629,   486,
      -1,   778,   485,    27,   746,   629,   486,    -1,   778,   485,
     129,   746,   629,   486,    -1,   778,   485,   478,   486,    -1,
     720,   724,   725,   729,    -1,   723,    -1,   720,    -1,   723,
      -1,    74,   162,   485,   717,   486,    -1,    98,    -1,   101,
      -1,   101,   485,   780,   486,    -1,   102,    -1,   102,   485,
     780,   486,    -1,   231,    -1,   231,   485,   780,   486,    -1,
     232,    -1,   232,   485,   780,   486,    -1,    99,    -1,   103,
      -1,   365,    -1,   427,    -1,    97,    -1,   100,    -1,    61,
     485,   717,    36,   687,   486,    -1,   154,   485,   749,   486,
      -1,   291,   485,   751,   486,    -1,   305,   485,   753,   486,
      -1,   390,   485,   754,   486,    -1,   409,   485,   717,    36,
     687,   486,    -1,   411,   485,    53,   757,   486,    -1,   411,
     485,   222,   757,   486,    -1,   411,   485,   406,   757,   486,
      -1,   411,   485,   757,   486,    -1,   270,   485,   717,   489,
     717,   486,    -1,    72,   485,   745,   486,    -1,   448,   176,
     485,   630,   486,    -1,    -1,   158,   485,   444,   717,   486,
      -1,    -1,   446,   727,    -1,    -1,   728,    -1,   727,   489,
     728,    -1,   782,    36,   730,    -1,   289,   730,    -1,   289,
     782,    -1,    -1,   485,   731,   732,   629,   733,   486,    -1,
     782,    -1,    -1,   298,    54,   745,    -1,    -1,   320,   734,
      -1,   348,   734,    -1,    -1,   735,    -1,    48,   735,    33,
     735,    -1,   417,   307,    -1,   417,   161,    -1,    96,   347,
      -1,   717,   307,    -1,   717,   161,    -1,   347,   485,   745,
     486,    -1,   347,   485,   486,    -1,   736,    -1,   485,   745,
     489,   717,   486,    -1,    34,    -1,   376,    -1,    27,    -1,
       8,    -1,   740,    -1,   476,    -1,   477,    -1,   478,    -1,
     479,    -1,   480,    -1,   481,    -1,   472,    -1,   473,    -1,
     474,    -1,    16,    -1,    17,    -1,    18,    -1,     8,    -1,
     281,   485,   744,   486,    -1,   739,    -1,   281,   485,   744,
     486,    -1,   739,    -1,   281,   485,   744,   486,    -1,   226,
      -1,   469,   226,    -1,   172,    -1,   469,   172,    -1,   186,
      -1,   469,   186,    -1,   739,    -1,   782,   487,   744,    -1,
     717,    -1,   745,   489,   717,    -1,   747,    -1,   746,   489,
     747,    -1,   717,    -1,   788,    13,   717,    -1,   788,    14,
     717,    -1,   687,    -1,   748,   489,   687,    -1,   750,   167,
     717,    -1,    -1,     3,    -1,   708,    -1,   709,    -1,   710,
      -1,   711,    -1,   712,    -1,   713,    -1,   714,    -1,   715,
      -1,   781,    -1,   717,   752,   755,   756,    -1,   717,   752,
     755,    -1,   302,   717,    -1,   718,   191,   718,    -1,    -1,
     717,   755,   756,    -1,   717,   756,   755,    -1,   717,   755,
      -1,   717,   756,    -1,   745,    -1,    -1,   167,   717,    -1,
     162,   717,    -1,   717,   167,   745,    -1,   167,   745,    -1,
     745,    -1,   616,    -1,   485,   745,   486,    -1,    60,   763,
     760,   762,   140,    -1,   761,    -1,   760,   761,    -1,   443,
     717,   402,   717,    -1,   136,   717,    -1,    -1,   717,    -1,
      -1,   782,    -1,   782,   767,    -1,   487,   777,    -1,   487,
     478,    -1,   483,   717,   484,    -1,   483,   766,   491,   766,
     484,    -1,   717,    -1,    -1,   765,    -1,   767,   765,    -1,
      -1,   768,   765,    -1,    40,    -1,    -1,   771,    -1,    -1,
     772,    -1,   771,   489,   772,    -1,   717,    36,   790,    -1,
     717,     3,    -1,   717,    -1,   478,    -1,   774,    -1,   773,
     489,   774,    -1,   782,    -1,   782,   767,    -1,   776,    -1,
     775,   489,   776,    -1,   782,    -1,   789,    -1,   784,    -1,
     782,   767,    -1,   780,    -1,     4,    -1,   781,    -1,     6,
      -1,     7,    -1,   778,   781,    -1,   778,   485,   746,   629,
     486,   781,    -1,   690,   781,    -1,   706,   485,   717,   486,
     716,    -1,   706,   780,   716,    -1,   706,   781,   716,    -1,
     412,    -1,   155,    -1,   269,    -1,     9,    -1,     5,    -1,
       3,    -1,   849,    -1,   850,    -1,   782,    -1,     5,    -1,
       3,    -1,   849,    -1,   851,    -1,   782,    -1,   782,   786,
      -1,   487,   777,    -1,   786,   487,   777,    -1,   485,   775,
     486,    -1,    -1,   784,    -1,     3,    -1,   849,    -1,   850,
      -1,   851,    -1,   852,    -1,   789,    -1,     5,    -1,   309,
     776,   792,    36,   793,    -1,   485,   748,   486,    -1,    -1,
     615,    -1,   510,    -1,   597,    -1,   832,    -1,    92,   352,
     782,   795,    -1,    92,   352,   185,   264,   149,   782,   795,
      -1,   795,   796,    -1,    -1,   542,    -1,   797,    -1,   529,
      -1,   844,    -1,    92,   803,   194,   800,   801,   279,   774,
     799,   485,   526,   486,   802,   681,    -1,    92,   803,   194,
     800,   185,   264,   149,   570,   279,   774,   799,   485,   526,
     486,   802,   681,    -1,   782,    -1,   428,   798,    -1,    -1,
      81,    -1,    -1,   570,    -1,    -1,   447,   555,    -1,    -1,
     421,    -1,    -1,    29,   394,   675,   366,   352,   776,    -1,
      29,   394,   185,   149,   675,   366,   352,   776,    -1,    29,
     360,   774,   366,   352,   776,    -1,    29,   360,   185,   149,
     774,   366,   352,   776,    -1,    29,   440,   774,   366,   352,
     776,    -1,    29,   440,   185,   149,   774,   366,   352,   776,
      -1,   163,    68,    -1,    68,    -1,   151,   107,   781,   605,
      -1,   190,   107,   781,    -1,   150,   811,    -1,   150,   815,
     809,   811,    -1,   150,   438,   811,    -1,   150,   485,   814,
     486,   811,    -1,   438,    -1,    -1,   816,    -1,   536,    -1,
      -1,   615,    -1,   510,    -1,   597,    -1,   832,    -1,   846,
      -1,     3,    -1,   849,    -1,   850,    -1,   851,    -1,   812,
      -1,   781,    -1,   817,    -1,   814,   489,   817,    -1,    32,
      -1,    31,    -1,   412,    -1,   155,    -1,   279,    -1,   813,
      -1,   818,   810,    -1,   812,    -1,   815,    -1,   366,   820,
      -1,   366,   230,   820,    -1,   366,   364,   820,    -1,   821,
      -1,   842,   167,    96,    -1,   403,   468,   823,    -1,   352,
     781,    -1,   842,   405,   824,    -1,   842,   474,   824,    -1,
     842,   405,   114,    -1,   842,   474,   114,    -1,   816,    -1,
     536,    -1,   781,    -1,     3,    -1,   706,   781,   716,    -1,
     706,   485,   780,   486,   781,    -1,   536,    -1,   114,    -1,
     230,    -1,   822,    -1,   824,   489,   822,    -1,   229,   826,
      -1,   781,    -1,   429,   829,   831,   809,    -1,   429,   829,
     831,   809,   774,    -1,   429,   829,   831,   809,   836,    -1,
     429,   485,   830,   486,    -1,   429,   485,   830,   486,   774,
     787,    -1,   815,    -1,   438,    -1,   166,    -1,   168,    -1,
       3,    -1,   168,    -1,    -1,   828,    -1,   830,   489,   828,
      -1,   166,    -1,    -1,   514,   119,   167,   833,   835,   834,
     519,    -1,   675,    -1,   675,   782,    -1,   675,    36,   782,
      -1,   444,   717,    -1,    -1,   428,   666,    -1,    -1,   815,
     809,    -1,   815,   809,   774,   787,    -1,   337,   839,    -1,
     842,    -1,    27,    -1,   838,    -1,   403,   468,    -1,   407,
     214,   225,    -1,   841,   615,    -1,   841,   842,    -1,   841,
     403,   468,    -1,   841,   407,   214,   225,    -1,   841,    27,
      -1,   370,    -1,   124,    -1,   782,    -1,   842,   487,   782,
      -1,    56,   720,    -1,    92,   586,   440,   774,   576,   802,
      36,   615,   845,    -1,    92,   284,   335,   586,   440,   774,
     576,   802,    36,   615,   845,    -1,    92,   586,   325,   440,
     774,   485,   580,   486,   802,    36,   615,   845,    -1,    92,
     284,   335,   586,   325,   440,   774,   485,   580,   486,   802,
      36,   615,   845,    -1,   447,    67,   282,    -1,   447,    59,
      67,   282,    -1,   447,   230,    67,   282,    -1,    -1,    92,
     586,   394,   848,    36,   615,   847,    -1,    92,   586,   394,
     185,   264,   149,   848,    36,   615,   847,    -1,   447,   106,
      -1,   447,   262,   106,    -1,    -1,   774,   576,   562,   554,
      -1,    19,    -1,    20,    -1,    21,    -1,    22,    -1,    23,
      -1,    24,    -1,    25,    -1,    26,    -1,    28,    -1,    29,
      -1,    30,    -1,    38,    -1,    39,    -1,    41,    -1,    42,
      -1,    43,    -1,    45,    -1,    46,    -1,    47,    -1,    54,
      -1,    55,    -1,    56,    -1,    57,    -1,    58,    -1,    59,
      -1,    62,    -1,    63,    -1,    66,    -1,    68,    -1,    69,
      -1,    70,    -1,    71,    -1,    76,    -1,    77,    -1,    78,
      -1,    79,    -1,    80,    -1,    82,    -1,    83,    -1,    84,
      -1,    86,    -1,    87,    -1,    88,    -1,    89,    -1,    90,
      -1,    91,    -1,    94,    -1,    95,    -1,    96,    -1,   104,
      -1,   105,    -1,   106,    -1,   107,    -1,   108,    -1,   109,
      -1,   110,    -1,   113,    -1,   115,    -1,   117,    -1,   118,
      -1,   119,    -1,   120,    -1,   121,    -1,   122,    -1,   124,
      -1,   125,    -1,   126,    -1,   127,    -1,   128,    -1,   131,
      -1,   132,    -1,   133,    -1,   134,    -1,   135,    -1,   137,
      -1,   138,    -1,   139,    -1,   141,    -1,   142,    -1,   143,
      -1,   145,    -1,   146,    -1,   147,    -1,   148,    -1,   150,
      -1,   151,    -1,   152,    -1,   153,    -1,   156,    -1,   158,
      -1,   159,    -1,   161,    -1,   163,    -1,   165,    -1,   169,
      -1,   170,    -1,   171,    -1,   173,    -1,   175,    -1,   178,
      -1,   180,    -1,   181,    -1,   182,    -1,   183,    -1,   184,
      -1,   185,    -1,   187,    -1,   188,    -1,   189,    -1,   190,
      -1,   192,    -1,   193,    -1,   194,    -1,   195,    -1,   196,
      -1,   197,    -1,   199,    -1,   202,    -1,   203,    -1,   204,
      -1,   205,    -1,   211,    -1,   214,    -1,   216,    -1,   217,
      -1,   218,    -1,   219,    -1,   220,    -1,   223,    -1,   225,
      -1,   228,    -1,   229,    -1,   230,    -1,   233,    -1,   234,
      -1,   235,    -1,   236,    -1,   237,    -1,   239,    -1,   240,
      -1,   241,    -1,   242,    -1,   243,    -1,   244,    -1,   245,
      -1,   246,    -1,   247,    -1,   248,    -1,   249,    -1,   250,
      -1,   251,    -1,   252,    -1,   253,    -1,   254,    -1,   255,
      -1,   256,    -1,   260,    -1,   261,    -1,   262,    -1,   265,
      -1,   266,    -1,   268,    -1,   271,    -1,   273,    -1,   274,
      -1,   275,    -1,   277,    -1,   278,    -1,   281,    -1,   282,
      -1,   283,    -1,   286,    -1,   289,    -1,   292,    -1,   293,
      -1,   294,    -1,   295,    -1,   296,    -1,   297,    -1,   298,
      -1,   299,    -1,   300,    -1,   301,    -1,   303,    -1,   304,
      -1,   306,    -1,   307,    -1,   309,    -1,   310,    -1,   311,
      -1,   313,    -1,   314,    -1,   315,    -1,   316,    -1,   317,
      -1,   318,    -1,   319,    -1,   320,    -1,   321,    -1,   323,
      -1,   324,    -1,   325,    -1,   326,    -1,   328,    -1,   329,
      -1,   330,    -1,   331,    -1,   332,    -1,   333,    -1,   334,
      -1,   335,    -1,   336,    -1,   337,    -1,   338,    -1,   339,
      -1,   341,    -1,   342,    -1,   344,    -1,   345,    -1,   346,
      -1,   348,    -1,   349,    -1,   350,    -1,   351,    -1,   352,
      -1,   353,    -1,   354,    -1,   355,    -1,   356,    -1,   357,
      -1,   358,    -1,   360,    -1,   361,    -1,   362,    -1,   363,
      -1,   364,    -1,   366,    -1,   368,    -1,   369,    -1,   370,
      -1,   372,    -1,   373,    -1,   375,    -1,   377,    -1,   378,
      -1,   379,    -1,   380,    -1,   381,    -1,   382,    -1,   383,
      -1,   384,    -1,   385,    -1,   386,    -1,   387,    -1,   389,
      -1,   392,    -1,   393,    -1,   395,    -1,   397,    -1,   398,
      -1,   399,    -1,   400,    -1,   401,    -1,   407,    -1,   408,
      -1,   410,    -1,   413,    -1,   414,    -1,   415,    -1,   416,
      -1,   417,    -1,   418,    -1,   419,    -1,   422,    -1,   423,
      -1,   424,    -1,   425,    -1,   426,    -1,   429,    -1,   430,
      -1,   431,    -1,   432,    -1,   433,    -1,   437,    -1,   439,
      -1,   440,    -1,   441,    -1,   442,    -1,   445,    -1,   448,
      -1,   449,    -1,   450,    -1,   451,    -1,   452,    -1,   453,
      -1,   465,    -1,   466,    -1,   467,    -1,   468,    -1,    48,
      -1,    49,    -1,    51,    -1,    52,    -1,    64,    -1,    65,
      -1,    72,    -1,   111,    -1,   112,    -1,   149,    -1,   154,
      -1,   160,    -1,   177,    -1,   201,    -1,   206,    -1,   207,
      -1,   209,    -1,   257,    -1,   259,    -1,   263,    -1,   270,
      -1,   272,    -1,   287,    -1,   291,    -1,   305,    -1,   308,
      -1,   322,    -1,   347,    -1,   367,    -1,   374,    -1,   388,
      -1,   390,    -1,   403,    -1,   404,    -1,   409,    -1,   411,
      -1,   434,    -1,   435,    -1,   454,    -1,   455,    -1,   456,
      -1,   457,    -1,   458,    -1,   459,    -1,   460,    -1,   461,
      -1,   462,    -1,   463,    -1,   464,    -1,    44,    -1,    50,
      -1,    74,    -1,    81,    -1,    93,    -1,   100,    -1,   166,
      -1,   168,    -1,   172,    -1,   186,    -1,   200,    -1,   212,
      -1,   213,    -1,   215,    -1,   224,    -1,   226,    -1,   258,
      -1,   267,    -1,   288,    -1,   290,    -1,   343,    -1,   371,
      -1,   396,    -1,   438,    -1,    27,    -1,    31,    -1,    32,
      -1,    33,    -1,    34,    -1,    35,    -1,    36,    -1,    37,
      -1,    40,    -1,    53,    -1,    60,    -1,    61,    -1,    67,
      -1,    73,    -1,    75,    -1,    85,    -1,    92,    -1,    97,
      -1,    98,    -1,    99,    -1,   101,    -1,   102,    -1,   103,
      -1,   114,    -1,   116,    -1,   123,    -1,   129,    -1,   130,
      -1,   136,    -1,   140,    -1,   144,    -1,   155,    -1,   157,
      -1,   162,    -1,   164,    -1,   167,    -1,   174,    -1,   176,
      -1,   179,    -1,   191,    -1,   198,    -1,   208,    -1,   210,
      -1,   221,    -1,   222,    -1,   227,    -1,   231,    -1,   232,
      -1,   238,    -1,   264,    -1,   269,    -1,   276,    -1,   279,
      -1,   280,    -1,   284,    -1,   285,    -1,   302,    -1,   312,
      -1,   327,    -1,   340,    -1,   359,    -1,   365,    -1,   376,
      -1,   391,    -1,   394,    -1,   402,    -1,   405,    -1,   406,
      -1,   412,    -1,   420,    -1,   421,    -1,   427,    -1,   428,
      -1,   436,    -1,   443,    -1,   444,    -1,   446,    -1,   447,
      -1
};

/* YYRLINE[YYN] -- source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,   456,   456,   472,   484,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   527,     9,
      18,    27,    36,    45,    54,    63,    72,    85,    87,    93,
      94,    99,   103,   107,   118,   126,   130,   139,   148,   157,
     166,   175,   184,   192,   200,   209,   218,   227,   236,   253,
     262,   271,   280,   290,   303,   318,   327,   335,   350,   358,
     368,   378,   385,   392,   400,   407,   418,   419,   424,   428,
     433,   438,   446,   447,   452,   456,   457,     7,    13,    19,
      25,     6,    15,    25,    35,    45,    55,    65,    75,    85,
      95,   106,   117,   127,   140,   141,     8,    21,    27,    34,
      40,    47,    57,    61,    70,    79,    88,    95,    96,   101,
     113,   118,   143,   153,   163,   169,   180,   191,   206,   207,
     213,   214,   219,   220,   226,   227,   231,   232,   237,   239,
     245,   246,   250,   251,   256,     7,    14,    22,     9,    19,
      32,    33,     7,    14,    31,    51,    52,     9,    17,    29,
      30,    34,    35,    36,    41,    42,    43,    48,    52,    56,
      60,    64,    68,    72,    76,    80,    84,    88,    92,    97,
     101,   105,   112,   113,   117,   118,   119,     2,     9,    15,
      21,    28,    35,    45,    46,    47,     7,    21,    41,    42,
      69,    70,    71,    72,    73,    74,    78,    79,    84,    89,
      90,    91,    92,    93,    98,   105,   106,   107,   124,   131,
     138,   148,   158,   170,   179,   188,   207,   214,   219,   221,
     223,   225,   228,   233,   234,   238,   239,   240,   241,   246,
     250,   251,   256,   263,   268,   269,   270,   271,   272,   273,
     274,   275,   281,   282,   286,   291,   298,   305,   312,   324,
     325,   326,   327,   331,   336,   337,   338,   343,   348,   349,
     350,   351,   352,   353,   358,   381,   385,   392,   393,   397,
     401,   402,   403,   407,   411,   419,   420,   425,   426,   430,
     438,   439,   444,   445,   449,   454,   458,   462,   467,   475,
     476,   480,   481,   487,   498,   511,   525,   539,   553,   567,
     590,   594,   601,   605,   613,   618,   625,   635,   636,   637,
     638,   639,   646,   653,   654,   659,   660,     9,    19,    29,
      39,    49,    59,    73,    74,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    86,    87,    92,    93,
      94,    95,    96,    97,    98,   103,   104,   109,   110,   111,
     116,   117,   118,     7,    18,    19,    23,    27,     7,     1,
      30,    53,    54,    59,    63,    68,    72,    80,    81,    85,
      86,    91,    92,    96,    97,   102,   103,   104,   105,   106,
     111,   119,   123,   128,   129,   134,   138,   143,   147,   151,
     155,   159,   163,   167,   171,   175,   179,   183,   187,   191,
     195,   203,   209,   210,   211,   216,   220,    47,    48,    52,
      53,    68,    69,    76,    84,    92,   100,   108,   116,   127,
     128,   155,   170,   186,   187,   206,   210,   214,   231,   238,
     245,   255,   256,   259,   271,   282,   290,   295,   300,   305,
     310,   318,   326,   331,   336,   343,   344,   348,   349,   350,
     357,   358,   362,   363,   367,   368,   372,   376,   377,   380,
     389,   400,   401,   402,   405,   406,   407,   411,   412,   413,
     414,   418,   419,   423,   425,   441,   443,   448,   451,   459,
     463,   467,   471,   475,   479,   486,   491,   498,   499,   503,
     507,   511,   515,   522,   529,   530,   535,   536,   540,   541,
     549,   569,   570,   572,   577,   578,   582,   583,   586,   587,
     612,   613,   617,   618,   622,   623,   627,   640,   641,   645,
     646,   650,   651,   655,   656,   660,   671,   672,   673,   674,
     678,   679,   684,   685,   686,   695,   701,   719,   720,   724,
     725,   731,   737,   745,   753,   789,   815,   819,   845,   849,
     862,   876,   891,   903,   919,   925,   930,   936,   943,   944,
     952,   956,   960,   966,   973,   978,   979,   980,   981,   985,
     986,   998,   999,  1004,  1011,  1018,  1025,  1057,  1068,  1081,
    1086,  1087,  1090,  1091,  1094,  1095,  1100,  1101,  1106,  1110,
    1116,  1137,  1145,  1158,  1161,  1165,  1165,  1167,  1172,  1179,
    1184,  1190,  1195,  1201,  1206,  1214,  1216,  1219,  1223,  1224,
    1225,  1226,  1227,  1228,  1233,  1253,  1254,  1255,  1256,  1267,
    1273,  1281,  1282,  1288,  1293,  1298,  1303,  1308,  1313,  1318,
    1323,  1329,  1335,  1341,  1348,  1370,  1379,  1383,  1391,  1395,
    1403,  1415,  1436,  1440,  1446,  1450,  1463,  1471,  1481,  1483,
    1485,  1487,  1489,  1491,  1496,  1497,  1504,  1513,  1521,  1530,
    1541,  1549,  1550,  1551,  1555,  1555,  1558,  1558,  1561,  1561,
    1564,  1564,  1567,  1567,  1570,  1570,  1573,  1573,  1576,  1576,
    1579,  1581,  1583,  1585,  1587,  1589,  1591,  1593,  1595,  1600,
    1605,  1611,  1618,  1623,  1629,  1635,  1666,  1668,  1670,  1678,
    1693,  1695,  1697,  1699,  1701,  1703,  1705,  1707,  1709,  1711,
    1713,  1715,  1717,  1719,  1722,  1724,  1726,  1729,  1731,  1733,
    1735,  1738,  1743,  1748,  1755,  1760,  1767,  1772,  1780,  1785,
    1794,  1802,  1810,  1818,  1836,  1844,  1852,  1860,  1868,  1876,
    1880,  1888,  1896,  1912,  1920,  1928,  1936,  1944,  1952,  1960,
    1964,  1968,  1972,  1976,  1984,  1992,  2000,  2008,  2028,  2050,
    2061,  2068,  2093,  2095,  2097,  2099,  2101,  2103,  2105,  2107,
    2109,  2111,  2113,  2115,  2117,  2119,  2121,  2123,  2125,  2127,
    2129,  2131,  2135,  2139,  2143,  2157,  2158,  2159,  2171,  2186,
    2198,  2200,  2202,  2213,  2237,  2250,  2254,  2260,  2267,  2274,
    2284,  2291,  2319,  2354,  2365,  2366,  2373,  2379,  2383,  2387,
    2391,  2395,  2399,  2403,  2407,  2411,  2415,  2419,  2423,  2427,
    2431,  2435,  2439,  2441,  2445,  2454,  2459,  2466,  2481,  2488,
    2492,  2496,  2500,  2504,  2518,  2519,  2523,  2524,  2532,  2533,
    2537,  2538,  2543,  2551,  2553,  2567,  2570,  2597,  2598,  2601,
    2602,  2613,  2631,  2638,  2647,  2664,  2709,  2717,  2725,  2733,
    2741,  2762,  2763,  2766,  2767,  2770,  2771,  2772,  2775,  2776,
    2779,  2780,  2781,  2782,  2783,  2784,  2785,  2786,  2787,  2788,
    2789,  2790,  2793,  2795,  2800,  2802,  2807,  2809,  2811,  2813,
    2815,  2817,  2819,  2821,  2835,  2837,  2841,  2845,  2852,  2856,
    2862,  2866,  2875,  2886,  2887,  2891,  2895,  2902,  2903,  2904,
    2905,  2906,  2907,  2908,  2909,  2910,  2911,  2921,  2925,  2932,
    2939,  2940,  2956,  2960,  2965,  2969,  2984,  2989,  2993,  2996,
    2999,  3000,  3001,  3004,  3011,  3021,  3035,  3036,  3040,  3051,
    3052,  3055,  3056,  3059,  3063,  3070,  3074,  3078,  3086,  3097,
    3098,  3102,  3103,  3107,  3108,  3111,  3112,  3122,  3123,  3127,
    3128,  3131,  3147,  3155,  3163,  3185,  3186,  3197,  3201,  3228,
    3230,  3235,  3237,  3247,  3249,  3260,  3264,  3268,  3272,  3276,
    3285,  3292,  3324,  3328,  3332,  3336,  3340,  3344,  3348,  3354,
    3355,  3371,  3372,  3373,  3376,  3377,  3382,  3383,  3384,  3387,
    3388,  3391,  3393,  3398,  3399,  3402,  3410,  3411,  3412,  3413,
    3414,  3417,  3418,     7,    18,    19,    23,    24,    25,    26,
       7,    16,    34,    41,    46,    47,    48,    49,     8,    33,
      62,    66,    67,    72,    73,    78,    79,    83,    84,    89,
      90,     7,    16,    25,    34,    43,    52,     5,    11,     7,
      20,     9,    16,    26,    33,    44,    45,    50,    51,    52,
      57,    58,    59,    60,    61,    65,    66,    67,    68,    73,
      74,    79,    83,    91,    92,    97,    98,    99,   105,   110,
     118,   119,    10,    16,    22,    32,    33,    41,    52,    64,
      72,    80,    87,    97,    99,   105,   109,   113,   128,   135,
     136,   137,   141,   142,     7,    16,     8,    22,    36,    48,
      56,    70,    71,    72,    73,    74,    87,    88,    93,    94,
      98,    99,     7,    21,    25,    32,    43,    44,    50,    51,
       9,    19,     2,     7,    14,    24,    25,    32,     3,    10,
      16,    22,    28,    37,    37,    39,    40,     6,     8,    21,
      34,    52,    74,    75,    76,    77,    11,    24,    41,    42,
      43,    48,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    61,    61,    61,    61,    61,    61,    61,    61,    61,
      61,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      62,    62,    62,    62,    62,    62,    62,    62,    62,    62,
      63,    63,    63,    63,    63,    63,    63,    63,    63,    63,
      63,    63,    63,    63,    63,    63,    63,    63,    63,    63,
      63,    63,    63,    63,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64,    64,    64,    64,    64,    64,    64,    64,    64,
      64,    64
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || YYTOKEN_TABLE
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "IDENT", "FCONST", "SCONST", "BCONST",
  "XCONST", "Op", "ICONST", "PARAM", "TYPECAST", "DOT_DOT", "COLON_EQUALS",
  "EQUALS_GREATER", "LAMBDA_ARROW", "LESS_EQUALS", "GREATER_EQUALS",
  "NOT_EQUALS", "ABORT_P", "ABSOLUTE_P", "ACCESS", "ACTION", "ADD_P",
  "ADMIN", "AFTER", "AGGREGATE", "ALL", "ALSO", "ALTER", "ALWAYS",
  "ANALYSE", "ANALYZE", "AND", "ANY", "ARRAY", "AS", "ASC_P", "ASSERTION",
  "ASSIGNMENT", "ASYMMETRIC", "AT", "ATTACH", "ATTRIBUTE", "AUTHORIZATION",
  "BACKWARD", "BEFORE", "BEGIN_P", "BETWEEN", "BIGINT", "BINARY", "BIT",
  "BOOLEAN_P", "BOTH", "BY", "CACHE", "CALL_P", "CALLED", "CASCADE",
  "CASCADED", "CASE", "CAST", "CATALOG_P", "CHAIN", "CHAR_P", "CHARACTER",
  "CHARACTERISTICS", "CHECK_P", "CHECKPOINT", "CLASS", "CLOSE", "CLUSTER",
  "COALESCE", "COLLATE", "COLLATION", "COLUMN", "COLUMNS", "COMMENT",
  "COMMENTS", "COMMIT", "COMMITTED", "CONCURRENTLY", "CONFIGURATION",
  "CONFLICT", "CONNECTION", "CONSTRAINT", "CONSTRAINTS", "CONTENT_P",
  "CONTINUE_P", "CONVERSION_P", "COPY", "COST", "CREATE_P", "CROSS", "CSV",
  "CUBE", "CURRENT_P", "CURRENT_CATALOG", "CURRENT_DATE", "CURRENT_ROLE",
  "CURRENT_SCHEMA", "CURRENT_TIME", "CURRENT_TIMESTAMP", "CURRENT_USER",
  "CURSOR", "CYCLE", "DATA_P", "DATABASE", "DAY_P", "DAYS_P", "DEALLOCATE",
  "DEC", "DECIMAL_P", "DECLARE", "DEFAULT", "DEFAULTS", "DEFERRABLE",
  "DEFERRED", "DEFINER", "DELETE_P", "DELIMITER", "DELIMITERS", "DEPENDS",
  "DESC_P", "DESCRIBE", "DETACH", "DICTIONARY", "DISABLE_P", "DISCARD",
  "DISTINCT", "DO", "DOCUMENT_P", "DOMAIN_P", "DOUBLE_P", "DROP", "EACH",
  "ELSE", "ENABLE_P", "ENCODING", "ENCRYPTED", "END_P", "ENUM_P", "ESCAPE",
  "EVENT", "EXCEPT", "EXCLUDE", "EXCLUDING", "EXCLUSIVE", "EXECUTE",
  "EXISTS", "EXPLAIN", "EXPORT_P", "EXTENSION", "EXTERNAL", "EXTRACT",
  "FALSE_P", "FAMILY", "FETCH", "FILTER", "FIRST_P", "FLOAT_P",
  "FOLLOWING", "FOR", "FORCE", "FOREIGN", "FORWARD", "FREEZE", "FROM",
  "FULL", "FUNCTION", "FUNCTIONS", "GENERATED", "GLOB", "GLOBAL", "GRANT",
  "GRANTED", "GROUP_P", "GROUPING", "HANDLER", "HAVING", "HEADER_P",
  "HOLD", "HOUR_P", "HOURS_P", "IDENTITY_P", "IF_P", "ILIKE", "IMMEDIATE",
  "IMMUTABLE", "IMPLICIT_P", "IMPORT_P", "IN_P", "INCLUDING", "INCREMENT",
  "INDEX", "INDEXES", "INHERIT", "INHERITS", "INITIALLY", "INLINE_P",
  "INNER_P", "INOUT", "INPUT_P", "INSENSITIVE", "INSERT", "INSTEAD",
  "INT_P", "INTEGER", "INTERSECT", "INTERVAL", "INTO", "INVOKER", "IS",
  "ISNULL", "ISOLATION", "JOIN", "KEY", "LABEL", "LANGUAGE", "LARGE_P",
  "LAST_P", "LATERAL_P", "LEADING", "LEAKPROOF", "LEFT", "LEVEL", "LIKE",
  "LIMIT", "LISTEN", "LOAD", "LOCAL", "LOCALTIME", "LOCALTIMESTAMP",
  "LOCATION", "LOCK_P", "LOCKED", "LOGGED", "MACRO", "MAP", "MAPPING",
  "MATCH", "MATERIALIZED", "MAXVALUE", "METHOD", "MICROSECOND_P",
  "MICROSECONDS_P", "MILLISECOND_P", "MILLISECONDS_P", "MINUTE_P",
  "MINUTES_P", "MINVALUE", "MODE", "MONTH_P", "MONTHS_P", "MOVE", "NAME_P",
  "NAMES", "NATIONAL", "NATURAL", "NCHAR", "NEW", "NEXT", "NO", "NONE",
  "NOT", "NOTHING", "NOTIFY", "NOTNULL", "NOWAIT", "NULL_P", "NULLIF",
  "NULLS_P", "NUMERIC", "OBJECT_P", "OF", "OFF", "OFFSET", "OIDS", "OLD",
  "ON", "ONLY", "OPERATOR", "OPTION", "OPTIONS", "OR", "ORDER",
  "ORDINALITY", "OUT_P", "OUTER_P", "OVER", "OVERLAPS", "OVERLAY",
  "OVERRIDING", "OWNED", "OWNER", "PARALLEL", "PARSER", "PARTIAL",
  "PARTITION", "PASSING", "PASSWORD", "PERCENT", "PLACING", "PLANS",
  "POLICY", "POSITION", "PRAGMA_P", "PRECEDING", "PRECISION", "PREPARE",
  "PREPARED", "PRESERVE", "PRIMARY", "PRIOR", "PRIVILEGES", "PROCEDURAL",
  "PROCEDURE", "PROGRAM", "PUBLICATION", "QUOTE", "RANGE", "READ_P",
  "REAL", "REASSIGN", "RECHECK", "RECURSIVE", "REF", "REFERENCES",
  "REFERENCING", "REFRESH", "REINDEX", "RELATIVE_P", "RELEASE", "RENAME",
  "REPEATABLE", "REPLACE", "REPLICA", "RESET", "RESTART", "RESTRICT",
  "RETURNING", "RETURNS", "REVOKE", "RIGHT", "ROLE", "ROLLBACK", "ROLLUP",
  "ROW", "ROWS", "RULE", "SAMPLE", "SAVEPOINT", "SCHEMA", "SCHEMAS",
  "SCROLL", "SEARCH", "SECOND_P", "SECONDS_P", "SECURITY", "SELECT",
  "SEQUENCE", "SEQUENCES", "SERIALIZABLE", "SERVER", "SESSION",
  "SESSION_USER", "SET", "SETOF", "SETS", "SHARE", "SHOW", "SIMILAR",
  "SIMPLE", "SKIP", "SMALLINT", "SNAPSHOT", "SOME", "SQL_P", "STABLE",
  "STANDALONE_P", "START", "STATEMENT", "STATISTICS", "STDIN", "STDOUT",
  "STORAGE", "STRICT_P", "STRIP_P", "STRUCT", "SUBSCRIPTION", "SUBSTRING",
  "SYMMETRIC", "SYSID", "SYSTEM_P", "TABLE", "TABLES", "TABLESAMPLE",
  "TABLESPACE", "TEMP", "TEMPLATE", "TEMPORARY", "TEXT_P", "THEN", "TIME",
  "TIMESTAMP", "TO", "TRAILING", "TRANSACTION", "TRANSFORM", "TREAT",
  "TRIGGER", "TRIM", "TRUE_P", "TRUNCATE", "TRUSTED", "TYPE_P", "TYPES_P",
  "UNBOUNDED", "UNCOMMITTED", "UNENCRYPTED", "UNION", "UNIQUE", "UNKNOWN",
  "UNLISTEN", "UNLOGGED", "UNTIL", "UPDATE", "USER", "USING", "VACUUM",
  "VALID", "VALIDATE", "VALIDATOR", "VALUE_P", "VALUES", "VARCHAR",
  "VARIADIC", "VARYING", "VERBOSE", "VERSION_P", "VIEW", "VIEWS",
  "VOLATILE", "WHEN", "WHERE", "WHITESPACE_P", "WINDOW", "WITH", "WITHIN",
  "WITHOUT", "WORK", "WRAPPER", "WRITE_P", "XML_P", "XMLATTRIBUTES",
  "XMLCONCAT", "XMLELEMENT", "XMLEXISTS", "XMLFOREST", "XMLNAMESPACES",
  "XMLPARSE", "XMLPI", "XMLROOT", "XMLSERIALIZE", "XMLTABLE", "YEAR_P",
  "YEARS_P", "YES_P", "ZONE", "NOT_LA", "NULLS_LA", "WITH_LA", "'<'",
  "'>'", "'='", "POSTFIXOP", "'+'", "'-'", "'*'", "'/'", "'%'", "'^'",
  "UMINUS", "'['", "']'", "'('", "')'", "'.'", "';'", "','", "'?'", "':'",
  "$accept", "stmtblock", "stmtmulti", "stmt", "AlterTableStmt",
  "alter_identity_column_option_list", "alter_column_default",
  "alter_identity_column_option", "alter_generic_option_list",
  "alter_table_cmd", "alter_using", "alter_generic_option_elem",
  "alter_table_cmds", "alter_generic_options", "opt_set_data",
  "DeallocateStmt", "RenameStmt", "opt_column", "InsertStmt",
  "insert_rest", "insert_target", "opt_conf_expr", "opt_with_clause",
  "insert_column_item", "set_clause", "opt_on_conflict", "index_elem",
  "returning_clause", "override_kind", "set_target_list", "opt_collate",
  "opt_class", "insert_column_list", "set_clause_list", "index_params",
  "set_target", "PragmaStmt", "CreateSeqStmt", "OptSeqOptList",
  "ExecuteStmt", "execute_param_clause", "AlterSeqStmt", "SeqOptList",
  "opt_with", "NumericOnly", "SeqOptElem", "opt_by", "SignedIconst",
  "TransactionStmt", "opt_transaction", "CreateStmt",
  "ConstraintAttributeSpec", "def_arg", "OptParenthesizedSeqOptList",
  "generic_option_arg", "key_action", "ColConstraint", "ColConstraintElem",
  "generic_option_elem", "key_update", "key_actions",
  "create_generic_options", "OnCommitOption", "reloptions",
  "opt_no_inherit", "TableConstraint", "TableLikeOption", "reloption_list",
  "ExistingIndex", "ConstraintAttr", "OptWith", "definition",
  "TableLikeOptionList", "generic_option_name", "ConstraintAttributeElem",
  "columnDef", "generic_option_list", "def_list", "index_name",
  "TableElement", "def_elem", "opt_definition", "OptTableElementList",
  "columnElem", "opt_column_list", "ColQualList", "key_delete",
  "reloption_elem", "columnList", "func_type", "ConstraintElem",
  "TableElementList", "key_match", "TableLikeClause", "OptTemp",
  "generated_when", "DropStmt", "drop_type_any_name", "drop_type_name",
  "any_name_list", "opt_drop_behavior", "drop_type_name_on_any_name",
  "CreateFunctionStmt", "macro_alias", "param_list", "UpdateStmt",
  "CopyStmt", "copy_from", "copy_delimiter", "copy_generic_opt_arg_list",
  "opt_using", "opt_as", "opt_program", "copy_options",
  "copy_generic_opt_arg", "copy_generic_opt_elem", "opt_oids",
  "copy_opt_list", "opt_binary", "copy_opt_item",
  "copy_generic_opt_arg_list_item", "copy_file_name",
  "copy_generic_opt_list", "SelectStmt", "select_with_parens",
  "select_no_parens", "select_clause", "simple_select", "with_clause",
  "cte_list", "common_table_expr", "into_clause", "OptTempTableName",
  "opt_table", "all_or_distinct", "distinct_clause", "opt_all_clause",
  "opt_sort_clause", "sort_clause", "sortby_list", "sortby",
  "opt_asc_desc", "opt_nulls_order", "select_limit", "opt_select_limit",
  "limit_clause", "offset_clause", "sample_count", "sample_clause",
  "opt_sample_func", "tablesample_entry", "tablesample_clause",
  "opt_tablesample_clause", "opt_repeatable_clause", "select_limit_value",
  "select_offset_value", "select_fetch_first_value", "I_or_F_const",
  "row_or_rows", "first_or_next", "group_clause", "group_by_list",
  "group_by_item", "empty_grouping_set", "having_clause",
  "for_locking_clause", "opt_for_locking_clause", "for_locking_items",
  "for_locking_item", "for_locking_strength", "locked_rels_list",
  "opt_nowait_or_skip", "values_clause", "from_clause", "from_list",
  "table_ref", "joined_table", "alias_clause", "opt_alias_clause",
  "func_alias_clause", "join_type", "join_outer", "join_qual",
  "relation_expr", "func_table", "rowsfrom_item", "rowsfrom_list",
  "opt_col_def_list", "opt_ordinality", "where_clause",
  "TableFuncElementList", "TableFuncElement", "opt_collate_clause",
  "colid_type_list", "RowOrStruct", "Typename", "opt_array_bounds",
  "SimpleTypename", "ConstTypename", "GenericType", "opt_type_modifiers",
  "Numeric", "opt_float", "Bit", "ConstBit", "BitWithLength",
  "BitWithoutLength", "Character", "ConstCharacter", "CharacterWithLength",
  "CharacterWithoutLength", "character", "opt_varying", "ConstDatetime",
  "ConstInterval", "opt_timezone", "year_keyword", "month_keyword",
  "day_keyword", "hour_keyword", "minute_keyword", "second_keyword",
  "millisecond_keyword", "microsecond_keyword", "opt_interval", "a_expr",
  "b_expr", "c_expr", "func_application", "func_expr",
  "func_expr_windowless", "func_expr_common_subexpr",
  "within_group_clause", "filter_clause", "window_clause",
  "window_definition_list", "window_definition", "over_clause",
  "window_specification", "opt_existing_window_name",
  "opt_partition_clause", "opt_frame_clause", "frame_extent",
  "frame_bound", "qualified_row", "row", "sub_type", "all_Op", "MathOp",
  "qual_Op", "qual_all_Op", "subquery_Op", "any_operator", "expr_list",
  "func_arg_list", "func_arg_expr", "type_list", "extract_list",
  "extract_arg", "overlay_list", "overlay_placing", "position_list",
  "substr_list", "substr_from", "substr_for", "trim_list", "in_expr",
  "case_expr", "when_clause_list", "when_clause", "case_default",
  "case_arg", "columnref", "indirection_el", "opt_slice_bound",
  "indirection", "opt_indirection", "opt_asymmetric", "opt_target_list",
  "target_list", "target_el", "qualified_name_list", "qualified_name",
  "name_list", "name", "attr_name", "func_name", "AexprConst", "Iconst",
  "Sconst", "ColId", "ColIdOrString", "type_function_name", "any_name",
  "attrs", "opt_name_list", "param_name", "ColLabel", "ColLabelOrString",
  "PrepareStmt", "prep_type_clause", "PreparableStmt", "CreateSchemaStmt",
  "OptSchemaEltList", "schema_stmt", "IndexStmt", "access_method",
  "access_method_clause", "opt_concurrently", "opt_index_name",
  "opt_reloptions", "opt_unique", "AlterObjectSchemaStmt",
  "CheckPointStmt", "ExportStmt", "ImportStmt", "ExplainStmt",
  "opt_verbose", "explain_option_arg", "ExplainableStmt",
  "NonReservedWord", "NonReservedWord_or_Sconst", "explain_option_list",
  "analyze_keyword", "opt_boolean_or_string", "explain_option_elem",
  "explain_option_name", "VariableSetStmt", "set_rest", "generic_set",
  "var_value", "zone_value", "var_list", "LoadStmt", "file_name",
  "VacuumStmt", "vacuum_option_elem", "opt_full", "vacuum_option_list",
  "opt_freeze", "DeleteStmt", "relation_expr_opt_alias",
  "where_or_current_clause", "using_clause", "AnalyzeStmt",
  "VariableResetStmt", "generic_reset", "reset_rest", "VariableShowStmt",
  "show_or_describe", "var_name", "CallStmt", "ViewStmt",
  "opt_check_option", "CreateAsStmt", "opt_with_data", "create_as_target",
  "unreserved_keyword", "col_name_keyword", "type_func_name_keyword",
  "reserved_keyword", 0
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[YYLEX-NUM] -- Internal token number corresponding to
   token YYLEX-NUM.  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,    60,    62,    61,   727,    43,    45,    42,    47,
      37,    94,   728,    91,    93,    40,    41,    46,    59,    44,
      63,    58
};
# endif

/* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   492,   493,   494,   494,   495,   495,   495,   495,   495,
     495,   495,   495,   495,   495,   495,   495,   495,   495,   495,
     495,   495,   495,   495,   495,   495,   495,   495,   495,   495,
     495,   495,   495,   495,   495,   495,   495,   495,   495,   496,
     496,   496,   496,   496,   496,   496,   496,   497,   497,   498,
     498,   499,   499,   499,   499,   500,   500,   501,   501,   501,
     501,   501,   501,   501,   501,   501,   501,   501,   501,   501,
     501,   501,   501,   501,   501,   501,   501,   501,   501,   501,
     501,   501,   501,   501,   501,   501,   502,   502,   503,   503,
     503,   503,   504,   504,   505,   506,   506,   507,   507,   507,
     507,   508,   508,   508,   508,   508,   508,   508,   508,   508,
     508,   508,   508,   508,   509,   509,   510,   511,   511,   511,
     511,   511,   512,   512,   513,   513,   513,   514,   514,   515,
     516,   516,   517,   517,   517,   518,   518,   518,   519,   519,
     520,   520,   521,   521,   522,   522,   523,   523,   524,   524,
     525,   525,   526,   526,   527,   528,   528,   528,   529,   529,
     530,   530,   531,   531,   531,   532,   532,   533,   533,   534,
     534,   535,   535,   535,   536,   536,   536,   536,   537,   537,
     537,   537,   537,   537,   537,   537,   537,   537,   537,   537,
     537,   537,   538,   538,   539,   539,   539,   540,   540,   540,
     540,   540,   540,   541,   541,   541,   542,   542,   543,   543,
     544,   544,   544,   544,   544,   544,   545,   545,   546,   547,
     547,   547,   547,   547,   548,   548,   548,   548,   549,   549,
     549,   549,   549,   549,   549,   549,   550,   551,   552,   552,
     552,   552,   552,   553,   553,   554,   554,   554,   554,   555,
     556,   556,   557,   557,   558,   558,   558,   558,   558,   558,
     558,   558,   559,   559,   560,   561,   561,   561,   561,   562,
     562,   562,   562,   563,   564,   564,   564,   565,   566,   566,
     566,   566,   566,   566,   567,   568,   568,   569,   569,   570,
     571,   571,   571,   572,   572,   573,   573,   574,   574,   575,
     576,   576,   577,   577,   578,   579,   579,   579,   579,   580,
     580,   581,   581,   581,   582,   582,   582,   582,   582,   582,
     583,   583,   584,   584,   584,   584,   585,   586,   586,   586,
     586,   586,   586,   586,   586,   587,   587,   588,   588,   588,
     588,   588,   588,   589,   589,   589,   589,   589,   589,   589,
     589,   589,   589,   589,   589,   589,   589,   589,   590,   590,
     590,   590,   590,   590,   590,   591,   591,   592,   592,   592,
     593,   593,   593,   594,   595,   595,   596,   596,   597,   598,
     598,   599,   599,   600,   600,   601,   601,   602,   602,   603,
     603,   604,   604,   605,   605,   606,   606,   606,   606,   606,
     607,   608,   608,   609,   609,   610,   610,   611,   611,   611,
     611,   611,   611,   611,   611,   611,   611,   611,   611,   611,
     611,   612,   613,   613,   613,   614,   614,   615,   615,   616,
     616,   617,   617,   617,   617,   617,   617,   617,   617,   618,
     618,   619,   619,   619,   619,   619,   619,   619,   620,   620,
     620,   621,   621,   622,   623,   623,   624,   624,   624,   624,
     624,   624,   624,   624,   624,   625,   625,   626,   626,   626,
     627,   627,   628,   628,   629,   629,   630,   631,   631,   632,
     632,   633,   633,   633,   634,   634,   634,   635,   635,   635,
     635,   636,   636,   637,   637,   637,   637,   638,   638,   639,
     639,   639,   639,   639,   639,   640,   640,   641,   641,   642,
     642,   642,   642,   643,   644,   644,   645,   645,   646,   646,
     647,   648,   648,   648,   649,   649,   650,   650,   651,   651,
     652,   652,   653,   653,   654,   654,   655,   656,   656,   657,
     657,   658,   658,   659,   659,   660,   661,   661,   661,   661,
     662,   662,   663,   663,   663,   664,   664,   665,   665,   666,
     666,   667,   667,   667,   667,   667,   667,   667,   668,   668,
     668,   668,   668,   668,   669,   669,   669,   669,   670,   670,
     671,   671,   671,   671,   671,   672,   672,   672,   672,   673,
     673,   674,   674,   675,   675,   675,   675,   676,   676,   677,
     678,   678,   679,   679,   680,   680,   681,   681,   682,   682,
     683,   684,   684,   685,   685,   686,   686,   687,   687,   687,
     687,   687,   687,   687,   687,   688,   688,   688,   689,   689,
     689,   689,   689,   689,   689,   690,   690,   690,   690,   691,
     691,   692,   692,   693,   693,   693,   693,   693,   693,   693,
     693,   693,   693,   693,   694,   694,   695,   695,   696,   696,
     697,   698,   699,   699,   700,   700,   701,   702,   703,   703,
     703,   703,   703,   703,   704,   704,   705,   705,   705,   705,
     706,   707,   707,   707,   708,   708,   709,   709,   710,   710,
     711,   711,   712,   712,   713,   713,   714,   714,   715,   715,
     716,   716,   716,   716,   716,   716,   716,   716,   716,   716,
     716,   716,   716,   716,   716,   716,   717,   717,   717,   717,
     717,   717,   717,   717,   717,   717,   717,   717,   717,   717,
     717,   717,   717,   717,   717,   717,   717,   717,   717,   717,
     717,   717,   717,   717,   717,   717,   717,   717,   717,   717,
     717,   717,   717,   717,   717,   717,   717,   717,   717,   717,
     717,   717,   717,   717,   717,   717,   717,   717,   717,   717,
     717,   717,   717,   717,   717,   717,   717,   717,   717,   717,
     717,   717,   718,   718,   718,   718,   718,   718,   718,   718,
     718,   718,   718,   718,   718,   718,   718,   718,   718,   718,
     718,   718,   718,   718,   718,   719,   719,   719,   719,   719,
     719,   719,   719,   719,   719,   720,   720,   720,   720,   720,
     720,   720,   721,   721,   722,   722,   723,   723,   723,   723,
     723,   723,   723,   723,   723,   723,   723,   723,   723,   723,
     723,   723,   723,   723,   723,   723,   723,   723,   723,   723,
     723,   723,   723,   723,   724,   724,   725,   725,   726,   726,
     727,   727,   728,   729,   729,   729,   730,   731,   731,   732,
     732,   733,   733,   733,   734,   734,   735,   735,   735,   735,
     735,   736,   736,   737,   737,   738,   738,   738,   739,   739,
     740,   740,   740,   740,   740,   740,   740,   740,   740,   740,
     740,   740,   741,   741,   742,   742,   743,   743,   743,   743,
     743,   743,   743,   743,   744,   744,   745,   745,   746,   746,
     747,   747,   747,   748,   748,   749,   749,   750,   750,   750,
     750,   750,   750,   750,   750,   750,   750,   751,   751,   752,
     753,   753,   754,   754,   754,   754,   754,   754,   755,   756,
     757,   757,   757,   758,   758,   759,   760,   760,   761,   762,
     762,   763,   763,   764,   764,   765,   765,   765,   765,   766,
     766,   767,   767,   768,   768,   769,   769,   770,   770,   771,
     771,   772,   772,   772,   772,   773,   773,   774,   774,   775,
     775,   776,   777,   778,   778,   779,   779,   779,   779,   779,
     779,   779,   779,   779,   779,   779,   779,   779,   779,   780,
     781,   782,   782,   782,   783,   783,   784,   784,   784,   785,
     785,   786,   786,   787,   787,   788,   789,   789,   789,   789,
     789,   790,   790,   791,   792,   792,   793,   793,   793,   793,
     794,   794,   795,   795,   796,   796,   796,   796,   797,   797,
     798,   799,   799,   800,   800,   801,   801,   802,   802,   803,
     803,   804,   804,   804,   804,   804,   804,   805,   805,   806,
     807,   808,   808,   808,   808,   809,   809,   810,   810,   810,
     811,   811,   811,   811,   811,   812,   812,   812,   812,   813,
     813,   814,   814,   815,   815,   816,   816,   816,   816,   817,
     818,   818,   819,   819,   819,   820,   820,   820,   820,   821,
     821,   821,   821,   822,   822,   823,   823,   823,   823,   823,
     823,   823,   824,   824,   825,   826,   827,   827,   827,   827,
     827,   828,   828,   828,   828,   828,   829,   829,   830,   830,
     831,   831,   832,   833,   833,   833,   834,   834,   835,   835,
     836,   836,   837,   838,   838,   839,   839,   839,   840,   840,
     840,   840,   840,   841,   841,   842,   842,   843,   844,   844,
     844,   844,   845,   845,   845,   845,   846,   846,   847,   847,
     847,   848,   849,   849,   849,   849,   849,   849,   849,   849,
     849,   849,   849,   849,   849,   849,   849,   849,   849,   849,
     849,   849,   849,   849,   849,   849,   849,   849,   849,   849,
     849,   849,   849,   849,   849,   849,   849,   849,   849,   849,
     849,   849,   849,   849,   849,   849,   849,   849,   849,   849,
     849,   849,   849,   849,   849,   849,   849,   849,   849,   849,
     849,   849,   849,   849,   849,   849,   849,   849,   849,   849,
     849,   849,   849,   849,   849,   849,   849,   849,   849,   849,
     849,   849,   849,   849,   849,   849,   849,   849,   849,   849,
     849,   849,   849,   849,   849,   849,   849,   849,   849,   849,
     849,   849,   849,   849,   849,   849,   849,   849,   849,   849,
     849,   849,   849,   849,   849,   849,   849,   849,   849,   849,
     849,   849,   849,   849,   849,   849,   849,   849,   849,   849,
     849,   849,   849,   849,   849,   849,   849,   849,   849,   849,
     849,   849,   849,   849,   849,   849,   849,   849,   849,   849,
     849,   849,   849,   849,   849,   849,   849,   849,   849,   849,
     849,   849,   849,   849,   849,   849,   849,   849,   849,   849,
     849,   849,   849,   849,   849,   849,   849,   849,   849,   849,
     849,   849,   849,   849,   849,   849,   849,   849,   849,   849,
     849,   849,   849,   849,   849,   849,   849,   849,   849,   849,
     849,   849,   849,   849,   849,   849,   849,   849,   849,   849,
     849,   849,   849,   849,   849,   849,   849,   849,   849,   849,
     849,   849,   849,   849,   849,   849,   849,   849,   849,   849,
     849,   849,   849,   849,   849,   849,   849,   849,   849,   849,
     849,   849,   849,   849,   849,   849,   849,   849,   849,   849,
     849,   849,   849,   849,   849,   849,   849,   849,   849,   849,
     849,   849,   849,   849,   849,   849,   849,   849,   849,   849,
     849,   849,   849,   849,   849,   849,   849,   849,   849,   849,
     849,   849,   849,   849,   849,   849,   849,   849,   849,   849,
     849,   849,   849,   849,   849,   849,   849,   849,   849,   849,
     849,   850,   850,   850,   850,   850,   850,   850,   850,   850,
     850,   850,   850,   850,   850,   850,   850,   850,   850,   850,
     850,   850,   850,   850,   850,   850,   850,   850,   850,   850,
     850,   850,   850,   850,   850,   850,   850,   850,   850,   850,
     850,   850,   850,   850,   850,   850,   850,   850,   850,   850,
     851,   851,   851,   851,   851,   851,   851,   851,   851,   851,
     851,   851,   851,   851,   851,   851,   851,   851,   851,   851,
     851,   851,   851,   851,   852,   852,   852,   852,   852,   852,
     852,   852,   852,   852,   852,   852,   852,   852,   852,   852,
     852,   852,   852,   852,   852,   852,   852,   852,   852,   852,
     852,   852,   852,   852,   852,   852,   852,   852,   852,   852,
     852,   852,   852,   852,   852,   852,   852,   852,   852,   852,
     852,   852,   852,   852,   852,   852,   852,   852,   852,   852,
     852,   852,   852,   852,   852,   852,   852,   852,   852,   852,
     852,   852,   852,   852,   852,   852,   852,   852,   852,   852,
     852,   852
};

/* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     0,     4,
       6,     4,     6,     4,     6,     4,     6,     1,     2,     3,
       2,     1,     3,     2,     3,     1,     3,     2,     5,     3,
       6,     4,     6,     6,     6,     5,     5,     6,     9,     4,
       5,     7,     6,     4,     8,     4,     2,     4,     3,     6,
       4,     2,     2,     2,     2,     1,     2,     0,     1,     2,
       2,     2,     1,     3,     4,     2,     0,     2,     3,     2,
       3,     6,     6,     8,     6,     8,     6,     8,     6,     8,
       8,    10,     8,    10,     1,     0,     7,     1,     4,     4,
       7,     2,     1,     3,     4,     3,     0,     1,     0,     2,
       3,     5,     8,     5,     0,     5,     5,     7,     2,     0,
       1,     1,     1,     3,     2,     0,     1,     0,     1,     3,
       1,     3,     1,     3,     2,     2,     4,     5,     5,     8,
       1,     0,     3,     9,    12,     3,     0,     4,     6,     1,
       2,     1,     1,     0,     1,     2,     2,     1,     2,     2,
       1,     2,     3,     2,     2,     2,     2,     3,     3,     3,
       1,     3,     1,     0,     1,     2,     2,     2,     2,     2,
       2,     2,     2,     1,     1,     0,     9,    12,     0,     2,
       1,     1,     1,     1,     1,     1,     3,     0,     1,     2,
       1,     1,     2,     2,     3,     1,     1,     2,     2,     1,
       2,     3,     5,     2,     5,     5,     2,     3,     1,     1,
       2,     2,     0,     4,     0,     3,     4,     4,     0,     3,
       2,     0,     3,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     3,     3,     1,     2,     2,     2,     2,
       2,     2,     0,     3,     3,     3,     0,     1,     2,     1,
       2,     2,     2,     2,     4,     1,     3,     1,     3,     1,
       1,     1,     1,     3,     1,     2,     0,     1,     0,     1,
       3,     0,     2,     0,     3,     3,     1,     5,     3,     1,
       3,     1,     4,     5,     5,     6,     3,     7,     4,    11,
       1,     3,     2,     2,     2,     0,     3,     1,     1,     2,
       2,     2,     2,     1,     0,     1,     2,     6,     4,     6,
       4,     6,     8,     1,     1,     1,     1,     1,     2,     1,
       2,     1,     1,     1,     3,     3,     3,     3,     2,     2,
       1,     3,     1,     1,     1,     1,     3,     1,     1,     0,
       1,     1,     1,     6,     1,     1,     2,     3,     8,    11,
       9,     1,     1,     3,     0,     1,     3,     1,     0,     1,
       0,     1,     0,     1,     3,     1,     1,     1,     3,     0,
       2,     2,     0,     2,     0,     1,     0,     1,     1,     1,
       3,     3,     1,     1,     3,     3,     3,     3,     4,     3,
       2,     1,     1,     1,     1,     1,     3,     1,     1,     3,
       3,     1,     2,     4,     4,     2,     3,     5,     5,     1,
       1,    10,    10,     1,     2,     4,     4,     4,     2,     2,
       3,     1,     3,     6,     2,     0,     3,     3,     4,     4,
       4,     4,     3,     2,     1,     1,     0,     1,     1,     0,
       1,     5,     1,     0,     1,     0,     3,     1,     3,     4,
       3,     1,     1,     0,     2,     2,     0,     2,     2,     1,
       1,     1,     0,     2,     4,     5,     4,     2,     3,     2,
       2,     2,     2,     1,     2,     3,     0,     1,     0,     5,
       1,     4,     6,     2,     1,     0,     4,     0,     1,     1,
       1,     1,     2,     2,     1,     1,     1,     1,     1,     1,
       3,     0,     1,     3,     1,     1,     2,     2,     0,     1,
       3,     1,     0,     1,     2,     3,     2,     4,     2,     3,
       2,     0,     1,     2,     0,     4,     5,     2,     0,     1,
       3,     3,     3,     3,     3,     3,     1,     4,     3,     4,
       5,     4,     5,     4,     5,     2,     4,     1,     1,     0,
       1,     4,     5,     4,     0,     2,     2,     2,     1,     1,
       0,     4,     2,     1,     2,     2,     4,     2,     6,     2,
       1,     3,     4,     0,     2,     0,     2,     0,     1,     3,
       3,     2,     0,     2,     4,     1,     1,     2,     3,     5,
       6,     2,     3,     4,     4,     3,     4,     0,     1,     1,
       1,     1,     1,     2,     4,     1,     1,     1,     1,     2,
       3,     3,     0,     1,     1,     1,     1,     1,     2,     2,
       2,     2,     2,     1,     3,     0,     1,     1,     1,     1,
       5,     2,     1,     1,     1,     1,     4,     1,     2,     2,
       1,     3,     3,     2,     1,     0,     5,     2,     5,     2,
       1,     3,     3,     0,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     3,     3,
       3,     3,     3,     3,     3,     0,     1,     3,     3,     5,
       2,     2,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     2,     2,     3,     3,     2,
       2,     3,     3,     5,     4,     6,     3,     5,     4,     6,
       4,     6,     5,     7,     3,     2,     4,     3,     2,     1,
       3,     3,     3,     3,     4,     3,     4,     3,     4,     5,
       6,     6,     7,     6,     7,     6,     7,     3,     4,     4,
       6,     1,     1,     3,     2,     2,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     2,
       2,     5,     6,     6,     7,     1,     1,     2,     2,     4,
       1,     1,     1,     2,     2,     3,     5,     6,     8,     6,
       6,     4,     4,     1,     1,     1,     5,     1,     1,     4,
       1,     4,     1,     4,     1,     4,     1,     1,     1,     1,
       1,     1,     6,     4,     4,     4,     4,     6,     5,     5,
       5,     4,     6,     4,     5,     0,     5,     0,     2,     0,
       1,     3,     3,     2,     2,     0,     6,     1,     0,     3,
       0,     2,     2,     0,     1,     4,     2,     2,     2,     2,
       2,     4,     3,     1,     5,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     4,     1,     4,     1,     4,     1,     2,
       1,     2,     1,     2,     1,     3,     1,     3,     1,     3,
       1,     3,     3,     1,     3,     3,     0,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     4,     3,     2,
       3,     0,     3,     3,     2,     2,     1,     0,     2,     2,
       3,     2,     1,     1,     3,     5,     1,     2,     4,     2,
       0,     1,     0,     1,     2,     2,     2,     3,     5,     1,
       0,     1,     2,     0,     2,     1,     0,     1,     0,     1,
       3,     3,     2,     1,     1,     1,     3,     1,     2,     1,
       3,     1,     1,     1,     2,     1,     1,     1,     1,     1,
       2,     6,     2,     5,     3,     3,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       2,     2,     3,     3,     0,     1,     1,     1,     1,     1,
       1,     1,     1,     5,     3,     0,     1,     1,     1,     1,
       4,     7,     2,     0,     1,     1,     1,     1,    13,    16,
       1,     2,     0,     1,     0,     1,     0,     2,     0,     1,
       0,     6,     8,     6,     8,     6,     8,     2,     1,     4,
       3,     2,     4,     3,     5,     1,     0,     1,     1,     0,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     3,     1,     1,     1,     1,     1,     1,     2,
       1,     1,     2,     3,     3,     1,     3,     3,     2,     3,
       3,     3,     3,     1,     1,     1,     1,     3,     5,     1,
       1,     1,     1,     3,     2,     1,     4,     5,     5,     4,
       6,     1,     1,     1,     1,     1,     1,     0,     1,     3,
       1,     0,     7,     1,     2,     3,     2,     0,     2,     0,
       2,     4,     2,     1,     1,     1,     2,     3,     2,     2,
       3,     4,     2,     1,     1,     1,     3,     2,     9,    11,
      12,    14,     3,     4,     4,     0,     7,    10,     2,     3,
       0,     4,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1
};

/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
   means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
     128,   205,     0,  1094,  1093,   205,     0,  1068,   205,   406,
     334,     0,  1164,     0,   205,     0,   128,     0,     0,     0,
       0,     0,     0,     0,   205,   473,     0,  1163,   205,     0,
    1137,     0,     0,     0,     0,     0,     2,     4,     7,    17,
      29,    25,     0,    27,    15,    20,     6,    31,    16,    19,
      13,    32,    11,    30,   440,   427,   475,   439,   127,   443,
      28,    14,    24,     5,    10,    22,    23,    21,  1076,    35,
      26,    33,    18,     8,    34,    36,     0,     9,    37,    12,
     204,   203,   197,     0,     0,     0,     0,     0,   198,  1011,
    1182,  1183,  1184,  1185,  1186,  1187,  1188,  1189,  1190,  1191,
    1192,  1193,  1194,  1195,  1196,  1197,  1530,  1198,  1199,  1200,
    1481,  1482,  1531,  1483,  1484,  1201,  1202,  1203,  1204,  1205,
    1206,  1207,  1208,  1485,  1486,  1209,  1210,  1211,  1212,  1213,
    1487,  1532,  1214,  1215,  1216,  1217,  1218,  1533,  1219,  1220,
    1221,  1222,  1223,  1224,  1225,  1226,  1227,  1534,  1228,  1229,
    1230,  1535,  1231,  1232,  1233,  1234,  1235,  1236,  1237,  1488,
    1489,  1238,  1239,  1240,  1241,  1242,  1243,  1244,  1245,  1246,
    1247,  1248,  1249,  1250,  1251,  1252,  1253,  1254,  1255,  1256,
    1257,  1258,  1259,  1260,  1261,  1262,  1263,  1264,  1265,  1490,
    1266,  1267,  1268,  1269,  1491,  1270,  1271,  1272,  1492,  1273,
    1274,  1275,  1536,  1537,  1276,  1277,  1278,  1538,  1279,  1280,
    1493,  1281,  1282,  1283,  1284,  1285,  1286,  1287,  1539,  1288,
    1289,  1290,  1291,  1292,  1293,  1294,  1295,  1296,  1297,  1298,
    1540,  1494,  1299,  1300,  1301,  1302,  1495,  1496,  1497,  1303,
    1541,  1542,  1304,  1543,  1305,  1306,  1307,  1308,  1309,  1310,
    1544,  1311,  1545,  1312,  1313,  1314,  1315,  1316,  1317,  1318,
    1319,  1320,  1321,  1322,  1323,  1324,  1325,  1326,  1327,  1328,
    1329,  1330,  1331,  1332,  1333,  1334,  1335,  1336,  1337,  1498,
    1546,  1499,  1338,  1339,  1340,  1500,  1341,  1342,  1547,  1343,
    1501,  1344,  1502,  1345,  1346,  1347,  1348,  1349,  1350,  1351,
    1352,  1353,  1503,  1548,  1354,  1549,  1504,  1355,  1356,  1357,
    1358,  1359,  1360,  1361,  1362,  1363,  1364,  1365,  1366,  1505,
    1367,  1368,  1506,  1369,  1370,  1371,  1372,  1373,  1374,  1375,
    1376,  1377,  1378,  1379,  1380,  1507,  1381,  1382,  1383,  1384,
    1385,  1386,  1387,  1388,  1389,  1390,  1391,  1392,  1393,  1394,
    1395,  1396,  1397,  1398,  1550,  1399,  1400,  1401,  1508,  1402,
    1403,  1404,  1405,  1406,  1407,  1408,  1409,  1410,  1411,  1412,
    1413,  1414,  1415,  1416,  1417,  1418,  1509,  1419,  1420,  1421,
    1551,  1422,  1423,  1510,  1424,  1425,  1426,  1427,  1428,  1429,
    1430,  1431,  1432,  1433,  1434,  1435,  1511,  1436,  1512,  1437,
    1438,  1439,  1552,  1440,  1441,  1442,  1443,  1444,  1513,  1514,
    1445,  1446,  1515,  1447,  1516,  1448,  1449,  1450,  1451,  1452,
    1453,  1454,  1455,  1456,  1457,  1458,  1459,  1460,  1461,  1462,
    1463,  1464,  1517,  1518,  1465,  1553,  1466,  1467,  1468,  1469,
    1470,  1471,  1472,  1473,  1474,  1475,  1476,  1519,  1520,  1521,
    1522,  1523,  1524,  1525,  1526,  1527,  1528,  1529,  1477,  1478,
    1479,  1480,  1167,     0,     0,   993,  1012,  1013,  1018,   200,
     405,   128,     0,   374,     0,     0,   375,     0,     0,   328,
     327,  1059,   333,     0,     0,     0,  1011,    99,  1369,    97,
     991,  1012,     0,   351,   352,     0,   360,     0,   345,   349,
     346,     0,   370,   362,   371,   363,   344,   364,   353,   343,
       0,   372,   347,     0,     0,     0,   201,   166,   334,   128,
       0,  1081,  1082,  1080,  1071,  1076,  1083,  1084,     0,  1067,
       0,  1010,  1125,  1124,   155,  1035,  1154,  1513,  1445,  1165,
    1155,  1152,  1153,   202,   472,   470,     0,   978,  1314,  1406,
    1417,  1513,  1102,  1105,     0,   199,     0,   444,   593,   987,
    1136,     0,  1141,     0,  1383,   448,   451,  1024,   449,   440,
       0,     0,     1,   128,     0,     0,     0,   469,   469,     0,
     469,     0,   432,   440,   435,   439,     0,  1075,  1150,  1162,
    1513,  1445,  1517,  1158,  1159,  1287,     0,     0,  1287,     0,
    1287,     0,  1287,     0,     0,   970,     0,   971,   994,  1037,
    1038,  1036,     0,  1039,   301,   332,   331,   330,   329,   334,
    1287,  1043,     0,     0,     0,     0,     0,  1054,   100,    98,
     358,   359,     0,   350,   348,     0,  1287,   369,  1019,   365,
    1287,   369,   989,  1287,     0,     0,   162,     0,  1073,  1085,
    1100,     0,  1101,  1091,  1079,  1086,  1087,  1088,   128,   404,
    1070,     0,     0,     0,     0,  1156,     0,     0,     0,   996,
     998,   999,   902,  1009,   973,  1482,  1483,  1484,   962,     0,
    1485,  1486,  1487,  1532,   840,   827,   836,   841,   828,   830,
     837,  1488,  1489,   781,  1253,  1490,  1491,  1007,  1492,  1495,
    1496,  1497,   832,   834,  1498,  1499,     0,  1008,  1501,  1502,
    1350,  1504,  1505,  1507,  1508,   838,  1510,  1512,  1513,  1514,
    1515,  1516,  1006,   839,  1518,     0,     0,     0,   984,     0,
     973,   812,     0,   635,   636,   658,   659,   637,   664,   665,
     667,   638,     0,   983,   716,   855,   811,   823,   883,   759,
       0,   810,   805,   455,   979,     0,   806,   995,   997,   963,
     455,   977,  1103,  1108,  1104,     0,     0,     0,     0,     0,
     595,   594,   988,  1135,  1133,  1134,  1132,  1131,  1138,     0,
    1140,  1076,   916,     0,   450,     0,     0,     0,   430,   429,
       3,     0,     0,  1143,     0,   467,   468,     0,     0,     0,
       0,     0,     0,     0,     0,   542,   489,   490,   492,   539,
     543,   551,     0,   436,     0,  1024,  1160,     0,     0,     0,
     115,   115,     0,     0,     0,     0,     0,    92,    41,    85,
       0,     0,     0,     0,   180,   193,     0,     0,     0,     0,
       0,   190,     0,     0,   173,    43,   167,   169,     0,   115,
       0,    39,     0,     0,     0,    45,     0,     0,     0,     0,
     815,   920,   475,   918,   993,     0,   969,     0,  1026,  1554,
    1555,  1556,  1557,  1558,  1559,  1560,  1561,  1562,  1563,  1564,
    1565,  1566,  1567,  1568,  1569,  1570,  1571,  1572,  1573,  1574,
    1575,  1576,  1577,  1578,  1579,  1580,  1581,  1582,  1583,  1584,
    1585,  1586,  1587,  1588,  1589,  1590,  1591,  1592,  1593,  1594,
    1595,  1596,  1597,  1598,  1599,  1600,  1601,  1602,  1603,  1604,
    1605,  1606,  1607,  1608,  1609,  1610,  1611,  1612,  1613,  1614,
    1615,  1616,  1617,  1618,  1619,  1620,  1621,  1622,  1623,  1624,
    1625,  1626,  1627,  1628,  1629,  1630,  1631,   966,   965,   992,
    1027,  1028,  1029,  1030,   972,     0,     0,   402,     0,     0,
    1040,     0,  1287,   161,  1287,   301,     0,   301,     0,     0,
    1053,  1056,   361,   357,   355,   354,   356,     0,   367,   368,
       0,   338,     0,  1020,     0,     0,   340,     0,     0,     0,
       0,   128,     0,   174,  1096,  1097,  1095,     0,     0,  1078,
     177,   194,  1090,  1099,  1089,  1098,  1077,  1072,     0,  1069,
     393,  1114,  1113,  1122,   156,     0,  1016,   646,   675,   653,
     675,   675,   642,   642,   655,   643,   644,   680,     0,     0,
     675,   642,   647,   615,     0,   645,   616,   683,   683,   670,
       0,   923,   627,   628,   629,   630,   656,   657,   631,   662,
     663,   632,   715,     0,   642,  1017,   128,  1157,  1166,     0,
     808,   674,   661,   961,     0,     0,   669,   668,     0,     0,
       0,     0,     0,   651,   650,   649,   814,   926,     0,   648,
       0,     0,   675,   675,   673,   739,     0,   652,     0,     0,
     941,     0,   947,     0,     0,     0,   679,     0,   677,     0,
       0,   740,   720,   721,   812,   916,     0,   807,   813,  1002,
       0,     0,   715,   715,   982,   902,     0,   899,   900,   901,
       0,     0,     0,   976,     0,   910,   912,     0,     0,   755,
     908,     0,   758,     0,     0,     0,     0,   896,   897,   898,
     890,   891,   892,   893,   894,   895,   906,   889,   736,     0,
       0,   857,     0,     0,   735,     0,     0,     0,   558,     0,
    1000,   964,   558,  1116,  1120,  1121,  1119,     0,  1115,  1107,
    1106,  1111,  1109,  1112,  1110,     0,  1129,     0,  1126,   555,
       0,   452,     0,     0,  1149,     0,   122,     0,  1144,     0,
     447,   446,   476,   477,   483,   445,   528,   529,     0,     0,
       0,     0,   548,   546,   519,   493,   518,     0,     0,   497,
       0,   520,   716,   541,   434,   487,   488,   491,   433,     0,
     544,     0,   554,   542,   492,     0,  1151,  1161,     0,     0,
       0,     0,     0,  1287,     0,     0,    76,    57,   253,     0,
     114,     0,     0,     0,     0,     0,     0,     0,    84,    81,
      82,    83,     0,     0,     0,     0,   178,   179,   192,     0,
     183,   184,   181,   185,   186,     0,     0,   171,   172,     0,
       0,     0,     0,   170,     0,     0,     0,     0,     0,     0,
       0,     0,   475,   475,   475,   821,     0,     0,   474,     0,
       0,   967,   970,   392,   309,     0,   299,     0,     0,     0,
       0,     0,   334,  1046,  1044,  1042,  1045,  1047,     0,     0,
     158,   160,     0,   298,   272,     0,  1058,   376,     0,     0,
    1287,  1055,   289,     0,   369,   366,  1021,     0,   369,   990,
       0,   369,   165,  1287,   301,     0,  1074,  1092,   175,   195,
     176,   196,   425,     0,   399,   407,   412,   390,     0,   390,
       0,   409,   413,   390,   408,   390,   403,     0,   157,     0,
       0,   627,     0,   621,   617,   688,   689,   690,   691,   698,
     699,   696,   697,   692,   693,   686,   687,   694,   695,   684,
     685,     0,   700,   701,   702,   703,   704,   705,   706,   707,
     633,  1034,     0,   639,   642,  1033,     0,   974,     0,     0,
     960,   956,     0,     0,     0,     0,     0,     0,   927,   928,
     929,   930,   931,   932,   933,   934,   935,     0,     0,   936,
       0,     0,     0,   672,   671,     0,   888,   899,   900,   901,
     896,   897,   898,   890,   891,   892,   893,   894,   895,   914,
       0,     0,     0,     0,     0,     0,     0,     0,   782,     0,
       0,   805,   882,     0,   916,   946,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   916,   952,     0,   973,
       0,     0,     0,  1004,  1005,   717,   731,   732,   733,   737,
    1032,  1031,   981,     0,   975,     0,     0,   718,   741,   746,
       0,   953,   777,     0,   765,     0,   754,     0,   763,   767,
     742,   757,     0,   738,     0,   976,   911,   913,     0,   909,
       0,   728,   729,   730,   722,   723,   724,   725,   726,   727,
     734,   887,   885,   886,     0,     0,     0,   865,   760,     0,
       0,   762,   761,  1279,  1314,     0,   466,   466,   466,   454,
     464,   980,     0,   607,   475,   607,     0,   715,   596,  1024,
    1139,  1127,  1128,   917,  1023,   128,     0,  1147,     0,     0,
       0,   134,   117,     0,  1145,     0,   150,   558,     0,   973,
       0,   481,   482,     0,   486,  1508,  1402,     0,     0,     0,
       0,   521,   549,     0,   540,     0,   996,   522,   995,   523,
     526,   527,   498,   550,   985,   552,     0,   545,   438,   437,
     556,     0,    42,     0,  1287,    59,     0,     0,     0,     0,
       0,     0,   208,   244,   208,    96,  1287,   369,  1287,   369,
    1186,  1254,  1418,     0,    55,    88,     0,   277,   108,     0,
     262,   306,    78,    93,   101,     0,     0,    44,   168,   182,
     187,   104,   191,   188,  1063,   189,   115,     0,    40,     0,
     102,     0,  1061,     0,     0,    46,   106,  1065,     0,     0,
       0,     0,   919,   816,   921,   922,   969,     0,   391,     0,
     300,     0,   401,   381,   382,   392,     0,   301,  1043,     0,
       0,     0,     0,     0,   292,   290,   320,     0,   297,   291,
     299,     0,     0,   248,     0,  1180,     0,     0,   377,   373,
       0,     0,   337,  1022,   339,     0,   341,     0,     0,   394,
       0,   397,     0,   396,   400,   395,   389,     0,   420,     0,
       0,     0,     0,     0,     0,  1123,     0,   622,   618,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   924,   640,
     471,     0,     0,     0,   957,     0,     0,   853,     0,   829,
     831,   641,   843,     0,   654,   833,   835,     0,   903,     0,
       0,     0,   844,   784,   785,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   800,   799,   845,   881,     0,     0,   944,   945,
     846,   682,   681,   683,   683,     0,     0,   951,     0,     0,
       0,   851,   809,   917,   666,   715,     0,     0,     0,     0,
       0,     0,     0,   766,   756,     0,   764,   768,     0,     0,
       0,   750,     0,     0,   748,   778,   744,     0,     0,   779,
       0,     0,     0,   822,   466,   466,   466,   466,   463,   465,
       0,     0,     0,     0,  1402,     0,   579,   557,   559,   566,
     579,   584,   824,   605,   825,   987,     0,   531,     0,   531,
       0,  1117,  1130,     0,  1148,     0,   139,   121,   141,   140,
       0,   148,     0,   973,     0,   139,   123,     0,   142,     0,
    1147,     0,   154,   478,     0,   904,   486,     0,   480,   525,
     524,     0,   496,   547,   494,     0,   553,     0,     0,     0,
     252,     0,     0,     0,   208,     0,     0,   316,     0,   303,
      77,     0,     0,     0,    51,     0,    69,    61,    47,    75,
       0,     0,    80,     0,    73,    90,    91,    89,    94,     0,
     236,   218,   249,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   819,   820,   817,   475,
     968,   423,   424,   173,   422,   310,     0,     0,  1058,  1041,
       0,     0,   161,   301,     0,   276,   272,     0,   270,   269,
     271,     0,  1181,   166,     0,  1176,  1057,     0,     0,  1052,
     369,     0,   426,     0,   385,   421,   410,   415,     0,   419,
     417,   416,   411,   414,   624,     0,   623,     0,   613,     0,
     625,     0,   634,   708,   709,   710,   711,   712,   713,   714,
     660,     0,   959,   955,     0,   826,   925,     0,   915,   939,
     938,   783,   795,   796,   797,   940,     0,     0,     0,   792,
     793,   794,   786,   787,   788,   789,   790,   791,   798,   949,
     948,   942,   943,   678,   676,     0,   848,   849,   850,   950,
     884,  1003,   719,     0,     0,   747,   954,   769,     0,     0,
       0,   743,   903,     0,     0,     0,     0,     0,   752,     0,
       0,     0,   868,   863,   864,     0,     0,     0,     0,   457,
     456,   462,   579,   584,     0,   440,     0,   566,     0,   578,
     515,   577,     0,     0,   590,   588,     0,   590,     0,   590,
       0,   515,     0,   580,   515,   577,     0,   597,   988,   606,
       0,   538,   816,   538,     0,   453,  1146,     0,  1142,     0,
       0,     0,   129,   126,   116,     0,     0,   151,   139,   130,
       0,   479,   484,   485,   495,   986,   109,   208,     0,     0,
      58,     0,   318,   264,   296,   279,     0,     0,     0,   209,
       0,   284,     0,    50,    70,     0,    66,     0,    95,     0,
       0,     0,     0,     0,    53,    65,     0,    48,     0,   369,
     369,    56,   263,  1602,   215,  1350,     0,   890,   891,   213,
     305,   210,   311,   212,   214,   642,   211,   308,   105,  1064,
       0,   103,     0,  1062,   112,   110,   107,  1066,     0,   404,
     384,     0,     0,  1287,     0,  1058,   159,   298,     0,   326,
     248,   321,     0,  1180,  1178,     0,  1175,     0,     0,     0,
     342,     0,   398,     0,   418,     0,     0,   619,   626,   958,
     842,   852,   937,     0,     0,     0,     0,   847,   775,   773,
     770,     0,   771,   751,     0,     0,   749,   745,     0,   780,
     854,     0,   870,   867,   461,   460,   459,   458,   565,   563,
       0,   568,  1015,  1014,   575,   508,   514,   564,     0,   560,
       0,   589,   585,     0,   586,     0,     0,   587,     0,   561,
       0,  1014,   562,     0,   604,     0,     0,   859,  1001,   859,
    1118,   138,   118,     0,   119,   149,     0,     0,     0,     0,
     143,   378,     0,   314,    60,     0,   296,     0,   208,   281,
     280,   283,   278,   282,   285,     0,     0,     0,     0,     0,
     265,     0,     0,     0,   229,     0,     0,   296,   302,   225,
     226,   335,     0,     0,     0,    62,    52,    49,    54,    63,
       0,     0,    64,    67,   612,    79,    72,   642,   642,     0,
       0,     0,   818,   380,   387,   173,     0,     0,     0,     0,
     298,     0,     0,     0,  1180,     0,     0,   206,     0,   245,
       0,   163,  1179,     0,  1168,     0,  1050,  1051,     0,     0,
     386,   620,   614,   801,     0,     0,     0,   772,   776,   774,
     753,   856,     0,   475,   600,     0,   603,   567,     0,     0,
     503,   510,     0,   513,   507,     0,   569,     0,     0,   571,
     573,     0,     0,     0,   608,     0,     0,     0,   991,     0,
     530,   532,   535,   534,   537,     0,   506,   506,     0,     0,
       0,   152,     0,   145,   145,     0,   131,   905,     0,   208,
       0,   295,   315,   243,     0,     0,   227,     0,   233,     0,
     267,   268,   266,   228,   296,   301,   230,   336,     0,    71,
       0,    87,   642,     0,   307,   113,   111,   404,     0,  1058,
    1175,     0,     0,   272,   166,  1177,   261,   254,   255,   256,
     257,   258,   259,   260,   275,   274,   246,   247,     0,     0,
       0,  1052,     0,   802,     0,   803,     0,   873,   605,     0,
       0,   599,     0,   501,   499,   502,   504,   500,     0,     0,
     576,   592,     0,   572,   570,   581,     0,   612,     0,   583,
     536,     0,   858,   860,     0,     0,   442,   441,     0,   125,
       0,   607,     0,     0,   147,   147,   133,     0,   301,   317,
       0,   287,   294,   286,     0,     0,   224,     0,   231,   325,
     217,   611,     0,    74,     0,   312,   379,   383,     0,  1169,
       0,  1175,   248,  1180,     0,  1172,     0,     0,  1058,   804,
     869,     0,     0,     0,   598,   601,     0,   574,     0,     0,
       0,   609,   610,   582,   533,     0,     0,   508,   120,   145,
     124,   153,   144,   483,   146,   483,     0,   325,   273,     0,
       0,   251,   217,     0,   242,     0,    68,    86,   313,     0,
     298,  1170,   207,   164,  1173,  1174,     0,   607,  1481,  1230,
    1452,     0,   871,   874,   872,   866,     0,   511,     0,   517,
     591,   861,   862,   505,   147,   486,   486,   607,   242,   288,
     293,     0,   232,   234,   322,   323,   324,     0,   238,   235,
     239,     0,  1175,     0,  1048,     0,   878,   877,   876,   880,
     879,   602,     0,     0,   509,   483,   136,   135,   132,   208,
     250,     0,     0,     0,   240,     0,   241,   216,  1171,  1058,
       0,   512,     0,   486,   319,   221,     0,   220,     0,   304,
     237,   607,   875,     0,   137,   219,   223,   222,  1049,   516
};

/* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    35,    36,    37,    38,  1916,  1917,  1918,  1623,   827,
    2553,  1624,   828,   829,  1920,    39,    40,  1242,   521,  1561,
    1185,  2298,    42,  1871,  1566,  1875,  2431,  2118,  1870,  1877,
    2534,  2593,  1872,  1567,  2432,  1568,    43,    44,  1310,    45,
     646,    46,  1311,  1269,  1011,   847,  1259,  1000,    47,    82,
      48,  1907,  2180,  2606,  1930,  2689,  2328,  2329,  1625,  2648,
    2649,  1909,  1972,  1251,  2642,  1684,  2484,  1629,  1612,  2330,
    1693,  2441,  2209,  1626,  2149,  1685,  2315,  2540,  1321,  1686,
    2541,  2308,  1687,  1294,  1314,  2151,  2650,  1630,  1295,  2181,
    1238,  1688,  2604,  1689,   483,  2333,    49,   513,   514,   637,
     981,   515,    50,   484,   969,   522,    52,  1675,  2355,  1983,
    2356,  1717,  1669,  1009,  1714,  1342,  1298,  1010,   472,  1356,
    1984,  1953,  1343,   523,   731,    55,    56,    57,   571,   565,
     566,  1158,  1539,  1840,   797,   546,   547,   581,  1288,  1192,
    1193,  1574,  1888,  1217,  1218,   806,   807,  2401,  2526,  2402,
    2403,  2266,  2267,  2664,  1205,  1209,  1210,  1587,  1580,  1198,
    2111,  2420,  2421,  2422,  2287,  1213,  1214,   809,   810,   811,
    1222,  1597,    59,  1543,  1847,  1848,  1849,  2089,  2090,  2104,
    2100,  2272,  2409,  1850,  1851,  2394,  2395,  2501,  2107,  1857,
    2413,  2414,  2461,  1729,  1040,  1041,  1364,  1042,   732,  1043,
    1393,   733,  1079,  1045,   734,   735,   736,  1048,   737,   738,
     739,   740,  1062,   741,   742,  1096,  1382,  1383,  1384,  1385,
    1386,  1387,  1388,  1389,  1390,   782,  1447,   744,   745,   746,
    1853,   747,  1151,  1527,  2426,  2522,  2523,  1833,  2073,  2252,
    2393,  2573,  2622,  2623,   748,   749,  1524,  1146,  1147,   750,
    2183,  1149,  1440,  1467,   862,   863,  1053,  1417,  1418,  1443,
    1761,  1450,  1456,  1788,  1789,  1468,  1492,   751,  1400,  1401,
    1745,  1064,   752,   607,   867,   608,  1060,  1486,   760,   753,
     754,  1593,   558,  2405,   642,   948,   755,   756,   757,   758,
     759,  2264,   465,  2594,   983,   787,   865,  1627,  1482,    60,
     664,   612,    61,   960,  1305,    62,  2377,  2219,   971,  1323,
    1697,   485,    63,    64,    65,    66,    67,   588,  1003,   524,
    1004,  1005,   651,    68,  1012,   653,   654,    69,   552,   553,
    1013,  1169,  1014,    70,   533,    71,   778,   562,   779,   781,
     526,   794,  1866,  1557,    73,    74,   540,   541,    75,    76,
     554,    77,    78,  2374,   527,  1975,   966,   491,   467,   468,
     953
};

/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
   STATE-NUM.  */
#define YYPACT_NINF -2336
static const int yypact[] =
{
    4367,   215,   467, -2336, -2336,   215, 30572, -2336,   215,    41,
    1275, 32902, -2336, 27346,   215, 37096,   430,   294,   237,   312,
     439, 37096, 37096, 33368,   215,   206, 37562, -2336,   215, 33834,
     -32,   202, 38028, 37096,   546,   683,   216, -2336, -2336, -2336,
   -2336, -2336,    49, -2336, -2336, -2336, -2336, -2336, -2336, -2336,
   -2336, -2336, -2336, -2336,   128, -2336,    28,   154,   462,   331,
   -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336,   308, -2336,
   -2336, -2336, -2336, -2336, -2336, -2336, 19227, -2336, -2336, -2336,
   -2336, -2336, -2336, 38494, 37096, 38960, 34300, 39426, -2336,    71,
   -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336,
   -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336,
   -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336,
   -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336,
   -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336,
   -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336,
   -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336,
   -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336,
   -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336,
   -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336,
   -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336,
   -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336,
   -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336,
   -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336,
   -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336,
   -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336,
   -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336,
   -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336,
   -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336,
   -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336,
   -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336,
   -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336,
   -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336,
   -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336,
   -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336,
   -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336,
   -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336,
   -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336,
   -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336,
   -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336,
   -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336,
   -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336,
   -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336,
   -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336,
   -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336,
   -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336,
   -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336,
   -2336, -2336, -2336,   362,  -197, -2336,    81, -2336, -2336, -2336,
   -2336,   546, 37096, -2336,   817,   891, -2336,   551, 39892, -2336,
   -2336, -2336, -2336,   -65, 37096,   680, -2336, -2336, 34766, -2336,
   -2336, -2336,   660, -2336, -2336,   519, -2336,    58, -2336, -2336,
   -2336,   511, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336,
     609, -2336, -2336, 40358, 40824, 41290, -2336,   473,    13,   378,
   18760, -2336, -2336, -2336, -2336,   308, -2336, -2336,   439, -2336,
     439, -2336, -2336, -2336,  -136,   493, -2336,   540,   798, -2336,
   -2336, -2336,   529, -2336, -2336,   747,  7688,  7688, 41756,   439,
   41756,   567, -2336, -2336,   276, -2336, 20628, -2336,   552,  -197,
   -2336,    74,   899, 10616, 37096,   581, -2336,   596,   581,   605,
     615,   462, -2336,  4367,   955,   916, 33834,   555,   555,  1076,
     555,   811,  1016, -2336,    43, -2336,   656, -2336, 37096, -2336,
     708,   940,   202, -2336,   529,  1031,   349,   858,  1038, 23636,
    1048,   879,  1054,   975,  5736, 10616, 24095, -2336,  -197, -2336,
   -2336, -2336,   721, -2336,   738, -2336, -2336, -2336, -2336,    13,
     976, -2336,   790, 42222, 42688, 37096,   765,  1155, -2336, -2336,
   -2336, -2336,   809, -2336, -2336,    51,  1116,    35,   794, -2336,
    1128,    73, -2336,  1136,  1036, 10616, -2336,   932, -2336, -2336,
   -2336,  -182, -2336, -2336, 25959, -2336, -2336, -2336,   378,   851,
   -2336, 25959, 10616, 46416,  1316, -2336,  1133, 37096,   935, -2336,
   -2336, -2336, -2336, -2336, -2336,  1371,   108,  1390, 10616,   968,
     108,   108,   983,  1279, -2336, -2336, -2336,    98,   990,   998,
   -2336,    83,    83, -2336,  1143,  1005,  1010, -2336,   104,  1461,
    1476,   105,  1011,  1014,   602,   108, 10616, -2336,  1015,    83,
    1017,  1019,  1021,  1483,  1022, -2336,  1503,  1024,    84,   136,
    1025,  1026, -2336, -2336,   110, 10616, 10616, 10616, -2336,  6712,
   -2336,  -197,   439, -2336, -2336, -2336, -2336, -2336, -2336, -2336,
    1032, -2336,   112,  5118, -2336,  1070, -2336, -2336, -2336,   151,
   10616, -2336,  1506,   -40, -2336,   117, -2336, -2336, -2336,  -197,
    1312,  1037, -2336, -2336, -2336,   143,  1429, 25027, 25493, 37096,
   -2336, -2336,  -197, -2336, -2336, -2336, -2336, -2336, -2336,   298,
   -2336,   308, 26970,   394,   581, 37096, 37096,  1492, -2336, -2336,
   -2336, 33834, 37096, 43154,  1163, -2336, -2336,   462,   462, 10616,
     462,   549,   840,  8176, 11104,  1368,  1255,    93,   603,  1370,
   -2336,  1260,   811,  1016, 10616,   596, -2336,  1310, 37096, 31038,
     664,   842,  1055,  1134,  1056,   106,  1457, -2336,  1057, -2336,
    1139, 37096, 47333,   134, -2336,  1493,   134,   134,   182,  1498,
    1150,   158,  1301,   433,  -156,  1057,  1944, -2336, 33834,    59,
     480,  1057, 37096,  1153,   537,  1057, 10616, 10616, 10616,  1075,
   -2336, 26970,   119, -2336,   900,  1027, 23628,  1071, -2336, -2336,
   -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336,
   -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336,
   -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336,
   -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336,
   -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336,
   -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336,
   -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336,
   -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336,
   -2336, -2336, -2336, -2336, -2336,  1160, 37096,  1119,   -90,  1419,
    1477, 37096,  1308,  1944,  1313,  1089,  1540,   738,  8664,  1544,
   -2336, 43620, -2336, -2336, -2336, -2336, -2336, 37096, -2336, -2336,
   37096, -2336, 28242,  1096, 37096, 37096, -2336, 37096, 37096,   406,
   44086,   378, 30106, -2336, -2336, -2336, -2336,   697,   835, -2336,
   -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, 28242, -2336,
    2486, -2336, -2336, -2336,  1097,   614, -2336, -2336,  1158, -2336,
    1158,  1158,  1102,  1102,  1107, -2336, -2336, -2336,  1117,   602,
    1158,  1102, -2336, -2336, 47333, -2336, -2336,  -155,   358, -2336,
    1118, -2336,  1569, -2336, -2336, -2336, -2336, -2336, -2336, -2336,
   -2336, -2336,  2793,   696,   375, -2336,   546, -2336, -2336, 10616,
    -197, -2336,  1120, 26970,  1164, 10616, -2336, -2336, 10616,  1121,
    1600,  1600, 10616, -2336, -2336, -2336, -2336,  3433,  1600, -2336,
    1600,  1600,  1158,  1158, -2336, 27081, 10616, -2336, 22499, 10616,
   13544,  9152, 10616,  1207,  1216,  1600, -2336,  1600, -2336, 10616,
    7200, 27081,  1609,  1609,  2020, 22973,  1137,  -197,  -197, -2336,
    1600, 10616,  3661,  3661, -2336,   155, 46416, 10616, 10616, 10616,
   10616, 27776,  1219,    76, 37096, 10616, 10616,  1138,   686, -2336,
   10616,  1359, -2336,  1144, 10616,  1226,   828, 10616, 10616, 10616,
   10616, 10616, 10616, 10616, 10616, 10616, -2336, -2336, 15485,   174,
    1456,  1475, 10616,  -128,   198, 10616, 35232,  7688,  1467,  5736,
   -2336,    78,  1467, -2336, -2336, -2336, -2336,   118, -2336, -2336,
   -2336, -2336,  1097, -2336,  1097,  1152, 37096,    74, 31970, -2336,
   10616, -2336,   707,  1156,  1211,   785,  1604, 37096, -2336, 21095,
    1434, -2336,  1168, -2336, 26421,  1434, -2336, -2336, 14021,  1276,
    1428,  1367, -2336, -2336, -2336,  1169, 26970, 11592, 11592, -2336,
     624, 26970,   701, -2336, -2336, -2336, -2336, -2336, -2336,   905,
   -2336, 37096,   -37,  1368,   603,   745, -2336, -2336,  1023,  1175,
   44552, 37096,  1433,  1398,  1447,  -153, -2336, -2336, -2336, 46416,
   -2336, 37096, 37096, 45018, 45484, 28708, 37096, 28242, -2336, -2336,
   -2336, -2336, 37096,  1271, 37096, 27323, -2336, -2336, -2336,   134,
   -2336, -2336, -2336, -2336, -2336, 37096, 37096, -2336, -2336,   134,
   37096, 37096,   134, -2336,  1154, 37096, 37096, 37096, 37096,  1182,
   37096, 37096,   348,   348,  1379, -2336,  9640,  1179, -2336, 10616,
   10616, -2336, 10616,  1349, -2336,   749, -2336,  1392,    17,  1227,
   37096, 37096,  1073, -2336, -2336, -2336, -2336, -2336,  1185,  1522,
   -2336,  1944,  1527, 31504,   554,   499,  1230, -2336,   762, 10616,
    1414, -2336, -2336,  1401,    35, -2336, -2336, 28242,    73, -2336,
    1403,   170, -2336,  1421,   738,  1647, -2336, -2336, -2336, -2336,
   -2336, -2336, -2336,   763, 18293, -2336, -2336,  1651,   439,  1651,
     741, -2336, -2336,  1651, -2336,  1651, -2336, 25959, -2336, 10616,
   46416,  1653, 37096,  1208,  1209, -2336, -2336, -2336, -2336, -2336,
   -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336,
   -2336,  1600,  1289, -2336,  1290,  1292,  1293, -2336, -2336, -2336,
   -2336, -2336, 46416, -2336,   822, -2336,   768, -2336, 10616, 10616,
      38, -2336, 26485,   773, 10616,  1214,  1215,   775, -2336, -2336,
   -2336, -2336, -2336, -2336, -2336, -2336, -2336,  1217,  1538, -2336,
    1221,  1223,  1224, -2336, -2336,  4399, -2336, -2336, -2336, -2336,
   -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336,
    1225,  1231, 26521,  1228, 13544, 13544,  6712,  2007, -2336, 13544,
    1235, -2336, -2336,   787, 26439,  1233,  1237,  1244,  1249,  1239,
    1240, 26605, 10128, 10616, 10128, 10128, 26837,  1233,  1241, -2336,
   10616,  1243, 22991, -2336, -2336, -2336,  5162,  5162,  5162, 27081,
   -2336, -2336, -2336,  1262, -2336, 13544, 13544, -2336,  4298,  2534,
    6712, -2336, -2336,  1564, -2336,   667, -2336,  1247, -2336, -2336,
    2947, -2336, 22499, 27014, 10616,    99, -2336, 10616,  1138, 10616,
    1328,  5162,  5162,  5162,   172,   172,   144,   144,   144,   740,
     198, -2336, -2336, -2336,  1250,  1251,  1253,  1445, 26970,  1022,
   10616, -2336, 26970,   897,   969, 37096,  3805,  4835,  4892, -2336,
   -2336, -2336, 16892,  1295,   119,  1295,  1600,  3661, -2336,   596,
   -2336, -2336, -2336, 26970, -2336,   546, 16892,  1298,  1311,  -104,
   19694,  1465, -2336, 37096, -2336, 37096, -2336,   -35,  1272, -2336,
   10616, -2336, -2336,   748,  1278,  1469,  1470,   939,   939,   624,
    1472, -2336, -2336,  1327, -2336, 10616,   728, -2336,   821, -2336,
   -2336, -2336, -2336,  1266, -2336, -2336,  1521, -2336, -2336, -2336,
   -2336,  1353,  1057, 10616,  1495, -2336,   102,  1297,  1628,   243,
    1590, 37096, -2336,  1502, -2336,   601,  1638,   170,  1644,   170,
   28242, 28242, 28242,   789, -2336, -2336,   439, -2336, -2336,   810,
   -2336,   167, -2336, -2336, -2336,  1391,   539,  1057,  1944, -2336,
   -2336, -2336, -2336, -2336, -2336, -2336,    60,   542,  1057,  1393,
   -2336,  1394, -2336,  1397,   699,  1057, -2336, -2336,  1321,  1322,
    1324, 10616, -2336, -2336, 26970, 26970, 26970,  1335, -2336,   113,
   -2336, 37096, -2336, -2336, -2336,  1349, 37096,   738, -2336,   850,
   37096, 37096, 37096, 37096, -2336, -2336, -2336,  1325,  1331, -2336,
   46416,   -83,  1549,  1551, 37096,  1395,  1056,  1807, -2336, 26970,
    1696, 37096, -2336, -2336, -2336, 37096, -2336,  1697,   546, -2336,
   28242, -2336, 29640, -2336, -2336, -2336, -2336,   439, -2336,   439,
    1579, 37096, 24561,   439,   439, -2336,   825,  1366,  1209,   838,
   46416,  1600,    92,  1372,  1049,    20,   568,  1046, -2336, -2336,
   -2336,   839, 26934, 10616, -2336,  1712, 46416, -2336, 23009, -2336,
   -2336, -2336, -2336, 10616, -2336, -2336, -2336, 10616, -2336, 22499,
   10616,  1693, -2336,  1850,  1850, 22973, 46416, 13544, 13544, 13544,
   13544,   611,  1017, 13544, 13544, 13544, 13544, 13544, 13544, 13544,
   13544, 13544, 14509,   214, -2336, -2336, 10616, 10616,  1700,  1693,
   -2336, -2336, -2336,   365,   365, 46416,  1378,  1233,  1381,  1382,
   10616, -2336,  -197, 23037, -2336,  3661, 10616,  2191,  2614, 10616,
     844, 10616,  1698, -2336, -2336,  1384, -2336, -2336, 46416, 10616,
    1385,  3581, 13544, 13544,  5254, -2336, 27198, 10616,  6712, -2336,
    1379,  1426, 21562, -2336,  1479,  1479,  1479,  1479, -2336, -2336,
   37096, 37096, 37096, 17359,  1707, 16425, 35698,  1387,   577, -2336,
   35698, 36164, -2336,  1409, -2336,  -197, 10616,  1713,  1404,  1713,
    1406, -2336, -2336,  1407,  1387, 10616,  1554, -2336, -2336, -2336,
    1458, -2336,   848, -2336,  1812,  1554, -2336,   854, -2336, 21095,
    1298, 10616,  -197, -2336,  1412, -2336,  1278,   425, -2336, -2336,
   -2336,  1618, -2336, -2336, -2336, 37096, -2336, 37096, 23055,  1750,
   -2336, 37096, 37096, 37096, -2336, 37096,   860,   781,  1415, -2336,
     781,  1731,   115,  1056,   158,  5194,   277, -2336, -2336, -2336,
    1488, 37096, -2336, 37096, -2336, -2336, -2336, -2336, -2336, 28708,
   -2336, -2336, -2336, 28242, 22032, 28242, 37096, 37096, 37096, 37096,
   37096, 37096, 37096, 37096, 37096, 37096, -2336, -2336, -2336,  1379,
   -2336, -2336, -2336,  -156, -2336, -2336,   113,  1420,  1230,  1477,
   45950,   873,  1944,  1422,  1868, -2336,   554, 31504, -2336, -2336,
   -2336,  1829, -2336,   473,   265, -2336, -2336,   546, 37096,  1481,
     170, 37096, -2336,   888, -2336, -2336, -2336, -2336, 37096,  1423,
   -2336,  1423, -2336, -2336, -2336,  1600, -2336, 37096, -2336,  1427,
   -2336,  1430, -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336,
   -2336, 10616, 26970, -2336,  1424, -2336, 26970, 23073, -2336, 26970,
    1700, -2336,  1355,  1355,  1355,  1405,  1748,   152,  1431,  1355,
    1355,  1355,   290,   290,    89,    89,    89,  1850,   214, 26970,
   26970, -2336, -2336, -2336, -2336,  1432, -2336, -2336, -2336,  1233,
   -2336, -2336,   271, 10616, 10616,  4298, -2336, 27151, 10616, 46416,
     889,  4298,   184, 10616,  2753,  3344, 10616, 10616, 27313, 23383,
    1435, 10616, 46867, -2336, -2336, 37096, 37096, 37096, 37096, -2336,
   -2336, -2336, 35698, 36164,  1437, 15957,   577,  1438, 36630, -2336,
    1523,  1440, 16892,  1711,  1643, -2336, 16892,  1643,   730,  1643,
    1717,  1523, 20161, -2336,  1523,  1448,  1648, -2336,   665, 26970,
    1881,  1762,   439,  1762,   439, -2336, 26970,  7688, -2336,   546,
     -86, 37096,  -197,   -58, -2336,  1468, 37096, -2336,  1554, 26970,
   22499, -2336, -2336, -2336, -2336, -2336, -2336, -2336, 37096,   894,
   -2336,   896,   781, -2336,  1500, -2336,   138,  1749,    26, -2336,
   28242,  1545,   272, -2336,  1763,  1683, -2336,   134, -2336, 10616,
     272,  1684,   150, 37096, -2336, -2336,  2140, -2336, 46416,   170,
     170, -2336, -2336,  1117, -2336,  1412, 47333,   697,   835, -2336,
   -2336, -2336, -2336, -2336, -2336,   375, -2336,  1480, -2336, -2336,
    1550, -2336,  1552, -2336, -2336, -2336, -2336, -2336,  1474,   851,
     109, 37096,  1920,  1694,  1478,  1230, -2336, 31504,   562,   147,
    1551, -2336,   140,  1395, -2336,  1856,  1518,  1689, 37096,  1484,
   -2336,  1935, -2336, 29640,  1423,  1489, 46416, -2336, -2336, 26970,
   -2336, -2336, -2336, 13544,  1805,  1490, 46416, -2336,  4298,  4298,
   27151,   901, -2336,  4298, 10616, 10616,  4298,  4298, 10616, -2336,
   -2336, 23549,  1678, -2336, -2336, -2336, -2336, -2336, -2336, -2336,
   29174, 35698, -2336,  1496, -2336, 32436, -2336, -2336, 37096,   577,
   16892, -2336, -2336,    88, -2336, 16892,  1769, -2336, 16892, -2336,
   37096,  1501, -2336, 37096, -2336, 12080, 10616,  1531, -2336,  1531,
   -2336,  1037, -2336,  -104, -2336, -2336,  1893, 17826,  1855, 10616,
   -2336, -2336,  1504,   781, -2336,  1661,  1500,  1508, -2336, -2336,
   -2336, -2336, -2336, -2336, -2336,   902,  1509, 37096, 37096, 13544,
   -2336,   272,   181,   161, -2336,  1773, 37096,  1500, -2336, -2336,
   -2336, -2336,  1877,  1960,  1848, -2336, -2336, 26970, -2336, -2336,
    1600,  1600, -2336, -2336,  1925, -2336, -2336,   375,   538, 22032,
   37096, 37096, -2336, -2336, -2336,  -156,  1882,   910,   546,  1859,
   31504,  1974,  1525, 37096,  1395,   804,   804, -2336,  1664, -2336,
    1668, -2336, -2336,   629, -2336, 37096, -2336, -2336, 17826,   546,
   -2336, -2336, -2336,  3059, 13544, 46416,   911, -2336,  4298,  4298,
    4298, -2336,  1963,  1379, -2336,   915,  1983, -2336, 37096,   -64,
      52,  1535,  1536, -2336, -2336,   922, -2336, 10616,  1543, -2336,
   -2336, 16892,    88,   923, -2336, 46416, 37096,   928, 46416,  6224,
    1546, -2336, -2336, 26970, 26970, 37096,  1601,  1601,  1599, 37096,
   10616, -2336,   929,  1961,    34,   -75, 26970, -2336, 37096, -2336,
   28242, -2336,   781, -2336, 28242, 10616, -2336,   751,  1405,  2000,
   -2336, -2336, -2336, -2336,  1500,   738, -2336, -2336,  1853, -2336,
   37096,  1610,   570,  1625, -2336, -2336, -2336,   851,   439,  1230,
    1518, 37096,   546,   554,   473, -2336, -2336, -2336, -2336, -2336,
   -2336, -2336, -2336, -2336, -2336, -2336, -2336, -2336,  1975,  1761,
    1977,  1481,   938,  3059,   956, -2336, 10616,   485,  1409, 29174,
    1561, -2336,   960, -2336, -2336, -2336, -2336, -2336, 37096,   948,
   -2336, 26970, 37096, -2336, -2336, -2336, 37096,  1925,   961, -2336,
   -2336, 12080,  1565, -2336,  2023,  1706, -2336, -2336,   546, -2336,
   23567,  1295, 17826, 37096, 37096, 37096, -2336,  1701,   738,   781,
     966, -2336,  1588, -2336, 23610,  1794, -2336,  1880, -2336,  1826,
    1583, -2336, 10616, -2336,  1654, -2336, -2336, -2336,  2035, -2336,
    1587,  1518,  1551,  1395,  1793, -2336,  1795,  1591,  1230, -2336,
    1233, 12568, 12568,  1592, -2336, -2336, 37096, -2336,   981,  1593,
     988, -2336, -2336, -2336, -2336, 37096,  1598, 32436, -2336,  1961,
   -2336, -2336, -2336,   201, -2336,   201, 21095,  1826, -2336, 28242,
   22032,  1822,  1583,    66,  1806,  1944, -2336, 26970, -2336,   546,
   31504, -2336, -2336, -2336, -2336, -2336, 17826,  1295, 14997,  1742,
      55, 26457, -2336, -2336, -2336, -2336,   996, -2336,  2083,  1759,
   -2336, -2336, -2336, -2336, 37096,  1278,  1278,  -172,  1806, -2336,
   -2336,  1898, -2336, -2336, -2336, -2336, -2336,   122,  1817, -2336,
    1818,  1808,  1518,  1003, -2336,  2065, -2336, -2336, -2336, -2336,
   -2336, -2336,  1613,  1615, -2336,   201, -2336, -2336, -2336, -2336,
   -2336,   107,   107,  1985, -2336,  1676, -2336, -2336, -2336,  1230,
   13056, -2336,  2096,  1278,   781, -2336,  2084, -2336,   148, -2336,
   -2336,  1295, -2336,  1622, -2336, -2336, -2336, -2336, -2336, -2336
};

/* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -2336, -2336, -2336,  1537, -2336, -2336, -2336,   193, -2336,   859,
   -2336,   185,  -521,   498, -2336, -2336, -2336,  -775,     8, -2336,
   -2336, -2336, -2336,    -2,   242, -2336,  -410, -1700,  -167, -2336,
   -2186, -2303, -2336,  -469, -2198, -1496, -2336,  -948,   166, -2336,
   -1894, -2336,  -596,  -810,  -641,  -827, -2336,   -33, -2336,  1190,
    -923, -1570, -2158,  -472, -2336,  -540, -2336,  -312, -1571,  -514,
    -499, -2336, -2070,  -768, -2336,  1329,  -226, -2336,   532, -2336,
   -1899, -2336, -2336,   526, -2336,  -796, -2336, -2336, -1656,   183,
    -450, -2048, -2082,   483,  -608, -2336,  -497,   223, -1543, -2336,
     553, -2336,  -440, -2336,  -468, -1906, -2336, -2336, -2336,  1181,
    -545, -2336, -2336, -2336, -2336,    36, -2336, -2336, -2336, -2336,
   -2336,  -366,   488, -2028, -2336,   450, -2336, -2336, -2336, -2336,
     -57,   209, -2336,     5,   471,   -27,     2,     6,    15,    42,
    1386,  1413, -2336, -1377,   852, -2336, -2336,  -570,   -38, -2336,
     597, -2328, -1841,  -357,   945,  1373,  1375,  -331,  -243, -2336,
    -402, -2336,  -736, -2336, -2336,   608,   989, -1078, -1081, -2336,
     337, -2336,  -321, -2336,    90,  -254,   978, -2336,  1396, -2336,
   -2336, -2336, -2336, -1065,   648, -1726,   367, -1743, -1662,   127,
     116,  -671,  -196,    18,   379,  -281, -2336, -2336,  -275, -1510,
   -2073,  -291,  -288, -2336, -2336, -1086,   865,  -812, -2336, -2336,
    -667,  -385, -2336, -2336, -2336,   681,   958, -2336, -2336,   972,
    2045, -2336,  -384,  2136,  -411,  -697,  1159, -1004,  1166, -1006,
   -1018, -1011,  1167,  1171, -1058,  3030, -1387,   689,    -5, -2336,
   -2134, -1344, -2336, -2336,   -56, -2336,  -354, -2336,  -351, -2336,
   -2336, -2336,  -340, -2335, -2336,  1087, -2336, -1062, -2336,  3182,
     668, -2336, -1441,  -553,  -572,  -806, -1327, -2336, -2336, -2336,
   -2336, -2336, -2336,  -883, -1595,  -306,   742, -2336, -2336,   846,
   -2336, -2336,  1970,  -565,   957,  -532,  -702,   746, -2336,  -536,
    1095, -2336,  2033,  -510,  1657,  -855,    11, -2336,  2225,   227,
    1567, -2336,  -448,  -511, -1025,  -767, -2336,  -585, -2336, -2336,
   -2336,  -984, -2336,   575, -2336,  -922, -2336,  -235, -2336, -2336,
   -1905, -2336, -2336, -2336, -2336, -2336, -2336,  -352, -2336,  -432,
    -400, -2336, -2336,    -7,  -622,  1265, -2336, -2336,   886, -2336,
     903, -2336,   693, -2336, -2336, -2336,  1081, -2336, -2336, -2336,
      39,  1471,   381, -2336,  1085, -2336, -2336, -2336, -2336, -2336,
     257, -2336,  -920, -2247,    65, -2055,  -949,    -6,  -504,  -457,
   -1864
};

/* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
   positive, shift that token.  If negative, reduce the rule which
   number is the opposite.  If zero, do what YYDEFACT says.
   If YYTABLE_NINF, syntax error.  */
#define YYTABLE_NINF -1536
static const yytype_int16 yytable[] =
{
     466,   462,   639,   846,   641,    53,   957,   570,    41,   525,
     783,   761,  1303,   999,   812,    58,   656,   463,   582,  1273,
    1256,   949,  1098,  1237,  1073,  1074,  1439,   772,  1107,  1394,
    1475,    58,  1006,  1726,  1272,  1859,    51,  1304,  1306,    72,
    1307,  1335,  1087,   954,  1910,  2131,  1244,   557,  1226,  1925,
     647,  1927,  1284,  2202,  1473,  1474,  1248,  1763,  1764,  1413,
     584,  1820,  1783,   657,   585,    79,  1414,  2210,  1906,  1878,
    2186,  1412,  1395,  1410,  1277,   568, -1016,   773,   845,  2213,
     851,   593,   855,  -994, -1016, -1016, -1017,   648,  -642,  -683,
    1015,   470,   989,   978, -1017, -1017,   986,  1545,  1807,  1808,
    1766,   673,   951, -1535,   601,     3,     4,  2533,  2103,  -655,
    -680, -1535, -1535,  -675,  -680,  -670,  1484,   531,   531,  2086,
     650,   673,   531,   531,  1166,  2362,  2396,  1326,  -428,  1592,
    1589,   978,  1542,   973,  1240,  1240,   560,  1961,   993,  1484,
    2367,  -683,  2312,   673,  1275,  1938,  1163,   993,   531,   952,
     656,   958,   673,  1613,  -431,  1116,   864,   656,  2371,   673,
    1841,  1842,  -173,  2433,   632,  2685,  1152,  -173,   574,  1229,
    1156,  2353,   577,   658,  1743,  2124,  1106,   974,  1989,  1991,
    2492,  2093,  -888,  1116,  1673,  1122,   474,   577,  2101,  -888,
    2536,  2464,  1257,  2041,  1968,  1260,  1261,   657,  1854,  1108,
    -475,  1521,  1367,  1368,   657,  -475,  2293,   954,  1522,  1116,
    2417,  -907,  1854,  1122,   864,  1054,  2657,  1124,  -907,  1529,
    -428,  2296,  1361,  2559,   805,  1766,  1007,  1161,   978,  2153,
    -388,  1595,  2595,   544,  2644,  1299,   578,  2503,  1571,  1122,
     774,  2671,   775,   475,  2433,  1124,  -431,   532,  2535,  2143,
     801,   578,  1052,   575,  2338,  2309,  2094,  1164,  2439,  2368,
     622,  1225,  2696,   656,   656,  2635,  1232,  2636,  1373,  1374,
    -475,  1124,  1856,    25,  2369,  1610,  1182,  2452,  1044,  2456,
     542,  2234,  1116,  2655,  1282,  1283,   605,  1262,  2095,  1868,
     606,  1267,  1287,  2365,  1093,   623,  1066,  1067,  2450,  2154,
    2361,  1766,  2331,  2096,   991,   529,  1738,   992,    29,  2475,
     657,   657,  2097,   579,  2611,  1268,  1094,  1879,  2018,  -475,
     803,  1084,  2217,  1869,  1572,  2310,  2332,   808,   579,   624,
    1095,  2665,  1611,   594,  2142,   545,  1596,  2683,   661,  2366,
    2103,  1098,  1249,  2518,  1124,  2692,  2098,   975,    31,   662,
    1300,  2537,  1027,  2505,  1167,  1073,  1074,  1530,  2139,  1316,
    2141,    32,  2658,  2645,  1087,  2396,  2269,  2407,  2451,  2686,
    2273,  2214,   819,  1165,   979,   625,  1377,  1378,   820,  2155,
    2022,  2023,  2024,  2025,  1054,    33,  2029,  2030,  2031,  2032,
    2033,  2034,  2035,  2036,  2037,  2038,  1318,   949,  2433,    34,
    2506,   528,  1247,  2634,   579,  2678,  2548,  -428,   864,   864,
     864,   479,   979,   480,  1234,  2449,  2504,  2697,  2653,   530,
    2258,  1052,  1674,  1344,  1263,  2232,  2235,  2297,  2301,  1178,
    2453,  2099,  1264,  -431,  1605,  2064,  2065,   482,  2646,  2556,
    1439,  1153,  2640,   766,   531,  2224,  2687,  1044,   580,  1157,
     976,  2370,   633,   561,  1879,  1223,  2313,  2075,  2076,  2077,
    2078,     3,     4,   580,  1276,  1939,   639,  1485,  -428,  1325,
     518,    54,  1703,  2688,  1328,   576,   611,  1331,   951,   609,
    1662,  1399,  2433,   821,  1273,  2186,    58,    54,   656,  1861,
    1822,  2060,  2612,   570,  -431,  1397,  1951,  1952,  1891,  1854,
    1589,  1854,  1880,  2626,   951,   569,  1396,   610,  2613,   979,
     613,  1885,   776,   652,   655,  1403,  2408,   605,  2397,  1407,
     864,   606,   518,  1235,   980,   952,   471,  2215,  2362,   583,
    1250,  -888,  2507,  1093,    58,   657,  1481,  2354,  1453,  1455,
     466,   466,  1397,   954,  2406,  1061,   813,    54,  2672,  2410,
    1523,   952,  2412,  1662,   777,  1094, -1016,   466,  1224,  1336,
    -907,   605,   985,  -994,  2558,   606, -1017,  2303,  1072,  1095,
    1781,  1863,  1108,   584,  2562,  -428,  2000,   585,    53,  2314,
    2563,    41,   795, -1535,  2132,  1093,  1054,  1544,    58,  1078,
    -680,  1247,   650,  -675,   793,  -670,   954,  1111,   466,   466,
     950,  -431,  1159,  1546,  1613,  1267,   784,  1094,  1286,    51,
     997,   998,    72,  1487,  -428,  1914,  -428,   951,  1639,   997,
     998,  1097,    80,  1052,  1911,  1145,  2340,  2341,  1642,  1268,
    2300,  1645,   822,   579,  -173,  -173,  1066,  1067,    79,   466,
    -431,  1934,  -431,  2166,  1998,  2133,  1084,  1694,   655,  1044,
    1142,  1143,  1144,  1145,  1935,   655,   466,  1055,  2357,  1638,
    2014,    83,  1631,  2617,   952,    81,  1082,  1083,  1054,  1249,
    2093,  1610,   466,    58,  1140,  1141,  1142,  1143,  1144,  1145,
    2021,   767,   823,   572,   796,  2513,   824,   563,  2488,  2302,
    1776,  1777,  1778,  1779,  1780,  1781,  2489,  1439,  1423,  1424,
     466,  1338,   570,  1713,   573,  1052,   673,  1602,  1196,  2045,
    2363,   864,  1658,  1659,  1660,   825,  1249,  2005,  2007,   466,
     466,   466,  1715,   466,  2006,  2008,  2009,  1739,  1903,  2004,
    2003,  1044,  2241,  1964,  1637,  1912,  2186,    25,  2442,  1240,
    2026,   951,   949,   951,   466,  2094,   587,  2051,  1854,  1241,
     768,  1116,  1854,  1648,  1640,   659,  1426,   660,  1655,  1643,
     801,   655,   655,   667,  1427,  1428,  1429,  1802,  1778,  1779,
    1780,  1781,    29,  1249,  2691,  1249,   763,  2095,  1249,  1702,
     826,  1122,  1862,  1704,  1176,  1271,  1706,  1177,   952,    25,
     952,  1054,  2096,   466,  2666,  2667,  1812,   466,   466,  1190,
    1191,  2097,  1195,   585,   585,  2571,   585,  1093,   466,   793,
    1197,  1273,    31,  1124,  1093,  1493,  1373,  1374,  2316,    84,
     586,    25,  1813,   951,    29,    32,  1055,    85,  1052,  1094,
     803,  2476,  1278,  2572,  1679,  2098,  1094,  1359,   864,  1340,
     656,  1494,  2694,  1097,   673,  1741,  2383,   604,  2182,    33,
     466,   466,   466,   656,  1044,  1949,    29,  1250,    25,  2490,
    1072,    86,   982,    34,    31,  2319,  1274,  1882,   519,  2539,
     952,  1940,  1885,  2543,   627,  2027,  1505,    32,  2020,   804,
    1179,  1002,  2477,  1180,   822,  2028,   619,   657,  1002,  1281,
    2478,  1937,  1332,    29,  1941,  1180,    31,  2145,  2094,  1558,
     657,    33,   819,   630,  1250,    25,  2042,    87,   820,  2386,
    1797,   864,  1054, -1025, -1025,   520,  1854,  1240,  1247,  2479,
    2099,    25,  2321,  1969,  1377,  1378,  1854,  1243,  1976,   631,
    2095,  1854,  2448,    31,  1854,  1249,  1814,  1810,  1913,  1914,
      29,  1815,    54,  1889,  1054,  2275,    32,    34,   673,  1052,
    1495,   634,  2399,  1854,  2097,  1496,    29,  2400,   645,  1109,
    1497,  1250,   466,  1250,   635,  1247,  1250,  1915,   801,  1113,
      33,  1590,  1591,   802,  1858,  1044,   950,  1106,   663,  2146,
      31,  1052,  1160,  1719,    34,   652,   655,  1723,  2480,  1724,
      54,   569,  1168,    32,  1002,  1002,    31,  2493,   819,  2481,
    1506,  1691,   950,  1692,   820,  1720,    58,  1044,   665,    32,
    1721,  1303,   666,   821,  1507,  2545,   667,    33,  2463,  1508,
    2324,  2590,  1247,  1072,  1247,  1327,   668,  1247,  1055,  1884,
     771,    34,  2221,    33,  1854,   765,  1304,  1306,   803,  1307,
    1289,  1290,   583,  2147,    54,  2148,   819,    34,  -521,  -521,
    2554,  1945,   820,   466,  1509,  1072,  1199,  1327,  2494,   466,
    1722,   611,   466,  2325,   609,   780,   466,  1854,  1439,  1958,
     785,    58,  1922,  2099,  1924,  -525,  -525,  1559,  2326,  1816,
     466,   786,  2344,   466,   466,   466,   466,   804,  2164,  1817,
    1985,   788,   610,   466,   466,   613,  2043,  2044,  1498,  2684,
    1358,   789,  1200,  1359,  2157,   466,  2140,  2654,  1499,   821,
    1055,   466,   466,   466,   466,   950,   951,   951,   951,   466,
     466,  1199,   791,  1250,   466,  1344,   792,  2668,   466,    54,
     799,   466,   466,   466,   466,   466,   466,   466,   466,   466,
    2382,   814,   466,  2199,    25,  2156,   466,  2165,   605,   466,
    -994,   466,   606,   466,   817,  1854,  1796,   821,  1798,  1799,
    2348,  1201,   822,   952,   952,   952,  1076,  1200,  -524,  -524,
     777,  2122,  2327,  -474,   466,   622,   816,   819,  -474,    29,
     818,  2698,  1391,   820,  1247,  1392,  2482,   831,  1854,  2483,
    1562,   830,   466,  1554,  1980,    88,   985,   848,   469,  1510,
    1104,   466,   466,   852,   516,   819,   951,   955,   656,  1202,
     623,   820,   849,   864,   543,   615,   824,   616,   555,    31,
    1430,  1431,  1432,   956,  1433,  1434,  1435,  1436,  1437,  1438,
     961,  1600,    32,  1055,  1180,  1670,   970,  1397,  1671,   950,
     959,   950,  1054,  -474,  1960,   850,   474,  2049,  1698,  1709,
     968,  1359,  1710,   952,  1740,   657,    33,  1180,   822,  1747,
     972,  1751,  1180,  2182,  1180,   977,  1203, -1060,   583,   583,
    1560,   583,  1854,  1785,  1202,  1928,  1180,   984,  1929,  1052,
     466,   982,  1054,   466,   466,   987,   466,  1885,   821,   617,
     625,   618,  -474,  2179,   819,  1834,  1932,  1835,  1054,  1933,
     820,  1375,  1376,   475,  1419,  1044,   822,  1072,   853,  1327,
     826,  1994,   824,   466,  1392,   988,   821,  1397,  1054,  1052,
    1695,   950,  2462,  2108,  1996,  2010,   990,  1997,  1180,  2517,
    2056,  1203,  2517,  1180,  2120,  1052,  1008,  2121,   655,  2164,
    2125,   854,  2304,  2126,  1046,  1044,  2144,  1054,  1631,  1671,
    2187,   655,  1056,   466,  1055,  1052,  1601,   477,  1057,  2205,
     824,  1044,  1671,   672,  1361,  2279,  1766,  1836,  2282,  1837,
    1054, -1536, -1536, -1536,  2222,  2242,  -646,  2223,  1392,  2198,
    2305,  1044,  2306,  1671,  1052,  1671,  1055,  2387,  2443,   825,
    1392,  2444,   466,   466,  1547,  -653,  2469,  2495,   466,  1671,
    1392,  2498,  1377,  1378,  2499,   821,   826,  1052,  2510,  2515,
    1044,   985,  2516,   672,  2519,  2531,  1766,  2516,  2532,   570,
    1059,  1767,  1768,  1769,  2568,   951,  2274,  2532,  2277,   951,
     798,   951,   800,  1044,   762,  2220,   764,   822,   466,   466,
     466,  1069,  2569,   466,   473,  1392,  2577,  2583,   474,   985,
    2516,  1075,  2598,  1065,   826,  2599,   466,   466,   466,   466,
    1172,  1174,    54,   570,   466,   822,  -643,  2627,  1068, -1060,
    2628,   479,   952,   480,  2630,  1070,   952,   985,   952,   466,
     466,  -644,  2661,  1071,   466,  2516,  2185,  1646,  -647,  2679,
      34,   824,  2532,  1212,   481,  1077,  1080,   482,   466,  1081,
    1086,   466,  1088,   466,  1089,   475,  1090,  1091,  -645,  1092,
    1099,  1100,   476,  1046,  2182,  1653,  2336,  1110,  1150,   824,
    1647,  1155,  1156,  1052,   466,  1170,  1157,    54,  1183,  1189,
     802,   804,  1219,   570,  1221,  1227,   466,  1852,  1885,  1246,
    1245,  1247,  1252,   954,  1254,  2467,  1253,  1258,  1654,  1044,
     466,  1852,  1265,   463,   822,  1266,  1270,  1397,  1280,   477,
     611,  1285,  1292,   609,   466,  1293,  1297,   463,  1301,  1302,
      58,  1002,  1309,   464,  1313,  1718,  1315,  1312,   490,   466,
    1319,  2291,   490,  1327,  1002,   826,  1357,  1072,   534,   490,
     539,   610,  1078,   539,   613,  1061,   559,   466,  1491,   490,
     490,  1985,  1360,  1362,  1363,  1398,  1404,  1399,   824,   673,
    1457,  1054,  2316,   826,   950,   950,   950,  1771,  2317,  1458,
    1116,  1047,  1483,  1490,  2345,  2346,  1470,   478,  1501,  1502,
    2318,  1504,  1525,  1526,  1542,  1049,  1772,   825,  1548,  1556,
    1563,  1555,   578,   539,  1583,  1582,   951,  1584,  1052,  1607,
     559,   490,   559,   559,   559,   466,    54,  1570,  1585,  2319,
    1603,  2320,  1608,  1609,   579,  1663,  1668,  1676,   489,  1672,
    1680,  1681,   517,   479,  1044,   480,  1682,  1696,  1700,   535,
    1701,  1739,  1705,  1708,  1055,  1707,  1772,  1716,  1727,   567,
     567,  1731,  1732,   952,  1734,  1735,   481,  1736,  1737,   482,
    1749,  1750,   826,  1752,   950,  1753,   655,  1754,  2179,  1755,
    1756,  1758,  1791,  1695,  1762,  1046,  2321,  1792,  1759,   656,
    1054,  1784,  1180,  1790,  1055,  1793,  1794,  1801,  2347,  1804,
    1806,  1811,  1818,  1827,  1832,  1828,  1830,   466,  1831,  1856,
    1055,   597,  1865,  2322,  1874,  1867,  1881,   466,  1887,  -526,
    -527,   466,  1892,  1893,   466,  1895,  1896,  1052,  1897,  1899,
    1055,   466,   466,   466,   466,  1052,   657,   466,   466,   466,
     466,   466,   466,   466,   466,   466,   466,  1902,  1054,  1448,
     466,   466,  1901,  1044,  1905,  1908,    54,  1921,  1054,  1055,
    1047,  1044,  2070,  1923,   466,  1739,  1936,  1046,  1942,  1943,
     466,   570,  1944,   466,  1049,   466,  2446,  1946,  1947,  2323,
    1948,  1966,  1055,   466,  2324,  1052,   466,   466,   570,  1950,
    1967,   466,   466,  2497,  1273,  1052,  1970, -1536, -1536, -1536,
    1971,  1776,  1777,  1778,  1779,  1780,  1781,   466,  1852,   466,
    1852,  1044,  1974,  1977,   832,  1978,  1981,  2549,  1988,  1995,
     466,  1044,  2013,  1931,   463,  2542,   463,  2325,  2002,   466,
    1787,  1766,  1786,   833,  2046,  2058,  1106,  2047,  2048,  2059,
    2071,  2062,  2326,  1839,  2084,   466,  2092,  1773,  1774,  1775,
    2106,  1776,  1777,  1778,  1779,  1780,  1781,  1581,  2502,  2110,
    2112,  2119,  2114,  2115,  2117,  2123,  1954,  2130,  2134,  2138,
    2150,  2185,  2152,  2168,  2208,  2201,  2502,  2207,  2212,  2218,
    2230,  2227,  1671,   834,  2228,  2233,  2236,  1104,  2237,  2265,
    1046,  2250,  2260,   950,  2261,  2268,  2270,   950,  1055,   950,
    2597,  2271,  2278,  2283,  2284,  2285,   951,  1054,  1052,  1002,
     951,  2286,  2299,  2570,  1986,  2311,  1987,  2307,  2334,  2551,
    1992,  1993,  2335,  2339,  2349,  2350,  2358,  2351,  2359,  2179,
    2352,  1104,  2372,  2360,  1044,  2373,  2327,  1054,  2375,  2378,
    1054,  2379,  2384,  2381,  1052,  2385,  2392,  2425,  2429,  1491,
     832,  2398,  2216,   952,  2411,  2435,  2416,   952,  2438,  2454,
    2437,  2457,  1047,  2440,  2445,  1829,  2458,  2459,  2460,   833,
    1044,   835,  2580,  2468,  1052,   466,  1049,  1052,  2471,  2651,
    2472,  2473,  2486,  1846,  2542,   672,  2487,  2496,  1766,  2500,
    2508,  2509,  2592,  1767,  1768,  1769,    54,  1846,  2512,  2525,
    1044,   569,  2528,  1044,  2533,  2521,  2547,  2550,  2552,   559,
    2555,  1046,  2564,  2565,  2566,   621,  2576,   466,   466,   834,
     836,   559,   466,  1055,  2585,   490,  2587,   466,   837,  2586,
     466,   466,  2600,  2453,  2602,   466,  2603,  2596,  2605,  2608,
     838,  2609,  2610,  1046,  1047,  2614,  2616,  2615,  2625,  2629,
     638,   490,   490,  2072,  2641,  2647,   466,  1852,  1049,  2656,
     466,  1852,  2662,  2663,  2670,   951,  2673,  2675,  2680,  2681,
    2682,   839,  2672,   463,  2671,  2693,  2695,   463,  2699,  2167,
     790,   466,  1633,  1919,  2171,   539,   596,   539,   599,  2295,
     603,  2127,  2591,   559,  2292,  2294,  2428,  2637,  2206,  2342,
    2643,   490,  2690,  1448,  1448,  2546,  2676,   835,  1448,  2669,
    2485,  1904,   952,   559,   950,   629,   841,  1926,  1236,  2639,
    2211,  2674,  2185,   466,  1955,   559,  2172,  2638,  1324,  1900,
    1982,  2184,  1055,  1956,  -440,  2200,  2380,  1883,   842,  1599,
    1055,  1181,   644,  1162,  1448,  1448,   832,  -440,  2579,    54,
    1216,  1215,  -440,  1954,  2527,  2633,   836,  1579,   844,  1052,
     559,   559,   559,  1894,   837,   833,  2113,  1047,  1770,   672,
    2584,  1598,  1766,  2289,  1864,  1220,   838,  1767,  1768,  1769,
    2259,  1049,  2087,  2364,  2276,  1044,  2514,   655,  2575,  1771,
    1055,   567,  2083,  2574,  2053,  2581,  1728,   466,  -440,  2582,
    1055,  2631,  2624,  2427,  1058,  2632,  1409,   839,   466,   466,
    1531,  1886,   466,  1411,  1415,   834,  1744,  -440,  1416,  1667,
    1825,  1823,  1541,  1959,   466,  1852,  2567,  1337,  1550,     0,
    1725,  2128,  1184,  1552,   466,  1852,     0,     0,     0,   466,
    1852,   463,   466,  1852,     0,     0,     0,     0,     0,   466,
     466,   463,   841,     0,     0,     0,   463,     0,  1772,   463,
       0,   466,  1852,   466,  2677,     0,  -440,     0,     0,  1104,
       0,     0,     0,     0,   842,  -440,     0,     0,   463,     0,
       0,  2160,     0,   466,  2082,     0,  2085,     0,  1047,     0,
       0,     0,     0,     0,   844,     0,     0,     0,     0,     0,
       0,     0,  1049,   835,     0,     0,   559,     0,     0,  2288,
       0,  2290,     0,  1055,     0,     0,     0,     0,     0,     0,
    1047,     0,   490,   490,     0,     0,     0,     0,   559,   559,
    1188,     0,     0,  2470,  1049,     0,     0,     0,     0,     0,
       0,  1046,   466,  1852,     0,     0,     0,     0,   466,  1055,
       0,     0,   836,     0,  2364,   559,  1239,     0,     0,   463,
     837,     0,   570,     0,     0,     0,     0,     0,   559,     0,
       0,   466,   838,  1771,     0,   466,  1852,     0,     0,  1055,
       0,  1046,  1055,   466,     0,   559,     0,     0,     0,   559,
       0,     0,   463,     0,   466,     0,     0,  1046,     0,     0,
       0,     0,     0,   839,   950,     0,     0,     0,   950,   466,
    -440,     0,   567,     0,     0,     0,     0,  1046,    54,     0,
    1002,     0,     0,     0,     0,     0,  1448,  1448,  1448,  1448,
       0,     0,  1448,  1448,  1448,  1448,  1448,  1448,  1448,  1448,
    1448,  1448,  1772,     0,     0,     0,  1046,  2561,   841,  1773,
    1774,  1775,     0,  1776,  1777,  1778,  1779,  1780,  1781,     0,
     466,     0,     0,   466,  1852,     0,     0,     0,     0,  1046,
     842,     0,     0,   605,     0,   614,   788,   606,     0,     0,
     463,  1448,  1448,     0,     0,   466,     0,   626,     0,     0,
     844,     0,     0,  1296,     0,     0,   466,  1852,   559,     0,
       0,     0,     0,  2588,     0,     0,  1345,     0,  1322,     0,
       0,     0,  1115,   463,   638,  1116,   466,   638,     0,     0,
       0,   490,   490,     0,   490,   638,     0,   559,     0,     0,
       0,     0,     0,  1846,     0,   466,   466,  1846,     0,     0,
       0,     0,     0,     0,     0,  1122,  2184,     0,     0,     0,
    1346,     0, -1536,     0,     0,     0,     0,     0,     0,   770,
      54,    54,     0,   950,  1055,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1347,  1124,     0,     0,
     466,  1852,   466,     0,  2652,  1046,     0,     0,     0,     0,
       0,   815,   672,     0,  1348,  1766,     0,   463,  1349,     0,
    1767,  1768,  1769,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1329,     0,  1330,     0,     0,  2054,  1047,  1350,
       0,     0,  1351,     0,     0,  1441,   963,   965,   967,     0,
       0,     0,  1049,  1773,  1774,  1775,  1352,  1776,  1777,  1778,
    1779,  1780,  1781,     0,   466,     0,  1809,     0,     0,    54,
       0,     0,     0,     0,     0,     0,     0,     0,  1047,     0,
       0,   638,     0,     0,     0,  2557,     0,     0,     0,     0,
       0,     0,  1049,     0,  1047,     0, -1536,     0,  1050,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1049,     0,
   -1536,     0,     0,   559,  1047, -1536,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1049,     0,
    1046,  1846,     0,   559,     0,   559,  1846,     0,     0,  1846,
       0,     0,     0,  1047,  1564,  1353,  1569,     0,     0,     0,
   -1536,   672,     0,  1354,  1766,     0,     0,  1049,     0,  1767,
    1768,  1769,     0,     0,     0,     0,  1047,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2244,     0,   559,     0,
    1049,     0,     0,     0,     0,     0,     0,  1239,   490,  1051,
       0,     0,  1175,     0,     0,  1355,     0,     0,   490,  1615,
     490,  1619,     0,   490,     0,  1133,     0,     0,     0,   490,
       0,   490,     0,     0,     0,  1186,  1771,  2184,     0,    54,
       0,     0,   638,   490,     0,     0,     0,   638,   490,     0,
       0,     0,   490,   490,   490,   490,     0,   490,   490,  1046,
      54,  1228,     0,     0,     0,     0,     0,  1046,     0,     0,
       0,     0,     0,     0,  1255,     0,     0,   559,  1678,     0,
       0,     0,     0,     0,     0,     0,     0,  1050,     0,  1001,
    1690,     0,  1846,     0,     0,  1279,  1001,     0,  1606,     0,
    1104,     0,  1047,     0,     0,  1772,     0,     0,  1614,     0,
    1617,  1365,  1366,  1628,     0, -1536,  1049,  1046,     0,  1632,
       0,  1634,     0,     0,     0,     0,     0,  1046,     0,     0,
       0,     0,  1448,  1641,     0,     0,     0,     0,  1644,  1730,
       0,     0,  1649,  1650,  1651,  1652,     0,  1656,  1657,     0,
       0,     0,     0,    54,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1115,     0,     0,  1116,     0,
       0,     0,     0,     0,     0,  1771,     0,  1112,  1051,     0,
       0,     0,     0,     0,     0,  1367,  1368,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1122,     0,
    1001,     0,  1001,  1001,  1308, -1536,     0,     0,     0,    54,
       0,     0,     0, -1536,     0,     0,     0,     0,  1448,     0,
    1140,  1141,  1142,  1143,  1144,  1145,     0,  1047,     0,     0,
    1124,     0,     0,  1334,     0,     0,     0,     0,     0,     0,
    1046,  1049,     0,     0,  1772,     0,     0,  1369,  1370,  1371,
    1372,  1373,  1374,     0,     0,  1375,  1376,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1001,     0,
    1451,  1001,  1001,     0,     0,     0,  1046,   672,     0,  1441,
    1766,     0,     0,  1448,     0,  1767,  1768,  1769,     0,  1050,
      54,     0,     0,     0,     0,     0,  1773,  1774,  1775,  1819,
    1776,  1777,  1778,  1779,  1780,  1781,  1046,     0,     0,  1046,
       0,     0,   559,     0,     0,     0,     0,     0,     0,  1855,
       0,     0,     0,     0,     0,     0,     0,     0,     0, -1536,
       0,     0,     0,  1855,     0,     0,  1047,  1873,     0,     0,
    1876,     0,  1569, -1536,  1047,     0,     0,     0, -1536,     0,
    1049,     0,     0,     0,     0,     0,     0,     0,  1049,  1377,
    1378,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1050,     0,     0,     0,     0,     0,     0,  1451,     0,
    1051,     0,     0, -1536,     0,     0,     0,     0,  1296,     0,
       0,     0,     0,     0,  1047,     0,     0,     0,     0,  1540,
       0,     0,     0,     0,  1047,     0,     0,     0,  1049,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1049,  1549,
       0,  1551,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1339,  1341,     0,  1773,  1774,  1775,  1133,  1776,
    1777,  1778,  1779,  1780,  1781,     0,     0,     0,  1296,     0,
       0,     0,     0,   559,     0,     0,     0,  1296,   559,   559,
     559,     0,  1051,     0,  1594,     0,     0,     0,  1379,  1380,
       0,   490,     0,     0,     0,     0,     0,     0,   559,     0,
       0, -1536,   638,     0,     0,     0,     0,     0,  1381,     0,
       0,  1046,     0,     0,  1050,     0,     0,     0,  1296,  1296,
       0,     0,     0,     0,     0,  1405,  1406,     0,     0,     0,
       0,     0,     0,  1420,     0,  1421,  1422,  1047,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0, -1536,     0,
    1459,  1049,  1460,     0,     0,     0,  1441,     0,     0,     0,
       0,     0,     0,  1677,     0,  1471,     0,     0,     0,     0,
    1772,     0,     0,  1047,     0,     0,     0,     0,     0,     0,
       0,  1973,   672,     0,     0,  1766,     0,  1049,     0,     0,
    1767,  1768,  1769,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1047,     0,  1051,  1047,  2245,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1049,     0,     0,
    1049,     0,     0,     0,     0,     0,     0,     0,     0,  2074,
       0,     0,     0,     0,     0,  1050,     0,   559,   559,   559,
     464,     0,  1855,  2091,  1451,  1451, -1536,  2091,  2105,  1451,
       0,     0,     0,  1140,  1141,  1142,  1143,  1144,  1145,     0,
       0,     0,  1588,  1588,     0,     0,  1408,  1050,   531,     0,
       0,     0,     0,     0,     0,     0,  1569,     0,     0,     0,
       0,     0,     0,     0,     0,  1451,  1451,     0,     0,     0,
       0,     0,   559,     0,   490,     0,     0,     0,  1296,  1239,
    1296,     0,  1322,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1001,     0,     0,     0,   490,     0,
    2170,     0,     0,     0,  1001,     0,  1051,  1001,     0,     0,
       0,     0,     0,   490,   490,   490,   490,   490,   490,   490,
     490,   490,   490,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   559,  1051,     0,
       0,  1773,  1774,  1775,  1239,  1776,  1777,  1778,  1779,  1780,
    1781,  1365,  1366,     0,     0,  1322,     0,     0,   559,     0,
       0,     0,     0,     0,  2136,  1296,  1771,     0,  1047,     0,
       0,     0,     0,     0,  2226,     0,     0,     0,  1838,  1001,
       0,     0,  1049,     0,     0,     0,   743,   743,  2169,     0,
       0,     0,  1001,     0,     0,     0,     0,     0,     0,  1115,
       0,     0,  1116,  2188,  2189,  2190,  2191,  2192,  2193,  2194,
    2195,  2196,  2197,     0,     0,     0,  1733,     0,     0,     0,
       0,     0,     0,     0,     0,  1367,  1368,     0,     0,     0,
       0,     0,  1122,     0,     0,  1772,     0,     0,     0, -1536,
       0,     0,     0,     0,   861,   866,     0,     0,     0,  2253,
       0,     0,   559,   559,   559,   559,     0,     0,     0,  2091,
    2105,     0,  2091,     0,  1124,  2263,     0,     0,     0,  1855,
       0,     0,     0,  1855,     0,     0,     0,     0,     0,  2281,
       0,     0,     0,     0,     0,     0,     0,  1369,  1370,  1371,
    1372,  1373,  1374,     0,     0,  1375,  1376,     0,  1873,     0,
       0,     0,   861,  1569,     0,     0,     0,  1441,     0,     0,
       0,     0,     0,     0,     0,  1239,     0,     0,  1063,  1957,
       0,     0,     0,     0,  1962,  1963,  1965,     0,     0,     0,
       0,     0,     0,  2063,     0,     0,     0,     0,     0,     0,
    2343,     0,     0,     0,  1979,  1050,  1085,  1451,  1451,  1451,
    1451,     0,     0,  1451,  1451,  1451,  1451,  1451,  1451,  1451,
    1451,  1451,  1451, -1536,     0,  1101,  1102,  1103,     0,  1105,
       0,     0,     0,     0,     0,     0,     0, -1536,  1296,  1365,
    1366,  1860, -1536,     0,  1690,  1050,     0,     0,     0,     0,
    1154,     0,     0,     0,     0,  2376,     0,     0,     0,  1377,
    1378,  1050,  1451,  1451,     0,     0,     0,     0,     0,     0,
       0,     0,  1890,  1890,     0, -1441,     0, -1536,     0,     0,
       0,  1050,     0,     0,     0,     0,  1773,  1774,  1775,     0,
    1776,  1777,  1778,  1779,  1780,  1781,  1051,   464,  2091,  1194,
       0,     0,  2404,  1206,  1211,   490,     0,  1855,     0,     0,
    1050,     0,  1855,  1367,  1368,  1855,     0,  2415,     0,     0,
    2418,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1133,  1050,  2434,     0,  1051,     0,     0,     0,
       0,     0,     0,  2079,  2080,  2081,     0,     0,     0,     0,
       0,     0,  1051,     0,   638,   490,   861,   861,   861,     0,
       0,     0,     0,   559,     0,     0,     0, -1441,  1379,  1380,
       0,     0,  1051,     0,     0,  1369,  1370,  1371,  1372,  1373,
    1374,     0,     0,  1375,  1376,     0,     0,   490,   490,     0,
       0,     0,     0,     0,     0,  1148,     0,  1239,  2135,     0,
     490,  1051,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   559,     0,     0,  2434,     0,     0,     0, -1441,
       0,     0, -1536,     0,  1051,     0,  1999,  2001,     0,     0,
       0,     0, -1441,     0,  1148,   490,     0, -1441,     0,     0,
       0,     0, -1441,     0,     0,  2447,     0,     0,  1855,  1050,
       0, -1441,     0,  2418, -1441,     0,     0,     0,     0,     0,
       0,     0,  2524,  2204,     0,     0,   490,     0,   861,     0,
       0,     0,     0,     0,     0,   559,     0,  2465,  2466,     0,
       0,     0,     0, -1441,  1334,     0,     0,  1377,  1378,     0,
    2474,     0,     0,     0,     0,     0,     0,   638,     0,     0,
       0,     0, -1441,     0,     0,     0,     0,     0,   559,     0,
       0,     0,     0,  1148,     0,     0,     0,     0,  1148,     0,
   -1536,     0,     0,     0,     0,     0,     0,  1140,  1141,  1142,
    1143,  1144,  1145,     0,     0,     0,   464,     0,     0,     0,
    1051,     0,     0,     0,     0,  2578,     0,     0,     0,   490,
       0, -1441,     0,  2415, -1441,     0,  2529,     0,     0,     0,
   -1441,     0,     0,     0,     0,  1402,     0,     0,     0,  2434,
     638,   638,   638,     0,  1050,     0,     0,     0,  2254,  2255,
    2256,  2257,     0,     0,     0,     0,  1425,     0,     0,  1442,
       0,     0,  1454,     0,     0,     0,  1379,  1380,     0,  1461,
    1466,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1472,     0,  2415,     0, -1441,     0,  1476,  1477,  1478,
    1479,     0,  2524,     0,  2404,  1488,  1489,     0,     0,  1001,
    1500,     0,     0,  1569,  1503,     0,     0,  1511,  1512,  1513,
    1514,  1515,  1516,  1517,  1518,  1519,     0,  1239,  1520,     0,
       0,     0,  1528,  2434,     0,  1532,     0,   743,     0,   861,
       0,     0,     0,     0,     0,  1051,     0,     0,     0,  1839,
       0,   638,     0,  1451,     0,     0,     0,     0,     0,     0,
    1553,     0,     0,  1050,     0,     0,     0,     0,     0,     0,
    2225,  1050,     0,     0,     0, -1441,     0,     0,     0,     0,
       0,     0,     0, -1441,     0,     0,     0,  1102,  1103,     0,
       0,     0,     0,     0,     0,  1148,     0,     0,     0, -1441,
       0, -1441, -1441,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1148,     0,     0,
       0,  1050,  1449,     0,     0,     0,     0,     0,     0,     0,
       0,  1050,     0,  1148,  1148,  1148,     0,  1148, -1441,  1451,
       0, -1441, -1441, -1441,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1051,     0,  1115,     0,     0,  1116,
       0,     0,  1051,     0,     0,     0,   861,     0,     0,  1664,
    1665,     0,  1666,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1148,     0,     0,  1122,
       0,     0,     0,     0,     0,     0, -1536,     0,     0,  1699,
       0,     0,     0,     0,  1451,     0,     0,     0,     0,  2455,
       0,     0,  1051,     0,     0,     0,     0,   -38,     0,     0,
       0,  1124,  1051,     0,     0,     0,  1148,     0,     0,     0,
       0,     0,  1001,     0,     0,     0,     1,  1001,  1148,   861,
       0,     0,     0,  1148,  1050,     0,     2,     0,     3,     4,
       0,     0,  1339,  1341,     0,     0,     0,  1115,  2491,     0,
    1116,     0,     0,     0,     5,  1117,  1118,  1119,     0,     0,
       0,     0,     0,     6,     0,     0,     0,     0,     0,  1742,
    1050,     0,  1120,     0,  1748,     7,     0,     0,     0,     0,
    1122,     0,     0,     0,     0,     0,     8,  1123,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     9,     0,    10,
    1050,     0,     0,  1050,     0,     0,     0,     0,     0,     0,
   -1536,  2538,  1124,     0,     0,     0,  1765,    11,     0,     0,
       0,     0,     0,     0, -1536,  1051,     0,     0,     0, -1536,
       0,    12,  1466,     0,  1466,  1466,     0,     0,     0,     0,
    1803,    13,     0,     0,  2560,     0,     0,    14,     0,     0,
       0,     0,     0,     0,     0,    15,     0,    16,    17,     0,
       0,  1051,     0,     0, -1536,     0,     0,     0,     0,     0,
      18,     0,     0,     0,  1821,     0,     0,  1824,     0,  1826,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1051,     0,     0,  1051,     0,     0,    19,     0,     0,
       0,     0,     0,     0,     0,  1339,  1341,     0,     0,     0,
       0,  1125,     0,     0,  1001,     0,     0,     0,     0,  1133,
       0,     0,     0,     0,  1148,  1126,     0,     0,     0,     0,
    1127,     0,     0,     0,     0,     0,    20,     0,     0,     0,
    1194,     0,     0,     0,     0,     0,     0,  1148,     0,     0,
       0,  1128,  1129,     0,     0,  1211,     0,     0,     0,     0,
       0,     0,     0,     0,  1148,  1130,  1449,  1449,     0,  1782,
       0,  1449,     0,  1898,     0,     0,  1148,     0,     0,     0,
       0,     0,     0,  1148,     0,  1050,     0,     0,  1148,     0,
       0,     0,     0,     0,  1148,     0,     0,     0,  1148,  1148,
    1148,  1148,     0,  1131,     0,     0,  1132,  1449,  1449, -1536,
    1148,  1148,     0,    21,     0,     0,    22,     0,     0,     0,
    1133,     0,  1148,  1134,     0,  1148,     0,     0,     0,     0,
       0,   861,     0,  1148,  1148,  1148,  1148,  1148,  1148,  1148,
    1148,  1148,  1148,     0,    23,     0,     0,     0,     0,     0,
    1148,     0,    24,     0,  1148,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    25,     0,     0,     0,
       0,     0,     0,    26,     0,  1148,  1051,    27,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    28,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    29,     0,     0,     0,     0,     0, -1536,     0,     0,
    1135,     0,     0,  2012,  1140,  1141,  1142,  1143,  1144,  1145,
       0,     0,     0,  2016,     0,     0,     0,  2017,     0,     0,
    2019,     0,     0,     0,     0,     0,    30,     0,     0,     0,
       0,    31,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    32,     0,  2039,  2040,     0,     0,
       0,     0,     0,     0,     0,  1001,     0,     0,     0,     0,
       0,     0,     0,     0,     0, -1443,  2052,     0,    33,  2055,
       0,  2057,     0,     0,     0,     0,  1148,  1148,  1148,  2061,
       0,     0,    34,     0,     0,   -38,     0,  2068,  2069,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1136,     0,
       0,  1137,  1138,  1139,     0,  1140,  1141,  1142,  1143,  1144,
    1145,  1148,     0,     0,     0,     0,  2109,     0,  1757,     0,
       0,     0, -1457,     0,     0,  2116,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2129,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1148,     0,     0, -1443,     0,     0,
    1148,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1782,  1782,  1148,     0,  1449,
    1449,  1449,  1449,     0,     0,  1449,  1449,  1449,  1449,  1449,
    1449,  1449,  1449,  1449,  1449,  1782,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0, -1443,
       0,     0,     0,     0, -1457,  1148,     0,     0,     0,  1782,
    1782,     0, -1443,     0,     0,     0,     0, -1443,     0,     0,
       0,     0, -1443,  1148,  1449,  1449,  1148,     0,  1148,     0,
       0, -1443,     0,     0, -1443,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0, -1457,     0,     0,     0,
       0,  2229,     0, -1443,     0,     0,     0,     0,     0, -1457,
       0,     0,     0,     0, -1457,     0,     0,     0,     0, -1457,
       0,     0, -1443,     0,     0,     0,     0,     0, -1457,     0,
       0, -1457,     0,     0,     0,     0,     0,     0,     0,     0,
    1148,     0,     0,  2238,  2239,     0,     0,     0,  2240,     0,
       0,     0,     0,  2243,     0,     0,  2246,  2247,     0,     0,
   -1457,  2251,     0,     0,     0,     0,     0,     0,     0,     0,
       0, -1443,     0,     0, -1443,     0,     0,     0,     0, -1457,
   -1443,  1114,     0,     0,     0,     0,  1115,     0,     0,  1116,
       0,     0,     0,     0,  1117,  1118,  1119,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   743,     0,     0,
       0,  1120,     0,     0,  1121,     0,     0,     0,     0,  1122,
       0,     0,     0,     0,     0,     0,  1123,     0, -1457,     0,
    1115, -1457,     0,  1116,     0, -1443,     0, -1457, -1536, -1536,
   -1536,     0,     0,     0,     0,     0,     0,     0,     0,  2337,
       0,  1124,     0,     0,  1148,     0,     0,     0,  1148,  1148,
       0,  1148,     0,  1122,  1782,  1782,  1782,  1782,     0,     0,
    1123,  1782,  1782,  1782,  1782,  1782,  1782,  1782,  1782,  1782,
    1782,  1148,  1148,     0,     0,     0,     0,     0,     0,  1839,
     832,     0, -1457,     0,  1148,  1124,     0,  1148,     0,  1148,
       0,     0,     0,  1148,     0,     0,  1782,  1782,     0,   833,
    1148,  1148,     0,     0,     0, -1443,     0,     0,     0,     0,
       0,     0,  1115, -1443,     0,  1116,     0,     0,     0,     0,
       0,     0,     0,     0,  2388,  2389,     0,     0,  2390, -1443,
       0, -1443, -1443,     0,     0,     0,  1839,     0,     0,     0,
    1125,  1148,     0,     0,     0,  1122,     0,     0,  1148,   834,
    2158,     0, -1536,     0,  1126,     0,     0,     0,  2159,  1127,
       0,  1148, -1457,     0,     0,  2423,  2424,     0, -1443,     0,
   -1457, -1443, -1443, -1443,     0,     0,     0,  1124,     0,  2436,
    1128,  1129,     0,     0,  1125,     0, -1457,     0, -1457, -1457,
       0,     0,     0,     0,  1130,     0,     0,     0,  1126,     0,
       0,     0,     0,  1127,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2160,     0,     0,     0,     0,
       0,     0,     0,     0,     0, -1457,     0,     0, -1457, -1457,
   -1457,     0,  1131,     0,     0,  1132,     0,   835,  1130,     0,
       0,     0,     0,     0,     0,     0,  2066,     0,     0,  1133,
       0,     0,  1134,     0,     0,     0,     0,     0,     0,     0,
       0,  1148,     0,     0,     0,  1449,     0,     0,     0,     0,
    1148,  1148,  1148,     0,     0,  1148, -1536,     0,  1148,  1148,
       0,     0,     0,  1148,     0,     0,   836,  2511,     0,     0,
   -1536,     0,     0,  1133,   837, -1536,     0,     0,     0,  1105,
       0,     0,     0,     0,     0,     0,   838,     0,  2161,     0,
    2530,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2544,     0,     0,     0,     0,
   -1536,     0,     0,     0,     0,     0,     0,   839,     0,  1135,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1449,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1148,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   841,  1135,     0,  1133,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2423,     0,     0,   842,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1782,  1449,     0,     0,     0,
    1148,  1148,  1148,     0,   844,     0,  2162,     0,     0,  2163,
       0,     0,  2607,     0,     0,     0,     0,  1136,     0,     0,
    1137,  1138,  1139,     0,  1140,  1141,  1142,  1143,  1144,  1145,
       0,  2621,  2621,     0,     0,  1148,  1148,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1148,     0,
       0,     0,     0,     0,     0, -1536,     0,     0,     0,     0,
    1782,  1136,     0,     0, -1536, -1536, -1536,     0,  1140,  1141,
    1142,  1143,  1144,  1145,     0,     0,     0,     0,  2621,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1782,     0,     0,     0,  1247,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1148,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2621,     0,  1148,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0, -1536,     0,     0,  1148,     0,     0,     0,
    1140,  1141,  1142,  1143,  1144,  1145,     0,     0,     0,    89,
     669,   531,   670,   671,   672,   673,   674,     0,     0,     0,
       0,     0,     0,     0,     0,    90,    91,    92,    93,    94,
      95,    96,    97,   856,    98,    99,   100,     0,     0,     0,
       0,     0,     0,     0,   101,   102,     0,   103,   104,   105,
     106,   107,   108,   109,   110,   675,   112,   676,   677,  1148,
     115,   116,   117,   118,   119,   120,   678,   679,   121,   122,
     680,   681,   125,  1148,   126,   127,   128,   129,   682,     0,
     683,     0,   132,   133,   134,   135,   136,   137,   138,   139,
     140,     0,   141,   142,   143,   144,   145,   146,     0,   147,
     148,   149,   150,   684,   685,   686,   687,   688,   689,   690,
     152,   153,   154,   155,   156,   157,   158,   691,   692,   161,
     693,   162,     0,   163,   164,   165,   166,   167,   168,     0,
     169,   170,   171,   172,   173,   857,     0,   174,   175,   694,
     177,   178,     0,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,   188,   695,   190,   191,   192,   193,
     696,   697,   195,     0,   196,   197,   698,   199,     0,   200,
       0,   201,   202,     0,   203,   204,   205,   206,   207,   208,
       0,   209,     0,   210,   211,     0,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,     0,   223,   224,
     225,   226,   227,   228,     0,   229,   230,   231,   232,   233,
     234,   235,   699,   700,     0,   701,     0,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,     0,     0,   249,
     250,   251,   252,     0,   253,   254,   255,   702,   703,   256,
     257,   258,   259,   260,     0,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   704,   280,   705,   282,   283,   284,   285,
     706,   286,   287,   288,   289,   707,   708,   291,   709,   293,
     294,   295,     0,   296,   297,     0,     0,   710,   299,   300,
       0,     0,   301,   302,   303,   304,   305,   711,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,     0,   317,
     318,   712,   320,   321,   322,   323,   324,   325,     0,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   713,   336,
     337,   338,   339,     0,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,     0,   352,   353,   354,
     355,   356,   357,   714,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,     0,   370,   371,   372,   373,
     374,   715,   375,   376,   377,   378,   379,   380,   381,   382,
     716,   384,     0,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   717,     0,   399,   400,
       0,   401,   402,   403,   404,   405,   406,   407,     0,   718,
     719,     0,     0,   410,   411,   720,   413,   721,   722,   415,
     416,   417,   418,   419,   420,   421,     0,     0,   422,   423,
     424,   425,   426,   723,     0,   427,   428,   429,   430,   431,
     432,   724,   858,   434,   435,   436,   437,   438,   439,     0,
       0,   440,     0,     0,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   725,     0,     0,     0,     0,
       0,     0,   726,   727,   859,     0,     0,     0,     0,     0,
       0,   729,   860,     0,     0,     0,   730,    89,   669,   531,
     670,   671,   672,   673,   674,     0,     0,     0,     0,     0,
       0,     0,     0,    90,    91,    92,    93,    94,    95,    96,
      97,     0,    98,    99,   100,     0,     0,     0,     0,     0,
       0,     0,   101,   102,     0,   103,   104,   105,   106,   107,
     108,   109,   110,   675,   112,   676,   677,     0,   115,   116,
     117,   118,   119,   120,   678,   679,   121,   122,   680,   681,
     125,     0,   126,   127,   128,   129,   682,     0,   683,     0,
     132,   133,   134,   135,   136,   137,   138,   139,   140,     0,
     141,   142,   143,   144,   145,   146,     0,   147,   148,   149,
     150,   684,   685,   686,   687,   688,   689,   690,   152,   153,
     154,   155,   156,   157,   158,   691,   692,   161,   693,   162,
       0,   163,   164,   165,   166,   167,   168,     0,   169,   170,
     171,   172,   173,     0,     0,   174,   175,   694,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,   188,   695,   190,   191,   192,   193,   696,   697,
     195,     0,   196,   197,   698,   199,     0,   200,     0,   201,
     202,     0,   203,   204,   205,   206,   207,   208,     0,   209,
       0,   210,   211,     0,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,     0,   223,   224,   225,   226,
     227,   228,     0,   229,   230,   231,   232,   233,   234,   235,
     699,   700,     0,   701,     0,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,     0,     0,   249,   250,   251,
     252,     0,   253,   254,   255,   702,   703,   256,   257,   258,
     259,   260,     0,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   704,   280,   705,   282,   283,   284,   285,   706,   286,
     287,   288,   289,   707,   708,   291,   709,   293,   294,   295,
       0,   296,   297,     0,     0,   710,   299,   300,     0,     0,
     301,   302,   303,   304,   305,   711,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,     0,   317,   318,   712,
     320,   321,   322,   323,   324,   325,     0,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   713,   336,   337,   338,
     339,     0,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,     0,   352,   353,   354,   355,   356,
     357,   714,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,    25,   370,   371,   372,   373,   374,   715,
     375,   376,   377,   378,   379,   380,   381,   382,   716,   384,
       0,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   717,     0,   399,   400,    29,   401,
     402,   403,   404,   405,   406,   407,     0,   718,   719,     0,
       0,   410,   411,   720,   413,   721,   722,   415,   416,   417,
     418,   419,   420,   421,     0,     0,   422,   423,   424,   425,
     426,   723,     0,   427,   428,   429,   430,   431,   592,   724,
       0,   434,   435,   436,   437,   438,   439,     0,     0,   440,
       0,    32,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   725,     0,    33,     0,     0,     0,     0,
     726,   727,     0,     0,     0,     0,     0,     0,     0,   729,
    2520,     0,     0,     0,   730,    89,   669,   531,   670,   671,
     672,   673,   674,     0,     0,     0,     0,     0,     0,     0,
       0,    90,    91,    92,    93,    94,    95,    96,    97,     0,
      98,    99,   100,     0,     0,     0,     0,     0,     0,     0,
     101,   102,     0,   103,   104,   105,   106,   107,   108,   109,
     110,   675,   112,   676,   677,     0,   115,   116,   117,   118,
     119,   120,   678,   679,   121,   122,   680,   681,   125,     0,
     126,   127,   128,   129,   682,     0,   683,     0,   132,   133,
     134,   135,   136,   137,   138,   139,   140,     0,   141,   142,
     143,   144,   145,   146,     0,   147,   148,   149,   150,   684,
     685,   686,   687,   688,   689,   690,   152,   153,   154,   155,
     156,   157,   158,   691,   692,   161,   693,   162,     0,   163,
     164,   165,   166,   167,   168,     0,   169,   170,   171,   172,
     173,     0,     0,   174,   175,   694,   177,   178,     0,   179,
     180,   181,     0,   182,   183,   184,     0,   185,   186,   187,
     188,   695,   190,   191,   192,   193,   696,   697,   195,     0,
     196,   197,   698,   199,     0,   200,     0,   201,   202,     0,
     203,   204,   205,   206,   207,   208,     0,   209,     0,   210,
     211,     0,   212,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,     0,   223,   224,   225,   226,   227,   228,
       0,   229,   230,   231,   232,   233,   234,   235,   699,   700,
       0,   701,     0,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,     0,     0,   249,   250,   251,   252,     0,
     253,   254,   255,   702,   703,   256,   257,   258,   259,   260,
       0,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   704,
     280,   705,   282,   283,   284,   285,   706,   286,   287,   288,
     289,   707,   708,   291,   709,   293,   294,   295,     0,   296,
     297,     0,     0,   710,   299,   300,     0,     0,   301,   302,
     303,   304,   305,   711,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,     0,   317,   318,   712,   320,   321,
     322,   323,   324,   325,     0,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   713,   336,   337,   338,   339,     0,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,     0,   352,   353,   354,   355,   356,   357,   714,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,    25,   370,   371,   372,   373,   374,   715,   375,   376,
     377,   378,   379,   380,   381,   382,   716,   384,     0,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   717,     0,   399,   400,    29,   401,   402,   403,
     404,   405,   406,   407,     0,   718,   719,     0,     0,   410,
     411,   720,   413,   721,   722,   415,   416,   417,   418,   419,
     420,   421,     0,     0,   422,   423,   424,   425,   426,   723,
       0,   427,   428,   429,   430,   431,   592,   724,     0,   434,
     435,   436,   437,   438,   439,     0,     0,   440,     0,    32,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   725,     0,    33,     0,     0,     0,     0,   726,   727,
       0,     0,     0,     0,     0,     0,     0,   729,     0,     0,
       0,     0,   730,    89,   669,   531,   670,   671,   672,   673,
     674,     0,     0,     0,     0,     0,     0,     0,     0,    90,
      91,    92,    93,    94,    95,    96,    97,     0,    98,    99,
     100,     0,     0,     0,     0,     0,     0,     0,   101,   102,
       0,   103,   104,   105,   106,   107,   108,   109,   110,   675,
     112,   676,   677,  1462,   115,   116,   117,   118,   119,   120,
     678,   679,   121,   122,   680,   681,   125,     0,   126,   127,
     128,   129,   682,     0,   683,     0,   132,   133,   134,   135,
     136,   137,   138,   139,   140,     0,   141,   142,   143,   144,
     145,   146,     0,   147,   148,   149,   150,   684,   685,   686,
     687,   688,   689,   690,   152,   153,   154,   155,   156,   157,
     158,   691,   692,   161,   693,   162,     0,   163,   164,   165,
     166,   167,   168,     0,   169,   170,   171,   172,   173,     0,
       0,   174,   175,   694,   177,   178,     0,   179,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,   188,   695,
     190,   191,   192,   193,   696,   697,   195,     0,   196,   197,
     698,   199,     0,   200,     0,   201,   202,  1463,   203,   204,
     205,   206,   207,   208,     0,   209,     0,   210,   211,     0,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,     0,   223,   224,   225,   226,   227,   228,     0,   229,
     230,   231,   232,   233,   234,   235,   699,   700,     0,   701,
       0,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,     0,  1464,   249,   250,   251,   252,     0,   253,   254,
     255,   702,   703,   256,   257,   258,   259,   260,     0,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   704,   280,   705,
     282,   283,   284,   285,   706,   286,   287,   288,   289,   707,
     708,   291,   709,   293,   294,   295,     0,   296,   297,     0,
       0,   710,   299,   300,     0,     0,   301,   302,   303,   304,
     305,   711,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,     0,   317,   318,   712,   320,   321,   322,   323,
     324,   325,     0,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   713,   336,   337,   338,   339,     0,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
       0,   352,   353,   354,   355,   356,   357,   714,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,     0,
     370,   371,   372,   373,   374,   715,   375,   376,   377,   378,
     379,   380,   381,   382,   716,   384,     0,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     717,     0,   399,   400,     0,   401,   402,   403,   404,   405,
     406,   407,     0,   718,   719,     0,  1465,   410,   411,   720,
     413,   721,   722,   415,   416,   417,   418,   419,   420,   421,
       0,     0,   422,   423,   424,   425,   426,   723,     0,   427,
     428,   429,   430,   431,   432,   724,     0,   434,   435,   436,
     437,   438,   439,     0,     0,   440,     0,     0,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   725,
       0,     0,     0,     0,     0,     0,   726,   727,     0,     0,
       0,     0,     0,     0,     0,   729,     0,     0,     0,     0,
     730,    89,   669,   531,   670,   671,   672,   673,   674,     0,
       0,     0,     0,     0,     0,     0,     0,    90,    91,    92,
      93,    94,    95,    96,    97,     0,    98,    99,   100,     0,
       0,     0,     0,     0,     0,     0,   101,   102,     0,   103,
     104,   105,   106,   107,   108,   109,   110,   675,   112,   676,
     677,     0,   115,   116,   117,   118,   119,   120,   678,   679,
     121,   122,   680,   681,   125,     0,   126,   127,   128,   129,
     682,     0,   683,     0,   132,   133,   134,   135,   136,   137,
     138,   139,   140,     0,   141,   142,   143,   144,   145,   146,
       0,   147,   148,   149,   150,   684,   685,   686,   687,   688,
     689,   690,   152,   153,   154,   155,   156,   157,   158,   691,
     692,   161,   693,   162,     0,   163,   164,   165,   166,   167,
     168,     0,   169,   170,   171,   172,   173,     0,     0,   174,
     175,   694,   177,   178,     0,   179,   180,   181,     0,   182,
     183,   184,     0,   185,   186,   187,   188,   695,   190,   191,
     192,   193,   696,   697,   195,     0,   196,   197,   698,   199,
       0,   200,     0,   201,   202,     0,   203,   204,   205,   206,
     207,   208,     0,   209,     0,   210,   211,     0,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,     0,
     223,   224,   225,   226,   227,   228,     0,   229,   230,   231,
     232,   233,   234,   235,   699,   700,     0,   701,     0,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,     0,
       0,   249,   250,   251,   252,     0,   253,   254,   255,   702,
     703,   256,   257,   258,   259,   260,     0,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   704,   280,   705,   282,   283,
     284,   285,   706,   286,   287,   288,   289,   707,   708,   291,
     709,   293,   294,   295,     0,   296,   297,     0,     0,   710,
     299,   300,     0,     0,   301,   302,   303,   304,   305,   711,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
       0,   317,   318,   712,   320,   321,   322,   323,   324,   325,
       0,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     713,   336,   337,   338,   339,     0,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,     0,   352,
     353,   354,   355,   356,   357,   714,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,     0,   370,   371,
     372,   373,   374,   715,   375,   376,   377,   378,   379,   380,
     381,   382,   716,   384,     0,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   717,     0,
     399,   400,     0,   401,   402,   403,   404,   405,   406,   407,
       0,   718,   719,     0,     0,   410,   411,   720,   413,   721,
     722,   415,   416,   417,   418,   419,   420,   421,     0,     0,
     422,   423,   424,   425,   426,   723,     0,   427,   428,   429,
     430,   431,   432,   724,     0,   434,   435,   436,   437,   438,
     439,     0,     0,   440,     0,     0,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   725,     0,     0,
       0,     0,     0,     0,   726,   727,   728,     0,     0,     0,
       0,     0,     0,   729,     0,     0,     0,     0,   730,    89,
     669,   531,   670,   671,   672,   673,   674,     0,     0,     0,
       0,     0,     0,     0,     0,    90,    91,    92,    93,    94,
      95,    96,    97,  1204,    98,    99,   100,     0,     0,     0,
       0,     0,     0,     0,   101,   102,     0,   103,   104,   105,
     106,   107,   108,   109,   110,   675,   112,   676,   677,     0,
     115,   116,   117,   118,   119,   120,   678,   679,   121,   122,
     680,   681,   125,     0,   126,   127,   128,   129,   682,     0,
     683,     0,   132,   133,   134,   135,   136,   137,   138,   139,
     140,     0,   141,   142,   143,   144,   145,   146,     0,   147,
     148,   149,   150,   684,   685,   686,   687,   688,   689,   690,
     152,   153,   154,   155,   156,   157,   158,   691,   692,   161,
     693,   162,     0,   163,   164,   165,   166,   167,   168,     0,
     169,   170,   171,   172,   173,     0,     0,   174,   175,   694,
     177,   178,     0,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,   188,   695,   190,   191,   192,   193,
     696,   697,   195,     0,   196,   197,   698,   199,     0,   200,
       0,   201,   202,     0,   203,   204,   205,   206,   207,   208,
       0,   209,     0,   210,   211,     0,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,     0,   223,   224,
     225,   226,   227,   228,     0,   229,   230,   231,   232,   233,
     234,   235,   699,   700,     0,   701,     0,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,     0,     0,   249,
     250,   251,   252,     0,   253,   254,   255,   702,   703,   256,
     257,   258,   259,   260,     0,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   704,   280,   705,   282,   283,   284,   285,
     706,   286,   287,   288,   289,   707,   708,   291,   709,   293,
     294,   295,     0,   296,   297,     0,     0,   710,   299,   300,
       0,     0,   301,   302,   303,   304,   305,   711,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,     0,   317,
     318,   712,   320,   321,   322,   323,   324,   325,     0,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   713,   336,
     337,   338,   339,     0,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,     0,   352,   353,   354,
     355,   356,   357,   714,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,     0,   370,   371,   372,   373,
     374,   715,   375,   376,   377,   378,   379,   380,   381,   382,
     716,   384,     0,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   717,     0,   399,   400,
       0,   401,   402,   403,   404,   405,   406,   407,     0,   718,
     719,     0,     0,   410,   411,   720,   413,   721,   722,   415,
     416,   417,   418,   419,   420,   421,     0,     0,   422,   423,
     424,   425,   426,   723,     0,   427,   428,   429,   430,   431,
     432,   724,     0,   434,   435,   436,   437,   438,   439,     0,
       0,   440,     0,     0,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   725,     0,     0,     0,     0,
       0,     0,   726,   727,     0,     0,     0,     0,     0,     0,
       0,   729,     0,     0,     0,     0,   730,    89,   669,   531,
     670,   671,   672,   673,   674,     0,     0,     0,     0,     0,
       0,     0,     0,    90,    91,    92,    93,    94,    95,    96,
      97,     0,    98,    99,   100,     0,     0,     0,     0,     0,
       0,     0,   101,   102,     0,   103,   104,   105,   106,   107,
     108,   109,   110,   675,   112,   676,   677,     0,   115,   116,
     117,   118,   119,   120,   678,   679,   121,   122,   680,   681,
     125,     0,   126,   127,   128,   129,   682,     0,   683,     0,
     132,   133,   134,   135,   136,   137,   138,   139,   140,     0,
     141,   142,   143,   144,   145,   146,     0,   147,   148,   149,
     150,   684,   685,   686,   687,   688,   689,   690,   152,   153,
     154,   155,   156,   157,   158,   691,   692,   161,   693,   162,
       0,   163,   164,   165,   166,   167,   168,     0,   169,   170,
     171,   172,   173,     0,     0,   174,   175,   694,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,   188,   695,   190,   191,   192,   193,   696,   697,
     195,     0,   196,   197,   698,   199,     0,   200,     0,   201,
     202,     0,   203,   204,   205,   206,   207,   208,     0,   209,
       0,   210,   211,     0,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,     0,   223,   224,   225,   226,
     227,   228,     0,   229,   230,   231,   232,   233,   234,   235,
     699,   700,     0,   701,     0,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,     0,     0,   249,   250,   251,
     252,     0,   253,   254,   255,   702,   703,   256,   257,   258,
     259,   260,     0,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   704,   280,   705,   282,   283,   284,   285,   706,   286,
     287,   288,   289,   707,   708,   291,   709,   293,   294,   295,
       0,   296,   297,     0,     0,   710,   299,   300,     0,     0,
     301,   302,   303,   304,   305,   711,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,     0,   317,   318,   712,
     320,   321,   322,   323,   324,   325,     0,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   713,   336,   337,   338,
     339,     0,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,     0,   352,   353,   354,   355,   356,
     357,   714,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,     0,   370,   371,   372,   373,   374,   715,
     375,   376,   377,   378,   379,   380,   381,   382,   716,   384,
       0,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   717,     0,   399,   400,     0,   401,
     402,   403,   404,   405,   406,   407,     0,   718,   719,     0,
       0,   410,   411,   720,   413,   721,   722,   415,   416,   417,
     418,   419,   420,   421,     0,     0,   422,   423,   424,   425,
     426,   723,     0,   427,   428,   429,   430,   431,   432,   724,
       0,   434,   435,   436,   437,   438,   439,     0,     0,   440,
       0,     0,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   725,     0,     0,     0,     0,     0,     0,
     726,   727,     0,     0,     0,     0,     0,     0,     0,   729,
    1317,     0,     0,     0,   730,    89,   669,   531,   670,   671,
     672,   673,   674,     0,     0,     0,     0,     0,     0,     0,
       0,    90,    91,    92,    93,    94,    95,    96,    97,     0,
      98,    99,   100,     0,     0,     0,     0,     0,     0,     0,
     101,   102,     0,   103,   104,   105,   106,   107,   108,   109,
     110,   675,   112,   676,   677,     0,   115,   116,   117,   118,
     119,   120,   678,   679,   121,   122,   680,   681,   125,     0,
     126,   127,   128,   129,   682,     0,   683,     0,   132,   133,
     134,   135,   136,   137,   138,   139,   140,     0,   141,   142,
     143,   144,   145,   146,     0,   147,   148,   149,   150,   684,
     685,   686,   687,   688,   689,   690,   152,   153,   154,   155,
     156,   157,   158,   691,   692,   161,   693,   162,     0,   163,
     164,   165,   166,   167,   168,     0,   169,   170,   171,   172,
     173,     0,     0,   174,   175,   694,   177,   178,     0,   179,
     180,   181,     0,   182,   183,   184,     0,   185,   186,   187,
     188,   695,   190,   191,   192,   193,   696,   697,   195,     0,
     196,   197,   698,   199,     0,   200,     0,   201,   202,     0,
     203,   204,   205,   206,   207,   208,     0,   209,     0,   210,
     211,     0,   212,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,     0,   223,   224,   225,   226,   227,   228,
       0,   229,   230,   231,   232,   233,   234,   235,   699,   700,
       0,   701,     0,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,     0,     0,   249,   250,   251,   252,     0,
     253,   254,   255,   702,   703,   256,   257,   258,   259,   260,
       0,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   704,
     280,   705,   282,   283,   284,   285,   706,   286,   287,   288,
     289,   707,   708,   291,   709,   293,   294,   295,     0,   296,
     297,     0,     0,   710,   299,   300,     0,     0,   301,   302,
     303,   304,   305,   711,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,     0,   317,   318,   712,   320,   321,
     322,   323,   324,   325,     0,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   713,   336,   337,   338,   339,     0,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,     0,   352,   353,   354,   355,   356,   357,   714,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,     0,   370,   371,   372,   373,   374,   715,   375,   376,
     377,   378,   379,   380,   381,   382,   716,   384,     0,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   717,     0,   399,   400,     0,   401,   402,   403,
     404,   405,   406,   407,     0,   718,   719,     0,     0,   410,
     411,   720,   413,   721,   722,   415,   416,   417,   418,   419,
     420,   421,     0,     0,   422,   423,   424,   425,   426,   723,
       0,   427,   428,   429,   430,   431,   432,   724,     0,   434,
     435,   436,   437,   438,   439,     0,     0,   440,     0,     0,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   725,     0,     0,     0,     0,     0,     0,   726,   727,
       0,     0,     0,     0,     0,     0,     0,   729,  1452,     0,
       0,     0,   730,    89,   669,   531,   670,   671,   672,   673,
     674,     0,     0,     0,     0,     0,     0,     0,     0,    90,
      91,    92,    93,    94,    95,    96,    97,     0,    98,    99,
     100,     0,     0,     0,     0,     0,     0,     0,   101,   102,
       0,   103,   104,   105,   106,   107,   108,   109,   110,   675,
     112,   676,   677,     0,   115,   116,   117,   118,   119,   120,
     678,   679,   121,   122,   680,   681,   125,     0,   126,   127,
     128,   129,   682,     0,   683,     0,   132,   133,   134,   135,
     136,   137,   138,   139,   140,     0,   141,   142,   143,   144,
     145,   146,     0,   147,   148,   149,   150,   684,   685,   686,
     687,   688,   689,   690,   152,   153,   154,   155,   156,   157,
     158,   691,   692,   161,   693,   162,     0,   163,   164,   165,
     166,   167,   168,     0,   169,   170,   171,   172,   173,     0,
       0,   174,   175,   694,   177,   178,     0,   179,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,   188,   695,
     190,   191,   192,   193,   696,   697,   195,     0,   196,   197,
     698,   199,     0,   200,     0,   201,   202,     0,   203,   204,
     205,   206,   207,   208,     0,   209,     0,   210,   211,     0,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,     0,   223,   224,   225,   226,   227,   228,     0,   229,
     230,   231,   232,   233,   234,   235,   699,   700,     0,   701,
       0,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,     0,     0,   249,   250,   251,   252,     0,   253,   254,
     255,   702,   703,   256,   257,   258,   259,   260,     0,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   704,   280,   705,
     282,   283,   284,   285,   706,   286,   287,   288,   289,   707,
     708,   291,   709,   293,   294,   295,     0,   296,   297,     0,
       0,   710,   299,   300,     0,     0,   301,   302,   303,   304,
     305,   711,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,     0,   317,   318,   712,   320,   321,   322,   323,
     324,   325,     0,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   713,   336,   337,   338,   339,     0,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
       0,   352,   353,   354,   355,   356,   357,   714,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,     0,
     370,   371,   372,   373,   374,   715,   375,   376,   377,   378,
     379,   380,   381,   382,   716,   384,     0,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     717,     0,   399,   400,     0,   401,   402,   403,   404,   405,
     406,   407,     0,   718,   719,     0,     0,   410,   411,   720,
     413,   721,   722,   415,   416,   417,   418,   419,   420,   421,
       0,     0,   422,   423,   424,   425,   426,   723,     0,   427,
     428,   429,   430,   431,   432,   724,  1661,   434,   435,   436,
     437,   438,   439,     0,     0,   440,     0,     0,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   725,
       0,     0,     0,     0,     0,     0,   726,   727,     0,     0,
       0,     0,     0,     0,     0,   729,     0,     0,     0,     0,
     730,    89,   669,   531,   670,   671,   672,   673,   674,     0,
       0,     0,     0,     0,     0,     0,     0,    90,    91,    92,
      93,    94,    95,    96,    97,     0,    98,    99,   100,     0,
       0,     0,     0,     0,     0,     0,   101,   102,     0,   103,
     104,   105,   106,   107,   108,   109,   110,   675,   112,   676,
     677,     0,   115,   116,   117,   118,   119,   120,   678,   679,
     121,   122,   680,   681,   125,     0,   126,   127,   128,   129,
     682,     0,   683,     0,   132,   133,   134,   135,   136,   137,
     138,   139,   140,     0,   141,   142,   143,   144,   145,   146,
       0,   147,   148,   149,   150,   684,   685,   686,   687,   688,
     689,   690,   152,   153,   154,   155,   156,   157,   158,   691,
     692,   161,   693,   162,     0,   163,   164,   165,   166,   167,
     168,     0,   169,   170,   171,   172,   173,     0,     0,   174,
     175,   694,   177,   178,     0,   179,   180,   181,     0,   182,
     183,   184,     0,   185,   186,   187,   188,   695,   190,   191,
     192,   193,   696,   697,   195,     0,   196,   197,   698,   199,
       0,   200,     0,   201,   202,  1463,   203,   204,   205,   206,
     207,   208,     0,   209,     0,   210,   211,     0,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,     0,
     223,   224,   225,   226,   227,   228,     0,   229,   230,   231,
     232,   233,   234,   235,   699,   700,     0,   701,     0,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,     0,
       0,   249,   250,   251,   252,     0,   253,   254,   255,   702,
     703,   256,   257,   258,   259,   260,     0,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   704,   280,   705,   282,   283,
     284,   285,   706,   286,   287,   288,   289,   707,   708,   291,
     709,   293,   294,   295,     0,   296,   297,     0,     0,   710,
     299,   300,     0,     0,   301,   302,   303,   304,   305,   711,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
       0,   317,   318,   712,   320,   321,   322,   323,   324,   325,
       0,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     713,   336,   337,   338,   339,     0,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,     0,   352,
     353,   354,   355,   356,   357,   714,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,     0,   370,   371,
     372,   373,   374,   715,   375,   376,   377,   378,   379,   380,
     381,   382,   716,   384,     0,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   717,     0,
     399,   400,     0,   401,   402,   403,   404,   405,   406,   407,
       0,   718,   719,     0,     0,   410,   411,   720,   413,   721,
     722,   415,   416,   417,   418,   419,   420,   421,     0,     0,
     422,   423,   424,   425,   426,   723,     0,   427,   428,   429,
     430,   431,   432,   724,     0,   434,   435,   436,   437,   438,
     439,     0,     0,   440,     0,     0,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   725,     0,     0,
       0,     0,     0,     0,   726,   727,     0,     0,     0,     0,
       0,     0,     0,   729,     0,     0,     0,     0,   730,    89,
     669,   531,   670,   671,   672,   673,   674,     0,     0,     0,
       0,     0,     0,     0,     0,    90,    91,    92,    93,    94,
      95,    96,    97,     0,    98,    99,   100,     0,     0,     0,
       0,     0,     0,     0,   101,   102,     0,   103,   104,   105,
     106,   107,   108,   109,   110,   675,   112,   676,   677,     0,
     115,   116,   117,   118,   119,   120,   678,   679,   121,   122,
     680,   681,   125,     0,   126,   127,   128,   129,   682,     0,
     683,     0,   132,   133,   134,   135,   136,   137,   138,   139,
     140,     0,   141,   142,   143,   144,   145,   146,     0,   147,
     148,   149,   150,   684,   685,   686,   687,   688,   689,   690,
     152,   153,   154,   155,   156,   157,   158,   691,   692,   161,
     693,   162,     0,   163,   164,   165,   166,   167,   168,     0,
     169,   170,   171,   172,   173,     0,     0,   174,   175,   694,
     177,   178,     0,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,   188,   695,   190,   191,   192,   193,
     696,   697,   195,     0,   196,   197,   698,   199,     0,   200,
       0,   201,   202,     0,   203,   204,   205,   206,   207,   208,
       0,   209,     0,   210,   211,     0,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,     0,   223,   224,
     225,   226,   227,   228,     0,   229,   230,   231,   232,   233,
     234,   235,   699,   700,     0,   701,     0,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,     0,     0,   249,
     250,   251,   252,     0,   253,   254,   255,   702,   703,   256,
     257,   258,   259,   260,     0,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   704,   280,   705,   282,   283,   284,   285,
     706,   286,   287,   288,   289,   707,   708,   291,   709,   293,
     294,   295,     0,   296,   297,     0,     0,   710,   299,   300,
       0,     0,   301,   302,   303,   304,   305,   711,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,     0,   317,
     318,   712,   320,   321,   322,   323,   324,   325,     0,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   713,   336,
     337,   338,   339,     0,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,     0,   352,   353,   354,
     355,   356,   357,   714,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,     0,   370,   371,   372,   373,
     374,   715,   375,   376,   377,   378,   379,   380,   381,   382,
     716,   384,     0,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   717,     0,   399,   400,
       0,   401,   402,   403,   404,   405,   406,   407,     0,   718,
     719,     0,     0,   410,   411,   720,   413,   721,   722,   415,
     416,   417,   418,   419,   420,   421,     0,     0,   422,   423,
     424,   425,   426,   723,     0,   427,   428,   429,   430,   431,
     432,   724,     0,   434,   435,   436,   437,   438,   439,     0,
       0,   440,     0,     0,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   725,     0,     0,     0,     0,
       0,     0,   726,   727,     0,     0,     0,     0,     0,     0,
       0,   729,     0,     0,     0,     0,   730,    89,   669,   531,
     670,   671,   672,   673,   674,     0,     0,     0,     0,     0,
       0,     0,     0,    90,    91,    92,    93,    94,    95,    96,
      97,     0,    98,    99,   100,     0,     0,     0,     0,     0,
       0,     0,   101,   102,     0,   103,   104,   105,   106,   107,
     108,   109,   110,   675,   112,   676,   677,     0,   115,   116,
     117,   118,   119,   120,   678,   679,   121,   122,   680,   681,
     125,     0,   126,   127,   128,   129,   682,     0,   683,     0,
     132,   133,   134,   135,   136,   137,   138,   139,   140,     0,
     141,   142,   143,   144,   145,   146,     0,   147,   148,   149,
     150,   684,   685,   686,   687,   688,   689,   690,   152,   153,
     154,   155,   156,   157,   158,   691,   692,   161,   693,   162,
       0,   163,   164,   165,   166,   167,   168,     0,   169,   170,
     171,   172,   173,     0,     0,   174,   175,   694,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,   188,   695,   190,   191,   192,   193,   696,   697,
     195,     0,   196,   197,   698,   199,     0,   200,     0,   201,
     202,     0,   203,   204,   205,   206,   207,   208,     0,   209,
       0,   210,   211,     0,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,     0,   223,   224,   225,   226,
     227,   228,     0,   229,   230,   231,   232,   233,   234,   235,
     699,   700,     0,   701,     0,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,     0,     0,   249,   250,   251,
     252,     0,   253,   254,   255,   702,   703,   256,   257,   258,
     259,   260,     0,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   704,   280,   705,   282,   283,   284,   285,   706,   286,
     287,   288,   289,   707,   708,   291,   709,   293,   294,   295,
       0,   296,   297,     0,     0,   710,   299,   300,     0,     0,
     301,   302,   303,   304,   305,   711,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,     0,   317,   318,   712,
     320,   321,   322,   323,   324,   325,     0,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   713,   336,   337,   338,
     339,     0,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,     0,   352,   353,   354,   355,   356,
     357,   714,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,     0,   370,   371,   372,   373,   374,   715,
     375,   376,   377,   378,   379,   380,   381,   382,   716,   384,
       0,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   717,     0,   399,   400,     0,   401,
     402,   403,   404,   405,   406,   407,     0,   718,   719,     0,
       0,   410,   411,   720,   413,   721,   722,   415,   416,   417,
     418,   419,   420,   421,     0,     0,   422,   423,   424,   425,
     426,   723,     0,   427,   428,   429,   430,   431,   432,   724,
       0,   434,   435,   436,   437,   438,   439,     0,     0,   440,
       0,     0,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   725,     0,     0,     0,     0,     0,     0,
    1207,  1208,     0,     0,     0,     0,     0,     0,     0,   729,
       0,     0,     0,     0,   730,    89,  1586,   531,   670,   671,
     672,   673,   674,     0,     0,     0,     0,     0,     0,     0,
       0,    90,    91,    92,    93,    94,    95,    96,    97,     0,
      98,    99,   100,     0,     0,     0,     0,     0,     0,     0,
     101,   102,     0,   103,   104,   105,   106,   107,   108,   109,
     110,   675,   112,   676,   677,     0,   115,   116,   117,   118,
     119,   120,   678,   679,   121,   122,   680,   681,   125,     0,
     126,   127,   128,   129,   682,     0,   683,     0,   132,   133,
     134,   135,   136,   137,   138,   139,   140,     0,   141,   142,
     143,   144,   145,   146,     0,   147,   148,   149,   150,   684,
     685,   686,   687,   688,   689,   690,   152,   153,   154,   155,
     156,   157,   158,   691,   692,   161,   693,   162,     0,   163,
     164,   165,   166,   167,   168,     0,   169,   170,   171,   172,
     173,     0,     0,   174,   175,   694,   177,   178,     0,   179,
     180,   181,     0,   182,   183,   184,     0,   185,   186,   187,
     188,   695,   190,   191,   192,   193,   696,   697,   195,     0,
     196,   197,   698,   199,     0,   200,     0,   201,   202,     0,
     203,   204,   205,   206,   207,   208,     0,   209,     0,   210,
     211,     0,   212,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,     0,   223,   224,   225,   226,   227,   228,
       0,   229,   230,   231,   232,   233,   234,   235,   699,   700,
       0,   701,     0,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,     0,     0,   249,   250,   251,   252,     0,
     253,   254,   255,   702,   703,   256,   257,   258,   259,   260,
       0,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   704,
     280,   705,   282,   283,   284,   285,   706,   286,   287,   288,
     289,   707,   708,   291,   709,   293,   294,   295,     0,   296,
     297,     0,     0,   710,   299,   300,     0,     0,   301,   302,
     303,   304,   305,   711,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,     0,   317,   318,   712,   320,   321,
     322,   323,   324,   325,     0,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   713,   336,   337,   338,   339,     0,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,     0,   352,   353,   354,   355,   356,   357,   714,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,     0,   370,   371,   372,   373,   374,   715,   375,   376,
     377,   378,   379,   380,   381,   382,   716,   384,     0,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   717,     0,   399,   400,     0,   401,   402,   403,
     404,   405,   406,   407,     0,   718,   719,     0,     0,   410,
     411,   720,   413,   721,   722,   415,   416,   417,   418,   419,
     420,   421,     0,     0,   422,   423,   424,   425,   426,   723,
       0,   427,   428,   429,   430,   431,   432,   724,     0,   434,
     435,   436,   437,   438,   439,     0,     0,   440,     0,     0,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   725,     0,     0,     0,     0,     0,     0,   726,   727,
       0,     0,     0,     0,     0,     0,     0,   729,     0,     0,
       0,     0,   730,    89,   669,   531,   670,   671,   672,   673,
     674,     0,     0,     0,     0,     0,     0,     0,     0,    90,
      91,    92,    93,    94,    95,    96,    97,     0,    98,    99,
     100,     0,     0,     0,     0,     0,     0,     0,   101,   102,
       0,   103,   104,   105,   106,   107,   108,   109,   110,   675,
     112,   676,   677,     0,   115,   116,   117,   118,   119,   120,
     678,   679,   121,   122,   680,   681,   125,     0,   126,   127,
     128,   129,   682,     0,   683,     0,   132,   133,   134,   135,
     136,   137,   138,   139,   140,     0,   141,   142,   143,   144,
     145,   146,     0,   147,   148,   149,   150,   684,   685,   686,
     687,   688,   689,   690,   152,   153,   154,   155,   156,   157,
     158,   691,   692,   161,   693,   162,     0,   163,   164,   165,
     166,   167,   168,     0,   169,   170,   171,   172,   173,     0,
       0,   174,   175,   694,   177,   178,     0,   179,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,   188,   695,
     190,   191,   192,   193,   696,   697,   195,     0,   196,   197,
     698,   199,     0,   200,     0,   201,   202,     0,   203,   204,
     205,   206,   207,   208,     0,   209,     0,   210,   211,     0,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,     0,   223,   224,   225,   226,   227,   228,     0,   229,
     230,   231,   232,   233,   234,   235,   699,   700,     0,   701,
       0,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,     0,     0,   249,   250,   251,   252,     0,   253,   254,
     255,   702,   703,   256,   257,   258,   259,   260,     0,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   704,   280,   705,
     282,   283,   284,   285,   706,   286,   287,   288,   289,   707,
     708,   291,   709,   293,   294,   295,     0,   296,   297,     0,
       0,   710,   299,   300,     0,     0,   301,   302,   303,   304,
     305,   711,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,     0,   317,   318,   712,   320,   321,   322,   323,
     324,   325,     0,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   713,   336,   337,   338,   339,     0,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
       0,   352,   353,   354,   355,   356,   357,   714,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,     0,
     370,   371,   372,   373,   374,   715,   375,   376,   377,   378,
     379,   380,   381,   382,   716,   384,     0,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     717,     0,   399,   400,     0,   401,   402,   403,   404,   405,
     406,   407,     0,   718,   719,     0,     0,   410,   411,   720,
     413,   721,   722,   415,   416,   417,   418,   419,   420,   421,
       0,     0,   422,   423,   424,   425,   426,   723,     0,   427,
     428,   429,   430,   431,   432,   724,     0,   434,   435,   436,
     437,   438,   439,     0,     0,   440,     0,     0,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   725,
       0,     0,     0,     0,     0,     0,   726,   727,     0,     0,
       0,     0,     0,     0,     0,  2419,     0,     0,     0,     0,
     730,    89,   669,   531,   670,   671,   672,   673,   674,     0,
       0,     0,     0,     0,     0,     0,     0,    90,    91,    92,
      93,    94,    95,    96,    97,     0,    98,    99,   100,     0,
       0,     0,     0,     0,     0,     0,   101,   102,     0,   103,
     104,   105,   106,   107,   108,   109,  2618,   675,   112,   676,
     677,     0,   115,   116,   117,   118,   119,   120,   678,   679,
     121,   122,   680,   681,   125,     0,   126,   127,   128,   129,
     682,     0,   683,     0,   132,   133,   134,   135,   136,   137,
     138,   139,   140,     0,   141,   142,   143,   144,   145,   146,
       0,   147,   148,   149,  2619,   684,   685,   686,   687,   688,
     689,   690,   152,   153,   154,   155,   156,   157,   158,   691,
     692,   161,   693,   162,     0,   163,   164,   165,   166,   167,
     168,     0,   169,   170,   171,   172,   173,     0,     0,   174,
     175,   694,   177,   178,     0,   179,   180,   181,     0,   182,
     183,   184,     0,   185,   186,   187,   188,   695,   190,   191,
     192,   193,   696,   697,   195,     0,   196,   197,   698,   199,
       0,   200,     0,   201,   202,     0,   203,   204,   205,   206,
     207,   208,     0,   209,     0,   210,   211,     0,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,     0,
     223,   224,   225,   226,   227,   228,     0,   229,   230,   231,
     232,   233,   234,   235,   699,   700,     0,   701,     0,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,     0,
       0,   249,   250,   251,   252,     0,   253,   254,   255,   702,
     703,   256,   257,   258,   259,   260,     0,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   704,   280,   705,   282,   283,
     284,   285,   706,   286,   287,   288,   289,   707,   708,   291,
     709,   293,   294,   295,     0,   296,   297,     0,     0,   710,
     299,   300,     0,     0,   301,   302,   303,   304,   305,   711,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
       0,   317,   318,   712,   320,   321,   322,   323,   324,   325,
       0,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     713,   336,   337,   338,   339,     0,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,     0,   352,
     353,   354,   355,   356,   357,   714,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,     0,   370,   371,
     372,   373,   374,   715,   375,   376,   377,   378,   379,   380,
     381,   382,   716,   384,     0,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   717,     0,
     399,   400,     0,   401,   402,   403,   404,   405,   406,   407,
       0,   718,   719,     0,     0,   410,   411,   720,   413,   721,
     722,   415,   416,   417,   418,  2620,   420,   421,     0,     0,
     422,   423,   424,   425,   426,   723,     0,   427,   428,   429,
     430,   431,   432,   724,     0,   434,   435,   436,   437,   438,
     439,     0,     0,   440,     0,     0,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   725,     0,     0,
       0,     0,     0,     0,   726,   727,     0,     0,     0,     0,
       0,     0,     0,   729,     0,     0,     0,     0,   730,    89,
     669,   531,   670,   671,   672,   673,   674,     0,     0,     0,
       0,     0,     0,     0,     0,    90,    91,    92,    93,    94,
      95,    96,    97,     0,    98,    99,   100,     0,     0,     0,
       0,     0,     0,     0,   101,   102,     0,   103,   104,   105,
     106,   107,   108,   109,   110,   675,   112,   676,   677,     0,
     115,   116,   117,   118,   119,   120,   678,   679,   121,   122,
     680,   681,   125,     0,   126,   127,   128,   129,   682,     0,
     683,     0,   132,   133,   134,   135,   136,   137,   138,   139,
     140,     0,   141,   142,   143,   144,   145,   146,     0,   147,
     148,   149,  2619,   684,   685,   686,   687,   688,   689,   690,
     152,   153,   154,   155,   156,   157,   158,   691,   692,   161,
     693,   162,     0,   163,   164,   165,   166,   167,   168,     0,
     169,   170,   171,   172,   173,     0,     0,   174,   175,   694,
     177,   178,     0,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,   188,   695,   190,   191,   192,   193,
     696,   697,   195,     0,   196,   197,   698,   199,     0,   200,
       0,   201,   202,     0,   203,   204,   205,   206,   207,   208,
       0,   209,     0,   210,   211,     0,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,     0,   223,   224,
     225,   226,   227,   228,     0,   229,   230,   231,   232,   233,
     234,   235,   699,   700,     0,   701,     0,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,     0,     0,   249,
     250,   251,   252,     0,   253,   254,   255,   702,   703,   256,
     257,   258,   259,   260,     0,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   704,   280,   705,   282,   283,   284,   285,
     706,   286,   287,   288,   289,   707,   708,   291,   709,   293,
     294,   295,     0,   296,   297,     0,     0,   710,   299,   300,
       0,     0,   301,   302,   303,   304,   305,   711,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,     0,   317,
     318,   712,   320,   321,   322,   323,   324,   325,     0,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   713,   336,
     337,   338,   339,     0,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,     0,   352,   353,   354,
     355,   356,   357,   714,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,     0,   370,   371,   372,   373,
     374,   715,   375,   376,   377,   378,   379,   380,   381,   382,
     716,   384,     0,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   717,     0,   399,   400,
       0,   401,   402,   403,   404,   405,   406,   407,     0,   718,
     719,     0,     0,   410,   411,   720,   413,   721,   722,   415,
     416,   417,   418,  2620,   420,   421,     0,     0,   422,   423,
     424,   425,   426,   723,     0,   427,   428,   429,   430,   431,
     432,   724,     0,   434,   435,   436,   437,   438,   439,     0,
       0,   440,     0,     0,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   725,     0,     0,     0,     0,
       0,     0,   726,   727,     0,     0,     0,     0,     0,     0,
       0,   729,     0,     0,     0,     0,   730,    89,   669,   531,
     670,   671,   672,   673,   674,     0,     0,     0,     0,     0,
       0,     0,     0,    90,    91,    92,    93,    94,    95,    96,
      97,     0,    98,    99,   100,     0,     0,     0,     0,     0,
       0,     0,   101,   102,     0,   103,   104,   105,   106,   107,
     108,   109,   110,   675,   112,   676,   677,     0,   115,   116,
     117,   118,   119,   120,   678,   679,   121,   122,   680,   681,
     125,     0,   126,   127,   128,   129,   682,     0,   683,     0,
     132,   133,   134,   135,   136,   137,   138,   139,   140,     0,
     141,   142,   143,   144,   145,   146,     0,   147,   148,   149,
     150,   684,   685,   686,   687,   688,   689,   690,   152,   153,
     154,   155,   156,   157,   158,   691,   692,   161,     0,   162,
       0,   163,   164,   165,   166,   167,   168,     0,   169,   170,
     171,   172,   173,     0,     0,   174,   175,   694,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,   188,   695,   190,   191,   192,   193,   696,   697,
     195,     0,   196,   197,   698,   199,     0,   200,     0,   201,
     202,     0,   203,   204,   205,   206,   207,   208,     0,   209,
       0,   210,   211,     0,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,     0,   223,   224,   225,   226,
     227,   228,     0,   229,   230,   231,   232,   233,   234,   235,
     699,   700,     0,   701,     0,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,     0,     0,   249,   250,   251,
     252,     0,   253,   254,   255,   702,   703,   256,   257,   258,
     259,   260,     0,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   704,   280,   705,   282,   283,   284,   285,     0,   286,
     287,   288,   289,   707,   708,   291,   709,   293,   294,   295,
       0,   296,   297,     0,     0,   710,   299,   300,     0,     0,
     301,   302,   303,   304,   305,   711,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,     0,   317,   318,   712,
     320,   321,   322,   323,   324,   325,     0,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   713,   336,   337,   338,
     339,     0,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,     0,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,     0,   370,   371,   372,   373,   374,   715,
     375,   376,   377,   378,   379,   380,   381,   382,   716,   384,
       0,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   717,     0,   399,   400,     0,   401,
     402,   403,   404,   405,   406,   407,     0,   718,   719,     0,
       0,   410,   411,   720,   413,   721,   722,   415,   416,   417,
     418,   419,   420,   421,     0,     0,   422,   423,   424,   425,
     426,   723,     0,   427,   428,   429,   430,   431,   432,   724,
       0,   434,   435,   436,   437,   438,   439,     0,     0,   440,
       0,     0,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,     0,     0,     0,     0,     0,     0,     0,
    1444,  1445,     0,     0,    89,   669,   531,   670,   671,  1446,
     673,   674,     0,     0,   730,     0,     0,     0,     0,     0,
      90,    91,    92,    93,    94,    95,    96,    97,     0,    98,
      99,   100,     0,     0,     0,     0,     0,     0,     0,   101,
     102,     0,   103,   104,   105,   106,   107,   108,   109,   110,
     675,   112,   676,   677,     0,   115,   116,   117,   118,   119,
     120,   678,   679,   121,   122,   680,   681,   125,     0,   126,
     127,   128,   129,   682,     0,   683,     0,   132,   133,   134,
     135,   136,   137,   138,   139,   140,     0,   141,   142,   143,
     144,   145,   146,     0,   147,   148,   149,   150,   684,   685,
     686,   687,   688,   689,   690,   152,   153,   154,   155,   156,
     157,   158,   691,   692,   161,     0,   162,     0,   163,   164,
     165,   166,   167,   168,     0,   169,   170,   171,   172,   173,
       0,     0,   174,   175,   694,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,     0,   185,   186,   187,   188,
     695,   190,   191,   192,   193,   696,   697,   195,     0,   196,
     197,   698,   199,     0,   200,     0,   201,   202,     0,   203,
     204,   205,   206,   207,   208,     0,   209,     0,   210,   211,
       0,   212,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   222,     0,   223,   224,   225,   226,   227,   228,     0,
     229,   230,   231,   232,   233,   234,   235,   699,   700,     0,
     701,     0,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,     0,   249,   250,   251,   252,     0,   253,
     254,   255,   702,   703,   256,   257,   258,   259,   260,     0,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   704,   280,
     705,   282,   283,   284,   285,     0,   286,   287,   288,   289,
     707,   708,   291,   709,   293,   294,   295,     0,   296,   297,
       0,     0,   298,   299,   300,     0,     0,   301,   302,   303,
     304,   305,   711,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,     0,   317,   318,   712,   320,   321,   322,
     323,   324,   325,     0,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   713,   336,   337,   338,   339,     0,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,     0,   352,   353,   354,   355,   356,   357,  1575,  1576,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
       0,   370,   371,   372,   373,   374,   715,   375,   376,   377,
     378,   379,   380,   381,   382,   716,   384,     0,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   717,     0,   399,   400,     0,   401,   402,   403,   404,
     405,   406,   407,     0,   718,   719,     0,     0,   410,   411,
     720,   413,   721,   722,   415,   416,   417,   418,   419,   420,
     421,     0,     0,   422,   423,   424,   425,   426,   723,     0,
     427,   428,   429,   430,   431,   432,   724,     0,   434,   435,
     436,   437,   438,   439,     0,     0,   440,     0,     0,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
       0,     0,     0,     0,     0,     0,     0,  1577,  1578,     0,
       0,     0,     0,     0,     0,     0,  1446,     0,     0,     0,
       0,   730,    89,   669,   531,   670,   671,   672,   673,   674,
       0,     0,     0,     0,     0,     0,     0,     0,    90,    91,
      92,    93,    94,    95,    96,    97,     0,    98,    99,   100,
       0,     0,     0,     0,     0,     0,     0,   101,   102,     0,
     103,   104,   105,   106,   107,   108,   109,   110,   675,   112,
     676,   677,     0,   115,   116,   117,   118,   119,   120,   678,
     679,   121,   122,   680,   681,   125,     0,   126,   127,   128,
     129,   682,     0,   683,     0,   132,   133,   134,   135,   136,
     137,   138,   139,   140,     0,   141,   142,   143,   144,   145,
     146,     0,   147,   148,   149,   150,   684,   685,   686,   687,
     688,   689,   690,   152,   153,   154,   155,   156,   157,   158,
     691,   692,   161,     0,   162,     0,   163,   164,   165,   166,
     167,   168,     0,   169,   170,   171,   172,   173,     0,     0,
     174,   175,   694,   177,   178,     0,   179,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,   188,   695,   190,
     191,   192,   193,   696,   697,   195,     0,   196,   197,   698,
     199,     0,   200,     0,   201,   202,     0,   203,   204,   205,
     206,   207,   208,     0,   209,     0,   210,   211,     0,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
       0,   223,   224,   225,   226,   227,   228,     0,   229,   230,
     231,   232,   233,   234,   235,   699,   700,     0,   701,     0,
     239,     0,   241,   242,   243,   244,   245,   246,   247,   248,
       0,     0,   249,   250,   251,   252,     0,   253,   254,   255,
     702,   703,   256,   257,   258,   259,   260,     0,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   704,   280,   705,   282,
     283,   284,   285,     0,   286,   287,   288,   289,   707,   708,
     291,   709,   293,   294,   295,     0,   296,   297,     0,     0,
     710,   299,   300,     0,     0,   301,   302,   303,   304,   305,
     711,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,     0,   317,   318,   712,   320,   321,   322,   323,   324,
     325,     0,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   713,   336,   337,   338,   339,     0,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,     0,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,     0,   370,
     371,   372,   373,   374,   715,   375,   376,   377,   378,   379,
     380,   381,   382,   716,   384,     0,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   717,
       0,   399,   400,     0,   401,   402,   403,   404,   405,   406,
     407,     0,   718,   719,     0,     0,   410,   411,   720,   413,
     721,   722,   415,   416,   417,   418,   419,   420,   421,     0,
       0,   422,   423,   424,   425,   426,   723,     0,   427,   428,
     429,   430,   431,   432,   724,     0,   434,   435,   436,   437,
     438,   439,     0,     0,   440,     0,     0,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,     0,     0,
       0,     0,     0,     0,     0,  1444,  1445,     0,     0,     0,
       0,     0,     0,     0,  1446,     0,     0,     0,     0,   730,
      89,   669,   531,   670,   671,   672,   673,   674,     0,     0,
       0,     0,     0,     0,     0,     0,    90,    91,    92,    93,
      94,    95,    96,    97,     0,    98,    99,   100,     0,     0,
       0,     0,     0,     0,     0,   101,   102,     0,   103,   104,
     105,   106,   107,   108,   109, -1536,   675,   112,   676,   677,
       0,   115,   116,   117,   118,   119,   120,   678,   679,   121,
     122,   680,   681,   125,     0,   126,   127,   128,   129,   682,
       0,   683,     0,   132,   133,   134,   135,   136,   137,   138,
     139,   140,     0,   141,   142,   143,   144,   145,   146,     0,
     147,   148,   149,  2619,   684,   685,   686,   687,   688,   689,
     690,   152,   153,   154,   155,   156,   157,   158,   691,   692,
     161,   693,   162,     0,   163,   164,   165,   166,   167,   168,
       0,   169,   170,   171,   172,   173,     0,     0,   174,   175,
     694,   177,   178,     0,   179,   180,   181,     0,   182,   183,
     184,     0,   185,   186,   187,   188,   695,   190,   191,   192,
     193,   696,   697,   195,     0,   196,   197,   698,   199,     0,
     200,     0,   201,   202,     0,   203,   204,   205,   206, -1536,
     208,     0,   209,     0,   210,   211,     0,   212,   213,   214,
     215,   216,   217, -1536,   219,   220,   221,   222,     0,   223,
     224,   225,   226,   227,   228,     0,   229,   230,   231,   232,
     233,   234,   235,   699,   700,     0,   701,     0,   239,     0,
       0,   242,   243,   244,   245,   246,   247,   248,     0,     0,
     249,   250,   251, -1536,     0,   253,   254,   255,   702,   703,
     256,   257,   258,   259,   260,     0,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   704,   280,   705,   282,   283,   284,
     285,     0,   286,   287,     0,   289,   707,   708,   291,   709,
     293,   294,   295,     0,   296,   297,     0,     0,   710,   299,
     300,     0,     0,   301,   302,   303,   304,   305,   711,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,     0,
     317,   318,   712,   320,   321,   322,   323,   324,   325,     0,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   713,
     336,   337,   338,   339,     0,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,     0,   352,   353,
     354,   355,   356,   357,   714,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,     0,   370,   371,   372,
     373,   374,   715,   375,   376,   377,   378,   379, -1536,   381,
     382,   716,   384,     0,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   717,     0,   399,
     400,     0,   401,   402,   403,   404,   405,   406,   407,     0,
     718,   719,     0,     0,   410,   411,   720,   413,   721,   722,
     415,   416,   417,   418,  2620,   420,   421,     0,     0,   422,
     423,   424,   425,   426,   723,     0,   427,   428,   429,   430,
     431,   432,   724,     0,   434,   435,   436,   437,   438,   439,
       0,     0,   440,     0,     0,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461, -1536,     0,     0,     0,
       0,     0,     0,   726,   727,     0,     0,     0,     0,     0,
       0,     0,   729,     0,     0,     0,     0,   730,    89,   669,
     531,   670,   671,   672,   673,   674,     0,     0,     0,     0,
       0,     0,     0,     0,    90,    91,    92,    93,    94,    95,
      96,    97,     0,    98,    99,   100,     0,     0,     0,     0,
       0,     0,     0,   101,   102,     0,   103,   104,   105,   106,
     107,   108,   109,     0,   675,   112,   676,   677,     0,   115,
     116,   117,   118,   119,   120,   678,   679,   121,   122,   680,
     681,   125,     0,   126,   127,   128,   129,   682,     0,   683,
       0,   132,   133,   134,   135,   136,   137,   138,   139,   140,
       0,   141,   142,   143,   144,   145,   146,     0,   147,   148,
     149,   150,   684,   685,   686,   687,   688,   689,   690,   152,
     153,   154,   155,   156,   157,   158,   691,   692,   161,   693,
     162,     0,   163,   164,   165,   166,   167,   168,     0,   169,
     170,   171,   172,   173,     0,     0,   174,   175,   694,   177,
     178,     0,   179,   180,   181,     0,   182,     0,   184,     0,
     185,   186,   187,   188,   695,   190,   191,   192,   193,   696,
     697,   195,     0,   196,   197,   698,   199,     0,   200,     0,
     201,   202,     0,   203,   204,   205,   206,     0,   208,     0,
     209,     0,   210,   211,     0,   212,   213,   214,   215,   216,
     217,     0,   219,   220,   221,   222,     0,   223,   224,   225,
     226,   227,   228,     0,   229,   230,   231,   232,   233,   234,
     235,   699,   700,     0,   701,     0,   239,     0,     0,   242,
     243,   244,   245,   246,   247,   248,     0,     0,   249,   250,
     251,     0,     0,   253,   254,   255,   702,   703,   256,   257,
     258,   259,   260,     0,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   704,   280,   705,   282,   283,   284,   285,     0,
     286,   287,     0,   289,   707,   708,   291,   709,   293,   294,
     295,     0,   296,   297,     0,     0,   710,   299,   300,     0,
       0,   301,   302,   303,   304,   305,   711,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,     0,   317,   318,
     712,   320,   321,   322,   323,   324,   325,     0,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   713,   336,   337,
     338,   339,     0,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,     0,   352,   353,   354,   355,
     356,   357,   714,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,     0,   370,   371,   372,   373,   374,
     715,   375,   376,   377,   378,   379,     0,   381,   382,   716,
     384,     0,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   717,     0,   399,   400,     0,
     401,   402,   403,   404,   405,   406,   407,     0,   718,   719,
       0,     0,   410,   411,   720,   413,   721,   722,   415,   416,
     417,   418,   419,   420,   421,     0,     0,   422,   423,   424,
     425,   426,   723,     0,   427,   428,   429,   430,   431,   432,
     724,     0,   434,   435,   436,   437,   438,   439,     0,     0,
     440,     0,     0,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,     0,     0,     0,     0,     0,     0,
     486,   726,   727,     0,     0,     0,     0,     0,     0,     0,
     729,     0,     0,     0,     0,   730,    90,    91,    92,    93,
      94,    95,    96,    97,     0,    98,    99,   100,     0,     0,
       0,     0,     0,  2088,     0,   101,   102,     0,   103,   104,
     105,     0,   107,   108,   109,   110,   111,     0,   113,   114,
       0,   115,   116,   117,   118,   119,   120,     0,     0,   121,
     122,   123,   124,   125,     0,   126,   127,   128,   129,   130,
       0,     0,     0,   132,   133,   134,   135,   136,     0,   138,
     139,   140,     0,   141,   142,   143,   144,   145,   146,     0,
    -579,   148,   149,   150,     0,     0,     0,     0,     0,     0,
       0,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     161,     0,   162,     0,   163,   164,   165,   166,   167,   168,
       0,   169,   170,   171,   172,   173,     0,     0,   174,   175,
     176,   177,   178,     0,   179,   180,   181,     0,   182,   183,
     184,     0,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,     0,   195,     0,   196,   197,   198,   199,     0,
     200,     0,   201,     0,     0,  -579,   204,   205,   206,     0,
     208,     0,   209,     0,   210,   211,     0,   212,   213,   214,
     215,   216,   217,     0,   219,   220,   221,   222,     0,   223,
     224,   225,   226,   227,   228,     0,   229,  -579,   231,   232,
     233,   234,   235,   236,   237,     0,   238,     0,   239,     0,
       0,   242,  -579,   244,   245,   246,   247,   248,     0,     0,
     249,  -579,   251,     0,     0,   253,   254,   255,     0,     0,
     256,   257,   258,   259,   260,     0,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,  -579,   281,   282,   283,   284,
     285,     0,   286,   287,     0,   289,     0,   290,   291,   292,
     293,   294,   295,     0,   296,   297,     0,     0,   298,   299,
     300,     0,     0,   301,   302,     0,   304,     0,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,     0,
     317,   318,   319,   320,   321,   322,   323,   324,   325,     0,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,     0,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,     0,   352,   353,
    -579,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,     0,   370,   371,   372,
     373,   374,     0,   375,   376,   377,   378,   379,     0,   381,
     382,   383,   384,     0,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,     0,   399,
     400,     0,   401,  -579,   403,   404,   405,   406,   407,     0,
     408,   409,     0,     0,   410,   411,   412,   413,   414,     0,
     415,   416,   417,   418,   419,   420,   421,     0,     0,   422,
     423,   424,   425,   426,     0,     0,   427,   428,   429,   430,
     431,   432,   433,     0,   434,     0,   436,   437,   438,   439,
       0,     0,   440,     0,     0,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,     0,     0,    89,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   788,    90,    91,    92,    93,    94,    95,
      96,    97,     0,    98,    99,   100,     0,     0,     0,     0,
       0,     0,     0,   101,   102,     0,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,     0,   115,
     116,   117,   118,   119,   120,     0,   679,   121,   122,   123,
     124,   125,     0,   126,   127,   128,   129,   682,     0,   683,
       0,   132,   133,   134,   135,   136,   137,   138,   139,   140,
       0,   141,   142,   143,   144,   145,   146,     0,   147,   148,
     149,   150,   684,   685,   686,   687,   688,   689,   690,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   161,     0,
     162,     0,   163,   164,   165,   166,   167,   168,     0,   169,
     170,   171,   172,   173,     0,     0,   174,   175,   176,   177,
     178,     0,   179,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   696,
       0,   195,     0,   196,   197,   198,   199,     0,   200,     0,
     201,   202,     0,   203,   204,   205,   206,   207,   208,     0,
     209,     0,   210,   211,     0,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,   222,     0,   223,   224,   225,
     226,   227,   228,     0,   229,   230,   231,   232,   233,   234,
     235,   236,   237,     0,   238,     0,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,  1843,     0,   249,   250,
     251,   252,     0,   253,   254,   255,   702,   703,   256,   257,
     258,   259,   260,     0,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,     0,
     286,   287,   288,   289,     0,   708,   291,   292,   293,   294,
     295,     0,   296,   297,     0,   556,   298,   299,   300,     0,
       0,   301,   302,   303,   304,   305,   711,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,     0,   317,   318,
     712,   320,   321,   322,   323,   324,   325,     0,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,     0,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,     0,   352,   353,   354,   355,
     356,   357,   358,  1844,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,    25,   370,   371,   372,   373,   374,
     715,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,     0,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   717,     0,   399,   400,    29,
     401,   402,   403,   404,   405,   406,   407,     0,   408,   409,
       0,     0,   410,   411,   720,   413,   721,     0,   415,   416,
     417,   418,   419,   420,   421,     0,     0,   422,   423,   424,
     425,   426,   723,     0,   427,   428,   429,   430,   431,   592,
     433,     0,   434,   435,   436,   437,   438,   439,     0,     0,
     440,     0,    32,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,     0,    89,    33,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1845,    90,    91,    92,    93,    94,    95,    96,    97,     0,
      98,    99,   100,     0,     0,     0,     0,     0,     0,     0,
     101,   102,     0,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,     0,   115,   116,   117,   118,
     119,   120,     0,   679,   121,   122,   123,   124,   125,     0,
     126,   127,   128,   129,   682,     0,   683,     0,   132,   133,
     134,   135,   136,   137,   138,   139,   140,     0,   141,   142,
     143,   144,   145,   146,     0,   147,   148,   149,   150,   684,
     685,   686,   687,   688,   689,   690,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   161,     0,   162,     0,   163,
     164,   165,   166,   167,   168,     0,   169,   170,   171,   172,
     173,     0,     0,   174,   175,   176,   177,   178,     0,   179,
     180,   181,     0,   182,   183,   184,     0,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   696,     0,   195,     0,
     196,   197,   198,   199,     0,   200,     0,   201,   202,     0,
     203,   204,   205,   206,   207,   208,     0,   209,     0,   210,
     211,     0,   212,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,     0,   223,   224,   225,   226,   227,   228,
       0,   229,   230,   231,   232,   233,   234,   235,   236,   237,
       0,   238,     0,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,  1843,     0,   249,   250,   251,   252,     0,
     253,   254,   255,   702,   703,   256,   257,   258,   259,   260,
       0,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,     0,   286,   287,   288,
     289,     0,   708,   291,   292,   293,   294,   295,     0,   296,
     297,     0,   556,   298,   299,   300,     0,     0,   301,   302,
     303,   304,   305,   711,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,     0,   317,   318,   712,   320,   321,
     322,   323,   324,   325,     0,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,     0,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,     0,   352,   353,   354,   355,   356,   357,   358,
    1844,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,     0,   370,   371,   372,   373,   374,   715,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,     0,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   717,     0,   399,   400,     0,   401,   402,   403,
     404,   405,   406,   407,     0,   408,   409,     0,     0,   410,
     411,   720,   413,   721,     0,   415,   416,   417,   418,   419,
     420,   421,     0,     0,   422,   423,   424,   425,   426,   723,
       0,   427,   428,   429,   430,   431,   432,   433,     0,   434,
     435,   436,   437,   438,   439,     0,     0,   440,     0,     0,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,     0,    89,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1845,    90,    91,
      92,    93,    94,    95,    96,    97,     0,    98,    99,   100,
       0,     0,     0,     0,     0,     0,     0,   101,   102,     0,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,     0,   115,   116,   117,   118,   119,   120,     0,
     679,   121,   122,   123,   124,   125,     0,   126,   127,   128,
     129,   682,     0,   683,     0,   132,   133,   134,   135,   136,
     137,   138,   139,   140,     0,   141,   142,   143,   144,   145,
     146,     0,   147,   148,   149,   150,   684,   685,   686,   687,
     688,   689,   690,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   161,     0,   162,     0,   163,   164,   165,   166,
     167,   168,     0,   169,   170,   171,   172,   173,     0,     0,
     174,   175,   176,   177,   178,     0,   179,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   696,     0,   195,     0,   196,   197,   198,
     199,     0,   200,     0,   201,   202,     0,   203,   204,   205,
     206,   207,   208,     0,   209,     0,   210,   211,     0,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
       0,   223,   224,   225,   226,   227,   228,     0,   229,   230,
     231,   232,   233,   234,   235,   236,   237,     0,   238,     0,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
       0,     0,   249,   250,   251,   252,     0,   253,   254,   255,
     702,   703,   256,   257,   258,   259,   260,     0,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,     0,   286,   287,   288,   289,     0,   708,
     291,   292,   293,   294,   295,     0,   296,   297,     0,     0,
     298,   299,   300,     0,     0,   301,   302,   303,   304,   305,
     711,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,     0,   317,   318,   712,   320,   321,   322,   323,   324,
     325,     0,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,     0,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,     0,
     352,   353,   354,   355,   356,   357,   358,  1844,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,     0,   370,
     371,   372,   373,   374,   715,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,     0,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   717,
       0,   399,   400,     0,   401,   402,   403,   404,   405,   406,
     407,     0,   408,   409,     0,     0,   410,   411,   720,   413,
     721,     0,   415,   416,   417,   418,   419,   420,   421,     0,
       0,   422,   423,   424,   425,   426,   723,     0,   427,   428,
     429,   430,   431,   432,   433,     0,   434,   435,   436,   437,
     438,   439,     0,     0,   440,     0,     0,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,     0,    89,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    34,    90,    91,    92,    93,    94,
      95,    96,    97,     0,    98,    99,   100,     0,     0,     0,
       0,     0,     0,     0,   101,   102,     0,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,     0,
     115,   116,   117,   118,   119,   120,     0,   679,   121,   122,
     123,   124,   125,     0,   126,   127,   128,   129,   682,     0,
     683,     0,   132,   133,   134,   135,   136,   137,   138,   139,
     140,     0,   141,   142,   143,   144,   145,   146,     0,   147,
     148,   149,   150,   684,   685,   686,   687,   688,   689,   690,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   161,
       0,   162,     0,   163,   164,   165,   166,   167,   168,     0,
     169,   170,   171,   172,   173,     0,     0,   174,   175,   176,
     177,   178,     0,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     696,     0,   195,     0,   196,   197,   198,   199,     0,   200,
       0,   201,   202,     0,   203,   204,   205,   206,   207,   208,
       0,   209,     0,   210,   211,     0,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,     0,   223,   224,
     225,   226,   227,   228,     0,   229,   230,   231,   232,   233,
     234,   235,   236,   237,     0,   238,     0,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,     0,     0,   249,
     250,   251,   252,     0,   253,   254,   255,   702,   703,   256,
     257,   258,   259,   260,     0,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
       0,   286,   287,   288,   289,     0,   708,   291,   292,   293,
     294,   295,     0,   296,   297,     0,     0,   298,   299,   300,
       0,     0,   301,   302,   303,   304,   305,   711,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,     0,   317,
     318,   712,   320,   321,   322,   323,   324,   325,     0,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,     0,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,     0,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,     0,   370,   371,   372,   373,
     374,   715,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,     0,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   717,     0,   399,   400,
       0,   401,   402,   403,   404,   405,   406,   407,     0,   408,
     409,     0,     0,   410,   411,   720,   413,   721,     0,   415,
     416,   417,   418,   419,   420,   421,     0,     0,   422,   423,
     424,   425,   426,   723,     0,   427,   428,   429,   430,   431,
     432,   433,     0,   434,   435,   436,   437,   438,   439,     0,
       0,   440,     0,     0,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,     0,   649,   993,   531,     0,
       0,     0,   673,     0,     0,     0,     0,     0,     0,     0,
       0,  2430,    90,    91,    92,    93,    94,    95,    96,    97,
       0,    98,    99,   100,     0,     0,     0,     0,     0,     0,
       0,   101,   102,     0,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,     0,   115,   116,   117,
     118,   119,   120,     0,     0,   121,   122,   123,   124,   125,
       0,   126,   127,   128,   129,   130,     0,   131,     0,   132,
     133,   134,   135,   136,   137,   138,   139,   140,     0,   141,
     142,   143,   144,   145,   146,     0,   147,   148,   149,   150,
       0,     0,     0,   151,     0,     0,     0,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,     0,   162,     0,
     163,   164,   165,   166,   167,   168,     0,   169,   170,   171,
     172,   173,     0,     0,   174,   175,   176,   177,   178,     0,
     179,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   194,   994,   195,
       0,   196,   197,   198,   199,     0,   200,     0,   201,   202,
       0,   203,   204,   205,   206,   207,   208,     0,   209,     0,
     210,   211,     0,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,   222,     0,   223,   224,   225,   226,   227,
     228,     0,   229,   230,   231,   232,   233,   234,   235,   236,
     237,     0,   238,     0,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,     0,     0,   249,   250,   251,   252,
       0,   253,   254,   255,     0,     0,   256,   257,   258,   259,
     260,     0,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,     0,   286,   287,
     288,   289,     0,   290,   291,   292,   293,   294,   295,     0,
     296,   297,   995,     0,   298,   299,   300,     0,     0,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,     0,   317,   318,   319,   320,
     321,   322,   323,   324,   325,     0,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
       0,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,     0,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,     0,   370,   371,   372,   373,   374,     0,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,     0,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,     0,   399,   400,     0,   401,   402,
     403,   404,   405,   406,   407,     0,   408,   409,     0,     0,
     410,   411,   412,   413,   414,   996,   415,   416,   417,   418,
     419,   420,   421,     0,     0,   422,   423,   424,   425,   426,
       0,     0,   427,   428,   429,   430,   431,   432,   433,     0,
     434,   435,   436,   437,   438,   439,     0,     0,   440,     0,
       0,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,     0,   649,     0,     0,     0,     0,     0,   997,
     998,  1711,     0,     0,     0,     0,     0,     0,  1712,    90,
      91,    92,    93,    94,    95,    96,    97,     0,    98,    99,
     100,     3,     4,     0,     0,     0,     0,     0,   101,   102,
       0,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,     0,   115,   116,   117,   118,   119,   120,
       0,     0,   121,   122,   123,   124,   125,     0,   126,   127,
     128,   129,   130,     0,   131,     0,   132,   133,   134,   135,
     136,   137,   138,   139,   140,     0,   141,   142,   143,   144,
     145,   146,     0,   147,   148,   149,   150,     0,     0,     0,
     151,     0,     0,     0,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   161,     0,   162,     0,   163,   164,   165,
     166,   167,   168,     0,   169,   170,   171,   172,   173,     0,
       0,   174,   175,   176,   177,   178,     0,   179,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,     0,   195,     0,   196,   197,
     198,   199,     0,   200,     0,   201,   202,     0,   203,   204,
     205,   206,   207,   208,     0,   209,     0,   210,   211,     0,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,     0,   223,   224,   225,   226,   227,   228,     0,   229,
     230,   231,   232,   233,   234,   235,   236,   237,     0,   238,
       0,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,     0,     0,   249,   250,   251,   252,     0,   253,   254,
     255,     0,     0,   256,   257,   258,   259,   260,     0,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,     0,   286,   287,   288,   289,     0,
     290,   291,   292,   293,   294,   295,     0,   296,   297,     0,
       0,   298,   299,   300,     0,     0,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,     0,   317,   318,   319,   320,   321,   322,   323,
     324,   325,     0,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,     0,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
       0,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,    25,
     370,   371,   372,   373,   374,     0,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,     0,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,     0,   399,   400,    29,   401,   402,   403,   404,   405,
     406,   407,     0,   408,   409,     0,     0,   410,   411,   412,
     413,   414,     0,   415,   416,   417,   418,   419,   420,   421,
       0,     0,   422,   423,   424,   425,   426,     0,     0,   427,
     428,   429,   430,   431,   592,   433,     0,   434,   435,   436,
     437,   438,   439,     0,     0,   440,     0,    32,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,     0,
     486,    33,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    34,    90,    91,    92,    93,
      94,    95,    96,    97,   589,    98,    99,   100,     0,     0,
       0,     0,     0,     0,     0,   101,   102,     0,   103,   104,
     105,     0,   107,   108,   109,   110,   111,     0,   113,   114,
       0,   115,   116,   117,   118,   119,   120,     0,     0,   121,
     122,   123,   124,   125,     0,   126,   127,   128,   129,   130,
       0,     0,     0,   132,   133,   134,   135,   136,     0,   138,
     139,   140,     0,   141,   142,   143,   144,   145,   146,     0,
       0,   148,   149,   150,     0,     0,     0,     0,     0,     0,
       0,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     161,     0,   162,     0,   163,   164,   165,   166,   167,   168,
       0,   169,   170,   171,   172,   173,     0,     0,   174,   175,
     176,   177,   178,     0,   179,   180,   181,     0,   182,   183,
     184,     0,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,     0,   195,     0,   196,   197,   198,   199,     0,
     200,     0,   201,     0,     0,     0,   204,   205,   206,     0,
     208,     0,   209,     0,   210,   211,     0,   212,   213,   214,
     215,   216,   217,     0,   219,   220,   221,   222,     0,   223,
     224,   225,   226,   227,   228,     0,   229,     0,   231,   232,
     233,   234,   235,   236,   237,     0,   238,     0,   239,     0,
       0,   242,     0,   244,   245,   246,   247,   248,     0,     0,
     249,     0,   251,     0,     0,   253,   254,   255,     0,     0,
     256,   257,   258,   259,   260,     0,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,     0,   281,   282,   283,   284,
     285,     0,   286,   287,     0,   289,     0,   290,   291,   292,
     293,   294,   295,     0,   296,   297,     0,     0,   298,   299,
     300,     0,     0,   301,   302,     0,   304,     0,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,     0,
     317,   318,   319,   320,   321,   322,   323,   324,   325,     0,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,     0,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,     0,   352,   353,
       0,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,    25,   370,   371,   372,
     373,   374,     0,   375,   376,   377,   378,   379,     0,   381,
     382,   383,   384,     0,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,     0,   399,
     400,    29,   401,     0,   403,   404,   405,   406,   407,     0,
     590,   409,     0,     0,   591,   411,   412,   413,   414,     0,
     415,   416,   417,   418,   419,   420,   421,     0,     0,   422,
     423,   424,   425,   426,     0,     0,   427,   428,   429,   430,
     431,   592,   433,     0,   434,     0,   436,   437,   438,   439,
       0,     0,   440,     0,    32,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,     0,   486,    33,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    34,    90,    91,    92,    93,    94,    95,    96,
      97,     0,    98,    99,   100,     0,     0,     0,     0,     0,
       0,     0,   101,   102,     0,   103,   104,   105,     0,   107,
     108,   109,   110,   111,     0,   113,   114,     0,   115,   116,
     117,   118,   119,   120,     0,     0,   121,   122,   123,   124,
     125,     0,   126,   127,   128,   129,   130,     0,     0,     0,
     132,   133,   134,   135,   136,     0,   138,   139,   140,     0,
     141,   142,   143,   144,   145,   146,     0,     0,   148,   149,
     150,     0,     0,     0,     0,     0,     0,     0,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,     0,   162,
       0,   163,   164,   165,   166,   167,   168,     0,   169,   170,
     171,   172,   173,     0,     0,   174,   175,   176,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,     0,
     195,     0,   196,   197,   198,   199,     0,   200,     0,   201,
       0,     0,     0,   204,   205,   206,     0,   208,     0,   209,
       0,   210,   211,     0,   212,   213,   214,   215,   216,   217,
       0,   219,   220,   221,   222,     0,   223,   224,   225,   226,
     227,   228,     0,   229,     0,   231,   232,   233,   234,   235,
     236,   237,     0,   238,     0,   239,     0,     0,   242,     0,
     244,   245,   246,   247,   248,     0,     0,   249,     0,   251,
       0,     0,   253,   254,   255,     0,     0,   256,   257,   258,
     259,   260,     0,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,     0,   281,   282,   283,   284,   285,     0,   286,
     287,     0,   289,     0,   290,   291,   292,   293,   294,   295,
       0,   296,   297,     0,     0,   298,   299,   300,     0,     0,
     301,   302,     0,   304,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,     0,   317,   318,   319,
     320,   321,   322,   323,   324,   325,     0,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,     0,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,     0,   352,   353,     0,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,    25,   370,   371,   372,   373,   374,     0,
     375,   376,   377,   378,   379,     0,   381,   382,   383,   384,
       0,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,     0,   399,   400,    29,   401,
       0,   403,   404,   405,   406,   407,     0,   408,   409,     0,
       0,   410,   411,   412,   413,   414,     0,   415,   416,   417,
     418,   419,   420,   421,     0,     0,   422,   423,   424,   425,
     426,     0,     0,   427,   428,   429,   430,   431,   592,   433,
       0,   434,     0,   436,   437,   438,   439,     0,     0,   440,
       0,    32,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,     0,   486,    33,  2262,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    34,
      90,    91,    92,    93,    94,    95,    96,    97,     0,    98,
      99,   100,     0,     0,     0,     0,     0,     0,     0,   101,
     102,     0,   103,   104,   105,     0,   107,   108,   109,   110,
     111,     0,   113,   114,     0,   115,   116,   117,   118,   119,
     120,     0,     0,   121,   122,   123,   124,   125,     0,   126,
     127,   128,   129,   130,     0,     0,     0,   132,   133,   134,
     135,   136,     0,   138,   139,   140,     0,   141,   142,   143,
     144,   145,   146,     0,     0,   148,   149,   150,     0,     0,
       0,     0,     0,     0,     0,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   161,     0,   162,     0,   163,   164,
     165,   166,   167,   168,     0,   169,   170,   171,   172,   173,
       0,     0,   174,   175,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,     0,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,     0,   195,     0,   196,
     197,   198,   199,     0,   200,     0,   201,     0,     0,     0,
     204,   205,   206,     0,   208,     0,   209,     0,   210,   211,
       0,   212,   213,   214,   215,   216,   217,     0,   219,   220,
     221,   222,     0,   223,   224,   225,   226,   227,   228,     0,
     229,     0,   231,   232,   233,   234,   235,   236,   237,     0,
     238,     0,   239,     0,     0,   242,     0,   244,   245,   246,
     247,   248,     0,     0,   249,     0,   251,     0,     0,   253,
     254,   255,     0,     0,   256,   257,   258,   259,   260,     0,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,     0,
     281,   282,   283,   284,   285,     0,   286,   287,     0,   289,
       0,   290,   291,   292,   293,   294,   295,     0,   296,   297,
       0,     0,   298,   299,   300,     0,     0,   301,   302,     0,
     304,     0,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,     0,   317,   318,   319,   320,   321,   322,
     323,   324,   325,     0,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,     0,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,     0,   352,   353,     0,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
       0,   370,   371,   372,   373,   374,     0,   375,   376,   377,
     378,   379,     0,   381,   382,   383,   384,     0,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,     0,   399,   400,     0,   401,     0,   403,   404,
     405,   406,   407,     0,   408,   409,     0,     0,   410,   411,
     412,   413,   414,     0,   415,   416,   417,   418,   419,   420,
     421,     0,     0,   422,   423,   424,   425,   426,     0,     0,
     427,   428,   429,   430,   431,   432,   433,     0,   434,     0,
     436,   437,   438,   439,     0,     0,   440,     0,     0,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
       0,   486,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2280,    90,    91,    92,
      93,    94,    95,    96,    97,     0,    98,    99,   100,     0,
       0,     0,     0,     0,     0,     0,   101,   102,     0,   103,
     104,   105,     0,   107,   108,   109,   110,   111,     0,   113,
     114,     0,   115,   116,   117,   118,   119,   120,     0,     0,
     121,   122,   123,   124,   125,     0,   126,   127,   128,   129,
     130,     0,     0,     0,   132,   133,   134,   135,   136,     0,
     138,   139,   140,     0,   141,   142,   143,   144,   145,   146,
       0,     0,   148,   149,   150,     0,     0,     0,     0,     0,
       0,     0,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   161,     0,   162,     0,   163,   164,   165,   166,   167,
     168,     0,   169,   170,   171,   172,   173,     0,     0,   174,
     175,   176,   177,   178,     0,   179,   180,   181,     0,   182,
     183,   184,     0,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,     0,   195,     0,   196,   197,   198,   199,
       0,   200,     0,   201,     0,     0,     0,   204,   205,   206,
       0,   208,     0,   209,     0,   210,   211,     0,   212,   213,
     214,   215,   216,   217,     0,   219,   220,   221,   222,     0,
     223,   224,   225,   226,   227,   228,     0,   229,     0,   231,
     232,   233,   234,   235,   236,   237,     0,   238,     0,   239,
       0,     0,   242,     0,   244,   245,   246,   247,   248,     0,
       0,   249,     0,   251,     0,     0,   253,   254,   255,     0,
       0,   256,   257,   258,   259,   260,     0,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,     0,   281,   282,   283,
     284,   285,     0,   286,   287,     0,   289,     0,   290,   291,
     292,   293,   294,   295,     0,   296,   297,     0,     0,   298,
     299,   300,     0,     0,   301,   302,     0,   304,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
       0,   317,   318,   319,   320,   321,   322,   323,   324,   325,
       0,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,     0,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,     0,   352,
     353,     0,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,     0,   370,   371,
     372,   373,   374,     0,   375,   376,   377,   378,   379,     0,
     381,   382,   383,   384,     0,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,     0,
     399,   400,     0,   401,     0,   403,   404,   405,   406,   407,
       0,   408,   409,     0,     0,   410,   411,   412,   413,   414,
       0,   415,   416,   417,   418,   419,   420,   421,     0,     0,
     422,   423,   424,   425,   426,     0,     0,   427,   428,   429,
     430,   431,   432,   433,     0,   434,     0,   436,   437,   438,
     439,     0,     0,   440,     0,     0,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,     0,   486,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   769,    90,    91,    92,    93,    94,    95,
      96,    97,     0,    98,    99,   100,     0,     0,     0,     0,
       0,     0,     0,   101,   102,     0,   103,   104,   105,     0,
     107,   108,   109,   110,   111,     0,   113,   114,     0,   115,
     116,   117,   118,   119,   120,     0,     0,   121,   122,   123,
     124,   125,     0,   126,   127,   128,   129,   130,     0,     0,
       0,   132,   133,   134,   135,   136,     0,   138,   139,   140,
       0,   141,   142,   143,   144,   145,   146,     0,     0,   148,
     149,   150,     0,     0,     0,     0,     0,     0,     0,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   161,     0,
     162,     0,   163,   164,   165,   166,   167,   168,     0,   169,
     170,   171,   172,   173,     0,     0,   174,   175,   176,   177,
     178,     0,   179,   180,   181,     0,   182,   183,   184,     0,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
       0,   195,     0,   196,   197,   198,   199,     0,   200,     0,
     201,     0,     0,     0,   204,   205,   206,     0,   208,     0,
     209,     0,   210,   211,     0,   212,   213,   214,   215,   216,
     217,     0,   219,   220,   221,   222,     0,   223,   224,   225,
     226,   227,   228,     0,   229,     0,   231,   232,   233,   234,
     235,   236,   237,     0,   238,     0,   239,     0,     0,   242,
       0,   244,   245,   246,   247,   248,     0,     0,   249,     0,
     251,     0,     0,   253,   254,   255,     0,     0,   256,   257,
     258,   259,   260,     0,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,     0,   281,   282,   283,   284,   285,     0,
     286,   287,     0,   289,     0,   290,   291,   292,   293,   294,
     295,     0,   296,   297,     0,     0,   298,   299,   300,     0,
       0,   301,   302,     0,   304,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,     0,   317,   318,
     319,   320,   321,   322,   323,   324,   325,     0,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,     0,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,     0,   352,   353,     0,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,     0,   370,   371,   372,   373,   374,
       0,   375,   376,   377,   378,   379,     0,   381,   382,   383,
     384,     0,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,     0,   399,   400,     0,
     401,     0,   403,   404,   405,   406,   407,     0,   408,   409,
       0,     0,   410,   411,   412,   413,   414,     0,   415,   416,
     417,   418,   419,   420,   421,     0,     0,   422,   423,   424,
     425,   426,     0,     0,   427,   428,   429,   430,   431,   432,
     433,     0,   434,     0,   436,   437,   438,   439,     0,     0,
     440,     0,     0,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,     0,   486,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1565,    90,    91,    92,    93,    94,    95,    96,    97,     0,
      98,    99,   100,     0,     0,     0,     0,     0,     0,     0,
     101,   102,     0,   103,   104,   105,     0,   107,   108,   109,
     110,   111,     0,   113,   114,     0,   115,   116,   117,   118,
     119,   120,     0,     0,   121,   122,   123,   124,   125,     0,
     126,   127,   128,   129,   130,     0,     0,     0,   132,   133,
     134,   135,   136,     0,   138,   139,   140,     0,   141,   142,
     143,   144,   145,   146,     0,     0,   148,   149,   150,     0,
       0,     0,     0,     0,     0,     0,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   161,     0,   162,     0,   163,
     164,   165,   166,   167,   168,     0,   169,   170,   171,   172,
     173,     0,     0,   174,   175,   176,   177,   178,     0,   179,
     180,   181,     0,   182,   183,   184,     0,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,     0,   195,     0,
     196,   197,   198,   199,     0,   200,     0,   201,     0,     0,
       0,   204,   205,   206,     0,   208,     0,   209,     0,   210,
     211,     0,   212,   213,   214,   215,   216,   217,     0,   219,
     220,   221,   222,     0,   223,   224,   225,   226,   227,   228,
       0,   229,     0,   231,   232,   233,   234,   235,   236,   237,
       0,   238,     0,   239,     0,     0,   242,     0,   244,   245,
     246,   247,   248,     0,     0,   249,     0,   251,     0,     0,
     253,   254,   255,     0,     0,   256,   257,   258,   259,   260,
       0,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
       0,   281,   282,   283,   284,   285,     0,   286,   287,     0,
     289,     0,   290,   291,   292,   293,   294,   295,     0,   296,
     297,     0,     0,   298,   299,   300,     0,     0,   301,   302,
       0,   304,     0,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,     0,   317,   318,   319,   320,   321,
     322,   323,   324,   325,     0,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,     0,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,     0,   352,   353,     0,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,     0,   370,   371,   372,   373,   374,     0,   375,   376,
     377,   378,   379,     0,   381,   382,   383,   384,     0,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,     0,   399,   400,     0,   401,     0,   403,
     404,   405,   406,   407,     0,   408,   409,     0,     0,   410,
     411,   412,   413,   414,     0,   415,   416,   417,   418,   419,
     420,   421,     0,     0,   422,   423,   424,   425,   426,     0,
       0,   427,   428,   429,   430,   431,   432,   433,     0,   434,
       0,   436,   437,   438,   439,     0,     0,   440,     0,     0,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,     0,     0,     0,     0,  1016,   993,   531,     0,     0,
    1426,   673,     0,     0,     0,     0,     0,  2072,  1427,  1428,
    1429,    90,    91,    92,    93,    94,    95,    96,    97,   869,
      98,    99,   100,   870,   871,   872,   873,   874,   875,   876,
     101,   102,   877,   103,   104,   105,   106,   107,   108,   109,
       0,  1017,   112,  1018,  1019,   878,   115,   116,   117,   118,
     119,   120,   879,   880,   121,   122,  1020,  1021,   125,   881,
     126,   127,   128,   129,     0,   882,   131,   883,   132,   133,
     134,   135,   136,   137,   138,   139,   140,   884,   141,   142,
     143,   144,   145,   146,   885,   147,   148,   149,   150,   886,
     887,   888,   151,   889,   890,   891,   152,   153,   154,   155,
     156,   157,   158,  1022,  1023,   161,   892,   162,   893,   163,
     164,   165,   166,   167,   168,   894,   169,   170,   171,   172,
     173,   895,   896,   174,   175,   694,   177,   178,   897,   179,
     180,   181,   898,   182,   183,   184,   899,   185,   186,   187,
     188,     0,   190,   191,   192,   193,     0,   900,   195,   901,
     196,   197,  1024,   199,   902,   200,   903,   201,   202,   904,
     203,   204,   205,   206,   207,   208,   905,   209,   906,     0,
     211,   907,   212,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   908,   223,   224,   225,   226,   227,   228,
     909,   229,   230,     0,   232,   233,   234,   235,  1025,  1026,
     910,  1027,   911,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   912,   913,   249,   250,   251,   252,   914,
     253,   254,   255,   915,   916,   256,   257,   258,   259,   260,
    2173,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,  1029,
     280,  1030,   282,   283,   284,  2174,   918,   286,   287,   288,
     289,   919,     0,   291,  1031,   293,   294,   295,   920,   296,
     297,   921,   922,  2175,   299,   300,   923,   924,   301,     0,
     303,   304,   305,     0,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   925,   317,   318,     0,   320,   321,
       0,   323,   324,   325,   926,   326,   327,   328,   329,   330,
     331,   332,   333,   334,  1032,   336,   337,   338,   339,   927,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   928,   352,   353,   354,   355,   356,   357,  1033,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   929,   370,   371,   372,   373,   374,   930,   375,  2176,
     377,   378,   379,   380,   381,   382,  1035,   384,   931,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
    1036,   397,     0,   932,   399,   400,   933,   401,   402,   403,
     404,   405,   406,   407,   934,  1037,  1038,   935,   936,   410,
     411,     0,   413,     0,   937,   415,   416,   417,   418,   419,
     420,   421,   938,   939,   422,   423,   424,   425,   426,   940,
     941,   427,   428,   429,   430,   431,     0,  1039,   942,   434,
     435,   436,   437,   438,   439,   943,   944,   440,   945,   946,
     441,   442,   443,   444,   445,   446,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   458,   459,   460,
     461,     0,   486,     0,  1430,  1431,  1432,  1426,  2177,  2178,
    1435,  1436,  1437,  1438,     0,  1427,  1428,  1429,    90,    91,
      92,    93,    94,    95,    96,    97,     0,    98,    99,   100,
       0,     0,     0,     0,     0,     0,     0,   101,   102,     0,
     103,   104,   105,     0,   107,   108,   109,   110,   111,     0,
     113,   114,     0,   115,   116,   117,   118,   119,   120,     0,
       0,   121,   122,   123,   124,   125,     0,   126,   127,   128,
     129,   130,     0,     0,     0,   132,   133,   134,   135,   136,
       0,   138,   139,   140,     0,   141,   142,   143,   144,   145,
     146,     0,     0,   148,   149,   150,     0,     0,     0,     0,
       0,     0,     0,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   161,     0,   162,     0,   163,   164,   165,   166,
     167,   168,     0,   169,   170,   171,   172,   173,     0,     0,
     174,   175,   176,   177,   178,     0,   179,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   194,     0,   195,     0,   196,   197,   198,
     199,     0,   200,     0,   201,     0,     0,     0,   204,   205,
     206,     0,   208,     0,   209,     0,   210,   211,     0,   212,
     213,   214,   215,   216,   217,     0,   219,   220,   221,   222,
       0,   223,   224,   225,   226,   227,   228,     0,   229,     0,
     231,   232,   233,   234,   235,   236,   237,     0,   238,     0,
     239,     0,     0,   242,     0,   244,   245,   246,   247,   248,
       0,     0,   249,     0,   251,     0,     0,   253,   254,   255,
       0,     0,   256,   257,   258,   259,   260,     0,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,     0,   281,   282,
     283,   284,   285,     0,   286,   287,     0,   289,     0,   290,
     291,   292,   293,   294,   295,     0,   296,   297,     0,     0,
     298,   299,   300,     0,     0,   301,   302,     0,   304,     0,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,     0,   317,   318,   319,   320,   321,   322,   323,   324,
     325,     0,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,     0,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,     0,
     352,   353,     0,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,     0,   370,
     371,   372,   373,   374,     0,   375,   376,   377,   378,   379,
       0,   381,   382,   383,   384,     0,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
       0,   399,   400,     0,   401,     0,   403,   404,   405,   406,
     407,     0,   408,   409,     0,     0,   410,   411,   412,   413,
     414,     0,   415,   416,   417,   418,   419,   420,   421,     0,
       0,   422,   423,   424,   425,   426,     0,     0,   427,   428,
     429,   430,   431,   432,   433,     0,   434,     0,   436,   437,
     438,   439,     0,     0,   440,     0,     0,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,     0,     0,
       0,  1430,  1431,  1432,     0,  1433,  1434,  1435,  1436,  1437,
    1438,  1115,     0,     0,  1116,     0,     0,     0,     0,  1117,
    1118,  1119,     0,     0,     0,     0,     0,     0,     0,  1115,
       0,     0,  1116,     0,     0,     0,  1120,  1117,  1118,  1119,
       0,     0,     0,     0,  1122,     0,     0,  1115,     0,     0,
    1116,  1123,     0,     0,  1120,  1117,  1118,  1119,     0,     0,
       0,     0,  1122,     0,     0,     0,     0,     0,     0,  1123,
       0,     0,  1120,     0,     0,  1115,  1124,     0,  1116,     0,
    1122,     0,     0,  1117,  1118,  1119,     0,  1123,     0,     0,
       0,     0,     0,  1115,  1124,     0,  1116,     0,     0,     0,
    1120,  1117,  1118,  1119,     0,     0,     0,     0,  1122,     0,
       0,  1115,  1124,     0,  1116,  1123,     0,     0,  1120,  1117,
    1118,  1119,     0,     0,     0,     0,  1122,     0,     0,     0,
       0,     0,     0,  1123,     0,     0,  1120,     0,     0,     0,
    1124,     0,     0,     0,  1122,     0,     0,     0,     0,     0,
       0,  1123,     0,     0,     0,     0,     0,     0,  1124,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1125,  1124,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1126,
       0,     0,     0,  1125,  1127,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1126,     0,     0,
       0,  1125,  1127,     0,     0,  1128,  1129,     0,     0,     0,
       0,     0,     0,     0,     0,  1126,     0,     0,     0,  1130,
    1127,     0,     0,  1128,  1129,     0,     0,     0,     0,  1125,
       0,     0,     0,     0,     0,     0,     0,  1130,     0,     0,
       0,  1128,  1129,  1126,     0,     0,     0,  1125,  1127,     0,
       0,     0,     0,     0,     0,  1130,     0,  1131,     0,     0,
    1132,  1126,     0,     0,     0,  1125,  1127,     0,     0,  1128,
    1129,     0,     0,     0,  1133,  1131,     0,  1134,  1132,  1126,
       0,     0,     0,  1130,  1127,     0,     0,  1128,  1129,     0,
       0,     0,  1133,  1131,     0,  1134,  1132,     0,     0,     0,
       0,  1130,     0,     0,     0,  1128,  1129,     0,     0,     0,
    1133,     0,     0,  1134,     0,     0,     0,     0,     0,  1130,
       0,  1131,     0,     0,  1132,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1133,  1131,
       0,  1134,  1132,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1133,  1131,     0,  1134,
    1132,     0,     0,     0,  1135,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1133,     0,     0,  1134,     0,     0,
       0,     0,  1135,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1135,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1115,     0,     0,  1116,     0,     0,     0,     0,  1117,
    1118,  1119,     0,     0,     0,     0,     0,     0,  1135,     0,
       0,     0,     0,     0,     0,     0,  1120,     0,     0,     0,
       0,     0,     0,     0,  1122,     0,  1135,     0,     0,     0,
       0,  1123,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1136,     0,  1135,  1137,  1138,  1139,     0,  1140,
    1141,  1142,  1143,  1144,  1145,     0,  1124,     0,     0,  1469,
    1136,     0,     0,  1137,  1138,  1139,     0,  1140,  1141,  1142,
    1143,  1144,  1145,     0,     0,     0,     0,  1805,  1136,     0,
       0,  1137,  1138,  1139,     0,  1140,  1141,  1142,  1143,  1144,
    1145,     0,     0,     0,     0,  2015,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1136,     0,     0,  1137,
    1138,  1139,     0,  1140,  1141,  1142,  1143,  1144,  1145,     0,
       0,     0,     0,  2050,  1136,     0,     0,  1137,  1138,  1139,
       0,  1140,  1141,  1142,  1143,  1144,  1145,     0,     0,     0,
       0,  2137,  1136,     0,     0,  1137,  1138,  1139,     0,  1140,
    1141,  1142,  1143,  1144,  1145,  1125,     0,  1115,     0,  2231,
    1116,     0,     0,     0,     0,  1117,  1118,  1119,     0,  1126,
       0,     0,     0,     0,  1127,  1115,     0,     0,  1116,     0,
       0,     0,  1120,  1117,  1118,  1119,     0,     0,     0,     0,
    1122,     0,     0,     0,     0,  1128,  1129,  1123,     0,     0,
    1120,     0,     0,     0,     0,     0,     0,     0,  1122,  1130,
       0,     0,     0,     0,     0,  1123,     0,     0,  1115,     0,
       0,  1116,  1124,     0,     0,     0,  1117,  1118,  1119,     0,
       0,     0,     0,     0,     0,     0,  1115,     0,     0,  1116,
    1124,     0,     0,  1120,  1117,  1118,  1119,  1131,     0,     0,
    1132,  1122,     0,     0,     0,     0,     0,     0,  1123,   819,
       0,  1120,     0,     0,  1133,   820,     0,  1134,     0,  1122,
       0,     0,   832,     0,     0,     0,  1123,     0,     0,     0,
       0,     0,     0,  1124,     0,     0,     0,     0,     0,     0,
       0,   833,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1124,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1125,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1126,     0,     0,     0,  1125,
    1127,   834,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1126,  1135,     0,     0,     0,  1127,     0,
       0,  1128,  1129,     0,     0,     0,     0,     0,     0,     0,
     821,     0,     0,     0,     0,  1130,     0,     0,     0,  1128,
    1129,     0,  1125,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1130,     0,     0,  1126,     0,     0,     0,
    1125,  1127,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1131,  1126,     0,  1132,     0,     0,  1127,
       0,     0,  1128,  1129,     0,     0,     0,     0,     0,   835,
    1133,  1131,     0,  1134,  1132,     0,  1130,     0,     0,     0,
    1128,  1129,     0,     0,     0,     0,     0,     0,  1133,     0,
       0,  1134,  1136,     0,  1130,  1137,  1138,  1139,     0,  1140,
    1141,  1142,  1143,  1144,  1145,     0,     0,     0,     0,  2249,
       0,     0,     0,     0,  1131,     0,     0,  1132,   836,     0,
       0,     0,     0,     0,     0,     0,   837,     0,     0,     0,
       0,  1133,  1131,     0,  1134,  1132,     0,     0,   838,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1133,
       0,     0,  1134,     0,     0,     0,     0,     0,     0,   822,
    1135,     0,     0,     0,     0,     0,     0,     0,     0,   839,
       0,     0,     0,     0,     0,     0,     0,     0,  1135,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   840,
       0,     0,     0,   824,   841,     0,     0,     0,     0,     0,
       0,  1135,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   842,     0,     0,  1135,
       0,     0,   843,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   844,     0,  1136,     0,
       0,  1137,  1138,  1139,     0,  1140,  1141,  1142,  1143,  1144,
    1145,     0,     0,     0,     0,  2391,  1136,     0,     0,  1137,
    1138,  1139,     0,  1140,  1141,  1142,  1143,  1144,  1145,     0,
       0,     0,     0,  2589,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   826,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1136,
       0,     0,  1137,  1138,  1139,     0,  1140,  1141,  1142,  1143,
    1144,  1145,     0,     0,     0,     0,  2601,  1136,   868,     0,
    1137,  1138,  1139,     0,  1140,  1141,  1142,  1143,  1144,  1145,
       0,     0,  1291,     0,    90,    91,    92,    93,    94,    95,
      96,    97,   869,    98,    99,   100,   870,   871,   872,   873,
     874,   875,   876,   101,   102,   877,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   878,   115,
     116,   117,   118,   119,   120,   879,   880,   121,   122,   123,
     124,   125,   881,   126,   127,   128,   129,   130,   882,   131,
     883,   132,   133,   134,   135,   136,   137,   138,   139,   140,
     884,   141,   142,   143,   144,   145,   146,   885,   147,   148,
     149,   150,   886,   887,   888,   151,   889,   890,   891,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   161,   892,
     162,   893,   163,   164,   165,   166,   167,   168,   894,   169,
     170,   171,   172,   173,   895,   896,   174,   175,   176,   177,
     178,   897,   179,   180,   181,   898,   182,   183,   184,   899,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     900,   195,   901,   196,   197,   198,   199,   902,   200,   903,
     201,   202,   904,   203,   204,   205,   206,   207,   208,   905,
     209,   906,   210,   211,   907,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   908,   223,   224,   225,
     226,   227,   228,   909,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   910,   238,   911,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   912,   913,   249,   250,
     251,   252,   914,   253,   254,   255,   915,   916,   256,   257,
     258,   259,   260,   917,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   918,
     286,   287,   288,   289,   919,   290,   291,   292,   293,   294,
     295,   920,   296,   297,   921,   922,   298,   299,   300,   923,
     924,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   925,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   926,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   927,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   928,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   929,   370,   371,   372,   373,   374,
     930,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   931,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   932,   399,   400,   933,
     401,   402,   403,   404,   405,   406,   407,   934,   408,   409,
     935,   936,   410,   411,   412,   413,   414,   937,   415,   416,
     417,   418,   419,   420,   421,   938,   939,   422,   423,   424,
     425,   426,   940,   941,   427,   428,   429,   430,   431,   432,
     433,   942,   434,   435,   436,   437,   438,   439,   943,   944,
     440,   945,   946,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   486,     0,     0,     0,     0,     0,
       0,     0,     0,   947,     0,     0,     0,     0,     0,     0,
      90,    91,    92,    93,    94,    95,    96,    97,     0,    98,
      99,   100,     0,     0,     0,     0,     0,     0,     0,   101,
     102,     0,   103,   104,   105,     0,   107,   108,   109,   110,
     111,     0,   113,   114,     0,   115,   116,   117,   118,   119,
     120,     0,     0,   121,   122,   123,   124,   125,     0,   126,
     127,   128,   129,   130,     0,     0,     0,   132,   133,   134,
     135,   136,     0,   138,   139,   140,     0,   141,   142,   143,
     144,   145,   146,     0,     0,   148,   149,   150,     0,     0,
       0,     0,     0,     0,     0,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   161,     0,   162,     0,   163,   164,
     165,   166,   167,   168,     0,   169,   170,   171,   172,   173,
       0,     0,   174,   175,   176,   177,   178,     0,   179,   180,
     181,     0,   182,   183,   184,     0,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,     0,   195,     0,   196,
     197,   198,   199,     0,   200,     0,   201,     0,     0,     0,
     204,   205,   206,     0,   208,     0,   209,     0,   210,   211,
       0,   212,   213,   214,   215,   216,   217,     0,   219,   220,
     221,   222,     0,   223,   224,   225,   226,   227,   228,     0,
     229,     0,   231,   232,   233,   234,   235,   236,   237,     0,
     238,     0,   239,     0,     0,   242,     0,   244,   245,   246,
     247,   248,     0,     0,   249,     0,   251,     0,     0,   253,
     254,   255,     0,     0,   256,   257,   258,   259,   260,     0,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,     0,
     281,   282,   283,   284,   285,     0,   286,   287,     0,   289,
       0,   290,   291,   292,   293,   294,   295,     0,   296,   297,
       0,     0,   298,   299,   300,     0,     0,   301,   302,     0,
     304,     0,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,     0,   317,   318,   319,   320,   321,   322,
     323,   324,   325,     0,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,     0,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,     0,   352,   353,     0,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
       0,   370,   371,   372,   373,   374,     0,   375,   376,   377,
     378,   379,     0,   381,   382,   383,   384,     0,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,     0,   399,   400,     0,   401,     0,   403,   404,
     405,   406,   407,     0,   408,   409,     0,     0,   410,   411,
     412,   413,   414,     0,   415,   416,   417,   418,   419,   420,
     421,     0,     0,   422,   423,   424,   425,   426,     0,     0,
     427,   428,   429,   430,   431,   432,   433,     0,   434,     0,
     436,   437,   438,   439,     0,     0,   440,     0,     0,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     649,   993,   531,     0,     0,     0,   673,     0,     0,  1990,
       0,     0,     0,     0,     0,     0,    90,    91,    92,    93,
      94,    95,    96,    97,     0,    98,    99,   100,     0,     0,
       0,     0,     0,     0,     0,   101,   102,     0,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
       0,   115,   116,   117,   118,   119,   120,     0,     0,   121,
     122,   123,   124,   125,     0,   126,   127,   128,   129,   130,
       0,   131,     0,   132,   133,   134,   135,   136,   137,   138,
     139,   140,     0,   141,   142,   143,   144,   145,   146,     0,
     147,   148,   149,   150,     0,     0,     0,   151,     0,     0,
       0,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     161,  1171,   162,     0,   163,   164,   165,   166,   167,   168,
       0,   169,   170,   171,   172,   173,     0,     0,   174,   175,
     176,   177,   178,     0,   179,   180,   181,     0,   182,   183,
     184,     0,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   994,   195,     0,   196,   197,   198,   199,     0,
     200,     0,   201,   202,     0,   203,   204,   205,   206,   207,
     208,     0,   209,     0,   210,   211,     0,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,     0,   223,
     224,   225,   226,   227,   228,     0,   229,   230,   231,   232,
     233,   234,   235,   236,   237,     0,   238,     0,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,     0,     0,
     249,   250,   251,   252,     0,   253,   254,   255,     0,     0,
     256,   257,   258,   259,   260,     0,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,     0,   286,   287,   288,   289,     0,   290,   291,   292,
     293,   294,   295,     0,   296,   297,   995,     0,   298,   299,
     300,     0,     0,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,     0,
     317,   318,   319,   320,   321,   322,   323,   324,   325,     0,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,     0,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,     0,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,     0,   370,   371,   372,
     373,   374,     0,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,     0,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,     0,   399,
     400,     0,   401,   402,   403,   404,   405,   406,   407,     0,
     408,   409,     0,     0,   410,   411,   412,   413,   414,   996,
     415,   416,   417,   418,   419,   420,   421,     0,     0,   422,
     423,   424,   425,   426,     0,     0,   427,   428,   429,   430,
     431,   432,   433,     0,   434,   435,   436,   437,   438,   439,
       0,     0,   440,     0,     0,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   649,   993,   531,     0,
       0,     0,   673,   997,   998,     0,     0,     0,     0,     0,
       0,     0,    90,    91,    92,    93,    94,    95,    96,    97,
       0,    98,    99,   100,     0,     0,     0,     0,     0,     0,
       0,   101,   102,     0,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,     0,   115,   116,   117,
     118,   119,   120,     0,     0,   121,   122,   123,   124,   125,
       0,   126,   127,   128,   129,   130,     0,   131,     0,   132,
     133,   134,   135,   136,   137,   138,   139,   140,     0,   141,
     142,   143,   144,   145,   146,     0,   147,   148,   149,   150,
       0,     0,     0,   151,     0,     0,     0,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,  1173,   162,     0,
     163,   164,   165,   166,   167,   168,     0,   169,   170,   171,
     172,   173,     0,     0,   174,   175,   176,   177,   178,     0,
     179,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   194,   994,   195,
       0,   196,   197,   198,   199,     0,   200,     0,   201,   202,
       0,   203,   204,   205,   206,   207,   208,     0,   209,     0,
     210,   211,     0,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,   222,     0,   223,   224,   225,   226,   227,
     228,     0,   229,   230,   231,   232,   233,   234,   235,   236,
     237,     0,   238,     0,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,     0,     0,   249,   250,   251,   252,
       0,   253,   254,   255,     0,     0,   256,   257,   258,   259,
     260,     0,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,     0,   286,   287,
     288,   289,     0,   290,   291,   292,   293,   294,   295,     0,
     296,   297,   995,     0,   298,   299,   300,     0,     0,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,     0,   317,   318,   319,   320,
     321,   322,   323,   324,   325,     0,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
       0,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,     0,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,     0,   370,   371,   372,   373,   374,     0,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,     0,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,     0,   399,   400,     0,   401,   402,
     403,   404,   405,   406,   407,     0,   408,   409,     0,     0,
     410,   411,   412,   413,   414,   996,   415,   416,   417,   418,
     419,   420,   421,     0,     0,   422,   423,   424,   425,   426,
       0,     0,   427,   428,   429,   430,   431,   432,   433,     0,
     434,   435,   436,   437,   438,   439,     0,     0,   440,     0,
       0,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   649,   993,   531,     0,     0,     0,   673,   997,
     998,     0,     0,     0,     0,     0,     0,     0,    90,    91,
      92,    93,    94,    95,    96,    97,     0,    98,    99,   100,
       0,     0,     0,     0,     0,     0,     0,   101,   102,     0,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,     0,   115,   116,   117,   118,   119,   120,     0,
       0,   121,   122,   123,   124,   125,     0,   126,   127,   128,
     129,   130,     0,   131,     0,   132,   133,   134,   135,   136,
     137,   138,   139,   140,     0,   141,   142,   143,   144,   145,
     146,     0,   147,   148,   149,   150,     0,     0,     0,   151,
       0,     0,     0,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   161,     0,   162,     0,   163,   164,   165,   166,
     167,   168,     0,   169,   170,   171,   172,   173,     0,     0,
     174,   175,   176,   177,   178,     0,   179,   180,   181,     0,
     182,   183,   184,     0,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   194,   994,   195,     0,   196,   197,   198,
     199,     0,   200,     0,   201,   202,     0,   203,   204,   205,
     206,   207,   208,     0,   209,     0,   210,   211,     0,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
       0,   223,   224,   225,   226,   227,   228,     0,   229,   230,
     231,   232,   233,   234,   235,   236,   237,     0,   238,     0,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
       0,     0,   249,   250,   251,   252,     0,   253,   254,   255,
       0,     0,   256,   257,   258,   259,   260,     0,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,     0,   286,   287,   288,   289,     0,   290,
     291,   292,   293,   294,   295,     0,   296,   297,   995,     0,
     298,   299,   300,     0,     0,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,     0,   317,   318,   319,   320,   321,   322,   323,   324,
     325,     0,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,     0,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,     0,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,     0,   370,
     371,   372,   373,   374,     0,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,     0,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
       0,   399,   400,     0,   401,   402,   403,   404,   405,   406,
     407,     0,   408,   409,     0,     0,   410,   411,   412,   413,
     414,   996,   415,   416,   417,   418,   419,   420,   421,     0,
       0,   422,   423,   424,   425,   426,     0,     0,   427,   428,
     429,   430,   431,   432,   433,     0,   434,   435,   436,   437,
     438,   439,     0,     0,   440,     0,     0,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,     0,  1115,
       0,     0,  1116,     0,     0,   997,   998,  1117,  1118,  1119,
       0,     0,     0,     0,     0,     0,     0,  1115,     0,     0,
    1116,     0,     0,     0,  1120,  1117,  1118,  1119,  1571,     0,
       0,     0,  1122,     0,     0,  1115,     0,     0,  1116,  1123,
       0,     0,  1120,  1117,  1118,  1119,     0,     0,     0,     0,
    1122,     0,     0,     0,     0,     0,     0,  1123,     0,     0,
    1120,     0,     0,  1115,  1124,     0,  1116,     0,  1122,     0,
       0,  1117,  1118,  1119,     0,  1123,     0,     0,     0,     0,
       0,     0,  1124,     0,     0,     0,     0,     0,  1120,     0,
       0,  1746,     0,     0,     0,     0,  1122,     0,     0,  1115,
    1124,     0,  1116,  1123,     0,     0,     0,  1117,  1118,  1119,
       0,     0,     0,     0,  1572,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1120,     0,     0,     0,  1124,     0,
       0,     0,  1122,     0,     0,     0,     0,     0,     0,  1123,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1125,  1124,     0,     0,     0,     0,     0,
       0,  1786,     0,     0,     0,     0,  1787,  1126,     0,     0,
       0,  1125,  1127,  1115,     0,     0,  1116,     0,  2659,     0,
       0,  1117,  1118,  1119,     0,  1126,     0,     0,     0,  1125,
    1127,     0,     0,  1128,  1129,     0,     0,     0,  1120,     0,
       0,  1795,     0,  1126,     0,     0,  1122,  1130,  1127,     0,
       0,  1128,  1129,  1123,     0,     0,     0,  1125,     0,     0,
       0,     0,     0,     0,     0,  1130,     0,     0,     0,  1128,
    1129,  1126,     0,     0,     0,     0,  1127,     0,  1124,     0,
       0,     0,     0,  1130,     0,  1131,     0,     0,  1132,     0,
       0,     0,     0,  1125,     0,     0,     0,  1128,  1129,     0,
       0,     0,  1133,  1131,     0,  1134,  1132,  1126,     0,     0,
       0,  1130,  1127,     0,     0,     0,     0,     0,     0,     0,
    1133,  1131,     0,  1134,  1132,     0,     0,     0,     0,     0,
       0,     0,     0,  1128,  1129,     0,     0,     0,  1133,     0,
       0,  1134,     0,     0,     0,     0,     0,  1130,     0,  1131,
       0,     0,  1132,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2660,     0,  1133,     0,     0,  1134,
       0,     0,     0,     0,     0,     0,     0,  1125,     0,     0,
       0,     0,     0,     0,     0,  1131,     0,     0,  1132,     0,
       0,  1126,  1135,     0,     0,     0,  1127,     0,     0,     0,
       0,     0,  1133,     0,     0,  1134,     0,     0,     0,     0,
    1135,     0,     0,     0,     0,     0,     0,  1128,  1129,     0,
       0,     0,     0,  1760,     0,     0,     0,     0,  1135,     0,
       0,  1130,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1115,     0,     0,  1116,  1573,
       0,     0,     0,  1117,  1118,  1119,  1135,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1131,
    1120,     0,  1132,     0,     0,     0,     0,     0,  1122,     0,
       0,     0,     0,     0,     0,  1123,  1133,     0,     0,  1134,
    1136,     0,  1135,  1137,  1138,  1139,     0,  1140,  1141,  1142,
    1143,  1144,  1145,     0,     0,     0,     0,     0,  1136,     0,
    1124,  1137,  1138,  1139,     0,  1140,  1141,  1142,  1143,  1144,
    1145,     0,     0,     0,     0,     0,  1136,     0,     0,  1137,
    1138,  1139,     0,  1140,  1141,  1142,  1143,  1144,  1145,     0,
       0,     0,  1115,     0,     0,  1116,     0,     0,     0,     0,
    1117,  1118,  1119,     0,  1136,     0,     0,  1137,  1138,  1139,
       0,  1140,  1141,  1142,  1143,  1144,  1145,  1120,     0,     0,
       0,     0,     0,     0,     0,  1122,  1135,     0,  1115,     0,
       0,  1116,  1123,     0,     0,     0,  1117,  1118,  1119,     0,
    1136,     0,     0,  1137,  1138,  1139,     0,  1140,  1141,  1142,
    1143,  1144,  1145,  1120,  1800,     0,     0,  1124,     0,  1125,
       0,  1122,     0,     0,     0,     0,     0,     0,  1123,     0,
       0,     0,  1115,  1126,     0,  1116,     0,     0,  1127,     0,
    1117,  1118,  1119,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1124,     0,     0,     0,  1120,     0,  1128,
    1129,     0,     0,     0,     0,  1122,     0,     0,     0,     0,
       0,     0,  1123,  1130,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1136,     0,     0,  1137,  1138,  1139,
       0,  1140,  1141,  1142,  1143,  1144,  1145,  1124,     0,  1115,
       0,     0,  1116,     0,     0,     0,     0,  1117,  1118,  1119,
       0,  1131,     0,     0,  1132,     0,  1125,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1133,     0,
    1126,  1134,  1122,     0,     0,  1127,     0,     0,     0,  1123,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1125,     0,     0,     0,  1128,  1129,     0,     0,
       0,     0,     0,     0,  1124,     0,  1126,     0,     0,  1115,
    1130,  1127,  1116,     0,     0,     0,     0,  1117,  1118,  1119,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1128,  1129,     0,     0,  1125,     0,     0,     0,
       0,     0,  1122,     0,     0,     0,  1130,     0,  1131,  1123,
    1126,  1132,     0,     0,     0,  1127,  1115,     0,  1135,  1116,
       0,     0,     0,     0,     0,  1133,     0,     0,  1134,     0,
       0,     0,     0,     0,  1124,     0,  1128,  1129,     0,     0,
       0,     0,     0,     0,  1131,     0,     0,  1132,     0,  1122,
    1130,     0,     0,     0,     0,     0, -1536,     0,     0,     0,
       0,  1133,     0,  1125,  1134,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1126,     0,     0,
       0,  1124,  1127,     0,     0,     0,     0,     0,  1131,     0,
       0,  1132,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1128,  1129,  1133,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1135,  1136,  1130,     0,  1137,
    1138,  1139,     0,  1140,  1141,  1142,  1143,  1144,  1145,     0,
       0,  1115,     0,  1125,  1116,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2011,  1126,     0,     0,
    2067,  1135,  1127,     0,     0,  1131,   819,     0,  1132,     0,
       0,     0,   820,     0,  1122,     0,     0,     0,     0,   832,
       0, -1536,  1133, -1536, -1536,     0,     0,   492,     0,     0,
   -1536,     0,     0,     0,     0,     0,     0,  1130,   833,     0,
       0,     0,     0,     0, -1536,  1135,  1124,     0,     0, -1536,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1136,     0,     0,  1137,  1138,  1139,     0,
    1140,  1141,  1142,  1143,  1144,  1145,     0,     0, -1536,     0,
     493,     0,     0,     0, -1536,     0,     0,     0,   834,     0,
       0,     0,  1133,     0,     0,   494,     0,     0,     0,  1136,
       0,     0,  1137,  1138,  1139,     0,  1140,  1141,  1142,  1143,
    1144,  1145,  1135,     0,     0,  2248,     0,   821,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1133,
       0,     0,     0,  1136,     0, -1536,  1137,  1138,  1139,   495,
    1140,  1141,  1142,  1143,  1144,  1145,     0,     0,   496, -1536,
       0,     0,     0,     0, -1536,     0,     0,     0,     0,     0,
     497,     0,     0,     0,     0,   498,   835,     0,     0,     0,
       0,     0,  1135,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0, -1536,
     499,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1136,     0,     0,  1137,  1138,  1139,     0,  1140,  1141,  1142,
    1143,  1144,  1145,     0,     0,   836,     0,     0,     0, -1536,
       0,     0,     0,   837,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   500,     0,   838,     0,   501,     0,     0,
       0,     0,     0,     0,  1133,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   822,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   839,     0,     0,     0,
    1136,     0,     0,  1137,  1138,  1139,     0,  1140,  1141,  1142,
    1143,  1144,  1145,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     502,     0,     0,     0,     0,     0,  1635,     0,     0,     0,
     824,   841,     0,     0,   503,     0,     0, -1536,     0,     0,
       0,     0,     0,     0,  1140,  1141,  1142,  1143,  1144,  1145,
       0,     0,     0,   842, -1536,     0,     0,     0,     0,  1636,
       0,     0,     0,     0,     0,   504,     0,     0,   505,     0,
       0,     0,     0,   844,     0,     0,   506,     0,     0,   507,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   508,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     509,     0,     0,     0,     0,     0,     0,   510,     0,     0,
       0,     0,     0,     0,   826,     0,   511,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   868,
       0,  1480, -1536,     0,     0,     0,   512,     0,     0,  1140,
    1141,  1142,  1143,  1144,  1145,    90,    91,    92,    93,    94,
      95,    96,    97,   869,    98,    99,   100,   870,   871,   872,
     873,   874,   875,   876,   101,   102,   877,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   878,
     115,   116,   117,   118,   119,   120,   879,   880,   121,   122,
     123,   124,   125,   881,   126,   127,   128,   129,   130,   882,
     131,   883,   132,   133,   134,   135,   136,   137,   138,   139,
     140,   884,   141,   142,   143,   144,   145,   146,   885,   147,
     148,   149,   150,   886,   887,   888,   151,   889,   890,   891,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   161,
     892,   162,   893,   163,   164,   165,   166,   167,   168,   894,
     169,   170,   171,   172,   173,   895,   896,   174,   175,   176,
     177,   178,   897,   179,   180,   181,   898,   182,   183,   184,
     899,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   900,   195,   901,   196,   197,   198,   199,   902,   200,
     903,   201,   202,   904,   203,   204,   205,   206,   207,   208,
     905,   209,   906,   210,   211,   907,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   908,   223,   224,
     225,   226,   227,   228,   909,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   910,   238,   911,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   912,   913,   249,
     250,   251,   252,   914,   253,   254,   255,   915,   916,   256,
     257,   258,   259,   260,   917,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     918,   286,   287,   288,   289,   919,   290,   291,   292,   293,
     294,   295,   920,   296,   297,   921,   922,   298,   299,   300,
     923,   924,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   925,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   926,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   927,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   928,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   929,   370,   371,   372,   373,
     374,   930,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   931,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   932,   399,   400,
     933,   401,   402,   403,   404,   405,   406,   407,   934,   408,
     409,   935,   936,   410,   411,   412,   413,   414,   937,   415,
     416,   417,   418,   419,   420,   421,   938,   939,   422,   423,
     424,   425,   426,   940,   941,   427,   428,   429,   430,   431,
     432,   433,   942,   434,   435,   436,   437,   438,   439,   943,
     944,   440,   945,   946,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   868,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    90,    91,    92,    93,    94,    95,    96,    97,   869,
      98,    99,   100,   870,   871,   872,   873,   874,   875,   876,
     101,   102,   877,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   878,   115,   116,   117,   118,
     119,   120,   879,   880,   121,   122,   123,   124,   125,   881,
     126,   127,   128,   129,   130,   882,   131,   883,   132,   133,
     134,   135,   136,   137,   138,   139,   140,   884,   141,   142,
     143,   144,   145,   146,   885,   147,   148,   149,   150,   886,
     887,   888,   151,   889,   890,   891,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   161,   892,   162,   893,   163,
     164,   165,   166,   167,   168,   894,   169,   170,   171,   172,
     173,   895,   896,   174,   175,   176,   177,   178,   897,   179,
     180,   181,   898,   182,   183,   184,   899,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   900,   195,   901,
     196,   197,   198,   199,   902,   200,   903,   201,   202,   904,
     203,   204,   205,   206,   207,   208,   905,   209,   906,   210,
     211,   907,   212,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   908,   223,   224,   225,   226,   227,   228,
     909,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     910,   238,   911,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   912,   913,   249,   250,   251,   252,   914,
     253,   254,   255,   915,   916,   256,   257,   258,   259,   260,
     917,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   918,   286,   287,   288,
     289,   919,   290,   291,   292,   293,   294,   295,   920,   296,
     297,   921,   922,   298,   299,   300,   923,   924,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   925,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   926,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   927,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   928,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   929,   370,   371,   372,   373,   374,   930,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   931,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   932,   399,   400,   933,   401,   402,   403,
     404,   405,   406,   407,   934,   408,   409,   935,   936,   410,
     411,   412,   413,   414,   937,   415,   416,   417,   418,   419,
     420,   421,   938,   939,   422,   423,   424,   425,   426,   940,
     941,   427,   428,   429,   430,   431,   432,   433,   942,   434,
     435,   436,   437,   438,   439,   943,   944,   440,   945,   946,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   868,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    90,    91,    92,
      93,  1620,    95,    96,    97,   869,    98,    99,   100,   870,
     871,   872,   873,   874,   875,   876,   101,   102,   877,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   878,   115,   116,   117,   118,   119,   120,   879,   880,
     121,   122,   123,   124,   125,   881,   126,   127,   128,   129,
     130,   882,   131,   883,   132,   133,   134,   135,   136,   137,
     138,   139,   140,   884,   141,   142,   143,   144,   145,   146,
     885,   147,   148,   149,   150,   886,   887,   888,   151,   889,
     890,   891,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   161,   892,   162,   893,   163,   164,   165,   166,   167,
     168,   894,   169,   170,   171,   172,   173,   895,   896,   174,
     175,   176,  1621,   178,   897,   179,   180,   181,   898,   182,
     183,   184,   899,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   900,   195,   901,   196,   197,   198,   199,
     902,   200,   903,   201,   202,   904,   203,   204,   205,   206,
     207,   208,   905,   209,   906,   210,   211,   907,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   908,
     223,   224,   225,   226,   227,   228,   909,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   910,   238,   911,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   912,
     913,   249,   250,   251,   252,   914,   253,   254,   255,   915,
     916,   256,   257,   258,   259,   260,   917,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   918,   286,   287,   288,   289,   919,   290,   291,
     292,   293,   294,   295,   920,   296,   297,   921,   922,   298,
     299,   300,   923,   924,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     925,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     926,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   927,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   928,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   929,   370,   371,
     372,   373,   374,   930,  1622,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   931,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   932,
     399,   400,   933,   401,   402,   403,   404,   405,   406,   407,
     934,   408,   409,   935,   936,   410,   411,   412,   413,   414,
     937,   415,   416,   417,   418,   419,   420,   421,   938,   939,
     422,   423,   424,   425,   426,   940,   941,   427,   428,   429,
     430,   431,   432,   433,   942,   434,   435,   436,   437,   438,
     439,   943,   944,   440,   945,   946,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,    89,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    90,    91,    92,    93,    94,    95,    96,
      97,     0,    98,    99,   100,     0,     0,     0,     0,     0,
       0,     0,   101,   102,     0,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,     0,   115,   116,
     117,   118,   119,   120,     0,   679,   121,   122,   123,   124,
     125,     0,   126,   127,   128,   129,   682,     0,   683,     0,
     132,   133,   134,   135,   136,   137,   138,   139,   140,     0,
     141,   142,   143,   144,   145,   146,     0,   147,   148,   149,
     150,   684,   685,   686,   687,   688,   689,   690,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,     0,   162,
       0,   163,   164,   165,   166,   167,   168,     0,   169,   170,
     171,   172,   173,     0,     0,   174,   175,   176,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   696,     0,
     195,     0,   196,   197,   198,   199,     0,   200,     0,   201,
     202,     0,   203,   204,   205,   206,   207,   208,     0,   209,
       0,   210,   211,     0,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,     0,   223,   224,   225,   226,
     227,   228,     0,   229,   230,   231,   232,   233,   234,   235,
     236,   237,     0,   238,     0,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,     0,     0,   249,   250,   251,
     252,     0,   253,   254,   255,   702,   703,   256,   257,   258,
     259,   260,     0,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,     0,   286,
     287,   288,   289,     0,   708,   291,   292,   293,   294,   295,
       0,   296,   297,     0,     0,   298,   299,   300,     0,     0,
     301,   302,   303,   304,   305,   711,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,     0,   317,   318,   712,
     320,   321,   322,   323,   324,   325,     0,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,     0,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,     0,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,     0,   370,   371,   372,   373,   374,   715,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
       0,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   717,     0,   399,   400,     0,   401,
     402,   403,   404,   405,   406,   407,     0,   408,   409,     0,
       0,   410,   411,   720,   413,   721,     0,   415,   416,   417,
     418,   419,   420,   421,     0,     0,   422,   423,   424,   425,
     426,   723,     0,   427,   428,   429,   430,   431,   432,   433,
       0,   434,   435,   436,   437,   438,   439,     0,     0,   440,
       0,     0,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   649,     0,   531,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    90,
      91,    92,    93,    94,    95,    96,    97,     0,    98,    99,
     100,     0,     0,     0,     0,     0,     0,     0,   101,   102,
       0,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,     0,   115,   116,   117,   118,   119,   120,
       0,     0,   121,   122,   123,   124,   125,     0,   126,   127,
     128,   129,   130,     0,   131,     0,   132,   133,   134,   135,
     136,   137,   138,   139,   140,     0,   141,   142,   143,   144,
     145,   146,     0,   147,   148,   149,   150,     0,     0,     0,
     151,     0,     0,     0,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   161,     0,   162,     0,   163,   164,   165,
     166,   167,   168,     0,   169,   170,   171,   172,   173,     0,
       0,   174,   175,   176,   177,   178,     0,   179,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,   994,   195,     0,   196,   197,
     198,   199,     0,   200,     0,   201,   202,     0,   203,   204,
     205,   206,   207,   208,     0,   209,     0,   210,   211,     0,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,     0,   223,   224,   225,   226,   227,   228,     0,   229,
     230,   231,   232,   233,   234,   235,   236,   237,     0,   238,
       0,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,     0,     0,   249,   250,   251,   252,     0,   253,   254,
     255,     0,     0,   256,   257,   258,   259,   260,     0,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,     0,   286,   287,   288,   289,     0,
     290,   291,   292,   293,   294,   295,     0,   296,   297,   995,
       0,   298,   299,   300,     0,     0,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,     0,   317,   318,   319,   320,   321,   322,   323,
     324,   325,     0,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,     0,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
       0,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,     0,
     370,   371,   372,   373,   374,     0,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,     0,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,     0,   399,   400,     0,   401,   402,   403,   404,   405,
     406,   407,     0,   408,   409,     0,     0,   410,   411,   412,
     413,   414,   996,   415,   416,   417,   418,   419,   420,   421,
       0,     0,   422,   423,   424,   425,   426,     0,     0,   427,
     428,   429,   430,   431,   432,   433,     0,   434,   435,   436,
     437,   438,   439,     0,     0,   440,     0,     0,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   649,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    90,    91,    92,    93,    94,
      95,    96,    97,     0,    98,    99,   100,     3,     4,     0,
       0,     0,     0,     0,   101,   102,     0,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,     0,
     115,   116,   117,   118,   119,   120,     0,     0,   121,   122,
     123,   124,   125,     0,   126,   127,   128,   129,   130,     0,
     131,     0,   132,   133,   134,   135,   136,   137,   138,   139,
     140,     0,   141,   142,   143,   144,   145,   146,     0,   147,
     148,   149,   150,     0,     0,     0,   151,     0,     0,     0,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   161,
       0,   162,     0,   163,   164,   165,   166,   167,   168,     0,
     169,   170,   171,   172,   173,     0,     0,   174,   175,   176,
     177,   178,     0,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,     0,   195,     0,   196,   197,   198,   199,     0,   200,
       0,   201,   202,     0,   203,   204,   205,   206,   207,   208,
       0,   209,     0,   210,   211,     0,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,     0,   223,   224,
     225,   226,   227,   228,     0,   229,   230,   231,   232,   233,
     234,   235,   236,   237,     0,   238,     0,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,     0,     0,   249,
     250,   251,   252,     0,   253,   254,   255,     0,     0,   256,
     257,   258,   259,   260,     0,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
       0,   286,   287,   288,   289,     0,   290,   291,   292,   293,
     294,   295,     0,   296,   297,     0,     0,   298,   299,   300,
       0,     0,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,     0,   317,
     318,   319,   320,   321,   322,   323,   324,   325,     0,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,     0,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,     0,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,     0,   370,   371,   372,   373,
     374,     0,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,     0,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,     0,   399,   400,
       0,   401,   402,   403,   404,   405,   406,   407,     0,   408,
     409,     0,     0,   410,   411,   412,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,     0,     0,   422,   423,
     424,   425,   426,     0,     0,   427,   428,   429,   430,   431,
     432,   433,     0,   434,   435,   436,   437,   438,   439,     0,
       0,   440,     0,     0,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,    89,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    90,    91,    92,    93,    94,    95,    96,    97,     0,
      98,    99,   100,     0,     0,     0,     0,     0,     0,     0,
     101,   102,     0,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,     0,   115,   116,   117,   118,
     119,   120,     0,     0,   121,   122,   123,   124,   125,     0,
     126,   127,   128,   129,   130,     0,   131,     0,   132,   133,
     134,   135,   136,   137,   138,   139,   140,     0,   141,   142,
     143,   144,   145,   146,     0,   147,   148,   149,   150,     0,
       0,     0,   151,     0,     0,     0,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   161,     0,   162,     0,   163,
     164,   165,   166,   167,   168,     0,   169,   170,   171,   172,
     173,     0,     0,   174,   175,   176,   177,   178,     0,   179,
     180,   181,     0,   182,   183,   184,     0,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,     0,   195,     0,
     196,   197,   198,   199,     0,   200,     0,   201,   202,     0,
     203,   204,   205,   206,   207,   208,     0,   209,     0,   210,
     211,     0,   212,   213,   214,   215,   216,   217,   218,   219,
     220,   221,   222,     0,   223,   224,   225,   226,   227,   228,
       0,   229,   230,   231,   232,   233,   234,   235,   236,   237,
       0,   238,     0,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,     0,     0,   249,   250,   251,   252,     0,
     253,   254,   255,     0,     0,   256,   257,   258,   259,   260,
       0,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,     0,   286,   287,   288,
     289,     0,   290,   291,   292,   293,   294,   295,     0,   296,
     297,     0,     0,   298,   299,   300,     0,     0,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,     0,   317,   318,   319,   320,   321,
     322,   323,   324,   325,     0,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,     0,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,     0,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,     0,   370,   371,   372,   373,   374,     0,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,     0,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,     0,   399,   400,     0,   401,   402,   403,
     404,   405,   406,   407,     0,   408,   409,     0,     0,   410,
     411,   412,   413,   414,     0,   415,   416,   417,   418,   419,
     420,   421,     0,     0,   422,   423,   424,   425,   426,     0,
       0,   427,   428,   429,   430,   431,   432,   433,     0,   434,
     435,   436,   437,   438,   439,     0,     0,   440,     0,     0,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   486,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    90,    91,    92,
      93,    94,    95,    96,    97,     0,    98,    99,   100,     0,
       0,     0,     0,     0,     0,     0,   101,   102,     0,   103,
     104,   105,     0,   107,   108,   109,   110,   111,     0,   113,
     114,     0,   115,   116,   117,   118,   119,   120,     0,     0,
     121,   122,   123,   124,   125,  1229,   126,   127,   128,   129,
     130,     0,     0,  1230,   132,   133,   134,   135,   136,     0,
     138,   139,   140,  1231,   141,   142,   143,   144,   145,   146,
       0,     0,   148,   149,   150,     0,     0,     0,     0,     0,
       0,     0,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   161,     0,   162,     0,   163,   164,   165,   166,   167,
     168,     0,   169,   170,   171,   172,   173,     0,     0,   174,
     175,   176,   177,   178,     0,   179,   180,   181,     0,   182,
     183,   184,     0,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,     0,   195,     0,   196,   197,   198,   199,
       0,   200,  1232,   201,     0,     0,     0,   204,   205,   206,
       0,   208,     0,   209,     0,   210,   211,     0,   212,   213,
     214,   215,   216,  1233,     0,   219,   220,   221,   222,     0,
     223,   224,   225,   226,   227,   228,     0,   229,     0,   231,
     232,   233,   234,   235,   236,   237,     0,   238,     0,   239,
       0,     0,   242,     0,   244,   245,   246,   247,   248,     0,
       0,   249,     0,   251,     0,     0,   253,   254,   255,     0,
       0,   256,   257,   258,   259,   260,     0,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,     0,   281,   282,   283,
     284,   285,     0,   286,   287,     0,   289,     0,   290,   291,
     292,   293,   294,   295,     0,   296,   297,     0,     0,   298,
     299,   300,     0,     0,   301,   302,     0,   304,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
       0,   317,   318,   319,   320,   321,   322,   323,   324,   325,
    1234,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,     0,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,     0,   352,
     353,     0,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,     0,   370,   371,
     372,   373,   374,     0,   375,   376,   377,   378,   379,     0,
     381,   382,   383,   384,     0,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,     0,
     399,   400,     0,   401,     0,   403,   404,   405,   406,   407,
       0,   408,   409,     0,     0,   410,   411,   412,   413,   414,
       0,   415,   416,   417,   418,   419,   420,   421,     0,  1235,
     422,   423,   424,   425,   426,     0,     0,   427,   428,   429,
     430,   431,   432,   433,     0,   434,     0,   436,   437,   438,
     439,     0,     0,   440,     0,     0,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   486,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    90,    91,    92,    93,    94,    95,    96,
      97,     0,    98,    99,   100,     0,     0,     0,     0,     0,
       0,     0,   101,   102,     0,   103,   104,   105,     0,   107,
     108,   109,   110,   111,     0,   113,   114,     0,   115,   116,
     117,   118,   119,   120,     0,     0,   121,   122,   123,   124,
     125,  1229,   126,   127,   128,   129,   130,     0,     0,     0,
     132,   133,   134,   135,   136,     0,   138,   139,   140,  1231,
     141,   142,   143,   144,   145,   146,     0,     0,   148,   149,
     150,     0,     0,     0,     0,     0,     0,     0,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,     0,   162,
       0,   163,   164,   165,   166,   167,   168,     0,   169,   170,
     171,   172,   173,     0,     0,   174,   175,   176,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,     0,
     195,     0,   196,   197,   198,   199,     0,   200,  1232,   201,
       0,     0,     0,   204,   205,   206,     0,   208,     0,   209,
       0,   210,   211,     0,   212,   213,   214,   215,   216,   217,
       0,   219,   220,   221,   222,     0,   223,   224,   225,   226,
     227,   228,     0,   229,     0,   231,   232,   233,   234,   235,
     236,   237,     0,   238,     0,   239,     0,     0,   242,     0,
     244,   245,   246,   247,   248,     0,     0,   249,     0,   251,
    1683,     0,   253,   254,   255,     0,     0,   256,   257,   258,
     259,   260,     0,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,     0,   281,   282,   283,   284,   285,     0,   286,
     287,     0,   289,     0,   290,   291,   292,   293,   294,   295,
       0,   296,   297,     0,     0,   298,   299,   300,     0,     0,
     301,   302,     0,   304,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,     0,   317,   318,   319,
     320,   321,   322,   323,   324,   325,  1234,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,     0,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,     0,   352,   353,     0,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,     0,   370,   371,   372,   373,   374,     0,
     375,   376,   377,   378,   379,     0,   381,   382,   383,   384,
       0,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,     0,   399,   400,     0,   401,
       0,   403,   404,   405,   406,   407,     0,   408,   409,     0,
       0,   410,   411,   412,   413,   414,     0,   415,   416,   417,
     418,   419,   420,   421,     0,  1235,   422,   423,   424,   425,
     426,     0,     0,   427,   428,   429,   430,   431,   432,   433,
       0,   434,     0,   436,   437,   438,   439,     0,     0,   440,
       0,     0,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   486,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    90,
      91,    92,    93,    94,    95,    96,    97,     0,    98,    99,
     100,     3,     4,     0,     0,     0,     0,     0,   101,   102,
       0,   103,   104,   105,     0,   107,   108,   109,   110,   111,
       0,   113,   114,     0,   115,   116,   117,   118,   119,   120,
       0,     0,   121,   122,   123,   124,   125,     0,   126,   127,
     128,   129,   130,     0,     0,     0,   132,   133,   134,   135,
     136,     0,   138,   139,   140,     0,   141,   142,   143,   144,
     145,   146,     0,     0,   148,   149,   150,     0,     0,     0,
       0,     0,     0,     0,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   161,     0,   162,     0,   163,   164,   165,
     166,   167,   168,     0,   169,   170,   171,   172,   173,     0,
       0,   174,   175,   176,   177,   178,     0,   179,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,     0,   195,     0,   196,   197,
     198,   199,     0,   200,     0,   201,     0,     0,     0,   204,
     205,   206,     0,   208,     0,   209,     0,   210,   211,     0,
     212,   213,   214,   215,   216,   217,     0,   219,   220,   221,
     222,     0,   223,   224,   225,   226,   227,   228,     0,   229,
       0,   231,   232,   233,   234,   235,   236,   237,     0,   238,
       0,   239,     0,     0,   242,     0,   244,   245,   246,   247,
     248,     0,     0,   249,     0,   251,     0,     0,   253,   254,
     255,     0,     0,   256,   257,   258,   259,   260,     0,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,     0,   281,
     282,   283,   284,   285,     0,   286,   287,     0,   289,     0,
     290,   291,   292,   293,   294,   295,     0,   296,   297,     0,
       0,   298,   299,   300,     0,     0,   301,   302,     0,   304,
       0,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,     0,   317,   318,   319,   320,   321,   322,   323,
     324,   325,     0,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,     0,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
       0,   352,   353,     0,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,     0,
     370,   371,   372,   373,   374,     0,   375,   376,   377,   378,
     379,     0,   381,   382,   383,   384,     0,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,     0,   399,   400,     0,   401,     0,   403,   404,   405,
     406,   407,     0,   408,   409,     0,     0,   410,   411,   412,
     413,   414,     0,   415,   416,   417,   418,   419,   420,   421,
       0,     0,   422,   423,   424,   425,   426,     0,     0,   427,
     428,   429,   430,   431,   432,   433,     0,   434,     0,   436,
     437,   438,   439,     0,     0,   440,     0,     0,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   486,
    2399,     0,     0,     0,     0,  2400,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    90,    91,    92,    93,    94,
      95,    96,    97,     0,    98,    99,   100,     0,     0,     0,
       0,     0,     0,     0,   101,   102,     0,   103,   104,   105,
       0,   107,   108,   109,   110,   111,     0,   113,   114,     0,
     115,   116,   117,   118,   119,   120,     0,     0,   121,   122,
     123,   124,   125,     0,   126,   127,   128,   129,   130,     0,
       0,     0,   132,   133,   134,   135,   136,     0,   138,   139,
     140,     0,   141,   142,   143,   144,   145,   146,     0,     0,
     148,   149,   150,     0,     0,     0,     0,     0,     0,     0,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   161,
       0,   162,     0,   163,   164,   165,   166,   167,   168,     0,
     169,   170,   171,   172,   173,     0,     0,   174,   175,   176,
     177,   178,     0,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,     0,   195,     0,   196,   197,   198,   199,     0,   200,
       0,   201,     0,     0,     0,   204,   205,   206,     0,   208,
       0,   209,     0,   210,   211,     0,   212,   213,   214,   215,
     216,   217,     0,   219,   220,   221,   222,     0,   223,   224,
     225,   226,   227,   228,     0,   229,     0,   231,   232,   233,
     234,   235,   236,   237,     0,   238,     0,   239,     0,     0,
     242,     0,   244,   245,   246,   247,   248,     0,     0,   249,
       0,   251,     0,     0,   253,   254,   255,     0,     0,   256,
     257,   258,   259,   260,     0,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,     0,   281,   282,   283,   284,   285,
       0,   286,   287,     0,   289,     0,   290,   291,   292,   293,
     294,   295,     0,   296,   297,     0,     0,   298,   299,   300,
       0,     0,   301,   302,     0,   304,     0,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,     0,   317,
     318,   319,   320,   321,   322,   323,   324,   325,     0,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,     0,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,     0,   352,   353,     0,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,     0,   370,   371,   372,   373,
     374,     0,   375,   376,   377,   378,   379,     0,   381,   382,
     383,   384,     0,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,     0,   399,   400,
       0,   401,     0,   403,   404,   405,   406,   407,     0,   408,
     409,     0,     0,   410,   411,   412,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,     0,     0,   422,   423,
     424,   425,   426,     0,     0,   427,   428,   429,   430,   431,
     432,   433,     0,   434,     0,   436,   437,   438,   439,     0,
       0,   440,     0,     0,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   486,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    90,    91,    92,    93,    94,    95,    96,    97,   487,
      98,    99,   100,     0,     0,     0,     0,     0,     0,     0,
     101,   102,     0,   103,   104,   105,     0,   107,   108,   109,
     110,   111,     0,   113,   114,     0,   115,   116,   117,   118,
     119,   120,     0,     0,   121,   122,   123,   124,   125,     0,
     126,   127,   128,   129,   130,     0,     0,     0,   132,   133,
     134,   135,   136,     0,   138,   139,   140,     0,   141,   142,
     143,   144,   145,   146,     0,     0,   148,   149,   150,     0,
       0,     0,     0,     0,     0,     0,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   161,     0,   162,     0,   163,
     164,   165,   166,   167,   168,     0,   169,   170,   171,   172,
     173,     0,     0,   174,   175,   176,   177,   178,     0,   179,
     180,   181,     0,   182,   183,   184,     0,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,     0,   195,     0,
     196,   197,   198,   199,     0,   200,     0,   201,     0,     0,
       0,   204,   205,   206,     0,   208,     0,   209,     0,   210,
     211,     0,   212,   213,   214,   215,   216,   217,     0,   219,
     220,   221,   222,     0,   223,   224,   225,   226,   227,   228,
       0,   229,     0,   231,   232,   233,   234,   235,   236,   237,
       0,   238,     0,   239,     0,     0,   242,     0,   244,   245,
     246,   247,   248,     0,     0,   249,     0,   251,     0,     0,
     253,   254,   255,     0,     0,   256,   257,   258,   259,   260,
       0,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
       0,   281,   282,   283,   284,   285,     0,   286,   287,     0,
     289,     0,   290,   291,   292,   293,   294,   295,     0,   296,
     297,     0,     0,   298,   299,   300,     0,     0,   301,   302,
       0,   304,     0,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,     0,   317,   318,   319,   320,   321,
     322,   488,   324,   325,     0,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,     0,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,     0,   352,   353,     0,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,     0,   370,   371,   372,   373,   374,     0,   375,   376,
     377,   378,   379,     0,   381,   382,   383,   384,     0,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,     0,   399,   400,     0,   401,     0,   403,
     404,   405,   406,   407,     0,   408,   409,     0,     0,   410,
     411,   412,   413,   414,     0,   415,   416,   417,   418,   419,
     420,   421,     0,     0,   422,   423,   424,   425,   426,     0,
       0,   427,   428,   429,   430,   431,   432,   433,     0,   434,
       0,   436,   437,   438,   439,     0,     0,   440,     0,     0,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   486,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    90,    91,    92,
      93,    94,    95,    96,    97,   536,    98,    99,   100,     0,
       0,     0,     0,     0,     0,     0,   101,   102,     0,   103,
     104,   105,     0,   107,   108,   109,   110,   111,     0,   113,
     114,     0,   115,   116,   117,   118,   119,   120,     0,     0,
     121,   122,   123,   124,   125,     0,   126,   127,   128,   129,
     130,     0,     0,     0,   132,   133,   134,   135,   136,     0,
     138,   139,   140,     0,   141,   142,   143,   144,   145,   146,
       0,     0,   148,   149,   150,     0,     0,     0,     0,     0,
       0,     0,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   161,     0,   162,     0,   163,   164,   165,   166,   167,
     168,     0,   169,   170,   171,   172,   173,     0,     0,   174,
     175,   176,   177,   178,     0,   179,   180,   181,     0,   182,
     183,   184,     0,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,     0,   195,     0,   196,   197,   198,   199,
       0,   200,     0,   201,     0,     0,     0,   204,   205,   206,
       0,   208,     0,   209,     0,   210,   211,     0,   212,   213,
     214,   215,   216,   217,     0,   219,   220,   221,   222,     0,
     223,   224,   225,   226,   227,   228,     0,   229,     0,   231,
     232,   233,   234,   235,   236,   237,     0,   238,     0,   239,
       0,     0,   242,     0,   244,   245,   246,   247,   248,     0,
       0,   249,     0,   251,     0,     0,   253,   254,   255,     0,
       0,   256,   257,   258,   259,   260,     0,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,     0,   281,   282,   283,
     284,   285,     0,   286,   287,     0,   289,     0,   290,   291,
     292,   293,   294,   295,     0,   296,   297,     0,     0,   298,
     299,   300,     0,     0,   301,   302,     0,   304,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
       0,   317,   318,   319,   320,   321,   322,   323,   324,   325,
       0,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,     0,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,     0,   352,
     353,     0,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,     0,   370,   371,
     372,   373,   374,     0,   375,   376,   377,   378,   379,     0,
     381,   382,   383,   384,     0,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,     0,
     399,   400,     0,   401,     0,   403,   404,   405,   406,   407,
       0,   537,   409,     0,     0,   538,   411,   412,   413,   414,
       0,   415,   416,   417,   418,   419,   420,   421,     0,     0,
     422,   423,   424,   425,   426,     0,     0,   427,   428,   429,
     430,   431,   432,   433,     0,   434,     0,   436,   437,   438,
     439,     0,     0,   440,     0,     0,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   486,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    90,    91,    92,    93,    94,    95,    96,
      97,     0,    98,    99,   100,     0,     0,     0,     0,     0,
       0,     0,   101,   102,     0,   103,   104,   105,     0,   107,
     108,   109,   110,   111,     0,   113,   114,     0,   115,   116,
     117,   118,   119,   120,     0,     0,   121,   122,   123,   124,
     125,     0,   126,   127,   128,   129,   130,     0,     0,     0,
     132,   133,   134,   135,   136,     0,   138,   139,   140,     0,
     141,   142,   143,   144,   145,   146,     0,     0,   148,   149,
     150,     0,     0,     0,     0,     0,     0,     0,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,     0,   162,
       0,   163,   164,   165,   166,   167,   168,     0,   169,   170,
     171,   172,   173,     0,     0,   174,   175,   176,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,     0,
     195,     0,   196,   197,   198,   199,     0,   200,     0,   201,
       0,     0,     0,   204,   205,   206,     0,   208,     0,   209,
       0,   210,   211,     0,   212,   213,   214,   215,   216,   217,
       0,   219,   220,   221,   222,     0,   223,   224,   225,   226,
     227,   228,     0,   229,     0,   231,   232,   233,   234,   235,
     236,   237,     0,   238,     0,   239,     0,     0,   242,     0,
     244,   245,   246,   247,   248,     0,     0,   249,     0,   251,
       0,     0,   253,   254,   255,     0,     0,   256,   257,   258,
     259,   260,     0,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,     0,   281,   282,   283,   284,   285,     0,   286,
     287,     0,   289,     0,   290,   291,   292,   293,   294,   295,
       0,   296,   297,     0,   556,   298,   299,   300,     0,     0,
     301,   302,     0,   304,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,     0,   317,   318,   319,
     320,   321,   322,   323,   324,   325,     0,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,     0,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,     0,   352,   353,     0,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,     0,   370,   371,   372,   373,   374,     0,
     375,   376,   377,   378,   379,     0,   381,   382,   383,   384,
       0,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,     0,   399,   400,     0,   401,
       0,   403,   404,   405,   406,   407,     0,   408,   409,     0,
       0,   410,   411,   412,   413,   414,     0,   415,   416,   417,
     418,   419,   420,   421,     0,     0,   422,   423,   424,   425,
     426,     0,     0,   427,   428,   429,   430,   431,   432,   433,
       0,   434,     0,   436,   437,   438,   439,     0,     0,   440,
       0,     0,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   486,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    90,
      91,    92,    93,    94,    95,    96,    97,     0,    98,    99,
     100,     0,     0,     0,     0,     0,     0,     0,   101,   102,
       0,   103,   104,   105,     0,   107,   108,   109,   110,   111,
       0,   113,   114,     0,   115,   116,   117,   118,   119,   120,
       0,     0,   121,   122,   123,   124,   125,     0,   126,   127,
     128,   129,   130,     0,     0,     0,   132,   133,   134,   135,
     136,     0,   138,   139,   140,     0,   141,   142,   143,   144,
     145,   146,     0,     0,   148,   149,   150,     0,     0,     0,
       0,     0,     0,     0,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   161,     0,   162,     0,   163,   164,   165,
     166,   167,   168,     0,   169,   170,   171,   172,   173,     0,
       0,   174,   175,   176,   177,   178,     0,   179,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,     0,   195,     0,   196,   197,
     198,   199,     0,   200,     0,   201,     0,     0,     0,   204,
     205,   206,     0,   208,     0,   209,     0,   210,   211,     0,
     212,   213,   214,   215,   216,   600,     0,   219,   220,   221,
     222,     0,   223,   224,   225,   226,   227,   228,     0,   229,
       0,   231,   232,   233,   234,   235,   236,   237,     0,   238,
       0,   239,     0,     0,   242,     0,   244,   245,   246,   247,
     248,     0,     0,   249,     0,   251,     0,     0,   253,   254,
     255,     0,     0,   256,   257,   258,   259,   260,     0,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,     0,   281,
     282,   283,   284,   285,     0,   286,   287,     0,   289,     0,
     290,   291,   292,   293,   294,   295,     0,   296,   297,     0,
     556,   298,   299,   300,     0,     0,   301,   302,     0,   304,
       0,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,     0,   317,   318,   319,   320,   321,   322,   323,
     324,   325,     0,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,     0,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
       0,   352,   353,     0,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,     0,
     370,   371,   372,   373,   374,     0,   375,   376,   377,   378,
     379,     0,   381,   382,   383,   384,     0,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,     0,   399,   400,     0,   401,     0,   403,   404,   405,
     406,   407,     0,   408,   409,     0,     0,   410,   411,   412,
     413,   414,     0,   415,   416,   417,   418,   419,   420,   421,
       0,     0,   422,   423,   424,   425,   426,     0,     0,   427,
     428,   429,   430,   431,   432,   433,     0,   434,     0,   436,
     437,   438,   439,     0,     0,   440,     0,     0,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   486,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    90,    91,    92,    93,    94,
      95,    96,    97,   628,    98,    99,   100,     0,     0,     0,
       0,     0,     0,     0,   101,   102,     0,   103,   104,   105,
       0,   107,   108,   109,   110,   111,     0,   113,   114,     0,
     115,   116,   117,   118,   119,   120,     0,     0,   121,   122,
     123,   124,   125,     0,   126,   127,   128,   129,   130,     0,
       0,     0,   132,   133,   134,   135,   136,     0,   138,   139,
     140,     0,   141,   142,   143,   144,   145,   146,     0,     0,
     148,   149,   150,     0,     0,     0,     0,     0,     0,     0,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   161,
       0,   162,     0,   163,   164,   165,   166,   167,   168,     0,
     169,   170,   171,   172,   173,     0,     0,   174,   175,   176,
     177,   178,     0,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,     0,   195,     0,   196,   197,   198,   199,     0,   200,
       0,   201,     0,     0,     0,   204,   205,   206,     0,   208,
       0,   209,     0,   210,   211,     0,   212,   213,   214,   215,
     216,   217,     0,   219,   220,   221,   222,     0,   223,   224,
     225,   226,   227,   228,     0,   229,     0,   231,   232,   233,
     234,   235,   236,   237,     0,   238,     0,   239,     0,     0,
     242,     0,   244,   245,   246,   247,   248,     0,     0,   249,
       0,   251,     0,     0,   253,   254,   255,     0,     0,   256,
     257,   258,   259,   260,     0,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,     0,   281,   282,   283,   284,   285,
       0,   286,   287,     0,   289,     0,   290,   291,   292,   293,
     294,   295,     0,   296,   297,     0,     0,   298,   299,   300,
       0,     0,   301,   302,     0,   304,     0,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,     0,   317,
     318,   319,   320,   321,   322,   323,   324,   325,     0,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,     0,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,     0,   352,   353,     0,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,     0,   370,   371,   372,   373,
     374,     0,   375,   376,   377,   378,   379,     0,   381,   382,
     383,   384,     0,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,     0,   399,   400,
       0,   401,     0,   403,   404,   405,   406,   407,     0,   408,
     409,     0,     0,   410,   411,   412,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,     0,     0,   422,   423,
     424,   425,   426,     0,     0,   427,   428,   429,   430,   431,
     432,   433,     0,   434,     0,   436,   437,   438,   439,     0,
       0,   440,     0,     0,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   486,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    90,    91,    92,    93,    94,    95,    96,    97,     0,
      98,    99,   100,     0,     0,     0,     0,     0,     0,     0,
     101,   102,     0,   103,   104,   105,     0,   107,   108,   109,
     110,   111,     0,   113,   114,     0,   115,   116,   117,   118,
     119,   120,     0,     0,   121,   122,   123,   124,   125,     0,
     126,   127,   128,   129,   130,     0,     0,     0,   132,   133,
     134,   135,   136,     0,   138,   139,   140,     0,   141,   142,
     143,   144,   145,   146,     0,     0,   148,   149,   150,     0,
       0,     0,     0,     0,     0,     0,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   161,     0,   162,     0,   163,
     164,   165,   166,   167,   168,     0,   169,   170,   171,   172,
     173,     0,     0,   174,   175,   176,   177,   178,     0,   179,
     180,   181,     0,   182,   183,   184,     0,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,     0,   195,     0,
     196,   197,   198,   199,     0,   200,     0,   201,     0,     0,
       0,   204,   205,   206,     0,  1533,     0,   209,     0,   210,
     211,     0,   212,   213,   214,   215,   216,   217,     0,   219,
     220,   221,   222,     0,   223,   224,   225,   226,   227,   228,
       0,   229,     0,   231,   232,   233,   234,   235,   236,   237,
       0,   238,     0,   239,     0,     0,   242,     0,   244,   245,
     246,   247,   248,     0,     0,   249,     0,   251,     0,     0,
     253,   254,  1534,     0,     0,   256,   257,   258,   259,   260,
       0,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
       0,   281,   282,   283,   284,   285,     0,   286,   287,     0,
     289,     0,   290,   291,   292,   293,   294,   295,     0,   296,
     297,     0,     0,   298,   299,   300,     0,     0,   301,   302,
       0,   304,     0,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,     0,   317,   318,   319,   320,   321,
     322,   323,   324,   325,     0,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,     0,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,     0,   352,   353,     0,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,     0,   370,   371,   372,   373,   374,     0,   375,   376,
     377,   378,   379,     0,   381,   382,   383,   384,     0,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,     0,   399,   400,  1535,   401,     0,   403,
    1536,   405,  1537,   407,     0,   408,   409,     0,     0,   410,
     411,   412,   413,   414,     0,   415,   416,   417,   418,   419,
     420,   421,     0,     0,   422,   423,  1538,   425,   426,     0,
       0,   427,   428,   429,   430,   431,   432,   433,     0,   434,
       0,   436,   437,   438,   439,     0,     0,   440,     0,     0,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   486,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    90,    91,    92,
      93,    94,    95,    96,    97,     0,    98,    99,   100,     0,
       0,     0,     0,     0,  2088,     0,   101,   102,     0,   103,
     104,   105,     0,   107,   108,   109,   110,   111,     0,   113,
     114,     0,   115,   116,   117,   118,   119,   120,     0,     0,
     121,   122,   123,   124,   125,     0,   126,   127,   128,   129,
     130,     0,     0,     0,   132,   133,   134,   135,   136,     0,
     138,   139,   140,     0,   141,   142,   143,   144,   145,   146,
       0,     0,   148,   149,   150,     0,     0,     0,     0,     0,
       0,     0,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   161,     0,   162,     0,   163,   164,   165,   166,   167,
     168,     0,   169,   170,   171,   172,   173,     0,     0,   174,
     175,   176,   177,   178,     0,   179,   180,   181,     0,   182,
     183,   184,     0,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,     0,   195,     0,   196,   197,   198,   199,
       0,   200,     0,   201,     0,     0,     0,   204,   205,   206,
       0,   208,     0,   209,     0,   210,   211,     0,   212,   213,
     214,   215,   216,   217,     0,   219,   220,   221,   222,     0,
     223,   224,   225,   226,   227,   228,     0,   229,     0,   231,
     232,   233,   234,   235,   236,   237,     0,   238,     0,   239,
       0,     0,   242,     0,   244,   245,   246,   247,   248,     0,
       0,   249,     0,   251,     0,     0,   253,   254,   255,     0,
       0,   256,   257,   258,   259,   260,     0,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,     0,   281,   282,   283,
     284,   285,     0,   286,   287,     0,   289,     0,   290,   291,
     292,   293,   294,   295,     0,   296,   297,     0,     0,   298,
     299,   300,     0,     0,   301,   302,     0,   304,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
       0,   317,   318,   319,   320,   321,   322,   323,   324,   325,
       0,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,     0,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,     0,   352,
     353,     0,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,     0,   370,   371,
     372,   373,   374,     0,   375,   376,   377,   378,   379,     0,
     381,   382,   383,   384,     0,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,     0,
     399,   400,     0,   401,     0,   403,   404,   405,   406,   407,
       0,   408,   409,     0,     0,   410,   411,   412,   413,   414,
       0,   415,   416,   417,   418,   419,   420,   421,     0,     0,
     422,   423,   424,   425,   426,     0,     0,   427,   428,   429,
     430,   431,   432,   433,     0,   434,     0,   436,   437,   438,
     439,     0,     0,   440,     0,     0,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   486,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    90,    91,    92,    93,    94,    95,    96,
      97,     0,    98,    99,   100,     0,     0,     0,     0,     0,
    2102,     0,   101,   102,     0,   103,   104,   105,     0,   107,
     108,   109,   110,   111,     0,   113,   114,     0,   115,   116,
     117,   118,   119,   120,     0,     0,   121,   122,   123,   124,
     125,     0,   126,   127,   128,   129,   130,     0,     0,     0,
     132,   133,   134,   135,   136,     0,   138,   139,   140,     0,
     141,   142,   143,   144,   145,   146,     0,     0,   148,   149,
     150,     0,     0,     0,     0,     0,     0,     0,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,     0,   162,
       0,   163,   164,   165,   166,   167,   168,     0,   169,   170,
     171,   172,   173,     0,     0,   174,   175,   176,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,     0,
     195,     0,   196,   197,   198,   199,     0,   200,     0,   201,
       0,     0,     0,   204,   205,   206,     0,   208,     0,   209,
       0,   210,   211,     0,   212,   213,   214,   215,   216,   217,
       0,   219,   220,   221,   222,     0,   223,   224,   225,   226,
     227,   228,     0,   229,     0,   231,   232,   233,   234,   235,
     236,   237,     0,   238,     0,   239,     0,     0,   242,     0,
     244,   245,   246,   247,   248,     0,     0,   249,     0,   251,
       0,     0,   253,   254,   255,     0,     0,   256,   257,   258,
     259,   260,     0,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,     0,   281,   282,   283,   284,   285,     0,   286,
     287,     0,   289,     0,   290,   291,   292,   293,   294,   295,
       0,   296,   297,     0,     0,   298,   299,   300,     0,     0,
     301,   302,     0,   304,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,     0,   317,   318,   319,
     320,   321,   322,   323,   324,   325,     0,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,     0,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,     0,   352,   353,     0,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,     0,   370,   371,   372,   373,   374,     0,
     375,   376,   377,   378,   379,     0,   381,   382,   383,   384,
       0,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,     0,   399,   400,     0,   401,
       0,   403,   404,   405,   406,   407,     0,   408,   409,     0,
       0,   410,   411,   412,   413,   414,     0,   415,   416,   417,
     418,   419,   420,   421,     0,     0,   422,   423,   424,   425,
     426,     0,     0,   427,   428,   429,   430,   431,   432,   433,
       0,   434,     0,   436,   437,   438,   439,     0,     0,   440,
       0,     0,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   486,     0,  2262,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    90,
      91,    92,    93,    94,    95,    96,    97,     0,    98,    99,
     100,     0,     0,     0,     0,     0,     0,     0,   101,   102,
       0,   103,   104,   105,     0,   107,   108,   109,   110,   111,
       0,   113,   114,     0,   115,   116,   117,   118,   119,   120,
       0,     0,   121,   122,   123,   124,   125,     0,   126,   127,
     128,   129,   130,     0,     0,     0,   132,   133,   134,   135,
     136,     0,   138,   139,   140,     0,   141,   142,   143,   144,
     145,   146,     0,     0,   148,   149,   150,     0,     0,     0,
       0,     0,     0,     0,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   161,     0,   162,     0,   163,   164,   165,
     166,   167,   168,     0,   169,   170,   171,   172,   173,     0,
       0,   174,   175,   176,   177,   178,     0,   179,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,     0,   195,     0,   196,   197,
     198,   199,     0,   200,     0,   201,     0,     0,     0,   204,
     205,   206,     0,   208,     0,   209,     0,   210,   211,     0,
     212,   213,   214,   215,   216,   217,     0,   219,   220,   221,
     222,     0,   223,   224,   225,   226,   227,   228,     0,   229,
       0,   231,   232,   233,   234,   235,   236,   237,     0,   238,
       0,   239,     0,     0,   242,     0,   244,   245,   246,   247,
     248,     0,     0,   249,     0,   251,     0,     0,   253,   254,
     255,     0,     0,   256,   257,   258,   259,   260,     0,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,     0,   281,
     282,   283,   284,   285,     0,   286,   287,     0,   289,     0,
     290,   291,   292,   293,   294,   295,     0,   296,   297,     0,
       0,   298,   299,   300,     0,     0,   301,   302,     0,   304,
       0,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,     0,   317,   318,   319,   320,   321,   322,   323,
     324,   325,     0,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,     0,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
       0,   352,   353,     0,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,     0,
     370,   371,   372,   373,   374,     0,   375,   376,   377,   378,
     379,     0,   381,   382,   383,   384,     0,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,     0,   399,   400,     0,   401,     0,   403,   404,   405,
     406,   407,     0,   408,   409,     0,     0,   410,   411,   412,
     413,   414,     0,   415,   416,   417,   418,   419,   420,   421,
       0,     0,   422,   423,   424,   425,   426,     0,     0,   427,
     428,   429,   430,   431,   432,   433,     0,   434,     0,   436,
     437,   438,   439,     0,     0,   440,     0,     0,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   486,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    90,    91,    92,    93,    94,
      95,    96,    97,     0,    98,    99,   100,     0,     0,     0,
       0,     0,     0,     0,   101,   102,     0,   103,   104,   105,
       0,   107,   108,   109,   110,   111,     0,   113,   114,     0,
     115,   116,   117,   118,   119,   120,     0,     0,   121,   122,
     123,   124,   125,     0,   126,   127,   128,   129,   130,     0,
       0,     0,   132,   133,   134,   135,   136,     0,   138,   139,
     140,     0,   141,   142,   143,   144,   145,   146,     0,     0,
     148,   149,   150,     0,     0,     0,     0,     0,     0,     0,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   161,
       0,   162,     0,   163,   164,   165,   166,   167,   168,     0,
     169,   170,   171,   172,   173,     0,     0,   174,   175,   176,
     177,   178,     0,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,     0,   195,     0,   196,   197,   198,   199,     0,   200,
       0,   201,     0,     0,     0,   204,   205,   206,     0,   208,
       0,   209,     0,   210,   211,     0,   212,   213,   214,   215,
     216,   217,     0,   219,   220,   221,   222,     0,   223,   224,
     225,   226,   227,   228,     0,   229,     0,   231,   232,   233,
     234,   235,   236,   237,     0,   238,     0,   239,     0,     0,
     242,     0,   244,   245,   246,   247,   248,     0,     0,   249,
       0,   251,     0,     0,   253,   254,   255,     0,     0,   256,
     257,   258,   259,   260,     0,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,     0,   281,   282,   283,   284,   285,
       0,   286,   287,     0,   289,     0,   290,   291,   292,   293,
     294,   295,     0,   296,   297,     0,     0,   298,   299,   300,
       0,     0,   301,   302,     0,   304,     0,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,     0,   317,
     318,   319,   320,   321,   322,   323,   324,   325,     0,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,     0,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,     0,   352,   353,     0,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,     0,   370,   371,   372,   373,
     374,     0,   375,   376,   377,   378,   379,     0,   381,   382,
     383,   384,     0,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,     0,   399,   400,
       0,   401,     0,   403,   404,   405,   406,   407,     0,   408,
     409,     0,     0,   410,   411,   412,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,     0,     0,   422,   423,
     424,   425,   426,     0,     0,   427,   428,   429,   430,   431,
     432,   433,     0,   434,     0,   436,   437,   438,   439,     0,
       0,   440,     0,     0,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   486,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    90,    91,    92,    93,    94,    95,    96,    97,     0,
      98,    99,   100,     0,     0,     0,     0,     0,     0,     0,
     101,   102,     0,   103,   104,   105,     0,   107,   108,   109,
     110,   111,     0,   113,   114,     0,   115,   116,   117,   118,
     119,   120,     0,     0,   121,   122,   123,   124,   125,     0,
     126,   127,   128,   129,   130,     0,     0,     0,   132,   133,
     134,   135,   136,     0,   138,   139,   140,     0,   141,   142,
     143,   144,   145,   146,     0,     0,   148,   149,   150,     0,
       0,     0,     0,     0,     0,     0,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   161,     0,   162,     0,   163,
     164,   165,   166,   167,   168,     0,   169,   170,   171,   172,
     173,     0,     0,   174,   175,   176,   177,   178,     0,   179,
     180,   181,     0,   182,   183,   184,     0,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,     0,   195,     0,
     196,   197,   198,   199,     0,   200,     0,   201,     0,     0,
       0,   204,   205,   206,     0,   208,     0,   209,     0,   210,
     211,     0,   212,   213,   214,   215,   216,   217,     0,   219,
     220,   221,   222,     0,   223,   224,   225,   226,   227,   228,
       0,   229,     0,   231,   232,   233,   234,   235,   236,   237,
       0,   238,     0,   239,     0,     0,   242,     0,   244,   245,
     246,   247,   248,     0,     0,   249,     0,   251,     0,     0,
     253,   254,   548,     0,     0,   256,   257,   258,   259,   260,
       0,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
       0,   281,   282,   283,   284,   285,     0,   286,   287,     0,
     289,     0,   290,   291,   292,   293,   294,   295,     0,   296,
     297,     0,     0,   298,   299,   300,     0,     0,   301,   302,
       0,   304,     0,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,     0,   317,   318,   319,   320,   321,
     322,   323,   324,   325,     0,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,     0,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,     0,   352,   353,     0,   355,   356,   357,   358,
     359,   360,   361,   362,   549,   364,   365,   366,   367,   368,
     369,     0,   370,   371,   372,   373,   550,     0,   375,   376,
     377,   378,   379,     0,   381,   382,   383,   384,     0,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,     0,   399,   400,     0,   401,     0,   403,
     404,   405,   406,   407,     0,   551,   409,     0,     0,   410,
     411,   412,   413,   414,     0,   415,   416,   417,   418,   419,
     420,   421,     0,     0,   422,   423,   424,   425,   426,     0,
       0,   427,   428,   429,   430,   431,   432,   433,     0,   434,
       0,   436,   437,   438,   439,     0,     0,   440,     0,     0,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   486,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    90,    91,    92,
      93,    94,    95,    96,    97,     0,    98,    99,   100,     0,
       0,     0,     0,     0,     0,     0,   101,   102,     0,   103,
     104,   105,     0,   107,   108,   109,   110,   111,     0,   113,
     114,     0,   115,   116,   117,   118,   119,   120,     0,     0,
     121,   122,   123,   124,   125,     0,   126,   127,   128,   129,
     130,     0,     0,     0,   132,   133,   134,   135,   136,     0,
     138,   139,   140,     0,   141,   142,   143,   144,   145,   146,
       0,     0,   148,   149,   150,     0,     0,     0,     0,     0,
       0,     0,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   161,     0,   162,     0,   163,   164,   165,   166,   167,
     168,     0,   169,   170,   171,   172,   173,     0,     0,   174,
     175,   176,   177,   178,     0,   179,   180,   181,     0,   182,
     183,   184,     0,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,     0,   195,     0,   196,   197,   198,   199,
       0,   200,     0,   201,     0,     0,     0,   204,   205,   206,
       0,   208,     0,   209,     0,   210,   211,     0,   212,   213,
     214,   215,   216,   217,     0,   219,   220,   221,   222,     0,
     223,   224,   225,   226,   227,   228,     0,   229,     0,   231,
     232,   233,   234,   235,   236,   237,     0,   238,     0,   239,
       0,     0,   242,     0,   244,   245,   246,   247,   248,     0,
       0,   249,     0,   251,     0,     0,   253,   254,   255,     0,
       0,   256,   257,   258,   259,   260,     0,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,     0,   281,   282,   283,
     284,   285,     0,   286,   287,     0,   289,     0,   290,   291,
     292,   293,   294,   295,     0,   296,   297,     0,     0,   298,
     299,   300,     0,     0,   301,   302,     0,   304,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
       0,   317,   318,   319,   320,   321,   322,   323,   324,   325,
       0,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   564,   339,     0,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,     0,   352,
     353,     0,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,     0,   370,   371,
     372,   373,   374,     0,   375,   376,   377,   378,   379,     0,
     381,   382,   383,   384,     0,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,     0,
     399,   400,     0,   401,     0,   403,   404,   405,   406,   407,
       0,   408,   409,     0,     0,   410,   411,   412,   413,   414,
       0,   415,   416,   417,   418,   419,   420,   421,     0,     0,
     422,   423,   424,   425,   426,     0,     0,   427,   428,   429,
     430,   431,   432,   433,     0,   434,     0,   436,   437,   438,
     439,     0,     0,   440,     0,     0,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   486,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    90,    91,    92,    93,    94,    95,    96,
      97,     0,    98,    99,   100,     0,     0,     0,     0,     0,
       0,     0,   101,   102,     0,   103,   104,   105,     0,   107,
     108,   109,   110,   111,     0,   113,   114,     0,   115,   116,
     117,   118,   119,   120,     0,     0,   121,   122,   123,   124,
     125,     0,   126,   127,   128,   129,   130,     0,     0,     0,
     132,   133,   134,   135,   136,     0,   138,   139,   140,     0,
     141,   142,   143,   144,   145,   146,     0,     0,   148,   149,
     150,     0,     0,     0,     0,     0,     0,     0,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,     0,   162,
       0,   163,   164,   165,   166,   167,   168,     0,   169,   170,
     171,   172,   173,     0,     0,   174,   175,   176,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,     0,
     195,     0,   196,   197,   198,   199,     0,   200,     0,   201,
       0,     0,     0,   204,   205,   206,     0,   208,     0,   209,
       0,   210,   211,     0,   212,   213,   214,   215,   216,   595,
       0,   219,   220,   221,   222,     0,   223,   224,   225,   226,
     227,   228,     0,   229,     0,   231,   232,   233,   234,   235,
     236,   237,     0,   238,     0,   239,     0,     0,   242,     0,
     244,   245,   246,   247,   248,     0,     0,   249,     0,   251,
       0,     0,   253,   254,   255,     0,     0,   256,   257,   258,
     259,   260,     0,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,     0,   281,   282,   283,   284,   285,     0,   286,
     287,     0,   289,     0,   290,   291,   292,   293,   294,   295,
       0,   296,   297,     0,     0,   298,   299,   300,     0,     0,
     301,   302,     0,   304,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,     0,   317,   318,   319,
     320,   321,   322,   323,   324,   325,     0,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,     0,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,     0,   352,   353,     0,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,     0,   370,   371,   372,   373,   374,     0,
     375,   376,   377,   378,   379,     0,   381,   382,   383,   384,
       0,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,     0,   399,   400,     0,   401,
       0,   403,   404,   405,   406,   407,     0,   408,   409,     0,
       0,   410,   411,   412,   413,   414,     0,   415,   416,   417,
     418,   419,   420,   421,     0,     0,   422,   423,   424,   425,
     426,     0,     0,   427,   428,   429,   430,   431,   432,   433,
       0,   434,     0,   436,   437,   438,   439,     0,     0,   440,
       0,     0,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   486,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    90,
      91,    92,    93,    94,    95,    96,    97,     0,    98,    99,
     100,     0,     0,     0,     0,     0,     0,     0,   101,   102,
       0,   103,   104,   105,     0,   107,   108,   109,   110,   111,
       0,   113,   114,     0,   115,   116,   117,   118,   119,   120,
       0,     0,   121,   122,   123,   124,   125,     0,   126,   127,
     128,   129,   130,     0,     0,     0,   132,   133,   134,   135,
     136,     0,   138,   139,   140,     0,   141,   142,   143,   144,
     145,   146,     0,     0,   148,   149,   150,     0,     0,     0,
       0,     0,     0,     0,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   161,     0,   162,     0,   163,   164,   165,
     166,   167,   168,     0,   169,   170,   171,   172,   173,     0,
       0,   174,   175,   176,   177,   178,     0,   179,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,     0,   195,     0,   196,   197,
     198,   199,     0,   200,     0,   201,     0,     0,     0,   204,
     205,   206,     0,   208,     0,   209,     0,   210,   211,     0,
     212,   213,   214,   215,   216,   598,     0,   219,   220,   221,
     222,     0,   223,   224,   225,   226,   227,   228,     0,   229,
       0,   231,   232,   233,   234,   235,   236,   237,     0,   238,
       0,   239,     0,     0,   242,     0,   244,   245,   246,   247,
     248,     0,     0,   249,     0,   251,     0,     0,   253,   254,
     255,     0,     0,   256,   257,   258,   259,   260,     0,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,     0,   281,
     282,   283,   284,   285,     0,   286,   287,     0,   289,     0,
     290,   291,   292,   293,   294,   295,     0,   296,   297,     0,
       0,   298,   299,   300,     0,     0,   301,   302,     0,   304,
       0,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,     0,   317,   318,   319,   320,   321,   322,   323,
     324,   325,     0,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,     0,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
       0,   352,   353,     0,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,     0,
     370,   371,   372,   373,   374,     0,   375,   376,   377,   378,
     379,     0,   381,   382,   383,   384,     0,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,     0,   399,   400,     0,   401,     0,   403,   404,   405,
     406,   407,     0,   408,   409,     0,     0,   410,   411,   412,
     413,   414,     0,   415,   416,   417,   418,   419,   420,   421,
       0,     0,   422,   423,   424,   425,   426,     0,     0,   427,
     428,   429,   430,   431,   432,   433,     0,   434,     0,   436,
     437,   438,   439,     0,     0,   440,     0,     0,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   486,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    90,    91,    92,    93,    94,
      95,    96,    97,     0,    98,    99,   100,     0,     0,     0,
       0,     0,     0,     0,   101,   102,     0,   103,   104,   105,
       0,   107,   108,   109,   110,   111,     0,   113,   114,     0,
     115,   116,   117,   118,   119,   120,     0,     0,   121,   122,
     123,   124,   125,     0,   126,   127,   128,   129,   130,     0,
       0,     0,   132,   133,   134,   135,   136,     0,   138,   139,
     140,     0,   141,   142,   143,   144,   145,   146,     0,     0,
     148,   149,   150,     0,     0,     0,     0,     0,     0,     0,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   161,
       0,   162,     0,   163,   164,   165,   166,   167,   168,     0,
     169,   170,   171,   172,   173,     0,     0,   174,   175,   176,
     177,   178,     0,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,     0,   195,     0,   196,   197,   198,   199,     0,   200,
       0,   201,     0,     0,     0,   204,   205,   206,     0,   208,
       0,   209,     0,   210,   211,     0,   212,   213,   214,   215,
     216,   602,     0,   219,   220,   221,   222,     0,   223,   224,
     225,   226,   227,   228,     0,   229,     0,   231,   232,   233,
     234,   235,   236,   237,     0,   238,     0,   239,     0,     0,
     242,     0,   244,   245,   246,   247,   248,     0,     0,   249,
       0,   251,     0,     0,   253,   254,   255,     0,     0,   256,
     257,   258,   259,   260,     0,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,     0,   281,   282,   283,   284,   285,
       0,   286,   287,     0,   289,     0,   290,   291,   292,   293,
     294,   295,     0,   296,   297,     0,     0,   298,   299,   300,
       0,     0,   301,   302,     0,   304,     0,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,     0,   317,
     318,   319,   320,   321,   322,   323,   324,   325,     0,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,     0,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,     0,   352,   353,     0,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,     0,   370,   371,   372,   373,
     374,     0,   375,   376,   377,   378,   379,     0,   381,   382,
     383,   384,     0,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,     0,   399,   400,
       0,   401,     0,   403,   404,   405,   406,   407,     0,   408,
     409,     0,     0,   410,   411,   412,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,     0,     0,   422,   423,
     424,   425,   426,     0,     0,   427,   428,   429,   430,   431,
     432,   433,     0,   434,     0,   436,   437,   438,   439,     0,
       0,   440,     0,     0,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   486,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    90,    91,    92,    93,    94,    95,    96,    97,     0,
      98,    99,   100,     0,     0,     0,     0,     0,     0,     0,
     101,   102,     0,   103,   104,   105,     0,   107,   108,   109,
     110,   111,     0,   113,   114,     0,   115,   116,   117,   118,
     119,   120,     0,     0,   121,   122,   123,   124,   125,     0,
     126,   127,   128,   129,   130,     0,     0,     0,   132,   133,
     134,   135,   136,     0,   138,   139,   140,     0,   141,   142,
     143,   144,   145,   146,     0,     0,   148,   149,   150,     0,
       0,     0,     0,     0,     0,     0,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   161,     0,   162,     0,   163,
     164,   165,   166,   167,   168,     0,   169,   170,   171,   172,
     173,     0,     0,   174,   175,   176,   177,   178,     0,   179,
     180,   181,     0,   182,   183,   184,     0,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,     0,   195,     0,
     196,   197,   198,   199,     0,   200,     0,   201,     0,     0,
       0,   204,   205,   206,     0,   208,     0,   209,     0,   210,
     211,     0,   212,   213,   214,   215,   216,   620,     0,   219,
     220,   221,   222,     0,   223,   224,   225,   226,   227,   228,
       0,   229,     0,   231,   232,   233,   234,   235,   236,   237,
       0,   238,     0,   239,     0,     0,   242,     0,   244,   245,
     246,   247,   248,     0,     0,   249,     0,   251,     0,     0,
     253,   254,   255,     0,     0,   256,   257,   258,   259,   260,
       0,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
       0,   281,   282,   283,   284,   285,     0,   286,   287,     0,
     289,     0,   290,   291,   292,   293,   294,   295,     0,   296,
     297,     0,     0,   298,   299,   300,     0,     0,   301,   302,
       0,   304,     0,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,     0,   317,   318,   319,   320,   321,
     322,   323,   324,   325,     0,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,     0,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,     0,   352,   353,     0,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,     0,   370,   371,   372,   373,   374,     0,   375,   376,
     377,   378,   379,     0,   381,   382,   383,   384,     0,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,     0,   399,   400,     0,   401,     0,   403,
     404,   405,   406,   407,     0,   408,   409,     0,     0,   410,
     411,   412,   413,   414,     0,   415,   416,   417,   418,   419,
     420,   421,     0,     0,   422,   423,   424,   425,   426,     0,
       0,   427,   428,   429,   430,   431,   432,   433,     0,   434,
       0,   436,   437,   438,   439,     0,     0,   440,     0,     0,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   486,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    90,    91,    92,
      93,    94,    95,    96,    97,     0,    98,    99,   100,     0,
       0,     0,     0,     0,     0,     0,   101,   102,     0,   103,
     104,   105,     0,   107,   108,   109,   110,   111,     0,   113,
     114,     0,   115,   116,   117,   118,   119,   120,     0,     0,
     121,   122,   123,   124,   125,     0,   126,   127,   128,   129,
     130,     0,     0,     0,   132,   133,   134,   135,   136,     0,
     138,   139,   140,     0,   141,   142,   143,   144,   145,   146,
       0,     0,   148,   149,   150,     0,     0,     0,     0,     0,
       0,     0,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   161,     0,   162,     0,   163,   164,   165,   166,   167,
     168,     0,   169,   170,   171,   172,   173,     0,     0,   174,
     175,   176,   177,   178,     0,   179,   180,   181,     0,   182,
     183,   184,     0,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,     0,   195,     0,   196,   197,   198,   199,
       0,   200,     0,   201,     0,     0,     0,   204,   205,   206,
       0,   208,     0,   209,     0,   210,   211,     0,   212,   213,
     214,   215,   216,   636,     0,   219,   220,   221,   222,     0,
     223,   224,   225,   226,   227,   228,     0,   229,     0,   231,
     232,   233,   234,   235,   236,   237,     0,   238,     0,   239,
       0,     0,   242,     0,   244,   245,   246,   247,   248,     0,
       0,   249,     0,   251,     0,     0,   253,   254,   255,     0,
       0,   256,   257,   258,   259,   260,     0,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,     0,   281,   282,   283,
     284,   285,     0,   286,   287,     0,   289,     0,   290,   291,
     292,   293,   294,   295,     0,   296,   297,     0,     0,   298,
     299,   300,     0,     0,   301,   302,     0,   304,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
       0,   317,   318,   319,   320,   321,   322,   323,   324,   325,
       0,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,     0,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,     0,   352,
     353,     0,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,     0,   370,   371,
     372,   373,   374,     0,   375,   376,   377,   378,   379,     0,
     381,   382,   383,   384,     0,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,     0,
     399,   400,     0,   401,     0,   403,   404,   405,   406,   407,
       0,   408,   409,     0,     0,   410,   411,   412,   413,   414,
       0,   415,   416,   417,   418,   419,   420,   421,     0,     0,
     422,   423,   424,   425,   426,     0,     0,   427,   428,   429,
     430,   431,   432,   433,     0,   434,     0,   436,   437,   438,
     439,     0,     0,   440,     0,     0,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   486,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    90,    91,    92,    93,    94,    95,    96,
      97,     0,    98,    99,   100,     0,     0,     0,     0,     0,
       0,     0,   101,   102,     0,   103,   104,   105,     0,   107,
     108,   109,   110,   111,     0,   113,   114,     0,   115,   116,
     117,   118,   119,   120,     0,     0,   121,   122,   123,   124,
     125,     0,   126,   127,   128,   129,   130,     0,     0,     0,
     132,   133,   134,   135,   136,     0,   138,   139,   140,     0,
     141,   142,   143,   144,   145,   146,     0,     0,   148,   149,
     150,     0,     0,     0,     0,     0,     0,     0,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,     0,   162,
       0,   163,   164,   165,   166,   167,   168,     0,   169,   170,
     171,   172,   173,     0,     0,   174,   175,   176,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,     0,
     195,     0,   196,   197,   198,   199,     0,   200,     0,   201,
       0,     0,     0,   204,   205,   206,     0,   208,     0,   209,
       0,   210,   211,     0,   212,   213,   214,   215,   216,   640,
       0,   219,   220,   221,   222,     0,   223,   224,   225,   226,
     227,   228,     0,   229,     0,   231,   232,   233,   234,   235,
     236,   237,     0,   238,     0,   239,     0,     0,   242,     0,
     244,   245,   246,   247,   248,     0,     0,   249,     0,   251,
       0,     0,   253,   254,   255,     0,     0,   256,   257,   258,
     259,   260,     0,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,     0,   281,   282,   283,   284,   285,     0,   286,
     287,     0,   289,     0,   290,   291,   292,   293,   294,   295,
       0,   296,   297,     0,     0,   298,   299,   300,     0,     0,
     301,   302,     0,   304,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,     0,   317,   318,   319,
     320,   321,   322,   323,   324,   325,     0,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,     0,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,     0,   352,   353,     0,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,     0,   370,   371,   372,   373,   374,     0,
     375,   376,   377,   378,   379,     0,   381,   382,   383,   384,
       0,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,     0,   399,   400,     0,   401,
       0,   403,   404,   405,   406,   407,     0,   408,   409,     0,
       0,   410,   411,   412,   413,   414,     0,   415,   416,   417,
     418,   419,   420,   421,     0,     0,   422,   423,   424,   425,
     426,     0,     0,   427,   428,   429,   430,   431,   432,   433,
       0,   434,     0,   436,   437,   438,   439,     0,     0,   440,
       0,     0,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   486,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    90,
      91,    92,    93,    94,    95,    96,    97,     0,    98,    99,
     100,     0,     0,     0,     0,     0,     0,     0,   101,   102,
       0,   103,   104,   105,     0,   107,   108,   109,   110,   111,
       0,   113,   114,     0,   115,   116,   117,   118,   119,   120,
       0,     0,   121,   122,   123,   124,   125,     0,   126,   127,
     128,   129,   130,     0,     0,     0,   132,   133,   134,   135,
     136,     0,   138,   139,   140,     0,   141,   142,   143,   144,
     145,   146,     0,     0,   148,   149,   150,     0,     0,     0,
       0,     0,     0,     0,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   161,     0,   162,     0,   163,   164,   165,
     166,   167,   168,     0,   169,   170,   171,   172,   173,     0,
       0,   174,   175,   176,   177,   178,     0,   179,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,     0,   195,     0,   196,   197,
     198,   199,     0,   200,     0,   201,     0,     0,     0,   204,
     205,   206,     0,   208,     0,   209,     0,   210,   211,     0,
     212,   213,   214,   215,   216,   643,     0,   219,   220,   221,
     222,     0,   223,   224,   225,   226,   227,   228,     0,   229,
       0,   231,   232,   233,   234,   235,   236,   237,     0,   238,
       0,   239,     0,     0,   242,     0,   244,   245,   246,   247,
     248,     0,     0,   249,     0,   251,     0,     0,   253,   254,
     255,     0,     0,   256,   257,   258,   259,   260,     0,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,     0,   281,
     282,   283,   284,   285,     0,   286,   287,     0,   289,     0,
     290,   291,   292,   293,   294,   295,     0,   296,   297,     0,
       0,   298,   299,   300,     0,     0,   301,   302,     0,   304,
       0,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,     0,   317,   318,   319,   320,   321,   322,   323,
     324,   325,     0,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,     0,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
       0,   352,   353,     0,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,     0,
     370,   371,   372,   373,   374,     0,   375,   376,   377,   378,
     379,     0,   381,   382,   383,   384,     0,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,     0,   399,   400,     0,   401,     0,   403,   404,   405,
     406,   407,     0,   408,   409,     0,     0,   410,   411,   412,
     413,   414,     0,   415,   416,   417,   418,   419,   420,   421,
       0,     0,   422,   423,   424,   425,   426,     0,     0,   427,
     428,   429,   430,   431,   432,   433,     0,   434,     0,   436,
     437,   438,   439,     0,     0,   440,     0,     0,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   486,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    90,    91,    92,    93,    94,
      95,    96,    97,     0,    98,    99,   100,     0,     0,     0,
       0,     0,     0,     0,   101,   102,     0,   103,   104,   105,
       0,   107,   108,   109,   110,   111,     0,   113,   114,     0,
     115,   116,   117,   118,   119,   120,     0,     0,   121,   122,
     123,   124,   125,     0,   126,   127,   128,   129,   130,     0,
       0,     0,   132,   133,   134,   135,   136,     0,   138,   139,
     140,     0,   141,   142,   143,   144,   145,   146,     0,     0,
     148,   149,   150,     0,     0,     0,     0,     0,     0,     0,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   161,
       0,   162,     0,   163,   164,   165,   166,   167,   168,     0,
     169,   170,   171,   172,   173,     0,     0,   174,   175,   176,
     177,   178,     0,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,     0,   195,     0,   196,   197,   198,   199,     0,   200,
       0,   201,     0,     0,     0,   204,   205,   206,     0,   208,
       0,   209,     0,   210,   211,     0,   212,   213,   214,   215,
     216,   217,     0,   219,   220,   221,   222,     0,   223,   224,
     225,   226,   227,   228,     0,   229,     0,   231,   232,   233,
     234,   235,   236,   237,     0,   238,     0,   239,     0,     0,
     242,     0,   244,   245,   246,   247,   248,     0,     0,   249,
       0,   251,     0,     0,   253,   254,   255,     0,     0,   256,
     257,   258,   259,   260,     0,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,     0,   281,   282,   283,   284,   285,
       0,   286,   287,     0,   289,     0,   290,   291,   292,   293,
     294,   295,     0,   296,   297,     0,     0,   298,   299,   300,
       0,     0,   301,   302,     0,   304,     0,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,     0,   317,
     318,   319,   320,   321,   322,   323,   324,   325,     0,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,     0,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,     0,   352,   353,     0,
     355,   356,   357,   358,   359,   360,   361,   362,   549,   364,
     365,   366,   367,   368,   369,     0,   370,   371,   372,   373,
     374,     0,   375,   376,   377,   378,   379,     0,   381,   382,
     383,   384,     0,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,     0,   399,   400,
       0,   401,     0,   403,   404,   405,   406,   407,     0,   551,
     409,     0,     0,   410,   411,   412,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,     0,     0,   422,   423,
     424,   425,   426,     0,     0,   427,   428,   429,   430,   431,
     432,   433,     0,   434,     0,   436,   437,   438,   439,     0,
       0,   440,     0,     0,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   486,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    90,    91,    92,    93,    94,    95,    96,    97,     0,
      98,    99,   100,     0,     0,     0,     0,     0,     0,     0,
     101,   102,     0,   103,   104,   105,     0,   107,   108,   109,
     110,   111,     0,   113,   114,     0,   115,   116,   117,   118,
     119,   120,     0,     0,   121,   122,   123,   124,   125,     0,
     126,   127,   128,   129,   130,     0,     0,     0,   132,   133,
     134,   135,   136,     0,   138,   139,   140,     0,   141,   142,
     143,   144,   145,   146,     0,     0,   148,   149,   150,     0,
       0,     0,     0,     0,     0,     0,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   161,     0,   162,     0,   163,
     164,   165,   166,   167,   168,     0,   169,   170,   171,   172,
     173,     0,     0,   174,   175,   176,   177,   178,     0,   179,
     180,   181,     0,   182,   183,   184,     0,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,     0,   195,     0,
     196,   197,   198,   199,     0,   200,     0,   201,     0,     0,
       0,   204,   205,   206,     0,   208,     0,   209,     0,   210,
     211,     0,   212,   213,   214,   215,   216,   962,     0,   219,
     220,   221,   222,     0,   223,   224,   225,   226,   227,   228,
       0,   229,     0,   231,   232,   233,   234,   235,   236,   237,
       0,   238,     0,   239,     0,     0,   242,     0,   244,   245,
     246,   247,   248,     0,     0,   249,     0,   251,     0,     0,
     253,   254,   255,     0,     0,   256,   257,   258,   259,   260,
       0,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
       0,   281,   282,   283,   284,   285,     0,   286,   287,     0,
     289,     0,   290,   291,   292,   293,   294,   295,     0,   296,
     297,     0,     0,   298,   299,   300,     0,     0,   301,   302,
       0,   304,     0,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,     0,   317,   318,   319,   320,   321,
     322,   323,   324,   325,     0,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,     0,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,     0,   352,   353,     0,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,     0,   370,   371,   372,   373,   374,     0,   375,   376,
     377,   378,   379,     0,   381,   382,   383,   384,     0,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,     0,   399,   400,     0,   401,     0,   403,
     404,   405,   406,   407,     0,   408,   409,     0,     0,   410,
     411,   412,   413,   414,     0,   415,   416,   417,   418,   419,
     420,   421,     0,     0,   422,   423,   424,   425,   426,     0,
       0,   427,   428,   429,   430,   431,   432,   433,     0,   434,
       0,   436,   437,   438,   439,     0,     0,   440,     0,     0,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   486,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    90,    91,    92,
      93,    94,    95,    96,    97,     0,    98,    99,   100,     0,
       0,     0,     0,     0,     0,     0,   101,   102,     0,   103,
     104,   105,     0,   107,   108,   109,   110,   111,     0,   113,
     114,     0,   115,   116,   117,   118,   119,   120,     0,     0,
     121,   122,   123,   124,   125,     0,   126,   127,   128,   129,
     130,     0,     0,     0,   132,   133,   134,   135,   136,     0,
     138,   139,   140,     0,   141,   142,   143,   144,   145,   146,
       0,     0,   148,   149,   150,     0,     0,     0,     0,     0,
       0,     0,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   161,     0,   162,     0,   163,   164,   165,   166,   167,
     168,     0,   169,   170,   171,   172,   173,     0,     0,   174,
     175,   176,   177,   178,     0,   179,   180,   181,     0,   182,
     183,   184,     0,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,     0,   195,     0,   196,   197,   198,   199,
       0,   200,     0,   201,     0,     0,     0,   204,   205,   206,
       0,   208,     0,   209,     0,   210,   211,     0,   212,   213,
     214,   215,   216,   964,     0,   219,   220,   221,   222,     0,
     223,   224,   225,   226,   227,   228,     0,   229,     0,   231,
     232,   233,   234,   235,   236,   237,     0,   238,     0,   239,
       0,     0,   242,     0,   244,   245,   246,   247,   248,     0,
       0,   249,     0,   251,     0,     0,   253,   254,   255,     0,
       0,   256,   257,   258,   259,   260,     0,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,     0,   281,   282,   283,
     284,   285,     0,   286,   287,     0,   289,     0,   290,   291,
     292,   293,   294,   295,     0,   296,   297,     0,     0,   298,
     299,   300,     0,     0,   301,   302,     0,   304,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
       0,   317,   318,   319,   320,   321,   322,   323,   324,   325,
       0,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,     0,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,     0,   352,
     353,     0,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,     0,   370,   371,
     372,   373,   374,     0,   375,   376,   377,   378,   379,     0,
     381,   382,   383,   384,     0,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,     0,
     399,   400,     0,   401,     0,   403,   404,   405,   406,   407,
       0,   408,   409,     0,     0,   410,   411,   412,   413,   414,
       0,   415,   416,   417,   418,   419,   420,   421,     0,     0,
     422,   423,   424,   425,   426,     0,     0,   427,   428,   429,
     430,   431,   432,   433,     0,   434,     0,   436,   437,   438,
     439,     0,     0,   440,     0,     0,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   486,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    90,    91,    92,    93,    94,    95,    96,
      97,     0,    98,    99,   100,     0,     0,     0,     0,     0,
    1187,     0,   101,   102,     0,   103,   104,   105,     0,   107,
     108,   109,   110,   111,     0,   113,   114,     0,   115,   116,
     117,   118,   119,   120,     0,     0,   121,   122,   123,   124,
     125,     0,   126,   127,   128,   129,   130,     0,     0,     0,
     132,   133,   134,   135,   136,     0,   138,   139,   140,     0,
     141,   142,   143,   144,   145,   146,     0,     0,   148,   149,
     150,     0,     0,     0,     0,     0,     0,     0,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,     0,   162,
       0,   163,   164,   165,   166,   167,   168,     0,   169,   170,
     171,   172,   173,     0,     0,   174,   175,   176,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,     0,
     195,     0,   196,   197,   198,   199,     0,   200,     0,   201,
       0,     0,     0,   204,   205,   206,     0,   208,     0,   209,
       0,   210,   211,     0,   212,   213,   214,   215,   216,   217,
       0,   219,   220,   221,   222,     0,   223,   224,   225,   226,
     227,   228,     0,   229,     0,   231,   232,   233,   234,   235,
     236,   237,     0,   238,     0,   239,     0,     0,   242,     0,
     244,   245,   246,   247,   248,     0,     0,   249,     0,   251,
       0,     0,   253,   254,   255,     0,     0,   256,   257,   258,
     259,   260,     0,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,     0,   281,   282,   283,   284,   285,     0,   286,
     287,     0,   289,     0,   290,   291,   292,   293,   294,   295,
       0,   296,   297,     0,     0,   298,   299,   300,     0,     0,
     301,   302,     0,   304,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,     0,   317,   318,   319,
     320,   321,   322,   323,   324,   325,     0,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,     0,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,     0,   352,   353,     0,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,     0,   370,   371,   372,   373,   374,     0,
       0,   376,   377,   378,   379,     0,   381,   382,   383,   384,
       0,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,     0,   399,   400,     0,   401,
       0,   403,   404,   405,   406,   407,     0,   408,   409,     0,
       0,   410,   411,   412,   413,   414,     0,   415,   416,   417,
     418,   419,   420,   421,     0,     0,   422,   423,   424,   425,
     426,     0,     0,   427,   428,   429,   430,   431,   432,   433,
       0,   434,     0,   436,   437,   438,   439,     0,     0,   440,
       0,     0,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   486,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    90,
      91,    92,    93,    94,    95,    96,    97,     0,    98,    99,
     100,     0,     0,     0,     0,     0,     0,     0,   101,   102,
       0,   103,   104,   105,     0,   107,   108,   109,   110,   111,
       0,   113,   114,     0,   115,   116,   117,   118,   119,   120,
       0,     0,   121,   122,   123,   124,   125,     0,   126,   127,
     128,   129,   130,     0,     0,     0,   132,   133,   134,   135,
     136,     0,   138,   139,   140,     0,   141,   142,   143,   144,
     145,   146,     0,     0,   148,   149,   150,     0,     0,     0,
       0,     0,     0,     0,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   161,     0,   162,     0,   163,   164,   165,
     166,   167,   168,     0,   169,   170,   171,   172,   173,     0,
       0,   174,   175,   176,   177,   178,     0,   179,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,     0,   195,     0,   196,   197,
     198,   199,     0,   200,     0,   201,     0,     0,     0,   204,
     205,   206,     0,   208,     0,   209,     0,   210,   211,     0,
     212,   213,   214,   215,   216,  1320,     0,   219,   220,   221,
     222,     0,   223,   224,   225,   226,   227,   228,     0,   229,
       0,   231,   232,   233,   234,   235,   236,   237,     0,   238,
       0,   239,     0,     0,   242,     0,   244,   245,   246,   247,
     248,     0,     0,   249,     0,   251,     0,     0,   253,   254,
     255,     0,     0,   256,   257,   258,   259,   260,     0,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,     0,   281,
     282,   283,   284,   285,     0,   286,   287,     0,   289,     0,
     290,   291,   292,   293,   294,   295,     0,   296,   297,     0,
       0,   298,   299,   300,     0,     0,   301,   302,     0,   304,
       0,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,     0,   317,   318,   319,   320,   321,   322,   323,
     324,   325,     0,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,     0,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
       0,   352,   353,     0,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,     0,
     370,   371,   372,   373,   374,     0,   375,   376,   377,   378,
     379,     0,   381,   382,   383,   384,     0,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,     0,   399,   400,     0,   401,     0,   403,   404,   405,
     406,   407,     0,   408,   409,     0,     0,   410,   411,   412,
     413,   414,     0,   415,   416,   417,   418,   419,   420,   421,
       0,     0,   422,   423,   424,   425,   426,     0,     0,   427,
     428,   429,   430,   431,   432,   433,     0,   434,     0,   436,
     437,   438,   439,     0,     0,   440,     0,     0,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   486,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    90,    91,    92,    93,    94,
      95,    96,    97,     0,    98,    99,   100,     0,     0,     0,
       0,     0,     0,     0,   101,   102,     0,   103,   104,   105,
       0,   107,   108,   109,   110,   111,     0,   113,   114,     0,
     115,   116,   117,   118,   119,   120,     0,     0,   121,   122,
     123,   124,   125,     0,   126,   127,   128,   129,   130,     0,
       0,     0,   132,   133,   134,   135,   136,     0,   138,   139,
     140,     0,   141,   142,   143,   144,   145,   146,     0,     0,
     148,   149,   150,     0,     0,     0,     0,     0,     0,     0,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   161,
       0,   162,     0,   163,   164,   165,   166,   167,   168,     0,
     169,   170,   171,   172,   173,     0,     0,   174,   175,   176,
     177,   178,     0,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,     0,   195,     0,   196,   197,   198,   199,     0,   200,
       0,   201,     0,     0,     0,   204,   205,   206,     0,   208,
       0,   209,     0,   210,   211,     0,   212,   213,   214,   215,
     216,  1333,     0,   219,   220,   221,   222,     0,   223,   224,
     225,   226,   227,   228,     0,   229,     0,   231,   232,   233,
     234,   235,   236,   237,     0,   238,     0,   239,     0,     0,
     242,     0,   244,   245,   246,   247,   248,     0,     0,   249,
       0,   251,     0,     0,   253,   254,   255,     0,     0,   256,
     257,   258,   259,   260,     0,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,     0,   281,   282,   283,   284,   285,
       0,   286,   287,     0,   289,     0,   290,   291,   292,   293,
     294,   295,     0,   296,   297,     0,     0,   298,   299,   300,
       0,     0,   301,   302,     0,   304,     0,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,     0,   317,
     318,   319,   320,   321,   322,   323,   324,   325,     0,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,     0,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,     0,   352,   353,     0,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,     0,   370,   371,   372,   373,
     374,     0,   375,   376,   377,   378,   379,     0,   381,   382,
     383,   384,     0,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,     0,   399,   400,
       0,   401,     0,   403,   404,   405,   406,   407,     0,   408,
     409,     0,     0,   410,   411,   412,   413,   414,     0,   415,
     416,   417,   418,   419,   420,   421,     0,     0,   422,   423,
     424,   425,   426,     0,     0,   427,   428,   429,   430,   431,
     432,   433,     0,   434,     0,   436,   437,   438,   439,     0,
       0,   440,     0,     0,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   486,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    90,    91,    92,    93,    94,    95,    96,    97,     0,
      98,    99,   100,     0,     0,     0,     0,     0,     0,     0,
     101,   102,     0,   103,   104,   105,     0,   107,   108,   109,
     110,   111,     0,   113,   114,     0,   115,   116,   117,   118,
     119,   120,     0,     0,   121,   122,   123,   124,   125,     0,
     126,   127,   128,   129,   130,     0,     0,     0,   132,   133,
     134,   135,   136,     0,   138,   139,   140,     0,   141,   142,
     143,   144,   145,   146,     0,     0,   148,   149,   150,     0,
       0,     0,     0,     0,     0,     0,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   161,     0,   162,     0,   163,
     164,   165,   166,   167,   168,     0,   169,   170,   171,   172,
     173,     0,     0,   174,   175,   176,   177,   178,     0,   179,
     180,   181,     0,   182,   183,   184,     0,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,     0,   195,     0,
     196,   197,   198,   199,     0,   200,     0,   201,     0,     0,
       0,   204,   205,   206,     0,   208,     0,   209,     0,   210,
     211,     0,   212,   213,   214,   215,   216,  1604,     0,   219,
     220,   221,   222,     0,   223,   224,   225,   226,   227,   228,
       0,   229,     0,   231,   232,   233,   234,   235,   236,   237,
       0,   238,     0,   239,     0,     0,   242,     0,   244,   245,
     246,   247,   248,     0,     0,   249,     0,   251,     0,     0,
     253,   254,   255,     0,     0,   256,   257,   258,   259,   260,
       0,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
       0,   281,   282,   283,   284,   285,     0,   286,   287,     0,
     289,     0,   290,   291,   292,   293,   294,   295,     0,   296,
     297,     0,     0,   298,   299,   300,     0,     0,   301,   302,
       0,   304,     0,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,     0,   317,   318,   319,   320,   321,
     322,   323,   324,   325,     0,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,     0,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,     0,   352,   353,     0,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,     0,   370,   371,   372,   373,   374,     0,   375,   376,
     377,   378,   379,     0,   381,   382,   383,   384,     0,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,     0,   399,   400,     0,   401,     0,   403,
     404,   405,   406,   407,     0,   408,   409,     0,     0,   410,
     411,   412,   413,   414,     0,   415,   416,   417,   418,   419,
     420,   421,     0,     0,   422,   423,   424,   425,   426,     0,
       0,   427,   428,   429,   430,   431,   432,   433,     0,   434,
       0,   436,   437,   438,   439,     0,     0,   440,     0,     0,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   486,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    90,    91,    92,
      93,    94,    95,    96,    97,     0,    98,    99,   100,     0,
       0,     0,     0,     0,     0,     0,   101,   102,     0,   103,
     104,   105,     0,   107,   108,   109,   110,   111,     0,   113,
     114,     0,   115,   116,   117,   118,   119,   120,     0,     0,
     121,   122,   123,   124,   125,     0,   126,   127,   128,   129,
     130,     0,     0,     0,   132,   133,   134,   135,   136,     0,
     138,   139,   140,     0,   141,   142,   143,   144,   145,   146,
       0,     0,   148,   149,   150,     0,     0,     0,     0,     0,
       0,     0,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   161,     0,   162,     0,   163,   164,   165,   166,   167,
     168,     0,   169,   170,   171,   172,   173,     0,     0,   174,
     175,   176,   177,   178,     0,   179,   180,   181,     0,   182,
     183,   184,     0,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,     0,   195,     0,   196,   197,   198,   199,
       0,   200,     0,   201,     0,     0,     0,   204,   205,   206,
       0,   208,     0,   209,     0,   210,   211,     0,   212,   213,
     214,   215,   216,  1616,     0,   219,   220,   221,   222,     0,
     223,   224,   225,   226,   227,   228,     0,   229,     0,   231,
     232,   233,   234,   235,   236,   237,     0,   238,     0,   239,
       0,     0,   242,     0,   244,   245,   246,   247,   248,     0,
       0,   249,     0,   251,     0,     0,   253,   254,   255,     0,
       0,   256,   257,   258,   259,   260,     0,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,     0,   281,   282,   283,
     284,   285,     0,   286,   287,     0,   289,     0,   290,   291,
     292,   293,   294,   295,     0,   296,   297,     0,     0,   298,
     299,   300,     0,     0,   301,   302,     0,   304,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
       0,   317,   318,   319,   320,   321,   322,   323,   324,   325,
       0,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,     0,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,     0,   352,
     353,     0,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,     0,   370,   371,
     372,   373,   374,     0,   375,   376,   377,   378,   379,     0,
     381,   382,   383,   384,     0,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,     0,
     399,   400,     0,   401,     0,   403,   404,   405,   406,   407,
       0,   408,   409,     0,     0,   410,   411,   412,   413,   414,
       0,   415,   416,   417,   418,   419,   420,   421,     0,     0,
     422,   423,   424,   425,   426,     0,     0,   427,   428,   429,
     430,   431,   432,   433,     0,   434,     0,   436,   437,   438,
     439,     0,     0,   440,     0,     0,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   486,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    90,    91,    92,    93,    94,    95,    96,
      97,     0,    98,    99,   100,     0,     0,     0,     0,     0,
       0,     0,   101,   102,     0,   103,   104,   105,     0,   107,
     108,   109,   110,   111,     0,   113,   114,     0,   115,   116,
     117,   118,   119,   120,     0,     0,   121,   122,   123,   124,
     125,     0,   126,   127,   128,   129,   130,     0,     0,     0,
     132,   133,   134,   135,   136,     0,   138,   139,   140,     0,
     141,   142,   143,   144,   145,   146,     0,     0,   148,   149,
     150,     0,     0,     0,     0,     0,     0,     0,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,     0,   162,
       0,   163,   164,   165,   166,   167,   168,     0,   169,   170,
     171,   172,   173,     0,     0,   174,   175,   176,   177,   178,
       0,   179,   180,   181,     0,   182,   183,   184,     0,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,     0,
     195,     0,   196,   197,   198,   199,     0,   200,     0,   201,
       0,     0,     0,   204,   205,   206,     0,   208,     0,   209,
       0,   210,   211,     0,   212,   213,   214,   215,   216,  1618,
       0,   219,   220,   221,   222,     0,   223,   224,   225,   226,
     227,   228,     0,   229,     0,   231,   232,   233,   234,   235,
     236,   237,     0,   238,     0,   239,     0,     0,   242,     0,
     244,   245,   246,   247,   248,     0,     0,   249,     0,   251,
       0,     0,   253,   254,   255,     0,     0,   256,   257,   258,
     259,   260,     0,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,     0,   281,   282,   283,   284,   285,     0,   286,
     287,     0,   289,     0,   290,   291,   292,   293,   294,   295,
       0,   296,   297,     0,     0,   298,   299,   300,     0,     0,
     301,   302,     0,   304,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,     0,   317,   318,   319,
     320,   321,   322,   323,   324,   325,     0,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,     0,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,     0,   352,   353,     0,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,     0,   370,   371,   372,   373,   374,     0,
     375,   376,   377,   378,   379,     0,   381,   382,   383,   384,
       0,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,     0,   399,   400,     0,   401,
       0,   403,   404,   405,   406,   407,     0,   408,   409,     0,
       0,   410,   411,   412,   413,   414,     0,   415,   416,   417,
     418,   419,   420,   421,     0,     0,   422,   423,   424,   425,
     426,     0,     0,   427,   428,   429,   430,   431,   432,   433,
       0,   434,     0,   436,   437,   438,   439,     0,     0,   440,
       0,     0,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   486,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    90,
      91,    92,    93,    94,    95,    96,    97,     0,    98,    99,
     100,     0,     0,     0,     0,     0,     0,     0,   101,   102,
       0,   103,   104,   105,     0,   107,   108,   109,   110,   111,
       0,   113,   114,     0,   115,   116,   117,   118,   119,   120,
       0,     0,   121,   122,   123,   124,   125,     0,   126,   127,
     128,   129,   130,     0,     0,     0,   132,   133,   134,   135,
     136,     0,   138,   139,   140,     0,   141,   142,   143,   144,
     145,   146,     0,     0,   148,   149,   150,     0,     0,     0,
       0,     0,     0,     0,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   161,     0,   162,     0,   163,   164,   165,
     166,   167,   168,     0,   169,   170,   171,   172,   173,     0,
       0,   174,   175,   176,   177,   178,     0,   179,   180,   181,
       0,   182,   183,   184,     0,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,     0,   195,     0,   196,   197,
     198,   199,     0,   200,     0,   201,     0,     0,     0,   204,
     205,   206,     0,   208,     0,   209,     0,   210,   211,     0,
     212,   213,   214,   215,   216,  2203,     0,   219,   220,   221,
     222,     0,   223,   224,   225,   226,   227,   228,     0,   229,
       0,   231,   232,   233,   234,   235,   236,   237,     0,   238,
       0,   239,     0,     0,   242,     0,   244,   245,   246,   247,
     248,     0,     0,   249,     0,   251,     0,     0,   253,   254,
     255,     0,     0,   256,   257,   258,   259,   260,     0,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,     0,   281,
     282,   283,   284,   285,     0,   286,   287,     0,   289,     0,
     290,   291,   292,   293,   294,   295,     0,   296,   297,     0,
       0,   298,   299,   300,     0,     0,   301,   302,     0,   304,
       0,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,     0,   317,   318,   319,   320,   321,   322,   323,
     324,   325,     0,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,     0,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
       0,   352,   353,     0,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,     0,
     370,   371,   372,   373,   374,     0,   375,   376,   377,   378,
     379,     0,   381,   382,   383,   384,     0,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,     0,   399,   400,     0,   401,     0,   403,   404,   405,
     406,   407,     0,   408,   409,     0,     0,   410,   411,   412,
     413,   414,     0,   415,   416,   417,   418,   419,   420,   421,
       0,     0,   422,   423,   424,   425,   426,     0,     0,   427,
     428,   429,   430,   431,   432,   433,     0,   434,     0,   436,
     437,   438,   439,     0,     0,   440,     0,     0,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,  1016,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    90,    91,    92,    93,    94,
      95,    96,    97,     0,    98,    99,   100,     0,     0,     0,
       0,     0,     0,     0,   101,   102,     0,   103,   104,   105,
     106,   107,   108,   109,     0,  1017,   112,  1018,  1019,     0,
     115,   116,   117,   118,   119,   120,     0,     0,   121,   122,
    1020,  1021,   125,     0,   126,   127,   128,   129,     0,     0,
     131,     0,   132,   133,   134,   135,   136,   137,   138,   139,
     140,     0,   141,   142,   143,   144,   145,   146,     0,   147,
     148,   149,   150,     0,     0,     0,   151,     0,     0,     0,
     152,   153,   154,   155,   156,   157,   158,  1022,  1023,   161,
       0,   162,     0,   163,   164,   165,   166,   167,   168,     0,
     169,   170,   171,   172,   173,     0,     0,   174,   175,   694,
     177,   178,     0,   179,   180,   181,     0,   182,   183,   184,
       0,   185,   186,   187,   188,     0,   190,   191,   192,   193,
       0,     0,   195,     0,   196,   197,  1024,   199,     0,   200,
       0,   201,   202,     0,   203,   204,   205,   206,   207,   208,
       0,   209,     0,     0,   211,     0,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,     0,   223,   224,
     225,   226,   227,   228,     0,   229,   230,     0,   232,   233,
     234,   235,  1025,  1026,     0,  1027,     0,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,     0,     0,   249,
     250,   251,   252,     0,   253,   254,   255,     0,     0,   256,
     257,   258,   259,   260,  1028,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,  1029,   280,  1030,   282,   283,   284,     0,
       0,   286,   287,   288,   289,     0,     0,   291,  1031,   293,
     294,   295,     0,   296,   297,     0,     0,   298,   299,   300,
       0,     0,   301,     0,   303,   304,   305,     0,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,     0,   317,
     318,     0,   320,   321,     0,   323,   324,   325,     0,   326,
     327,   328,   329,   330,   331,   332,   333,   334,  1032,   336,
     337,   338,   339,     0,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,     0,   352,   353,   354,
     355,   356,   357,  1033,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,     0,   370,   371,   372,   373,
     374,     0,   375,  1034,   377,   378,   379,   380,   381,   382,
    1035,   384,     0,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,  1036,   397,     0,     0,   399,   400,
       0,   401,   402,   403,   404,   405,   406,   407,     0,  1037,
    1038,     0,     0,   410,   411,     0,   413,     0,     0,   415,
     416,   417,   418,   419,   420,   421,     0,     0,   422,   423,
     424,   425,   426,     0,     0,   427,   428,   429,   430,   431,
       0,  1039,     0,   434,   435,   436,   437,   438,   439,     0,
       0,   440,     0,     0,   441,   442,   443,   444,   445,   446,
     486,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   458,   459,   460,   461,     0,    90,    91,    92,    93,
      94,    95,    96,    97,     0,    98,    99,   100,     0,     0,
       0,     0,     0,     0,     0,   101,   102,     0,   103,   104,
     105,     0,   107,   108,   109,   110,   111,     0,   113,   114,
       0,   115,   116,   117,   118,   119,   120,     0,     0,   121,
     122,   123,   124,   125,     0,   126,   127,   128,   129,   130,
       0,     0,     0,   132,   133,   134,   135,   136,     0,   138,
     139,   140,     0,   141,   142,   143,   144,   145,   146,     0,
       0,   148,   149,   150,     0,     0,     0,     0,     0,     0,
       0,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     161,     0,   162,     0,   163,   164,   165,   166,   167,   168,
       0,   169,   170,   171,   172,   173,     0,     0,   174,   175,
     176,   177,   178,     0,   179,   180,   181,     0,   182,   183,
     184,     0,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,     0,   195,     0,   196,   197,   198,   199,     0,
     200,     0,   201,     0,     0,     0,   204,   205,   206,     0,
     208,     0,   209,     0,   210,   211,     0,   212,   213,   214,
     215,   216,   217,     0,   219,   220,   221,   222,     0,   223,
     224,   225,   226,   227,   228,     0,   229,     0,   231,   232,
     233,   234,   235,   236,   237,     0,   238,     0,   239,     0,
       0,   242,     0,   244,   245,   246,   247,   248,     0,     0,
     249,     0,   251,     0,     0,   253,   254,   255,     0,     0,
     256,   257,   258,   259,   260,     0,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,     0,   281,   282,   283,   284,
     285,     0,   286,   287,     0,   289,     0,   290,   291,   292,
     293,   294,   295,     0,   296,   297,     0,     0,   298,   299,
     300,     0,     0,   301,   302,     0,   304,     0,   306,   307,
     308,   309,   310,   311,   312,     0,   314,   315,   316,     0,
     317,   318,   319,   320,   321,   322,   323,   324,   325,     0,
     326,   327,   328,   329,   330,   331,   332,     0,   334,   335,
     336,   337,   338,   339,     0,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,     0,   352,   353,
       0,   355,   356,   357,   358,     0,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,     0,   370,   371,   372,
     373,   374,     0,   375,   376,   377,   378,   379,     0,   381,
     382,   383,   384,     0,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,     0,   399,
     400,     0,   401,     0,   403,   404,   405,   406,   407,     0,
     408,   409,     0,     0,   410,   411,   412,   413,   414,     0,
     415,   416,   417,   418,   419,   420,   421,     0,     0,   422,
     423,   424,   425,   426,     0,     0,   427,   428,   429,   430,
     431,   432,   433,     0,   434,     0,   436,   437,   438,   439,
       0,     0,   440,     0,     0,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,  1016,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    90,    91,    92,    93,    94,    95,    96,    97,
       0,    98,    99,   100,     0,     0,     0,     0,     0,     0,
       0,   101,   102,     0,   103,   104,   105,   106,   107,   108,
     109,     0,  1017,   112,  1018,  1019,     0,   115,   116,   117,
     118,   119,   120,     0,     0,   121,   122,  1020,  1021,   125,
       0,   126,   127,   128,   129,     0,     0,   131,     0,   132,
     133,   134,   135,   136,   137,   138,   139,   140,     0,   141,
     142,   143,   144,   145,   146,     0,   147,   148,   149,   150,
       0,     0,     0,   151,     0,     0,     0,   152,   153,   154,
     155,   156,   157,   158,  1022,  1023,   161,     0,   162,     0,
     163,   164,   165,   166,   167,   168,     0,   169,   170,   171,
     172,   173,     0,     0,   174,   175,   694,   177,   178,     0,
     179,   180,   181,     0,   182,   183,   184,     0,   185,   186,
     187,   188,     0,   190,   191,   192,   193,     0,     0,   195,
       0,   196,   197,  1024,   199,     0,   200,     0,   201,   202,
       0,   203,   204,   205,   206,   207,   208,     0,   209,     0,
       0,   211,     0,   212,   213,   214,   215,   216,   217,   218,
     219,   220,   221,   222,     0,   223,   224,   225,   226,   227,
     228,     0,   229,   230,     0,   232,   233,   234,   235,  1025,
    1026,     0,  1027,     0,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,     0,     0,   249,   250,   251,   252,
       0,   253,   254,   255,     0,     0,   256,   257,   258,   259,
     260,     0,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
    1029,   280,  1030,   282,   283,   284,     0,     0,   286,   287,
     288,   289,     0,     0,   291,  1031,   293,   294,   295,     0,
     296,   297,     0,     0,   298,   299,   300,     0,     0,   301,
       0,   303,   304,   305,     0,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,     0,   317,   318,     0,   320,
     321,     0,   323,   324,   325,     0,   326,   327,   328,   329,
     330,   331,   332,   333,   334,  1032,   336,   337,   338,   339,
       0,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,     0,   352,   353,   354,   355,   356,   357,
       0,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,     0,   370,   371,   372,   373,   374,     0,   375,
       0,   377,   378,   379,   380,   381,   382,  1035,   384,     0,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,   397,     0,     0,   399,   400,     0,   401,   402,
     403,   404,   405,   406,   407,     0,  1037,  1038,     0,     0,
     410,   411,     0,   413,     0,     0,   415,   416,   417,   418,
     419,   420,   421,     0,     0,   422,   423,   424,   425,   426,
       0,     0,   427,   428,   429,   430,   431,     0,  1039,     0,
     434,   435,   436,   437,   438,   439,     0,     0,   440,     0,
       0,   441,   442,   443,   444,   445,   446,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   458,   459,
     460,   461
};

static const yytype_int16 yycheck[] =
{
       6,     6,   513,   599,   514,     0,   614,    34,     0,    16,
     563,   547,   960,   654,   584,     0,   520,     6,    56,   846,
     832,   606,   719,   819,   691,   692,  1088,   559,   730,  1054,
    1116,    16,   654,  1360,   844,  1545,     0,   960,   960,     0,
     960,   990,   709,   608,  1614,  1886,   821,    29,   815,  1620,
     518,  1622,   858,  1958,  1112,  1113,   824,  1444,  1445,  1077,
      58,  1502,  1449,   520,    58,     0,  1077,  1966,  1611,  1565,
    1934,  1077,  1056,  1077,   849,    33,     5,     3,   599,  1973,
     601,    76,   603,     5,    13,    14,     5,   519,     5,     5,
     662,    50,   645,    58,    13,    14,   641,  1162,  1485,  1486,
      11,     9,   606,     5,    86,    31,    32,    73,  1851,     5,
       5,    13,    14,     5,     9,     5,    40,     5,     5,  1845,
     520,     9,     5,     5,   765,  2207,  2260,   982,     0,  1210,
    1208,    58,   167,    82,    75,    75,   168,  1680,     4,    40,
    2210,     5,   116,     9,    85,    85,     3,     4,     5,   606,
     654,   619,     9,  1239,     0,    11,   604,   661,  2213,     9,
    1537,  1538,     4,  2297,   106,    58,    15,     9,   119,    67,
     210,  2199,   144,   525,   136,  1875,   729,   126,  1721,  1722,
    2378,    93,    27,    11,   167,    41,   173,   144,  1850,    34,
     265,  2349,   833,  1788,   277,   836,   837,   654,  1542,   731,
     157,    27,   182,   183,   661,   162,   292,   772,    34,    11,
    2283,    27,  1556,    41,   662,   663,   161,    73,    34,   347,
      92,   279,  1034,  2470,   581,    11,   658,   759,    58,   114,
     121,   268,  2535,    27,   168,   325,   208,   301,    37,    41,
     166,   119,   168,   230,  2378,    73,    92,    20,  2434,  1905,
     157,   208,   663,   204,  2160,   117,   168,   114,  2306,   119,
     325,   814,   114,   767,   768,  2593,   164,  2595,   248,   249,
     227,    73,   444,   359,   134,   428,   786,   116,   663,  2327,
      23,   129,    11,  2618,   856,   857,   483,   105,   200,   393,
     487,   447,   862,   146,   449,   360,   680,   681,   117,   184,
    2205,    11,    30,   215,   486,    68,  1392,   489,   394,  2364,
     767,   768,   224,   285,  2561,   471,   471,   489,  1759,   276,
     227,   705,  1978,   427,   123,   187,    54,   581,   285,   394,
     485,  2634,   485,    76,  1904,   129,   373,  2665,   474,   192,
    2083,  1038,   236,  2416,    73,  2680,   258,   296,   434,   485,
     440,   426,   209,   301,   765,  1022,  1023,   485,  1901,   967,
    1903,   447,   307,   297,  1031,  2499,  2092,   279,   187,   262,
    2096,   106,    23,   230,   339,   440,   356,   357,    29,   264,
    1767,  1768,  1769,  1770,   832,   471,  1773,  1774,  1775,  1776,
    1777,  1778,  1779,  1780,  1781,  1782,   968,   982,  2532,   485,
     348,   107,   485,  2589,   285,  2652,  2454,   279,   856,   857,
     858,   398,   339,   400,   312,  2321,   480,   269,  2616,   107,
    2082,   832,   405,  1008,   242,  2020,   274,   485,  2128,   781,
     269,   343,   250,   279,  1230,  1822,  1823,   424,   372,  2467,
    1502,   290,  2600,   167,     5,  1988,   339,   832,   420,   489,
     399,   311,   394,   485,   489,   812,   430,  1834,  1835,  1836,
    1837,    31,    32,   420,   405,   405,   977,   391,   340,   980,
      92,     0,  1327,   366,   984,   426,   471,   988,   982,   471,
    1286,   443,  2616,   134,  1311,  2349,   471,    16,   992,  1547,
     391,  1818,  2562,   520,   340,  1060,   383,   384,  1579,  1843,
    1578,  1845,  1567,  2576,  1008,    34,  1059,   471,  2563,   339,
     471,  1573,   438,   520,   520,  1068,   428,   483,  2261,  1072,
     968,   487,    92,   421,   489,   982,   485,   262,  2610,    58,
     424,   376,   480,   449,   519,   992,  1121,   428,  1091,  1092,
     546,   547,  1107,  1108,  2270,   437,   584,    76,   426,  2275,
     376,  1008,  2278,  1359,   561,   471,   485,   563,   812,   991,
     376,   483,   489,   485,  2469,   487,   485,  2137,   485,   485,
     481,  1555,  1104,   571,  2473,   447,   484,   571,   573,  2150,
    2474,   573,    27,   485,   159,   449,  1034,  1159,   573,   485,
     485,   485,   992,   485,   576,   485,  1161,   485,   604,   605,
     606,   447,   485,   485,  1690,   447,   564,   471,   489,   573,
     476,   477,   573,  1124,   486,   338,   488,  1121,  1259,   476,
     477,   485,   407,  1034,    23,   481,   476,   477,  1269,   471,
    2126,  1272,   283,   285,   476,   477,  1020,  1021,   573,   645,
     486,   474,   488,   366,  1730,   220,  1030,   148,   654,  1034,
     478,   479,   480,   481,   487,   661,   662,   663,  2201,  1255,
    1746,   194,  1247,  2568,  1121,   450,    64,    65,  1116,   236,
      93,   428,   678,   658,   476,   477,   478,   479,   480,   481,
    1766,   405,   333,     0,   129,  2411,   337,   485,    59,  2130,
     476,   477,   478,   479,   480,   481,    67,  1759,  1082,  1083,
     706,     4,   729,  1344,   488,  1116,     9,  1228,   159,  1795,
     148,  1159,  1282,  1283,  1284,   366,   236,  1735,  1736,   725,
     726,   727,  1344,   729,  1735,  1736,  1737,  1394,   485,  1735,
    1734,  1116,  2059,  1682,  1255,   134,  2600,   359,  2308,    75,
     129,  1245,  1327,  1247,   750,   168,   438,  1805,  2092,    85,
     474,    11,  2096,  1274,  1265,   528,     8,   530,  1279,  1270,
     157,   767,   768,   487,    16,    17,    18,  1469,   478,   479,
     480,   481,   394,   236,  2679,   236,   549,   200,   236,  1324,
     431,    41,  1549,  1328,   486,   352,  1331,   489,  1245,   359,
    1247,  1239,   215,   799,  2635,  2636,   129,   803,   804,   797,
     798,   224,   800,   797,   798,   320,   800,   449,   814,   791,
     261,  1638,   434,    73,   449,   129,   248,   249,    67,   352,
     489,   359,   155,  1327,   394,   447,   832,   360,  1239,   471,
     227,    27,   352,   348,  1302,   258,   471,   489,  1286,     4,
    1344,   155,  2683,   485,     9,  1398,  2233,   485,  1934,   471,
     856,   857,   858,  1357,  1239,  1661,   394,   424,   359,   230,
     485,   394,   487,   485,   434,   114,   848,  1569,   438,  2439,
    1327,  1646,  1934,  2444,   194,   264,    48,   447,  1761,   276,
     486,   654,    78,   489,   283,   274,   335,  1344,   661,   352,
      86,   352,   486,   394,   352,   489,   434,   116,   168,   114,
    1357,   471,    23,   243,   424,   359,  1789,   440,    29,  2236,
    1463,  1359,  1360,    13,    14,   485,  2260,    75,   485,   115,
     343,   359,   171,  1691,   356,   357,  2270,    85,  1696,   410,
     200,  2275,  2319,   434,  2278,   236,   269,  1490,   337,   338,
     394,   274,   471,     4,  1392,   215,   447,   485,     9,  1360,
     264,   440,     4,  2297,   224,   269,   394,     9,   485,   732,
     274,   424,   968,   424,   355,   485,   424,   366,   157,   742,
     471,   347,   348,   162,  1544,  1360,   982,  1530,   485,   198,
     434,  1392,   755,  1349,   485,   992,   992,  1353,   184,  1355,
     519,   520,   765,   447,   767,   768,   434,  2384,    23,   195,
     172,   447,  1008,   449,    29,   264,   991,  1392,   468,   447,
     269,  1959,   214,   134,   186,   264,   487,   471,   480,   191,
     269,  2531,   485,   485,   485,   487,   279,   485,  1034,   281,
     478,   485,  1981,   471,  2378,   468,  1959,  1959,   227,  1959,
      13,    14,   571,   262,   573,   264,    23,   485,   347,   348,
     480,   352,    29,  1059,   226,   485,   216,   487,  2385,  1065,
     319,  1056,  1068,   312,  1056,   166,  1072,  2411,  2130,  1677,
     489,  1056,  1617,   343,  1619,   347,   348,   292,   327,   412,
    1086,   485,  2168,  1089,  1090,  1091,  1092,   276,  1915,   422,
    1712,   486,  1056,  1099,  1100,  1056,  1793,  1794,   412,  2669,
     486,   486,   262,   489,  1914,  1111,  1902,  2617,   422,   134,
    1116,  1117,  1118,  1119,  1120,  1121,  1620,  1621,  1622,  1125,
    1126,   216,   167,   424,  1130,  1710,   210,  2637,  1134,   658,
      54,  1137,  1138,  1139,  1140,  1141,  1142,  1143,  1144,  1145,
    2226,   485,  1148,  1953,   359,  1913,  1152,  1915,   483,  1155,
     485,  1157,   487,  1159,   214,  2499,  1462,   134,  1464,  1465,
    2185,   321,   283,  1620,  1621,  1622,   695,   262,   347,   348,
    1177,  1873,   421,   157,  1180,   325,   468,    23,   162,   394,
     149,  2691,   486,    29,   485,   489,   382,   149,  2532,   385,
    1185,   333,  1198,   486,  1705,     5,   489,   149,     8,   371,
     729,  1207,  1208,   149,    14,    23,  1710,   486,  1712,   369,
     360,    29,   333,  1661,    24,   398,   337,   400,    28,   434,
     472,   473,   474,   485,   476,   477,   478,   479,   480,   481,
     440,   486,   447,  1239,   489,   486,    81,  1802,   489,  1245,
     264,  1247,  1690,   227,   394,   366,   173,  1800,   486,   486,
     485,   489,   489,  1710,   486,  1712,   471,   489,   283,   486,
     451,   486,   489,  2349,   489,   149,   426,   194,   797,   798,
     485,   800,  2616,   486,   369,   486,   489,   149,   489,  1690,
    1286,   487,  1730,  1289,  1290,   149,  1292,  2349,   134,   398,
     440,   400,   276,  1934,    23,   398,   486,   400,  1746,   489,
      29,   252,   253,   230,  1077,  1690,   283,   485,   333,   487,
     431,   486,   337,  1319,   489,   279,   134,  1882,  1766,  1730,
    1315,  1327,  2347,  1855,   486,   486,   394,   489,   489,  2415,
     486,   426,  2418,   489,   486,  1746,   485,   489,  1344,  2166,
     486,   366,  2138,   489,   663,  1730,   486,  1795,  1933,   489,
    1935,  1357,    36,  1359,  1360,  1766,   333,   284,   225,   486,
     337,  1746,   489,     8,  2176,  2101,    11,   398,  2104,   400,
    1818,    16,    17,    18,   486,   486,     5,   489,   489,  1949,
     486,  1766,   486,   489,  1795,   489,  1392,   486,   486,   366,
     489,   489,  1398,  1399,  1167,     5,   486,   486,  1404,   489,
     489,   486,   356,   357,   489,   134,   431,  1818,   486,   486,
    1795,   489,   489,     8,   486,   486,    11,   489,   489,  1446,
     485,    16,    17,    18,   486,  1929,  2097,   489,  2099,  1933,
     578,  1935,   580,  1818,   548,  1980,   550,   283,  1444,  1445,
    1446,   162,   486,  1449,   169,   489,   486,   486,   173,   489,
     489,   308,   486,   485,   431,   489,  1462,  1463,  1464,  1465,
     767,   768,   991,  1490,  1470,   283,     5,   486,   485,   194,
     489,   398,  1929,   400,   486,   485,  1933,   489,  1935,  1485,
    1486,     5,   486,   485,  1490,   489,  1934,   333,     5,   486,
     485,   337,   489,   804,   421,   485,   485,   424,  1504,   485,
     485,  1507,   485,  1509,   485,   230,   485,   485,     5,   485,
     485,   485,   237,   832,  2600,   333,  2157,   485,   448,   337,
     366,    15,   210,  1934,  1530,    96,   489,  1056,    36,   366,
     162,   276,   162,  1560,   274,   225,  1542,  1542,  2600,   405,
     485,   485,    85,  2108,   405,  2355,   489,    54,   366,  1934,
    1556,  1556,    54,  1542,   283,   405,   255,  2122,   405,   284,
    1555,   486,   491,  1555,  1570,   405,   447,  1556,   149,    92,
    1555,  1344,   264,     6,   485,  1348,    36,   264,    11,  1585,
      36,  2117,    15,   487,  1357,   431,   489,   485,    21,    22,
      23,  1555,   485,    26,  1555,   437,    29,  1603,  1127,    32,
      33,  2223,   485,   485,    35,   485,   485,   443,   337,     9,
     403,  2059,    67,   431,  1620,  1621,  1622,   212,    73,   403,
      11,   663,   403,   485,  2169,  2170,   489,   352,   269,   485,
      85,   405,   176,   158,   167,   663,   281,   366,   486,   428,
      36,   485,   208,    76,   216,   369,  2150,   280,  2059,   216,
      83,    84,    85,    86,    87,  1661,  1185,   489,   489,   114,
     485,   116,   264,   216,   285,   486,   317,   440,    11,   277,
     485,   149,    15,   398,  2059,   400,   149,   447,   264,    22,
     279,  2348,   279,    36,  1690,   264,   281,    36,    35,    32,
      33,   483,   483,  2150,   405,   405,   421,   405,   405,   424,
     486,   486,   431,   486,  1710,   167,  1712,   486,  2349,   486,
     486,   486,   468,  1708,   486,  1034,   171,   468,   487,  2223,
    2168,   486,   489,   486,  1730,   486,   486,   486,  2176,   486,
     468,   167,   485,   405,   289,   485,   485,  1743,   485,   444,
    1746,    84,   444,   198,   279,   434,   474,  1753,   470,   280,
     280,  1757,   280,   426,  1760,   489,   235,  2168,   405,   264,
    1766,  1767,  1768,  1769,  1770,  2176,  2223,  1773,  1774,  1775,
    1776,  1777,  1778,  1779,  1780,  1781,  1782,   149,  2226,  1090,
    1786,  1787,   485,  2168,   194,   283,  1315,   149,  2236,  1795,
     832,  2176,  1830,   149,  1800,  2462,   405,  1116,   405,   405,
    1806,  1828,   405,  1809,   832,  1811,  2317,   486,   486,   264,
     486,   486,  1818,  1819,   269,  2226,  1822,  1823,  1845,   484,
     489,  1827,  1828,  2393,  2651,  2236,   277,   472,   473,   474,
     279,   476,   477,   478,   479,   480,   481,  1843,  1843,  1845,
    1845,  2226,   447,    36,    36,   149,   149,  2455,   269,   483,
    1856,  2236,   140,  1626,  1843,  2440,  1845,   312,   486,  1865,
     167,    11,   162,    55,   486,   167,  2419,   486,   486,   485,
     444,   486,   327,   394,   167,  1881,   489,   472,   473,   474,
     471,   476,   477,   478,   479,   480,   481,  1198,  2398,   176,
     486,   433,   486,   486,   340,    83,  1669,   485,   280,   149,
     485,  2349,   171,   415,    36,   485,  2416,   485,    79,   428,
     486,   484,   489,   105,   484,   167,   485,  1446,   486,   396,
    1239,   486,   485,  1929,   486,   485,   215,  1933,  1934,  1935,
    2538,   288,   215,   485,   286,    54,  2440,  2385,  2349,  1712,
    2444,   179,   474,  2496,  1717,   196,  1719,   447,   185,  2460,
    1723,  1724,   269,   269,   474,   405,    36,   405,   264,  2600,
     486,  1490,   106,   485,  2349,   447,   421,  2415,   279,   485,
    2418,    36,   167,   484,  2385,   485,   298,   446,    85,  1508,
      36,   485,  1977,  2440,   215,   130,   485,  2444,   327,   216,
     486,   114,  1034,   485,   485,  1524,    36,   149,    73,    55,
    2385,   193,  2512,   121,  2415,  2011,  1034,  2418,   149,  2605,
      36,   486,   348,  1542,  2599,     8,   348,    54,    11,    36,
     485,   485,  2533,    16,    17,    18,  1555,  1556,   485,   428,
    2415,  1560,   433,  2418,    73,   489,    36,   184,   428,   472,
     415,  1360,    67,   282,    67,   478,   485,  2053,  2054,   105,
     242,   484,  2058,  2059,   489,   488,   350,  2063,   250,    36,
    2066,  2067,   474,   269,   184,  2071,   240,   366,   485,   415,
     262,    36,   485,  1392,  1116,   282,   485,   282,   486,   486,
     513,   514,   515,   485,   262,   279,  2092,  2092,  1116,   347,
    2096,  2096,     9,   334,   196,  2599,   279,   279,    33,   486,
     485,   293,   426,  2092,   119,     9,    22,  2096,   486,  1916,
     573,  2117,  1253,  1615,  1929,   548,    83,   550,    85,  2121,
      87,  1879,  2532,   556,  2119,  2120,  2293,  2596,  1962,  2162,
    2602,   564,  2672,  1444,  1445,  2447,  2650,   193,  1449,  2638,
    2366,  1609,  2599,   576,  2150,   488,   338,  1621,   819,  2599,
    1967,  2648,  2600,  2159,  1671,   588,  1933,  2597,   977,  1606,
    1710,  1934,  2168,  1675,   144,  1956,  2223,  1570,   360,  1224,
    2176,   785,   515,   760,  1485,  1486,    36,   157,  2509,  1708,
     807,   806,   162,  1956,  2427,  2587,   242,  1198,   380,  2600,
     623,   624,   625,  1585,   250,    55,  1859,  1239,   191,     8,
    2521,  1223,    11,  2113,  1556,   809,   262,    16,    17,    18,
    2083,  1239,  1845,  2208,  2098,  2600,  2412,  2223,  2499,   212,
    2226,   564,  1843,  2498,    33,  2516,  1361,  2233,   208,  2517,
    2236,  2585,  2572,  2289,   667,  2586,  1077,   293,  2244,  2245,
    1153,  1573,  2248,  1077,  1077,   105,  1400,   227,  1077,  1292,
    1508,  1505,  1157,  1678,  2260,  2260,  2491,   992,  1177,    -1,
    1357,  1880,   791,  1178,  2270,  2270,    -1,    -1,    -1,  2275,
    2275,  2260,  2278,  2278,    -1,    -1,    -1,    -1,    -1,  2285,
    2286,  2270,   338,    -1,    -1,    -1,  2275,    -1,   281,  2278,
      -1,  2297,  2297,  2299,   486,    -1,   276,    -1,    -1,  1828,
      -1,    -1,    -1,    -1,   360,   285,    -1,    -1,  2297,    -1,
      -1,   171,    -1,  2319,  1843,    -1,  1845,    -1,  1360,    -1,
      -1,    -1,    -1,    -1,   380,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1360,   193,    -1,    -1,   769,    -1,    -1,  2112,
      -1,  2114,    -1,  2349,    -1,    -1,    -1,    -1,    -1,    -1,
    1392,    -1,   785,   786,    -1,    -1,    -1,    -1,   791,   792,
     793,    -1,    -1,  2358,  1392,    -1,    -1,    -1,    -1,    -1,
      -1,  1690,  2378,  2378,    -1,    -1,    -1,    -1,  2384,  2385,
      -1,    -1,   242,    -1,  2379,   818,   819,    -1,    -1,  2378,
     250,    -1,  2419,    -1,    -1,    -1,    -1,    -1,   831,    -1,
      -1,  2407,   262,   212,    -1,  2411,  2411,    -1,    -1,  2415,
      -1,  1730,  2418,  2419,    -1,   848,    -1,    -1,    -1,   852,
      -1,    -1,  2411,    -1,  2430,    -1,    -1,  1746,    -1,    -1,
      -1,    -1,    -1,   293,  2440,    -1,    -1,    -1,  2444,  2445,
     420,    -1,   785,    -1,    -1,    -1,    -1,  1766,  1977,    -1,
    2223,    -1,    -1,    -1,    -1,    -1,  1767,  1768,  1769,  1770,
      -1,    -1,  1773,  1774,  1775,  1776,  1777,  1778,  1779,  1780,
    1781,  1782,   281,    -1,    -1,    -1,  1795,  2472,   338,   472,
     473,   474,    -1,   476,   477,   478,   479,   480,   481,    -1,
    2496,    -1,    -1,  2499,  2499,    -1,    -1,    -1,    -1,  1818,
     360,    -1,    -1,   483,    -1,   472,   486,   487,    -1,    -1,
    2499,  1822,  1823,    -1,    -1,  2521,    -1,   484,    -1,    -1,
     380,    -1,    -1,   956,    -1,    -1,  2532,  2532,   961,    -1,
      -1,    -1,    -1,  2528,    -1,    -1,    50,    -1,   971,    -1,
      -1,    -1,     8,  2532,   977,    11,  2552,   980,    -1,    -1,
      -1,   984,   985,    -1,   987,   988,    -1,   990,    -1,    -1,
      -1,    -1,    -1,  2092,    -1,  2571,  2572,  2096,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    41,  2349,    -1,    -1,    -1,
      94,    -1,    48,    -1,    -1,    -1,    -1,    -1,    -1,   556,
    2119,  2120,    -1,  2599,  2600,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   120,    73,    -1,    -1,
    2616,  2616,  2618,    -1,  2609,  1934,    -1,    -1,    -1,    -1,
      -1,   588,     8,    -1,   138,    11,    -1,  2616,   142,    -1,
      16,    17,    18,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   985,    -1,   987,    -1,    -1,    33,  1690,   163,
      -1,    -1,   166,    -1,    -1,  1088,   623,   624,   625,    -1,
      -1,    -1,  1690,   472,   473,   474,   180,   476,   477,   478,
     479,   480,   481,    -1,  2680,    -1,   142,    -1,    -1,  2208,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1730,    -1,
      -1,  1124,    -1,    -1,    -1,  2468,    -1,    -1,    -1,    -1,
      -1,    -1,  1730,    -1,  1746,    -1,   172,    -1,   663,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1746,    -1,
     186,    -1,    -1,  1156,  1766,   191,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1766,    -1,
    2059,  2270,    -1,  1176,    -1,  1178,  2275,    -1,    -1,  2278,
      -1,    -1,    -1,  1795,  1187,   269,  1189,    -1,    -1,    -1,
     226,     8,    -1,   277,    11,    -1,    -1,  1795,    -1,    16,
      17,    18,    -1,    -1,    -1,    -1,  1818,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    33,    -1,  1221,    -1,
    1818,    -1,    -1,    -1,    -1,    -1,    -1,  1230,  1231,   663,
      -1,    -1,   769,    -1,    -1,   319,    -1,    -1,  1241,  1242,
    1243,  1244,    -1,  1246,    -1,   281,    -1,    -1,    -1,  1252,
      -1,  1254,    -1,    -1,    -1,   792,   212,  2600,    -1,  2358,
      -1,    -1,  1265,  1266,    -1,    -1,    -1,  1270,  1271,    -1,
      -1,    -1,  1275,  1276,  1277,  1278,    -1,  1280,  1281,  2168,
    2379,   818,    -1,    -1,    -1,    -1,    -1,  2176,    -1,    -1,
      -1,    -1,    -1,    -1,   831,    -1,    -1,  1300,  1301,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   832,    -1,   654,
    1313,    -1,  2411,    -1,    -1,   852,   661,    -1,  1231,    -1,
    2419,    -1,  1934,    -1,    -1,   281,    -1,    -1,  1241,    -1,
    1243,   108,   109,  1246,    -1,   371,  1934,  2226,    -1,  1252,
      -1,  1254,    -1,    -1,    -1,    -1,    -1,  2236,    -1,    -1,
      -1,    -1,  2233,  1266,    -1,    -1,    -1,    -1,  1271,  1362,
      -1,    -1,  1275,  1276,  1277,  1278,    -1,  1280,  1281,    -1,
      -1,    -1,    -1,  2472,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,     8,    -1,    -1,    11,    -1,
      -1,    -1,    -1,    -1,    -1,   212,    -1,   742,   832,    -1,
      -1,    -1,    -1,    -1,    -1,   182,   183,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    41,    -1,
     765,    -1,   767,   768,   961,    48,    -1,    -1,    -1,  2528,
      -1,    -1,    -1,   469,    -1,    -1,    -1,    -1,  2319,    -1,
     476,   477,   478,   479,   480,   481,    -1,  2059,    -1,    -1,
      73,    -1,    -1,   990,    -1,    -1,    -1,    -1,    -1,    -1,
    2349,  2059,    -1,    -1,   281,    -1,    -1,   244,   245,   246,
     247,   248,   249,    -1,    -1,   252,   253,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   833,    -1,
    1090,   836,   837,    -1,    -1,    -1,  2385,     8,    -1,  1502,
      11,    -1,    -1,  2384,    -1,    16,    17,    18,    -1,  1034,
    2609,    -1,    -1,    -1,    -1,    -1,   472,   473,   474,   142,
     476,   477,   478,   479,   480,   481,  2415,    -1,    -1,  2418,
      -1,    -1,  1535,    -1,    -1,    -1,    -1,    -1,    -1,  1542,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   172,
      -1,    -1,    -1,  1556,    -1,    -1,  2168,  1560,    -1,    -1,
    1563,    -1,  1565,   186,  2176,    -1,    -1,    -1,   191,    -1,
    2168,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2176,   356,
     357,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1116,    -1,    -1,    -1,    -1,    -1,    -1,  1198,    -1,
    1034,    -1,    -1,   226,    -1,    -1,    -1,    -1,  1611,    -1,
      -1,    -1,    -1,    -1,  2226,    -1,    -1,    -1,    -1,  1156,
      -1,    -1,    -1,    -1,  2236,    -1,    -1,    -1,  2226,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2236,  1176,
      -1,  1178,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   997,   998,    -1,   472,   473,   474,   281,   476,
     477,   478,   479,   480,   481,    -1,    -1,    -1,  1671,    -1,
      -1,    -1,    -1,  1676,    -1,    -1,    -1,  1680,  1681,  1682,
    1683,    -1,  1116,    -1,  1221,    -1,    -1,    -1,   465,   466,
      -1,  1694,    -1,    -1,    -1,    -1,    -1,    -1,  1701,    -1,
      -1,   212,  1705,    -1,    -1,    -1,    -1,    -1,   485,    -1,
      -1,  2600,    -1,    -1,  1239,    -1,    -1,    -1,  1721,  1722,
      -1,    -1,    -1,    -1,    -1,  1070,  1071,    -1,    -1,    -1,
      -1,    -1,    -1,  1078,    -1,  1080,  1081,  2349,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   371,    -1,
    1095,  2349,  1097,    -1,    -1,    -1,  1759,    -1,    -1,    -1,
      -1,    -1,    -1,  1300,    -1,  1110,    -1,    -1,    -1,    -1,
     281,    -1,    -1,  2385,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1694,     8,    -1,    -1,    11,    -1,  2385,    -1,    -1,
      16,    17,    18,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2415,    -1,  1239,  2418,    33,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2415,    -1,    -1,
    2418,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1832,
      -1,    -1,    -1,    -1,    -1,  1360,    -1,  1840,  1841,  1842,
    1843,    -1,  1845,  1846,  1444,  1445,   469,  1850,  1851,  1449,
      -1,    -1,    -1,   476,   477,   478,   479,   480,   481,    -1,
      -1,    -1,  1207,  1208,    -1,    -1,     3,  1392,     5,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1879,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1485,  1486,    -1,    -1,    -1,
      -1,    -1,  1895,    -1,  1897,    -1,    -1,    -1,  1901,  1902,
    1903,    -1,  1905,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1259,    -1,    -1,    -1,  1921,    -1,
    1923,    -1,    -1,    -1,  1269,    -1,  1360,  1272,    -1,    -1,
      -1,    -1,    -1,  1936,  1937,  1938,  1939,  1940,  1941,  1942,
    1943,  1944,  1945,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1960,  1392,    -1,
      -1,   472,   473,   474,  1967,   476,   477,   478,   479,   480,
     481,   108,   109,    -1,    -1,  1978,    -1,    -1,  1981,    -1,
      -1,    -1,    -1,    -1,  1897,  1988,   212,    -1,  2600,    -1,
      -1,    -1,    -1,    -1,  1997,    -1,    -1,    -1,  1535,  1344,
      -1,    -1,  2600,    -1,    -1,    -1,   546,   547,  1921,    -1,
      -1,    -1,  1357,    -1,    -1,    -1,    -1,    -1,    -1,     8,
      -1,    -1,    11,  1936,  1937,  1938,  1939,  1940,  1941,  1942,
    1943,  1944,  1945,    -1,    -1,    -1,  1381,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   182,   183,    -1,    -1,    -1,
      -1,    -1,    41,    -1,    -1,   281,    -1,    -1,    -1,    48,
      -1,    -1,    -1,    -1,   604,   605,    -1,    -1,    -1,  2072,
      -1,    -1,  2075,  2076,  2077,  2078,    -1,    -1,    -1,  2082,
    2083,    -1,  2085,    -1,    73,  2088,    -1,    -1,    -1,  2092,
      -1,    -1,    -1,  2096,    -1,    -1,    -1,    -1,    -1,  2102,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   244,   245,   246,
     247,   248,   249,    -1,    -1,   252,   253,    -1,  2121,    -1,
      -1,    -1,   662,  2126,    -1,    -1,    -1,  2130,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2138,    -1,    -1,   678,  1676,
      -1,    -1,    -1,    -1,  1681,  1682,  1683,    -1,    -1,    -1,
      -1,    -1,    -1,   142,    -1,    -1,    -1,    -1,    -1,    -1,
    2163,    -1,    -1,    -1,  1701,  1690,   706,  1767,  1768,  1769,
    1770,    -1,    -1,  1773,  1774,  1775,  1776,  1777,  1778,  1779,
    1780,  1781,  1782,   172,    -1,   725,   726,   727,    -1,   729,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   186,  2201,   108,
     109,  1546,   191,    -1,  2207,  1730,    -1,    -1,    -1,    -1,
     750,    -1,    -1,    -1,    -1,  2218,    -1,    -1,    -1,   356,
     357,  1746,  1822,  1823,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1577,  1578,    -1,     0,    -1,   226,    -1,    -1,
      -1,  1766,    -1,    -1,    -1,    -1,   472,   473,   474,    -1,
     476,   477,   478,   479,   480,   481,  1690,  2260,  2261,   799,
      -1,    -1,  2265,   803,   804,  2268,    -1,  2270,    -1,    -1,
    1795,    -1,  2275,   182,   183,  2278,    -1,  2280,    -1,    -1,
    2283,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   281,  1818,  2297,    -1,  1730,    -1,    -1,    -1,
      -1,    -1,    -1,  1840,  1841,  1842,    -1,    -1,    -1,    -1,
      -1,    -1,  1746,    -1,  2317,  2318,   856,   857,   858,    -1,
      -1,    -1,    -1,  2326,    -1,    -1,    -1,    92,   465,   466,
      -1,    -1,  1766,    -1,    -1,   244,   245,   246,   247,   248,
     249,    -1,    -1,   252,   253,    -1,    -1,  2350,  2351,    -1,
      -1,    -1,    -1,    -1,    -1,   743,    -1,  2360,  1895,    -1,
    2363,  1795,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2375,    -1,    -1,  2378,    -1,    -1,    -1,   144,
      -1,    -1,   371,    -1,  1818,    -1,  1731,  1732,    -1,    -1,
      -1,    -1,   157,    -1,   782,  2398,    -1,   162,    -1,    -1,
      -1,    -1,   167,    -1,    -1,  2318,    -1,    -1,  2411,  1934,
      -1,   176,    -1,  2416,   179,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2425,  1960,    -1,    -1,  2429,    -1,   968,    -1,
      -1,    -1,    -1,    -1,    -1,  2438,    -1,  2350,  2351,    -1,
      -1,    -1,    -1,   208,  1981,    -1,    -1,   356,   357,    -1,
    2363,    -1,    -1,    -1,    -1,    -1,    -1,  2460,    -1,    -1,
      -1,    -1,   227,    -1,    -1,    -1,    -1,    -1,  2471,    -1,
      -1,    -1,    -1,   861,    -1,    -1,    -1,    -1,   866,    -1,
     469,    -1,    -1,    -1,    -1,    -1,    -1,   476,   477,   478,
     479,   480,   481,    -1,    -1,    -1,  2499,    -1,    -1,    -1,
    1934,    -1,    -1,    -1,    -1,  2508,    -1,    -1,    -1,  2512,
      -1,   276,    -1,  2516,   279,    -1,  2429,    -1,    -1,    -1,
     285,    -1,    -1,    -1,    -1,  1065,    -1,    -1,    -1,  2532,
    2533,  2534,  2535,    -1,  2059,    -1,    -1,    -1,  2075,  2076,
    2077,  2078,    -1,    -1,    -1,    -1,  1086,    -1,    -1,  1089,
      -1,    -1,  1092,    -1,    -1,    -1,   465,   466,    -1,  1099,
    1100,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1111,    -1,  2576,    -1,   340,    -1,  1117,  1118,  1119,
    1120,    -1,  2585,    -1,  2587,  1125,  1126,    -1,    -1,  1934,
    1130,    -1,    -1,  2596,  1134,    -1,    -1,  1137,  1138,  1139,
    1140,  1141,  1142,  1143,  1144,  1145,    -1,  2610,  1148,    -1,
      -1,    -1,  1152,  2616,    -1,  1155,    -1,  1157,    -1,  1159,
      -1,    -1,    -1,    -1,    -1,  2059,    -1,    -1,    -1,   394,
      -1,  2634,    -1,  2233,    -1,    -1,    -1,    -1,    -1,    -1,
    1180,    -1,    -1,  2168,    -1,    -1,    -1,    -1,    -1,    -1,
    1995,  2176,    -1,    -1,    -1,   420,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   428,    -1,    -1,    -1,  1207,  1208,    -1,
      -1,    -1,    -1,    -1,    -1,  1063,    -1,    -1,    -1,   444,
      -1,   446,   447,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1085,    -1,    -1,
      -1,  2226,  1090,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2236,    -1,  1101,  1102,  1103,    -1,  1105,   483,  2319,
      -1,   486,   487,   488,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2168,    -1,     8,    -1,    -1,    11,
      -1,    -1,  2176,    -1,    -1,    -1,  1286,    -1,    -1,  1289,
    1290,    -1,  1292,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1154,    -1,    -1,    41,
      -1,    -1,    -1,    -1,    -1,    -1,    48,    -1,    -1,  1319,
      -1,    -1,    -1,    -1,  2384,    -1,    -1,    -1,    -1,  2326,
      -1,    -1,  2226,    -1,    -1,    -1,    -1,     0,    -1,    -1,
      -1,    73,  2236,    -1,    -1,    -1,  1194,    -1,    -1,    -1,
      -1,    -1,  2157,    -1,    -1,    -1,    19,  2162,  1206,  1359,
      -1,    -1,    -1,  1211,  2349,    -1,    29,    -1,    31,    32,
      -1,    -1,  2177,  2178,    -1,    -1,    -1,     8,  2375,    -1,
      11,    -1,    -1,    -1,    47,    16,    17,    18,    -1,    -1,
      -1,    -1,    -1,    56,    -1,    -1,    -1,    -1,    -1,  1399,
    2385,    -1,    33,    -1,  1404,    68,    -1,    -1,    -1,    -1,
      41,    -1,    -1,    -1,    -1,    -1,    79,    48,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    90,    -1,    92,
    2415,    -1,    -1,  2418,    -1,    -1,    -1,    -1,    -1,    -1,
     172,  2438,    73,    -1,    -1,    -1,  1446,   110,    -1,    -1,
      -1,    -1,    -1,    -1,   186,  2349,    -1,    -1,    -1,   191,
      -1,   124,  1462,    -1,  1464,  1465,    -1,    -1,    -1,    -1,
    1470,   134,    -1,    -1,  2471,    -1,    -1,   140,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   148,    -1,   150,   151,    -1,
      -1,  2385,    -1,    -1,   226,    -1,    -1,    -1,    -1,    -1,
     163,    -1,    -1,    -1,  1504,    -1,    -1,  1507,    -1,  1509,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2415,    -1,    -1,  2418,    -1,    -1,   190,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2340,  2341,    -1,    -1,    -1,
      -1,   172,    -1,    -1,  2349,    -1,    -1,    -1,    -1,   281,
      -1,    -1,    -1,    -1,  1402,   186,    -1,    -1,    -1,    -1,
     191,    -1,    -1,    -1,    -1,    -1,   229,    -1,    -1,    -1,
    1570,    -1,    -1,    -1,    -1,    -1,    -1,  1425,    -1,    -1,
      -1,   212,   213,    -1,    -1,  1585,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1442,   226,  1444,  1445,    -1,  1447,
      -1,  1449,    -1,  1603,    -1,    -1,  1454,    -1,    -1,    -1,
      -1,    -1,    -1,  1461,    -1,  2600,    -1,    -1,  1466,    -1,
      -1,    -1,    -1,    -1,  1472,    -1,    -1,    -1,  1476,  1477,
    1478,  1479,    -1,   264,    -1,    -1,   267,  1485,  1486,   371,
    1488,  1489,    -1,   306,    -1,    -1,   309,    -1,    -1,    -1,
     281,    -1,  1500,   284,    -1,  1503,    -1,    -1,    -1,    -1,
      -1,  1661,    -1,  1511,  1512,  1513,  1514,  1515,  1516,  1517,
    1518,  1519,  1520,    -1,   337,    -1,    -1,    -1,    -1,    -1,
    1528,    -1,   345,    -1,  1532,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   359,    -1,    -1,    -1,
      -1,    -1,    -1,   366,    -1,  1553,  2600,   370,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   380,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,    -1,    -1,    -1,    -1,    -1,   469,    -1,    -1,
     371,    -1,    -1,  1743,   476,   477,   478,   479,   480,   481,
      -1,    -1,    -1,  1753,    -1,    -1,    -1,  1757,    -1,    -1,
    1760,    -1,    -1,    -1,    -1,    -1,   429,    -1,    -1,    -1,
      -1,   434,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   447,    -1,  1786,  1787,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2600,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,     0,  1806,    -1,   471,  1809,
      -1,  1811,    -1,    -1,    -1,    -1,  1664,  1665,  1666,  1819,
      -1,    -1,   485,    -1,    -1,   488,    -1,  1827,  1828,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   469,    -1,
      -1,   472,   473,   474,    -1,   476,   477,   478,   479,   480,
     481,  1699,    -1,    -1,    -1,    -1,  1856,    -1,   489,    -1,
      -1,    -1,     0,    -1,    -1,  1865,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1881,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1742,    -1,    -1,    92,    -1,    -1,
    1748,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1763,  1764,  1765,    -1,  1767,
    1768,  1769,  1770,    -1,    -1,  1773,  1774,  1775,  1776,  1777,
    1778,  1779,  1780,  1781,  1782,  1783,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,
      -1,    -1,    -1,    -1,    92,  1803,    -1,    -1,    -1,  1807,
    1808,    -1,   157,    -1,    -1,    -1,    -1,   162,    -1,    -1,
      -1,    -1,   167,  1821,  1822,  1823,  1824,    -1,  1826,    -1,
      -1,   176,    -1,    -1,   179,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,
      -1,  2011,    -1,   208,    -1,    -1,    -1,    -1,    -1,   157,
      -1,    -1,    -1,    -1,   162,    -1,    -1,    -1,    -1,   167,
      -1,    -1,   227,    -1,    -1,    -1,    -1,    -1,   176,    -1,
      -1,   179,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1898,    -1,    -1,  2053,  2054,    -1,    -1,    -1,  2058,    -1,
      -1,    -1,    -1,  2063,    -1,    -1,  2066,  2067,    -1,    -1,
     208,  2071,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   276,    -1,    -1,   279,    -1,    -1,    -1,    -1,   227,
     285,     3,    -1,    -1,    -1,    -1,     8,    -1,    -1,    11,
      -1,    -1,    -1,    -1,    16,    17,    18,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2117,    -1,    -1,
      -1,    33,    -1,    -1,    36,    -1,    -1,    -1,    -1,    41,
      -1,    -1,    -1,    -1,    -1,    -1,    48,    -1,   276,    -1,
       8,   279,    -1,    11,    -1,   340,    -1,   285,    16,    17,
      18,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2159,
      -1,    73,    -1,    -1,  2012,    -1,    -1,    -1,  2016,  2017,
      -1,  2019,    -1,    41,  2022,  2023,  2024,  2025,    -1,    -1,
      48,  2029,  2030,  2031,  2032,  2033,  2034,  2035,  2036,  2037,
    2038,  2039,  2040,    -1,    -1,    -1,    -1,    -1,    -1,   394,
      36,    -1,   340,    -1,  2052,    73,    -1,  2055,    -1,  2057,
      -1,    -1,    -1,  2061,    -1,    -1,  2064,  2065,    -1,    55,
    2068,  2069,    -1,    -1,    -1,   420,    -1,    -1,    -1,    -1,
      -1,    -1,     8,   428,    -1,    11,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2244,  2245,    -1,    -1,  2248,   444,
      -1,   446,   447,    -1,    -1,    -1,   394,    -1,    -1,    -1,
     172,  2109,    -1,    -1,    -1,    41,    -1,    -1,  2116,   105,
     106,    -1,    48,    -1,   186,    -1,    -1,    -1,   114,   191,
      -1,  2129,   420,    -1,    -1,  2285,  2286,    -1,   483,    -1,
     428,   486,   487,   488,    -1,    -1,    -1,    73,    -1,  2299,
     212,   213,    -1,    -1,   172,    -1,   444,    -1,   446,   447,
      -1,    -1,    -1,    -1,   226,    -1,    -1,    -1,   186,    -1,
      -1,    -1,    -1,   191,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   171,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   483,    -1,    -1,   486,   487,
     488,    -1,   264,    -1,    -1,   267,    -1,   193,   226,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   142,    -1,    -1,   281,
      -1,    -1,   284,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2229,    -1,    -1,    -1,  2233,    -1,    -1,    -1,    -1,
    2238,  2239,  2240,    -1,    -1,  2243,   172,    -1,  2246,  2247,
      -1,    -1,    -1,  2251,    -1,    -1,   242,  2407,    -1,    -1,
     186,    -1,    -1,   281,   250,   191,    -1,    -1,    -1,  2419,
      -1,    -1,    -1,    -1,    -1,    -1,   262,    -1,   264,    -1,
    2430,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2445,    -1,    -1,    -1,    -1,
     226,    -1,    -1,    -1,    -1,    -1,    -1,   293,    -1,   371,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2319,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2337,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   338,   371,    -1,   281,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2521,    -1,    -1,   360,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2383,  2384,    -1,    -1,    -1,
    2388,  2389,  2390,    -1,   380,    -1,   382,    -1,    -1,   385,
      -1,    -1,  2552,    -1,    -1,    -1,    -1,   469,    -1,    -1,
     472,   473,   474,    -1,   476,   477,   478,   479,   480,   481,
      -1,  2571,  2572,    -1,    -1,  2423,  2424,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2436,    -1,
      -1,    -1,    -1,    -1,    -1,   371,    -1,    -1,    -1,    -1,
    2448,   469,    -1,    -1,   472,   473,   474,    -1,   476,   477,
     478,   479,   480,   481,    -1,    -1,    -1,    -1,  2618,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2493,    -1,    -1,    -1,   485,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2511,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2680,    -1,  2530,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   469,    -1,    -1,  2544,    -1,    -1,    -1,
     476,   477,   478,   479,   480,   481,    -1,    -1,    -1,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    27,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,  2607,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,  2621,    68,    69,    70,    71,    72,    -1,
      74,    -1,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    -1,    86,    87,    88,    89,    90,    91,    -1,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,    -1,   117,   118,   119,   120,   121,   122,    -1,
     124,   125,   126,   127,   128,   129,    -1,   131,   132,   133,
     134,   135,    -1,   137,   138,   139,    -1,   141,   142,   143,
      -1,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,    -1,   158,   159,   160,   161,    -1,   163,
      -1,   165,   166,    -1,   168,   169,   170,   171,   172,   173,
      -1,   175,    -1,   177,   178,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,   190,    -1,   192,   193,
     194,   195,   196,   197,    -1,   199,   200,   201,   202,   203,
     204,   205,   206,   207,    -1,   209,    -1,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,    -1,    -1,   223,
     224,   225,   226,    -1,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,    -1,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,    -1,   277,   278,    -1,    -1,   281,   282,   283,
      -1,    -1,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,    -1,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,    -1,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,    -1,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,    -1,   392,   393,
      -1,   395,   396,   397,   398,   399,   400,   401,    -1,   403,
     404,    -1,    -1,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,    -1,    -1,   422,   423,
     424,   425,   426,   427,    -1,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,    -1,
      -1,   445,    -1,    -1,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,    -1,    -1,    -1,    -1,
      -1,    -1,   476,   477,   478,    -1,    -1,    -1,    -1,    -1,
      -1,   485,   486,    -1,    -1,    -1,   490,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
     166,    -1,   168,   169,   170,   171,   172,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,   200,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,    -1,    -1,   223,   224,   225,
     226,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,    -1,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,    -1,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,    -1,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,    -1,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
      -1,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,    -1,    -1,   422,   423,   424,   425,
     426,   427,    -1,   429,   430,   431,   432,   433,   434,   435,
      -1,   437,   438,   439,   440,   441,   442,    -1,    -1,   445,
      -1,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,    -1,   471,    -1,    -1,    -1,    -1,
     476,   477,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   485,
     486,    -1,    -1,    -1,   490,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,   166,    -1,
     168,   169,   170,   171,   172,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,   200,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,    -1,    -1,   223,   224,   225,   226,    -1,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
      -1,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,    -1,   277,
     278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,    -1,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,    -1,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,    -1,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,    -1,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,    -1,   403,   404,    -1,    -1,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,    -1,    -1,   422,   423,   424,   425,   426,   427,
      -1,   429,   430,   431,   432,   433,   434,   435,    -1,   437,
     438,   439,   440,   441,   442,    -1,    -1,   445,    -1,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,    -1,   471,    -1,    -1,    -1,    -1,   476,   477,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   485,    -1,    -1,
      -1,    -1,   490,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    74,    -1,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    -1,    86,    87,    88,    89,
      90,    91,    -1,    93,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,    -1,   117,   118,   119,
     120,   121,   122,    -1,   124,   125,   126,   127,   128,    -1,
      -1,   131,   132,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,    -1,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,    -1,   158,   159,
     160,   161,    -1,   163,    -1,   165,   166,   167,   168,   169,
     170,   171,   172,   173,    -1,   175,    -1,   177,   178,    -1,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
     190,    -1,   192,   193,   194,   195,   196,   197,    -1,   199,
     200,   201,   202,   203,   204,   205,   206,   207,    -1,   209,
      -1,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,    -1,   222,   223,   224,   225,   226,    -1,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,    -1,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,    -1,   277,   278,    -1,
      -1,   281,   282,   283,    -1,    -1,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,    -1,   303,   304,   305,   306,   307,   308,   309,
     310,   311,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
      -1,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,    -1,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,    -1,   392,   393,    -1,   395,   396,   397,   398,   399,
     400,   401,    -1,   403,   404,    -1,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
      -1,    -1,   422,   423,   424,   425,   426,   427,    -1,   429,
     430,   431,   432,   433,   434,   435,    -1,   437,   438,   439,
     440,   441,   442,    -1,    -1,   445,    -1,    -1,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
      -1,    -1,    -1,    -1,    -1,    -1,   476,   477,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   485,    -1,    -1,    -1,    -1,
     490,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    74,    -1,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    -1,    86,    87,    88,    89,    90,    91,
      -1,    93,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,    -1,   117,   118,   119,   120,   121,
     122,    -1,   124,   125,   126,   127,   128,    -1,    -1,   131,
     132,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
     142,   143,    -1,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,    -1,   158,   159,   160,   161,
      -1,   163,    -1,   165,   166,    -1,   168,   169,   170,   171,
     172,   173,    -1,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,   190,    -1,
     192,   193,   194,   195,   196,   197,    -1,   199,   200,   201,
     202,   203,   204,   205,   206,   207,    -1,   209,    -1,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,    -1,
      -1,   223,   224,   225,   226,    -1,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,    -1,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,    -1,   277,   278,    -1,    -1,   281,
     282,   283,    -1,    -1,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
      -1,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,    -1,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,    -1,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,    -1,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,    -1,
     392,   393,    -1,   395,   396,   397,   398,   399,   400,   401,
      -1,   403,   404,    -1,    -1,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,    -1,    -1,
     422,   423,   424,   425,   426,   427,    -1,   429,   430,   431,
     432,   433,   434,   435,    -1,   437,   438,   439,   440,   441,
     442,    -1,    -1,   445,    -1,    -1,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,    -1,    -1,
      -1,    -1,    -1,    -1,   476,   477,   478,    -1,    -1,    -1,
      -1,    -1,    -1,   485,    -1,    -1,    -1,    -1,   490,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    27,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      74,    -1,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    -1,    86,    87,    88,    89,    90,    91,    -1,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,    -1,   117,   118,   119,   120,   121,   122,    -1,
     124,   125,   126,   127,   128,    -1,    -1,   131,   132,   133,
     134,   135,    -1,   137,   138,   139,    -1,   141,   142,   143,
      -1,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,    -1,   158,   159,   160,   161,    -1,   163,
      -1,   165,   166,    -1,   168,   169,   170,   171,   172,   173,
      -1,   175,    -1,   177,   178,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,   190,    -1,   192,   193,
     194,   195,   196,   197,    -1,   199,   200,   201,   202,   203,
     204,   205,   206,   207,    -1,   209,    -1,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,    -1,    -1,   223,
     224,   225,   226,    -1,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,    -1,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,    -1,   277,   278,    -1,    -1,   281,   282,   283,
      -1,    -1,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,    -1,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,    -1,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,    -1,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,    -1,   392,   393,
      -1,   395,   396,   397,   398,   399,   400,   401,    -1,   403,
     404,    -1,    -1,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,    -1,    -1,   422,   423,
     424,   425,   426,   427,    -1,   429,   430,   431,   432,   433,
     434,   435,    -1,   437,   438,   439,   440,   441,   442,    -1,
      -1,   445,    -1,    -1,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,    -1,    -1,    -1,    -1,
      -1,    -1,   476,   477,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   485,    -1,    -1,    -1,    -1,   490,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
     166,    -1,   168,   169,   170,   171,   172,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,   200,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,    -1,    -1,   223,   224,   225,
     226,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,    -1,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,    -1,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,    -1,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,    -1,   392,   393,    -1,   395,
     396,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
      -1,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,    -1,    -1,   422,   423,   424,   425,
     426,   427,    -1,   429,   430,   431,   432,   433,   434,   435,
      -1,   437,   438,   439,   440,   441,   442,    -1,    -1,   445,
      -1,    -1,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,    -1,    -1,    -1,    -1,    -1,    -1,
     476,   477,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   485,
     486,    -1,    -1,    -1,   490,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,   166,    -1,
     168,   169,   170,   171,   172,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,   200,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,    -1,    -1,   223,   224,   225,   226,    -1,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
      -1,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,    -1,   277,
     278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,    -1,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,    -1,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,    -1,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,    -1,   392,   393,    -1,   395,   396,   397,
     398,   399,   400,   401,    -1,   403,   404,    -1,    -1,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,    -1,    -1,   422,   423,   424,   425,   426,   427,
      -1,   429,   430,   431,   432,   433,   434,   435,    -1,   437,
     438,   439,   440,   441,   442,    -1,    -1,   445,    -1,    -1,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,    -1,    -1,    -1,    -1,    -1,    -1,   476,   477,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   485,   486,    -1,
      -1,    -1,   490,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    74,    -1,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    -1,    86,    87,    88,    89,
      90,    91,    -1,    93,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,    -1,   117,   118,   119,
     120,   121,   122,    -1,   124,   125,   126,   127,   128,    -1,
      -1,   131,   132,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,    -1,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,    -1,   158,   159,
     160,   161,    -1,   163,    -1,   165,   166,    -1,   168,   169,
     170,   171,   172,   173,    -1,   175,    -1,   177,   178,    -1,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
     190,    -1,   192,   193,   194,   195,   196,   197,    -1,   199,
     200,   201,   202,   203,   204,   205,   206,   207,    -1,   209,
      -1,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,    -1,    -1,   223,   224,   225,   226,    -1,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,    -1,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,    -1,   277,   278,    -1,
      -1,   281,   282,   283,    -1,    -1,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,    -1,   303,   304,   305,   306,   307,   308,   309,
     310,   311,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
      -1,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,    -1,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,    -1,   392,   393,    -1,   395,   396,   397,   398,   399,
     400,   401,    -1,   403,   404,    -1,    -1,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
      -1,    -1,   422,   423,   424,   425,   426,   427,    -1,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,    -1,   445,    -1,    -1,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
      -1,    -1,    -1,    -1,    -1,    -1,   476,   477,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   485,    -1,    -1,    -1,    -1,
     490,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    74,    -1,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    -1,    86,    87,    88,    89,    90,    91,
      -1,    93,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,    -1,   117,   118,   119,   120,   121,
     122,    -1,   124,   125,   126,   127,   128,    -1,    -1,   131,
     132,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
     142,   143,    -1,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,    -1,   158,   159,   160,   161,
      -1,   163,    -1,   165,   166,   167,   168,   169,   170,   171,
     172,   173,    -1,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,   190,    -1,
     192,   193,   194,   195,   196,   197,    -1,   199,   200,   201,
     202,   203,   204,   205,   206,   207,    -1,   209,    -1,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,    -1,
      -1,   223,   224,   225,   226,    -1,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,    -1,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,    -1,   277,   278,    -1,    -1,   281,
     282,   283,    -1,    -1,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
      -1,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,    -1,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,    -1,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,    -1,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,    -1,
     392,   393,    -1,   395,   396,   397,   398,   399,   400,   401,
      -1,   403,   404,    -1,    -1,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,    -1,    -1,
     422,   423,   424,   425,   426,   427,    -1,   429,   430,   431,
     432,   433,   434,   435,    -1,   437,   438,   439,   440,   441,
     442,    -1,    -1,   445,    -1,    -1,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,    -1,    -1,
      -1,    -1,    -1,    -1,   476,   477,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   485,    -1,    -1,    -1,    -1,   490,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      74,    -1,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    -1,    86,    87,    88,    89,    90,    91,    -1,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,    -1,   117,   118,   119,   120,   121,   122,    -1,
     124,   125,   126,   127,   128,    -1,    -1,   131,   132,   133,
     134,   135,    -1,   137,   138,   139,    -1,   141,   142,   143,
      -1,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,    -1,   158,   159,   160,   161,    -1,   163,
      -1,   165,   166,    -1,   168,   169,   170,   171,   172,   173,
      -1,   175,    -1,   177,   178,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,   190,    -1,   192,   193,
     194,   195,   196,   197,    -1,   199,   200,   201,   202,   203,
     204,   205,   206,   207,    -1,   209,    -1,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,    -1,    -1,   223,
     224,   225,   226,    -1,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,    -1,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,    -1,   277,   278,    -1,    -1,   281,   282,   283,
      -1,    -1,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,    -1,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,    -1,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,    -1,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,    -1,   392,   393,
      -1,   395,   396,   397,   398,   399,   400,   401,    -1,   403,
     404,    -1,    -1,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,    -1,    -1,   422,   423,
     424,   425,   426,   427,    -1,   429,   430,   431,   432,   433,
     434,   435,    -1,   437,   438,   439,   440,   441,   442,    -1,
      -1,   445,    -1,    -1,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,    -1,    -1,    -1,    -1,
      -1,    -1,   476,   477,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   485,    -1,    -1,    -1,    -1,   490,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
     166,    -1,   168,   169,   170,   171,   172,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,   200,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,    -1,    -1,   223,   224,   225,
     226,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,    -1,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,    -1,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,    -1,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,    -1,   392,   393,    -1,   395,
     396,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
      -1,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,    -1,    -1,   422,   423,   424,   425,
     426,   427,    -1,   429,   430,   431,   432,   433,   434,   435,
      -1,   437,   438,   439,   440,   441,   442,    -1,    -1,   445,
      -1,    -1,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,    -1,    -1,    -1,    -1,    -1,    -1,
     476,   477,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   485,
      -1,    -1,    -1,    -1,   490,     3,     4,     5,     6,     7,
       8,     9,    10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,   166,    -1,
     168,   169,   170,   171,   172,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,   200,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,    -1,    -1,   223,   224,   225,   226,    -1,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
      -1,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,    -1,   277,
     278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,    -1,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,    -1,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,    -1,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,    -1,   392,   393,    -1,   395,   396,   397,
     398,   399,   400,   401,    -1,   403,   404,    -1,    -1,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,    -1,    -1,   422,   423,   424,   425,   426,   427,
      -1,   429,   430,   431,   432,   433,   434,   435,    -1,   437,
     438,   439,   440,   441,   442,    -1,    -1,   445,    -1,    -1,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,    -1,    -1,    -1,    -1,    -1,    -1,   476,   477,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   485,    -1,    -1,
      -1,    -1,   490,     3,     4,     5,     6,     7,     8,     9,
      10,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    74,    -1,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    -1,    86,    87,    88,    89,
      90,    91,    -1,    93,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,    -1,   117,   118,   119,
     120,   121,   122,    -1,   124,   125,   126,   127,   128,    -1,
      -1,   131,   132,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,    -1,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,    -1,   158,   159,
     160,   161,    -1,   163,    -1,   165,   166,    -1,   168,   169,
     170,   171,   172,   173,    -1,   175,    -1,   177,   178,    -1,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
     190,    -1,   192,   193,   194,   195,   196,   197,    -1,   199,
     200,   201,   202,   203,   204,   205,   206,   207,    -1,   209,
      -1,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,    -1,    -1,   223,   224,   225,   226,    -1,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,    -1,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,    -1,   277,   278,    -1,
      -1,   281,   282,   283,    -1,    -1,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,    -1,   303,   304,   305,   306,   307,   308,   309,
     310,   311,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
      -1,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,    -1,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,    -1,   392,   393,    -1,   395,   396,   397,   398,   399,
     400,   401,    -1,   403,   404,    -1,    -1,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
      -1,    -1,   422,   423,   424,   425,   426,   427,    -1,   429,
     430,   431,   432,   433,   434,   435,    -1,   437,   438,   439,
     440,   441,   442,    -1,    -1,   445,    -1,    -1,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
      -1,    -1,    -1,    -1,    -1,    -1,   476,   477,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   485,    -1,    -1,    -1,    -1,
     490,     3,     4,     5,     6,     7,     8,     9,    10,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    74,    -1,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    -1,    86,    87,    88,    89,    90,    91,
      -1,    93,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,    -1,   117,   118,   119,   120,   121,
     122,    -1,   124,   125,   126,   127,   128,    -1,    -1,   131,
     132,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
     142,   143,    -1,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,    -1,   158,   159,   160,   161,
      -1,   163,    -1,   165,   166,    -1,   168,   169,   170,   171,
     172,   173,    -1,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,   190,    -1,
     192,   193,   194,   195,   196,   197,    -1,   199,   200,   201,
     202,   203,   204,   205,   206,   207,    -1,   209,    -1,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,    -1,
      -1,   223,   224,   225,   226,    -1,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,    -1,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,    -1,   277,   278,    -1,    -1,   281,
     282,   283,    -1,    -1,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
      -1,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,    -1,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,    -1,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,    -1,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,    -1,
     392,   393,    -1,   395,   396,   397,   398,   399,   400,   401,
      -1,   403,   404,    -1,    -1,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,    -1,    -1,
     422,   423,   424,   425,   426,   427,    -1,   429,   430,   431,
     432,   433,   434,   435,    -1,   437,   438,   439,   440,   441,
     442,    -1,    -1,   445,    -1,    -1,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,    -1,    -1,
      -1,    -1,    -1,    -1,   476,   477,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   485,    -1,    -1,    -1,    -1,   490,     3,
       4,     5,     6,     7,     8,     9,    10,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      74,    -1,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    -1,    86,    87,    88,    89,    90,    91,    -1,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,    -1,   117,   118,   119,   120,   121,   122,    -1,
     124,   125,   126,   127,   128,    -1,    -1,   131,   132,   133,
     134,   135,    -1,   137,   138,   139,    -1,   141,   142,   143,
      -1,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,    -1,   158,   159,   160,   161,    -1,   163,
      -1,   165,   166,    -1,   168,   169,   170,   171,   172,   173,
      -1,   175,    -1,   177,   178,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,   190,    -1,   192,   193,
     194,   195,   196,   197,    -1,   199,   200,   201,   202,   203,
     204,   205,   206,   207,    -1,   209,    -1,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,    -1,    -1,   223,
     224,   225,   226,    -1,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,    -1,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,    -1,   277,   278,    -1,    -1,   281,   282,   283,
      -1,    -1,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,    -1,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,    -1,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,    -1,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,    -1,   392,   393,
      -1,   395,   396,   397,   398,   399,   400,   401,    -1,   403,
     404,    -1,    -1,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,    -1,    -1,   422,   423,
     424,   425,   426,   427,    -1,   429,   430,   431,   432,   433,
     434,   435,    -1,   437,   438,   439,   440,   441,   442,    -1,
      -1,   445,    -1,    -1,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,    -1,    -1,    -1,    -1,
      -1,    -1,   476,   477,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   485,    -1,    -1,    -1,    -1,   490,     3,     4,     5,
       6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,    -1,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
     166,    -1,   168,   169,   170,   171,   172,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,   200,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,    -1,    -1,   223,   224,   225,
     226,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,    -1,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,    -1,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,    -1,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,    -1,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,    -1,   392,   393,    -1,   395,
     396,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
      -1,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,    -1,    -1,   422,   423,   424,   425,
     426,   427,    -1,   429,   430,   431,   432,   433,   434,   435,
      -1,   437,   438,   439,   440,   441,   442,    -1,    -1,   445,
      -1,    -1,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     476,   477,    -1,    -1,     3,     4,     5,     6,     7,   485,
       9,    10,    -1,    -1,   490,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    44,    45,    46,    47,    48,
      49,    50,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    74,    -1,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    -1,    86,    87,    88,
      89,    90,    91,    -1,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,    -1,   115,    -1,   117,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,   127,   128,
      -1,    -1,   131,   132,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,    -1,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,   155,   156,    -1,   158,
     159,   160,   161,    -1,   163,    -1,   165,   166,    -1,   168,
     169,   170,   171,   172,   173,    -1,   175,    -1,   177,   178,
      -1,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,   190,    -1,   192,   193,   194,   195,   196,   197,    -1,
     199,   200,   201,   202,   203,   204,   205,   206,   207,    -1,
     209,    -1,   211,   212,   213,   214,   215,   216,   217,   218,
     219,   220,    -1,    -1,   223,   224,   225,   226,    -1,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,    -1,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,    -1,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,    -1,   277,   278,
      -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,    -1,   303,   304,   305,   306,   307,   308,
     309,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,    -1,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,    -1,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,    -1,   392,   393,    -1,   395,   396,   397,   398,
     399,   400,   401,    -1,   403,   404,    -1,    -1,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,    -1,    -1,   422,   423,   424,   425,   426,   427,    -1,
     429,   430,   431,   432,   433,   434,   435,    -1,   437,   438,
     439,   440,   441,   442,    -1,    -1,   445,    -1,    -1,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   476,   477,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   485,    -1,    -1,    -1,
      -1,   490,     3,     4,     5,     6,     7,     8,     9,    10,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    -1,    86,    87,    88,    89,    90,
      91,    -1,    93,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,    -1,   115,    -1,   117,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,   127,   128,    -1,    -1,
     131,   132,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,    -1,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,    -1,   158,   159,   160,
     161,    -1,   163,    -1,   165,   166,    -1,   168,   169,   170,
     171,   172,   173,    -1,   175,    -1,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,   196,   197,    -1,   199,   200,
     201,   202,   203,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,   213,   214,   215,   216,   217,   218,   219,   220,
      -1,    -1,   223,   224,   225,   226,    -1,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,    -1,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,    -1,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,    -1,   277,   278,    -1,    -1,
     281,   282,   283,    -1,    -1,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,    -1,   303,   304,   305,   306,   307,   308,   309,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,    -1,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,    -1,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
      -1,   392,   393,    -1,   395,   396,   397,   398,   399,   400,
     401,    -1,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,    -1,
      -1,   422,   423,   424,   425,   426,   427,    -1,   429,   430,
     431,   432,   433,   434,   435,    -1,   437,   438,   439,   440,
     441,   442,    -1,    -1,   445,    -1,    -1,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   476,   477,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   485,    -1,    -1,    -1,    -1,   490,
       3,     4,     5,     6,     7,     8,     9,    10,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,   166,    -1,   168,   169,   170,   171,   172,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,   200,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,   214,   215,   216,   217,   218,   219,   220,    -1,    -1,
     223,   224,   225,   226,    -1,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,    -1,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,    -1,   265,   266,    -1,   268,   269,   270,   271,   272,
     273,   274,   275,    -1,   277,   278,    -1,    -1,   281,   282,
     283,    -1,    -1,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,    -1,
     303,   304,   305,   306,   307,   308,   309,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,    -1,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,    -1,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,    -1,   392,
     393,    -1,   395,   396,   397,   398,   399,   400,   401,    -1,
     403,   404,    -1,    -1,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,    -1,    -1,   422,
     423,   424,   425,   426,   427,    -1,   429,   430,   431,   432,
     433,   434,   435,    -1,   437,   438,   439,   440,   441,   442,
      -1,    -1,   445,    -1,    -1,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,    -1,    -1,    -1,
      -1,    -1,    -1,   476,   477,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   485,    -1,    -1,    -1,    -1,   490,     3,     4,
       5,     6,     7,     8,     9,    10,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    44,
      45,    46,    47,    -1,    49,    50,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    74,
      -1,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      -1,    86,    87,    88,    89,    90,    91,    -1,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,    -1,   117,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,   127,   128,    -1,    -1,   131,   132,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,    -1,   143,    -1,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,    -1,   158,   159,   160,   161,    -1,   163,    -1,
     165,   166,    -1,   168,   169,   170,   171,    -1,   173,    -1,
     175,    -1,   177,   178,    -1,   180,   181,   182,   183,   184,
     185,    -1,   187,   188,   189,   190,    -1,   192,   193,   194,
     195,   196,   197,    -1,   199,   200,   201,   202,   203,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,
     215,   216,   217,   218,   219,   220,    -1,    -1,   223,   224,
     225,    -1,    -1,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,    -1,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,    -1,
     265,   266,    -1,   268,   269,   270,   271,   272,   273,   274,
     275,    -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,
      -1,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,    -1,   303,   304,
     305,   306,   307,   308,   309,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,    -1,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,    -1,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,    -1,   392,   393,    -1,
     395,   396,   397,   398,   399,   400,   401,    -1,   403,   404,
      -1,    -1,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,    -1,    -1,   422,   423,   424,
     425,   426,   427,    -1,   429,   430,   431,   432,   433,   434,
     435,    -1,   437,   438,   439,   440,   441,   442,    -1,    -1,
     445,    -1,    -1,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,    -1,    -1,    -1,    -1,    -1,    -1,
       3,   476,   477,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     485,    -1,    -1,    -1,    -1,   490,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    36,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      93,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,    -1,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,    -1,    -1,   168,   169,   170,   171,    -1,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,   200,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,   214,   215,   216,   217,   218,   219,   220,    -1,    -1,
     223,   224,   225,    -1,    -1,   228,   229,   230,    -1,    -1,
     233,   234,   235,   236,   237,    -1,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,    -1,   265,   266,    -1,   268,    -1,   270,   271,   272,
     273,   274,   275,    -1,   277,   278,    -1,    -1,   281,   282,
     283,    -1,    -1,   286,   287,    -1,   289,    -1,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,    -1,
     303,   304,   305,   306,   307,   308,   309,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,    -1,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,    -1,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,   375,    -1,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,    -1,   392,
     393,    -1,   395,   396,   397,   398,   399,   400,   401,    -1,
     403,   404,    -1,    -1,   407,   408,   409,   410,   411,    -1,
     413,   414,   415,   416,   417,   418,   419,    -1,    -1,   422,
     423,   424,   425,   426,    -1,    -1,   429,   430,   431,   432,
     433,   434,   435,    -1,   437,    -1,   439,   440,   441,   442,
      -1,    -1,   445,    -1,    -1,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,    -1,    -1,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   486,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    61,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    74,
      -1,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      -1,    86,    87,    88,    89,    90,    91,    -1,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,    -1,
     115,    -1,   117,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,   127,   128,    -1,    -1,   131,   132,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,    -1,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
      -1,   156,    -1,   158,   159,   160,   161,    -1,   163,    -1,
     165,   166,    -1,   168,   169,   170,   171,   172,   173,    -1,
     175,    -1,   177,   178,    -1,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,    -1,   192,   193,   194,
     195,   196,   197,    -1,   199,   200,   201,   202,   203,   204,
     205,   206,   207,    -1,   209,    -1,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,    -1,   223,   224,
     225,   226,    -1,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,    -1,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,    -1,
     265,   266,   267,   268,    -1,   270,   271,   272,   273,   274,
     275,    -1,   277,   278,    -1,   280,   281,   282,   283,    -1,
      -1,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,    -1,   303,   304,
     305,   306,   307,   308,   309,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,    -1,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,    -1,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,    -1,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,    -1,   403,   404,
      -1,    -1,   407,   408,   409,   410,   411,    -1,   413,   414,
     415,   416,   417,   418,   419,    -1,    -1,   422,   423,   424,
     425,   426,   427,    -1,   429,   430,   431,   432,   433,   434,
     435,    -1,   437,   438,   439,   440,   441,   442,    -1,    -1,
     445,    -1,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,    -1,     3,   471,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     485,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    61,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,    -1,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,    -1,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,   166,    -1,
     168,   169,   170,   171,   172,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,   200,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,    -1,   223,   224,   225,   226,    -1,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
      -1,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,    -1,   265,   266,   267,
     268,    -1,   270,   271,   272,   273,   274,   275,    -1,   277,
     278,    -1,   280,   281,   282,   283,    -1,    -1,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,    -1,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,    -1,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,    -1,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,    -1,   392,   393,    -1,   395,   396,   397,
     398,   399,   400,   401,    -1,   403,   404,    -1,    -1,   407,
     408,   409,   410,   411,    -1,   413,   414,   415,   416,   417,
     418,   419,    -1,    -1,   422,   423,   424,   425,   426,   427,
      -1,   429,   430,   431,   432,   433,   434,   435,    -1,   437,
     438,   439,   440,   441,   442,    -1,    -1,   445,    -1,    -1,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,    -1,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   485,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      61,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    -1,    86,    87,    88,    89,    90,
      91,    -1,    93,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,    -1,   115,    -1,   117,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,   127,   128,    -1,    -1,
     131,   132,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,    -1,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,    -1,   156,    -1,   158,   159,   160,
     161,    -1,   163,    -1,   165,   166,    -1,   168,   169,   170,
     171,   172,   173,    -1,   175,    -1,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,   196,   197,    -1,   199,   200,
     201,   202,   203,   204,   205,   206,   207,    -1,   209,    -1,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
      -1,    -1,   223,   224,   225,   226,    -1,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,    -1,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,    -1,   265,   266,   267,   268,    -1,   270,
     271,   272,   273,   274,   275,    -1,   277,   278,    -1,    -1,
     281,   282,   283,    -1,    -1,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,    -1,   303,   304,   305,   306,   307,   308,   309,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,    -1,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,    -1,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
      -1,   392,   393,    -1,   395,   396,   397,   398,   399,   400,
     401,    -1,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,    -1,   413,   414,   415,   416,   417,   418,   419,    -1,
      -1,   422,   423,   424,   425,   426,   427,    -1,   429,   430,
     431,   432,   433,   434,   435,    -1,   437,   438,   439,   440,
     441,   442,    -1,    -1,   445,    -1,    -1,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,    -1,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   485,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    61,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      74,    -1,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    -1,    86,    87,    88,    89,    90,    91,    -1,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
      -1,   115,    -1,   117,   118,   119,   120,   121,   122,    -1,
     124,   125,   126,   127,   128,    -1,    -1,   131,   132,   133,
     134,   135,    -1,   137,   138,   139,    -1,   141,   142,   143,
      -1,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,    -1,   156,    -1,   158,   159,   160,   161,    -1,   163,
      -1,   165,   166,    -1,   168,   169,   170,   171,   172,   173,
      -1,   175,    -1,   177,   178,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,   190,    -1,   192,   193,
     194,   195,   196,   197,    -1,   199,   200,   201,   202,   203,
     204,   205,   206,   207,    -1,   209,    -1,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,    -1,    -1,   223,
     224,   225,   226,    -1,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,    -1,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
      -1,   265,   266,   267,   268,    -1,   270,   271,   272,   273,
     274,   275,    -1,   277,   278,    -1,    -1,   281,   282,   283,
      -1,    -1,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,    -1,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,    -1,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,    -1,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,    -1,   392,   393,
      -1,   395,   396,   397,   398,   399,   400,   401,    -1,   403,
     404,    -1,    -1,   407,   408,   409,   410,   411,    -1,   413,
     414,   415,   416,   417,   418,   419,    -1,    -1,   422,   423,
     424,   425,   426,   427,    -1,   429,   430,   431,   432,   433,
     434,   435,    -1,   437,   438,   439,   440,   441,   442,    -1,
      -1,   445,    -1,    -1,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,    -1,     3,     4,     5,    -1,
      -1,    -1,     9,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   485,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    74,    -1,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    -1,    86,
      87,    88,    89,    90,    91,    -1,    93,    94,    95,    96,
      -1,    -1,    -1,   100,    -1,    -1,    -1,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,    -1,   115,    -1,
     117,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
     127,   128,    -1,    -1,   131,   132,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,    -1,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
      -1,   158,   159,   160,   161,    -1,   163,    -1,   165,   166,
      -1,   168,   169,   170,   171,   172,   173,    -1,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,   193,   194,   195,   196,
     197,    -1,   199,   200,   201,   202,   203,   204,   205,   206,
     207,    -1,   209,    -1,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,    -1,    -1,   223,   224,   225,   226,
      -1,   228,   229,   230,    -1,    -1,   233,   234,   235,   236,
     237,    -1,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,    -1,   265,   266,
     267,   268,    -1,   270,   271,   272,   273,   274,   275,    -1,
     277,   278,   279,    -1,   281,   282,   283,    -1,    -1,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,    -1,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,    -1,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,    -1,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,    -1,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,    -1,   392,   393,    -1,   395,   396,
     397,   398,   399,   400,   401,    -1,   403,   404,    -1,    -1,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,    -1,    -1,   422,   423,   424,   425,   426,
      -1,    -1,   429,   430,   431,   432,   433,   434,   435,    -1,
     437,   438,   439,   440,   441,   442,    -1,    -1,   445,    -1,
      -1,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,    -1,     3,    -1,    -1,    -1,    -1,    -1,   476,
     477,   478,    -1,    -1,    -1,    -1,    -1,    -1,   485,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    31,    32,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    74,    -1,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    -1,    86,    87,    88,    89,
      90,    91,    -1,    93,    94,    95,    96,    -1,    -1,    -1,
     100,    -1,    -1,    -1,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,    -1,   115,    -1,   117,   118,   119,
     120,   121,   122,    -1,   124,   125,   126,   127,   128,    -1,
      -1,   131,   132,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,    -1,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,    -1,   156,    -1,   158,   159,
     160,   161,    -1,   163,    -1,   165,   166,    -1,   168,   169,
     170,   171,   172,   173,    -1,   175,    -1,   177,   178,    -1,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
     190,    -1,   192,   193,   194,   195,   196,   197,    -1,   199,
     200,   201,   202,   203,   204,   205,   206,   207,    -1,   209,
      -1,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,    -1,    -1,   223,   224,   225,   226,    -1,   228,   229,
     230,    -1,    -1,   233,   234,   235,   236,   237,    -1,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,    -1,   265,   266,   267,   268,    -1,
     270,   271,   272,   273,   274,   275,    -1,   277,   278,    -1,
      -1,   281,   282,   283,    -1,    -1,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,    -1,   303,   304,   305,   306,   307,   308,   309,
     310,   311,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
      -1,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,    -1,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,    -1,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,    -1,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,    -1,   403,   404,    -1,    -1,   407,   408,   409,
     410,   411,    -1,   413,   414,   415,   416,   417,   418,   419,
      -1,    -1,   422,   423,   424,   425,   426,    -1,    -1,   429,
     430,   431,   432,   433,   434,   435,    -1,   437,   438,   439,
     440,   441,   442,    -1,    -1,   445,    -1,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,    -1,
       3,   471,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   485,    19,    20,    21,    22,
      23,    24,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,    -1,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,   214,    -1,   216,   217,   218,   219,   220,    -1,    -1,
     223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,
     233,   234,   235,   236,   237,    -1,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,    -1,   259,   260,   261,   262,
     263,    -1,   265,   266,    -1,   268,    -1,   270,   271,   272,
     273,   274,   275,    -1,   277,   278,    -1,    -1,   281,   282,
     283,    -1,    -1,   286,   287,    -1,   289,    -1,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,    -1,
     303,   304,   305,   306,   307,   308,   309,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,    -1,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,    -1,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,   375,    -1,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,    -1,   392,
     393,   394,   395,    -1,   397,   398,   399,   400,   401,    -1,
     403,   404,    -1,    -1,   407,   408,   409,   410,   411,    -1,
     413,   414,   415,   416,   417,   418,   419,    -1,    -1,   422,
     423,   424,   425,   426,    -1,    -1,   429,   430,   431,   432,
     433,   434,   435,    -1,   437,    -1,   439,   440,   441,   442,
      -1,    -1,   445,    -1,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,    -1,     3,   471,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   485,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    -1,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    -1,    94,    95,
      96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,    -1,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,    -1,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
      -1,    -1,    -1,   169,   170,   171,    -1,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
      -1,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,    -1,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,    -1,
     216,   217,   218,   219,   220,    -1,    -1,   223,    -1,   225,
      -1,    -1,   228,   229,   230,    -1,    -1,   233,   234,   235,
     236,   237,    -1,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,    -1,   259,   260,   261,   262,   263,    -1,   265,
     266,    -1,   268,    -1,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,
     286,   287,    -1,   289,    -1,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,    -1,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,    -1,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,    -1,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,    -1,   392,   393,   394,   395,
      -1,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
      -1,   407,   408,   409,   410,   411,    -1,   413,   414,   415,
     416,   417,   418,   419,    -1,    -1,   422,   423,   424,   425,
     426,    -1,    -1,   429,   430,   431,   432,   433,   434,   435,
      -1,   437,    -1,   439,   440,   441,   442,    -1,    -1,   445,
      -1,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,    -1,     3,   471,     5,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   485,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    -1,    82,    83,    84,    -1,    86,    87,    88,
      89,    90,    91,    -1,    -1,    94,    95,    96,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,    -1,   115,    -1,   117,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,   127,   128,
      -1,    -1,   131,   132,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,    -1,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,    -1,   156,    -1,   158,
     159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,    -1,
     169,   170,   171,    -1,   173,    -1,   175,    -1,   177,   178,
      -1,   180,   181,   182,   183,   184,   185,    -1,   187,   188,
     189,   190,    -1,   192,   193,   194,   195,   196,   197,    -1,
     199,    -1,   201,   202,   203,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,   218,
     219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,   228,
     229,   230,    -1,    -1,   233,   234,   235,   236,   237,    -1,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,    -1,
     259,   260,   261,   262,   263,    -1,   265,   266,    -1,   268,
      -1,   270,   271,   272,   273,   274,   275,    -1,   277,   278,
      -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,    -1,
     289,    -1,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,    -1,   303,   304,   305,   306,   307,   308,
     309,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,    -1,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,    -1,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,    -1,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,    -1,   392,   393,    -1,   395,    -1,   397,   398,
     399,   400,   401,    -1,   403,   404,    -1,    -1,   407,   408,
     409,   410,   411,    -1,   413,   414,   415,   416,   417,   418,
     419,    -1,    -1,   422,   423,   424,   425,   426,    -1,    -1,
     429,   430,   431,   432,   433,   434,   435,    -1,   437,    -1,
     439,   440,   441,   442,    -1,    -1,   445,    -1,    -1,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
      -1,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   485,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,
      82,    83,    84,    -1,    86,    87,    88,    89,    90,    91,
      -1,    -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,    -1,   115,    -1,   117,   118,   119,   120,   121,
     122,    -1,   124,   125,   126,   127,   128,    -1,    -1,   131,
     132,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
     142,   143,    -1,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,    -1,   156,    -1,   158,   159,   160,   161,
      -1,   163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,
      -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,   190,    -1,
     192,   193,   194,   195,   196,   197,    -1,   199,    -1,   201,
     202,   203,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,   214,    -1,   216,   217,   218,   219,   220,    -1,
      -1,   223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,
      -1,   233,   234,   235,   236,   237,    -1,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,    -1,   259,   260,   261,
     262,   263,    -1,   265,   266,    -1,   268,    -1,   270,   271,
     272,   273,   274,   275,    -1,   277,   278,    -1,    -1,   281,
     282,   283,    -1,    -1,   286,   287,    -1,   289,    -1,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
      -1,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,    -1,   341,
     342,    -1,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,    -1,   360,   361,
     362,   363,   364,    -1,   366,   367,   368,   369,   370,    -1,
     372,   373,   374,   375,    -1,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,    -1,
     392,   393,    -1,   395,    -1,   397,   398,   399,   400,   401,
      -1,   403,   404,    -1,    -1,   407,   408,   409,   410,   411,
      -1,   413,   414,   415,   416,   417,   418,   419,    -1,    -1,
     422,   423,   424,   425,   426,    -1,    -1,   429,   430,   431,
     432,   433,   434,   435,    -1,   437,    -1,   439,   440,   441,
     442,    -1,    -1,   445,    -1,    -1,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,    -1,     3,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   485,    19,    20,    21,    22,    23,    24,
      25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,
      45,    46,    47,    48,    49,    -1,    51,    52,    -1,    54,
      55,    56,    57,    58,    59,    -1,    -1,    62,    63,    64,
      65,    66,    -1,    68,    69,    70,    71,    72,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    -1,    82,    83,    84,
      -1,    86,    87,    88,    89,    90,    91,    -1,    -1,    94,
      95,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,    -1,
     115,    -1,   117,   118,   119,   120,   121,   122,    -1,   124,
     125,   126,   127,   128,    -1,    -1,   131,   132,   133,   134,
     135,    -1,   137,   138,   139,    -1,   141,   142,   143,    -1,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
      -1,   156,    -1,   158,   159,   160,   161,    -1,   163,    -1,
     165,    -1,    -1,    -1,   169,   170,   171,    -1,   173,    -1,
     175,    -1,   177,   178,    -1,   180,   181,   182,   183,   184,
     185,    -1,   187,   188,   189,   190,    -1,   192,   193,   194,
     195,   196,   197,    -1,   199,    -1,   201,   202,   203,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,
      -1,   216,   217,   218,   219,   220,    -1,    -1,   223,    -1,
     225,    -1,    -1,   228,   229,   230,    -1,    -1,   233,   234,
     235,   236,   237,    -1,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,    -1,   259,   260,   261,   262,   263,    -1,
     265,   266,    -1,   268,    -1,   270,   271,   272,   273,   274,
     275,    -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,
      -1,   286,   287,    -1,   289,    -1,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,    -1,   303,   304,
     305,   306,   307,   308,   309,   310,   311,    -1,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,    -1,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,    -1,   360,   361,   362,   363,   364,
      -1,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
     375,    -1,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,    -1,   392,   393,    -1,
     395,    -1,   397,   398,   399,   400,   401,    -1,   403,   404,
      -1,    -1,   407,   408,   409,   410,   411,    -1,   413,   414,
     415,   416,   417,   418,   419,    -1,    -1,   422,   423,   424,
     425,   426,    -1,    -1,   429,   430,   431,   432,   433,   434,
     435,    -1,   437,    -1,   439,   440,   441,   442,    -1,    -1,
     445,    -1,    -1,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,    -1,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     485,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    -1,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    -1,    94,    95,    96,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,    -1,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,    -1,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,
      -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,    -1,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,
     218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,
     228,   229,   230,    -1,    -1,   233,   234,   235,   236,   237,
      -1,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
      -1,   259,   260,   261,   262,   263,    -1,   265,   266,    -1,
     268,    -1,   270,   271,   272,   273,   274,   275,    -1,   277,
     278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,
      -1,   289,    -1,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,    -1,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,    -1,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,    -1,   366,   367,
     368,   369,   370,    -1,   372,   373,   374,   375,    -1,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,    -1,   392,   393,    -1,   395,    -1,   397,
     398,   399,   400,   401,    -1,   403,   404,    -1,    -1,   407,
     408,   409,   410,   411,    -1,   413,   414,   415,   416,   417,
     418,   419,    -1,    -1,   422,   423,   424,   425,   426,    -1,
      -1,   429,   430,   431,   432,   433,   434,   435,    -1,   437,
      -1,   439,   440,   441,   442,    -1,    -1,   445,    -1,    -1,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,    -1,    -1,    -1,    -1,     3,     4,     5,    -1,    -1,
       8,     9,    -1,    -1,    -1,    -1,    -1,   485,    16,    17,
      18,    19,    20,    21,    22,    23,    24,    25,    26,    27,
      28,    29,    30,    31,    32,    33,    34,    35,    36,    37,
      38,    39,    40,    41,    42,    43,    44,    45,    46,    47,
      -1,    49,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,    71,    -1,    73,    74,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    86,    87,
      88,    89,    90,    91,    92,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
     138,   139,   140,   141,   142,   143,   144,   145,   146,   147,
     148,    -1,   150,   151,   152,   153,    -1,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   169,   170,   171,   172,   173,   174,   175,   176,    -1,
     178,   179,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,    -1,   202,   203,   204,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,    -1,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,    -1,
     288,   289,   290,    -1,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,    -1,   306,   307,
      -1,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,    -1,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,    -1,   410,    -1,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,    -1,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   465,   466,   467,
     468,    -1,     3,    -1,   472,   473,   474,     8,   476,   477,
     478,   479,   480,   481,    -1,    16,    17,    18,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    -1,    45,    46,    47,    48,    49,    -1,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      -1,    82,    83,    84,    -1,    86,    87,    88,    89,    90,
      91,    -1,    -1,    94,    95,    96,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,    -1,   115,    -1,   117,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,   127,   128,    -1,    -1,
     131,   132,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,    -1,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,    -1,   156,    -1,   158,   159,   160,
     161,    -1,   163,    -1,   165,    -1,    -1,    -1,   169,   170,
     171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,    -1,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,   196,   197,    -1,   199,    -1,
     201,   202,   203,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,   214,    -1,   216,   217,   218,   219,   220,
      -1,    -1,   223,    -1,   225,    -1,    -1,   228,   229,   230,
      -1,    -1,   233,   234,   235,   236,   237,    -1,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,    -1,   259,   260,
     261,   262,   263,    -1,   265,   266,    -1,   268,    -1,   270,
     271,   272,   273,   274,   275,    -1,   277,   278,    -1,    -1,
     281,   282,   283,    -1,    -1,   286,   287,    -1,   289,    -1,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,    -1,   303,   304,   305,   306,   307,   308,   309,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,    -1,
     341,   342,    -1,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,    -1,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,   375,    -1,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
      -1,   392,   393,    -1,   395,    -1,   397,   398,   399,   400,
     401,    -1,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,    -1,   413,   414,   415,   416,   417,   418,   419,    -1,
      -1,   422,   423,   424,   425,   426,    -1,    -1,   429,   430,
     431,   432,   433,   434,   435,    -1,   437,    -1,   439,   440,
     441,   442,    -1,    -1,   445,    -1,    -1,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,    -1,    -1,
      -1,   472,   473,   474,    -1,   476,   477,   478,   479,   480,
     481,     8,    -1,    -1,    11,    -1,    -1,    -1,    -1,    16,
      17,    18,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     8,
      -1,    -1,    11,    -1,    -1,    -1,    33,    16,    17,    18,
      -1,    -1,    -1,    -1,    41,    -1,    -1,     8,    -1,    -1,
      11,    48,    -1,    -1,    33,    16,    17,    18,    -1,    -1,
      -1,    -1,    41,    -1,    -1,    -1,    -1,    -1,    -1,    48,
      -1,    -1,    33,    -1,    -1,     8,    73,    -1,    11,    -1,
      41,    -1,    -1,    16,    17,    18,    -1,    48,    -1,    -1,
      -1,    -1,    -1,     8,    73,    -1,    11,    -1,    -1,    -1,
      33,    16,    17,    18,    -1,    -1,    -1,    -1,    41,    -1,
      -1,     8,    73,    -1,    11,    48,    -1,    -1,    33,    16,
      17,    18,    -1,    -1,    -1,    -1,    41,    -1,    -1,    -1,
      -1,    -1,    -1,    48,    -1,    -1,    33,    -1,    -1,    -1,
      73,    -1,    -1,    -1,    41,    -1,    -1,    -1,    -1,    -1,
      -1,    48,    -1,    -1,    -1,    -1,    -1,    -1,    73,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   172,    73,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   186,
      -1,    -1,    -1,   172,   191,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   186,    -1,    -1,
      -1,   172,   191,    -1,    -1,   212,   213,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   186,    -1,    -1,    -1,   226,
     191,    -1,    -1,   212,   213,    -1,    -1,    -1,    -1,   172,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   226,    -1,    -1,
      -1,   212,   213,   186,    -1,    -1,    -1,   172,   191,    -1,
      -1,    -1,    -1,    -1,    -1,   226,    -1,   264,    -1,    -1,
     267,   186,    -1,    -1,    -1,   172,   191,    -1,    -1,   212,
     213,    -1,    -1,    -1,   281,   264,    -1,   284,   267,   186,
      -1,    -1,    -1,   226,   191,    -1,    -1,   212,   213,    -1,
      -1,    -1,   281,   264,    -1,   284,   267,    -1,    -1,    -1,
      -1,   226,    -1,    -1,    -1,   212,   213,    -1,    -1,    -1,
     281,    -1,    -1,   284,    -1,    -1,    -1,    -1,    -1,   226,
      -1,   264,    -1,    -1,   267,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   281,   264,
      -1,   284,   267,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   281,   264,    -1,   284,
     267,    -1,    -1,    -1,   371,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   281,    -1,    -1,   284,    -1,    -1,
      -1,    -1,   371,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     371,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,     8,    -1,    -1,    11,    -1,    -1,    -1,    -1,    16,
      17,    18,    -1,    -1,    -1,    -1,    -1,    -1,   371,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    33,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    41,    -1,   371,    -1,    -1,    -1,
      -1,    48,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   469,    -1,   371,   472,   473,   474,    -1,   476,
     477,   478,   479,   480,   481,    -1,    73,    -1,    -1,   486,
     469,    -1,    -1,   472,   473,   474,    -1,   476,   477,   478,
     479,   480,   481,    -1,    -1,    -1,    -1,   486,   469,    -1,
      -1,   472,   473,   474,    -1,   476,   477,   478,   479,   480,
     481,    -1,    -1,    -1,    -1,   486,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   469,    -1,    -1,   472,
     473,   474,    -1,   476,   477,   478,   479,   480,   481,    -1,
      -1,    -1,    -1,   486,   469,    -1,    -1,   472,   473,   474,
      -1,   476,   477,   478,   479,   480,   481,    -1,    -1,    -1,
      -1,   486,   469,    -1,    -1,   472,   473,   474,    -1,   476,
     477,   478,   479,   480,   481,   172,    -1,     8,    -1,   486,
      11,    -1,    -1,    -1,    -1,    16,    17,    18,    -1,   186,
      -1,    -1,    -1,    -1,   191,     8,    -1,    -1,    11,    -1,
      -1,    -1,    33,    16,    17,    18,    -1,    -1,    -1,    -1,
      41,    -1,    -1,    -1,    -1,   212,   213,    48,    -1,    -1,
      33,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    41,   226,
      -1,    -1,    -1,    -1,    -1,    48,    -1,    -1,     8,    -1,
      -1,    11,    73,    -1,    -1,    -1,    16,    17,    18,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,     8,    -1,    -1,    11,
      73,    -1,    -1,    33,    16,    17,    18,   264,    -1,    -1,
     267,    41,    -1,    -1,    -1,    -1,    -1,    -1,    48,    23,
      -1,    33,    -1,    -1,   281,    29,    -1,   284,    -1,    41,
      -1,    -1,    36,    -1,    -1,    -1,    48,    -1,    -1,    -1,
      -1,    -1,    -1,    73,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    55,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    73,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   172,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   186,    -1,    -1,    -1,   172,
     191,   105,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   186,   371,    -1,    -1,    -1,   191,    -1,
      -1,   212,   213,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     134,    -1,    -1,    -1,    -1,   226,    -1,    -1,    -1,   212,
     213,    -1,   172,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   226,    -1,    -1,   186,    -1,    -1,    -1,
     172,   191,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   264,   186,    -1,   267,    -1,    -1,   191,
      -1,    -1,   212,   213,    -1,    -1,    -1,    -1,    -1,   193,
     281,   264,    -1,   284,   267,    -1,   226,    -1,    -1,    -1,
     212,   213,    -1,    -1,    -1,    -1,    -1,    -1,   281,    -1,
      -1,   284,   469,    -1,   226,   472,   473,   474,    -1,   476,
     477,   478,   479,   480,   481,    -1,    -1,    -1,    -1,   486,
      -1,    -1,    -1,    -1,   264,    -1,    -1,   267,   242,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   250,    -1,    -1,    -1,
      -1,   281,   264,    -1,   284,   267,    -1,    -1,   262,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   281,
      -1,    -1,   284,    -1,    -1,    -1,    -1,    -1,    -1,   283,
     371,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   293,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   371,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   333,
      -1,    -1,    -1,   337,   338,    -1,    -1,    -1,    -1,    -1,
      -1,   371,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   360,    -1,    -1,   371,
      -1,    -1,   366,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   380,    -1,   469,    -1,
      -1,   472,   473,   474,    -1,   476,   477,   478,   479,   480,
     481,    -1,    -1,    -1,    -1,   486,   469,    -1,    -1,   472,
     473,   474,    -1,   476,   477,   478,   479,   480,   481,    -1,
      -1,    -1,    -1,   486,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   431,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   469,
      -1,    -1,   472,   473,   474,    -1,   476,   477,   478,   479,
     480,   481,    -1,    -1,    -1,    -1,   486,   469,     3,    -1,
     472,   473,   474,    -1,   476,   477,   478,   479,   480,   481,
      -1,    -1,   484,    -1,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,     3,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   478,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    22,    23,    24,    25,    26,    -1,    28,
      29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,
      39,    -1,    41,    42,    43,    -1,    45,    46,    47,    48,
      49,    -1,    51,    52,    -1,    54,    55,    56,    57,    58,
      59,    -1,    -1,    62,    63,    64,    65,    66,    -1,    68,
      69,    70,    71,    72,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    -1,    82,    83,    84,    -1,    86,    87,    88,
      89,    90,    91,    -1,    -1,    94,    95,    96,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,    -1,   115,    -1,   117,   118,
     119,   120,   121,   122,    -1,   124,   125,   126,   127,   128,
      -1,    -1,   131,   132,   133,   134,   135,    -1,   137,   138,
     139,    -1,   141,   142,   143,    -1,   145,   146,   147,   148,
     149,   150,   151,   152,   153,   154,    -1,   156,    -1,   158,
     159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,    -1,
     169,   170,   171,    -1,   173,    -1,   175,    -1,   177,   178,
      -1,   180,   181,   182,   183,   184,   185,    -1,   187,   188,
     189,   190,    -1,   192,   193,   194,   195,   196,   197,    -1,
     199,    -1,   201,   202,   203,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,   218,
     219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,   228,
     229,   230,    -1,    -1,   233,   234,   235,   236,   237,    -1,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,    -1,
     259,   260,   261,   262,   263,    -1,   265,   266,    -1,   268,
      -1,   270,   271,   272,   273,   274,   275,    -1,   277,   278,
      -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,    -1,
     289,    -1,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,    -1,   303,   304,   305,   306,   307,   308,
     309,   310,   311,    -1,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,    -1,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
      -1,   360,   361,   362,   363,   364,    -1,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,   375,    -1,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,    -1,   392,   393,    -1,   395,    -1,   397,   398,
     399,   400,   401,    -1,   403,   404,    -1,    -1,   407,   408,
     409,   410,   411,    -1,   413,   414,   415,   416,   417,   418,
     419,    -1,    -1,   422,   423,   424,   425,   426,    -1,    -1,
     429,   430,   431,   432,   433,   434,   435,    -1,   437,    -1,
     439,   440,   441,   442,    -1,    -1,   445,    -1,    -1,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
       3,     4,     5,    -1,    -1,    -1,     9,    -1,    -1,   478,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    44,    45,    46,    47,    48,    49,    50,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    74,    -1,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      93,    94,    95,    96,    -1,    -1,    -1,   100,    -1,    -1,
      -1,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,   166,    -1,   168,   169,   170,   171,   172,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,   200,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,    -1,    -1,
     223,   224,   225,   226,    -1,   228,   229,   230,    -1,    -1,
     233,   234,   235,   236,   237,    -1,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,    -1,   265,   266,   267,   268,    -1,   270,   271,   272,
     273,   274,   275,    -1,   277,   278,   279,    -1,   281,   282,
     283,    -1,    -1,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,    -1,
     303,   304,   305,   306,   307,   308,   309,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,    -1,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,    -1,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,    -1,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,    -1,   392,
     393,    -1,   395,   396,   397,   398,   399,   400,   401,    -1,
     403,   404,    -1,    -1,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,    -1,    -1,   422,
     423,   424,   425,   426,    -1,    -1,   429,   430,   431,   432,
     433,   434,   435,    -1,   437,   438,   439,   440,   441,   442,
      -1,    -1,   445,    -1,    -1,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,     3,     4,     5,    -1,
      -1,    -1,     9,   476,   477,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    74,    -1,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    -1,    86,
      87,    88,    89,    90,    91,    -1,    93,    94,    95,    96,
      -1,    -1,    -1,   100,    -1,    -1,    -1,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,    -1,
     117,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
     127,   128,    -1,    -1,   131,   132,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,    -1,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
      -1,   158,   159,   160,   161,    -1,   163,    -1,   165,   166,
      -1,   168,   169,   170,   171,   172,   173,    -1,   175,    -1,
     177,   178,    -1,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,   193,   194,   195,   196,
     197,    -1,   199,   200,   201,   202,   203,   204,   205,   206,
     207,    -1,   209,    -1,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,    -1,    -1,   223,   224,   225,   226,
      -1,   228,   229,   230,    -1,    -1,   233,   234,   235,   236,
     237,    -1,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,    -1,   265,   266,
     267,   268,    -1,   270,   271,   272,   273,   274,   275,    -1,
     277,   278,   279,    -1,   281,   282,   283,    -1,    -1,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,    -1,   303,   304,   305,   306,
     307,   308,   309,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,    -1,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,    -1,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,    -1,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,    -1,   392,   393,    -1,   395,   396,
     397,   398,   399,   400,   401,    -1,   403,   404,    -1,    -1,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,    -1,    -1,   422,   423,   424,   425,   426,
      -1,    -1,   429,   430,   431,   432,   433,   434,   435,    -1,
     437,   438,   439,   440,   441,   442,    -1,    -1,   445,    -1,
      -1,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,     3,     4,     5,    -1,    -1,    -1,     9,   476,
     477,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      21,    22,    23,    24,    25,    26,    -1,    28,    29,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,
      41,    42,    43,    44,    45,    46,    47,    48,    49,    50,
      51,    52,    -1,    54,    55,    56,    57,    58,    59,    -1,
      -1,    62,    63,    64,    65,    66,    -1,    68,    69,    70,
      71,    72,    -1,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    -1,    86,    87,    88,    89,    90,
      91,    -1,    93,    94,    95,    96,    -1,    -1,    -1,   100,
      -1,    -1,    -1,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,    -1,   115,    -1,   117,   118,   119,   120,
     121,   122,    -1,   124,   125,   126,   127,   128,    -1,    -1,
     131,   132,   133,   134,   135,    -1,   137,   138,   139,    -1,
     141,   142,   143,    -1,   145,   146,   147,   148,   149,   150,
     151,   152,   153,   154,   155,   156,    -1,   158,   159,   160,
     161,    -1,   163,    -1,   165,   166,    -1,   168,   169,   170,
     171,   172,   173,    -1,   175,    -1,   177,   178,    -1,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   189,   190,
      -1,   192,   193,   194,   195,   196,   197,    -1,   199,   200,
     201,   202,   203,   204,   205,   206,   207,    -1,   209,    -1,
     211,   212,   213,   214,   215,   216,   217,   218,   219,   220,
      -1,    -1,   223,   224,   225,   226,    -1,   228,   229,   230,
      -1,    -1,   233,   234,   235,   236,   237,    -1,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,    -1,   265,   266,   267,   268,    -1,   270,
     271,   272,   273,   274,   275,    -1,   277,   278,   279,    -1,
     281,   282,   283,    -1,    -1,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,    -1,   303,   304,   305,   306,   307,   308,   309,   310,
     311,    -1,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,    -1,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,    -1,   360,
     361,   362,   363,   364,    -1,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,    -1,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
      -1,   392,   393,    -1,   395,   396,   397,   398,   399,   400,
     401,    -1,   403,   404,    -1,    -1,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,    -1,
      -1,   422,   423,   424,   425,   426,    -1,    -1,   429,   430,
     431,   432,   433,   434,   435,    -1,   437,   438,   439,   440,
     441,   442,    -1,    -1,   445,    -1,    -1,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,    -1,     8,
      -1,    -1,    11,    -1,    -1,   476,   477,    16,    17,    18,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,     8,    -1,    -1,
      11,    -1,    -1,    -1,    33,    16,    17,    18,    37,    -1,
      -1,    -1,    41,    -1,    -1,     8,    -1,    -1,    11,    48,
      -1,    -1,    33,    16,    17,    18,    -1,    -1,    -1,    -1,
      41,    -1,    -1,    -1,    -1,    -1,    -1,    48,    -1,    -1,
      33,    -1,    -1,     8,    73,    -1,    11,    -1,    41,    -1,
      -1,    16,    17,    18,    -1,    48,    -1,    -1,    -1,    -1,
      -1,    -1,    73,    -1,    -1,    -1,    -1,    -1,    33,    -1,
      -1,    36,    -1,    -1,    -1,    -1,    41,    -1,    -1,     8,
      73,    -1,    11,    48,    -1,    -1,    -1,    16,    17,    18,
      -1,    -1,    -1,    -1,   123,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    33,    -1,    -1,    -1,    73,    -1,
      -1,    -1,    41,    -1,    -1,    -1,    -1,    -1,    -1,    48,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   172,    73,    -1,    -1,    -1,    -1,    -1,
      -1,   162,    -1,    -1,    -1,    -1,   167,   186,    -1,    -1,
      -1,   172,   191,     8,    -1,    -1,    11,    -1,   161,    -1,
      -1,    16,    17,    18,    -1,   186,    -1,    -1,    -1,   172,
     191,    -1,    -1,   212,   213,    -1,    -1,    -1,    33,    -1,
      -1,    36,    -1,   186,    -1,    -1,    41,   226,   191,    -1,
      -1,   212,   213,    48,    -1,    -1,    -1,   172,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   226,    -1,    -1,    -1,   212,
     213,   186,    -1,    -1,    -1,    -1,   191,    -1,    73,    -1,
      -1,    -1,    -1,   226,    -1,   264,    -1,    -1,   267,    -1,
      -1,    -1,    -1,   172,    -1,    -1,    -1,   212,   213,    -1,
      -1,    -1,   281,   264,    -1,   284,   267,   186,    -1,    -1,
      -1,   226,   191,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     281,   264,    -1,   284,   267,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   212,   213,    -1,    -1,    -1,   281,    -1,
      -1,   284,    -1,    -1,    -1,    -1,    -1,   226,    -1,   264,
      -1,    -1,   267,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   307,    -1,   281,    -1,    -1,   284,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   172,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   264,    -1,    -1,   267,    -1,
      -1,   186,   371,    -1,    -1,    -1,   191,    -1,    -1,    -1,
      -1,    -1,   281,    -1,    -1,   284,    -1,    -1,    -1,    -1,
     371,    -1,    -1,    -1,    -1,    -1,    -1,   212,   213,    -1,
      -1,    -1,    -1,   302,    -1,    -1,    -1,    -1,   371,    -1,
      -1,   226,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,     8,    -1,    -1,    11,   428,
      -1,    -1,    -1,    16,    17,    18,   371,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   264,
      33,    -1,   267,    -1,    -1,    -1,    -1,    -1,    41,    -1,
      -1,    -1,    -1,    -1,    -1,    48,   281,    -1,    -1,   284,
     469,    -1,   371,   472,   473,   474,    -1,   476,   477,   478,
     479,   480,   481,    -1,    -1,    -1,    -1,    -1,   469,    -1,
      73,   472,   473,   474,    -1,   476,   477,   478,   479,   480,
     481,    -1,    -1,    -1,    -1,    -1,   469,    -1,    -1,   472,
     473,   474,    -1,   476,   477,   478,   479,   480,   481,    -1,
      -1,    -1,     8,    -1,    -1,    11,    -1,    -1,    -1,    -1,
      16,    17,    18,    -1,   469,    -1,    -1,   472,   473,   474,
      -1,   476,   477,   478,   479,   480,   481,    33,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    41,   371,    -1,     8,    -1,
      -1,    11,    48,    -1,    -1,    -1,    16,    17,    18,    -1,
     469,    -1,    -1,   472,   473,   474,    -1,   476,   477,   478,
     479,   480,   481,    33,   167,    -1,    -1,    73,    -1,   172,
      -1,    41,    -1,    -1,    -1,    -1,    -1,    -1,    48,    -1,
      -1,    -1,     8,   186,    -1,    11,    -1,    -1,   191,    -1,
      16,    17,    18,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    73,    -1,    -1,    -1,    33,    -1,   212,
     213,    -1,    -1,    -1,    -1,    41,    -1,    -1,    -1,    -1,
      -1,    -1,    48,   226,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   469,    -1,    -1,   472,   473,   474,
      -1,   476,   477,   478,   479,   480,   481,    73,    -1,     8,
      -1,    -1,    11,    -1,    -1,    -1,    -1,    16,    17,    18,
      -1,   264,    -1,    -1,   267,    -1,   172,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   281,    -1,
     186,   284,    41,    -1,    -1,   191,    -1,    -1,    -1,    48,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   172,    -1,    -1,    -1,   212,   213,    -1,    -1,
      -1,    -1,    -1,    -1,    73,    -1,   186,    -1,    -1,     8,
     226,   191,    11,    -1,    -1,    -1,    -1,    16,    17,    18,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   212,   213,    -1,    -1,   172,    -1,    -1,    -1,
      -1,    -1,    41,    -1,    -1,    -1,   226,    -1,   264,    48,
     186,   267,    -1,    -1,    -1,   191,     8,    -1,   371,    11,
      -1,    -1,    -1,    -1,    -1,   281,    -1,    -1,   284,    -1,
      -1,    -1,    -1,    -1,    73,    -1,   212,   213,    -1,    -1,
      -1,    -1,    -1,    -1,   264,    -1,    -1,   267,    -1,    41,
     226,    -1,    -1,    -1,    -1,    -1,    48,    -1,    -1,    -1,
      -1,   281,    -1,   172,   284,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   186,    -1,    -1,
      -1,    73,   191,    -1,    -1,    -1,    -1,    -1,   264,    -1,
      -1,   267,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   212,   213,   281,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   371,   469,   226,    -1,   472,
     473,   474,    -1,   476,   477,   478,   479,   480,   481,    -1,
      -1,     8,    -1,   172,    11,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   402,   186,    -1,    -1,
     142,   371,   191,    -1,    -1,   264,    23,    -1,   267,    -1,
      -1,    -1,    29,    -1,    41,    -1,    -1,    -1,    -1,    36,
      -1,    48,   281,   212,   213,    -1,    -1,    21,    -1,    -1,
     172,    -1,    -1,    -1,    -1,    -1,    -1,   226,    55,    -1,
      -1,    -1,    -1,    -1,   186,   371,    73,    -1,    -1,   191,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   469,    -1,    -1,   472,   473,   474,    -1,
     476,   477,   478,   479,   480,   481,    -1,    -1,   267,    -1,
      74,    -1,    -1,    -1,   226,    -1,    -1,    -1,   105,    -1,
      -1,    -1,   281,    -1,    -1,    89,    -1,    -1,    -1,   469,
      -1,    -1,   472,   473,   474,    -1,   476,   477,   478,   479,
     480,   481,   371,    -1,    -1,   142,    -1,   134,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   281,
      -1,    -1,    -1,   469,    -1,   172,   472,   473,   474,   143,
     476,   477,   478,   479,   480,   481,    -1,    -1,   152,   186,
      -1,    -1,    -1,    -1,   191,    -1,    -1,    -1,    -1,    -1,
     164,    -1,    -1,    -1,    -1,   169,   193,    -1,    -1,    -1,
      -1,    -1,   371,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   226,
     194,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     469,    -1,    -1,   472,   473,   474,    -1,   476,   477,   478,
     479,   480,   481,    -1,    -1,   242,    -1,    -1,    -1,   371,
      -1,    -1,    -1,   250,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   237,    -1,   262,    -1,   241,    -1,    -1,
      -1,    -1,    -1,    -1,   281,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   283,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   293,    -1,    -1,    -1,
     469,    -1,    -1,   472,   473,   474,    -1,   476,   477,   478,
     479,   480,   481,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     304,    -1,    -1,    -1,    -1,    -1,   333,    -1,    -1,    -1,
     337,   338,    -1,    -1,   318,    -1,    -1,   469,    -1,    -1,
      -1,    -1,    -1,    -1,   476,   477,   478,   479,   480,   481,
      -1,    -1,    -1,   360,   371,    -1,    -1,    -1,    -1,   366,
      -1,    -1,    -1,    -1,    -1,   349,    -1,    -1,   352,    -1,
      -1,    -1,    -1,   380,    -1,    -1,   360,    -1,    -1,   363,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   382,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,    -1,    -1,    -1,    -1,    -1,    -1,   401,    -1,    -1,
      -1,    -1,    -1,    -1,   431,    -1,   410,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     3,
      -1,     5,   469,    -1,    -1,    -1,   440,    -1,    -1,   476,
     477,   478,   479,   480,   481,    19,    20,    21,    22,    23,
      24,    25,    26,    27,    28,    29,    30,    31,    32,    33,
      34,    35,    36,    37,    38,    39,    40,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
      74,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    86,    87,    88,    89,    90,    91,    92,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   127,   128,   129,   130,   131,   132,   133,
     134,   135,   136,   137,   138,   139,   140,   141,   142,   143,
     144,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   169,   170,   171,   172,   173,
     174,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   210,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    27,
      28,    29,    30,    31,    32,    33,    34,    35,    36,    37,
      38,    39,    40,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,    71,    72,    73,    74,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    86,    87,
      88,    89,    90,    91,    92,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   127,
     128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
     138,   139,   140,   141,   142,   143,   144,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   169,   170,   171,   172,   173,   174,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    27,    28,    29,    30,    31,
      32,    33,    34,    35,    36,    37,    38,    39,    40,    41,
      42,    43,    44,    45,    46,    47,    48,    49,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,    73,    74,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    86,    87,    88,    89,    90,    91,
      92,    93,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   127,   128,   129,   130,   131,
     132,   133,   134,   135,   136,   137,   138,   139,   140,   141,
     142,   143,   144,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,   166,   167,   168,   169,   170,   171,
     172,   173,   174,   175,   176,   177,   178,   179,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    61,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    74,    -1,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,    -1,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,    -1,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
     166,    -1,   168,   169,   170,   171,   172,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,   200,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,    -1,    -1,   223,   224,   225,
     226,    -1,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,    -1,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,    -1,   265,
     266,   267,   268,    -1,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,    -1,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,    -1,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,    -1,   392,   393,    -1,   395,
     396,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
      -1,   407,   408,   409,   410,   411,    -1,   413,   414,   415,
     416,   417,   418,   419,    -1,    -1,   422,   423,   424,   425,
     426,   427,    -1,   429,   430,   431,   432,   433,   434,   435,
      -1,   437,   438,   439,   440,   441,   442,    -1,    -1,   445,
      -1,    -1,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,     3,    -1,     5,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    44,    45,    46,    47,    48,    49,
      50,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    74,    -1,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    -1,    86,    87,    88,    89,
      90,    91,    -1,    93,    94,    95,    96,    -1,    -1,    -1,
     100,    -1,    -1,    -1,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,    -1,   115,    -1,   117,   118,   119,
     120,   121,   122,    -1,   124,   125,   126,   127,   128,    -1,
      -1,   131,   132,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,    -1,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,    -1,   158,   159,
     160,   161,    -1,   163,    -1,   165,   166,    -1,   168,   169,
     170,   171,   172,   173,    -1,   175,    -1,   177,   178,    -1,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
     190,    -1,   192,   193,   194,   195,   196,   197,    -1,   199,
     200,   201,   202,   203,   204,   205,   206,   207,    -1,   209,
      -1,   211,   212,   213,   214,   215,   216,   217,   218,   219,
     220,    -1,    -1,   223,   224,   225,   226,    -1,   228,   229,
     230,    -1,    -1,   233,   234,   235,   236,   237,    -1,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,    -1,   265,   266,   267,   268,    -1,
     270,   271,   272,   273,   274,   275,    -1,   277,   278,   279,
      -1,   281,   282,   283,    -1,    -1,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,    -1,   303,   304,   305,   306,   307,   308,   309,
     310,   311,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
      -1,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,    -1,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,    -1,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,    -1,   392,   393,    -1,   395,   396,   397,   398,   399,
     400,   401,    -1,   403,   404,    -1,    -1,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
      -1,    -1,   422,   423,   424,   425,   426,    -1,    -1,   429,
     430,   431,   432,   433,   434,   435,    -1,   437,   438,   439,
     440,   441,   442,    -1,    -1,   445,    -1,    -1,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    31,    32,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      44,    45,    46,    47,    48,    49,    50,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      74,    -1,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    -1,    86,    87,    88,    89,    90,    91,    -1,    93,
      94,    95,    96,    -1,    -1,    -1,   100,    -1,    -1,    -1,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
      -1,   115,    -1,   117,   118,   119,   120,   121,   122,    -1,
     124,   125,   126,   127,   128,    -1,    -1,   131,   132,   133,
     134,   135,    -1,   137,   138,   139,    -1,   141,   142,   143,
      -1,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,    -1,   156,    -1,   158,   159,   160,   161,    -1,   163,
      -1,   165,   166,    -1,   168,   169,   170,   171,   172,   173,
      -1,   175,    -1,   177,   178,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,   190,    -1,   192,   193,
     194,   195,   196,   197,    -1,   199,   200,   201,   202,   203,
     204,   205,   206,   207,    -1,   209,    -1,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,    -1,    -1,   223,
     224,   225,   226,    -1,   228,   229,   230,    -1,    -1,   233,
     234,   235,   236,   237,    -1,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
      -1,   265,   266,   267,   268,    -1,   270,   271,   272,   273,
     274,   275,    -1,   277,   278,    -1,    -1,   281,   282,   283,
      -1,    -1,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,    -1,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,    -1,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,    -1,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,    -1,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,    -1,   392,   393,
      -1,   395,   396,   397,   398,   399,   400,   401,    -1,   403,
     404,    -1,    -1,   407,   408,   409,   410,   411,    -1,   413,
     414,   415,   416,   417,   418,   419,    -1,    -1,   422,   423,
     424,   425,   426,    -1,    -1,   429,   430,   431,   432,   433,
     434,   435,    -1,   437,   438,   439,   440,   441,   442,    -1,
      -1,   445,    -1,    -1,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    74,    -1,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    93,    94,    95,    96,    -1,
      -1,    -1,   100,    -1,    -1,    -1,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,    -1,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,    -1,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,   166,    -1,
     168,   169,   170,   171,   172,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,   200,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,   212,   213,   214,   215,   216,   217,
     218,   219,   220,    -1,    -1,   223,   224,   225,   226,    -1,
     228,   229,   230,    -1,    -1,   233,   234,   235,   236,   237,
      -1,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,    -1,   265,   266,   267,
     268,    -1,   270,   271,   272,   273,   274,   275,    -1,   277,
     278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,    -1,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,    -1,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,    -1,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,    -1,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,    -1,   392,   393,    -1,   395,   396,   397,
     398,   399,   400,   401,    -1,   403,   404,    -1,    -1,   407,
     408,   409,   410,   411,    -1,   413,   414,   415,   416,   417,
     418,   419,    -1,    -1,   422,   423,   424,   425,   426,    -1,
      -1,   429,   430,   431,   432,   433,   434,   435,    -1,   437,
     438,   439,   440,   441,   442,    -1,    -1,   445,    -1,    -1,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,    -1,    -1,    75,    76,    77,    78,    79,    80,    -1,
      82,    83,    84,    85,    86,    87,    88,    89,    90,    91,
      -1,    -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,    -1,   115,    -1,   117,   118,   119,   120,   121,
     122,    -1,   124,   125,   126,   127,   128,    -1,    -1,   131,
     132,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
     142,   143,    -1,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,    -1,   156,    -1,   158,   159,   160,   161,
      -1,   163,   164,   165,    -1,    -1,    -1,   169,   170,   171,
      -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,   190,    -1,
     192,   193,   194,   195,   196,   197,    -1,   199,    -1,   201,
     202,   203,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,   214,    -1,   216,   217,   218,   219,   220,    -1,
      -1,   223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,
      -1,   233,   234,   235,   236,   237,    -1,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,    -1,   259,   260,   261,
     262,   263,    -1,   265,   266,    -1,   268,    -1,   270,   271,
     272,   273,   274,   275,    -1,   277,   278,    -1,    -1,   281,
     282,   283,    -1,    -1,   286,   287,    -1,   289,    -1,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
      -1,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,    -1,   341,
     342,    -1,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,    -1,   360,   361,
     362,   363,   364,    -1,   366,   367,   368,   369,   370,    -1,
     372,   373,   374,   375,    -1,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,    -1,
     392,   393,    -1,   395,    -1,   397,   398,   399,   400,   401,
      -1,   403,   404,    -1,    -1,   407,   408,   409,   410,   411,
      -1,   413,   414,   415,   416,   417,   418,   419,    -1,   421,
     422,   423,   424,   425,   426,    -1,    -1,   429,   430,   431,
     432,   433,   434,   435,    -1,   437,    -1,   439,   440,   441,
     442,    -1,    -1,   445,    -1,    -1,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    -1,    82,    83,    84,    85,
      86,    87,    88,    89,    90,    91,    -1,    -1,    94,    95,
      96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,    -1,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,    -1,
     156,    -1,   158,   159,   160,   161,    -1,   163,   164,   165,
      -1,    -1,    -1,   169,   170,   171,    -1,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
      -1,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,    -1,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,    -1,
     216,   217,   218,   219,   220,    -1,    -1,   223,    -1,   225,
     226,    -1,   228,   229,   230,    -1,    -1,   233,   234,   235,
     236,   237,    -1,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,    -1,   259,   260,   261,   262,   263,    -1,   265,
     266,    -1,   268,    -1,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,
     286,   287,    -1,   289,    -1,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,    -1,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,    -1,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,    -1,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,    -1,   392,   393,    -1,   395,
      -1,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
      -1,   407,   408,   409,   410,   411,    -1,   413,   414,   415,
     416,   417,   418,   419,    -1,   421,   422,   423,   424,   425,
     426,    -1,    -1,   429,   430,   431,   432,   433,   434,   435,
      -1,   437,    -1,   439,   440,   441,   442,    -1,    -1,   445,
      -1,    -1,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    31,    32,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    -1,    82,    83,    84,    -1,    86,    87,    88,    89,
      90,    91,    -1,    -1,    94,    95,    96,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,    -1,   115,    -1,   117,   118,   119,
     120,   121,   122,    -1,   124,   125,   126,   127,   128,    -1,
      -1,   131,   132,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,    -1,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,    -1,   156,    -1,   158,   159,
     160,   161,    -1,   163,    -1,   165,    -1,    -1,    -1,   169,
     170,   171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,
     180,   181,   182,   183,   184,   185,    -1,   187,   188,   189,
     190,    -1,   192,   193,   194,   195,   196,   197,    -1,   199,
      -1,   201,   202,   203,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,   214,    -1,   216,   217,   218,   219,
     220,    -1,    -1,   223,    -1,   225,    -1,    -1,   228,   229,
     230,    -1,    -1,   233,   234,   235,   236,   237,    -1,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,    -1,   259,
     260,   261,   262,   263,    -1,   265,   266,    -1,   268,    -1,
     270,   271,   272,   273,   274,   275,    -1,   277,   278,    -1,
      -1,   281,   282,   283,    -1,    -1,   286,   287,    -1,   289,
      -1,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,    -1,   303,   304,   305,   306,   307,   308,   309,
     310,   311,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
      -1,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,    -1,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,   375,    -1,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,    -1,   392,   393,    -1,   395,    -1,   397,   398,   399,
     400,   401,    -1,   403,   404,    -1,    -1,   407,   408,   409,
     410,   411,    -1,   413,   414,   415,   416,   417,   418,   419,
      -1,    -1,   422,   423,   424,   425,   426,    -1,    -1,   429,
     430,   431,   432,   433,   434,   435,    -1,   437,    -1,   439,
     440,   441,   442,    -1,    -1,   445,    -1,    -1,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,     3,
       4,    -1,    -1,    -1,    -1,     9,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    -1,    82,    83,
      84,    -1,    86,    87,    88,    89,    90,    91,    -1,    -1,
      94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
      -1,   115,    -1,   117,   118,   119,   120,   121,   122,    -1,
     124,   125,   126,   127,   128,    -1,    -1,   131,   132,   133,
     134,   135,    -1,   137,   138,   139,    -1,   141,   142,   143,
      -1,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,    -1,   156,    -1,   158,   159,   160,   161,    -1,   163,
      -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,   173,
      -1,   175,    -1,   177,   178,    -1,   180,   181,   182,   183,
     184,   185,    -1,   187,   188,   189,   190,    -1,   192,   193,
     194,   195,   196,   197,    -1,   199,    -1,   201,   202,   203,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
     214,    -1,   216,   217,   218,   219,   220,    -1,    -1,   223,
      -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,   233,
     234,   235,   236,   237,    -1,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,    -1,   259,   260,   261,   262,   263,
      -1,   265,   266,    -1,   268,    -1,   270,   271,   272,   273,
     274,   275,    -1,   277,   278,    -1,    -1,   281,   282,   283,
      -1,    -1,   286,   287,    -1,   289,    -1,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,    -1,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,    -1,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,    -1,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,   375,    -1,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,    -1,   392,   393,
      -1,   395,    -1,   397,   398,   399,   400,   401,    -1,   403,
     404,    -1,    -1,   407,   408,   409,   410,   411,    -1,   413,
     414,   415,   416,   417,   418,   419,    -1,    -1,   422,   423,
     424,   425,   426,    -1,    -1,   429,   430,   431,   432,   433,
     434,   435,    -1,   437,    -1,   439,   440,   441,   442,    -1,
      -1,   445,    -1,    -1,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    27,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    -1,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    -1,    94,    95,    96,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,    -1,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,    -1,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,
      -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,    -1,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,
     218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,
     228,   229,   230,    -1,    -1,   233,   234,   235,   236,   237,
      -1,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
      -1,   259,   260,   261,   262,   263,    -1,   265,   266,    -1,
     268,    -1,   270,   271,   272,   273,   274,   275,    -1,   277,
     278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,
      -1,   289,    -1,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,    -1,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,    -1,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,    -1,   366,   367,
     368,   369,   370,    -1,   372,   373,   374,   375,    -1,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,    -1,   392,   393,    -1,   395,    -1,   397,
     398,   399,   400,   401,    -1,   403,   404,    -1,    -1,   407,
     408,   409,   410,   411,    -1,   413,   414,   415,   416,   417,
     418,   419,    -1,    -1,   422,   423,   424,   425,   426,    -1,
      -1,   429,   430,   431,   432,   433,   434,   435,    -1,   437,
      -1,   439,   440,   441,   442,    -1,    -1,   445,    -1,    -1,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    27,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,
      82,    83,    84,    -1,    86,    87,    88,    89,    90,    91,
      -1,    -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,    -1,   115,    -1,   117,   118,   119,   120,   121,
     122,    -1,   124,   125,   126,   127,   128,    -1,    -1,   131,
     132,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
     142,   143,    -1,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,    -1,   156,    -1,   158,   159,   160,   161,
      -1,   163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,
      -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,   190,    -1,
     192,   193,   194,   195,   196,   197,    -1,   199,    -1,   201,
     202,   203,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,   214,    -1,   216,   217,   218,   219,   220,    -1,
      -1,   223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,
      -1,   233,   234,   235,   236,   237,    -1,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,    -1,   259,   260,   261,
     262,   263,    -1,   265,   266,    -1,   268,    -1,   270,   271,
     272,   273,   274,   275,    -1,   277,   278,    -1,    -1,   281,
     282,   283,    -1,    -1,   286,   287,    -1,   289,    -1,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
      -1,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,    -1,   341,
     342,    -1,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,    -1,   360,   361,
     362,   363,   364,    -1,   366,   367,   368,   369,   370,    -1,
     372,   373,   374,   375,    -1,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,    -1,
     392,   393,    -1,   395,    -1,   397,   398,   399,   400,   401,
      -1,   403,   404,    -1,    -1,   407,   408,   409,   410,   411,
      -1,   413,   414,   415,   416,   417,   418,   419,    -1,    -1,
     422,   423,   424,   425,   426,    -1,    -1,   429,   430,   431,
     432,   433,   434,   435,    -1,   437,    -1,   439,   440,   441,
     442,    -1,    -1,   445,    -1,    -1,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    -1,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    -1,    94,    95,
      96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,    -1,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,    -1,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
      -1,    -1,    -1,   169,   170,   171,    -1,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
      -1,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,    -1,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,    -1,
     216,   217,   218,   219,   220,    -1,    -1,   223,    -1,   225,
      -1,    -1,   228,   229,   230,    -1,    -1,   233,   234,   235,
     236,   237,    -1,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,    -1,   259,   260,   261,   262,   263,    -1,   265,
     266,    -1,   268,    -1,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,    -1,   280,   281,   282,   283,    -1,    -1,
     286,   287,    -1,   289,    -1,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,    -1,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,    -1,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,    -1,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,    -1,   392,   393,    -1,   395,
      -1,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
      -1,   407,   408,   409,   410,   411,    -1,   413,   414,   415,
     416,   417,   418,   419,    -1,    -1,   422,   423,   424,   425,
     426,    -1,    -1,   429,   430,   431,   432,   433,   434,   435,
      -1,   437,    -1,   439,   440,   441,   442,    -1,    -1,   445,
      -1,    -1,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    -1,    82,    83,    84,    -1,    86,    87,    88,    89,
      90,    91,    -1,    -1,    94,    95,    96,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,    -1,   115,    -1,   117,   118,   119,
     120,   121,   122,    -1,   124,   125,   126,   127,   128,    -1,
      -1,   131,   132,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,    -1,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,    -1,   156,    -1,   158,   159,
     160,   161,    -1,   163,    -1,   165,    -1,    -1,    -1,   169,
     170,   171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,
     180,   181,   182,   183,   184,   185,    -1,   187,   188,   189,
     190,    -1,   192,   193,   194,   195,   196,   197,    -1,   199,
      -1,   201,   202,   203,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,   214,    -1,   216,   217,   218,   219,
     220,    -1,    -1,   223,    -1,   225,    -1,    -1,   228,   229,
     230,    -1,    -1,   233,   234,   235,   236,   237,    -1,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,    -1,   259,
     260,   261,   262,   263,    -1,   265,   266,    -1,   268,    -1,
     270,   271,   272,   273,   274,   275,    -1,   277,   278,    -1,
     280,   281,   282,   283,    -1,    -1,   286,   287,    -1,   289,
      -1,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,    -1,   303,   304,   305,   306,   307,   308,   309,
     310,   311,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
      -1,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,    -1,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,   375,    -1,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,    -1,   392,   393,    -1,   395,    -1,   397,   398,   399,
     400,   401,    -1,   403,   404,    -1,    -1,   407,   408,   409,
     410,   411,    -1,   413,   414,   415,   416,   417,   418,   419,
      -1,    -1,   422,   423,   424,   425,   426,    -1,    -1,   429,
     430,   431,   432,   433,   434,   435,    -1,   437,    -1,   439,
     440,   441,   442,    -1,    -1,   445,    -1,    -1,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    27,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    -1,    82,    83,
      84,    -1,    86,    87,    88,    89,    90,    91,    -1,    -1,
      94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
      -1,   115,    -1,   117,   118,   119,   120,   121,   122,    -1,
     124,   125,   126,   127,   128,    -1,    -1,   131,   132,   133,
     134,   135,    -1,   137,   138,   139,    -1,   141,   142,   143,
      -1,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,    -1,   156,    -1,   158,   159,   160,   161,    -1,   163,
      -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,   173,
      -1,   175,    -1,   177,   178,    -1,   180,   181,   182,   183,
     184,   185,    -1,   187,   188,   189,   190,    -1,   192,   193,
     194,   195,   196,   197,    -1,   199,    -1,   201,   202,   203,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
     214,    -1,   216,   217,   218,   219,   220,    -1,    -1,   223,
      -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,   233,
     234,   235,   236,   237,    -1,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,    -1,   259,   260,   261,   262,   263,
      -1,   265,   266,    -1,   268,    -1,   270,   271,   272,   273,
     274,   275,    -1,   277,   278,    -1,    -1,   281,   282,   283,
      -1,    -1,   286,   287,    -1,   289,    -1,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,    -1,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,    -1,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,    -1,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,   375,    -1,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,    -1,   392,   393,
      -1,   395,    -1,   397,   398,   399,   400,   401,    -1,   403,
     404,    -1,    -1,   407,   408,   409,   410,   411,    -1,   413,
     414,   415,   416,   417,   418,   419,    -1,    -1,   422,   423,
     424,   425,   426,    -1,    -1,   429,   430,   431,   432,   433,
     434,   435,    -1,   437,    -1,   439,   440,   441,   442,    -1,
      -1,   445,    -1,    -1,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    -1,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    -1,    94,    95,    96,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,    -1,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,    -1,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,
      -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,    -1,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,
     218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,
     228,   229,   230,    -1,    -1,   233,   234,   235,   236,   237,
      -1,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
      -1,   259,   260,   261,   262,   263,    -1,   265,   266,    -1,
     268,    -1,   270,   271,   272,   273,   274,   275,    -1,   277,
     278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,
      -1,   289,    -1,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,    -1,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,    -1,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,    -1,   366,   367,
     368,   369,   370,    -1,   372,   373,   374,   375,    -1,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,    -1,   392,   393,   394,   395,    -1,   397,
     398,   399,   400,   401,    -1,   403,   404,    -1,    -1,   407,
     408,   409,   410,   411,    -1,   413,   414,   415,   416,   417,
     418,   419,    -1,    -1,   422,   423,   424,   425,   426,    -1,
      -1,   429,   430,   431,   432,   433,   434,   435,    -1,   437,
      -1,   439,   440,   441,   442,    -1,    -1,   445,    -1,    -1,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    36,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,
      82,    83,    84,    -1,    86,    87,    88,    89,    90,    91,
      -1,    -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,    -1,   115,    -1,   117,   118,   119,   120,   121,
     122,    -1,   124,   125,   126,   127,   128,    -1,    -1,   131,
     132,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
     142,   143,    -1,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,    -1,   156,    -1,   158,   159,   160,   161,
      -1,   163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,
      -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,   190,    -1,
     192,   193,   194,   195,   196,   197,    -1,   199,    -1,   201,
     202,   203,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,   214,    -1,   216,   217,   218,   219,   220,    -1,
      -1,   223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,
      -1,   233,   234,   235,   236,   237,    -1,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,    -1,   259,   260,   261,
     262,   263,    -1,   265,   266,    -1,   268,    -1,   270,   271,
     272,   273,   274,   275,    -1,   277,   278,    -1,    -1,   281,
     282,   283,    -1,    -1,   286,   287,    -1,   289,    -1,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
      -1,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,    -1,   341,
     342,    -1,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,    -1,   360,   361,
     362,   363,   364,    -1,   366,   367,   368,   369,   370,    -1,
     372,   373,   374,   375,    -1,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,    -1,
     392,   393,    -1,   395,    -1,   397,   398,   399,   400,   401,
      -1,   403,   404,    -1,    -1,   407,   408,   409,   410,   411,
      -1,   413,   414,   415,   416,   417,   418,   419,    -1,    -1,
     422,   423,   424,   425,   426,    -1,    -1,   429,   430,   431,
     432,   433,   434,   435,    -1,   437,    -1,   439,   440,   441,
     442,    -1,    -1,   445,    -1,    -1,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      36,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    -1,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    -1,    94,    95,
      96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,    -1,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,    -1,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
      -1,    -1,    -1,   169,   170,   171,    -1,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
      -1,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,    -1,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,    -1,
     216,   217,   218,   219,   220,    -1,    -1,   223,    -1,   225,
      -1,    -1,   228,   229,   230,    -1,    -1,   233,   234,   235,
     236,   237,    -1,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,    -1,   259,   260,   261,   262,   263,    -1,   265,
     266,    -1,   268,    -1,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,
     286,   287,    -1,   289,    -1,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,    -1,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,    -1,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,    -1,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,    -1,   392,   393,    -1,   395,
      -1,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
      -1,   407,   408,   409,   410,   411,    -1,   413,   414,   415,
     416,   417,   418,   419,    -1,    -1,   422,   423,   424,   425,
     426,    -1,    -1,   429,   430,   431,   432,   433,   434,   435,
      -1,   437,    -1,   439,   440,   441,   442,    -1,    -1,   445,
      -1,    -1,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,     3,    -1,     5,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    -1,    82,    83,    84,    -1,    86,    87,    88,    89,
      90,    91,    -1,    -1,    94,    95,    96,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,    -1,   115,    -1,   117,   118,   119,
     120,   121,   122,    -1,   124,   125,   126,   127,   128,    -1,
      -1,   131,   132,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,    -1,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,    -1,   156,    -1,   158,   159,
     160,   161,    -1,   163,    -1,   165,    -1,    -1,    -1,   169,
     170,   171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,
     180,   181,   182,   183,   184,   185,    -1,   187,   188,   189,
     190,    -1,   192,   193,   194,   195,   196,   197,    -1,   199,
      -1,   201,   202,   203,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,   214,    -1,   216,   217,   218,   219,
     220,    -1,    -1,   223,    -1,   225,    -1,    -1,   228,   229,
     230,    -1,    -1,   233,   234,   235,   236,   237,    -1,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,    -1,   259,
     260,   261,   262,   263,    -1,   265,   266,    -1,   268,    -1,
     270,   271,   272,   273,   274,   275,    -1,   277,   278,    -1,
      -1,   281,   282,   283,    -1,    -1,   286,   287,    -1,   289,
      -1,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,    -1,   303,   304,   305,   306,   307,   308,   309,
     310,   311,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
      -1,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,    -1,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,   375,    -1,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,    -1,   392,   393,    -1,   395,    -1,   397,   398,   399,
     400,   401,    -1,   403,   404,    -1,    -1,   407,   408,   409,
     410,   411,    -1,   413,   414,   415,   416,   417,   418,   419,
      -1,    -1,   422,   423,   424,   425,   426,    -1,    -1,   429,
     430,   431,   432,   433,   434,   435,    -1,   437,    -1,   439,
     440,   441,   442,    -1,    -1,   445,    -1,    -1,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    -1,    82,    83,
      84,    -1,    86,    87,    88,    89,    90,    91,    -1,    -1,
      94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
      -1,   115,    -1,   117,   118,   119,   120,   121,   122,    -1,
     124,   125,   126,   127,   128,    -1,    -1,   131,   132,   133,
     134,   135,    -1,   137,   138,   139,    -1,   141,   142,   143,
      -1,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,    -1,   156,    -1,   158,   159,   160,   161,    -1,   163,
      -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,   173,
      -1,   175,    -1,   177,   178,    -1,   180,   181,   182,   183,
     184,   185,    -1,   187,   188,   189,   190,    -1,   192,   193,
     194,   195,   196,   197,    -1,   199,    -1,   201,   202,   203,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
     214,    -1,   216,   217,   218,   219,   220,    -1,    -1,   223,
      -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,   233,
     234,   235,   236,   237,    -1,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,    -1,   259,   260,   261,   262,   263,
      -1,   265,   266,    -1,   268,    -1,   270,   271,   272,   273,
     274,   275,    -1,   277,   278,    -1,    -1,   281,   282,   283,
      -1,    -1,   286,   287,    -1,   289,    -1,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,    -1,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,    -1,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,    -1,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,   375,    -1,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,    -1,   392,   393,
      -1,   395,    -1,   397,   398,   399,   400,   401,    -1,   403,
     404,    -1,    -1,   407,   408,   409,   410,   411,    -1,   413,
     414,   415,   416,   417,   418,   419,    -1,    -1,   422,   423,
     424,   425,   426,    -1,    -1,   429,   430,   431,   432,   433,
     434,   435,    -1,   437,    -1,   439,   440,   441,   442,    -1,
      -1,   445,    -1,    -1,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    -1,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    -1,    94,    95,    96,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,    -1,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,    -1,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,
      -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,    -1,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,
     218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,
     228,   229,   230,    -1,    -1,   233,   234,   235,   236,   237,
      -1,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
      -1,   259,   260,   261,   262,   263,    -1,   265,   266,    -1,
     268,    -1,   270,   271,   272,   273,   274,   275,    -1,   277,
     278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,
      -1,   289,    -1,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,    -1,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,    -1,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,    -1,   366,   367,
     368,   369,   370,    -1,   372,   373,   374,   375,    -1,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,    -1,   392,   393,    -1,   395,    -1,   397,
     398,   399,   400,   401,    -1,   403,   404,    -1,    -1,   407,
     408,   409,   410,   411,    -1,   413,   414,   415,   416,   417,
     418,   419,    -1,    -1,   422,   423,   424,   425,   426,    -1,
      -1,   429,   430,   431,   432,   433,   434,   435,    -1,   437,
      -1,   439,   440,   441,   442,    -1,    -1,   445,    -1,    -1,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,
      82,    83,    84,    -1,    86,    87,    88,    89,    90,    91,
      -1,    -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,    -1,   115,    -1,   117,   118,   119,   120,   121,
     122,    -1,   124,   125,   126,   127,   128,    -1,    -1,   131,
     132,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
     142,   143,    -1,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,    -1,   156,    -1,   158,   159,   160,   161,
      -1,   163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,
      -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,   190,    -1,
     192,   193,   194,   195,   196,   197,    -1,   199,    -1,   201,
     202,   203,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,   214,    -1,   216,   217,   218,   219,   220,    -1,
      -1,   223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,
      -1,   233,   234,   235,   236,   237,    -1,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,    -1,   259,   260,   261,
     262,   263,    -1,   265,   266,    -1,   268,    -1,   270,   271,
     272,   273,   274,   275,    -1,   277,   278,    -1,    -1,   281,
     282,   283,    -1,    -1,   286,   287,    -1,   289,    -1,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
      -1,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,    -1,   341,
     342,    -1,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,    -1,   360,   361,
     362,   363,   364,    -1,   366,   367,   368,   369,   370,    -1,
     372,   373,   374,   375,    -1,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,    -1,
     392,   393,    -1,   395,    -1,   397,   398,   399,   400,   401,
      -1,   403,   404,    -1,    -1,   407,   408,   409,   410,   411,
      -1,   413,   414,   415,   416,   417,   418,   419,    -1,    -1,
     422,   423,   424,   425,   426,    -1,    -1,   429,   430,   431,
     432,   433,   434,   435,    -1,   437,    -1,   439,   440,   441,
     442,    -1,    -1,   445,    -1,    -1,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    -1,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    -1,    94,    95,
      96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,    -1,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,    -1,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
      -1,    -1,    -1,   169,   170,   171,    -1,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
      -1,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,    -1,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,    -1,
     216,   217,   218,   219,   220,    -1,    -1,   223,    -1,   225,
      -1,    -1,   228,   229,   230,    -1,    -1,   233,   234,   235,
     236,   237,    -1,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,    -1,   259,   260,   261,   262,   263,    -1,   265,
     266,    -1,   268,    -1,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,
     286,   287,    -1,   289,    -1,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,    -1,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,    -1,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,    -1,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,    -1,   392,   393,    -1,   395,
      -1,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
      -1,   407,   408,   409,   410,   411,    -1,   413,   414,   415,
     416,   417,   418,   419,    -1,    -1,   422,   423,   424,   425,
     426,    -1,    -1,   429,   430,   431,   432,   433,   434,   435,
      -1,   437,    -1,   439,   440,   441,   442,    -1,    -1,   445,
      -1,    -1,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    -1,    82,    83,    84,    -1,    86,    87,    88,    89,
      90,    91,    -1,    -1,    94,    95,    96,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,    -1,   115,    -1,   117,   118,   119,
     120,   121,   122,    -1,   124,   125,   126,   127,   128,    -1,
      -1,   131,   132,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,    -1,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,    -1,   156,    -1,   158,   159,
     160,   161,    -1,   163,    -1,   165,    -1,    -1,    -1,   169,
     170,   171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,
     180,   181,   182,   183,   184,   185,    -1,   187,   188,   189,
     190,    -1,   192,   193,   194,   195,   196,   197,    -1,   199,
      -1,   201,   202,   203,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,   214,    -1,   216,   217,   218,   219,
     220,    -1,    -1,   223,    -1,   225,    -1,    -1,   228,   229,
     230,    -1,    -1,   233,   234,   235,   236,   237,    -1,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,    -1,   259,
     260,   261,   262,   263,    -1,   265,   266,    -1,   268,    -1,
     270,   271,   272,   273,   274,   275,    -1,   277,   278,    -1,
      -1,   281,   282,   283,    -1,    -1,   286,   287,    -1,   289,
      -1,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,    -1,   303,   304,   305,   306,   307,   308,   309,
     310,   311,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
      -1,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,    -1,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,   375,    -1,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,    -1,   392,   393,    -1,   395,    -1,   397,   398,   399,
     400,   401,    -1,   403,   404,    -1,    -1,   407,   408,   409,
     410,   411,    -1,   413,   414,   415,   416,   417,   418,   419,
      -1,    -1,   422,   423,   424,   425,   426,    -1,    -1,   429,
     430,   431,   432,   433,   434,   435,    -1,   437,    -1,   439,
     440,   441,   442,    -1,    -1,   445,    -1,    -1,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    -1,    82,    83,
      84,    -1,    86,    87,    88,    89,    90,    91,    -1,    -1,
      94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
      -1,   115,    -1,   117,   118,   119,   120,   121,   122,    -1,
     124,   125,   126,   127,   128,    -1,    -1,   131,   132,   133,
     134,   135,    -1,   137,   138,   139,    -1,   141,   142,   143,
      -1,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,    -1,   156,    -1,   158,   159,   160,   161,    -1,   163,
      -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,   173,
      -1,   175,    -1,   177,   178,    -1,   180,   181,   182,   183,
     184,   185,    -1,   187,   188,   189,   190,    -1,   192,   193,
     194,   195,   196,   197,    -1,   199,    -1,   201,   202,   203,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
     214,    -1,   216,   217,   218,   219,   220,    -1,    -1,   223,
      -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,   233,
     234,   235,   236,   237,    -1,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,    -1,   259,   260,   261,   262,   263,
      -1,   265,   266,    -1,   268,    -1,   270,   271,   272,   273,
     274,   275,    -1,   277,   278,    -1,    -1,   281,   282,   283,
      -1,    -1,   286,   287,    -1,   289,    -1,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,    -1,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,    -1,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,    -1,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,   375,    -1,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,    -1,   392,   393,
      -1,   395,    -1,   397,   398,   399,   400,   401,    -1,   403,
     404,    -1,    -1,   407,   408,   409,   410,   411,    -1,   413,
     414,   415,   416,   417,   418,   419,    -1,    -1,   422,   423,
     424,   425,   426,    -1,    -1,   429,   430,   431,   432,   433,
     434,   435,    -1,   437,    -1,   439,   440,   441,   442,    -1,
      -1,   445,    -1,    -1,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    -1,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    -1,    94,    95,    96,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,    -1,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,    -1,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,
      -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,    -1,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,
     218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,
     228,   229,   230,    -1,    -1,   233,   234,   235,   236,   237,
      -1,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
      -1,   259,   260,   261,   262,   263,    -1,   265,   266,    -1,
     268,    -1,   270,   271,   272,   273,   274,   275,    -1,   277,
     278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,
      -1,   289,    -1,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,    -1,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,    -1,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,    -1,   366,   367,
     368,   369,   370,    -1,   372,   373,   374,   375,    -1,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,    -1,   392,   393,    -1,   395,    -1,   397,
     398,   399,   400,   401,    -1,   403,   404,    -1,    -1,   407,
     408,   409,   410,   411,    -1,   413,   414,   415,   416,   417,
     418,   419,    -1,    -1,   422,   423,   424,   425,   426,    -1,
      -1,   429,   430,   431,   432,   433,   434,   435,    -1,   437,
      -1,   439,   440,   441,   442,    -1,    -1,   445,    -1,    -1,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,
      82,    83,    84,    -1,    86,    87,    88,    89,    90,    91,
      -1,    -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,    -1,   115,    -1,   117,   118,   119,   120,   121,
     122,    -1,   124,   125,   126,   127,   128,    -1,    -1,   131,
     132,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
     142,   143,    -1,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,    -1,   156,    -1,   158,   159,   160,   161,
      -1,   163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,
      -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,   190,    -1,
     192,   193,   194,   195,   196,   197,    -1,   199,    -1,   201,
     202,   203,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,   214,    -1,   216,   217,   218,   219,   220,    -1,
      -1,   223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,
      -1,   233,   234,   235,   236,   237,    -1,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,    -1,   259,   260,   261,
     262,   263,    -1,   265,   266,    -1,   268,    -1,   270,   271,
     272,   273,   274,   275,    -1,   277,   278,    -1,    -1,   281,
     282,   283,    -1,    -1,   286,   287,    -1,   289,    -1,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
      -1,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,    -1,   341,
     342,    -1,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,    -1,   360,   361,
     362,   363,   364,    -1,   366,   367,   368,   369,   370,    -1,
     372,   373,   374,   375,    -1,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,    -1,
     392,   393,    -1,   395,    -1,   397,   398,   399,   400,   401,
      -1,   403,   404,    -1,    -1,   407,   408,   409,   410,   411,
      -1,   413,   414,   415,   416,   417,   418,   419,    -1,    -1,
     422,   423,   424,   425,   426,    -1,    -1,   429,   430,   431,
     432,   433,   434,   435,    -1,   437,    -1,   439,   440,   441,
     442,    -1,    -1,   445,    -1,    -1,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    -1,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    -1,    94,    95,
      96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,    -1,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,    -1,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
      -1,    -1,    -1,   169,   170,   171,    -1,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
      -1,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,    -1,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,    -1,
     216,   217,   218,   219,   220,    -1,    -1,   223,    -1,   225,
      -1,    -1,   228,   229,   230,    -1,    -1,   233,   234,   235,
     236,   237,    -1,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,    -1,   259,   260,   261,   262,   263,    -1,   265,
     266,    -1,   268,    -1,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,
     286,   287,    -1,   289,    -1,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,    -1,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,    -1,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,    -1,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,    -1,   392,   393,    -1,   395,
      -1,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
      -1,   407,   408,   409,   410,   411,    -1,   413,   414,   415,
     416,   417,   418,   419,    -1,    -1,   422,   423,   424,   425,
     426,    -1,    -1,   429,   430,   431,   432,   433,   434,   435,
      -1,   437,    -1,   439,   440,   441,   442,    -1,    -1,   445,
      -1,    -1,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    -1,    82,    83,    84,    -1,    86,    87,    88,    89,
      90,    91,    -1,    -1,    94,    95,    96,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,    -1,   115,    -1,   117,   118,   119,
     120,   121,   122,    -1,   124,   125,   126,   127,   128,    -1,
      -1,   131,   132,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,    -1,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,    -1,   156,    -1,   158,   159,
     160,   161,    -1,   163,    -1,   165,    -1,    -1,    -1,   169,
     170,   171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,
     180,   181,   182,   183,   184,   185,    -1,   187,   188,   189,
     190,    -1,   192,   193,   194,   195,   196,   197,    -1,   199,
      -1,   201,   202,   203,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,   214,    -1,   216,   217,   218,   219,
     220,    -1,    -1,   223,    -1,   225,    -1,    -1,   228,   229,
     230,    -1,    -1,   233,   234,   235,   236,   237,    -1,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,    -1,   259,
     260,   261,   262,   263,    -1,   265,   266,    -1,   268,    -1,
     270,   271,   272,   273,   274,   275,    -1,   277,   278,    -1,
      -1,   281,   282,   283,    -1,    -1,   286,   287,    -1,   289,
      -1,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,    -1,   303,   304,   305,   306,   307,   308,   309,
     310,   311,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
      -1,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,    -1,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,   375,    -1,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,    -1,   392,   393,    -1,   395,    -1,   397,   398,   399,
     400,   401,    -1,   403,   404,    -1,    -1,   407,   408,   409,
     410,   411,    -1,   413,   414,   415,   416,   417,   418,   419,
      -1,    -1,   422,   423,   424,   425,   426,    -1,    -1,   429,
     430,   431,   432,   433,   434,   435,    -1,   437,    -1,   439,
     440,   441,   442,    -1,    -1,   445,    -1,    -1,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    -1,    82,    83,
      84,    -1,    86,    87,    88,    89,    90,    91,    -1,    -1,
      94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
      -1,   115,    -1,   117,   118,   119,   120,   121,   122,    -1,
     124,   125,   126,   127,   128,    -1,    -1,   131,   132,   133,
     134,   135,    -1,   137,   138,   139,    -1,   141,   142,   143,
      -1,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,    -1,   156,    -1,   158,   159,   160,   161,    -1,   163,
      -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,   173,
      -1,   175,    -1,   177,   178,    -1,   180,   181,   182,   183,
     184,   185,    -1,   187,   188,   189,   190,    -1,   192,   193,
     194,   195,   196,   197,    -1,   199,    -1,   201,   202,   203,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
     214,    -1,   216,   217,   218,   219,   220,    -1,    -1,   223,
      -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,   233,
     234,   235,   236,   237,    -1,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,    -1,   259,   260,   261,   262,   263,
      -1,   265,   266,    -1,   268,    -1,   270,   271,   272,   273,
     274,   275,    -1,   277,   278,    -1,    -1,   281,   282,   283,
      -1,    -1,   286,   287,    -1,   289,    -1,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,    -1,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,    -1,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,    -1,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,   375,    -1,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,    -1,   392,   393,
      -1,   395,    -1,   397,   398,   399,   400,   401,    -1,   403,
     404,    -1,    -1,   407,   408,   409,   410,   411,    -1,   413,
     414,   415,   416,   417,   418,   419,    -1,    -1,   422,   423,
     424,   425,   426,    -1,    -1,   429,   430,   431,   432,   433,
     434,   435,    -1,   437,    -1,   439,   440,   441,   442,    -1,
      -1,   445,    -1,    -1,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    -1,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    -1,    94,    95,    96,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,    -1,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,    -1,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,
      -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,    -1,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,
     218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,
     228,   229,   230,    -1,    -1,   233,   234,   235,   236,   237,
      -1,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
      -1,   259,   260,   261,   262,   263,    -1,   265,   266,    -1,
     268,    -1,   270,   271,   272,   273,   274,   275,    -1,   277,
     278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,
      -1,   289,    -1,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,    -1,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,    -1,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,    -1,   366,   367,
     368,   369,   370,    -1,   372,   373,   374,   375,    -1,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,    -1,   392,   393,    -1,   395,    -1,   397,
     398,   399,   400,   401,    -1,   403,   404,    -1,    -1,   407,
     408,   409,   410,   411,    -1,   413,   414,   415,   416,   417,
     418,   419,    -1,    -1,   422,   423,   424,   425,   426,    -1,
      -1,   429,   430,   431,   432,   433,   434,   435,    -1,   437,
      -1,   439,   440,   441,   442,    -1,    -1,   445,    -1,    -1,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,
      82,    83,    84,    -1,    86,    87,    88,    89,    90,    91,
      -1,    -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,    -1,   115,    -1,   117,   118,   119,   120,   121,
     122,    -1,   124,   125,   126,   127,   128,    -1,    -1,   131,
     132,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
     142,   143,    -1,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,    -1,   156,    -1,   158,   159,   160,   161,
      -1,   163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,
      -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,   190,    -1,
     192,   193,   194,   195,   196,   197,    -1,   199,    -1,   201,
     202,   203,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,   214,    -1,   216,   217,   218,   219,   220,    -1,
      -1,   223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,
      -1,   233,   234,   235,   236,   237,    -1,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,    -1,   259,   260,   261,
     262,   263,    -1,   265,   266,    -1,   268,    -1,   270,   271,
     272,   273,   274,   275,    -1,   277,   278,    -1,    -1,   281,
     282,   283,    -1,    -1,   286,   287,    -1,   289,    -1,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
      -1,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,    -1,   341,
     342,    -1,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,    -1,   360,   361,
     362,   363,   364,    -1,   366,   367,   368,   369,   370,    -1,
     372,   373,   374,   375,    -1,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,    -1,
     392,   393,    -1,   395,    -1,   397,   398,   399,   400,   401,
      -1,   403,   404,    -1,    -1,   407,   408,   409,   410,   411,
      -1,   413,   414,   415,   416,   417,   418,   419,    -1,    -1,
     422,   423,   424,   425,   426,    -1,    -1,   429,   430,   431,
     432,   433,   434,   435,    -1,   437,    -1,   439,   440,   441,
     442,    -1,    -1,   445,    -1,    -1,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      36,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    -1,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    -1,    94,    95,
      96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,    -1,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,    -1,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
      -1,    -1,    -1,   169,   170,   171,    -1,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
      -1,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,    -1,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,    -1,
     216,   217,   218,   219,   220,    -1,    -1,   223,    -1,   225,
      -1,    -1,   228,   229,   230,    -1,    -1,   233,   234,   235,
     236,   237,    -1,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,    -1,   259,   260,   261,   262,   263,    -1,   265,
     266,    -1,   268,    -1,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,
     286,   287,    -1,   289,    -1,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,    -1,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,    -1,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,    -1,
      -1,   367,   368,   369,   370,    -1,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,    -1,   392,   393,    -1,   395,
      -1,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
      -1,   407,   408,   409,   410,   411,    -1,   413,   414,   415,
     416,   417,   418,   419,    -1,    -1,   422,   423,   424,   425,
     426,    -1,    -1,   429,   430,   431,   432,   433,   434,   435,
      -1,   437,    -1,   439,   440,   441,   442,    -1,    -1,   445,
      -1,    -1,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    -1,    82,    83,    84,    -1,    86,    87,    88,    89,
      90,    91,    -1,    -1,    94,    95,    96,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,    -1,   115,    -1,   117,   118,   119,
     120,   121,   122,    -1,   124,   125,   126,   127,   128,    -1,
      -1,   131,   132,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,    -1,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,    -1,   156,    -1,   158,   159,
     160,   161,    -1,   163,    -1,   165,    -1,    -1,    -1,   169,
     170,   171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,
     180,   181,   182,   183,   184,   185,    -1,   187,   188,   189,
     190,    -1,   192,   193,   194,   195,   196,   197,    -1,   199,
      -1,   201,   202,   203,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,   214,    -1,   216,   217,   218,   219,
     220,    -1,    -1,   223,    -1,   225,    -1,    -1,   228,   229,
     230,    -1,    -1,   233,   234,   235,   236,   237,    -1,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,    -1,   259,
     260,   261,   262,   263,    -1,   265,   266,    -1,   268,    -1,
     270,   271,   272,   273,   274,   275,    -1,   277,   278,    -1,
      -1,   281,   282,   283,    -1,    -1,   286,   287,    -1,   289,
      -1,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,    -1,   303,   304,   305,   306,   307,   308,   309,
     310,   311,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
      -1,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,    -1,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,   375,    -1,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,    -1,   392,   393,    -1,   395,    -1,   397,   398,   399,
     400,   401,    -1,   403,   404,    -1,    -1,   407,   408,   409,
     410,   411,    -1,   413,   414,   415,   416,   417,   418,   419,
      -1,    -1,   422,   423,   424,   425,   426,    -1,    -1,   429,
     430,   431,   432,   433,   434,   435,    -1,   437,    -1,   439,
     440,   441,   442,    -1,    -1,   445,    -1,    -1,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      -1,    45,    46,    47,    48,    49,    -1,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    72,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    -1,    82,    83,
      84,    -1,    86,    87,    88,    89,    90,    91,    -1,    -1,
      94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
      -1,   115,    -1,   117,   118,   119,   120,   121,   122,    -1,
     124,   125,   126,   127,   128,    -1,    -1,   131,   132,   133,
     134,   135,    -1,   137,   138,   139,    -1,   141,   142,   143,
      -1,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,    -1,   156,    -1,   158,   159,   160,   161,    -1,   163,
      -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,   173,
      -1,   175,    -1,   177,   178,    -1,   180,   181,   182,   183,
     184,   185,    -1,   187,   188,   189,   190,    -1,   192,   193,
     194,   195,   196,   197,    -1,   199,    -1,   201,   202,   203,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
     214,    -1,   216,   217,   218,   219,   220,    -1,    -1,   223,
      -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,   233,
     234,   235,   236,   237,    -1,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,    -1,   259,   260,   261,   262,   263,
      -1,   265,   266,    -1,   268,    -1,   270,   271,   272,   273,
     274,   275,    -1,   277,   278,    -1,    -1,   281,   282,   283,
      -1,    -1,   286,   287,    -1,   289,    -1,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,    -1,   303,
     304,   305,   306,   307,   308,   309,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,    -1,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,    -1,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,   375,    -1,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,    -1,   392,   393,
      -1,   395,    -1,   397,   398,   399,   400,   401,    -1,   403,
     404,    -1,    -1,   407,   408,   409,   410,   411,    -1,   413,
     414,   415,   416,   417,   418,   419,    -1,    -1,   422,   423,
     424,   425,   426,    -1,    -1,   429,   430,   431,   432,   433,
     434,   435,    -1,   437,    -1,   439,   440,   441,   442,    -1,
      -1,   445,    -1,    -1,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,     3,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    22,    23,    24,    25,    26,    -1,
      28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      38,    39,    -1,    41,    42,    43,    -1,    45,    46,    47,
      48,    49,    -1,    51,    52,    -1,    54,    55,    56,    57,
      58,    59,    -1,    -1,    62,    63,    64,    65,    66,    -1,
      68,    69,    70,    71,    72,    -1,    -1,    -1,    76,    77,
      78,    79,    80,    -1,    82,    83,    84,    -1,    86,    87,
      88,    89,    90,    91,    -1,    -1,    94,    95,    96,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,    -1,   115,    -1,   117,
     118,   119,   120,   121,   122,    -1,   124,   125,   126,   127,
     128,    -1,    -1,   131,   132,   133,   134,   135,    -1,   137,
     138,   139,    -1,   141,   142,   143,    -1,   145,   146,   147,
     148,   149,   150,   151,   152,   153,   154,    -1,   156,    -1,
     158,   159,   160,   161,    -1,   163,    -1,   165,    -1,    -1,
      -1,   169,   170,   171,    -1,   173,    -1,   175,    -1,   177,
     178,    -1,   180,   181,   182,   183,   184,   185,    -1,   187,
     188,   189,   190,    -1,   192,   193,   194,   195,   196,   197,
      -1,   199,    -1,   201,   202,   203,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,   214,    -1,   216,   217,
     218,   219,   220,    -1,    -1,   223,    -1,   225,    -1,    -1,
     228,   229,   230,    -1,    -1,   233,   234,   235,   236,   237,
      -1,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
      -1,   259,   260,   261,   262,   263,    -1,   265,   266,    -1,
     268,    -1,   270,   271,   272,   273,   274,   275,    -1,   277,
     278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,   287,
      -1,   289,    -1,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,    -1,   303,   304,   305,   306,   307,
     308,   309,   310,   311,    -1,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,    -1,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,    -1,   360,   361,   362,   363,   364,    -1,   366,   367,
     368,   369,   370,    -1,   372,   373,   374,   375,    -1,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,    -1,   392,   393,    -1,   395,    -1,   397,
     398,   399,   400,   401,    -1,   403,   404,    -1,    -1,   407,
     408,   409,   410,   411,    -1,   413,   414,   415,   416,   417,
     418,   419,    -1,    -1,   422,   423,   424,   425,   426,    -1,
      -1,   429,   430,   431,   432,   433,   434,   435,    -1,   437,
      -1,   439,   440,   441,   442,    -1,    -1,   445,    -1,    -1,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,     3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,
      22,    23,    24,    25,    26,    -1,    28,    29,    30,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,
      42,    43,    -1,    45,    46,    47,    48,    49,    -1,    51,
      52,    -1,    54,    55,    56,    57,    58,    59,    -1,    -1,
      62,    63,    64,    65,    66,    -1,    68,    69,    70,    71,
      72,    -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,
      82,    83,    84,    -1,    86,    87,    88,    89,    90,    91,
      -1,    -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,    -1,   115,    -1,   117,   118,   119,   120,   121,
     122,    -1,   124,   125,   126,   127,   128,    -1,    -1,   131,
     132,   133,   134,   135,    -1,   137,   138,   139,    -1,   141,
     142,   143,    -1,   145,   146,   147,   148,   149,   150,   151,
     152,   153,   154,    -1,   156,    -1,   158,   159,   160,   161,
      -1,   163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,
      -1,   173,    -1,   175,    -1,   177,   178,    -1,   180,   181,
     182,   183,   184,   185,    -1,   187,   188,   189,   190,    -1,
     192,   193,   194,   195,   196,   197,    -1,   199,    -1,   201,
     202,   203,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,   214,    -1,   216,   217,   218,   219,   220,    -1,
      -1,   223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,
      -1,   233,   234,   235,   236,   237,    -1,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,    -1,   259,   260,   261,
     262,   263,    -1,   265,   266,    -1,   268,    -1,   270,   271,
     272,   273,   274,   275,    -1,   277,   278,    -1,    -1,   281,
     282,   283,    -1,    -1,   286,   287,    -1,   289,    -1,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
      -1,   303,   304,   305,   306,   307,   308,   309,   310,   311,
      -1,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,    -1,   341,
     342,    -1,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,    -1,   360,   361,
     362,   363,   364,    -1,   366,   367,   368,   369,   370,    -1,
     372,   373,   374,   375,    -1,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,    -1,
     392,   393,    -1,   395,    -1,   397,   398,   399,   400,   401,
      -1,   403,   404,    -1,    -1,   407,   408,   409,   410,   411,
      -1,   413,   414,   415,   416,   417,   418,   419,    -1,    -1,
     422,   423,   424,   425,   426,    -1,    -1,   429,   430,   431,
     432,   433,   434,   435,    -1,   437,    -1,   439,   440,   441,
     442,    -1,    -1,   445,    -1,    -1,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,     3,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    21,    22,    23,    24,    25,
      26,    -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    38,    39,    -1,    41,    42,    43,    -1,    45,
      46,    47,    48,    49,    -1,    51,    52,    -1,    54,    55,
      56,    57,    58,    59,    -1,    -1,    62,    63,    64,    65,
      66,    -1,    68,    69,    70,    71,    72,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    -1,    82,    83,    84,    -1,
      86,    87,    88,    89,    90,    91,    -1,    -1,    94,    95,
      96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,    -1,   115,
      -1,   117,   118,   119,   120,   121,   122,    -1,   124,   125,
     126,   127,   128,    -1,    -1,   131,   132,   133,   134,   135,
      -1,   137,   138,   139,    -1,   141,   142,   143,    -1,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,    -1,
     156,    -1,   158,   159,   160,   161,    -1,   163,    -1,   165,
      -1,    -1,    -1,   169,   170,   171,    -1,   173,    -1,   175,
      -1,   177,   178,    -1,   180,   181,   182,   183,   184,   185,
      -1,   187,   188,   189,   190,    -1,   192,   193,   194,   195,
     196,   197,    -1,   199,    -1,   201,   202,   203,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,   214,    -1,
     216,   217,   218,   219,   220,    -1,    -1,   223,    -1,   225,
      -1,    -1,   228,   229,   230,    -1,    -1,   233,   234,   235,
     236,   237,    -1,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,    -1,   259,   260,   261,   262,   263,    -1,   265,
     266,    -1,   268,    -1,   270,   271,   272,   273,   274,   275,
      -1,   277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,
     286,   287,    -1,   289,    -1,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,    -1,   303,   304,   305,
     306,   307,   308,   309,   310,   311,    -1,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,    -1,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,    -1,   360,   361,   362,   363,   364,    -1,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,    -1,   392,   393,    -1,   395,
      -1,   397,   398,   399,   400,   401,    -1,   403,   404,    -1,
      -1,   407,   408,   409,   410,   411,    -1,   413,   414,   415,
     416,   417,   418,   419,    -1,    -1,   422,   423,   424,   425,
     426,    -1,    -1,   429,   430,   431,   432,   433,   434,   435,
      -1,   437,    -1,   439,   440,   441,   442,    -1,    -1,   445,
      -1,    -1,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,     3,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    21,    22,    23,    24,    25,    26,    -1,    28,    29,
      30,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    38,    39,
      -1,    41,    42,    43,    -1,    45,    46,    47,    48,    49,
      -1,    51,    52,    -1,    54,    55,    56,    57,    58,    59,
      -1,    -1,    62,    63,    64,    65,    66,    -1,    68,    69,
      70,    71,    72,    -1,    -1,    -1,    76,    77,    78,    79,
      80,    -1,    82,    83,    84,    -1,    86,    87,    88,    89,
      90,    91,    -1,    -1,    94,    95,    96,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,    -1,   115,    -1,   117,   118,   119,
     120,   121,   122,    -1,   124,   125,   126,   127,   128,    -1,
      -1,   131,   132,   133,   134,   135,    -1,   137,   138,   139,
      -1,   141,   142,   143,    -1,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,    -1,   156,    -1,   158,   159,
     160,   161,    -1,   163,    -1,   165,    -1,    -1,    -1,   169,
     170,   171,    -1,   173,    -1,   175,    -1,   177,   178,    -1,
     180,   181,   182,   183,   184,   185,    -1,   187,   188,   189,
     190,    -1,   192,   193,   194,   195,   196,   197,    -1,   199,
      -1,   201,   202,   203,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,   214,    -1,   216,   217,   218,   219,
     220,    -1,    -1,   223,    -1,   225,    -1,    -1,   228,   229,
     230,    -1,    -1,   233,   234,   235,   236,   237,    -1,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,    -1,   259,
     260,   261,   262,   263,    -1,   265,   266,    -1,   268,    -1,
     270,   271,   272,   273,   274,   275,    -1,   277,   278,    -1,
      -1,   281,   282,   283,    -1,    -1,   286,   287,    -1,   289,
      -1,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,    -1,   303,   304,   305,   306,   307,   308,   309,
     310,   311,    -1,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
      -1,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,    -1,
     360,   361,   362,   363,   364,    -1,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,   375,    -1,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,    -1,   392,   393,    -1,   395,    -1,   397,   398,   399,
     400,   401,    -1,   403,   404,    -1,    -1,   407,   408,   409,
     410,   411,    -1,   413,   414,   415,   416,   417,   418,   419,
      -1,    -1,   422,   423,   424,   425,   426,    -1,    -1,   429,
     430,   431,   432,   433,   434,   435,    -1,   437,    -1,   439,
     440,   441,   442,    -1,    -1,   445,    -1,    -1,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,     3,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    22,    23,
      24,    25,    26,    -1,    28,    29,    30,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,    43,
      44,    45,    46,    47,    -1,    49,    50,    51,    52,    -1,
      54,    55,    56,    57,    58,    59,    -1,    -1,    62,    63,
      64,    65,    66,    -1,    68,    69,    70,    71,    -1,    -1,
      74,    -1,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    -1,    86,    87,    88,    89,    90,    91,    -1,    93,
      94,    95,    96,    -1,    -1,    -1,   100,    -1,    -1,    -1,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
      -1,   115,    -1,   117,   118,   119,   120,   121,   122,    -1,
     124,   125,   126,   127,   128,    -1,    -1,   131,   132,   133,
     134,   135,    -1,   137,   138,   139,    -1,   141,   142,   143,
      -1,   145,   146,   147,   148,    -1,   150,   151,   152,   153,
      -1,    -1,   156,    -1,   158,   159,   160,   161,    -1,   163,
      -1,   165,   166,    -1,   168,   169,   170,   171,   172,   173,
      -1,   175,    -1,    -1,   178,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,   190,    -1,   192,   193,
     194,   195,   196,   197,    -1,   199,   200,    -1,   202,   203,
     204,   205,   206,   207,    -1,   209,    -1,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,    -1,    -1,   223,
     224,   225,   226,    -1,   228,   229,   230,    -1,    -1,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,    -1,
      -1,   265,   266,   267,   268,    -1,    -1,   271,   272,   273,
     274,   275,    -1,   277,   278,    -1,    -1,   281,   282,   283,
      -1,    -1,   286,    -1,   288,   289,   290,    -1,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,    -1,   303,
     304,    -1,   306,   307,    -1,   309,   310,   311,    -1,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,    -1,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,    -1,   360,   361,   362,   363,
     364,    -1,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,    -1,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,    -1,    -1,   392,   393,
      -1,   395,   396,   397,   398,   399,   400,   401,    -1,   403,
     404,    -1,    -1,   407,   408,    -1,   410,    -1,    -1,   413,
     414,   415,   416,   417,   418,   419,    -1,    -1,   422,   423,
     424,   425,   426,    -1,    -1,   429,   430,   431,   432,   433,
      -1,   435,    -1,   437,   438,   439,   440,   441,   442,    -1,
      -1,   445,    -1,    -1,   448,   449,   450,   451,   452,   453,
       3,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   465,   466,   467,   468,    -1,    19,    20,    21,    22,
      23,    24,    25,    26,    -1,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    38,    39,    -1,    41,    42,
      43,    -1,    45,    46,    47,    48,    49,    -1,    51,    52,
      -1,    54,    55,    56,    57,    58,    59,    -1,    -1,    62,
      63,    64,    65,    66,    -1,    68,    69,    70,    71,    72,
      -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,    82,
      83,    84,    -1,    86,    87,    88,    89,    90,    91,    -1,
      -1,    94,    95,    96,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,    -1,   115,    -1,   117,   118,   119,   120,   121,   122,
      -1,   124,   125,   126,   127,   128,    -1,    -1,   131,   132,
     133,   134,   135,    -1,   137,   138,   139,    -1,   141,   142,
     143,    -1,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,    -1,   156,    -1,   158,   159,   160,   161,    -1,
     163,    -1,   165,    -1,    -1,    -1,   169,   170,   171,    -1,
     173,    -1,   175,    -1,   177,   178,    -1,   180,   181,   182,
     183,   184,   185,    -1,   187,   188,   189,   190,    -1,   192,
     193,   194,   195,   196,   197,    -1,   199,    -1,   201,   202,
     203,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,   214,    -1,   216,   217,   218,   219,   220,    -1,    -1,
     223,    -1,   225,    -1,    -1,   228,   229,   230,    -1,    -1,
     233,   234,   235,   236,   237,    -1,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,    -1,   259,   260,   261,   262,
     263,    -1,   265,   266,    -1,   268,    -1,   270,   271,   272,
     273,   274,   275,    -1,   277,   278,    -1,    -1,   281,   282,
     283,    -1,    -1,   286,   287,    -1,   289,    -1,   291,   292,
     293,   294,   295,   296,   297,    -1,   299,   300,   301,    -1,
     303,   304,   305,   306,   307,   308,   309,   310,   311,    -1,
     313,   314,   315,   316,   317,   318,   319,    -1,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,    -1,   341,   342,
      -1,   344,   345,   346,   347,    -1,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,    -1,   360,   361,   362,
     363,   364,    -1,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,   375,    -1,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,    -1,   392,
     393,    -1,   395,    -1,   397,   398,   399,   400,   401,    -1,
     403,   404,    -1,    -1,   407,   408,   409,   410,   411,    -1,
     413,   414,   415,   416,   417,   418,   419,    -1,    -1,   422,
     423,   424,   425,   426,    -1,    -1,   429,   430,   431,   432,
     433,   434,   435,    -1,   437,    -1,   439,   440,   441,   442,
      -1,    -1,   445,    -1,    -1,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,     3,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    21,    22,    23,    24,    25,    26,
      -1,    28,    29,    30,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    38,    39,    -1,    41,    42,    43,    44,    45,    46,
      47,    -1,    49,    50,    51,    52,    -1,    54,    55,    56,
      57,    58,    59,    -1,    -1,    62,    63,    64,    65,    66,
      -1,    68,    69,    70,    71,    -1,    -1,    74,    -1,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    -1,    86,
      87,    88,    89,    90,    91,    -1,    93,    94,    95,    96,
      -1,    -1,    -1,   100,    -1,    -1,    -1,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,    -1,   115,    -1,
     117,   118,   119,   120,   121,   122,    -1,   124,   125,   126,
     127,   128,    -1,    -1,   131,   132,   133,   134,   135,    -1,
     137,   138,   139,    -1,   141,   142,   143,    -1,   145,   146,
     147,   148,    -1,   150,   151,   152,   153,    -1,    -1,   156,
      -1,   158,   159,   160,   161,    -1,   163,    -1,   165,   166,
      -1,   168,   169,   170,   171,   172,   173,    -1,   175,    -1,
      -1,   178,    -1,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   189,   190,    -1,   192,   193,   194,   195,   196,
     197,    -1,   199,   200,    -1,   202,   203,   204,   205,   206,
     207,    -1,   209,    -1,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,    -1,    -1,   223,   224,   225,   226,
      -1,   228,   229,   230,    -1,    -1,   233,   234,   235,   236,
     237,    -1,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,    -1,    -1,   265,   266,
     267,   268,    -1,    -1,   271,   272,   273,   274,   275,    -1,
     277,   278,    -1,    -1,   281,   282,   283,    -1,    -1,   286,
      -1,   288,   289,   290,    -1,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,    -1,   303,   304,    -1,   306,
     307,    -1,   309,   310,   311,    -1,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,    -1,   341,   342,   343,   344,   345,   346,
      -1,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,    -1,   360,   361,   362,   363,   364,    -1,   366,
      -1,   368,   369,   370,   371,   372,   373,   374,   375,    -1,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,    -1,   389,    -1,    -1,   392,   393,    -1,   395,   396,
     397,   398,   399,   400,   401,    -1,   403,   404,    -1,    -1,
     407,   408,    -1,   410,    -1,    -1,   413,   414,   415,   416,
     417,   418,   419,    -1,    -1,   422,   423,   424,   425,   426,
      -1,    -1,   429,   430,   431,   432,   433,    -1,   435,    -1,
     437,   438,   439,   440,   441,   442,    -1,    -1,   445,    -1,
      -1,   448,   449,   450,   451,   452,   453,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   465,   466,
     467,   468
};

/* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
   symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,    19,    29,    31,    32,    47,    56,    68,    79,    90,
      92,   110,   124,   134,   140,   148,   150,   151,   163,   190,
     229,   306,   309,   337,   345,   359,   366,   370,   380,   394,
     429,   434,   447,   471,   485,   493,   494,   495,   496,   507,
     508,   510,   514,   528,   529,   531,   533,   540,   542,   588,
     594,   597,   598,   615,   616,   617,   618,   619,   620,   664,
     791,   794,   797,   804,   805,   806,   807,   808,   815,   819,
     825,   827,   832,   836,   837,   840,   841,   843,   844,   846,
     407,   450,   541,   194,   352,   360,   394,   440,   541,     3,
      19,    20,    21,    22,    23,    24,    25,    26,    28,    29,
      30,    38,    39,    41,    42,    43,    44,    45,    46,    47,
      48,    49,    50,    51,    52,    54,    55,    56,    57,    58,
      59,    62,    63,    64,    65,    66,    68,    69,    70,    71,
      72,    74,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    86,    87,    88,    89,    90,    91,    93,    94,    95,
      96,   100,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   115,   117,   118,   119,   120,   121,   122,   124,
     125,   126,   127,   128,   131,   132,   133,   134,   135,   137,
     138,   139,   141,   142,   143,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   156,   158,   159,   160,   161,
     163,   165,   166,   168,   169,   170,   171,   172,   173,   175,
     177,   178,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   192,   193,   194,   195,   196,   197,   199,
     200,   201,   202,   203,   204,   205,   206,   207,   209,   211,
     212,   213,   214,   215,   216,   217,   218,   219,   220,   223,
     224,   225,   226,   228,   229,   230,   233,   234,   235,   236,
     237,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   265,   266,   267,   268,
     270,   271,   272,   273,   274,   275,   277,   278,   281,   282,
     283,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     360,   361,   362,   363,   364,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   392,
     393,   395,   396,   397,   398,   399,   400,   401,   403,   404,
     407,   408,   409,   410,   411,   413,   414,   415,   416,   417,
     418,   419,   422,   423,   424,   425,   426,   429,   430,   431,
     432,   433,   434,   435,   437,   438,   439,   440,   441,   442,
     445,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   720,   778,   782,   784,   849,   850,   851,   541,
      50,   485,   610,   169,   173,   230,   237,   284,   352,   398,
     400,   421,   424,   586,   595,   803,     3,    27,   309,   776,
     782,   849,    21,    74,    89,   143,   152,   164,   169,   194,
     237,   241,   304,   318,   349,   352,   360,   363,   382,   394,
     401,   410,   440,   589,   590,   593,   541,   776,    92,   438,
     485,   510,   597,   615,   811,   815,   832,   846,   107,    68,
     107,     5,   781,   826,   782,   776,    27,   403,   407,   782,
     838,   839,   842,   541,    27,   129,   627,   628,   230,   352,
     364,   403,   820,   821,   842,   541,   280,   675,   774,   782,
     168,   485,   829,   485,   325,   621,   622,   776,   621,   616,
     617,   620,     0,   488,   119,   204,   426,   144,   208,   285,
     420,   629,   630,   616,   618,   619,   489,   438,   809,    27,
     403,   407,   434,   615,   842,   185,   774,   776,   185,   774,
     185,   675,   185,   774,   485,   483,   487,   765,   767,   510,
     597,   615,   793,   832,   774,   398,   400,   398,   400,   335,
     185,   782,   325,   360,   394,   440,   774,   194,    27,   776,
     243,   410,   106,   394,   440,   355,   185,   591,   782,   785,
     185,   775,   776,   185,   776,   485,   532,   586,   811,     3,
     812,   814,   815,   817,   818,   849,   850,   851,   809,   781,
     781,   474,   485,   485,   792,   468,   214,   487,   279,     4,
       6,     7,     8,     9,    10,    49,    51,    52,    60,    61,
      64,    65,    72,    74,    97,    98,    99,   100,   101,   102,
     103,   111,   112,   114,   133,   149,   154,   155,   160,   206,
     207,   209,   231,   232,   257,   259,   264,   269,   270,   272,
     281,   291,   305,   322,   347,   365,   374,   390,   403,   404,
     409,   411,   412,   427,   435,   469,   476,   477,   478,   485,
     490,   616,   690,   693,   696,   697,   698,   700,   701,   702,
     703,   705,   706,   717,   719,   720,   721,   723,   736,   737,
     741,   759,   764,   771,   772,   778,   779,   780,   781,   782,
     770,   771,   820,   781,   820,   468,   167,   405,   474,   485,
     774,   478,   767,     3,   166,   168,   438,   815,   828,   830,
     166,   831,   717,   745,   621,   489,   485,   787,   486,   486,
     495,   167,   210,   675,   833,    27,   129,   626,   626,    54,
     626,   157,   162,   227,   276,   635,   637,   638,   657,   659,
     660,   661,   629,   630,   485,   774,   468,   214,   149,    23,
      29,   134,   283,   333,   337,   366,   431,   501,   504,   505,
     333,   149,    36,    55,   105,   193,   242,   250,   262,   293,
     333,   338,   360,   366,   380,   504,   534,   537,   149,   333,
     366,   504,   149,   333,   366,   504,    27,   129,   436,   478,
     486,   717,   746,   747,   784,   788,   717,   766,     3,    27,
      31,    32,    33,    34,    35,    36,    37,    40,    53,    60,
      61,    67,    73,    75,    85,    92,    97,    98,    99,   101,
     102,   103,   114,   116,   123,   129,   130,   136,   140,   144,
     155,   157,   162,   164,   167,   174,   176,   179,   191,   198,
     208,   210,   221,   222,   227,   231,   232,   238,   264,   269,
     276,   279,   280,   284,   285,   302,   312,   327,   340,   359,
     365,   376,   391,   394,   402,   405,   406,   412,   420,   421,
     427,   428,   436,   443,   444,   446,   447,   478,   777,   789,
     849,   850,   851,   852,   765,   486,   485,   576,   586,   264,
     795,   440,   185,   774,   185,   774,   848,   774,   485,   596,
      81,   800,   451,    82,   126,   296,   399,   149,    58,   339,
     489,   592,   487,   786,   149,   489,   592,   149,   279,   745,
     394,   486,   489,     4,   155,   279,   412,   476,   477,   536,
     539,   780,   781,   810,   812,   813,   816,   811,   485,   605,
     609,   536,   816,   822,   824,   746,     3,    49,    51,    52,
      64,    65,   111,   112,   160,   206,   207,   209,   238,   257,
     259,   272,   322,   347,   367,   374,   388,   403,   404,   435,
     686,   687,   689,   691,   693,   695,   697,   698,   699,   701,
     702,   705,   706,   748,   784,   849,    36,   225,   782,   485,
     768,   437,   704,   717,   763,   485,   704,   704,   485,   162,
     485,   485,   485,   692,   692,   308,   616,   485,   485,   694,
     485,   485,    64,    65,   704,   717,   485,   692,   485,   485,
     485,   485,   485,   449,   471,   485,   707,   485,   707,   485,
     485,   717,   717,   717,   616,   717,   745,   768,   767,   781,
     485,   485,   780,   781,     3,     8,    11,    16,    17,    18,
      33,    36,    41,    48,    73,   172,   186,   191,   212,   213,
     226,   264,   267,   281,   284,   371,   469,   472,   473,   474,
     476,   477,   478,   479,   480,   481,   739,   740,   741,   743,
     448,   724,    15,   290,   717,    15,   210,   489,   623,   485,
     781,   767,   623,     3,   114,   230,   536,   706,   781,   823,
      96,   114,   824,   114,   824,   774,   486,   489,   809,   486,
     489,   622,   775,    36,   833,   512,   774,    36,   782,   366,
     618,   618,   631,   632,   717,   618,   159,   261,   651,   216,
     262,   321,   369,   426,    27,   646,   717,   476,   477,   647,
     648,   717,   719,   657,   658,   638,   637,   635,   636,   162,
     660,   274,   662,   635,   657,   745,   787,   225,   774,    67,
      75,    85,   164,   185,   312,   421,   557,   567,   582,   782,
      75,    85,   509,    85,   509,   485,   405,   485,   555,   236,
     424,   555,    85,   489,   405,   774,   689,   536,    54,   538,
     536,   536,   105,   242,   250,    54,   405,   447,   471,   535,
     255,   352,   535,   537,   675,    85,   405,   509,   352,   774,
     405,   352,   746,   746,   747,   486,   489,   629,   630,    13,
      14,   484,   491,   405,   575,   580,   782,   447,   608,   325,
     440,   149,    92,   529,   542,   796,   797,   844,   774,   264,
     530,   534,   264,   485,   576,    36,   576,   486,   746,    36,
     185,   570,   782,   801,   591,   785,   777,   487,   775,   776,
     776,   785,   486,   185,   774,   848,   811,   817,     4,   780,
       4,   780,   607,   614,   789,    50,    94,   120,   138,   142,
     163,   166,   180,   269,   277,   319,   611,   489,   486,   489,
     485,   689,   485,    35,   688,   108,   109,   182,   183,   244,
     245,   246,   247,   248,   249,   252,   253,   356,   357,   465,
     466,   485,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   486,   489,   692,   786,   793,   745,   765,   485,   443,
     760,   761,   717,   745,   485,   780,   780,   745,     3,   708,
     709,   710,   711,   712,   713,   714,   715,   749,   750,   781,
     780,   780,   780,   704,   704,   717,     8,    16,    17,    18,
     472,   473,   474,   476,   477,   478,   479,   480,   481,   739,
     744,   782,   717,   751,   476,   477,   485,   718,   719,   741,
     753,   764,   486,   745,   717,   745,   754,   403,   403,   780,
     780,   717,    53,   167,   222,   406,   717,   745,   757,   486,
     489,   780,   717,   716,   716,   687,   717,   717,   717,   717,
       5,   789,   790,   403,    40,   391,   769,   785,   717,   717,
     485,   616,   758,   129,   155,   264,   269,   274,   412,   422,
     717,   269,   485,   717,   405,    48,   172,   186,   191,   226,
     371,   717,   717,   717,   717,   717,   717,   717,   717,   717,
     717,    27,    34,   376,   738,   176,   158,   725,   717,   347,
     485,   737,   717,   173,   230,   394,   398,   400,   424,   624,
     774,   772,   167,   665,   746,   665,   485,   781,   486,   774,
     828,   774,   836,   717,   486,   485,   428,   835,   114,   292,
     485,   511,   615,    36,   782,   485,   516,   525,   527,   782,
     489,    37,   123,   428,   633,   347,   348,   476,   477,   648,
     650,   719,   369,   216,   280,   489,     4,   649,   780,   649,
     347,   348,   650,   773,   774,   268,   373,   663,   658,   636,
     486,   333,   504,   485,   185,   567,   776,   216,   264,   216,
     428,   485,   560,   687,   776,   782,   185,   776,   185,   782,
      23,   134,   366,   500,   503,   550,   565,   789,   776,   559,
     579,   789,   776,   501,   776,   333,   366,   504,   534,   536,
     785,   776,   536,   785,   776,   536,   333,   366,   504,   776,
     776,   776,   776,   333,   366,   504,   776,   776,   629,   629,
     629,   436,   747,   486,   717,   717,   717,   766,   317,   604,
     486,   489,   277,   167,   405,   599,   440,   774,   782,   586,
     485,   149,   149,   226,   557,   567,   571,   574,   583,   585,
     782,   447,   449,   562,   148,   615,   447,   802,   486,   717,
     264,   279,   592,   777,   592,   279,   592,   264,    36,   486,
     489,   478,   485,   536,   606,   816,    36,   603,   781,   603,
     264,   269,   319,   603,   603,   822,   748,    35,   688,   685,
     782,   483,   483,   780,   405,   405,   405,   405,   687,   692,
     486,   745,   717,   136,   761,   762,    36,   486,   717,   486,
     486,   486,   486,   167,   486,   486,   486,   489,   486,   487,
     302,   752,   486,   718,   718,   717,    11,    16,    17,    18,
     191,   212,   281,   472,   473,   474,   476,   477,   478,   479,
     480,   481,   741,   718,   486,   486,   162,   167,   755,   756,
     486,   468,   468,   486,   486,    36,   757,   745,   757,   757,
     167,   486,   768,   717,   486,   486,   468,   718,   718,   142,
     745,   167,   129,   155,   269,   274,   412,   422,   485,   142,
     744,   717,   391,   769,   717,   758,   717,   405,   485,   616,
     485,   485,   289,   729,   398,   400,   398,   400,   774,   394,
     625,   625,   625,   221,   348,   485,   616,   666,   667,   668,
     675,   676,   720,   722,   723,   782,   444,   681,   629,   681,
     780,   716,   787,   793,   666,   444,   834,   434,   393,   427,
     520,   515,   524,   782,   279,   517,   782,   521,   527,   489,
     665,   474,   768,   632,   281,   739,   742,   470,   634,     4,
     780,   650,   280,   426,   647,   489,   235,   405,   717,   264,
     582,   485,   149,   485,   560,   194,   580,   543,   283,   553,
     543,    23,   134,   337,   338,   366,   497,   498,   499,   505,
     506,   149,   592,   149,   592,   550,   565,   550,   486,   489,
     546,   781,   486,   489,   474,   487,   405,   352,    85,   405,
     509,   352,   405,   405,   405,   352,   486,   486,   486,   747,
     484,   383,   384,   613,   781,   575,   604,   774,   576,   795,
     394,   580,   774,   774,   848,   774,   486,   489,   277,   555,
     277,   279,   554,   776,   447,   847,   555,    36,   149,   774,
     785,   149,   607,   601,   612,   816,   781,   781,   269,   580,
     478,   580,   781,   781,   486,   483,   486,   489,   687,   780,
     484,   780,   486,   709,   711,   712,   713,   712,   713,   713,
     486,   402,   717,   140,   687,   486,   717,   717,   744,   717,
     755,   687,   718,   718,   718,   718,   129,   264,   274,   718,
     718,   718,   718,   718,   718,   718,   718,   718,   718,   717,
     717,   756,   755,   707,   707,   687,   486,   486,   486,   745,
     486,   716,   717,    33,    33,   717,   486,   717,   167,   485,
     748,   717,   486,   142,   718,   718,   142,   142,   717,   717,
     630,   444,   485,   730,   782,   625,   625,   625,   625,   774,
     774,   774,   616,   676,   167,   616,   667,   668,    36,   669,
     670,   782,   489,    93,   168,   200,   215,   224,   258,   343,
     672,   670,    36,   669,   671,   782,   471,   680,   767,   717,
     176,   652,   486,   652,   486,   486,   717,   340,   519,   433,
     486,   489,   768,    83,   519,   486,   489,   516,   834,   717,
     485,   634,   159,   220,   280,   774,   776,   486,   149,   580,
     567,   580,   543,   570,   486,   116,   198,   262,   264,   566,
     485,   577,   171,   114,   184,   264,   555,   535,   106,   114,
     171,   264,   382,   385,   537,   555,   366,   499,   415,   776,
     782,   503,   579,   238,   263,   281,   367,   476,   477,   536,
     544,   581,   687,   742,   781,   784,   852,   789,   776,   776,
     776,   776,   776,   776,   776,   776,   776,   776,   629,   535,
     613,   485,   802,   185,   774,   486,   530,   485,    36,   564,
     562,   571,    79,   532,   106,   262,   615,   570,   428,   799,
     592,   848,   486,   489,   580,   780,   782,   484,   484,   717,
     486,   486,   756,   167,   129,   274,   485,   486,   717,   717,
     717,   748,   486,   717,    33,    33,   717,   717,   142,   486,
     486,   717,   731,   782,   774,   774,   774,   774,   670,   671,
     485,   486,     5,   782,   783,   396,   643,   644,   485,   667,
     215,   288,   673,   667,   673,   215,   672,   673,   215,   644,
     485,   782,   644,   485,   286,    54,   179,   656,   781,   656,
     781,   771,   615,   292,   615,   515,   279,   485,   513,   474,
     527,   519,   744,   543,   567,   486,   486,   447,   573,   117,
     187,   196,   116,   430,   550,   568,    67,    73,    85,   114,
     116,   171,   198,   264,   269,   312,   327,   421,   548,   549,
     561,    30,    54,   587,   185,   269,   536,   717,   587,   269,
     476,   477,   539,   782,   687,   592,   592,   784,   786,   474,
     405,   405,   486,   605,   428,   600,   602,   580,    36,   264,
     485,   802,   574,   148,   615,   146,   192,   554,   119,   134,
     311,   847,   106,   447,   845,   279,   782,   798,   485,    36,
     612,   484,   687,   718,   167,   485,   748,   486,   717,   717,
     717,   486,   298,   732,   677,   678,   722,   669,   485,     4,
       9,   639,   641,   642,   782,   775,   667,   279,   428,   674,
     667,   215,   667,   682,   683,   782,   485,   682,   782,   485,
     653,   654,   655,   717,   717,   446,   726,   726,   520,    85,
     485,   518,   526,   722,   782,   130,   717,   486,   327,   573,
     485,   563,   543,   486,   489,   485,   785,   776,   718,   587,
     117,   187,   116,   269,   216,   774,   573,   114,    36,   149,
      73,   684,   786,   480,   544,   776,   776,   535,   121,   486,
     615,   149,    36,   486,   776,   847,    27,    78,    86,   115,
     184,   195,   382,   385,   558,   558,   348,   348,    59,    67,
     230,   774,   526,   718,   748,   486,    54,   629,   486,   489,
      36,   679,   775,   301,   480,   301,   348,   480,   485,   485,
     486,   717,   485,   667,   674,   486,   489,   687,   682,   486,
     486,   489,   727,   728,   782,   428,   640,   640,   433,   776,
     717,   486,   489,    73,   522,   522,   265,   426,   774,   543,
     569,   572,   789,   550,   717,   264,   549,    36,   573,   576,
     184,   785,   428,   502,   480,   415,   605,   781,   802,   845,
     774,   615,   562,   532,    67,   282,    67,   799,   486,   486,
     745,   320,   348,   733,   680,   677,   485,   486,   782,   639,
     775,   683,   684,   486,   654,   489,    36,   350,   615,   486,
     681,   518,   785,   523,   785,   523,   366,   576,   486,   489,
     474,   486,   184,   240,   584,   485,   545,   717,   415,    36,
     485,   845,   554,   847,   282,   282,   485,   802,    48,    96,
     417,   717,   734,   735,   734,   486,   682,   486,   489,   486,
     486,   728,   730,   642,   522,   633,   633,   525,   584,   572,
     544,   262,   556,   545,   168,   297,   372,   279,   551,   552,
     578,   534,   615,   526,   681,   735,   347,   161,   307,   161,
     307,   486,     9,   334,   645,   523,   634,   634,   681,   552,
     196,   119,   426,   279,   578,   279,   551,   486,   845,   486,
      33,   486,   485,   633,   543,    58,   262,   339,   366,   547,
     547,   802,   735,     9,   634,    22,   114,   269,   681,   486
};

#define yyerrok		(yyerrstatus = 0)
#define yyclearin	(yychar = YYEMPTY)
#define YYEMPTY		(-2)
#define YYEOF		0

#define YYACCEPT	goto yyacceptlab
#define YYABORT		goto yyabortlab
#define YYERROR		goto yyerrorlab


/* Like YYERROR except do call yyerror.  This remains here temporarily
   to ease the transition to the new meaning of YYERROR, for GCC.
   Once GCC version 2 has supplanted version 1, this can go.  */

#define YYFAIL		goto yyerrlab

#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)					\
do								\
  if (yychar == YYEMPTY && yylen == 1)				\
    {								\
      yychar = (Token);						\
      yylval = (Value);						\
      yytoken = YYTRANSLATE (yychar);				\
      YYPOPSTACK (1);						\
      goto yybackup;						\
    }								\
  else								\
    {								\
      yyerror (&yylloc, yyscanner, YY_("syntax error: cannot back up")); \
      YYERROR;							\
    }								\
while (YYID (0))


#define YYTERROR	1
#define YYERRCODE	256


/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#define YYRHSLOC(Rhs, K) ((Rhs)[K])
#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)				\
    do									\
      if (YYID (N))                                                    \
	{								\
	  (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;	\
	  (Current).first_column = YYRHSLOC (Rhs, 1).first_column;	\
	  (Current).last_line    = YYRHSLOC (Rhs, N).last_line;		\
	  (Current).last_column  = YYRHSLOC (Rhs, N).last_column;	\
	}								\
      else								\
	{								\
	  (Current).first_line   = (Current).last_line   =		\
	    YYRHSLOC (Rhs, 0).last_line;				\
	  (Current).first_column = (Current).last_column =		\
	    YYRHSLOC (Rhs, 0).last_column;				\
	}								\
    while (YYID (0))
#endif


/* YY_LOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

#ifndef YY_LOCATION_PRINT
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
#  define YY_LOCATION_PRINT(File, Loc)			\
     fprintf (File, "%d.%d-%d.%d",			\
	      (Loc).first_line, (Loc).first_column,	\
	      (Loc).last_line,  (Loc).last_column)
# else
#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
# endif
#endif


/* YYLEX -- calling `yylex' with the right arguments.  */

#ifdef YYLEX_PARAM
# define YYLEX yylex (&yylval, &yylloc, YYLEX_PARAM)
#else
# define YYLEX yylex (&yylval, &yylloc, yyscanner)
#endif

/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)			\
do {						\
  if (yydebug)					\
    YYFPRINTF Args;				\
} while (YYID (0))

# define YY_SYMBOL_PRINT(Title, Type, Value, Location)			  \
do {									  \
  if (yydebug)								  \
    {									  \
      YYFPRINTF (stderr, "%s ", Title);					  \
      yy_symbol_print (stderr,						  \
		  Type, Value, Location, yyscanner); \
      YYFPRINTF (stderr, "\n");						  \
    }									  \
} while (YYID (0))


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
#else
static void
yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  if (!yyvaluep)
    return;
  YYUSE (yylocationp);
  YYUSE (yyscanner);
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# else
  YYUSE (yyoutput);
# endif
  switch (yytype)
    {
      default:
	break;
    }
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, core_yyscan_t yyscanner)
#else
static void
yy_symbol_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  if (yytype < YYNTOKENS)
    YYFPRINTF (yyoutput, "token %s (", yytname[yytype]);
  else
    YYFPRINTF (yyoutput, "nterm %s (", yytname[yytype]);

  YY_LOCATION_PRINT (yyoutput, *yylocationp);
  YYFPRINTF (yyoutput, ": ");
  yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, yyscanner);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_stack_print (yytype_int16 *bottom, yytype_int16 *top)
#else
static void
yy_stack_print (bottom, top)
    yytype_int16 *bottom;
    yytype_int16 *top;
#endif
{
  YYFPRINTF (stderr, "Stack now");
  for (; bottom <= top; ++bottom)
    YYFPRINTF (stderr, " %d", *bottom);
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)				\
do {								\
  if (yydebug)							\
    yy_stack_print ((Bottom), (Top));				\
} while (YYID (0))


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_reduce_print (YYSTYPE *yyvsp, YYLTYPE *yylsp, int yyrule, core_yyscan_t yyscanner)
#else
static void
yy_reduce_print (yyvsp, yylsp, yyrule, yyscanner)
    YYSTYPE *yyvsp;
    YYLTYPE *yylsp;
    int yyrule;
    core_yyscan_t yyscanner;
#endif
{
  int yynrhs = yyr2[yyrule];
  int yyi;
  unsigned long int yylno = yyrline[yyrule];
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
	     yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      fprintf (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
		       &(yyvsp[(yyi + 1) - (yynrhs)])
		       , &(yylsp[(yyi + 1) - (yynrhs)])		       , yyscanner);
      fprintf (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)		\
do {					\
  if (yydebug)				\
    yy_reduce_print (yyvsp, yylsp, Rule, yyscanner); \
} while (YYID (0))

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef	YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif



#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static YYSIZE_T
yystrlen (const char *yystr)
#else
static YYSIZE_T
yystrlen (yystr)
    const char *yystr;
#endif
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static char *
yystpcpy (char *yydest, const char *yysrc)
#else
static char *
yystpcpy (yydest, yysrc)
    char *yydest;
    const char *yysrc;
#endif
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
	switch (*++yyp)
	  {
	  case '\'':
	  case ',':
	    goto do_not_strip_quotes;

	  case '\\':
	    if (*++yyp != '\\')
	      goto do_not_strip_quotes;
	    /* Fall through.  */
	  default:
	    if (yyres)
	      yyres[yyn] = *yyp;
	    yyn++;
	    break;

	  case '"':
	    if (yyres)
	      yyres[yyn] = '\0';
	    return yyn;
	  }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into YYRESULT an error message about the unexpected token
   YYCHAR while in state YYSTATE.  Return the number of bytes copied,
   including the terminating null byte.  If YYRESULT is null, do not
   copy anything; just return the number of bytes that would be
   copied.  As a special case, return 0 if an ordinary "syntax error"
   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
   size calculation.  */
static YYSIZE_T
yysyntax_error (char *yyresult, int yystate, int yychar)
{
  int yyn = yypact[yystate];

  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
    return 0;
  else
    {
      int yytype = YYTRANSLATE (yychar);
      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
      YYSIZE_T yysize = yysize0;
      YYSIZE_T yysize1;
      int yysize_overflow = 0;
      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
      int yyx;

# if 0
      /* This is so xgettext sees the translatable formats that are
	 constructed on the fly.  */
      YY_("syntax error, unexpected %s");
      YY_("syntax error, unexpected %s, expecting %s");
      YY_("syntax error, unexpected %s, expecting %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
# endif
      char *yyfmt;
      char const *yyf;
      static char const yyunexpected[] = "syntax error, unexpected %s";
      static char const yyexpecting[] = ", expecting %s";
      static char const yyor[] = " or %s";
      char yyformat[sizeof yyunexpected
		    + sizeof yyexpecting - 1
		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
		       * (sizeof yyor - 1))];
      char const *yyprefix = yyexpecting;

      /* Start YYX at -YYN if negative to avoid negative indexes in
	 YYCHECK.  */
      int yyxbegin = yyn < 0 ? -yyn : 0;

      /* Stay within bounds of both yycheck and yytname.  */
      int yychecklim = YYLAST - yyn + 1;
      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
      int yycount = 1;

      yyarg[0] = yytname[yytype];
      yyfmt = yystpcpy (yyformat, yyunexpected);

      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
	  {
	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
	      {
		yycount = 1;
		yysize = yysize0;
		yyformat[sizeof yyunexpected - 1] = '\0';
		break;
	      }
	    yyarg[yycount++] = yytname[yyx];
	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
	    yysize_overflow |= (yysize1 < yysize);
	    yysize = yysize1;
	    yyfmt = yystpcpy (yyfmt, yyprefix);
	    yyprefix = yyor;
	  }

      yyf = YY_(yyformat);
      yysize1 = yysize + yystrlen (yyf);
      yysize_overflow |= (yysize1 < yysize);
      yysize = yysize1;

      if (yysize_overflow)
	return YYSIZE_MAXIMUM;

      if (yyresult)
	{
	  /* Avoid sprintf, as that infringes on the user's name space.
	     Don't have undefined behavior even if the translation
	     produced a string with the wrong number of "%s"s.  */
	  char *yyp = yyresult;
	  int yyi = 0;
	  while ((*yyp = *yyf) != '\0')
	    {
	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
		{
		  yyp += yytnamerr (yyp, yyarg[yyi++]);
		  yyf += 2;
		}
	      else
		{
		  yyp++;
		  yyf++;
		}
	    }
	}
      return yysize;
    }
}
#endif /* YYERROR_VERBOSE */


/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, YYLTYPE *yylocationp, core_yyscan_t yyscanner)
#else
static void
yydestruct (yymsg, yytype, yyvaluep, yylocationp, yyscanner)
    const char *yymsg;
    int yytype;
    YYSTYPE *yyvaluep;
    YYLTYPE *yylocationp;
    core_yyscan_t yyscanner;
#endif
{
  YYUSE (yyvaluep);
  YYUSE (yylocationp);
  YYUSE (yyscanner);

  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  switch (yytype)
    {

      default:
	break;
    }
}


/* Prevent warnings from -Wmissing-prototypes.  */

#ifdef YYPARSE_PARAM
#if defined __STDC__ || defined __cplusplus
int yyparse (void *YYPARSE_PARAM);
#else
int yyparse ();
#endif
#else /* ! YYPARSE_PARAM */
#if defined __STDC__ || defined __cplusplus
int yyparse (core_yyscan_t yyscanner);
#else
int yyparse ();
#endif
#endif /* ! YYPARSE_PARAM */






/*----------.
| yyparse.  |
`----------*/

#ifdef YYPARSE_PARAM
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (void *YYPARSE_PARAM)
#else
int
yyparse (YYPARSE_PARAM)
    void *YYPARSE_PARAM;
#endif
#else /* ! YYPARSE_PARAM */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (core_yyscan_t yyscanner)
#else
int
yyparse (yyscanner)
    core_yyscan_t yyscanner;
#endif
#endif
{
  /* The look-ahead symbol.  */
int yychar;

/* The semantic value of the look-ahead symbol.  */
YYSTYPE yylval;

/* Number of syntax errors so far.  */
int yynerrs;
/* Location data for the look-ahead symbol.  */
YYLTYPE yylloc;

  int yystate;
  int yyn;
  int yyresult;
  /* Number of tokens to shift before error messages enabled.  */
  int yyerrstatus;
  /* Look-ahead token as an internal (translated) token number.  */
  int yytoken = 0;
#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

  /* Three stacks and their tools:
     `yyss': related to states,
     `yyvs': related to semantic values,
     `yyls': related to locations.

     Refer to the stacks thru separate pointers, to allow yyoverflow
     to reallocate them elsewhere.  */

  /* The state stack.  */
  yytype_int16 yyssa[YYINITDEPTH];
  yytype_int16 *yyss = yyssa;
  yytype_int16 *yyssp;

  /* The semantic value stack.  */
  YYSTYPE yyvsa[YYINITDEPTH];
  YYSTYPE *yyvs = yyvsa;
  YYSTYPE *yyvsp;

  /* The location stack.  */
  YYLTYPE yylsa[YYINITDEPTH];
  YYLTYPE *yyls = yylsa;
  YYLTYPE *yylsp;
  /* The locations where the error started and ended.  */
  YYLTYPE yyerror_range[2];

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))

  YYSIZE_T yystacksize = YYINITDEPTH;

  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;
  YYLTYPE yyloc;

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY;		/* Cause a token to be read.  */

  /* Initialize stack pointers.
     Waste one element of value and location stack
     so that they stay on the same level as the state stack.
     The wasted elements are never initialized.  */

  yyssp = yyss;
  yyvsp = yyvs;
  yylsp = yyls;
#if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
  /* Initialize the default location before parsing starts.  */
  yylloc.first_line   = yylloc.last_line   = 1;
  yylloc.first_column = yylloc.last_column = 0;
#endif

  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
	/* Give user a chance to reallocate the stack.  Use copies of
	   these so that the &'s don't force the real ones into
	   memory.  */
	YYSTYPE *yyvs1 = yyvs;
	yytype_int16 *yyss1 = yyss;
	YYLTYPE *yyls1 = yyls;

	/* Each stack pointer address is followed by the size of the
	   data in use in that stack, in bytes.  This used to be a
	   conditional around just the two extra args, but that might
	   be undefined if yyoverflow is a macro.  */
	yyoverflow (YY_("memory exhausted"),
		    &yyss1, yysize * sizeof (*yyssp),
		    &yyvs1, yysize * sizeof (*yyvsp),
		    &yyls1, yysize * sizeof (*yylsp),
		    &yystacksize);
	yyls = yyls1;
	yyss = yyss1;
	yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
	goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
	yystacksize = YYMAXDEPTH;

      {
	yytype_int16 *yyss1 = yyss;
	union yyalloc *yyptr =
	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
	if (! yyptr)
	  goto yyexhaustedlab;
	YYSTACK_RELOCATE (yyss);
	YYSTACK_RELOCATE (yyvs);
	YYSTACK_RELOCATE (yyls);
#  undef YYSTACK_RELOCATE
	if (yyss1 != yyssa)
	  YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;
      yylsp = yyls + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
		  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
	YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     look-ahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to look-ahead token.  */
  yyn = yypact[yystate];
  if (yyn == YYPACT_NINF)
    goto yydefault;

  /* Not known => get a look-ahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid look-ahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = YYLEX;
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yyn == 0 || yyn == YYTABLE_NINF)
	goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the look-ahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token unless it is eof.  */
  if (yychar != YYEOF)
    yychar = YYEMPTY;

  yystate = yyn;
  *++yyvsp = yylval;
  *++yylsp = yylloc;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     `$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];

  /* Default location.  */
  YYLLOC_DEFAULT (yyloc, (yylsp - yylen), yylen);
  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 2:
#line 457 "third_party/libpg_query/grammar/grammar.y"
    {
				pg_yyget_extra(yyscanner)->parsetree = (yyvsp[(1) - (1)].list);
			;}
    break;

  case 3:
#line 473 "third_party/libpg_query/grammar/grammar.y"
    {
					if ((yyvsp[(1) - (3)].list) != NIL)
					{
						/* update length of previous stmt */
						updateRawStmtEnd(llast_node(PGRawStmt, (yyvsp[(1) - (3)].list)), (yylsp[(2) - (3)]));
					}
					if ((yyvsp[(3) - (3)].node) != NULL)
						(yyval.list) = lappend((yyvsp[(1) - (3)].list), makeRawStmt((yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]) + 1));
					else
						(yyval.list) = (yyvsp[(1) - (3)].list);
				;}
    break;

  case 4:
#line 485 "third_party/libpg_query/grammar/grammar.y"
    {
					if ((yyvsp[(1) - (1)].node) != NULL)
						(yyval.list) = list_make1(makeRawStmt((yyvsp[(1) - (1)].node), 0));
					else
						(yyval.list) = NIL;
				;}
    break;

  case 38:
#line 527 "third_party/libpg_query/grammar/grammar.y"
    { (yyval.node) = NULL; ;}
    break;

  case 39:
#line 10 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_TABLE;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 40:
#line 19 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_TABLE;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 41:
#line 28 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_INDEX;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 42:
#line 37 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_INDEX;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 43:
#line 46 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_SEQUENCE;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 44:
#line 55 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_SEQUENCE;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 45:
#line 64 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(3) - (4)].range);
					n->cmds = (yyvsp[(4) - (4)].list);
					n->relkind = PG_OBJECT_VIEW;
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 46:
#line 73 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableStmt *n = makeNode(PGAlterTableStmt);
					n->relation = (yyvsp[(5) - (6)].range);
					n->cmds = (yyvsp[(6) - (6)].list);
					n->relkind = PG_OBJECT_VIEW;
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 47:
#line 86 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 48:
#line 88 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 49:
#line 93 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = (yyvsp[(3) - (3)].node); ;}
    break;

  case 50:
#line 94 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = NULL; ;}
    break;

  case 51:
#line 100 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 52:
#line 104 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 53:
#line 108 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					if (strcmp((yyvsp[(2) - (2)].defelt)->defname, "as") == 0 ||
						strcmp((yyvsp[(2) - (2)].defelt)->defname, "restart") == 0 ||
						strcmp((yyvsp[(2) - (2)].defelt)->defname, "owned_by") == 0)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("sequence option \"%s\" not supported here", (yyvsp[(2) - (2)].defelt)->defname),
								 parser_errposition((yylsp[(2) - (2)]))));
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
				;}
    break;

  case 54:
#line 119 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElem("generated", (PGNode *) makeInteger((yyvsp[(3) - (3)].ival)), (yylsp[(1) - (3)]));
				;}
    break;

  case 55:
#line 127 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 56:
#line 131 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 57:
#line 140 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(2) - (2)].node);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 58:
#line 149 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(5) - (5)].node);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 59:
#line 158 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(3) - (3)].node);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 60:
#line 167 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddColumn;
					n->def = (yyvsp[(6) - (6)].node);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 61:
#line 176 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ColumnDefault;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (yyvsp[(4) - (4)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 62:
#line 185 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropNotNull;
					n->name = (yyvsp[(3) - (6)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 63:
#line 193 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetNotNull;
					n->name = (yyvsp[(3) - (6)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 64:
#line 201 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetStatistics;
					n->name = (yyvsp[(3) - (6)].str);
					n->def = (PGNode *) makeInteger((yyvsp[(6) - (6)].ival));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 65:
#line 210 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetOptions;
					n->name = (yyvsp[(3) - (5)].str);
					n->def = (PGNode *) (yyvsp[(5) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 66:
#line 219 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ResetOptions;
					n->name = (yyvsp[(3) - (5)].str);
					n->def = (PGNode *) (yyvsp[(5) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 67:
#line 228 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetStorage;
					n->name = (yyvsp[(3) - (6)].str);
					n->def = (PGNode *) makeString((yyvsp[(6) - (6)].str));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 68:
#line 237 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGConstraint *c = makeNode(PGConstraint);

					c->contype = PG_CONSTR_IDENTITY;
					c->generated_when = (yyvsp[(6) - (9)].ival);
					c->options = (yyvsp[(9) - (9)].list);
					c->location = (yylsp[(5) - (9)]);

					n->subtype = PG_AT_AddIdentity;
					n->name = (yyvsp[(3) - (9)].str);
					n->def = (PGNode *) c;

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 69:
#line 254 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetIdentity;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (PGNode *) (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 70:
#line 263 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = AT_DropIdentity;
					n->name = (yyvsp[(3) - (5)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 71:
#line 272 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = AT_DropIdentity;
					n->name = (yyvsp[(3) - (7)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 72:
#line 281 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropColumn;
					n->name = (yyvsp[(5) - (6)].str);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 73:
#line 291 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropColumn;
					n->name = (yyvsp[(3) - (4)].str);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 74:
#line 304 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGColumnDef *def = makeNode(PGColumnDef);
					n->subtype = PG_AT_AlterColumnType;
					n->name = (yyvsp[(3) - (8)].str);
					n->def = (PGNode *) def;
					/* We only use these fields of the PGColumnDef node */
					def->typeName = (yyvsp[(6) - (8)].typnam);
					def->collClause = (PGCollateClause *) (yyvsp[(7) - (8)].node);
					def->raw_default = (yyvsp[(8) - (8)].node);
					def->location = (yylsp[(3) - (8)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 75:
#line 319 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AlterColumnGenericOptions;
					n->name = (yyvsp[(3) - (4)].str);
					n->def = (PGNode *) (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 76:
#line 328 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_AddConstraint;
					n->def = (yyvsp[(2) - (2)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 77:
#line 336 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					PGConstraint *c = makeNode(PGConstraint);
					n->subtype = PG_AT_AlterConstraint;
					n->def = (PGNode *) c;
					c->contype = PG_CONSTR_FOREIGN; /* others not supported, yet */
					c->conname = (yyvsp[(3) - (4)].str);
					processCASbits((yyvsp[(4) - (4)].ival), (yylsp[(4) - (4)]), "ALTER CONSTRAINT statement",
									&c->deferrable,
									&c->initdeferred,
									NULL, NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 78:
#line 351 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ValidateConstraint;
					n->name = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 79:
#line 359 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropConstraint;
					n->name = (yyvsp[(5) - (6)].str);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 80:
#line 369 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_DropConstraint;
					n->name = (yyvsp[(3) - (4)].str);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 81:
#line 379 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetLogged;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 82:
#line 386 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetUnLogged;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 83:
#line 393 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_SetRelOptions;
					n->def = (PGNode *)(yyvsp[(2) - (2)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 84:
#line 401 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_ResetRelOptions;
					n->def = (PGNode *)(yyvsp[(2) - (2)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 85:
#line 408 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					PGAlterTableCmd *n = makeNode(PGAlterTableCmd);
					n->subtype = PG_AT_GenericOptions;
					n->def = (PGNode *)(yyvsp[(1) - (1)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 86:
#line 418 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 87:
#line 419 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.node) = NULL; ;}
    break;

  case 88:
#line 425 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(1) - (1)].defelt);
				;}
    break;

  case 89:
#line 429 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
					(yyval.defelt)->defaction = PG_DEFELEM_SET;
				;}
    break;

  case 90:
#line 434 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
					(yyval.defelt)->defaction = PG_DEFELEM_ADD;
				;}
    break;

  case 91:
#line 439 "third_party/libpg_query/grammar/statements/alter_table.y"
    {
					(yyval.defelt) = makeDefElemExtended(NULL, (yyvsp[(2) - (2)].str), NULL, DEFELEM_DROP, (yylsp[(2) - (2)]));
				;}
    break;

  case 92:
#line 446 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 93:
#line 447 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 94:
#line 452 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 95:
#line 456 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 1; ;}
    break;

  case 96:
#line 457 "third_party/libpg_query/grammar/statements/alter_table.y"
    { (yyval.ival) = 0; ;}
    break;

  case 97:
#line 8 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = (yyvsp[(2) - (2)].str);
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 98:
#line 14 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = (yyvsp[(3) - (3)].str);
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 99:
#line 20 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = NULL;
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 100:
#line 26 "third_party/libpg_query/grammar/statements/deallocate.y"
    {
						PGDeallocateStmt *n = makeNode(PGDeallocateStmt);
						n->name = NULL;
						(yyval.node) = (PGNode *) n;
					;}
    break;

  case 101:
#line 7 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SCHEMA;
					n->subname = (yyvsp[(3) - (6)].str);
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 102:
#line 16 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 103:
#line 26 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 104:
#line 36 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 105:
#line 46 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 106:
#line 56 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 107:
#line 66 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 108:
#line 76 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_INDEX;
					n->relation = (yyvsp[(3) - (6)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 109:
#line 86 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_INDEX;
					n->relation = (yyvsp[(5) - (8)].range);
					n->subname = NULL;
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 110:
#line 96 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_COLUMN;
					n->relationType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (8)].range);
					n->subname = (yyvsp[(6) - (8)].str);
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 111:
#line 107 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_COLUMN;
					n->relationType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (10)].range);
					n->subname = (yyvsp[(8) - (10)].str);
					n->newname = (yyvsp[(10) - (10)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 112:
#line 118 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABCONSTRAINT;
					n->relation = (yyvsp[(3) - (8)].range);
					n->subname = (yyvsp[(6) - (8)].str);
					n->newname = (yyvsp[(8) - (8)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 113:
#line 128 "third_party/libpg_query/grammar/statements/rename.y"
    {
					PGRenameStmt *n = makeNode(PGRenameStmt);
					n->renameType = PG_OBJECT_TABCONSTRAINT;
					n->relation = (yyvsp[(5) - (10)].range);
					n->subname = (yyvsp[(8) - (10)].str);
					n->newname = (yyvsp[(10) - (10)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 114:
#line 140 "third_party/libpg_query/grammar/statements/rename.y"
    { (yyval.ival) = COLUMN; ;}
    break;

  case 115:
#line 141 "third_party/libpg_query/grammar/statements/rename.y"
    { (yyval.ival) = 0; ;}
    break;

  case 116:
#line 10 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(5) - (7)].istmt)->relation = (yyvsp[(4) - (7)].range);
					(yyvsp[(5) - (7)].istmt)->onConflictClause = (yyvsp[(6) - (7)].onconflict);
					(yyvsp[(5) - (7)].istmt)->returningList = (yyvsp[(7) - (7)].list);
					(yyvsp[(5) - (7)].istmt)->withClause = (yyvsp[(1) - (7)].with);
					(yyval.node) = (PGNode *) (yyvsp[(5) - (7)].istmt);
				;}
    break;

  case 117:
#line 22 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = (yyvsp[(1) - (1)].node);
				;}
    break;

  case 118:
#line 28 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->override = (yyvsp[(2) - (4)].override);
					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
				;}
    break;

  case 119:
#line 35 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = (yyvsp[(2) - (4)].list);
					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
				;}
    break;

  case 120:
#line 41 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = (yyvsp[(2) - (7)].list);
					(yyval.istmt)->override = (yyvsp[(5) - (7)].override);
					(yyval.istmt)->selectStmt = (yyvsp[(7) - (7)].node);
				;}
    break;

  case 121:
#line 48 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.istmt) = makeNode(PGInsertStmt);
					(yyval.istmt)->cols = NIL;
					(yyval.istmt)->selectStmt = NULL;
				;}
    break;

  case 122:
#line 58 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
				;}
    break;

  case 123:
#line 62 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(1) - (3)].range)->alias = makeAlias((yyvsp[(3) - (3)].str), NIL);
					(yyval.range) = (yyvsp[(1) - (3)].range);
				;}
    break;

  case 124:
#line 71 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = makeNode(PGInferClause);
					(yyval.infer)->indexElems = (yyvsp[(2) - (4)].list);
					(yyval.infer)->whereClause = (yyvsp[(4) - (4)].node);
					(yyval.infer)->conname = NULL;
					(yyval.infer)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 125:
#line 80 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = makeNode(PGInferClause);
					(yyval.infer)->indexElems = NIL;
					(yyval.infer)->whereClause = NULL;
					(yyval.infer)->conname = (yyvsp[(3) - (3)].str);
					(yyval.infer)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 126:
#line 88 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.infer) = NULL;
				;}
    break;

  case 127:
#line 95 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.with) = (yyvsp[(1) - (1)].with); ;}
    break;

  case 128:
#line 96 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.with) = NULL; ;}
    break;

  case 129:
#line 102 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(1) - (2)].str);
					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.target)->val = NULL;
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 130:
#line 114 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyvsp[(1) - (3)].target)->val = (PGNode *) (yyvsp[(3) - (3)].node);
					(yyval.list) = list_make1((yyvsp[(1) - (3)].target));
				;}
    break;

  case 131:
#line 119 "third_party/libpg_query/grammar/statements/insert.y"
    {
					int ncolumns = list_length((yyvsp[(2) - (5)].list));
					int i = 1;
					PGListCell *col_cell;

					/* Create a PGMultiAssignRef source for each target */
					foreach(col_cell, (yyvsp[(2) - (5)].list))
					{
						PGResTarget *res_col = (PGResTarget *) lfirst(col_cell);
						PGMultiAssignRef *r = makeNode(PGMultiAssignRef);

						r->source = (PGNode *) (yyvsp[(5) - (5)].node);
						r->colno = i;
						r->ncolumns = ncolumns;
						res_col->val = (PGNode *) r;
						i++;
					}

					(yyval.list) = (yyvsp[(2) - (5)].list);
				;}
    break;

  case 132:
#line 144 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = makeNode(PGOnConflictClause);
					(yyval.onconflict)->action = PG_ONCONFLICT_UPDATE;
					(yyval.onconflict)->infer = (yyvsp[(3) - (8)].infer);
					(yyval.onconflict)->targetList = (yyvsp[(7) - (8)].list);
					(yyval.onconflict)->whereClause = (yyvsp[(8) - (8)].node);
					(yyval.onconflict)->location = (yylsp[(1) - (8)]);
				;}
    break;

  case 133:
#line 154 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = makeNode(PGOnConflictClause);
					(yyval.onconflict)->action = PG_ONCONFLICT_NOTHING;
					(yyval.onconflict)->infer = (yyvsp[(3) - (5)].infer);
					(yyval.onconflict)->targetList = NIL;
					(yyval.onconflict)->whereClause = NULL;
					(yyval.onconflict)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 134:
#line 163 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.onconflict) = NULL;
				;}
    break;

  case 135:
#line 170 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = (yyvsp[(1) - (5)].str);
					(yyval.ielem)->expr = NULL;
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(2) - (5)].list);
					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].nullorder);
				;}
    break;

  case 136:
#line 181 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[(1) - (5)].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(2) - (5)].list);
					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].nullorder);
				;}
    break;

  case 137:
#line 192 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.ielem) = makeNode(PGIndexElem);
					(yyval.ielem)->name = NULL;
					(yyval.ielem)->expr = (yyvsp[(2) - (7)].node);
					(yyval.ielem)->indexcolname = NULL;
					(yyval.ielem)->collation = (yyvsp[(4) - (7)].list);
					(yyval.ielem)->opclass = (yyvsp[(5) - (7)].list);
					(yyval.ielem)->ordering = (yyvsp[(6) - (7)].sortorder);
					(yyval.ielem)->nulls_ordering = (yyvsp[(7) - (7)].nullorder);
				;}
    break;

  case 138:
#line 206 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 139:
#line 207 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 140:
#line 213 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.override) = PG_OVERRIDING_USER_VALUE; ;}
    break;

  case 141:
#line 214 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.override) = OVERRIDING_SYSTEM_VALUE; ;}
    break;

  case 142:
#line 219 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 143:
#line 220 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].target)); ;}
    break;

  case 144:
#line 226 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 145:
#line 227 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 146:
#line 231 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 147:
#line 232 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = NIL; ;}
    break;

  case 148:
#line 238 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 149:
#line 240 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
    break;

  case 150:
#line 245 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 151:
#line 246 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_concat((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].list)); ;}
    break;

  case 152:
#line 250 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].ielem)); ;}
    break;

  case 153:
#line 251 "third_party/libpg_query/grammar/statements/insert.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].ielem)); ;}
    break;

  case 154:
#line 257 "third_party/libpg_query/grammar/statements/insert.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(1) - (2)].str);
					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.target)->val = NULL;	/* upper production sets this */
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 155:
#line 8 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_NOTHING;
					n->name = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 156:
#line 15 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_ASSIGNMENT;
					n->name = (yyvsp[(2) - (4)].str);
					n->args = (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 157:
#line 23 "third_party/libpg_query/grammar/statements/pragma.y"
    {
					PGPragmaStmt *n = makeNode(PGPragmaStmt);
					n->kind = PG_PRAGMA_TYPE_CALL;
					n->name = (yyvsp[(2) - (5)].str);
					n->args = (yyvsp[(4) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 158:
#line 10 "third_party/libpg_query/grammar/statements/create_sequence.y"
    {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[(4) - (5)].range)->relpersistence = (yyvsp[(2) - (5)].ival);
					n->sequence = (yyvsp[(4) - (5)].range);
					n->options = (yyvsp[(5) - (5)].list);
					n->ownerId = InvalidOid;
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 159:
#line 20 "third_party/libpg_query/grammar/statements/create_sequence.y"
    {
					PGCreateSeqStmt *n = makeNode(PGCreateSeqStmt);
					(yyvsp[(7) - (8)].range)->relpersistence = (yyvsp[(2) - (8)].ival);
					n->sequence = (yyvsp[(7) - (8)].range);
					n->options = (yyvsp[(8) - (8)].list);
					n->ownerId = InvalidOid;
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 160:
#line 32 "third_party/libpg_query/grammar/statements/create_sequence.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 161:
#line 33 "third_party/libpg_query/grammar/statements/create_sequence.y"
    { (yyval.list) = NIL; ;}
    break;

  case 162:
#line 8 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(2) - (3)].str);
					n->params = (yyvsp[(3) - (3)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 163:
#line 16 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(7) - (9)].str);
					n->params = (yyvsp[(8) - (9)].list);
					ctas->query = (PGNode *) n;
					ctas->into = (yyvsp[(4) - (9)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = false;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(4) - (9)].into)->rel->relpersistence = (yyvsp[(2) - (9)].ival);
					(yyvsp[(4) - (9)].into)->skipData = !((yyvsp[(9) - (9)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 164:
#line 33 "third_party/libpg_query/grammar/statements/execute.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					PGExecuteStmt *n = makeNode(PGExecuteStmt);
					n->name = (yyvsp[(10) - (12)].str);
					n->params = (yyvsp[(11) - (12)].list);
					ctas->query = (PGNode *) n;
					ctas->into = (yyvsp[(7) - (12)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = true;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(7) - (12)].into)->rel->relpersistence = (yyvsp[(2) - (12)].ival);
					(yyvsp[(7) - (12)].into)->skipData = !((yyvsp[(12) - (12)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 165:
#line 51 "third_party/libpg_query/grammar/statements/execute.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 166:
#line 52 "third_party/libpg_query/grammar/statements/execute.y"
    { (yyval.list) = NIL; ;}
    break;

  case 167:
#line 10 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
					n->sequence = (yyvsp[(3) - (4)].range);
					n->options = (yyvsp[(4) - (4)].list);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 168:
#line 18 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					PGAlterSeqStmt *n = makeNode(PGAlterSeqStmt);
					n->sequence = (yyvsp[(5) - (6)].range);
					n->options = (yyvsp[(6) - (6)].list);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 169:
#line 29 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 170:
#line 30 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 171:
#line 34 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 172:
#line 35 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 173:
#line 36 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 174:
#line 41 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeFloat((yyvsp[(1) - (1)].str)); ;}
    break;

  case 175:
#line 42 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeFloat((yyvsp[(2) - (2)].str)); ;}
    break;

  case 176:
#line 44 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.value) = makeFloat((yyvsp[(2) - (2)].str));
					doNegateFloat((yyval.value));
				;}
    break;

  case 177:
#line 48 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.value) = makeInteger((yyvsp[(1) - (1)].ival)); ;}
    break;

  case 178:
#line 53 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("as", (PGNode *)(yyvsp[(2) - (2)].typnam), (yylsp[(1) - (2)]));
				;}
    break;

  case 179:
#line 57 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cache", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 180:
#line 61 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 181:
#line 65 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("cycle", (PGNode *)makeInteger(false), (yylsp[(1) - (2)]));
				;}
    break;

  case 182:
#line 69 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("increment", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 183:
#line 73 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("maxvalue", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 184:
#line 77 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("minvalue", (PGNode *)(yyvsp[(2) - (2)].value), (yylsp[(1) - (2)]));
				;}
    break;

  case 185:
#line 81 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("maxvalue", NULL, (yylsp[(1) - (2)]));
				;}
    break;

  case 186:
#line 85 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("minvalue", NULL, (yylsp[(1) - (2)]));
				;}
    break;

  case 187:
#line 89 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("owned_by", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 188:
#line 93 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					/* not documented, only used by pg_dump */
					(yyval.defelt) = makeDefElem("sequence_name", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 189:
#line 98 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("start", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 190:
#line 102 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("restart", NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 191:
#line 106 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {
					(yyval.defelt) = makeDefElem("restart", (PGNode *)(yyvsp[(3) - (3)].value), (yylsp[(1) - (3)]));
				;}
    break;

  case 192:
#line 112 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 193:
#line 113 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    {;}
    break;

  case 194:
#line 117 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 195:
#line 118 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = + (yyvsp[(2) - (2)].ival); ;}
    break;

  case 196:
#line 119 "third_party/libpg_query/grammar/statements/alter_sequence.y"
    { (yyval.ival) = - (yyvsp[(2) - (2)].ival); ;}
    break;

  case 197:
#line 3 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 198:
#line 10 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_BEGIN;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 199:
#line 16 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_START;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 200:
#line 22 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 201:
#line 29 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_COMMIT;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 202:
#line 36 "third_party/libpg_query/grammar/statements/transaction.y"
    {
					PGTransactionStmt *n = makeNode(PGTransactionStmt);
					n->kind = PG_TRANS_STMT_ROLLBACK;
					n->options = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 203:
#line 45 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 204:
#line 46 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 205:
#line 47 "third_party/libpg_query/grammar/statements/transaction.y"
    {;}
    break;

  case 206:
#line 9 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(4) - (9)].range)->relpersistence = (yyvsp[(2) - (9)].ival);
					n->relation = (yyvsp[(4) - (9)].range);
					n->tableElts = (yyvsp[(6) - (9)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(8) - (9)].list);
					n->oncommit = (yyvsp[(9) - (9)].oncommit);
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 207:
#line 24 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGCreateStmt *n = makeNode(PGCreateStmt);
					(yyvsp[(7) - (12)].range)->relpersistence = (yyvsp[(2) - (12)].ival);
					n->relation = (yyvsp[(7) - (12)].range);
					n->tableElts = (yyvsp[(9) - (12)].list);
					n->ofTypename = NULL;
					n->constraints = NIL;
					n->options = (yyvsp[(11) - (12)].list);
					n->oncommit = (yyvsp[(12) - (12)].oncommit);
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 208:
#line 41 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = 0; ;}
    break;

  case 209:
#line 43 "third_party/libpg_query/grammar/statements/create.y"
    {
					/*
					 * We must complain about conflicting options.
					 * We could, but choose not to, complain about redundant
					 * options (ie, where $2's bit is already set in $1).
					 */
					int		newspec = (yyvsp[(1) - (2)].ival) | (yyvsp[(2) - (2)].ival);

					/* special message for this case */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED)) == (CAS_NOT_DEFERRABLE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("constraint declared INITIALLY DEFERRED must be DEFERRABLE"),
								 parser_errposition((yylsp[(2) - (2)]))));
					/* generic message for other conflicts */
					if ((newspec & (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE)) == (CAS_NOT_DEFERRABLE | CAS_DEFERRABLE) ||
						(newspec & (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED)) == (CAS_INITIALLY_IMMEDIATE | CAS_INITIALLY_DEFERRED))
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("conflicting constraint properties"),
								 parser_errposition((yylsp[(2) - (2)]))));
					(yyval.ival) = newspec;
				;}
    break;

  case 210:
#line 69 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].typnam); ;}
    break;

  case 211:
#line 70 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
    break;

  case 212:
#line 71 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].list); ;}
    break;

  case 213:
#line 72 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)(yyvsp[(1) - (1)].value); ;}
    break;

  case 214:
#line 73 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 215:
#line 74 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
    break;

  case 216:
#line 78 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 217:
#line 79 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 218:
#line 84 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 219:
#line 89 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_NOACTION; ;}
    break;

  case 220:
#line 90 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_RESTRICT; ;}
    break;

  case 221:
#line 91 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_CASCADE; ;}
    break;

  case 222:
#line 92 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_SETNULL; ;}
    break;

  case 223:
#line 93 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_FKCONSTR_ACTION_SETDEFAULT; ;}
    break;

  case 224:
#line 99 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = castNode(PGConstraint, (yyvsp[(3) - (3)].node));
					n->conname = (yyvsp[(2) - (3)].str);
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 225:
#line 105 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 226:
#line 106 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 227:
#line 108 "third_party/libpg_query/grammar/statements/create.y"
    {
					/*
					 * Note: the PGCollateClause is momentarily included in
					 * the list built by ColQualList, but we split it out
					 * again in SplitColQualList.
					 */
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[(2) - (2)].list);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 228:
#line 125 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_NOTNULL;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 229:
#line 132 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_NULL;
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 230:
#line 139 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (2)]);
					n->keys = NULL;
					n->options = (yyvsp[(2) - (2)].list);
					n->indexname = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 231:
#line 149 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (3)]);
					n->keys = NULL;
					n->options = (yyvsp[(3) - (3)].list);
					n->indexname = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 232:
#line 159 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_CHECK;
					n->location = (yylsp[(1) - (5)]);
					n->is_no_inherit = (yyvsp[(5) - (5)].boolean);
					n->raw_expr = (yyvsp[(3) - (5)].node);
					n->cooked_expr = NULL;
					n->skip_validation = false;
					n->initially_valid = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 233:
#line 171 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_DEFAULT;
					n->location = (yylsp[(1) - (2)]);
					n->raw_expr = (yyvsp[(2) - (2)].node);
					n->cooked_expr = NULL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 234:
#line 180 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_IDENTITY;
					n->generated_when = (yyvsp[(2) - (5)].ival);
					n->options = (yyvsp[(5) - (5)].list);
					n->location = (yylsp[(1) - (5)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 235:
#line 189 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_FOREIGN;
					n->location = (yylsp[(1) - (5)]);
					n->pktable			= (yyvsp[(2) - (5)].range);
					n->fk_attrs			= NIL;
					n->pk_attrs			= (yyvsp[(3) - (5)].list);
					n->fk_matchtype		= (yyvsp[(4) - (5)].ival);
					n->fk_upd_action	= (char) ((yyvsp[(5) - (5)].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[(5) - (5)].ival) & 0xFF);
					n->skip_validation  = false;
					n->initially_valid  = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 236:
#line 208 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 237:
#line 214 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
    break;

  case 238:
#line 220 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(1) - (1)].ival) << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); ;}
    break;

  case 239:
#line 222 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | ((yyvsp[(1) - (1)].ival) & 0xFF); ;}
    break;

  case 240:
#line 224 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(1) - (2)].ival) << 8) | ((yyvsp[(2) - (2)].ival) & 0xFF); ;}
    break;

  case 241:
#line 226 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ((yyvsp[(2) - (2)].ival) << 8) | ((yyvsp[(1) - (2)].ival) & 0xFF); ;}
    break;

  case 242:
#line 228 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (PG_FKCONSTR_ACTION_NOACTION << 8) | (PG_FKCONSTR_ACTION_NOACTION & 0xFF); ;}
    break;

  case 243:
#line 233 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 244:
#line 234 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 245:
#line 238 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = ONCOMMIT_DROP; ;}
    break;

  case 246:
#line 239 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_DELETE_ROWS; ;}
    break;

  case 247:
#line 240 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_PRESERVE_ROWS; ;}
    break;

  case 248:
#line 241 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.oncommit) = PG_ONCOMMIT_NOOP; ;}
    break;

  case 249:
#line 246 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 250:
#line 250 "third_party/libpg_query/grammar/statements/create.y"
    {  (yyval.boolean) = true; ;}
    break;

  case 251:
#line 251 "third_party/libpg_query/grammar/statements/create.y"
    {  (yyval.boolean) = false; ;}
    break;

  case 252:
#line 257 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = castNode(PGConstraint, (yyvsp[(3) - (3)].node));
					n->conname = (yyvsp[(2) - (3)].str);
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 253:
#line 263 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 254:
#line 268 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_COMMENTS; ;}
    break;

  case 255:
#line 269 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_CONSTRAINTS; ;}
    break;

  case 256:
#line 270 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_DEFAULTS; ;}
    break;

  case 257:
#line 271 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_IDENTITY; ;}
    break;

  case 258:
#line 272 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_INDEXES; ;}
    break;

  case 259:
#line 273 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_STATISTICS; ;}
    break;

  case 260:
#line 274 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_STORAGE; ;}
    break;

  case 261:
#line 275 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_CREATE_TABLE_LIKE_ALL; ;}
    break;

  case 262:
#line 281 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 263:
#line 282 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
    break;

  case 264:
#line 286 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(3) - (3)].str); ;}
    break;

  case 265:
#line 292 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_DEFERRABLE;
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 266:
#line 299 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_NOT_DEFERRABLE;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 267:
#line 306 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_DEFERRED;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 268:
#line 313 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_ATTR_IMMEDIATE;
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 269:
#line 324 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 270:
#line 325 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(true), (yylsp[(1) - (2)]))); ;}
    break;

  case 271:
#line 326 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1(makeDefElem("oids", (PGNode *) makeInteger(false), (yylsp[(1) - (2)]))); ;}
    break;

  case 272:
#line 327 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 273:
#line 331 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 274:
#line 336 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
    break;

  case 275:
#line 337 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) & ~(yyvsp[(3) - (3)].ival); ;}
    break;

  case 276:
#line 338 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = 0; ;}
    break;

  case 277:
#line 343 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 278:
#line 348 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NOT_DEFERRABLE; ;}
    break;

  case 279:
#line 349 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_DEFERRABLE; ;}
    break;

  case 280:
#line 350 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_INITIALLY_IMMEDIATE; ;}
    break;

  case 281:
#line 351 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_INITIALLY_DEFERRED; ;}
    break;

  case 282:
#line 352 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NOT_VALID; ;}
    break;

  case 283:
#line 353 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = CAS_NO_INHERIT; ;}
    break;

  case 284:
#line 359 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->colname = (yyvsp[(1) - (4)].str);
					n->typeName = (yyvsp[(2) - (4)].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collOid = InvalidOid;
					n->fdwoptions = (yyvsp[(3) - (4)].list);
					SplitColQualList((yyvsp[(4) - (4)].list), &n->constraints, &n->collClause,
									 yyscanner);
					n->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 285:
#line 382 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 286:
#line 386 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 287:
#line 392 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
    break;

  case 288:
#line 393 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
    break;

  case 289:
#line 397 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 290:
#line 401 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 291:
#line 402 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 292:
#line 403 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 293:
#line 408 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (PGNode *) (yyvsp[(3) - (3)].node), (yylsp[(1) - (3)]));
				;}
    break;

  case 294:
#line 412 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 295:
#line 419 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 296:
#line 420 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 297:
#line 425 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 298:
#line 426 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 299:
#line 431 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str));
				;}
    break;

  case 300:
#line 438 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 301:
#line 439 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 302:
#line 444 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 303:
#line 445 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = NIL; ;}
    break;

  case 304:
#line 449 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
    break;

  case 305:
#line 455 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (PGNode *) (yyvsp[(3) - (3)].node), (yylsp[(1) - (3)]));
				;}
    break;

  case 306:
#line 459 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL, (yylsp[(1) - (1)]));
				;}
    break;

  case 307:
#line 463 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (5)].str), (yyvsp[(3) - (5)].str), (PGNode *) (yyvsp[(5) - (5)].node),
											 PG_DEFELEM_UNSPEC, (yylsp[(1) - (5)]));
				;}
    break;

  case 308:
#line 468 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str), NULL, PG_DEFELEM_UNSPEC, (yylsp[(1) - (3)]));
				;}
    break;

  case 309:
#line 475 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 310:
#line 476 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 311:
#line 480 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 312:
#line 482 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(1) - (4)].str)), (yyvsp[(2) - (4)].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 313:
#line 488 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(2) - (5)].str)), (yyvsp[(3) - (5)].list)));
					(yyval.typnam)->pct_type = true;
					(yyval.typnam)->setof = true;
					(yyval.typnam)->location = (yylsp[(2) - (5)]);
				;}
    break;

  case 314:
#line 499 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_CHECK;
					n->location = (yylsp[(1) - (5)]);
					n->raw_expr = (yyvsp[(3) - (5)].node);
					n->cooked_expr = NULL;
					processCASbits((yyvsp[(5) - (5)].ival), (yylsp[(5) - (5)]), "CHECK",
								   NULL, NULL, &n->skip_validation,
								   &n->is_no_inherit, yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 315:
#line 513 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (6)]);
					n->keys = (yyvsp[(3) - (6)].list);
					n->options = (yyvsp[(5) - (6)].list);
					n->indexname = NULL;
					processCASbits((yyvsp[(6) - (6)].ival), (yylsp[(6) - (6)]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 316:
#line 526 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_UNIQUE;
					n->location = (yylsp[(1) - (3)]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[(2) - (3)].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[(3) - (3)].ival), (yylsp[(3) - (3)]), "UNIQUE",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 317:
#line 541 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (7)]);
					n->keys = (yyvsp[(4) - (7)].list);
					n->options = (yyvsp[(6) - (7)].list);
					n->indexname = NULL;
					processCASbits((yyvsp[(7) - (7)].ival), (yylsp[(7) - (7)]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 318:
#line 554 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_PRIMARY;
					n->location = (yylsp[(1) - (4)]);
					n->keys = NIL;
					n->options = NIL;
					n->indexname = (yyvsp[(3) - (4)].str);
					n->indexspace = NULL;
					processCASbits((yyvsp[(4) - (4)].ival), (yylsp[(4) - (4)]), "PRIMARY KEY",
								   &n->deferrable, &n->initdeferred, NULL,
								   NULL, yyscanner);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 319:
#line 569 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGConstraint *n = makeNode(PGConstraint);
					n->contype = PG_CONSTR_FOREIGN;
					n->location = (yylsp[(1) - (11)]);
					n->pktable			= (yyvsp[(7) - (11)].range);
					n->fk_attrs			= (yyvsp[(4) - (11)].list);
					n->pk_attrs			= (yyvsp[(8) - (11)].list);
					n->fk_matchtype		= (yyvsp[(9) - (11)].ival);
					n->fk_upd_action	= (char) ((yyvsp[(10) - (11)].ival) >> 8);
					n->fk_del_action	= (char) ((yyvsp[(10) - (11)].ival) & 0xFF);
					processCASbits((yyvsp[(11) - (11)].ival), (yylsp[(11) - (11)]), "FOREIGN KEY",
								   &n->deferrable, &n->initdeferred,
								   &n->skip_validation, NULL,
								   yyscanner);
					n->initially_valid = !n->skip_validation;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 320:
#line 591 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 321:
#line 595 "third_party/libpg_query/grammar/statements/create.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 322:
#line 602 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_FULL;
			;}
    break;

  case 323:
#line 606 "third_party/libpg_query/grammar/statements/create.y"
    {
				ereport(ERROR,
						(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
						 errmsg("MATCH PARTIAL not yet implemented"),
						 parser_errposition((yylsp[(1) - (2)]))));
				(yyval.ival) = PG_FKCONSTR_MATCH_PARTIAL;
			;}
    break;

  case 324:
#line 614 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
			;}
    break;

  case 325:
#line 618 "third_party/libpg_query/grammar/statements/create.y"
    {
				(yyval.ival) = PG_FKCONSTR_MATCH_SIMPLE;
			;}
    break;

  case 326:
#line 626 "third_party/libpg_query/grammar/statements/create.y"
    {
					PGTableLikeClause *n = makeNode(PGTableLikeClause);
					n->relation = (yyvsp[(2) - (3)].range);
					n->options = (yyvsp[(3) - (3)].ival);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 327:
#line 635 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 328:
#line 636 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 329:
#line 637 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 330:
#line 638 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_TEMP; ;}
    break;

  case 331:
#line 640 "third_party/libpg_query/grammar/statements/create.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 332:
#line 647 "third_party/libpg_query/grammar/statements/create.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.ival) = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 333:
#line 653 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_RELPERSISTENCE_UNLOGGED; ;}
    break;

  case 334:
#line 654 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = RELPERSISTENCE_PERMANENT; ;}
    break;

  case 335:
#line 659 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = PG_ATTRIBUTE_IDENTITY_ALWAYS; ;}
    break;

  case 336:
#line 660 "third_party/libpg_query/grammar/statements/create.y"
    { (yyval.ival) = ATTRIBUTE_IDENTITY_BY_DEFAULT; ;}
    break;

  case 337:
#line 10 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 338:
#line 20 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (4)].objtype);
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 339:
#line 30 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->missing_ok = true;
					n->objects = (yyvsp[(5) - (6)].list);
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 340:
#line 40 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (4)].objtype);
					n->missing_ok = false;
					n->objects = (yyvsp[(3) - (4)].list);
					n->behavior = (yyvsp[(4) - (4)].dbehavior);
					n->concurrent = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 341:
#line 50 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (6)].objtype);
					n->objects = list_make1(lappend((yyvsp[(5) - (6)].list), makeString((yyvsp[(3) - (6)].str))));
					n->behavior = (yyvsp[(6) - (6)].dbehavior);
					n->missing_ok = false;
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 342:
#line 60 "third_party/libpg_query/grammar/statements/drop.y"
    {
					PGDropStmt *n = makeNode(PGDropStmt);
					n->removeType = (yyvsp[(2) - (8)].objtype);
					n->objects = list_make1(lappend((yyvsp[(7) - (8)].list), makeString((yyvsp[(5) - (8)].str))));
					n->behavior = (yyvsp[(8) - (8)].dbehavior);
					n->missing_ok = true;
					n->concurrent = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 343:
#line 73 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TABLE; ;}
    break;

  case 344:
#line 74 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_SEQUENCE; ;}
    break;

  case 345:
#line 75 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FUNCTION; ;}
    break;

  case 346:
#line 76 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FUNCTION; ;}
    break;

  case 347:
#line 77 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_VIEW; ;}
    break;

  case 348:
#line 78 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_MATVIEW; ;}
    break;

  case 349:
#line 79 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_INDEX; ;}
    break;

  case 350:
#line 80 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FOREIGN_TABLE; ;}
    break;

  case 351:
#line 81 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_COLLATION; ;}
    break;

  case 352:
#line 82 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_CONVERSION; ;}
    break;

  case 353:
#line 83 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_STATISTIC_EXT; ;}
    break;

  case 354:
#line 84 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSPARSER; ;}
    break;

  case 355:
#line 85 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSDICTIONARY; ;}
    break;

  case 356:
#line 86 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSTEMPLATE; ;}
    break;

  case 357:
#line 87 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TSCONFIGURATION; ;}
    break;

  case 358:
#line 92 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_ACCESS_METHOD; ;}
    break;

  case 359:
#line 93 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_EVENT_TRIGGER; ;}
    break;

  case 360:
#line 94 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_EXTENSION; ;}
    break;

  case 361:
#line 95 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FDW; ;}
    break;

  case 362:
#line 96 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_PUBLICATION; ;}
    break;

  case 363:
#line 97 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_SCHEMA; ;}
    break;

  case 364:
#line 98 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_FOREIGN_SERVER; ;}
    break;

  case 365:
#line 103 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 366:
#line 104 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 367:
#line 109 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_CASCADE; ;}
    break;

  case 368:
#line 110 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_RESTRICT; ;}
    break;

  case 369:
#line 111 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.dbehavior) = PG_DROP_RESTRICT; /* default */ ;}
    break;

  case 370:
#line 116 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_POLICY; ;}
    break;

  case 371:
#line 117 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_RULE; ;}
    break;

  case 372:
#line 118 "third_party/libpg_query/grammar/statements/drop.y"
    { (yyval.objtype) = PG_OBJECT_TRIGGER; ;}
    break;

  case 373:
#line 8 "third_party/libpg_query/grammar/statements/create_function.y"
    {
					PGCreateFunctionStmt *n = makeNode(PGCreateFunctionStmt);
					n->name = (yyvsp[(3) - (6)].range);
					n->params = (yyvsp[(4) - (6)].list);
					n->function = (yyvsp[(6) - (6)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 376:
#line 24 "third_party/libpg_query/grammar/statements/create_function.y"
    {
				(yyval.list) = NIL;
			;}
    break;

  case 377:
#line 28 "third_party/libpg_query/grammar/statements/create_function.y"
    {
				(yyval.list) = (yyvsp[(2) - (3)].list);
			;}
    break;

  case 378:
#line 12 "third_party/libpg_query/grammar/statements/update.y"
    {
					PGUpdateStmt *n = makeNode(PGUpdateStmt);
					n->relation = (yyvsp[(3) - (8)].range);
					n->targetList = (yyvsp[(5) - (8)].list);
					n->fromClause = (yyvsp[(6) - (8)].list);
					n->whereClause = (yyvsp[(7) - (8)].node);
					n->returningList = (yyvsp[(8) - (8)].list);
					n->withClause = (yyvsp[(1) - (8)].with);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 379:
#line 3 "third_party/libpg_query/grammar/statements/copy.y"
    {
					PGCopyStmt *n = makeNode(PGCopyStmt);
					n->relation = (yyvsp[(3) - (11)].range);
					n->query = NULL;
					n->attlist = (yyvsp[(4) - (11)].list);
					n->is_from = (yyvsp[(6) - (11)].boolean);
					n->is_program = (yyvsp[(7) - (11)].boolean);
					n->filename = (yyvsp[(8) - (11)].str);

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[(8) - (11)]))));

					n->options = NIL;
					/* Concatenate user-supplied flags */
					if ((yyvsp[(2) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(2) - (11)].defelt));
					if ((yyvsp[(5) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(5) - (11)].defelt));
					if ((yyvsp[(9) - (11)].defelt))
						n->options = lappend(n->options, (yyvsp[(9) - (11)].defelt));
					if ((yyvsp[(11) - (11)].list))
						n->options = list_concat(n->options, (yyvsp[(11) - (11)].list));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 380:
#line 31 "third_party/libpg_query/grammar/statements/copy.y"
    {
					PGCopyStmt *n = makeNode(PGCopyStmt);
					n->relation = NULL;
					n->query = (yyvsp[(3) - (9)].node);
					n->attlist = NIL;
					n->is_from = false;
					n->is_program = (yyvsp[(6) - (9)].boolean);
					n->filename = (yyvsp[(7) - (9)].str);
					n->options = (yyvsp[(9) - (9)].list);

					if (n->is_program && n->filename == NULL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("STDIN/STDOUT not allowed with PROGRAM"),
								 parser_errposition((yylsp[(5) - (9)]))));

					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 381:
#line 53 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = true; ;}
    break;

  case 382:
#line 54 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = false; ;}
    break;

  case 383:
#line 60 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(2) - (3)]));
				;}
    break;

  case 384:
#line 63 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 385:
#line 69 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 386:
#line 73 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 387:
#line 80 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 388:
#line 81 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 389:
#line 85 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 390:
#line 86 "third_party/libpg_query/grammar/statements/copy.y"
    {;}
    break;

  case 391:
#line 91 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = true; ;}
    break;

  case 392:
#line 92 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.boolean) = false; ;}
    break;

  case 393:
#line 96 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 394:
#line 97 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 395:
#line 102 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 396:
#line 103 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].value); ;}
    break;

  case 397:
#line 104 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeNode(PGAStar); ;}
    break;

  case 398:
#line 105 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) (yyvsp[(2) - (3)].list); ;}
    break;

  case 399:
#line 106 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = NULL; ;}
    break;

  case 400:
#line 112 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 401:
#line 120 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[(1) - (2)]));
				;}
    break;

  case 402:
#line 123 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 403:
#line 128 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
    break;

  case 404:
#line 129 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.list) = NIL; ;}
    break;

  case 405:
#line 135 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[(1) - (1)]));
				;}
    break;

  case 406:
#line 138 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.defelt) = NULL; ;}
    break;

  case 407:
#line 144 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("binary"), (yylsp[(1) - (1)]));
				;}
    break;

  case 408:
#line 148 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("oids", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 409:
#line 152 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("freeze", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 410:
#line 156 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("delimiter", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 411:
#line 160 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("null", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 412:
#line 164 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("format", (PGNode *)makeString("csv"), (yylsp[(1) - (1)]));
				;}
    break;

  case 413:
#line 168 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("header", (PGNode *)makeInteger(true), (yylsp[(1) - (1)]));
				;}
    break;

  case 414:
#line 172 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("quote", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 415:
#line 176 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("escape", (PGNode *)makeString((yyvsp[(3) - (3)].str)), (yylsp[(1) - (3)]));
				;}
    break;

  case 416:
#line 180 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 417:
#line 184 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_quote", (PGNode *)makeNode(PGAStar), (yylsp[(1) - (3)]));
				;}
    break;

  case 418:
#line 188 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_not_null", (PGNode *)(yyvsp[(4) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 419:
#line 192 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("force_null", (PGNode *)(yyvsp[(3) - (3)].list), (yylsp[(1) - (3)]));
				;}
    break;

  case 420:
#line 196 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.defelt) = makeDefElem("encoding", (PGNode *)makeString((yyvsp[(2) - (2)].str)), (yylsp[(1) - (2)]));
				;}
    break;

  case 421:
#line 203 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 422:
#line 209 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 423:
#line 210 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = NULL; ;}
    break;

  case 424:
#line 211 "third_party/libpg_query/grammar/statements/copy.y"
    { (yyval.str) = NULL; ;}
    break;

  case 425:
#line 217 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 426:
#line 221 "third_party/libpg_query/grammar/statements/copy.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 429:
#line 52 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 430:
#line 53 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 431:
#line 68 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 432:
#line 70 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list), NIL,
										NULL, NULL, NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (2)].node);
				;}
    break;

  case 433:
#line 77 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(3) - (4)].list),
										(PGNode*) list_nth((yyvsp[(4) - (4)].list), 0), (PGNode*) list_nth((yyvsp[(4) - (4)].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (4)].node);
				;}
    break;

  case 434:
#line 85 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(4) - (4)].list),
										(PGNode*) list_nth((yyvsp[(3) - (4)].list), 0), (PGNode*) list_nth((yyvsp[(3) - (4)].list), 1),
										NULL,
										yyscanner);
					(yyval.node) = (yyvsp[(1) - (4)].node);
				;}
    break;

  case 435:
#line 93 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (2)].node), NULL, NIL,
										NULL, NULL,
										(yyvsp[(1) - (2)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (2)].node);
				;}
    break;

  case 436:
#line 101 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].list), NIL,
										NULL, NULL,
										(yyvsp[(1) - (3)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (3)].node);
				;}
    break;

  case 437:
#line 109 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(4) - (5)].list),
										(PGNode*) list_nth((yyvsp[(5) - (5)].list), 0), (PGNode*) list_nth((yyvsp[(5) - (5)].list), 1),
										(yyvsp[(1) - (5)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (5)].node);
				;}
    break;

  case 438:
#line 117 "third_party/libpg_query/grammar/statements/select.y"
    {
					insertSelectOptions((PGSelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(5) - (5)].list),
										(PGNode*) list_nth((yyvsp[(4) - (5)].list), 0), (PGNode*) list_nth((yyvsp[(4) - (5)].list), 1),
										(yyvsp[(1) - (5)].with),
										yyscanner);
					(yyval.node) = (yyvsp[(2) - (5)].node);
				;}
    break;

  case 439:
#line 127 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 440:
#line 128 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 441:
#line 158 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->targetList = (yyvsp[(3) - (10)].list);
					n->intoClause = (yyvsp[(4) - (10)].into);
					n->fromClause = (yyvsp[(5) - (10)].list);
					n->whereClause = (yyvsp[(6) - (10)].node);
					n->groupClause = (yyvsp[(7) - (10)].list);
					n->havingClause = (yyvsp[(8) - (10)].node);
					n->windowClause = (yyvsp[(9) - (10)].list);
					n->sampleOptions = (yyvsp[(10) - (10)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 442:
#line 173 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->distinctClause = (yyvsp[(2) - (10)].list);
					n->targetList = (yyvsp[(3) - (10)].list);
					n->intoClause = (yyvsp[(4) - (10)].into);
					n->fromClause = (yyvsp[(5) - (10)].list);
					n->whereClause = (yyvsp[(6) - (10)].node);
					n->groupClause = (yyvsp[(7) - (10)].list);
					n->havingClause = (yyvsp[(8) - (10)].node);
					n->windowClause = (yyvsp[(9) - (10)].list);
					n->sampleOptions = (yyvsp[(10) - (10)].node);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 443:
#line 186 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 444:
#line 188 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* same as SELECT * FROM relation_expr */
					PGColumnRef *cr = makeNode(PGColumnRef);
					PGResTarget *rt = makeNode(PGResTarget);
					PGSelectStmt *n = makeNode(PGSelectStmt);

					cr->fields = list_make1(makeNode(PGAStar));
					cr->location = -1;

					rt->name = NULL;
					rt->indirection = NIL;
					rt->val = (PGNode *)cr;
					rt->location = -1;

					n->targetList = list_make1(rt);
					n->fromClause = list_make1((yyvsp[(2) - (2)].range));
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 445:
#line 207 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_UNION, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 446:
#line 211 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_INTERSECT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 447:
#line 215 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSetOp(PG_SETOP_EXCEPT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 448:
#line 232 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[(1) - (2)]);
			;}
    break;

  case 449:
#line 239 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
				(yyval.with)->recursive = false;
				(yyval.with)->location = (yylsp[(1) - (2)]);
			;}
    break;

  case 450:
#line 246 "third_party/libpg_query/grammar/statements/select.y"
    {
				(yyval.with) = makeNode(PGWithClause);
				(yyval.with)->ctes = (yyvsp[(3) - (3)].list);
				(yyval.with)->recursive = true;
				(yyval.with)->location = (yylsp[(1) - (3)]);
			;}
    break;

  case 451:
#line 255 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 452:
#line 256 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 453:
#line 260 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGCommonTableExpr *n = makeNode(PGCommonTableExpr);
				n->ctename = (yyvsp[(1) - (6)].str);
				n->aliascolnames = (yyvsp[(2) - (6)].list);
				n->ctequery = (yyvsp[(5) - (6)].node);
				n->location = (yylsp[(1) - (6)]);
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 454:
#line 272 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.into) = makeNode(PGIntoClause);
					(yyval.into)->rel = (yyvsp[(2) - (2)].range);
					(yyval.into)->colNames = NIL;
					(yyval.into)->options = NIL;
					(yyval.into)->onCommit = PG_ONCOMMIT_NOOP;
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;
				;}
    break;

  case 455:
#line 282 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.into) = NULL; ;}
    break;

  case 456:
#line 291 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 457:
#line 296 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 458:
#line 301 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 459:
#line 306 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 460:
#line 311 "third_party/libpg_query/grammar/statements/select.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (4)]))));
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 461:
#line 319 "third_party/libpg_query/grammar/statements/select.y"
    {
					ereport(PGWARNING,
							(errmsg("GLOBAL is deprecated in temporary table creation"),
							 parser_errposition((yylsp[(1) - (4)]))));
					(yyval.range) = (yyvsp[(4) - (4)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_TEMP;
				;}
    break;

  case 462:
#line 327 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(3) - (3)].range);
					(yyval.range)->relpersistence = PG_RELPERSISTENCE_UNLOGGED;
				;}
    break;

  case 463:
#line 332 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(2) - (2)].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				;}
    break;

  case 464:
#line 337 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
				;}
    break;

  case 465:
#line 343 "third_party/libpg_query/grammar/statements/select.y"
    {;}
    break;

  case 466:
#line 344 "third_party/libpg_query/grammar/statements/select.y"
    {;}
    break;

  case 467:
#line 348 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 468:
#line 349 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 469:
#line 350 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 470:
#line 357 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(NIL); ;}
    break;

  case 471:
#line 358 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
    break;

  case 472:
#line 362 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL;;}
    break;

  case 473:
#line 363 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 474:
#line 367 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list);;}
    break;

  case 475:
#line 368 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 476:
#line 372 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 477:
#line 376 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].sortby)); ;}
    break;

  case 478:
#line 377 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].sortby)); ;}
    break;

  case 479:
#line 381 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.sortby) = makeNode(PGSortBy);
					(yyval.sortby)->node = (yyvsp[(1) - (4)].node);
					(yyval.sortby)->sortby_dir = SORTBY_USING;
					(yyval.sortby)->sortby_nulls = (yyvsp[(4) - (4)].nullorder);
					(yyval.sortby)->useOp = (yyvsp[(3) - (4)].list);
					(yyval.sortby)->location = (yylsp[(3) - (4)]);
				;}
    break;

  case 480:
#line 390 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.sortby) = makeNode(PGSortBy);
					(yyval.sortby)->node = (yyvsp[(1) - (3)].node);
					(yyval.sortby)->sortby_dir = (yyvsp[(2) - (3)].sortorder);
					(yyval.sortby)->sortby_nulls = (yyvsp[(3) - (3)].nullorder);
					(yyval.sortby)->useOp = NIL;
					(yyval.sortby)->location = -1;		/* no operator */
				;}
    break;

  case 481:
#line 400 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_ASC; ;}
    break;

  case 482:
#line 401 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_DESC; ;}
    break;

  case 483:
#line 402 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.sortorder) = PG_SORTBY_DEFAULT; ;}
    break;

  case 484:
#line 405 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_FIRST; ;}
    break;

  case 485:
#line 406 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_LAST; ;}
    break;

  case 486:
#line 407 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.nullorder) = PG_SORTBY_NULLS_DEFAULT; ;}
    break;

  case 487:
#line 411 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(2) - (2)].node), (yyvsp[(1) - (2)].node)); ;}
    break;

  case 488:
#line 412 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 489:
#line 413 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2(NULL, (yyvsp[(1) - (1)].node)); ;}
    break;

  case 490:
#line 414 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (1)].node), NULL); ;}
    break;

  case 491:
#line 418 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 492:
#line 419 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2(NULL,NULL); ;}
    break;

  case 493:
#line 424 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 494:
#line 426 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* Disabled because it was too confusing, bjm 2002-02-18 */
					ereport(ERROR,
							(errcode(PG_ERRCODE_SYNTAX_ERROR),
							 errmsg("LIMIT #,# syntax is not supported"),
							 errhint("Use separate LIMIT and OFFSET clauses."),
							 parser_errposition((yylsp[(1) - (4)]))));
				;}
    break;

  case 495:
#line 442 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(3) - (5)].node); ;}
    break;

  case 496:
#line 444 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeIntConst(1, -1); ;}
    break;

  case 497:
#line 449 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 498:
#line 452 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
    break;

  case 499:
#line 460 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeFloat((yyvsp[(1) - (2)].str)), true);
		;}
    break;

  case 500:
#line 464 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), true);
		;}
    break;

  case 501:
#line 468 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeFloat((yyvsp[(1) - (2)].str)), true);
		;}
    break;

  case 502:
#line 472 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), true);
		;}
    break;

  case 503:
#line 476 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (1)].ival)), false);
		;}
    break;

  case 504:
#line 480 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleSize(makeInteger((yyvsp[(1) - (2)].ival)), false);
		;}
    break;

  case 505:
#line 487 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(3) - (3)].node);
				;}
    break;

  case 506:
#line 491 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 507:
#line 498 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 508:
#line 499 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = NULL; ;}
    break;

  case 509:
#line 504 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSampleOptions((yyvsp[(3) - (5)].node), (yyvsp[(1) - (5)].str), (yyvsp[(5) - (5)].ival), (yylsp[(1) - (5)]));
				;}
    break;

  case 510:
#line 508 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (1)].node), NULL, -1, (yylsp[(1) - (1)]));
		;}
    break;

  case 511:
#line 512 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (4)].node), (yyvsp[(3) - (4)].str), -1, (yylsp[(1) - (4)]));
		;}
    break;

  case 512:
#line 516 "third_party/libpg_query/grammar/statements/select.y"
    {
			(yyval.node) = makeSampleOptions((yyvsp[(1) - (6)].node), (yyvsp[(3) - (6)].str), (yyvsp[(5) - (6)].ival), (yylsp[(1) - (6)]));
		;}
    break;

  case 513:
#line 523 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(2) - (2)].node);
				;}
    break;

  case 514:
#line 529 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 515:
#line 530 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 516:
#line 535 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = (yyvsp[(3) - (4)].ival); ;}
    break;

  case 517:
#line 536 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = -1; ;}
    break;

  case 518:
#line 540 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 519:
#line 542 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* LIMIT ALL is represented as a NULL constant */
					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
				;}
    break;

  case 520:
#line 549 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 521:
#line 569 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 522:
#line 571 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 523:
#line 573 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 524:
#line 577 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival),(yylsp[(1) - (1)])); ;}
    break;

  case 525:
#line 578 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str),(yylsp[(1) - (1)])); ;}
    break;

  case 526:
#line 582 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 527:
#line 583 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 528:
#line 586 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 529:
#line 587 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = 0; ;}
    break;

  case 530:
#line 612 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 531:
#line 613 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 532:
#line 617 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 533:
#line 618 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].node)); ;}
    break;

  case 534:
#line 622 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 535:
#line 623 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 536:
#line 628 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeGroupingSet(GROUPING_SET_EMPTY, NIL, (yylsp[(1) - (2)]));
				;}
    break;

  case 537:
#line 640 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 538:
#line 641 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 539:
#line 645 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 540:
#line 646 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 541:
#line 650 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 542:
#line 651 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 543:
#line 655 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 544:
#line 656 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 545:
#line 661 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGLockingClause *n = makeNode(PGLockingClause);
					n->lockedRels = (yyvsp[(2) - (3)].list);
					n->strength = (yyvsp[(1) - (3)].lockstrength);
					n->waitPolicy = (yyvsp[(3) - (3)].lockwaitpolicy);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 546:
#line 671 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = LCS_FORUPDATE; ;}
    break;

  case 547:
#line 672 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORNOKEYUPDATE; ;}
    break;

  case 548:
#line 673 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORSHARE; ;}
    break;

  case 549:
#line 674 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockstrength) = PG_LCS_FORKEYSHARE; ;}
    break;

  case 550:
#line 678 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 551:
#line 679 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 552:
#line 684 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = LockWaitError; ;}
    break;

  case 553:
#line 685 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = PGLockWaitSkip; ;}
    break;

  case 554:
#line 686 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.lockwaitpolicy) = PGLockWaitBlock; ;}
    break;

  case 555:
#line 696 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = makeNode(PGSelectStmt);
					n->valuesLists = list_make1((yyvsp[(3) - (4)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 556:
#line 702 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSelectStmt *n = (PGSelectStmt *) (yyvsp[(1) - (5)].node);
					n->valuesLists = lappend(n->valuesLists, (yyvsp[(4) - (5)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 557:
#line 719 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 558:
#line 720 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 559:
#line 724 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 560:
#line 725 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 561:
#line 732 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyvsp[(1) - (3)].range)->alias = (yyvsp[(2) - (3)].alias);
					(yyvsp[(1) - (3)].range)->sample = (yyvsp[(3) - (3)].node);
					(yyval.node) = (PGNode *) (yyvsp[(1) - (3)].range);
				;}
    break;

  case 562:
#line 738 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[(1) - (3)].node);
					n->alias = (PGAlias*) linitial((yyvsp[(2) - (3)].list));
					n->coldeflist = (PGList*) lsecond((yyvsp[(2) - (3)].list));
					n->sample = (yyvsp[(3) - (3)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 563:
#line 746 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = (PGRangeFunction *) (yyvsp[(2) - (3)].node);
					n->lateral = true;
					n->alias = (PGAlias*) linitial((yyvsp[(3) - (3)].list));
					n->coldeflist = (PGList*) lsecond((yyvsp[(3) - (3)].list));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 564:
#line 754 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeSubselect *n = makeNode(PGRangeSubselect);
					n->lateral = false;
					n->subquery = (yyvsp[(1) - (3)].node);
					n->alias = (yyvsp[(2) - (3)].alias);
					n->sample = (yyvsp[(3) - (3)].node);
					/*
					 * The SQL spec does not permit a subselect
					 * (<derived_table>) without an alias clause,
					 * so we don't either.  This avoids the problem
					 * of needing to invent a unique refname for it.
					 * That could be surmounted if there's sufficient
					 * popular demand, but for now let's just implement
					 * the spec and see if anyone complains.
					 * However, it does seem like a good idea to emit
					 * an error message that's better than "syntax error".
					 */
					if ((yyvsp[(2) - (3)].alias) == NULL)
					{
						if (IsA((yyvsp[(1) - (3)].node), PGSelectStmt) &&
							((PGSelectStmt *) (yyvsp[(1) - (3)].node))->valuesLists)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("VALUES in FROM must have an alias"),
									 errhint("For example, FROM (VALUES ...) [AS] foo."),
									 parser_errposition((yylsp[(1) - (3)]))));
						else
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("subquery in FROM must have an alias"),
									 errhint("For example, FROM (SELECT ...) [AS] foo."),
									 parser_errposition((yylsp[(1) - (3)]))));
					}
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 565:
#line 790 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeSubselect *n = makeNode(PGRangeSubselect);
					n->lateral = true;
					n->subquery = (yyvsp[(2) - (3)].node);
					n->alias = (yyvsp[(3) - (3)].alias);
					n->sample = NULL;
					/* same comment as above */
					if ((yyvsp[(3) - (3)].alias) == NULL)
					{
						if (IsA((yyvsp[(2) - (3)].node), PGSelectStmt) &&
							((PGSelectStmt *) (yyvsp[(2) - (3)].node))->valuesLists)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("VALUES in FROM must have an alias"),
									 errhint("For example, FROM (VALUES ...) [AS] foo."),
									 parser_errposition((yylsp[(2) - (3)]))));
						else
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("subquery in FROM must have an alias"),
									 errhint("For example, FROM (SELECT ...) [AS] foo."),
									 parser_errposition((yylsp[(2) - (3)]))));
					}
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 566:
#line 816 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) (yyvsp[(1) - (1)].jexpr);
				;}
    break;

  case 567:
#line 820 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyvsp[(2) - (4)].jexpr)->alias = (yyvsp[(4) - (4)].alias);
					(yyval.node) = (PGNode *) (yyvsp[(2) - (4)].jexpr);
				;}
    break;

  case 568:
#line 846 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.jexpr) = (yyvsp[(2) - (3)].jexpr);
				;}
    break;

  case 569:
#line 850 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* CROSS JOIN is same as unqualified inner join */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(4) - (4)].node);
					n->usingClause = NIL;
					n->quals = NULL;
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 570:
#line 863 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[(2) - (5)].jtype);
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (5)].node);
					n->rarg = (yyvsp[(4) - (5)].node);
					if ((yyvsp[(5) - (5)].node) != NULL && IsA((yyvsp[(5) - (5)].node), PGList))
						n->usingClause = (PGList *) (yyvsp[(5) - (5)].node); /* USING clause */
					else
						n->quals = (yyvsp[(5) - (5)].node); /* ON clause */
					n->location = (yylsp[(2) - (5)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 571:
#line 877 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* letting join_type reduce to empty doesn't work */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = false;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(3) - (4)].node);
					if ((yyvsp[(4) - (4)].node) != NULL && IsA((yyvsp[(4) - (4)].node), PGList))
						n->usingClause = (PGList *) (yyvsp[(4) - (4)].node); /* USING clause */
					else
						n->quals = (yyvsp[(4) - (4)].node); /* ON clause */
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 572:
#line 892 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = (yyvsp[(3) - (5)].jtype);
					n->isNatural = true;
					n->larg = (yyvsp[(1) - (5)].node);
					n->rarg = (yyvsp[(5) - (5)].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					n->location = (yylsp[(2) - (5)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 573:
#line 904 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* letting join_type reduce to empty doesn't work */
					PGJoinExpr *n = makeNode(PGJoinExpr);
					n->jointype = PG_JOIN_INNER;
					n->isNatural = true;
					n->larg = (yyvsp[(1) - (4)].node);
					n->rarg = (yyvsp[(4) - (4)].node);
					n->usingClause = NIL; /* figure out which columns later... */
					n->quals = NULL; /* fill later */
					n->location = (yylsp[(2) - (4)]);
					(yyval.jexpr) = n;
				;}
    break;

  case 574:
#line 920 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(2) - (5)].str);
					(yyval.alias)->colnames = (yyvsp[(4) - (5)].list);
				;}
    break;

  case 575:
#line 926 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(2) - (2)].str);
				;}
    break;

  case 576:
#line 931 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(1) - (4)].str);
					(yyval.alias)->colnames = (yyvsp[(3) - (4)].list);
				;}
    break;

  case 577:
#line 937 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.alias) = makeNode(PGAlias);
					(yyval.alias)->aliasname = (yyvsp[(1) - (1)].str);
				;}
    break;

  case 578:
#line 943 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.alias) = (yyvsp[(1) - (1)].alias); ;}
    break;

  case 579:
#line 944 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.alias) = NULL; ;}
    break;

  case 580:
#line 953 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2((yyvsp[(1) - (1)].alias), NIL);
				;}
    break;

  case 581:
#line 957 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(NULL, (yyvsp[(3) - (4)].list));
				;}
    break;

  case 582:
#line 961 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAlias *a = makeNode(PGAlias);
					a->aliasname = (yyvsp[(2) - (5)].str);
					(yyval.list) = list_make2(a, (yyvsp[(4) - (5)].list));
				;}
    break;

  case 583:
#line 967 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAlias *a = makeNode(PGAlias);
					a->aliasname = (yyvsp[(1) - (4)].str);
					(yyval.list) = list_make2(a, (yyvsp[(3) - (4)].list));
				;}
    break;

  case 584:
#line 973 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(NULL, NIL);
				;}
    break;

  case 585:
#line 978 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_FULL; ;}
    break;

  case 586:
#line 979 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_LEFT; ;}
    break;

  case 587:
#line 980 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_RIGHT; ;}
    break;

  case 588:
#line 981 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.jtype) = PG_JOIN_INNER; ;}
    break;

  case 589:
#line 985 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 590:
#line 986 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 591:
#line 998 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) (yyvsp[(3) - (4)].list); ;}
    break;

  case 592:
#line 999 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 593:
#line 1005 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* inheritance query, implicitly */
					(yyval.range) = (yyvsp[(1) - (1)].range);
					(yyval.range)->inh = true;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 594:
#line 1012 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* inheritance query, explicitly */
					(yyval.range) = (yyvsp[(1) - (2)].range);
					(yyval.range)->inh = true;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 595:
#line 1019 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* no inheritance */
					(yyval.range) = (yyvsp[(2) - (2)].range);
					(yyval.range)->inh = false;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 596:
#line 1026 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* no inheritance, SQL99-style syntax */
					(yyval.range) = (yyvsp[(3) - (4)].range);
					(yyval.range)->inh = false;
					(yyval.range)->alias = NULL;
				;}
    break;

  case 597:
#line 1058 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = makeNode(PGRangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[(2) - (2)].boolean);
					n->is_rowsfrom = false;
					n->functions = list_make1(list_make2((yyvsp[(1) - (2)].node), NIL));
					n->sample = NULL;
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 598:
#line 1069 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGRangeFunction *n = makeNode(PGRangeFunction);
					n->lateral = false;
					n->ordinality = (yyvsp[(6) - (6)].boolean);
					n->is_rowsfrom = true;
					n->functions = (yyvsp[(4) - (6)].list);
					n->sample = NULL;
					/* alias and coldeflist are set by table_ref production */
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 599:
#line 1082 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list)); ;}
    break;

  case 600:
#line 1086 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
    break;

  case 601:
#line 1087 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 602:
#line 1090 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 603:
#line 1091 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 604:
#line 1094 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 605:
#line 1095 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 606:
#line 1100 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 607:
#line 1101 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 608:
#line 1107 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 609:
#line 1111 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 610:
#line 1117 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnDef *n = makeNode(PGColumnDef);
					n->colname = (yyvsp[(1) - (3)].str);
					n->typeName = (yyvsp[(2) - (3)].typnam);
					n->inhcount = 0;
					n->is_local = true;
					n->is_not_null = false;
					n->is_from_type = false;
					n->storage = 0;
					n->raw_default = NULL;
					n->cooked_default = NULL;
					n->collClause = (PGCollateClause *) (yyvsp[(3) - (3)].node);
					n->collOid = InvalidOid;
					n->constraints = NIL;
					n->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 611:
#line 1138 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = NULL;
					n->collname = (yyvsp[(2) - (2)].list);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 612:
#line 1145 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 613:
#line 1158 "third_party/libpg_query/grammar/statements/select.y"
    {
             (yyval.list) = list_make1(list_make2(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].typnam)));
            ;}
    break;

  case 614:
#line 1161 "third_party/libpg_query/grammar/statements/select.y"
    {
             (yyval.list) = lappend((yyvsp[(1) - (4)].list), list_make2(makeString((yyvsp[(3) - (4)].str)), (yyvsp[(4) - (4)].typnam)));
            ;}
    break;

  case 617:
#line 1168 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[(2) - (2)].list);
				;}
    break;

  case 618:
#line 1173 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
					(yyval.typnam)->arrayBounds = (yyvsp[(3) - (3)].list);
					(yyval.typnam)->setof = true;
				;}
    break;

  case 619:
#line 1180 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (5)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(4) - (5)].ival)));
				;}
    break;

  case 620:
#line 1185 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (6)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(5) - (6)].ival)));
					(yyval.typnam)->setof = true;
				;}
    break;

  case 621:
#line 1191 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
				;}
    break;

  case 622:
#line 1196 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
					(yyval.typnam)->setof = true;
				;}
    break;

  case 623:
#line 1201 "third_party/libpg_query/grammar/statements/select.y"
    {
               (yyval.typnam) = SystemTypeName("struct");
               (yyval.typnam)->typmods = (yyvsp[(3) - (4)].list);
               (yyval.typnam)->location = (yylsp[(1) - (4)]);
               ;}
    break;

  case 624:
#line 1206 "third_party/libpg_query/grammar/statements/select.y"
    {
               (yyval.typnam) = SystemTypeName("map");
               (yyval.typnam)->typmods = (yyvsp[(3) - (4)].list);
               (yyval.typnam)->location = (yylsp[(1) - (4)]);
			;}
    break;

  case 625:
#line 1215 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeInteger(-1)); ;}
    break;

  case 626:
#line 1217 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = lappend((yyvsp[(1) - (4)].list), makeInteger((yyvsp[(3) - (4)].ival))); ;}
    break;

  case 627:
#line 1219 "third_party/libpg_query/grammar/statements/select.y"
    {  (yyval.list) = NIL; ;}
    break;

  case 628:
#line 1223 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 629:
#line 1224 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 630:
#line 1225 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 631:
#line 1226 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 632:
#line 1227 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 633:
#line 1229 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
				;}
    break;

  case 634:
#line 1234 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (4)].typnam);
					(yyval.typnam)->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											 makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
				;}
    break;

  case 635:
#line 1253 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 636:
#line 1254 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 637:
#line 1255 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 638:
#line 1256 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
    break;

  case 639:
#line 1268 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = makeTypeName((yyvsp[(1) - (2)].str));
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 640:
#line 1274 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(1) - (3)].str)), (yyvsp[(2) - (3)].list)));
					(yyval.typnam)->typmods = (yyvsp[(3) - (3)].list);
					(yyval.typnam)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 641:
#line 1281 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 642:
#line 1282 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 643:
#line 1289 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 644:
#line 1294 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 645:
#line 1299 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int2");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 646:
#line 1304 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("int8");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 647:
#line 1309 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float4");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 648:
#line 1314 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(2) - (2)].typnam);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 649:
#line 1319 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float8");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 650:
#line 1324 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 651:
#line 1330 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 652:
#line 1336 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("numeric");
					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 653:
#line 1342 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("bool");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 654:
#line 1349 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Check FLOAT() precision limits assuming IEEE floating
					 * types - thomas 1997-09-18
					 */
					if ((yyvsp[(2) - (3)].ival) < 1)
						ereport(ERROR,
								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be at least 1 bit"),
								 parser_errposition((yylsp[(2) - (3)]))));
					else if ((yyvsp[(2) - (3)].ival) <= 24)
						(yyval.typnam) = SystemTypeName("float4");
					else if ((yyvsp[(2) - (3)].ival) <= 53)
						(yyval.typnam) = SystemTypeName("float8");
					else
						ereport(ERROR,
								(errcode(PG_ERRCODE_INVALID_PARAMETER_VALUE),
								 errmsg("precision for type float must be less than 54 bits"),
								 parser_errposition((yylsp[(2) - (3)]))));
				;}
    break;

  case 655:
#line 1370 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("float4");
				;}
    break;

  case 656:
#line 1380 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 657:
#line 1384 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 658:
#line 1392 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 659:
#line 1396 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
					(yyval.typnam)->typmods = NIL;
				;}
    break;

  case 660:
#line 1404 "third_party/libpg_query/grammar/statements/select.y"
    {
					const char *typname;

					typname = (yyvsp[(2) - (5)].boolean) ? "varbit" : "bit";
					(yyval.typnam) = SystemTypeName(typname);
					(yyval.typnam)->typmods = (yyvsp[(4) - (5)].list);
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 661:
#line 1416 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* bit defaults to bit(1), varbit to no limit */
					if ((yyvsp[(2) - (2)].boolean))
					{
						(yyval.typnam) = SystemTypeName("varbit");
					}
					else
					{
						(yyval.typnam) = SystemTypeName("bit");
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					}
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 662:
#line 1437 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 663:
#line 1441 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 664:
#line 1447 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
				;}
    break;

  case 665:
#line 1451 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* Length was not specified so allow to be unrestricted.
					 * This handles problems with fixed-length (bpchar) strings
					 * which in column definitions must default to a length
					 * of one, but should not be constrained if the length
					 * was not specified.
					 */
					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
					(yyval.typnam)->typmods = NIL;
				;}
    break;

  case 666:
#line 1464 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (4)].conststr));
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
					(yyval.typnam)->location = (yylsp[(1) - (4)]);
				;}
    break;

  case 667:
#line 1472 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (1)].conststr));
					/* char defaults to char(1), varchar to no limit */
					if (strcmp((yyvsp[(1) - (1)].conststr), "bpchar") == 0)
						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 668:
#line 1482 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 669:
#line 1484 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 670:
#line 1486 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "varchar"; ;}
    break;

  case 671:
#line 1488 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 672:
#line 1490 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 673:
#line 1492 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
    break;

  case 674:
#line 1496 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 675:
#line 1497 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 676:
#line 1505 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(5) - (5)].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 677:
#line 1514 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].boolean))
						(yyval.typnam) = SystemTypeName("timestamptz");
					else
						(yyval.typnam) = SystemTypeName("timestamp");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 678:
#line 1522 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(5) - (5)].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.typnam)->location = (yylsp[(1) - (5)]);
				;}
    break;

  case 679:
#line 1531 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].boolean))
						(yyval.typnam) = SystemTypeName("timetz");
					else
						(yyval.typnam) = SystemTypeName("time");
					(yyval.typnam)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 680:
#line 1542 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.typnam) = SystemTypeName("interval");
					(yyval.typnam)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 681:
#line 1549 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = true; ;}
    break;

  case 682:
#line 1550 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 683:
#line 1551 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.boolean) = false; ;}
    break;

  case 700:
#line 1580 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR), (yylsp[(1) - (1)]))); ;}
    break;

  case 701:
#line 1582 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MONTH), (yylsp[(1) - (1)]))); ;}
    break;

  case 702:
#line 1584 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY), (yylsp[(1) - (1)]))); ;}
    break;

  case 703:
#line 1586 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR), (yylsp[(1) - (1)]))); ;}
    break;

  case 704:
#line 1588 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MINUTE), (yylsp[(1) - (1)]))); ;}
    break;

  case 705:
#line 1590 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(SECOND), (yylsp[(1) - (1)]))); ;}
    break;

  case 706:
#line 1592 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MILLISECOND), (yylsp[(1) - (1)]))); ;}
    break;

  case 707:
#line 1594 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MICROSECOND), (yylsp[(1) - (1)]))); ;}
    break;

  case 708:
#line 1596 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR) |
												 INTERVAL_MASK(MONTH), (yylsp[(1) - (3)])));
				;}
    break;

  case 709:
#line 1601 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR), (yylsp[(1) - (3)])));
				;}
    break;

  case 710:
#line 1606 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
				;}
    break;

  case 711:
#line 1612 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
												 INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
				;}
    break;

  case 712:
#line 1619 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
				;}
    break;

  case 713:
#line 1624 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR) |
												 INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
				;}
    break;

  case 714:
#line 1630 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MINUTE) |
												 INTERVAL_MASK(SECOND), (yylsp[(1) - (3)])));
				;}
    break;

  case 715:
#line 1635 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 716:
#line 1666 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 717:
#line 1669 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), (yylsp[(2) - (3)])); ;}
    break;

  case 718:
#line 1671 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCollateClause *n = makeNode(PGCollateClause);
					n->arg = (yyvsp[(1) - (3)].node);
					n->collname = (yyvsp[(3) - (3)].list);
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 719:
#line 1679 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("timezone"),
											   list_make2((yyvsp[(5) - (5)].node), (yyvsp[(1) - (5)].node)),
											   (yylsp[(2) - (5)]));
				;}
    break;

  case 720:
#line 1694 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 721:
#line 1696 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 722:
#line 1698 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 723:
#line 1700 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 724:
#line 1702 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 725:
#line 1704 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 726:
#line 1706 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 727:
#line 1708 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 728:
#line 1710 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 729:
#line 1712 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 730:
#line 1714 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 731:
#line 1716 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 732:
#line 1718 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 733:
#line 1720 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 734:
#line 1723 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 735:
#line 1725 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 736:
#line 1727 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
    break;

  case 737:
#line 1730 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeAndExpr((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 738:
#line 1732 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeOrExpr((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 739:
#line 1734 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeNotExpr((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 740:
#line 1736 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeNotExpr((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 741:
#line 1739 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_GLOB, "~~~",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 742:
#line 1744 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "~~",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 743:
#line 1749 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make3((yyvsp[(1) - (5)].node), (yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 744:
#line 1756 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_LIKE, "!~~",
												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
				;}
    break;

  case 745:
#line 1761 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("not_like_escape"),
											   list_make3((yyvsp[(1) - (6)].node), (yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 746:
#line 1768 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "~~*",
												   (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
				;}
    break;

  case 747:
#line 1773 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("like_escape"),
											   list_make2((yyvsp[(3) - (5)].node), (yyvsp[(5) - (5)].node)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "~~*",
												   (yyvsp[(1) - (5)].node), (PGNode *) n, (yylsp[(2) - (5)]));
				;}
    break;

  case 748:
#line 1781 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "!~~*",
												   (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
				;}
    break;

  case 749:
#line 1786 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("not_like_escape"),
											   list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_ILIKE, "!~~*",
												   (yyvsp[(1) - (6)].node), (PGNode *) n, (yylsp[(2) - (6)]));
				;}
    break;

  case 750:
#line 1795 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(4) - (4)].node), makeNullAConst(-1)),
											   (yylsp[(2) - (4)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
												   (yyvsp[(1) - (4)].node), (PGNode *) n, (yylsp[(2) - (4)]));
				;}
    break;

  case 751:
#line 1803 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
											   (yylsp[(2) - (6)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "~",
												   (yyvsp[(1) - (6)].node), (PGNode *) n, (yylsp[(2) - (6)]));
				;}
    break;

  case 752:
#line 1811 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(5) - (5)].node), makeNullAConst(-1)),
											   (yylsp[(2) - (5)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
												   (yyvsp[(1) - (5)].node), (PGNode *) n, (yylsp[(2) - (5)]));
				;}
    break;

  case 753:
#line 1819 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall(SystemFuncName("similar_escape"),
											   list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
											   (yylsp[(2) - (7)]));
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_SIMILAR, "!~",
												   (yyvsp[(1) - (7)].node), (PGNode *) n, (yylsp[(2) - (7)]));
				;}
    break;

  case 754:
#line 1837 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					n->nulltesttype = PG_IS_NULL;
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 755:
#line 1845 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
					n->nulltesttype = PG_IS_NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 756:
#line 1853 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 757:
#line 1861 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 758:
#line 1869 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNullTest *n = makeNode(PGNullTest);
					n->arg = (PGExpr *) (yyvsp[(1) - (2)].node);
					n->nulltesttype = IS_NOT_NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 759:
#line 1876 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGFuncCall *n = makeFuncCall(SystemFuncName("row"), (yyvsp[(1) - (1)].list), (yylsp[(1) - (1)]));
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 760:
#line 1881 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGLambdaFunction *n = makeNode(PGLambdaFunction);
				n->parameters = (yyvsp[(1) - (3)].list);
				n->function = (yyvsp[(3) - (3)].node);
				n->location = (yylsp[(2) - (3)]);
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 761:
#line 1889 "third_party/libpg_query/grammar/statements/select.y"
    {
				PGLambdaFunction *n = makeNode(PGLambdaFunction);
				n->parameters = list_make1((yyvsp[(1) - (3)].node));
				n->function = (yyvsp[(3) - (3)].node);
				n->location = (yylsp[(2) - (3)]);
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 762:
#line 1897 "third_party/libpg_query/grammar/statements/select.y"
    {
					if (list_length((yyvsp[(1) - (3)].list)) != 2)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on left side of OVERLAPS expression"),
								 parser_errposition((yylsp[(1) - (3)]))));
					if (list_length((yyvsp[(3) - (3)].list)) != 2)
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
								 errmsg("wrong number of parameters on right side of OVERLAPS expression"),
								 parser_errposition((yylsp[(3) - (3)]))));
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlaps"),
											   list_concat((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)),
											   (yylsp[(2) - (3)]));
				;}
    break;

  case 763:
#line 1913 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = PG_IS_TRUE;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 764:
#line 1921 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_TRUE;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 765:
#line 1929 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = IS_FALSE;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 766:
#line 1937 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_FALSE;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 767:
#line 1945 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (3)].node);
					b->booltesttype = IS_UNKNOWN;
					b->location = (yylsp[(2) - (3)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 768:
#line 1953 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGBooleanTest *b = makeNode(PGBooleanTest);
					b->arg = (PGExpr *) (yyvsp[(1) - (4)].node);
					b->booltesttype = IS_NOT_UNKNOWN;
					b->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)b;
				;}
    break;

  case 769:
#line 1961 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
				;}
    break;

  case 770:
#line 1965 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 771:
#line 1969 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
				;}
    break;

  case 772:
#line 1973 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
				;}
    break;

  case 773:
#line 1977 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN,
												   "BETWEEN",
												   (yyvsp[(1) - (6)].node),
												   (PGNode *) list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
												   (yylsp[(2) - (6)]));
				;}
    break;

  case 774:
#line 1985 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN,
												   "NOT BETWEEN",
												   (yyvsp[(1) - (7)].node),
												   (PGNode *) list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
												   (yylsp[(2) - (7)]));
				;}
    break;

  case 775:
#line 1993 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_BETWEEN_SYM,
												   "BETWEEN SYMMETRIC",
												   (yyvsp[(1) - (6)].node),
												   (PGNode *) list_make2((yyvsp[(4) - (6)].node), (yyvsp[(6) - (6)].node)),
												   (yylsp[(2) - (6)]));
				;}
    break;

  case 776:
#line 2001 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_BETWEEN_SYM,
												   "NOT BETWEEN SYMMETRIC",
												   (yyvsp[(1) - (7)].node),
												   (PGNode *) list_make2((yyvsp[(5) - (7)].node), (yyvsp[(7) - (7)].node)),
												   (yylsp[(2) - (7)]));
				;}
    break;

  case 777:
#line 2009 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* in_expr returns a PGSubLink or a list of a_exprs */
					if (IsA((yyvsp[(3) - (3)].node), PGSubLink))
					{
						/* generate foo = ANY (subquery) */
						PGSubLink *n = (PGSubLink *) (yyvsp[(3) - (3)].node);
						n->subLinkType = PG_ANY_SUBLINK;
						n->subLinkId = 0;
						n->testexpr = (yyvsp[(1) - (3)].node);
						n->operName = NIL;		/* show it's IN not = ANY */
						n->location = (yylsp[(2) - (3)]);
						(yyval.node) = (PGNode *)n;
					}
					else
					{
						/* generate scalar IN expression */
						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
					}
				;}
    break;

  case 778:
#line 2029 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* in_expr returns a PGSubLink or a list of a_exprs */
					if (IsA((yyvsp[(4) - (4)].node), PGSubLink))
					{
						/* generate NOT (foo = ANY (subquery)) */
						/* Make an = ANY node */
						PGSubLink *n = (PGSubLink *) (yyvsp[(4) - (4)].node);
						n->subLinkType = PG_ANY_SUBLINK;
						n->subLinkId = 0;
						n->testexpr = (yyvsp[(1) - (4)].node);
						n->operName = NIL;		/* show it's IN not = ANY */
						n->location = (yylsp[(2) - (4)]);
						/* Stick a NOT on top; must have same parse location */
						(yyval.node) = makeNotExpr((PGNode *) n, (yylsp[(2) - (4)]));
					}
					else
					{
						/* generate scalar NOT IN expression */
						(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_IN, "<>", (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
					}
				;}
    break;

  case 779:
#line 2051 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = (yyvsp[(3) - (4)].subquerytype);
					n->subLinkId = 0;
					n->testexpr = (yyvsp[(1) - (4)].node);
					n->operName = (yyvsp[(2) - (4)].list);
					n->subselect = (yyvsp[(4) - (4)].node);
					n->location = (yylsp[(2) - (4)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 780:
#line 2062 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(3) - (6)].subquerytype) == PG_ANY_SUBLINK)
						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ANY, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
					else
						(yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP_ALL, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 781:
#line 2069 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * The SQL spec only allows DEFAULT in "contextually typed
					 * expressions", but for us, it's easier to allow it in
					 * any a_expr and then throw error during parse analysis
					 * if it's in an inappropriate context.  This way also
					 * lets us say something smarter than "syntax error".
					 */
					PGSetToDefault *n = makeNode(PGSetToDefault);
					/* parse analysis will fill in the rest */
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 782:
#line 2094 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 783:
#line 2096 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), (yylsp[(2) - (3)])); ;}
    break;

  case 784:
#line 2098 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 785:
#line 2100 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 786:
#line 2102 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 787:
#line 2104 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 788:
#line 2106 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 789:
#line 2108 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 790:
#line 2110 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 791:
#line 2112 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 792:
#line 2114 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 793:
#line 2116 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 794:
#line 2118 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 795:
#line 2120 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 796:
#line 2122 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, ">=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 797:
#line 2124 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "<>", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 798:
#line 2126 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
    break;

  case 799:
#line 2128 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
    break;

  case 800:
#line 2130 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *) makeAExpr(PG_AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
    break;

  case 801:
#line 2132 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
				;}
    break;

  case 802:
#line 2136 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NOT_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)]));
				;}
    break;

  case 803:
#line 2140 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (PGNode *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
				;}
    break;

  case 804:
#line 2144 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (PGNode *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
				;}
    break;

  case 805:
#line 2157 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 806:
#line 2158 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 807:
#line 2160 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = makeParamRef(0, (yylsp[(1) - (2)]));
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = makeParamRef(0, (yylsp[(1) - (2)]));
				;}
    break;

  case 808:
#line 2172 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGParamRef *p = makeNode(PGParamRef);
					p->number = (yyvsp[(1) - (2)].ival);
					p->location = (yylsp[(1) - (2)]);
					if ((yyvsp[(2) - (2)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (PGNode *) p;
						n->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
						(yyval.node) = (PGNode *) n;
					}
					else
						(yyval.node) = (PGNode *) p;
				;}
    break;

  case 809:
#line 2187 "third_party/libpg_query/grammar/statements/select.y"
    {
					if ((yyvsp[(4) - (4)].list))
					{
						PGAIndirection *n = makeNode(PGAIndirection);
						n->arg = (yyvsp[(2) - (4)].node);
						n->indirection = check_indirection((yyvsp[(4) - (4)].list), yyscanner);
						(yyval.node) = (PGNode *)n;
					}
					else
						(yyval.node) = (yyvsp[(2) - (4)].node);
				;}
    break;

  case 810:
#line 2199 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 811:
#line 2201 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 812:
#line 2203 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_EXPR_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(1) - (1)].node);
					n->location = (yylsp[(1) - (1)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 813:
#line 2214 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Because the select_with_parens nonterminal is designed
					 * to "eat" as many levels of parens as possible, the
					 * '(' a_expr ')' opt_indirection production above will
					 * fail to match a sub-SELECT with indirection decoration;
					 * the sub-SELECT won't be regarded as an a_expr as long
					 * as there are parens around it.  To support applying
					 * subscripting or field selection to a sub-SELECT result,
					 * we need this redundant-looking production.
					 */
					PGSubLink *n = makeNode(PGSubLink);
					PGAIndirection *a = makeNode(PGAIndirection);
					n->subLinkType = PG_EXPR_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(1) - (2)].node);
					n->location = (yylsp[(1) - (2)]);
					a->arg = (PGNode *)n;
					a->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.node) = (PGNode *)a;
				;}
    break;

  case 814:
#line 2238 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subLinkType = PG_EXISTS_SUBLINK;
					n->subLinkId = 0;
					n->testexpr = NULL;
					n->operName = NIL;
					n->subselect = (yyvsp[(2) - (2)].node);
					n->location = (yylsp[(1) - (2)]);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 815:
#line 2251 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall((yyvsp[(1) - (3)].list), NIL, (yylsp[(1) - (3)]));
				;}
    break;

  case 816:
#line 2255 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (5)].list), (yyvsp[(3) - (5)].list), (yylsp[(1) - (5)]));
					n->agg_order = (yyvsp[(4) - (5)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 817:
#line 2261 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), list_make1((yyvsp[(4) - (6)].node)), (yylsp[(1) - (6)]));
					n->func_variadic = true;
					n->agg_order = (yyvsp[(5) - (6)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 818:
#line 2268 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (8)].list), lappend((yyvsp[(3) - (8)].list), (yyvsp[(6) - (8)].node)), (yylsp[(1) - (8)]));
					n->func_variadic = true;
					n->agg_order = (yyvsp[(7) - (8)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 819:
#line 2275 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), (yyvsp[(4) - (6)].list), (yylsp[(1) - (6)]));
					n->agg_order = (yyvsp[(5) - (6)].list);
					/* Ideally we'd mark the PGFuncCall node to indicate
					 * "must be an aggregate", but there's no provision
					 * for that in PGFuncCall at the moment.
					 */
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 820:
#line 2285 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (6)].list), (yyvsp[(4) - (6)].list), (yylsp[(1) - (6)]));
					n->agg_order = (yyvsp[(5) - (6)].list);
					n->agg_distinct = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 821:
#line 2292 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * We consider AGGREGATE(*) to invoke a parameterless
					 * aggregate.  This does the right thing for COUNT(*),
					 * and there are no other aggregates in SQL that accept
					 * '*' as parameter.
					 *
					 * The PGFuncCall node is also marked agg_star = true,
					 * so that later processing can detect what the argument
					 * really was.
					 */
					PGFuncCall *n = makeFuncCall((yyvsp[(1) - (4)].list), NIL, (yylsp[(1) - (4)]));
					n->agg_star = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 822:
#line 2320 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGFuncCall *n = (PGFuncCall *) (yyvsp[(1) - (4)].node);
					/*
					 * The order clause for WITHIN GROUP and the one for
					 * plain-aggregate ORDER BY share a field, so we have to
					 * check here that at most one is present.  We also check
					 * for DISTINCT and VARIADIC here to give a better error
					 * location.  Other consistency checks are deferred to
					 * parse analysis.
					 */
					if ((yyvsp[(2) - (4)].list) != NIL)
					{
						if (n->agg_order != NIL)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use multiple ORDER BY clauses with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						if (n->agg_distinct)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use DISTINCT with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						if (n->func_variadic)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("cannot use VARIADIC with WITHIN GROUP"),
									 parser_errposition((yylsp[(2) - (4)]))));
						n->agg_order = (yyvsp[(2) - (4)].list);
						n->agg_within_group = true;
					}
					n->agg_filter = (yyvsp[(3) - (4)].node);
					n->over = (yyvsp[(4) - (4)].windef);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 823:
#line 2355 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 824:
#line 2365 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 825:
#line 2366 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 826:
#line 2374 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("pg_collation_for"),
											   list_make1((yyvsp[(4) - (5)].node)),
											   (yylsp[(1) - (5)]));
				;}
    break;

  case 827:
#line 2380 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_DATE, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 828:
#line 2384 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIME, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 829:
#line 2388 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIME_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 830:
#line 2392 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIMESTAMP, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 831:
#line 2396 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_TIMESTAMP_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 832:
#line 2400 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIME, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 833:
#line 2404 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIME_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 834:
#line 2408 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIMESTAMP, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 835:
#line 2412 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_LOCALTIMESTAMP_N, (yyvsp[(3) - (4)].ival), (yylsp[(1) - (4)]));
				;}
    break;

  case 836:
#line 2416 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_ROLE, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 837:
#line 2420 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 838:
#line 2424 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_SESSION_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 839:
#line 2428 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_USER, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 840:
#line 2432 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_CATALOG, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 841:
#line 2436 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeSQLValueFunction(PG_SVFOP_CURRENT_SCHEMA, -1, (yylsp[(1) - (1)]));
				;}
    break;

  case 842:
#line 2440 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = makeTypeCast((yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].typnam), (yylsp[(1) - (6)])); ;}
    break;

  case 843:
#line 2442 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("date_part"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 844:
#line 2446 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* overlay(A PLACING B FROM C FOR D) is converted to
					 * overlay(A, B, C, D)
					 * overlay(A PLACING B FROM C) is converted to
					 * overlay(A, B, C)
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("overlay"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 845:
#line 2455 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* position(A in B) is converted to position(B, A) */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("position"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 846:
#line 2460 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* substring(A from B for C) is converted to
					 * substring(A, B, C) - thomas 2000-11-28
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("substring"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 847:
#line 2467 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* TREAT(expr AS target) converts expr of a particular type to target,
					 * which is defined to be a subtype of the original expression.
					 * In SQL99, this is intended for use with structured UDTs,
					 * but let's make this a generally useful form allowing stronger
					 * coercions than are handled by implicit casting.
					 *
					 * Convert SystemTypeName() to SystemFuncName() even though
					 * at the moment they result in the same thing.
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName(((PGValue *)llast((yyvsp[(5) - (6)].typnam)->names))->val.str),
												list_make1((yyvsp[(3) - (6)].node)),
												(yylsp[(1) - (6)]));
				;}
    break;

  case 848:
#line 2482 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* various trim expressions are defined in SQL
					 * - thomas 1997-07-19
					 */
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("trim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 849:
#line 2489 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("ltrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 850:
#line 2493 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("rtrim"), (yyvsp[(4) - (5)].list), (yylsp[(1) - (5)]));
				;}
    break;

  case 851:
#line 2497 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeFuncCall(SystemFuncName("trim"), (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
				;}
    break;

  case 852:
#line 2501 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeSimpleAExpr(PG_AEXPR_NULLIF, "=", (yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(1) - (6)]));
				;}
    break;

  case 853:
#line 2505 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCoalesceExpr *c = makeNode(PGCoalesceExpr);
					c->args = (yyvsp[(3) - (4)].list);
					c->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)c;
				;}
    break;

  case 854:
#line 2518 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
    break;

  case 855:
#line 2519 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 856:
#line 2523 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(4) - (5)].node); ;}
    break;

  case 857:
#line 2524 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 858:
#line 2532 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 859:
#line 2533 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 860:
#line 2537 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].windef)); ;}
    break;

  case 861:
#line 2539 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].windef)); ;}
    break;

  case 862:
#line 2544 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(3) - (3)].windef);
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.windef) = n;
				;}
    break;

  case 863:
#line 2552 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.windef) = (yyvsp[(2) - (2)].windef); ;}
    break;

  case 864:
#line 2554 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->name = (yyvsp[(2) - (2)].str);
					n->refname = NULL;
					n->partitionClause = NIL;
					n->orderClause = NIL;
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					n->location = (yylsp[(2) - (2)]);
					(yyval.windef) = n;
				;}
    break;

  case 865:
#line 2567 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.windef) = NULL; ;}
    break;

  case 866:
#line 2572 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->name = NULL;
					n->refname = (yyvsp[(2) - (6)].str);
					n->partitionClause = (yyvsp[(3) - (6)].list);
					n->orderClause = (yyvsp[(4) - (6)].list);
					/* copy relevant fields of opt_frame_clause */
					n->frameOptions = (yyvsp[(5) - (6)].windef)->frameOptions;
					n->startOffset = (yyvsp[(5) - (6)].windef)->startOffset;
					n->endOffset = (yyvsp[(5) - (6)].windef)->endOffset;
					n->location = (yylsp[(1) - (6)]);
					(yyval.windef) = n;
				;}
    break;

  case 867:
#line 2597 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 868:
#line 2598 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = NULL; ;}
    break;

  case 869:
#line 2601 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
    break;

  case 870:
#line 2602 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 871:
#line 2614 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(2) - (2)].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_RANGE;
					if (n->frameOptions & (FRAMEOPTION_START_VALUE_PRECEDING |
										   FRAMEOPTION_END_VALUE_PRECEDING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("RANGE PRECEDING is only supported with UNBOUNDED"),
								 parser_errposition((yylsp[(1) - (2)]))));
					if (n->frameOptions & (FRAMEOPTION_START_VALUE_FOLLOWING |
										   FRAMEOPTION_END_VALUE_FOLLOWING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("RANGE FOLLOWING is only supported with UNBOUNDED"),
								 parser_errposition((yylsp[(1) - (2)]))));
					(yyval.windef) = n;
				;}
    break;

  case 872:
#line 2632 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(2) - (2)].windef);
					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_ROWS;
					(yyval.windef) = n;
				;}
    break;

  case 873:
#line 2638 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_DEFAULTS;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 874:
#line 2648 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = (yyvsp[(1) - (1)].windef);
					/* reject invalid cases */
					if (n->frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[(1) - (1)]))));
					if (n->frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot end with current row"),
								 parser_errposition((yylsp[(1) - (1)]))));
					n->frameOptions |= FRAMEOPTION_END_CURRENT_ROW;
					(yyval.windef) = n;
				;}
    break;

  case 875:
#line 2665 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n1 = (yyvsp[(2) - (4)].windef);
					PGWindowDef *n2 = (yyvsp[(4) - (4)].windef);
					/* form merged options */
					int		frameOptions = n1->frameOptions;
					/* shift converts START_ options to END_ options */
					frameOptions |= n2->frameOptions << 1;
					frameOptions |= FRAMEOPTION_BETWEEN;
					/* reject invalid cases */
					if (frameOptions & FRAMEOPTION_START_UNBOUNDED_FOLLOWING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame start cannot be UNBOUNDED FOLLOWING"),
								 parser_errposition((yylsp[(2) - (4)]))));
					if (frameOptions & FRAMEOPTION_END_UNBOUNDED_PRECEDING)
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame end cannot be UNBOUNDED PRECEDING"),
								 parser_errposition((yylsp[(4) - (4)]))));
					if ((frameOptions & FRAMEOPTION_START_CURRENT_ROW) &&
						(frameOptions & FRAMEOPTION_END_VALUE_PRECEDING))
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from current row cannot have preceding rows"),
								 parser_errposition((yylsp[(4) - (4)]))));
					if ((frameOptions & FRAMEOPTION_START_VALUE_FOLLOWING) &&
						(frameOptions & (FRAMEOPTION_END_VALUE_PRECEDING |
										 FRAMEOPTION_END_CURRENT_ROW)))
						ereport(ERROR,
								(errcode(PG_ERRCODE_WINDOWING_ERROR),
								 errmsg("frame starting from following row cannot have preceding rows"),
								 parser_errposition((yylsp[(4) - (4)]))));
					n1->frameOptions = frameOptions;
					n1->endOffset = n2->startOffset;
					(yyval.windef) = n1;
				;}
    break;

  case 876:
#line 2710 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_PRECEDING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 877:
#line 2718 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_UNBOUNDED_FOLLOWING;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 878:
#line 2726 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_CURRENT_ROW;
					n->startOffset = NULL;
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 879:
#line 2734 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_PRECEDING;
					n->startOffset = (yyvsp[(1) - (2)].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 880:
#line 2742 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGWindowDef *n = makeNode(PGWindowDef);
					n->frameOptions = FRAMEOPTION_START_VALUE_FOLLOWING;
					n->startOffset = (yyvsp[(1) - (2)].node);
					n->endOffset = NULL;
					(yyval.windef) = n;
				;}
    break;

  case 881:
#line 2762 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 882:
#line 2763 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 883:
#line 2766 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list);;}
    break;

  case 884:
#line 2767 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(2) - (5)].list), (yyvsp[(4) - (5)].node)); ;}
    break;

  case 885:
#line 2770 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
    break;

  case 886:
#line 2771 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ANY_SUBLINK; ;}
    break;

  case 887:
#line 2772 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.subquerytype) = PG_ALL_SUBLINK; ;}
    break;

  case 888:
#line 2775 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 889:
#line 2776 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) (yyvsp[(1) - (1)].conststr); ;}
    break;

  case 890:
#line 2779 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "+"; ;}
    break;

  case 891:
#line 2780 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "-"; ;}
    break;

  case 892:
#line 2781 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "*"; ;}
    break;

  case 893:
#line 2782 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "/"; ;}
    break;

  case 894:
#line 2783 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "%"; ;}
    break;

  case 895:
#line 2784 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "^"; ;}
    break;

  case 896:
#line 2785 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<"; ;}
    break;

  case 897:
#line 2786 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = ">"; ;}
    break;

  case 898:
#line 2787 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "="; ;}
    break;

  case 899:
#line 2788 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<="; ;}
    break;

  case 900:
#line 2789 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = ">="; ;}
    break;

  case 901:
#line 2790 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.conststr) = "<>"; ;}
    break;

  case 902:
#line 2794 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 903:
#line 2796 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 904:
#line 2801 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 905:
#line 2803 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 906:
#line 2808 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 907:
#line 2810 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
    break;

  case 908:
#line 2812 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~")); ;}
    break;

  case 909:
#line 2814 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~")); ;}
    break;

  case 910:
#line 2816 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~~")); ;}
    break;

  case 911:
#line 2818 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~~")); ;}
    break;

  case 912:
#line 2820 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("~~*")); ;}
    break;

  case 913:
#line 2822 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString("!~~*")); ;}
    break;

  case 914:
#line 2836 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 915:
#line 2838 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lcons(makeString((yyvsp[(1) - (3)].str)), (yyvsp[(3) - (3)].list)); ;}
    break;

  case 916:
#line 2842 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 917:
#line 2846 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 918:
#line 2853 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
				;}
    break;

  case 919:
#line 2857 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 920:
#line 2863 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (yyvsp[(1) - (1)].node);
				;}
    break;

  case 921:
#line 2867 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[(1) - (3)].str);
					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) na;
				;}
    break;

  case 922:
#line 2876 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGNamedArgExpr *na = makeNode(PGNamedArgExpr);
					na->name = (yyvsp[(1) - (3)].str);
					na->arg = (PGExpr *) (yyvsp[(3) - (3)].node);
					na->argnumber = -1;		/* until determined */
					na->location = (yylsp[(1) - (3)]);
					(yyval.node) = (PGNode *) na;
				;}
    break;

  case 923:
#line 2886 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].typnam)); ;}
    break;

  case 924:
#line 2887 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].typnam)); ;}
    break;

  case 925:
#line 2892 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2(makeStringConst((yyvsp[(1) - (3)].str), (yylsp[(1) - (3)])), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 926:
#line 2895 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 927:
#line 2902 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 928:
#line 2903 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "year"; ;}
    break;

  case 929:
#line 2904 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "month"; ;}
    break;

  case 930:
#line 2905 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "day"; ;}
    break;

  case 931:
#line 2906 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "hour"; ;}
    break;

  case 932:
#line 2907 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "minute"; ;}
    break;

  case 933:
#line 2908 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "second"; ;}
    break;

  case 934:
#line 2909 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "millisecond"; ;}
    break;

  case 935:
#line 2910 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (char*) "microsecond"; ;}
    break;

  case 936:
#line 2911 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 937:
#line 2922 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make4((yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].node), (yyvsp[(3) - (4)].node), (yyvsp[(4) - (4)].node));
				;}
    break;

  case 938:
#line 2926 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 939:
#line 2933 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 940:
#line 2939 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make2((yyvsp[(3) - (3)].node), (yyvsp[(1) - (3)].node)); ;}
    break;

  case 941:
#line 2940 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 942:
#line 2957 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
				;}
    break;

  case 943:
#line 2961 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* not legal per SQL99, but might as well allow it */
					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yyvsp[(2) - (3)].node));
				;}
    break;

  case 944:
#line 2966 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node));
				;}
    break;

  case 945:
#line 2970 "third_party/libpg_query/grammar/statements/select.y"
    {
					/*
					 * Since there are no cases where this syntax allows
					 * a textual FOR value, we forcibly cast the argument
					 * to int4.  The possible matches in pg_proc are
					 * substring(text,int4) and substring(text,text),
					 * and we don't want the parser to choose the latter,
					 * which it is likely to do if the second argument
					 * is unknown or doesn't have an implicit cast to int4.
					 */
					(yyval.list) = list_make3((yyvsp[(1) - (2)].node), makeIntConst(1, -1),
									makeTypeCast((yyvsp[(2) - (2)].node),
												 SystemTypeName("int4"), -1));
				;}
    break;

  case 946:
#line 2985 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.list) = (yyvsp[(1) - (1)].list);
				;}
    break;

  case 947:
#line 2989 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 948:
#line 2993 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 949:
#line 2996 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 950:
#line 2999 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(3) - (3)].list), (yyvsp[(1) - (3)].node)); ;}
    break;

  case 951:
#line 3000 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 952:
#line 3001 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 953:
#line 3005 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGSubLink *n = makeNode(PGSubLink);
					n->subselect = (yyvsp[(1) - (1)].node);
					/* other fields will be filled later */
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 954:
#line 3011 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (PGNode *)(yyvsp[(2) - (3)].list); ;}
    break;

  case 955:
#line 3022 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCaseExpr *c = makeNode(PGCaseExpr);
					c->casetype = InvalidOid; /* not analyzed yet */
					c->arg = (PGExpr *) (yyvsp[(2) - (5)].node);
					c->args = (yyvsp[(3) - (5)].list);
					c->defresult = (PGExpr *) (yyvsp[(4) - (5)].node);
					c->location = (yylsp[(1) - (5)]);
					(yyval.node) = (PGNode *)c;
				;}
    break;

  case 956:
#line 3035 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 957:
#line 3036 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 958:
#line 3041 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGCaseWhen *w = makeNode(PGCaseWhen);
					w->expr = (PGExpr *) (yyvsp[(2) - (4)].node);
					w->result = (PGExpr *) (yyvsp[(4) - (4)].node);
					w->location = (yylsp[(1) - (4)]);
					(yyval.node) = (PGNode *)w;
				;}
    break;

  case 959:
#line 3051 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 960:
#line 3052 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 961:
#line 3055 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 962:
#line 3056 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 963:
#line 3060 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeColumnRef((yyvsp[(1) - (1)].str), NIL, (yylsp[(1) - (1)]), yyscanner);
				;}
    break;

  case 964:
#line 3064 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeColumnRef((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].list), (yylsp[(1) - (2)]), yyscanner);
				;}
    break;

  case 965:
#line 3071 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeString((yyvsp[(2) - (2)].str));
				;}
    break;

  case 966:
#line 3075 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = (PGNode *) makeNode(PGAStar);
				;}
    break;

  case 967:
#line 3079 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = false;
					ai->lidx = NULL;
					ai->uidx = (yyvsp[(2) - (3)].node);
					(yyval.node) = (PGNode *) ai;
				;}
    break;

  case 968:
#line 3087 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGAIndices *ai = makeNode(PGAIndices);
					ai->is_slice = true;
					ai->lidx = (yyvsp[(2) - (5)].node);
					ai->uidx = (yyvsp[(4) - (5)].node);
					(yyval.node) = (PGNode *) ai;
				;}
    break;

  case 969:
#line 3097 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
    break;

  case 970:
#line 3098 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.node) = NULL; ;}
    break;

  case 971:
#line 3102 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 972:
#line 3103 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 973:
#line 3107 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 974:
#line 3108 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
    break;

  case 977:
#line 3122 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
    break;

  case 978:
#line 3123 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 979:
#line 3127 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
    break;

  case 980:
#line 3128 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
    break;

  case 981:
#line 3132 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(3) - (3)].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (3)].node);
					(yyval.target)->location = (yylsp[(1) - (3)]);
				;}
    break;

  case 982:
#line 3148 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = (yyvsp[(2) - (2)].str);
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (2)].node);
					(yyval.target)->location = (yylsp[(1) - (2)]);
				;}
    break;

  case 983:
#line 3156 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)(yyvsp[(1) - (1)].node);
					(yyval.target)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 984:
#line 3164 "third_party/libpg_query/grammar/statements/select.y"
    {
					PGColumnRef *n = makeNode(PGColumnRef);
					n->fields = list_make1(makeNode(PGAStar));
					n->location = (yylsp[(1) - (1)]);

					(yyval.target) = makeNode(PGResTarget);
					(yyval.target)->name = NULL;
					(yyval.target)->indirection = NIL;
					(yyval.target)->val = (PGNode *)n;
					(yyval.target)->location = (yylsp[(1) - (1)]);
				;}
    break;

  case 985:
#line 3185 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].range)); ;}
    break;

  case 986:
#line 3186 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].range)); ;}
    break;

  case 987:
#line 3198 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.range) = makeRangeVar(NULL, (yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 988:
#line 3202 "third_party/libpg_query/grammar/statements/select.y"
    {
					check_qualified_name((yyvsp[(2) - (2)].list), yyscanner);
					(yyval.range) = makeRangeVar(NULL, NULL, (yylsp[(1) - (2)]));
					switch (list_length((yyvsp[(2) - (2)].list)))
					{
						case 1:
							(yyval.range)->catalogname = NULL;
							(yyval.range)->schemaname = (yyvsp[(1) - (2)].str);
							(yyval.range)->relname = strVal(linitial((yyvsp[(2) - (2)].list)));
							break;
						case 2:
							(yyval.range)->catalogname = (yyvsp[(1) - (2)].str);
							(yyval.range)->schemaname = strVal(linitial((yyvsp[(2) - (2)].list)));
							(yyval.range)->relname = strVal(lsecond((yyvsp[(2) - (2)].list)));
							break;
						default:
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("improper qualified name (too many dotted names): %s",
											NameListToString(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)))),
									 parser_errposition((yylsp[(1) - (2)]))));
							break;
					}
				;}
    break;

  case 989:
#line 3229 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 990:
#line 3231 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 991:
#line 3235 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 992:
#line 3237 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 993:
#line 3248 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 994:
#line 3250 "third_party/libpg_query/grammar/statements/select.y"
    {
						(yyval.list) = check_func_name(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)),
											 yyscanner);
					;}
    break;

  case 995:
#line 3261 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival), (yylsp[(1) - (1)]));
				;}
    break;

  case 996:
#line 3265 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 997:
#line 3269 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 998:
#line 3273 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 999:
#line 3277 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* This is a bit constant per SQL99:
					 * Without Feature F511, "BIT data type",
					 * a <general literal> shall not be a
					 * <bit string literal> or a <hex string literal>.
					 */
					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1000:
#line 3286 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* generic type 'literal' syntax */
					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (2)].list));
					t->location = (yylsp[(1) - (2)]);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), t);
				;}
    break;

  case 1001:
#line 3293 "third_party/libpg_query/grammar/statements/select.y"
    {
					/* generic syntax with a type modifier */
					PGTypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (6)].list));
					PGListCell *lc;

					/*
					 * We must use func_arg_list and opt_sort_clause in the
					 * production to avoid reduce/reduce conflicts, but we
					 * don't actually wish to allow PGNamedArgExpr in this
					 * context, nor ORDER BY.
					 */
					foreach(lc, (yyvsp[(3) - (6)].list))
					{
						PGNamedArgExpr *arg = (PGNamedArgExpr *) lfirst(lc);

						if (IsA(arg, PGNamedArgExpr))
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have parameter name"),
									 parser_errposition(arg->location)));
					}
					if ((yyvsp[(4) - (6)].list) != NIL)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("type modifier cannot have ORDER BY"),
									 parser_errposition((yylsp[(4) - (6)]))));

					t->typmods = (yyvsp[(3) - (6)].list);
					t->location = (yylsp[(1) - (6)]);
					(yyval.node) = makeStringConstCast((yyvsp[(6) - (6)].str), (yylsp[(6) - (6)]), t);
				;}
    break;

  case 1002:
#line 3325 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), (yyvsp[(1) - (2)].typnam));
				;}
    break;

  case 1003:
#line 3329 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(3) - (5)].node), (yylsp[(3) - (5)]), (yyvsp[(5) - (5)].list));
				;}
    break;

  case 1004:
#line 3333 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(2) - (3)].ival), (yylsp[(2) - (3)]), (yyvsp[(3) - (3)].list));
				;}
    break;

  case 1005:
#line 3337 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeIntervalNode((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), (yyvsp[(3) - (3)].list));
				;}
    break;

  case 1006:
#line 3341 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBoolAConst(true, (yylsp[(1) - (1)]));
				;}
    break;

  case 1007:
#line 3345 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeBoolAConst(false, (yylsp[(1) - (1)]));
				;}
    break;

  case 1008:
#line 3349 "third_party/libpg_query/grammar/statements/select.y"
    {
					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
				;}
    break;

  case 1009:
#line 3354 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 1010:
#line 3355 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1011:
#line 3371 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1012:
#line 3372 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1013:
#line 3373 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1014:
#line 3376 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1015:
#line 3377 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1016:
#line 3382 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1017:
#line 3383 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1018:
#line 3384 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1019:
#line 3387 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
    break;

  case 1020:
#line 3388 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)); ;}
    break;

  case 1021:
#line 3392 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = list_make1(makeString((yyvsp[(2) - (2)].str))); ;}
    break;

  case 1022:
#line 3394 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
    break;

  case 1023:
#line 3398 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 1024:
#line 3399 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1026:
#line 3410 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1027:
#line 3411 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1028:
#line 3412 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1029:
#line 3413 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1030:
#line 3414 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1031:
#line 3417 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1032:
#line 3418 "third_party/libpg_query/grammar/statements/select.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1033:
#line 8 "third_party/libpg_query/grammar/statements/prepare.y"
    {
					PGPrepareStmt *n = makeNode(PGPrepareStmt);
					n->name = (yyvsp[(2) - (5)].str);
					n->argtypes = (yyvsp[(3) - (5)].list);
					n->query = (yyvsp[(5) - (5)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1034:
#line 18 "third_party/libpg_query/grammar/statements/prepare.y"
    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
    break;

  case 1035:
#line 19 "third_party/libpg_query/grammar/statements/prepare.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1040:
#line 8 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					/* ...but not both */
					n->schemaname = (yyvsp[(3) - (4)].str);
					n->schemaElts = (yyvsp[(4) - (4)].list);
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1041:
#line 17 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					PGCreateSchemaStmt *n = makeNode(PGCreateSchemaStmt);
					/* ...but not here */
					n->schemaname = (yyvsp[(6) - (7)].str);
					if ((yyvsp[(7) - (7)].list) != NIL)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("CREATE SCHEMA IF NOT EXISTS cannot include schema elements"),
								 parser_errposition((yylsp[(7) - (7)]))));
					n->schemaElts = (yyvsp[(7) - (7)].list);
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1042:
#line 35 "third_party/libpg_query/grammar/statements/create_schema.y"
    {
					if ((yyloc) < 0)			/* see comments for YYLLOC_DEFAULT */
						(yyloc) = (yylsp[(2) - (2)]);
					(yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node));
				;}
    break;

  case 1043:
#line 41 "third_party/libpg_query/grammar/statements/create_schema.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1048:
#line 11 "third_party/libpg_query/grammar/statements/index.y"
    {
					PGIndexStmt *n = makeNode(PGIndexStmt);
					n->unique = (yyvsp[(2) - (13)].boolean);
					n->concurrent = (yyvsp[(4) - (13)].boolean);
					n->idxname = (yyvsp[(5) - (13)].str);
					n->relation = (yyvsp[(7) - (13)].range);
					n->accessMethod = (yyvsp[(8) - (13)].str);
					n->indexParams = (yyvsp[(10) - (13)].list);
					n->options = (yyvsp[(12) - (13)].list);
					n->whereClause = (yyvsp[(13) - (13)].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;
					n->transformed = false;
					n->if_not_exists = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1049:
#line 36 "third_party/libpg_query/grammar/statements/index.y"
    {
					PGIndexStmt *n = makeNode(PGIndexStmt);
					n->unique = (yyvsp[(2) - (16)].boolean);
					n->concurrent = (yyvsp[(4) - (16)].boolean);
					n->idxname = (yyvsp[(8) - (16)].str);
					n->relation = (yyvsp[(10) - (16)].range);
					n->accessMethod = (yyvsp[(11) - (16)].str);
					n->indexParams = (yyvsp[(13) - (16)].list);
					n->options = (yyvsp[(15) - (16)].list);
					n->whereClause = (yyvsp[(16) - (16)].node);
					n->excludeOpNames = NIL;
					n->idxcomment = NULL;
					n->indexOid = InvalidOid;
					n->oldNode = InvalidOid;
					n->primary = false;
					n->isconstraint = false;
					n->deferrable = false;
					n->initdeferred = false;
					n->transformed = false;
					n->if_not_exists = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1050:
#line 62 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1051:
#line 66 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
    break;

  case 1052:
#line 67 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (char*) DEFAULT_INDEX_TYPE; ;}
    break;

  case 1053:
#line 72 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1054:
#line 73 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1055:
#line 78 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1056:
#line 79 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.str) = NULL; ;}
    break;

  case 1057:
#line 83 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1058:
#line 84 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1059:
#line 89 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1060:
#line 90 "third_party/libpg_query/grammar/statements/index.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1061:
#line 8 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1062:
#line 17 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_TABLE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1063:
#line 26 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1064:
#line 35 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_SEQUENCE;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1065:
#line 44 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(3) - (6)].range);
					n->newschema = (yyvsp[(6) - (6)].str);
					n->missing_ok = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1066:
#line 53 "third_party/libpg_query/grammar/statements/alter_schema.y"
    {
					PGAlterObjectSchemaStmt *n = makeNode(PGAlterObjectSchemaStmt);
					n->objectType = PG_OBJECT_VIEW;
					n->relation = (yyvsp[(5) - (8)].range);
					n->newschema = (yyvsp[(8) - (8)].str);
					n->missing_ok = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1067:
#line 6 "third_party/libpg_query/grammar/statements/checkpoint.y"
    {
					PGCheckPointStmt *n = makeNode(PGCheckPointStmt);
					n->force = true;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1068:
#line 12 "third_party/libpg_query/grammar/statements/checkpoint.y"
    {
					PGCheckPointStmt *n = makeNode(PGCheckPointStmt);
					n->force = false;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1069:
#line 8 "third_party/libpg_query/grammar/statements/export.y"
    {
					PGExportStmt *n = makeNode(PGExportStmt);
					n->filename = (yyvsp[(3) - (4)].str);
					n->options = NIL;
					if ((yyvsp[(4) - (4)].list)) {
						n->options = list_concat(n->options, (yyvsp[(4) - (4)].list));
					}
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1070:
#line 21 "third_party/libpg_query/grammar/statements/export.y"
    {
					PGImportStmt *n = makeNode(PGImportStmt);
					n->filename = (yyvsp[(3) - (3)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1071:
#line 10 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(2) - (2)].node);
					n->options = NIL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1072:
#line 17 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(4) - (4)].node);
					n->options = list_make1(makeDefElem("analyze", NULL, (yylsp[(2) - (4)])));
					if ((yyvsp[(3) - (4)].boolean))
						n->options = lappend(n->options,
											 makeDefElem("verbose", NULL, (yylsp[(3) - (4)])));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1073:
#line 27 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(3) - (3)].node);
					n->options = list_make1(makeDefElem("verbose", NULL, (yylsp[(2) - (3)])));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1074:
#line 34 "third_party/libpg_query/grammar/statements/explain.y"
    {
					PGExplainStmt *n = makeNode(PGExplainStmt);
					n->query = (yyvsp[(5) - (5)].node);
					n->options = (yyvsp[(3) - (5)].list);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1075:
#line 44 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1076:
#line 45 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1077:
#line 50 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = (PGNode *) makeString((yyvsp[(1) - (1)].str)); ;}
    break;

  case 1078:
#line 51 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = (PGNode *) (yyvsp[(1) - (1)].value); ;}
    break;

  case 1079:
#line 52 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1085:
#line 65 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1086:
#line 66 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1087:
#line 67 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1088:
#line 68 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
    break;

  case 1089:
#line 73 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1090:
#line 74 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1091:
#line 80 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
				;}
    break;

  case 1092:
#line 84 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
				;}
    break;

  case 1093:
#line 91 "third_party/libpg_query/grammar/statements/explain.y"
    {;}
    break;

  case 1094:
#line 92 "third_party/libpg_query/grammar/statements/explain.y"
    {;}
    break;

  case 1095:
#line 97 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "true"; ;}
    break;

  case 1096:
#line 98 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "false"; ;}
    break;

  case 1097:
#line 99 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "on"; ;}
    break;

  case 1098:
#line 105 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1099:
#line 111 "third_party/libpg_query/grammar/statements/explain.y"
    {
					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)]));
				;}
    break;

  case 1100:
#line 118 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1101:
#line 119 "third_party/libpg_query/grammar/statements/explain.y"
    { (yyval.str) = (char*) "analyze"; ;}
    break;

  case 1102:
#line 11 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(2) - (2)].vsetstmt);
					n->is_local = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1103:
#line 17 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->is_local = true;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1104:
#line 23 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
					n->is_local = false;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1105:
#line 32 "third_party/libpg_query/grammar/statements/variable_set.y"
    {(yyval.vsetstmt) = (yyvsp[(1) - (1)].vsetstmt);;}
    break;

  case 1106:
#line 34 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_CURRENT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1107:
#line 42 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (char*) "timezone";
					if ((yyvsp[(3) - (3)].node) != NULL)
						n->args = list_make1((yyvsp[(3) - (3)].node));
					else
						n->kind = VAR_SET_DEFAULT;
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1108:
#line 53 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (char*) "search_path";
					n->args = list_make1(makeStringConst((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)])));
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1109:
#line 65 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[(1) - (3)].str);
					n->args = (yyvsp[(3) - (3)].list);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1110:
#line 73 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_VALUE;
					n->name = (yyvsp[(1) - (3)].str);
					n->args = (yyvsp[(3) - (3)].list);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1111:
#line 81 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1112:
#line 88 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_SET_DEFAULT;
					n->name = (yyvsp[(1) - (3)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1113:
#line 98 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)])); ;}
    break;

  case 1114:
#line 100 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
    break;

  case 1115:
#line 106 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1116:
#line 110 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
				;}
    break;

  case 1117:
#line 114 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGTypeName *t = (yyvsp[(1) - (3)].typnam);
					if ((yyvsp[(3) - (3)].list) != NIL)
					{
						PGAConst *n = (PGAConst *) linitial((yyvsp[(3) - (3)].list));
						if ((n->val.val.ival & ~(INTERVAL_MASK(HOUR) | INTERVAL_MASK(MINUTE))) != 0)
							ereport(ERROR,
									(errcode(PG_ERRCODE_SYNTAX_ERROR),
									 errmsg("time zone interval must be HOUR or HOUR TO MINUTE"),
									 parser_errposition((yylsp[(3) - (3)]))));
					}
					t->typmods = (yyvsp[(3) - (3)].list);
					(yyval.node) = makeStringConstCast((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), t);
				;}
    break;

  case 1118:
#line 129 "third_party/libpg_query/grammar/statements/variable_set.y"
    {
					PGTypeName *t = (yyvsp[(1) - (5)].typnam);
					t->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
											makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
					(yyval.node) = makeStringConstCast((yyvsp[(5) - (5)].str), (yylsp[(5) - (5)]), t);
				;}
    break;

  case 1119:
#line 135 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
    break;

  case 1120:
#line 136 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1121:
#line 137 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1122:
#line 141 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
    break;

  case 1123:
#line 142 "third_party/libpg_query/grammar/statements/variable_set.y"
    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
    break;

  case 1124:
#line 8 "third_party/libpg_query/grammar/statements/load.y"
    {
					PGLoadStmt *n = makeNode(PGLoadStmt);
					n->filename = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1125:
#line 16 "third_party/libpg_query/grammar/statements/load.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1126:
#line 9 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (4)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (4)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (4)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1127:
#line 23 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (5)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (5)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (5)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = (yyvsp[(5) - (5)].range);
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1128:
#line 37 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = (PGVacuumStmt *) (yyvsp[(5) - (5)].node);
					n->options |= PG_VACOPT_VACUUM;
					if ((yyvsp[(2) - (5)].boolean))
						n->options |= PG_VACOPT_FULL;
					if ((yyvsp[(3) - (5)].boolean))
						n->options |= PG_VACOPT_FREEZE;
					if ((yyvsp[(4) - (5)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1129:
#line 49 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM | (yyvsp[(3) - (4)].ival);
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1130:
#line 57 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_VACUUM | (yyvsp[(3) - (6)].ival);
					n->relation = (yyvsp[(5) - (6)].range);
					n->va_cols = (yyvsp[(6) - (6)].list);
					if (n->va_cols != NIL)	/* implies analyze */
						n->options |= PG_VACOPT_ANALYZE;
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1131:
#line 70 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_ANALYZE; ;}
    break;

  case 1132:
#line 71 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_VERBOSE; ;}
    break;

  case 1133:
#line 72 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_FREEZE; ;}
    break;

  case 1134:
#line 73 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = PG_VACOPT_FULL; ;}
    break;

  case 1135:
#line 75 "third_party/libpg_query/grammar/statements/vacuum.y"
    {
					if (strcmp((yyvsp[(1) - (1)].str), "disable_page_skipping") == 0)
						(yyval.ival) = PG_VACOPT_DISABLE_PAGE_SKIPPING;
					else
						ereport(ERROR,
								(errcode(PG_ERRCODE_SYNTAX_ERROR),
							 errmsg("unrecognized VACUUM option \"%s\"", (yyvsp[(1) - (1)].str)),
									 parser_errposition((yylsp[(1) - (1)]))));
				;}
    break;

  case 1136:
#line 87 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1137:
#line 88 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1138:
#line 93 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
    break;

  case 1139:
#line 94 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
    break;

  case 1140:
#line 98 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1141:
#line 99 "third_party/libpg_query/grammar/statements/vacuum.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1142:
#line 9 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGDeleteStmt *n = makeNode(PGDeleteStmt);
					n->relation = (yyvsp[(4) - (7)].range);
					n->usingClause = (yyvsp[(5) - (7)].list);
					n->whereClause = (yyvsp[(6) - (7)].node);
					n->returningList = (yyvsp[(7) - (7)].list);
					n->withClause = (yyvsp[(1) - (7)].with);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1143:
#line 22 "third_party/libpg_query/grammar/statements/delete.y"
    {
					(yyval.range) = (yyvsp[(1) - (1)].range);
				;}
    break;

  case 1144:
#line 26 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGAlias *alias = makeNode(PGAlias);
					alias->aliasname = (yyvsp[(2) - (2)].str);
					(yyvsp[(1) - (2)].range)->alias = alias;
					(yyval.range) = (yyvsp[(1) - (2)].range);
				;}
    break;

  case 1145:
#line 33 "third_party/libpg_query/grammar/statements/delete.y"
    {
					PGAlias *alias = makeNode(PGAlias);
					alias->aliasname = (yyvsp[(3) - (3)].str);
					(yyvsp[(1) - (3)].range)->alias = alias;
					(yyval.range) = (yyvsp[(1) - (3)].range);
				;}
    break;

  case 1146:
#line 43 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
    break;

  case 1147:
#line 44 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.node) = NULL; ;}
    break;

  case 1148:
#line 50 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
    break;

  case 1149:
#line 51 "third_party/libpg_query/grammar/statements/delete.y"
    { (yyval.list) = NIL; ;}
    break;

  case 1150:
#line 10 "third_party/libpg_query/grammar/statements/analyze.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_ANALYZE;
					if ((yyvsp[(2) - (2)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = NULL;
					n->va_cols = NIL;
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1151:
#line 20 "third_party/libpg_query/grammar/statements/analyze.y"
    {
					PGVacuumStmt *n = makeNode(PGVacuumStmt);
					n->options = PG_VACOPT_ANALYZE;
					if ((yyvsp[(2) - (4)].boolean))
						n->options |= PG_VACOPT_VERBOSE;
					n->relation = (yyvsp[(3) - (4)].range);
					n->va_cols = (yyvsp[(4) - (4)].list);
					(yyval.node) = (PGNode *)n;
				;}
    break;

  case 1152:
#line 2 "third_party/libpg_query/grammar/statements/variable_reset.y"
    { (yyval.node) = (PGNode *) (yyvsp[(2) - (2)].vsetstmt); ;}
    break;

  case 1153:
#line 8 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (yyvsp[(1) - (1)].str);
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1154:
#line 15 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET_ALL;
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1155:
#line 24 "third_party/libpg_query/grammar/statements/variable_reset.y"
    { (yyval.vsetstmt) = (yyvsp[(1) - (1)].vsetstmt); ;}
    break;

  case 1156:
#line 26 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (char*) "timezone";
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1157:
#line 33 "third_party/libpg_query/grammar/statements/variable_reset.y"
    {
					PGVariableSetStmt *n = makeNode(PGVariableSetStmt);
					n->kind = VAR_RESET;
					n->name = (char*) "transaction_isolation";
					(yyval.vsetstmt) = n;
				;}
    break;

  case 1158:
#line 3 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
				PGVariableShowSelectStmt *n = makeNode(PGVariableShowSelectStmt);
				n->stmt = (yyvsp[(2) - (2)].node);
				n->name = (char*) "select";
				(yyval.node) = (PGNode *) n;
			;}
    break;

  case 1159:
#line 11 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (yyvsp[(2) - (2)].str);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1160:
#line 17 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (char*) "timezone";
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1161:
#line 23 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (char*) "transaction_isolation";
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1162:
#line 29 "third_party/libpg_query/grammar/statements/variable_show.y"
    {
					PGVariableShowStmt *n = makeNode(PGVariableShowStmt);
					n->name = (char*) "all";
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1165:
#line 39 "third_party/libpg_query/grammar/statements/variable_show.y"
    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
    break;

  case 1166:
#line 41 "third_party/libpg_query/grammar/statements/variable_show.y"
    { (yyval.str) = psprintf("%s.%s", (yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str)); ;}
    break;

  case 1167:
#line 7 "third_party/libpg_query/grammar/statements/call.y"
    {
					PGCallStmt *n = makeNode(PGCallStmt);
					n->func = (yyvsp[(2) - (2)].node);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1168:
#line 10 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(4) - (9)].range);
					n->view->relpersistence = (yyvsp[(2) - (9)].ival);
					n->aliases = (yyvsp[(5) - (9)].list);
					n->query = (yyvsp[(8) - (9)].node);
					n->replace = false;
					n->options = (yyvsp[(6) - (9)].list);
					n->withCheckOption = (yyvsp[(9) - (9)].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1169:
#line 23 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(6) - (11)].range);
					n->view->relpersistence = (yyvsp[(4) - (11)].ival);
					n->aliases = (yyvsp[(7) - (11)].list);
					n->query = (yyvsp[(10) - (11)].node);
					n->replace = true;
					n->options = (yyvsp[(8) - (11)].list);
					n->withCheckOption = (yyvsp[(11) - (11)].viewcheckoption);
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1170:
#line 36 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(5) - (12)].range);
					n->view->relpersistence = (yyvsp[(2) - (12)].ival);
					n->aliases = (yyvsp[(7) - (12)].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[(11) - (12)].node));
					n->replace = false;
					n->options = (yyvsp[(9) - (12)].list);
					n->withCheckOption = (yyvsp[(12) - (12)].viewcheckoption);
					if (n->withCheckOption != PG_NO_CHECK_OPTION)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[(12) - (12)]))));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1171:
#line 54 "third_party/libpg_query/grammar/statements/view.y"
    {
					PGViewStmt *n = makeNode(PGViewStmt);
					n->view = (yyvsp[(7) - (14)].range);
					n->view->relpersistence = (yyvsp[(4) - (14)].ival);
					n->aliases = (yyvsp[(9) - (14)].list);
					n->query = makeRecursiveViewSelect(n->view->relname, n->aliases, (yyvsp[(13) - (14)].node));
					n->replace = true;
					n->options = (yyvsp[(11) - (14)].list);
					n->withCheckOption = (yyvsp[(14) - (14)].viewcheckoption);
					if (n->withCheckOption != PG_NO_CHECK_OPTION)
						ereport(ERROR,
								(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
								 errmsg("WITH CHECK OPTION not supported on recursive views"),
								 parser_errposition((yylsp[(14) - (14)]))));
					(yyval.node) = (PGNode *) n;
				;}
    break;

  case 1172:
#line 74 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; ;}
    break;

  case 1173:
#line 75 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = CASCADED_CHECK_OPTION; ;}
    break;

  case 1174:
#line 76 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = PG_LOCAL_CHECK_OPTION; ;}
    break;

  case 1175:
#line 77 "third_party/libpg_query/grammar/statements/view.y"
    { (yyval.viewcheckoption) = PG_NO_CHECK_OPTION; ;}
    break;

  case 1176:
#line 12 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(6) - (7)].node);
					ctas->into = (yyvsp[(4) - (7)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = false;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(4) - (7)].into)->rel->relpersistence = (yyvsp[(2) - (7)].ival);
					(yyvsp[(4) - (7)].into)->skipData = !((yyvsp[(7) - (7)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1177:
#line 25 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					PGCreateTableAsStmt *ctas = makeNode(PGCreateTableAsStmt);
					ctas->query = (yyvsp[(9) - (10)].node);
					ctas->into = (yyvsp[(7) - (10)].into);
					ctas->relkind = PG_OBJECT_TABLE;
					ctas->is_select_into = false;
					ctas->if_not_exists = true;
					/* cram additional flags into the PGIntoClause */
					(yyvsp[(7) - (10)].into)->rel->relpersistence = (yyvsp[(2) - (10)].ival);
					(yyvsp[(7) - (10)].into)->skipData = !((yyvsp[(10) - (10)].boolean));
					(yyval.node) = (PGNode *) ctas;
				;}
    break;

  case 1178:
#line 41 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1179:
#line 42 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = false; ;}
    break;

  case 1180:
#line 43 "third_party/libpg_query/grammar/statements/create_as.y"
    { (yyval.boolean) = true; ;}
    break;

  case 1181:
#line 49 "third_party/libpg_query/grammar/statements/create_as.y"
    {
					(yyval.into) = makeNode(PGIntoClause);
					(yyval.into)->rel = (yyvsp[(1) - (4)].range);
					(yyval.into)->colNames = (yyvsp[(2) - (4)].list);
					(yyval.into)->options = (yyvsp[(3) - (4)].list);
					(yyval.into)->onCommit = (yyvsp[(4) - (4)].oncommit);
					(yyval.into)->viewQuery = NULL;
					(yyval.into)->skipData = false;		/* might get changed later */
				;}
    break;


/* Line 1267 of yacc.c.  */
#line 22960 "third_party/libpg_query/grammar/grammar_out.cpp"
      default: break;
    }
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;
  *++yylsp = yyloc;

  /* Now `shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*------------------------------------.
| yyerrlab -- here on detecting error |
`------------------------------------*/
yyerrlab:
  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (&yylloc, yyscanner, YY_("syntax error"));
#else
      {
	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
	  {
	    YYSIZE_T yyalloc = 2 * yysize;
	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
	    if (yymsg != yymsgbuf)
	      YYSTACK_FREE (yymsg);
	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
	    if (yymsg)
	      yymsg_alloc = yyalloc;
	    else
	      {
		yymsg = yymsgbuf;
		yymsg_alloc = sizeof yymsgbuf;
	      }
	  }

	if (0 < yysize && yysize <= yymsg_alloc)
	  {
	    (void) yysyntax_error (yymsg, yystate, yychar);
	    yyerror (&yylloc, yyscanner, yymsg);
	  }
	else
	  {
	    yyerror (&yylloc, yyscanner, YY_("syntax error"));
	    if (yysize != 0)
	      goto yyexhaustedlab;
	  }
      }
#endif
    }

  yyerror_range[0] = yylloc;

  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse look-ahead token after an
	 error, discard it.  */

      if (yychar <= YYEOF)
	{
	  /* Return failure if at end of input.  */
	  if (yychar == YYEOF)
	    YYABORT;
	}
      else
	{
	  yydestruct ("Error: discarding",
		      yytoken, &yylval, &yylloc, yyscanner);
	  yychar = YYEMPTY;
	}
    }

  /* Else will try to reuse look-ahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  yyerror_range[0] = yylsp[1-yylen];
  /* Do not reclaim the symbols of the rule which action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;	/* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (yyn != YYPACT_NINF)
	{
	  yyn += YYTERROR;
	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
	    {
	      yyn = yytable[yyn];
	      if (0 < yyn)
		break;
	    }
	}

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
	YYABORT;

      yyerror_range[0] = *yylsp;
      yydestruct ("Error: popping",
		  yystos[yystate], yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  if (yyn == YYFINAL)
    YYACCEPT;

  *++yyvsp = yylval;

  yyerror_range[1] = yylloc;
  /* Using YYLLOC is tempting, but would change the location of
     the look-ahead.  YYLOC is available though.  */
  YYLLOC_DEFAULT (yyloc, (yyerror_range - 1), 2);
  *++yylsp = yyloc;

  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#ifndef yyoverflow
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (&yylloc, yyscanner, YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEOF && yychar != YYEMPTY)
     yydestruct ("Cleanup: discarding lookahead",
		 yytoken, &yylval, &yylloc, yyscanner);
  /* Do not reclaim the symbols of the rule which action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
		  yystos[*yyssp], yyvsp, yylsp, yyscanner);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  /* Make sure YYID is used.  */
  return YYID (yyresult);
}


#line 67 "third_party/libpg_query/grammar/statements/create_as.y"


#line 1 "third_party/libpg_query/grammar/grammar.cpp"
/*
 * The signature of this function is required by bison.  However, we
 * ignore the passed yylloc and instead use the last token position
 * available from the scanner.
 */
static void
base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner, const char *msg)
{
	parser_yyerror(msg);
}

static PGRawStmt *
makeRawStmt(PGNode *stmt, int stmt_location)
{
	PGRawStmt    *rs = makeNode(PGRawStmt);

	rs->stmt = stmt;
	rs->stmt_location = stmt_location;
	rs->stmt_len = 0;			/* might get changed later */
	return rs;
}

/* Adjust a PGRawStmt to reflect that it doesn't run to the end of the string */
static void
updateRawStmtEnd(PGRawStmt *rs, int end_location)
{
	/*
	 * If we already set the length, don't change it.  This is for situations
	 * like "select foo ;; select bar" where the same statement will be last
	 * in the string for more than one semicolon.
	 */
	if (rs->stmt_len > 0)
		return;

	/* OK, update length of PGRawStmt */
	rs->stmt_len = end_location - rs->stmt_location;
}

static PGNode *
makeColumnRef(char *colname, PGList *indirection,
			  int location, core_yyscan_t yyscanner)
{
	/*
	 * Generate a PGColumnRef node, with an PGAIndirection node added if there
	 * is any subscripting in the specified indirection list.  However,
	 * any field selection at the start of the indirection list must be
	 * transposed into the "fields" part of the PGColumnRef node.
	 */
	PGColumnRef  *c = makeNode(PGColumnRef);
	int		nfields = 0;
	PGListCell *l;

	c->location = location;
	foreach(l, indirection)
	{
		if (IsA(lfirst(l), PGAIndices))
		{
			PGAIndirection *i = makeNode(PGAIndirection);

			if (nfields == 0)
			{
				/* easy case - all indirection goes to PGAIndirection */
				c->fields = list_make1(makeString(colname));
				i->indirection = check_indirection(indirection, yyscanner);
			}
			else
			{
				/* got to split the list in two */
				i->indirection = check_indirection(list_copy_tail(indirection,
																  nfields),
												   yyscanner);
				indirection = list_truncate(indirection, nfields);
				c->fields = lcons(makeString(colname), indirection);
			}
			i->arg = (PGNode *) c;
			return (PGNode *) i;
		}
		else if (IsA(lfirst(l), PGAStar))
		{
			/* We only allow '*' at the end of a PGColumnRef */
			if (lnext(l) != NULL)
				parser_yyerror("improper use of \"*\"");
		}
		nfields++;
	}
	/* No subscripting, so all indirection gets added to field list */
	c->fields = lcons(makeString(colname), indirection);
	return (PGNode *) c;
}

static PGNode *
makeTypeCast(PGNode *arg, PGTypeName *tpname, int location)
{
	PGTypeCast *n = makeNode(PGTypeCast);
	n->arg = arg;
	n->typeName = tpname;
	n->location = location;
	return (PGNode *) n;
}

static PGNode *
makeStringConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGString;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeStringConstCast(char *str, int location, PGTypeName *tpname)
{
	PGNode *s = makeStringConst(str, location);

	return makeTypeCast(s, tpname, -1);
}

static PGNode *
makeIntervalNode(char *str, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGString;
	n->sval = str;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;

}

static PGNode *
makeIntervalNode(int val, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGInteger;
	n->ival = val;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;
}

static PGNode *
makeIntervalNode(PGNode *arg, int location, PGList *typmods) {
	PGIntervalConstant *n = makeNode(PGIntervalConstant);

	n->val_type = T_PGAExpr;
	n->eval = arg;
	n->location = location;
	n->typmods = typmods;

	return (PGNode *)n;
}

static PGNode *
makeSampleSize(PGValue *sample_size, bool is_percentage) {
	PGSampleSize *n = makeNode(PGSampleSize);

	n->sample_size = *sample_size;
	n->is_percentage = is_percentage;

	return (PGNode *)n;
}

static PGNode *
makeSampleOptions(PGNode *sample_size, char *method, int seed, int location) {
	PGSampleOptions *n = makeNode(PGSampleOptions);

	n->sample_size = sample_size;
	n->method = method;
	n->seed = seed;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeIntConst(int val, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGInteger;
	n->val.val.ival = val;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeFloatConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGFloat;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeBitStringConst(char *str, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGBitString;
	n->val.val.str = str;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeNullAConst(int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGNull;
	n->location = location;

	return (PGNode *)n;
}

static PGNode *
makeAConst(PGValue *v, int location)
{
	PGNode *n;

	switch (v->type)
	{
		case T_PGFloat:
			n = makeFloatConst(v->val.str, location);
			break;

		case T_PGInteger:
			n = makeIntConst(v->val.ival, location);
			break;

		case T_PGString:
		default:
			n = makeStringConst(v->val.str, location);
			break;
	}

	return n;
}

/* makeBoolAConst()
 * Create an PGAConst string node and put it inside a boolean cast.
 */
static PGNode *
makeBoolAConst(bool state, int location)
{
	PGAConst *n = makeNode(PGAConst);

	n->val.type = T_PGString;
	n->val.val.str = (state ? (char*) "t" : (char*) "f");
	n->location = location;

	return makeTypeCast((PGNode *)n, SystemTypeName("bool"), -1);
}

/* check_qualified_name --- check the result of qualified_name production
 *
 * It's easiest to let the grammar production for qualified_name allow
 * subscripts and '*', which we then must reject here.
 */
static void
check_qualified_name(PGList *names, core_yyscan_t yyscanner)
{
	PGListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), PGString))
			parser_yyerror("syntax error");
	}
}

/* check_func_name --- check the result of func_name production
 *
 * It's easiest to let the grammar production for func_name allow subscripts
 * and '*', which we then must reject here.
 */
static PGList *
check_func_name(PGList *names, core_yyscan_t yyscanner)
{
	PGListCell   *i;

	foreach(i, names)
	{
		if (!IsA(lfirst(i), PGString))
			parser_yyerror("syntax error");
	}
	return names;
}

/* check_indirection --- check the result of indirection production
 *
 * We only allow '*' at the end of the list, but it's hard to enforce that
 * in the grammar, so do it here.
 */
static PGList *
check_indirection(PGList *indirection, core_yyscan_t yyscanner)
{
	PGListCell *l;

	foreach(l, indirection)
	{
		if (IsA(lfirst(l), PGAStar))
		{
			if (lnext(l) != NULL)
				parser_yyerror("improper use of \"*\"");
		}
	}
	return indirection;
}

/* makeParamRef
 * Creates a new PGParamRef node
 */
static PGNode* makeParamRef(int number, int location)
{
	PGParamRef *p = makeNode(PGParamRef);
	p->number = number;
	p->location = location;
	return (PGNode *) p;
}

static PGNode *
makeParamRefCast(int number, int location, PGTypeName *tpname)
{
	PGNode *p = makeParamRef(number, location);
	return makeTypeCast(p, tpname, -1);
}

/* insertSelectOptions()
 * Insert ORDER BY, etc into an already-constructed SelectStmt.
 *
 * This routine is just to avoid duplicating code in PGSelectStmt productions.
 */
static void
insertSelectOptions(PGSelectStmt *stmt,
					PGList *sortClause, PGList *lockingClause,
					PGNode *limitOffset, PGNode *limitCount,
					PGWithClause *withClause,
					core_yyscan_t yyscanner)
{
	Assert(IsA(stmt, PGSelectStmt));

	/*
	 * Tests here are to reject constructs like
	 *	(SELECT foo ORDER BY bar) ORDER BY baz
	 */
	if (sortClause)
	{
		if (stmt->sortClause)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple ORDER BY clauses not allowed"),
					 parser_errposition(exprLocation((PGNode *) sortClause))));
		stmt->sortClause = sortClause;
	}
	/* We can handle multiple locking clauses, though */
	stmt->lockingClause = list_concat(stmt->lockingClause, lockingClause);
	if (limitOffset)
	{
		if (stmt->limitOffset)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple OFFSET clauses not allowed"),
					 parser_errposition(exprLocation(limitOffset))));
		stmt->limitOffset = limitOffset;
	}
	if (limitCount)
	{
		if (stmt->limitCount)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple LIMIT clauses not allowed"),
					 parser_errposition(exprLocation(limitCount))));
		stmt->limitCount = limitCount;
	}
	if (withClause)
	{
		if (stmt->withClause)
			ereport(ERROR,
					(errcode(PG_ERRCODE_SYNTAX_ERROR),
					 errmsg("multiple WITH clauses not allowed"),
					 parser_errposition(exprLocation((PGNode *) withClause))));
		stmt->withClause = withClause;
	}
}

static PGNode *
makeSetOp(PGSetOperation op, bool all, PGNode *larg, PGNode *rarg)
{
	PGSelectStmt *n = makeNode(PGSelectStmt);

	n->op = op;
	n->all = all;
	n->larg = (PGSelectStmt *) larg;
	n->rarg = (PGSelectStmt *) rarg;
	return (PGNode *) n;
}

/* SystemFuncName()
 * Build a properly-qualified reference to a built-in function.
 */
PGList *
SystemFuncName(const char *name)
{
	return list_make2(makeString(DEFAULT_SCHEMA), makeString(name));
}

/* SystemTypeName()
 * Build a properly-qualified reference to a built-in type.
 *
 * typmod is defaulted, but may be changed afterwards by caller.
 * Likewise for the location.
 */
PGTypeName *
SystemTypeName(const char *name)
{
	return makeTypeNameFromNameList(list_make2(makeString(DEFAULT_SCHEMA),
											   makeString(name)));
}

/* doNegate()
 * Handle negation of a numeric constant.
 *
 * Formerly, we did this here because the optimizer couldn't cope with
 * indexquals that looked like "var = -4" --- it wants "var = const"
 * and a unary minus operator applied to a constant didn't qualify.
 * As of Postgres 7.0, that problem doesn't exist anymore because there
 * is a constant-subexpression simplifier in the optimizer.  However,
 * there's still a good reason for doing this here, which is that we can
 * postpone committing to a particular internal representation for simple
 * negative constants.	It's better to leave "-123.456" in string form
 * until we know what the desired type is.
 */
static PGNode *
doNegate(PGNode *n, int location)
{
	if (IsA(n, PGAConst))
	{
		PGAConst *con = (PGAConst *)n;

		/* report the constant's location as that of the '-' sign */
		con->location = location;

		if (con->val.type == T_PGInteger)
		{
			con->val.val.ival = -con->val.val.ival;
			return n;
		}
		if (con->val.type == T_PGFloat)
		{
			doNegateFloat(&con->val);
			return n;
		}
	}

	return (PGNode *) makeSimpleAExpr(PG_AEXPR_OP, "-", NULL, n, location);
}

static void
doNegateFloat(PGValue *v)
{
	char   *oldval = v->val.str;

	Assert(IsA(v, PGFloat));
	if (*oldval == '+')
		oldval++;
	if (*oldval == '-')
		v->val.str = oldval+1;	/* just strip the '-' */
	else
		v->val.str = psprintf("-%s", oldval);
}

static PGNode *
makeAndExpr(PGNode *lexpr, PGNode *rexpr, int location)
{
	PGNode	   *lexp = lexpr;

	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
	while (IsA(lexp, PGAExpr) &&
		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
		lexp = ((PGAExpr *) lexp)->lexpr;
	/* Flatten "a AND b AND c ..." to a single PGBoolExpr on sight */
	if (IsA(lexp, PGBoolExpr))
	{
		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;

		if (blexpr->boolop == PG_AND_EXPR)
		{
			blexpr->args = lappend(blexpr->args, rexpr);
			return (PGNode *) blexpr;
		}
	}
	return (PGNode *) makeBoolExpr(PG_AND_EXPR, list_make2(lexpr, rexpr), location);
}

static PGNode *
makeOrExpr(PGNode *lexpr, PGNode *rexpr, int location)
{
	PGNode	   *lexp = lexpr;

	/* Look through AEXPR_PAREN nodes so they don't affect flattening */
	while (IsA(lexp, PGAExpr) &&
		   ((PGAExpr *) lexp)->kind == AEXPR_PAREN)
		lexp = ((PGAExpr *) lexp)->lexpr;
	/* Flatten "a OR b OR c ..." to a single PGBoolExpr on sight */
	if (IsA(lexp, PGBoolExpr))
	{
		PGBoolExpr *blexpr = (PGBoolExpr *) lexp;

		if (blexpr->boolop == PG_OR_EXPR)
		{
			blexpr->args = lappend(blexpr->args, rexpr);
			return (PGNode *) blexpr;
		}
	}
	return (PGNode *) makeBoolExpr(PG_OR_EXPR, list_make2(lexpr, rexpr), location);
}

static PGNode *
makeNotExpr(PGNode *expr, int location)
{
	return (PGNode *) makeBoolExpr(PG_NOT_EXPR, list_make1(expr), location);
}

static PGNode *
makeSQLValueFunction(PGSQLValueFunctionOp op, int32_t typmod, int location)
{
	PGSQLValueFunction *svf = makeNode(PGSQLValueFunction);

	svf->op = op;
	/* svf->type will be filled during parse analysis */
	svf->typmod = typmod;
	svf->location = location;
	return (PGNode *) svf;
}

/* Separate PGConstraint nodes from COLLATE clauses in a */
static void
SplitColQualList(PGList *qualList,
				 PGList **constraintList, PGCollateClause **collClause,
				 core_yyscan_t yyscanner)
{
	PGListCell   *cell;
	PGListCell   *prev;
	PGListCell   *next;

	*collClause = NULL;
	prev = NULL;
	for (cell = list_head(qualList); cell; cell = next)
	{
		PGNode   *n = (PGNode *) lfirst(cell);

		next = lnext(cell);
		if (IsA(n, PGConstraint))
		{
			/* keep it in list */
			prev = cell;
			continue;
		}
		if (IsA(n, PGCollateClause))
		{
			PGCollateClause *c = (PGCollateClause *) n;

			if (*collClause)
				ereport(ERROR,
						(errcode(PG_ERRCODE_SYNTAX_ERROR),
						 errmsg("multiple COLLATE clauses not allowed"),
						 parser_errposition(c->location)));
			*collClause = c;
		}
		else
			elog(ERROR, "unexpected node type %d", (int) n->type);
		/* remove non-Constraint nodes from qualList */
		qualList = list_delete_cell(qualList, cell, prev);
	}
	*constraintList = qualList;
}

/*
 * Process result of ConstraintAttributeSpec, and set appropriate bool flags
 * in the output command node.  Pass NULL for any flags the particular
 * command doesn't support.
 */
static void
processCASbits(int cas_bits, int location, const char *constrType,
			   bool *deferrable, bool *initdeferred, bool *not_valid,
			   bool *no_inherit, core_yyscan_t yyscanner)
{
	/* defaults */
	if (deferrable)
		*deferrable = false;
	if (initdeferred)
		*initdeferred = false;
	if (not_valid)
		*not_valid = false;

	if (cas_bits & (CAS_DEFERRABLE | CAS_INITIALLY_DEFERRED))
	{
		if (deferrable)
			*deferrable = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_INITIALLY_DEFERRED)
	{
		if (initdeferred)
			*initdeferred = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked DEFERRABLE",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_NOT_VALID)
	{
		if (not_valid)
			*not_valid = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NOT VALID",
							constrType),
					 parser_errposition(location)));
	}

	if (cas_bits & CAS_NO_INHERIT)
	{
		if (no_inherit)
			*no_inherit = true;
		else
			ereport(ERROR,
					(errcode(PG_ERRCODE_FEATURE_NOT_SUPPORTED),
					 /* translator: %s is CHECK, UNIQUE, or similar */
					 errmsg("%s constraints cannot be marked NO INHERIT",
							constrType),
					 parser_errposition(location)));
	}
}

/*----------
 * Recursive view transformation
 *
 * Convert
 *
 *     CREATE RECURSIVE VIEW relname (aliases) AS query
 *
 * to
 *
 *     CREATE VIEW relname (aliases) AS
 *         WITH RECURSIVE relname (aliases) AS (query)
 *         SELECT aliases FROM relname
 *
 * Actually, just the WITH ... part, which is then inserted into the original
 * view as the query.
 * ----------
 */
static PGNode *
makeRecursiveViewSelect(char *relname, PGList *aliases, PGNode *query)
{
	PGSelectStmt *s = makeNode(PGSelectStmt);
	PGWithClause *w = makeNode(PGWithClause);
	PGCommonTableExpr *cte = makeNode(PGCommonTableExpr);
	PGList	   *tl = NIL;
	PGListCell   *lc;

	/* create common table expression */
	cte->ctename = relname;
	cte->aliascolnames = aliases;
	cte->ctequery = query;
	cte->location = -1;

	/* create WITH clause and attach CTE */
	w->recursive = true;
	w->ctes = list_make1(cte);
	w->location = -1;

	/* create target list for the new SELECT from the alias list of the
	 * recursive view specification */
	foreach (lc, aliases)
	{
		PGResTarget *rt = makeNode(PGResTarget);

		rt->name = NULL;
		rt->indirection = NIL;
		rt->val = makeColumnRef(strVal(lfirst(lc)), NIL, -1, 0);
		rt->location = -1;

		tl = lappend(tl, rt);
	}

	/* create new SELECT combining WITH clause, target list, and fake FROM
	 * clause */
	s->withClause = w;
	s->targetList = tl;
	s->fromClause = list_make1(makeRangeVar(NULL, relname, -1));

	return (PGNode *) s;
}

/* parser_init()
 * Initialize to parse one query string
 */
void
parser_init(base_yy_extra_type *yyext)
{
	yyext->parsetree = NIL;		/* in case grammar forgets to set it */
}

#undef yyparse
#undef yylex
#undef yyerror
#undef yylval
#undef yychar
#undef yydebug
#undef yynerrs
#undef yylloc

} // namespace duckdb_libpgquery
